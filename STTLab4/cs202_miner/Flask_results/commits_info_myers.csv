old_file path,new_file path,commit SHA,parent commit SHA,commit message,diff_myers,old_file_MCC,new_file_MCC
flask/blueprints.py,flask/blueprints.py,b89bf9e6d7555743903ed3820156c3da7a571411,f7f1d9de3daa84ba968fd53553dc8fdb277219a3,'document Blueprint params',"'@@ -87,6 +87,24 @@ class Blueprint(_PackageBoundObject):\n     information.\n \n     .. versionadded:: 0.7\n+\n+    :param name: the name of the Blueprint\n+    :param import_name: the name of the Blueprint package, __name__ most of the time.\n+            The module folder will be the blueprint resource folder by default.\n+    :param static_folder: you can serve your Blueprint static files by setting `static_folder`\n+            to the folder with static files to serve at `static_url`.\n+            The path can be absolute or relative to the Blueprint resource folder\n+    :param static_url: the url to serve static files from. Defaults to ``static_folder``.\n+            If your app\'s static_url is the same, your Blueprint\'s files won\'t be accessible.\n+    :param template_folder: your blueprint can expose template from this folder by adding this path\n+            to the search path of templates. The path can be absolute or relative to\n+            the Blueprint resource folder.\n+    :param url_prefix: url to prefix all the Blueprint routes.\n+    :param subdomain: If set up, Blueprint routes will match on this subdomain.\n+    :param url_defaults: Blueprint routes will use these default values for\n+            view arguments.\n+    :param root_path: you can specify a different root_path than the module folder.\n+            to become your Blueprint resource folder.\n     """"""\n \n     warn_on_modifications = False\n'",1.4090909090909092,1.4090909090909092
flask/blueprints.py,flask/blueprints.py,571b9f54e745849087f43b63a9788ded9edd0eb7,b89bf9e6d7555743903ed3820156c3da7a571411,'reword Blueprint class docstring',"'@@ -80,31 +80,51 @@ class BlueprintSetupState(object):\n \n \n class Blueprint(_PackageBoundObject):\n-    """"""Represents a blueprint.  A blueprint is an object that records\n-    functions that will be called with the\n-    :class:`~flask.blueprints.BlueprintSetupState` later to register functions\n-    or other things on the main application.  See :ref:`blueprints` for more\n-    information.\n+    """"""Represents a blueprint, a collection of routes and other\n+    app-related functions that can be registered on a real application\n+    later.\n+\n+    A blueprint is an object that allows defining application functions\n+    without requiring an application object ahead of time. It uses the\n+    same decorators as :class:`~flask.Flask`, but defers the need for an\n+    application by recording them for later registration.\n+\n+    Decorating a function with a blueprint creates a deferred function\n+    that is called with :class:`~flask.blueprints.BlueprintSetupState`\n+    when the blueprint is registered on an application.\n+\n+    See :ref:`blueprints` for more information.\n \n     .. versionadded:: 0.7\n \n-    :param name: the name of the Blueprint\n-    :param import_name: the name of the Blueprint package, __name__ most of the time.\n-            The module folder will be the blueprint resource folder by default.\n-    :param static_folder: you can serve your Blueprint static files by setting `static_folder`\n-            to the folder with static files to serve at `static_url`.\n-            The path can be absolute or relative to the Blueprint resource folder\n-    :param static_url: the url to serve static files from. Defaults to ``static_folder``.\n-            If your app\'s static_url is the same, your Blueprint\'s files won\'t be accessible.\n-    :param template_folder: your blueprint can expose template from this folder by adding this path\n-            to the search path of templates. The path can be absolute or relative to\n-            the Blueprint resource folder.\n-    :param url_prefix: url to prefix all the Blueprint routes.\n-    :param subdomain: If set up, Blueprint routes will match on this subdomain.\n-    :param url_defaults: Blueprint routes will use these default values for\n-            view arguments.\n-    :param root_path: you can specify a different root_path than the module folder.\n-            to become your Blueprint resource folder.\n+    :param name: The name of the blueprint. Will be prepended to each\n+        endpoint name.\n+    :param import_name: The name of the blueprint package, usually\n+        ``__name__``. This helps locate the ``root_path`` for the\n+        blueprint.\n+    :param static_folder: A folder with static files that should be\n+        served by the blueprint\'s static route. The path is relative to\n+        the blueprint\'s root path. Blueprint static files are disabled\n+        by default.\n+    :param static_url_path: The url to serve static files from.\n+        Defaults to ``static_folder``. If the blueprint does not have\n+        a ``url_prefix``, the app\'s static route will take precedence,\n+        and the blueprint\'s static files won\'t be accessible.\n+    :param template_folder: A folder with templates that should be added\n+        to the app\'s template search path. The path is relative to the\n+        blueprint\'s root path. Blueprint templates are disabled by\n+        default. Blueprint templates have a lower precedence than those\n+        in the app\'s templates folder.\n+    :param url_prefix: A path to prepend to all of the blueprint\'s URLs,\n+        to make them distinct from the rest of the app\'s routes.\n+    :param subdomain: A subdomain that blueprint routes will match on by\n+        default.\n+    :param url_defaults: A dict of default values that blueprint routes\n+        will receive by default.\n+    :param root_path: By default, the blueprint will automatically this\n+        based on ``import_name``. In certain situations this automatic\n+        detection can fail, so the path can be specified manually\n+        instead.\n     """"""\n \n     warn_on_modifications = False\n'",1.4090909090909092,1.4090909090909092
flask/app.py,flask/app.py,d8d74b0cc89f7b9242cb5419ac1193463749f218,53f5fd234b8a7377c401ae88e2fb6c29812715d5,'document _get_exc_class_and_code params',"'@@ -1270,7 +1270,11 @@ class Flask(_PackageBoundObject):\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n-        """"""Ensure that we register only exceptions as handler keys""""""\n+        """"""Ensure that we register only exceptions as handler keys\n+\n+        :param exc_class_or_code: the class for the exception, or\n+                                  exception code as integer\n+        """"""\n         if isinstance(exc_class_or_code, integer_types):\n             exc_class = default_exceptions[exc_class_or_code]\n         else:\n'",2.623529411764706,2.623529411764706
flask/app.py,flask/app.py,6ec98f07499a6e6b61a43f265c818100aa41e205,d8d74b0cc89f7b9242cb5419ac1193463749f218,'reword _get_exc_class_and_code docstring',"'@@ -1270,10 +1270,12 @@ class Flask(_PackageBoundObject):\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n-        """"""Ensure that we register only exceptions as handler keys\n+        """"""Get the exception class being handled. For HTTP status codes\n+        or ``HTTPException`` subclasses, return both the exception and\n+        status code.\n \n-        :param exc_class_or_code: the class for the exception, or\n-                                  exception code as integer\n+        :param exc_class_or_code: Any exception class, or an HTTP status\n+            code as an integer.\n         """"""\n         if isinstance(exc_class_or_code, integer_types):\n             exc_class = default_exceptions[exc_class_or_code]\n'",2.623529411764706,2.623529411764706
src/flask/ctx.py,src/flask/ctx.py,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,29111a32594806cc217aba047de609dc913ef255,"'wait until app ctx is ready before matching url\n\n`RequestContext.match_request` is moved from `__init__` to `push`. This\ncauses matching to happen later, when the app context is available.\nThis enables URL converters that use things such as the database.'","'@@ -314,9 +314,6 @@ class RequestContext(object):\n         # functions.\n         self._after_request_functions = []\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n     @property\n     def g(self):\n         return _app_ctx_stack.top.g\n@@ -384,6 +381,9 @@ class RequestContext(object):\n \n         _request_ctx_stack.push(self)\n \n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n'",2.185185185185185,2.185185185185185
tests/test_basic.py,tests/test_basic.py,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,29111a32594806cc217aba047de609dc913ef255,"'wait until app ctx is ready before matching url\n\n`RequestContext.match_request` is moved from `__init__` to `push`. This\ncauses matching to happen later, when the app context is available.\nThis enables URL converters that use things such as the database.'","'@@ -1384,26 +1384,6 @@ def test_url_for_passes_special_values_to_build_error_handler(app):\n         flask.url_for(""/"")\n \n \n-def test_custom_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n-\n-    class ListConverter(BaseConverter):\n-        def to_python(self, value):\n-            return value.split("","")\n-\n-        def to_url(self, value):\n-            base_to_url = super(ListConverter, self).to_url\n-            return "","".join(base_to_url(x) for x in value)\n-\n-    app.url_map.converters[""list""] = ListConverter\n-\n-    @app.route(""/<list:args>"")\n-    def index(args):\n-        return ""|"".join(args)\n-\n-    assert client.get(""/1,2,3"").data == b""1|2|3""\n-\n-\n def test_static_files(app, client):\n     rv = client.get(""/static/index.html"")\n     assert rv.status_code == 200\n'",1.0766283524904214,1.0739299610894941
CHANGES.rst,CHANGES.rst,c65863912ba3c93d014378e21402c97babca272b,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,'move url matching after opening session',"""@@ -71,6 +71,10 @@ Unreleased\n -   The ``flask run`` command no longer fails if Python is not built\n     with SSL support. Using the ``--cert`` option will show an\n     appropriate error message. :issue:`3211`\n+-   URL matching now occurs after the request context is pushed, rather\n+    than when it's created. This allows custom URL converters to access\n+    the app and request contexts, such as to query a database for an id.\n+    :issue:`3088`\n \n .. _#2935: https://github.com/pallets/flask/issues/2935\n .. _#2957: https://github.com/pallets/flask/issues/2957\n""",0,0
src/flask/ctx.py,src/flask/ctx.py,c65863912ba3c93d014378e21402c97babca272b,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,'move url matching after opening session',"'@@ -347,8 +347,8 @@ class RequestContext(object):\n         of the request.\n         """"""\n         try:\n-            url_rule, self.request.view_args = self.url_adapter.match(return_rule=True)\n-            self.request.url_rule = url_rule\n+            result = self.url_adapter.match(return_rule=True)\n+            self.request.url_rule, self.request.view_args = result\n         except HTTPException as e:\n             self.request.routing_exception = e\n \n@@ -381,9 +381,6 @@ class RequestContext(object):\n \n         _request_ctx_stack.push(self)\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n@@ -395,6 +392,9 @@ class RequestContext(object):\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n     def pop(self, exc=_sentinel):\n         """"""Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n'",2.185185185185185,2.185185185185185
tests/test_converters.py,tests/test_converters.py,c65863912ba3c93d014378e21402c97babca272b,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,'move url matching after opening session',"'@@ -1,9 +1,10 @@\n-from flask.globals import _app_ctx_stack\n+from werkzeug.routing import BaseConverter\n \n+from flask import has_request_context\n+from flask import url_for\n \n-def test_custom_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n \n+def test_custom_converters(app, client):\n     class ListConverter(BaseConverter):\n         def to_python(self, value):\n             return value.split("","")\n@@ -20,19 +21,20 @@ def test_custom_converters(app, client):\n \n     assert client.get(""/1,2,3"").data == b""1|2|3""\n \n+    with app.test_request_context():\n+        assert url_for(""index"", args=[4, 5, 6]) == ""/4,5,6""\n \n-def test_model_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n \n-    class ModelConverterTester(BaseConverter):\n+def test_context_available(app, client):\n+    class ContextConverter(BaseConverter):\n         def to_python(self, value):\n-            assert _app_ctx_stack.top is not None\n+            assert has_request_context()\n             return value\n \n-    app.url_map.converters[""model""] = ModelConverterTester\n+    app.url_map.converters[""ctx""] = ContextConverter\n \n-    @app.route(""/<model:user_name>"")\n-    def index(user_name):\n-        return user_name, 200\n+    @app.route(""/<ctx:name>"")\n+    def index(name):\n+        return name\n \n-    client.get(""/admin"").data\n+    assert client.get(""/admin"").data == b""admin""\n'",1.1428571428571428,1.1428571428571428
tests/test_testing.py,tests/test_testing.py,c65863912ba3c93d014378e21402c97babca272b,1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b,'move url matching after opening session',"'@@ -154,6 +154,9 @@ def test_blueprint_with_subdomain():\n     ctx = app.test_request_context(""/"", subdomain=""xxx"")\n     assert ctx.request.url == ""http://xxx.example.com:1234/foo/""\n \n+    with ctx:\n+        assert ctx.request.blueprint == bp.name\n+\n     rv = client.get(""/"", subdomain=""xxx"")\n     assert rv.data == b""http://xxx.example.com:1234/foo/""\n \n'",1.06,1.06
CHANGES.rst,CHANGES.rst,9054f6d6397607647839286ce1db6cb2ef8457fe,2fa30f6a9e67e4515c85c6fe776783b058097498,'always pass InternalServerError instance to 500 handler',"'@@ -11,6 +11,17 @@ Unreleased\n \n -   Bump minimum Werkzeug version to >= 0.15.\n -   Drop support for Python 3.4.\n+-   Error handlers for ``InternalServerError`` or ``500`` will always be\n+    passed an instance of ``InternalServerError``. If they are invoked\n+    due to an unhandled exception, that original exception is now\n+    available as ``e.original_exception`` rather than being passed\n+    directly to the handler. The same is true if the handler is for the\n+    base ``HTTPException``.This makes error handler behavior more\n+    consistent. :pr:`3266`\n+\n+    -   :meth:`Flask.finalize_request` is called for all unhandled\n+        exceptions even if there is no ``500`` error handler.\n+\n -   :meth:`flask.RequestContext.copy` includes the current session\n     object in the request context copy. This prevents ``session``\n     pointing to an out-of-date object. (`#2935`_)\n'",0,0
src/flask/app.py,src/flask/app.py,9054f6d6397607647839286ce1db6cb2ef8457fe,2fa30f6a9e67e4515c85c6fe776783b058097498,'always pass InternalServerError instance to 500 handler',"'@@ -1811,11 +1811,36 @@ class Flask(_PackageBoundObject):\n         return handler(e)\n \n     def handle_exception(self, e):\n-        """"""Default exception handling that kicks in when an exception\n-        occurs that is not caught.  In debug mode the exception will\n-        be re-raised immediately, otherwise it is logged and the handler\n-        for a 500 internal server error is used.  If no such handler\n-        exists, a default 500 internal server error message is displayed.\n+        """"""Handle an exception that did not have an error handler\n+        associated with it, or that was raised from an error handler.\n+        This always causes a 500 ``InternalServerError``.\n+\n+        Always sends the :data:`got_request_exception` signal.\n+\n+        If :attr:`propagate_exceptions` is ``True``, such as in debug\n+        mode, the error will be re-raised so that the debugger can\n+        display it. Otherwise, the original exception is logged, and\n+        an :exc:`~werkzeug.exceptions.InternalServerError` is returned.\n+\n+        If an error handler is registered for ``InternalServerError`` or\n+        ``500``, it will be used. For consistency, the handler will\n+        always receive the ``InternalServerError``. The original\n+        unhandled exception is available as ``e.original_exception``.\n+\n+        .. note::\n+            Prior to Werkzeug 1.0.0, ``InternalServerError`` will not\n+            always have a ``original_exception`` attribute. Use\n+            ``getattr(e, ""original_exception"", None)`` to simulate the\n+            behavior for compatibility.\n+\n+        .. versionchanged:: 1.1.0\n+            Always passes the ``InternalServerError`` instance to the\n+            handler, setting ``original_exception`` to the unhandled\n+            error.\n+\n+        .. versionchanged:: 1.1.0\n+            ``after_request`` functions and other finalization is done\n+            even for the default 500 response when there is no handler.\n \n         .. versionadded:: 0.3\n         """"""\n@@ -1833,10 +1858,16 @@ class Flask(_PackageBoundObject):\n                 raise e\n \n         self.log_exception((exc_type, exc_value, tb))\n-        handler = self._find_error_handler(InternalServerError())\n-        if handler is None:\n-            return InternalServerError()\n-        return self.finalize_request(handler(e), from_error_handler=True)\n+        server_error = InternalServerError()\n+        # TODO: pass as param when Werkzeug>=1.0.0 is required\n+        # TODO: also remove note about this from docstring and docs\n+        server_error.original_exception = e\n+        handler = self._find_error_handler(server_error)\n+\n+        if handler is not None:\n+            server_error = handler(server_error)\n+\n+        return self.finalize_request(server_error, from_error_handler=True)\n \n     def log_exception(self, exc_info):\n         """"""Logs an exception.  This is called by :meth:`handle_exception`\n'",2.635294117647059,2.635294117647059
tests/test_user_error_handler.py,tests/test_user_error_handler.py,9054f6d6397607647839286ce1db6cb2ef8457fe,2fa30f6a9e67e4515c85c6fe776783b058097498,'always pass InternalServerError instance to 500 handler',"'@@ -6,6 +6,7 @@ tests.test_user_error_handler\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n """"""\n+import pytest\n from werkzeug.exceptions import Forbidden\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n@@ -25,7 +26,13 @@ def test_error_handler_no_match(app, client):\n \n     @app.errorhandler(500)\n     def handle_500(e):\n-        return type(e).__name__\n+        assert isinstance(e, InternalServerError)\n+        original = getattr(e, ""original_exception"", None)\n+\n+        if original is not None:\n+            return ""wrapped "" + type(original).__name__\n+\n+        return ""direct""\n \n     @app.route(""/custom"")\n     def custom_test():\n@@ -35,9 +42,14 @@ def test_error_handler_no_match(app, client):\n     def key_error():\n         raise KeyError()\n \n+    @app.route(""/abort"")\n+    def do_abort():\n+        flask.abort(500)\n+\n     app.testing = False\n     assert client.get(""/custom"").data == b""custom""\n-    assert client.get(""/keyerror"").data == b""KeyError""\n+    assert client.get(""/keyerror"").data == b""wrapped KeyError""\n+    assert client.get(""/abort"").data == b""direct""\n \n \n def test_error_handler_subclass(app):\n@@ -194,3 +206,84 @@ def test_default_error_handler():\n     assert c.get(""/forbidden"").data == b""forbidden""\n     # Don\'t handle RequestRedirect raised when adding slash.\n     assert c.get(""/slash"", follow_redirects=True).data == b""slash""\n+\n+\n+class TestGenericHandlers(object):\n+    """"""Test how very generic handlers are dispatched to.""""""\n+\n+    class Custom(Exception):\n+        pass\n+\n+    @pytest.fixture()\n+    def app(self, app):\n+        @app.route(""/custom"")\n+        def do_custom():\n+            raise self.Custom()\n+\n+        @app.route(""/error"")\n+        def do_error():\n+            raise KeyError()\n+\n+        @app.route(""/abort"")\n+        def do_abort():\n+            flask.abort(500)\n+\n+        @app.route(""/raise"")\n+        def do_raise():\n+            raise InternalServerError()\n+\n+        app.config[""PROPAGATE_EXCEPTIONS""] = False\n+        return app\n+\n+    def report_error(self, e):\n+        original = getattr(e, ""original_exception"", None)\n+\n+        if original is not None:\n+            return ""wrapped "" + type(original).__name__\n+\n+        return ""direct "" + type(e).__name__\n+\n+    @pytest.mark.parametrize(""to_handle"", (InternalServerError, 500))\n+    def test_handle_class_or_code(self, app, client, to_handle):\n+        """"""``InternalServerError`` and ``500`` are aliases, they should\n+        have the same behavior. Both should only receive\n+        ``InternalServerError``, which might wrap another error.\n+        """"""\n+\n+        @app.errorhandler(to_handle)\n+        def handle_500(e):\n+            assert isinstance(e, InternalServerError)\n+            return self.report_error(e)\n+\n+        assert client.get(""/custom"").data == b""wrapped Custom""\n+        assert client.get(""/error"").data == b""wrapped KeyError""\n+        assert client.get(""/abort"").data == b""direct InternalServerError""\n+        assert client.get(""/raise"").data == b""direct InternalServerError""\n+\n+    def test_handle_generic_http(self, app, client):\n+        """"""``HTTPException`` should only receive ``HTTPException``\n+        subclasses. It will receive ``404`` routing exceptions.\n+        """"""\n+\n+        @app.errorhandler(HTTPException)\n+        def handle_http(e):\n+            assert isinstance(e, HTTPException)\n+            return str(e.code)\n+\n+        assert client.get(""/error"").data == b""500""\n+        assert client.get(""/abort"").data == b""500""\n+        assert client.get(""/not-found"").data == b""404""\n+\n+    def test_handle_generic(self, app, client):\n+        """"""Generic ``Exception`` will handle all exceptions directly,\n+        including ``HTTPExceptions``.\n+        """"""\n+\n+        @app.errorhandler(Exception)\n+        def handle_exception(e):\n+            return self.report_error(e)\n+\n+        assert client.get(""/custom"").data == b""direct Custom""\n+        assert client.get(""/error"").data == b""direct KeyError""\n+        assert client.get(""/abort"").data == b""direct InternalServerError""\n+        assert client.get(""/not-found"").data == b""direct NotFound""\n'",1.0,1.0454545454545454
CHANGES.rst,CHANGES.rst,54519ef028660da63c3b2bab51c1f18e7b7c9fa2,9054f6d6397607647839286ce1db6cb2ef8457fe,'document behavior of very generic error handlers',"'@@ -16,7 +16,7 @@ Unreleased\n     due to an unhandled exception, that original exception is now\n     available as ``e.original_exception`` rather than being passed\n     directly to the handler. The same is true if the handler is for the\n-    base ``HTTPException``.This makes error handler behavior more\n+    base ``HTTPException``. This makes error handler behavior more\n     consistent. :pr:`3266`\n \n     -   :meth:`Flask.finalize_request` is called for all unhandled\n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,54519ef028660da63c3b2bab51c1f18e7b7c9fa2,9054f6d6397607647839286ce1db6cb2ef8457fe,'document behavior of very generic error handlers',"'@@ -139,10 +139,94 @@ raises the exception. However, the blueprint cannot handle 404 routing errors\n because the 404 occurs at the routing level before the blueprint can be\n determined.\n \n-.. versionchanged:: 0.11\n \n-   Handlers are prioritized by specificity of the exception classes they are\n-   registered for instead of the order they are registered in.\n+Generic Exception Handlers\n+``````````````````````````\n+\n+It is possible to register error handlers for very generic base classes\n+such as ``HTTPException`` or even ``Exception``. However, be aware that\n+these will catch more than you might expect.\n+\n+An error handler for ``HTTPException`` might be useful for turning\n+the default HTML errors pages into JSON, for example. However, this\n+handler will trigger for things you don\'t cause directly, such as 404\n+and 405 errors during routing. Be sure to craft your handler carefully\n+so you don\'t lose information about the HTTP error.\n+\n+.. code-block:: python\n+\n+    from flask import json\n+    from werkzeug.exceptions import HTTPException\n+\n+    @app.errorhandler(HTTPException)\n+    def handle_exception(e):\n+        """"""Return JSON instead of HTML for HTTP errors.""""""\n+        # start with the correct headers and status code from the error\n+        response = e.get_response()\n+        # replace the body with JSON\n+        response.data = json.dumps({\n+            ""code"": e.code,\n+            ""name"": e.name,\n+            ""description"": e.description,\n+        })\n+        response.content_type = ""application/json""\n+        return response\n+\n+\n+An error handler for ``Exception`` might seem useful for changing how\n+all errors, even unhandled ones, are presented to the user. However,\n+this is similar to doing ``except Exception:`` in Python, it will\n+capture *all* otherwise unhandled errors, including all HTTP status\n+codes. In most cases it will be safer to register handlers for more\n+specific exceptions. Since ``HTTPException`` instances are valid WSGI\n+responses, you could also pass them through directly.\n+\n+.. code-block:: python\n+\n+    from werkzeug.exceptions import HTTPException\n+\n+    @app.errorhandler(Exception)\n+    def handle_exception(e):\n+        # pass through HTTP errors\n+        if isinstance(e, HTTPException):\n+            return e\n+\n+        # now you\'re handling non-HTTP exceptions only\n+        return render_template(""500_generic.html"", e=e), 500\n+\n+Error handlers still respect the exception class hierarchy. If you\n+register handlers for both ``HTTPException`` and ``Exception``, the\n+``Exception`` handler will not handle ``HTTPException`` subclasses\n+because it the ``HTTPException`` handler is more specific.\n+\n+Unhandled Exceptions\n+````````````````````\n+\n+When there is no error handler registered for an exception, a 500\n+Internal Server Error will be returned instead. See\n+:meth:`flask.Flask.handle_exception` for information about this\n+behavior.\n+\n+If there is an error handler registered for ``InternalServerError``,\n+this will be invoked. As of Flask 1.1.0, this error handler will always\n+be passed an instance of ``InternalServerError``, not the original\n+unhandled error. The original error is available as ``e.original_error``.\n+Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n+errors, use ``getattr`` to get access it for compatibility.\n+\n+.. code-block:: python\n+\n+    @app.errorhandler(InternalServerError)\n+    def handle_500(e):\n+        original = getattr(e, ""original_exception"", None)\n+\n+        if original is None:\n+            # direct 500 error, such as abort(500)\n+            return render_template(""500.html""), 500\n+\n+        # wrapped unhandled error\n+        return render_template(""500_unhandled.html"", e=original), 500\n+\n \n Logging\n -------\n'",1.0,1.5
src/flask/app.py,src/flask/app.py,54519ef028660da63c3b2bab51c1f18e7b7c9fa2,9054f6d6397607647839286ce1db6cb2ef8457fe,'document behavior of very generic error handlers',"'@@ -1829,7 +1829,7 @@ class Flask(_PackageBoundObject):\n \n         .. note::\n             Prior to Werkzeug 1.0.0, ``InternalServerError`` will not\n-            always have a ``original_exception`` attribute. Use\n+            always have an ``original_exception`` attribute. Use\n             ``getattr(e, ""original_exception"", None)`` to simulate the\n             behavior for compatibility.\n \n'",2.635294117647059,2.635294117647059
docs/cli.rst,docs/cli.rst,146df0f9e8ea8a55bb66b7cc52d186e288580b92,d5fea5fa1da0c56860e7023e4af3ba2eb0097dd7,'use dashes for command names',"'@@ -191,10 +191,10 @@ environment variables. The variables use the pattern\n ``FLASK_COMMAND_OPTION``. For example, to set the port for the run\n command, instead of ``flask run --port 8000``:\n \n-.. code-block:: none\n+.. code-block:: bash\n \n-    export FLASK_RUN_PORT=8000\n-    flask run\n+    $ export FLASK_RUN_PORT=8000\n+    $ flask run\n      * Running on http://127.0.0.1:8000/\n \n These can be added to the ``.flaskenv`` file just like ``FLASK_APP`` to\n@@ -207,9 +207,9 @@ Disable dotenv\n The ``flask`` command will show a message if it detects dotenv files but\n python-dotenv is not installed.\n \n-.. code-block:: none\n+.. code-block:: bash\n \n-    flask run\n+    $ flask run\n      * Tip: There are .env files present. Do ""pip install python-dotenv"" to use them.\n \n You can tell Flask not to load dotenv files even when python-dotenv is\n@@ -219,10 +219,10 @@ a project runner that loads them already. Keep in mind that the\n environment variables must be set before the app loads or it won\'t\n configure as expected.\n \n-.. code-block:: none\n+.. code-block:: bash\n \n-    export FLASK_SKIP_DOTENV=1\n-    flask run\n+    $ export FLASK_SKIP_DOTENV=1\n+    $ flask run\n \n \n Environment Variables From virtualenv\n@@ -234,11 +234,11 @@ script. Activating the virtualenv will set the variables.\n \n Unix Bash, :file:`venv/bin/activate`::\n \n-    export FLASK_APP=hello\n+    $ export FLASK_APP=hello\n \n Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::\n \n-    set FLASK_APP=hello\n+    > set FLASK_APP=hello\n \n It is preferred to use dotenv support over this, since :file:`.flaskenv` can be\n committed to the repository so that it works automatically wherever the project\n@@ -251,7 +251,7 @@ Custom Commands\n The ``flask`` command is implemented using `Click`_. See that project\'s\n documentation for full information about writing commands.\n \n-This example adds the command ``create_user`` that takes the argument\n+This example adds the command ``create-user`` that takes the argument\n ``name``. ::\n \n     import click\n@@ -259,14 +259,14 @@ This example adds the command ``create_user`` that takes the argument\n \n     app = Flask(__name__)\n \n-    @app.cli.command()\n-    @click.argument(\'name\')\n+    @app.cli.command(""create-user"")\n+    @click.argument(""name"")\n     def create_user(name):\n         ...\n \n ::\n \n-    flask create_user admin\n+    $ flask create-user admin\n \n This example adds the same command, but as ``user create``, a command in a\n group. This is useful if you want to organize multiple related commands. ::\n@@ -287,7 +287,7 @@ group. This is useful if you want to organize multiple related commands. ::\n \n ::\n \n-    flask user create demo\n+    $ flask user create demo\n \n See :ref:`testing-cli` for an overview of how to test your custom\n commands.\n'",1.0,1.0
MANIFEST.in,MANIFEST.in,24498afed5075583ecd5667b105b4a315a25051e,e666f7a69c737fef8236237671be4da5910e9113,'standardize project metadata',"'@@ -1,11 +1,8 @@\n-include Makefile CHANGES.rst CONTRIBUTING.rst LICENSE AUTHORS tox.ini\n-\n+include CHANGES.rst\n+include CONTRIBUTING.rst\n+include tox.ini\n graft artwork\n-graft tests\n-graft examples\n graft docs\n-\n-global-exclude *.py[co]\n-\n prune docs/_build\n-prune docs/_themes\n+graft examples\n+graft tests\n'",0,0
CHANGES.rst,CHANGES.rst,7d779580004c0aa481648f1165e87e6ce4bac087,24498afed5075583ecd5667b105b4a315a25051e,"'use sphinx-issues, rewrap changelog'","'@@ -1,9 +1,5 @@\n .. currentmodule:: flask\n \n-Flask Changelog\n-===============\n-\n-\n Version 1.0.3\n -------------\n \n@@ -11,27 +7,20 @@ Released 2019-05-17\n \n -   :func:`send_file` encodes filenames as ASCII instead of Latin-1\n     (ISO-8859-1). This fixes compatibility with Gunicorn, which is\n-    stricter about header encodings than PEP 3333. (`#2766`_)\n+    stricter about header encodings than PEP 3333. :issue:`2766`\n -   Allow custom CLIs using ``FlaskGroup`` to set the debug flag without\n     it always being overwritten based on environment variables.\n-    (`#2765`_)\n+    :pr:`2765`\n -   ``flask --version`` outputs Werkzeug\'s version and simplifies the\n-    Python version. (`#2825`_)\n+    Python version. :pr:`2825`\n -   :func:`send_file` handles an ``attachment_filename`` that is a\n-    native Python 2 string (bytes) with UTF-8 coded bytes. (`#2933`_)\n+    native Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`\n -   A catch-all error handler registered for ``HTTPException`` will not\n     handle ``RoutingExcpetion``, which is used internally during\n     routing. This fixes the unexpected behavior that had been introduced\n-    in 1.0. (`#2986`_)\n+    in 1.0. :pr:`2986`\n -   Passing the ``json`` argument to ``app.test_client`` does not\n-    push/pop an extra app context. (`#2900`_)\n-\n-.. _#2766: https://github.com/pallets/flask/issues/2766\n-.. _#2765: https://github.com/pallets/flask/pull/2765\n-.. _#2825: https://github.com/pallets/flask/pull/2825\n-.. _#2900: https://github.com/pallets/flask/issues/2900\n-.. _#2933: https://github.com/pallets/flask/issues/2933\n-.. _#2986: https://github.com/pallets/flask/pull/2986\n+    push/pop an extra app context. :issue:`2900`\n \n \n Version 1.0.2\n@@ -40,12 +29,9 @@ Version 1.0.2\n Released 2018-05-02\n \n -   Fix more backwards compatibility issues with merging slashes between\n-    a blueprint prefix and route. (`#2748`_)\n+    a blueprint prefix and route. :pr:`2748`\n -   Fix error with ``flask routes`` command when there are no routes.\n-    (`#2751`_)\n-\n-.. _#2748: https://github.com/pallets/flask/pull/2748\n-.. _#2751: https://github.com/pallets/flask/issues/2751\n+    :issue:`2751`\n \n \n Version 1.0.1\n@@ -54,24 +40,17 @@ Version 1.0.1\n Released 2018-04-29\n \n -   Fix registering partials (with no ``__name__``) as view functions.\n-    (`#2730`_)\n+    :pr:`2730`\n -   Don\'t treat lists returned from view functions the same as tuples.\n-    Only tuples are interpreted as response data. (`#2736`_)\n+    Only tuples are interpreted as response data. :issue:`2736`\n -   Extra slashes between a blueprint\'s ``url_prefix`` and a route URL\n     are merged. This fixes some backwards compatibility issues with the\n-    change in 1.0. (`#2731`_, `#2742`_)\n+    change in 1.0. :issue:`2731`, :issue:`2742`\n -   Only trap ``BadRequestKeyError`` errors in debug mode, not all\n     ``BadRequest`` errors. This allows ``abort(400)`` to continue\n-    working as expected. (`#2735`_)\n+    working as expected. :issue:`2735`\n -   The ``FLASK_SKIP_DOTENV`` environment variable can be set to ``1``\n-    to skip automatically loading dotenv files. (`#2722`_)\n-\n-.. _#2722: https://github.com/pallets/flask/issues/2722\n-.. _#2730: https://github.com/pallets/flask/pull/2730\n-.. _#2731: https://github.com/pallets/flask/issues/2731\n-.. _#2735: https://github.com/pallets/flask/issues/2735\n-.. _#2736: https://github.com/pallets/flask/issues/2736\n-.. _#2742: https://github.com/pallets/flask/issues/2742\n+    to skip automatically loading dotenv files. :issue:`2722`\n \n \n Version 1.0\n@@ -79,97 +58,97 @@ Version 1.0\n \n Released 2018-04-26\n \n--   **Python 2.6 and 3.3 are no longer supported.** (`pallets/meta#24`_)\n+-   Python 2.6 and 3.3 are no longer supported.\n -   Bump minimum dependency versions to the latest stable versions:\n     Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.\n-    (`#2586`_)\n+    :issue:`2586`\n -   Skip :meth:`app.run <Flask.run>` when a Flask application is run\n     from the command line. This avoids some behavior that was confusing\n     to debug.\n -   Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to\n     ``False``. :func:`~json.jsonify` returns a compact format by\n-    default, and an indented format in debug mode. (`#2193`_)\n+    default, and an indented format in debug mode. :pr:`2193`\n -   :meth:`Flask.__init__ <Flask>` accepts the ``host_matching``\n-    argument and sets it on :attr:`~Flask.url_map`. (`#1559`_)\n+    argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`\n -   :meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument\n     and passes it as the ``host`` argument when defining the static\n-    route. (`#1559`_)\n+    route. :issue:`1559`\n -   :func:`send_file` supports Unicode in ``attachment_filename``.\n-    (`#2223`_)\n+    :pr:`2223`\n -   Pass ``_scheme`` argument from :func:`url_for` to\n-    :meth:`~Flask.handle_url_build_error`. (`#2017`_)\n+    :meth:`~Flask.handle_url_build_error`. :pr:`2017`\n -   :meth:`~Flask.add_url_rule` accepts the\n     ``provide_automatic_options`` argument to disable adding the\n-    ``OPTIONS`` method. (`#1489`_)\n+    ``OPTIONS`` method. :pr:`1489`\n -   :class:`~views.MethodView` subclasses inherit method handlers from\n-    base classes. (`#1936`_)\n+    base classes. :pr:`1936`\n -   Errors caused while opening the session at the beginning of the\n-    request are handled by the app\'s error handlers. (`#2254`_)\n+    request are handled by the app\'s error handlers. :pr:`2254`\n -   Blueprints gained :attr:`~Blueprint.json_encoder` and\n     :attr:`~Blueprint.json_decoder` attributes to override the app\'s\n-    encoder and decoder. (`#1898`_)\n+    encoder and decoder. :pr:`1898`\n -   :meth:`Flask.make_response` raises ``TypeError`` instead of\n     ``ValueError`` for bad response types. The error messages have been\n-    improved to describe why the type is invalid. (`#2256`_)\n+    improved to describe why the type is invalid. :pr:`2256`\n -   Add ``routes`` CLI command to output routes registered on the\n-    application. (`#2259`_)\n+    application. :pr:`2259`\n -   Show warning when session cookie domain is a bare hostname or an IP\n     address, as these may not behave properly in some browsers, such as\n-    Chrome. (`#2282`_)\n--   Allow IP address as exact session cookie domain. (`#2282`_)\n+    Chrome. :pr:`2282`\n+-   Allow IP address as exact session cookie domain. :pr:`2282`\n -   ``SESSION_COOKIE_DOMAIN`` is set if it is detected through\n-    ``SERVER_NAME``. (`#2282`_)\n+    ``SERVER_NAME``. :pr:`2282`\n -   Auto-detect zero-argument app factory called ``create_app`` or\n-    ``make_app`` from ``FLASK_APP``. (`#2297`_)\n+    ``make_app`` from ``FLASK_APP``. :pr:`2297`\n -   Factory functions are not required to take a ``script_info``\n     parameter to work with the ``flask`` command. If they take a single\n     parameter or a parameter named ``script_info``, the\n-    :class:`~cli.ScriptInfo` object will be passed. (`#2319`_)\n+    :class:`~cli.ScriptInfo` object will be passed. :pr:`2319`\n -   ``FLASK_APP`` can be set to an app factory, with arguments if\n     needed, for example ``FLASK_APP=myproject.app:create_app(\'dev\')``.\n-    (`#2326`_)\n+    :pr:`2326`\n -   ``FLASK_APP`` can point to local packages that are not installed in\n     editable mode, although ``pip install -e`` is still preferred.\n-    (`#2414`_)\n+    :pr:`2414`\n -   The :class:`~views.View` class attribute\n     :attr:`~views.View.provide_automatic_options` is set in\n     :meth:`~views.View.as_view`, to be detected by\n-    :meth:`~Flask.add_url_rule`. (`#2316`_)\n+    :meth:`~Flask.add_url_rule`. :pr:`2316`\n -   Error handling will try handlers registered for ``blueprint, code``,\n     ``app, code``, ``blueprint, exception``, ``app, exception``.\n-    (`#2314`_)\n+    :pr:`2314`\n -   ``Cookie`` is added to the response\'s ``Vary`` header if the session\n-    is accessed at all during the request (and not deleted). (`#2288`_)\n+    is accessed at all during the request (and not deleted). :pr:`2288`\n -   :meth:`~Flask.test_request_context` accepts ``subdomain`` and\n     ``url_scheme`` arguments for use when building the base URL.\n-    (`#1621`_)\n+    :pr:`1621`\n -   Set :data:`APPLICATION_ROOT` to ``\'/\'`` by default. This was already\n     the implicit default when it was set to ``None``.\n -   :data:`TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode.\n     ``BadRequestKeyError`` has a message with the bad key in debug mode\n-    instead of the generic bad request message. (`#2348`_)\n+    instead of the generic bad request message. :pr:`2348`\n -   Allow registering new tags with\n     :class:`~json.tag.TaggedJSONSerializer` to support storing other\n-    types in the session cookie. (`#2352`_)\n+    types in the session cookie. :pr:`2352`\n -   Only open the session if the request has not been pushed onto the\n     context stack yet. This allows :func:`~stream_with_context`\n     generators to access the same session that the containing view uses.\n-    (`#2354`_)\n+    :pr:`2354`\n -   Add ``json`` keyword argument for the test client request methods.\n     This will dump the given object as JSON and set the appropriate\n-    content type. (`#2358`_)\n+    content type. :pr:`2358`\n -   Extract JSON handling to a mixin applied to both the\n     :class:`Request` and :class:`Response` classes. This adds the\n     :meth:`~Response.is_json` and :meth:`~Response.get_json` methods to\n-    the response to make testing JSON response much easier. (`#2358`_)\n+    the response to make testing JSON response much easier. :pr:`2358`\n -   Removed error handler caching because it caused unexpected results\n     for some exception inheritance hierarchies. Register handlers\n     explicitly for each exception if you want to avoid traversing the\n-    MRO. (`#2362`_)\n--   Fix incorrect JSON encoding of aware, non-UTC datetimes. (`#2374`_)\n+    MRO. :pr:`2362`\n+-   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`\n -   Template auto reloading will honor debug mode even even if\n-    :attr:`~Flask.jinja_env` was already accessed. (`#2373`_)\n--   The following old deprecated code was removed. (`#2385`_)\n+    :attr:`~Flask.jinja_env` was already accessed. :pr:`2373`\n+-   The following old deprecated code was removed. :issue:`2385`\n \n     -   ``flask.ext`` - import extensions directly by their name instead\n         of through the ``flask.ext`` namespace. For example,\n@@ -187,748 +166,720 @@ Released 2018-04-26\n     -   ``Request.module`` - use :attr:`Request.blueprint` instead.\n \n -   The :attr:`Request.json` property is no longer deprecated.\n-    (`#1421`_)\n--   Support passing a :class:`~werkzeug.test.EnvironBuilder` or\n-    ``dict`` to :meth:`test_client.open <werkzeug.test.Client.open>`.\n-    (`#2412`_)\n+    :issue:`1421`\n+-   Support passing a :class:`~werkzeug.test.EnvironBuilder` or ``dict``\n+    to :meth:`test_client.open <werkzeug.test.Client.open>`. :pr:`2412`\n -   The ``flask`` command and :meth:`Flask.run` will load environment\n     variables from ``.env`` and ``.flaskenv`` files if python-dotenv is\n-    installed. (`#2416`_)\n+    installed. :pr:`2416`\n -   When passing a full URL to the test client, the scheme in the URL is\n-    used instead of :data:`PREFERRED_URL_SCHEME`. (`#2430`_)\n+    used instead of :data:`PREFERRED_URL_SCHEME`. :pr:`2430`\n -   :attr:`Flask.logger` has been simplified. ``LOGGER_NAME`` and\n     ``LOGGER_HANDLER_POLICY`` config was removed. The logger is always\n     named ``flask.app``. The level is only set on first access, it\n     doesn\'t check :attr:`Flask.debug` each time. Only one format is\n     used, not different ones depending on :attr:`Flask.debug`. No\n     handlers are removed, and a handler is only added if no handlers are\n-    already configured. (`#2436`_)\n--   Blueprint view function names may not contain dots. (`#2450`_)\n+    already configured. :pr:`2436`\n+-   Blueprint view function names may not contain dots. :pr:`2450`\n -   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n-    cases. (`#2526`_)\n--   The development server uses threads by default. (`#2529`_)\n+    cases. :issue:`2526`\n+-   The development server uses threads by default. :pr:`2529`\n -   Loading config files with ``silent=True`` will ignore\n-    :data:`~errno.ENOTDIR` errors. (`#2581`_)\n+    :data:`~errno.ENOTDIR` errors. :pr:`2581`\n -   Pass ``--cert`` and ``--key`` options to ``flask run`` to run the\n-    development server over HTTPS. (`#2606`_)\n+    development server over HTTPS. :pr:`2606`\n -   Added :data:`SESSION_COOKIE_SAMESITE` to control the ``SameSite``\n-    attribute on the session cookie. (`#2607`_)\n+    attribute on the session cookie. :pr:`2607`\n -   Added :meth:`~flask.Flask.test_cli_runner` to create a Click runner\n-    that can invoke Flask CLI commands for testing. (`#2636`_)\n+    that can invoke Flask CLI commands for testing. :pr:`2636`\n -   Subdomain matching is disabled by default and setting\n     :data:`SERVER_NAME` does not implicily enable it. It can be enabled\n     by passing ``subdomain_matching=True`` to the ``Flask`` constructor.\n-    (`#2635`_)\n+    :pr:`2635`\n -   A single trailing slash is stripped from the blueprint\n-    ``url_prefix`` when it is registered with the app. (`#2629`_)\n--   :meth:`Request.get_json` doesn\'t cache the\n-    result if parsing fails when ``silent`` is true. (`#2651`_)\n+    ``url_prefix`` when it is registered with the app. :pr:`2629`\n+-   :meth:`Request.get_json` doesn\'t cache the result if parsing fails\n+    when ``silent`` is true. :issue:`2651`\n -   :func:`Request.get_json` no longer accepts arbitrary encodings.\n     Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n-    Flask will autodetect UTF-8, -16, or -32. (`#2691`_)\n+    Flask will autodetect UTF-8, -16, or -32. :pr:`2691`\n -   Added :data:`MAX_COOKIE_SIZE` and :attr:`Response.max_cookie_size`\n     to control when Werkzeug warns about large cookies that browsers may\n-    ignore. (`#2693`_)\n+    ignore. :pr:`2693`\n -   Updated documentation theme to make docs look better in small\n-    windows. (`#2709`_)\n+    windows. :pr:`2709`\n -   Rewrote the tutorial docs and example project to take a more\n     structured approach to help new users avoid common pitfalls.\n-    (`#2676`_)\n-\n-.. _pallets/meta#24: https://github.com/pallets/meta/issues/24\n-.. _#1421: https://github.com/pallets/flask/issues/1421\n-.. _#1489: https://github.com/pallets/flask/pull/1489\n-.. _#1559: https://github.com/pallets/flask/issues/1559\n-.. _#1621: https://github.com/pallets/flask/pull/1621\n-.. _#1898: https://github.com/pallets/flask/pull/1898\n-.. _#1936: https://github.com/pallets/flask/pull/1936\n-.. _#2017: https://github.com/pallets/flask/pull/2017\n-.. _#2193: https://github.com/pallets/flask/pull/2193\n-.. _#2223: https://github.com/pallets/flask/pull/2223\n-.. _#2254: https://github.com/pallets/flask/pull/2254\n-.. _#2256: https://github.com/pallets/flask/pull/2256\n-.. _#2259: https://github.com/pallets/flask/pull/2259\n-.. _#2282: https://github.com/pallets/flask/pull/2282\n-.. _#2288: https://github.com/pallets/flask/pull/2288\n-.. _#2297: https://github.com/pallets/flask/pull/2297\n-.. _#2314: https://github.com/pallets/flask/pull/2314\n-.. _#2316: https://github.com/pallets/flask/pull/2316\n-.. _#2319: https://github.com/pallets/flask/pull/2319\n-.. _#2326: https://github.com/pallets/flask/pull/2326\n-.. _#2348: https://github.com/pallets/flask/pull/2348\n-.. _#2352: https://github.com/pallets/flask/pull/2352\n-.. _#2354: https://github.com/pallets/flask/pull/2354\n-.. _#2358: https://github.com/pallets/flask/pull/2358\n-.. _#2362: https://github.com/pallets/flask/pull/2362\n-.. _#2374: https://github.com/pallets/flask/pull/2374\n-.. _#2373: https://github.com/pallets/flask/pull/2373\n-.. _#2385: https://github.com/pallets/flask/issues/2385\n-.. _#2412: https://github.com/pallets/flask/pull/2412\n-.. _#2414: https://github.com/pallets/flask/pull/2414\n-.. _#2416: https://github.com/pallets/flask/pull/2416\n-.. _#2430: https://github.com/pallets/flask/pull/2430\n-.. _#2436: https://github.com/pallets/flask/pull/2436\n-.. _#2450: https://github.com/pallets/flask/pull/2450\n-.. _#2526: https://github.com/pallets/flask/issues/2526\n-.. _#2529: https://github.com/pallets/flask/pull/2529\n-.. _#2586: https://github.com/pallets/flask/issues/2586\n-.. _#2581: https://github.com/pallets/flask/pull/2581\n-.. _#2606: https://github.com/pallets/flask/pull/2606\n-.. _#2607: https://github.com/pallets/flask/pull/2607\n-.. _#2636: https://github.com/pallets/flask/pull/2636\n-.. _#2635: https://github.com/pallets/flask/pull/2635\n-.. _#2629: https://github.com/pallets/flask/pull/2629\n-.. _#2651: https://github.com/pallets/flask/issues/2651\n-.. _#2676: https://github.com/pallets/flask/pull/2676\n-.. _#2691: https://github.com/pallets/flask/pull/2691\n-.. _#2693: https://github.com/pallets/flask/pull/2693\n-.. _#2709: https://github.com/pallets/flask/pull/2709\n+    :pr:`2676`\n \n \n Version 0.12.4\n --------------\n \n-Released on April 29 2018\n-\n--   Repackage 0.12.3 to fix package layout issue. (`#2728`_)\n+Released 2018-04-29\n \n-.. _#2728: https://github.com/pallets/flask/issues/2728\n+-   Repackage 0.12.3 to fix package layout issue. :issue:`2728`\n \n \n Version 0.12.3\n --------------\n \n-Released on April 26th 2018\n+Released 2018-04-26\n \n -   :func:`Request.get_json` no longer accepts arbitrary encodings.\n     Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n-    Flask will autodetect UTF-8, -16, or -32. (`#2692`_)\n+    Flask will autodetect UTF-8, -16, or -32. :issue:`2692`\n -   Fix a Python warning about imports when using ``python -m flask``.\n-    (`#2666`_)\n+    :issue:`2666`\n -   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n     cases.\n \n-.. _#2666: https://github.com/pallets/flask/issues/2666\n-.. _#2692: https://github.com/pallets/flask/issues/2692\n-\n \n Version 0.12.2\n --------------\n \n-Released on May 16 2017\n+Released 2017-05-16\n+\n+-   Fix a bug in ``safe_join`` on Windows.\n \n-- Fix a bug in `safe_join` on Windows.\n \n Version 0.12.1\n --------------\n \n-Bugfix release, released on March 31st 2017\n+Released 2017-03-31\n+\n+-   Prevent ``flask run`` from showing a ``NoAppException`` when an\n+    ``ImportError`` occurs within the imported application module.\n+-   Fix encoding behavior of ``app.config.from_pyfile`` for Python 3.\n+    :issue:`2118`\n+-   Use the ``SERVER_NAME`` config if it is present as default values\n+    for ``app.run``. :issue:`2109`, :pr:`2152`\n+-   Call ``ctx.auto_pop`` with the exception object instead of ``None``,\n+    in the event that a ``BaseException`` such as ``KeyboardInterrupt``\n+    is raised in a request handler.\n \n-- Prevent `flask run` from showing a NoAppException when an ImportError occurs\n-  within the imported application module.\n-- Fix encoding behavior of ``app.config.from_pyfile`` for Python 3. Fix\n-  ``#2118``.\n-- Use the ``SERVER_NAME`` config if it is present as default values for\n-  ``app.run``. ``#2109``, ``#2152``\n-- Call `ctx.auto_pop` with the exception object instead of `None`, in the\n-  event that a `BaseException` such as `KeyboardInterrupt` is raised in a\n-  request handler.\n \n Version 0.12\n ------------\n \n-Released on December 21st 2016, codename Punsch.\n-\n-- the cli command now responds to `--version`.\n-- Mimetype guessing and ETag generation for file-like objects in ``send_file``\n-  has been removed, as per issue ``#104``.  See pull request ``#1849``.\n-- Mimetype guessing in ``send_file`` now fails loudly and doesn\'t fall back to\n-  ``application/octet-stream``. See pull request ``#1988``.\n-- Make ``flask.safe_join`` able to join multiple paths like ``os.path.join``\n-  (pull request ``#1730``).\n-- Revert a behavior change that made the dev server crash instead of returning\n-  a Internal Server Error (pull request ``#2006``).\n-- Correctly invoke response handlers for both regular request dispatching as\n-  well as error handlers.\n-- Disable logger propagation by default for the app logger.\n-- Add support for range requests in ``send_file``.\n-- ``app.test_client`` includes preset default environment, which can now be\n-  directly set, instead of per ``client.get``.\n-\n-Version 0.11.2\n---------------\n+Released 2016-12-21, codename Punsch\n+\n+-   The cli command now responds to ``--version``.\n+-   Mimetype guessing and ETag generation for file-like objects in\n+    ``send_file`` has been removed. :issue:`104`, :pr`1849`\n+-   Mimetype guessing in ``send_file`` now fails loudly and doesn\'t fall\n+    back to ``application/octet-stream``. :pr:`1988`\n+-   Make ``flask.safe_join`` able to join multiple paths like\n+    ``os.path.join`` :pr:`1730`\n+-   Revert a behavior change that made the dev server crash instead of\n+    returning an Internal Server Error. :pr:`2006`\n+-   Correctly invoke response handlers for both regular request\n+    dispatching as well as error handlers.\n+-   Disable logger propagation by default for the app logger.\n+-   Add support for range requests in ``send_file``.\n+-   ``app.test_client`` includes preset default environment, which can\n+    now be directly set, instead of per ``client.get``.\n+-   Fix crash when running under PyPy3. :pr:`1814`\n \n-Bugfix release, unreleased\n-\n-- Fix crash when running under PyPy3, see pull request ``#1814``.\n \n Version 0.11.1\n --------------\n \n-Bugfix release, released on June 7th 2016.\n+Released 2016-06-07\n+\n+-   Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from\n+    working. :pr:`1872`\n \n-- Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from working. See\n-  pull request ``#1872``.\n \n Version 0.11\n ------------\n \n-Released on May 29th 2016, codename Absinthe.\n-\n-- Added support to serializing top-level arrays to :func:`flask.jsonify`. This\n-  introduces a security risk in ancient browsers. See\n-  :ref:`json-security` for details.\n-- Added before_render_template signal.\n-- Added `**kwargs` to :meth:`flask.Test.test_client` to support passing\n-  additional keyword arguments to the constructor of\n-  :attr:`flask.Flask.test_client_class`.\n-- Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the\n-  set-cookie behavior.  If set to ``True`` a permanent session will be\n-  refreshed each request and get their lifetime extended, if set to\n-  ``False`` it will only be modified if the session actually modifies.\n-  Non permanent sessions are not affected by this and will always\n-  expire if the browser window closes.\n-- Made Flask support custom JSON mimetypes for incoming data.\n-- Added support for returning tuples in the form ``(response, headers)``\n-  from a view function.\n-- Added :meth:`flask.Config.from_json`.\n-- Added :attr:`flask.Flask.config_class`.\n-- Added :meth:`flask.Config.get_namespace`.\n-- Templates are no longer automatically reloaded outside of debug mode. This\n-  can be configured with the new ``TEMPLATES_AUTO_RELOAD`` config key.\n-- Added a workaround for a limitation in Python 3.3\'s namespace loader.\n-- Added support for explicit root paths when using Python 3.3\'s namespace\n-  packages.\n-- Added :command:`flask` and the ``flask.cli`` module to start the local\n-  debug server through the click CLI system.  This is recommended over the old\n-  ``flask.run()`` method as it works faster and more reliable due to a\n-  different design and also replaces ``Flask-Script``.\n-- Error handlers that match specific classes are now checked first,\n-  thereby allowing catching exceptions that are subclasses of HTTP\n-  exceptions (in ``werkzeug.exceptions``).  This makes it possible\n-  for an extension author to create exceptions that will by default\n-  result in the HTTP error of their choosing, but may be caught with\n-  a custom error handler if desired.\n-- Added :meth:`flask.Config.from_mapping`.\n-- Flask will now log by default even if debug is disabled.  The log format is\n-  now hardcoded but the default log handling can be disabled through the\n-  ``LOGGER_HANDLER_POLICY`` configuration key.\n-- Removed deprecated module functionality.\n-- Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when enabled will\n-  instruct Flask to explain how it locates templates.  This should help\n-  users debug when the wrong templates are loaded.\n-- Enforce blueprint handling in the order they were registered for template\n-  loading.\n-- Ported test suite to py.test.\n-- Deprecated ``request.json`` in favour of ``request.get_json()``.\n-- Add ""pretty"" and ""compressed"" separators definitions in jsonify() method.\n-  Reduces JSON response size when JSONIFY_PRETTYPRINT_REGULAR=False by removing\n-  unnecessary white space included by default after separators.\n-- JSON responses are now terminated with a newline character, because it is a\n-  convention that UNIX text files end with a newline and some clients don\'t\n-  deal well when this newline is missing. See\n-  https://github.com/pallets/flask/pull/1262 -- this came up originally as a\n-  part of https://github.com/kennethreitz/httpbin/issues/168\n-- The automatically provided ``OPTIONS`` method is now correctly disabled if\n-  the user registered an overriding rule with the lowercase-version\n-  ``options`` (issue ``#1288``).\n-- ``flask.json.jsonify`` now supports the ``datetime.date`` type (pull request\n-  ``#1326``).\n-- Don\'t leak exception info of already catched exceptions to context teardown\n-  handlers (pull request ``#1393``).\n-- Allow custom Jinja environment subclasses (pull request ``#1422``).\n-- Updated extension dev guidelines.\n-\n-- ``flask.g`` now has ``pop()`` and ``setdefault`` methods.\n-- Turn on autoescape for ``flask.templating.render_template_string`` by default\n-  (pull request ``#1515``).\n-- ``flask.ext`` is now deprecated (pull request ``#1484``).\n-- ``send_from_directory`` now raises BadRequest if the filename is invalid on\n-  the server OS (pull request ``#1763``).\n-- Added the ``JSONIFY_MIMETYPE`` configuration variable (pull request ``#1728``).\n-- Exceptions during teardown handling will no longer leave bad application\n-  contexts lingering around.\n-\n-Version 0.10.2\n---------------\n+Released 2016-05-29, codename Absinthe\n+\n+-   Added support to serializing top-level arrays to\n+    :func:`flask.jsonify`. This introduces a security risk in ancient\n+    browsers. See :ref:`json-security` for details.\n+-   Added before_render_template signal.\n+-   Added ``**kwargs`` to :meth:`flask.Test.test_client` to support\n+    passing additional keyword arguments to the constructor of\n+    :attr:`flask.Flask.test_client_class`.\n+-   Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the\n+    set-cookie behavior. If set to ``True`` a permanent session will be\n+    refreshed each request and get their lifetime extended, if set to\n+    ``False`` it will only be modified if the session actually modifies.\n+    Non permanent sessions are not affected by this and will always\n+    expire if the browser window closes.\n+-   Made Flask support custom JSON mimetypes for incoming data.\n+-   Added support for returning tuples in the form ``(response,\n+    headers)`` from a view function.\n+-   Added :meth:`flask.Config.from_json`.\n+-   Added :attr:`flask.Flask.config_class`.\n+-   Added :meth:`flask.Config.get_namespace`.\n+-   Templates are no longer automatically reloaded outside of debug\n+    mode. This can be configured with the new ``TEMPLATES_AUTO_RELOAD``\n+    config key.\n+-   Added a workaround for a limitation in Python 3.3\'s namespace\n+    loader.\n+-   Added support for explicit root paths when using Python 3.3\'s\n+    namespace packages.\n+-   Added :command:`flask` and the ``flask.cli`` module to start the\n+    local debug server through the click CLI system. This is recommended\n+    over the old ``flask.run()`` method as it works faster and more\n+    reliable due to a different design and also replaces\n+    ``Flask-Script``.\n+-   Error handlers that match specific classes are now checked first,\n+    thereby allowing catching exceptions that are subclasses of HTTP\n+    exceptions (in ``werkzeug.exceptions``). This makes it possible for\n+    an extension author to create exceptions that will by default result\n+    in the HTTP error of their choosing, but may be caught with a custom\n+    error handler if desired.\n+-   Added :meth:`flask.Config.from_mapping`.\n+-   Flask will now log by default even if debug is disabled. The log\n+    format is now hardcoded but the default log handling can be disabled\n+    through the ``LOGGER_HANDLER_POLICY`` configuration key.\n+-   Removed deprecated module functionality.\n+-   Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when\n+    enabled will instruct Flask to explain how it locates templates.\n+    This should help users debug when the wrong templates are loaded.\n+-   Enforce blueprint handling in the order they were registered for\n+    template loading.\n+-   Ported test suite to py.test.\n+-   Deprecated ``request.json`` in favour of ``request.get_json()``.\n+-   Add ""pretty"" and ""compressed"" separators definitions in jsonify()\n+    method. Reduces JSON response size when\n+    ``JSONIFY_PRETTYPRINT_REGULAR=False`` by removing unnecessary white\n+    space included by default after separators.\n+-   JSON responses are now terminated with a newline character, because\n+    it is a convention that UNIX text files end with a newline and some\n+    clients don\'t deal well when this newline is missing. This came up\n+    originally as a part of\n+    https://github.com/postmanlabs/httpbin/issues/168. :pr:`1262`\n+-   The automatically provided ``OPTIONS`` method is now correctly\n+    disabled if the user registered an overriding rule with the\n+    lowercase-version ``options``. :issue:`1288`\n+-   ``flask.json.jsonify`` now supports the ``datetime.date`` type.\n+    :pr:`1326`\n+-   Don\'t leak exception info of already caught exceptions to context\n+    teardown handlers. :pr:`1393`\n+-   Allow custom Jinja environment subclasses. :pr:`1422`\n+-   Updated extension dev guidelines.\n+-   ``flask.g`` now has ``pop()`` and ``setdefault`` methods.\n+-   Turn on autoescape for ``flask.templating.render_template_string``\n+    by default. :pr:`1515`\n+-   ``flask.ext`` is now deprecated. :pr:`1484`\n+-   ``send_from_directory`` now raises BadRequest if the filename is\n+    invalid on the server OS. :pr:`1763`\n+-   Added the ``JSONIFY_MIMETYPE`` configuration variable. :pr:`1728`\n+-   Exceptions during teardown handling will no longer leave bad\n+    application contexts lingering around.\n+-   Fixed broken ``test_appcontext_signals()`` test case.\n+-   Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package`\n+    with a useful message explaining why it is raised when a PEP 302\n+    import hook is used without an ``is_package()`` method.\n+-   Fixed an issue causing exceptions raised before entering a request\n+    or app context to be passed to teardown handlers.\n+-   Fixed an issue with query parameters getting removed from requests\n+    in the test client when absolute URLs were requested.\n+-   Made ``@before_first_request`` into a decorator as intended.\n+-   Fixed an etags bug when sending a file streams with a name.\n+-   Fixed ``send_from_directory`` not expanding to the application root\n+    path correctly.\n+-   Changed logic of before first request handlers to flip the flag\n+    after invoking. This will allow some uses that are potentially\n+    dangerous but should probably be permitted.\n+-   Fixed Python 3 bug when a handler from\n+    ``app.url_build_error_handlers`` reraises the ``BuildError``.\n \n-(bugfix release, release date to be announced)\n-\n-- Fixed broken `test_appcontext_signals()` test case.\n-- Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package` with a\n-  useful message explaining why it is raised when a PEP 302 import hook is used\n-  without an `is_package()` method.\n-- Fixed an issue causing exceptions raised before entering a request or app\n-  context to be passed to teardown handlers.\n-- Fixed an issue with query parameters getting removed from requests in\n-  the test client when absolute URLs were requested.\n-- Made `@before_first_request` into a decorator as intended.\n-- Fixed an etags bug when sending a file streams with a name.\n-- Fixed `send_from_directory` not expanding to the application root path\n-  correctly.\n-- Changed logic of before first request handlers to flip the flag after\n-  invoking.  This will allow some uses that are potentially dangerous but\n-  should probably be permitted.\n-- Fixed Python 3 bug when a handler from `app.url_build_error_handlers`\n-  reraises the `BuildError`.\n \n Version 0.10.1\n --------------\n \n-(bugfix release, released on June 14th 2013)\n+Released 2013-06-14\n+\n+-   Fixed an issue where ``|tojson`` was not quoting single quotes which\n+    made the filter not work properly in HTML attributes. Now it\'s\n+    possible to use that filter in single quoted attributes. This should\n+    make using that filter with angular.js easier.\n+-   Added support for byte strings back to the session system. This\n+    broke compatibility with the common case of people putting binary\n+    data for token verification into the session.\n+-   Fixed an issue where registering the same method twice for the same\n+    endpoint would trigger an exception incorrectly.\n \n-- Fixed an issue where ``|tojson`` was not quoting single quotes which\n-  made the filter not work properly in HTML attributes.  Now it\'s\n-  possible to use that filter in single quoted attributes.  This should\n-  make using that filter with angular.js easier.\n-- Added support for byte strings back to the session system.  This broke\n-  compatibility with the common case of people putting binary data for\n-  token verification into the session.\n-- Fixed an issue where registering the same method twice for the same endpoint\n-  would trigger an exception incorrectly.\n \n Version 0.10\n ------------\n \n-Released on June 13th 2013, codename Limoncello.\n-\n-- Changed default cookie serialization format from pickle to JSON to\n-  limit the impact an attacker can do if the secret key leaks.  See\n-  :ref:`upgrading-to-010` for more information.\n-- Added ``template_test`` methods in addition to the already existing\n-  ``template_filter`` method family.\n-- Added ``template_global`` methods in addition to the already existing\n-  ``template_filter`` method family.\n-- Set the content-length header for x-sendfile.\n-- ``tojson`` filter now does not escape script blocks in HTML5 parsers.\n-- ``tojson`` used in templates is now safe by default due.  This was\n-  allowed due to the different escaping behavior.\n-- Flask will now raise an error if you attempt to register a new function\n-  on an already used endpoint.\n-- Added wrapper module around simplejson and added default serialization\n-  of datetime objects.  This allows much easier customization of how\n-  JSON is handled by Flask or any Flask extension.\n-- Removed deprecated internal ``flask.session`` module alias.  Use\n-  ``flask.sessions`` instead to get the session module.  This is not to\n-  be confused with ``flask.session`` the session proxy.\n-- Templates can now be rendered without request context.  The behavior is\n-  slightly different as the ``request``, ``session`` and ``g`` objects\n-  will not be available and blueprint\'s context processors are not\n-  called.\n-- The config object is now available to the template as a real global and\n-  not through a context processor which makes it available even in imported\n-  templates by default.\n-- Added an option to generate non-ascii encoded JSON which should result\n-  in less bytes being transmitted over the network.  It\'s disabled by\n-  default to not cause confusion with existing libraries that might expect\n-  ``flask.json.dumps`` to return bytestrings by default.\n-- ``flask.g`` is now stored on the app context instead of the request\n-  context.\n-- ``flask.g`` now gained a ``get()`` method for not erroring out on non\n-  existing items.\n-- ``flask.g`` now can be used with the ``in`` operator to see what\'s defined\n-  and it now is iterable and will yield all attributes stored.\n-- ``flask.Flask.request_globals_class`` got renamed to\n-  ``flask.Flask.app_ctx_globals_class`` which is a better name to what it\n-  does since 0.10.\n-- `request`, `session` and `g` are now also added as proxies to the template\n-  context which makes them available in imported templates.  One has to be\n-  very careful with those though because usage outside of macros might\n-  cause caching.\n-- Flask will no longer invoke the wrong error handlers if a proxy\n-  exception is passed through.\n-- Added a workaround for chrome\'s cookies in localhost not working\n-  as intended with domain names.\n-- Changed logic for picking defaults for cookie values from sessions\n-  to work better with Google Chrome.\n-- Added `message_flashed` signal that simplifies flashing testing.\n-- Added support for copying of request contexts for better working with\n-  greenlets.\n-- Removed custom JSON HTTP exception subclasses.  If you were relying on them\n-  you can reintroduce them again yourself trivially.  Using them however is\n-  strongly discouraged as the interface was flawed.\n-- Python requirements changed: requiring Python 2.6 or 2.7 now to prepare\n-  for Python 3.3 port.\n-- Changed how the teardown system is informed about exceptions.  This is now\n-  more reliable in case something handles an exception halfway through\n-  the error handling process.\n-- Request context preservation in debug mode now keeps the exception\n-  information around which means that teardown handlers are able to\n-  distinguish error from success cases.\n-- Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable.\n-- Flask now orders JSON keys by default to not trash HTTP caches due to\n-  different hash seeds between different workers.\n-- Added `appcontext_pushed` and `appcontext_popped` signals.\n-- The builtin run method now takes the ``SERVER_NAME`` into account when\n-  picking the default port to run on.\n-- Added `flask.request.get_json()` as a replacement for the old\n-  `flask.request.json` property.\n+Released 2013-06-13, codename Limoncello\n+\n+-   Changed default cookie serialization format from pickle to JSON to\n+    limit the impact an attacker can do if the secret key leaks. See\n+    :ref:`upgrading-to-010` for more information.\n+-   Added ``template_test`` methods in addition to the already existing\n+    ``template_filter`` method family.\n+-   Added ``template_global`` methods in addition to the already\n+    existing ``template_filter`` method family.\n+-   Set the content-length header for x-sendfile.\n+-   ``tojson`` filter now does not escape script blocks in HTML5\n+    parsers.\n+-   ``tojson`` used in templates is now safe by default due. This was\n+    allowed due to the different escaping behavior.\n+-   Flask will now raise an error if you attempt to register a new\n+    function on an already used endpoint.\n+-   Added wrapper module around simplejson and added default\n+    serialization of datetime objects. This allows much easier\n+    customization of how JSON is handled by Flask or any Flask\n+    extension.\n+-   Removed deprecated internal ``flask.session`` module alias. Use\n+    ``flask.sessions`` instead to get the session module. This is not to\n+    be confused with ``flask.session`` the session proxy.\n+-   Templates can now be rendered without request context. The behavior\n+    is slightly different as the ``request``, ``session`` and ``g``\n+    objects will not be available and blueprint\'s context processors are\n+    not called.\n+-   The config object is now available to the template as a real global\n+    and not through a context processor which makes it available even in\n+    imported templates by default.\n+-   Added an option to generate non-ascii encoded JSON which should\n+    result in less bytes being transmitted over the network. It\'s\n+    disabled by default to not cause confusion with existing libraries\n+    that might expect ``flask.json.dumps`` to return bytestrings by\n+    default.\n+-   ``flask.g`` is now stored on the app context instead of the request\n+    context.\n+-   ``flask.g`` now gained a ``get()`` method for not erroring out on\n+    non existing items.\n+-   ``flask.g`` now can be used with the ``in`` operator to see what\'s\n+    defined and it now is iterable and will yield all attributes stored.\n+-   ``flask.Flask.request_globals_class`` got renamed to\n+    ``flask.Flask.app_ctx_globals_class`` which is a better name to what\n+    it does since 0.10.\n+-   ``request``, ``session`` and ``g`` are now also added as proxies to\n+    the template context which makes them available in imported\n+    templates. One has to be very careful with those though because\n+    usage outside of macros might cause caching.\n+-   Flask will no longer invoke the wrong error handlers if a proxy\n+    exception is passed through.\n+-   Added a workaround for chrome\'s cookies in localhost not working as\n+    intended with domain names.\n+-   Changed logic for picking defaults for cookie values from sessions\n+    to work better with Google Chrome.\n+-   Added ``message_flashed`` signal that simplifies flashing testing.\n+-   Added support for copying of request contexts for better working\n+    with greenlets.\n+-   Removed custom JSON HTTP exception subclasses. If you were relying\n+    on them you can reintroduce them again yourself trivially. Using\n+    them however is strongly discouraged as the interface was flawed.\n+-   Python requirements changed: requiring Python 2.6 or 2.7 now to\n+    prepare for Python 3.3 port.\n+-   Changed how the teardown system is informed about exceptions. This\n+    is now more reliable in case something handles an exception halfway\n+    through the error handling process.\n+-   Request context preservation in debug mode now keeps the exception\n+    information around which means that teardown handlers are able to\n+    distinguish error from success cases.\n+-   Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable.\n+-   Flask now orders JSON keys by default to not trash HTTP caches due\n+    to different hash seeds between different workers.\n+-   Added ``appcontext_pushed`` and ``appcontext_popped`` signals.\n+-   The builtin run method now takes the ``SERVER_NAME`` into account\n+    when picking the default port to run on.\n+-   Added ``flask.request.get_json()`` as a replacement for the old\n+    ``flask.request.json`` property.\n+\n \n Version 0.9\n -----------\n \n-Released on July 1st 2012, codename Campari.\n-\n-- The :func:`flask.Request.on_json_loading_failed` now returns a JSON formatted\n-  response by default.\n-- The :func:`flask.url_for` function now can generate anchors to the\n-  generated links.\n-- The :func:`flask.url_for` function now can also explicitly generate\n-  URL rules specific to a given HTTP method.\n-- Logger now only returns the debug log setting if it was not set\n-  explicitly.\n-- Unregister a circular dependency between the WSGI environment and\n-  the request object when shutting down the request.  This means that\n-  environ ``werkzeug.request`` will be ``None`` after the response was\n-  returned to the WSGI server but has the advantage that the garbage\n-  collector is not needed on CPython to tear down the request unless\n-  the user created circular dependencies themselves.\n-- Session is now stored after callbacks so that if the session payload\n-  is stored in the session you can still modify it in an after\n-  request callback.\n-- The :class:`flask.Flask` class will avoid importing the provided import name\n-  if it can (the required first parameter), to benefit tools which build Flask\n-  instances programmatically.  The Flask class will fall back to using import\n-  on systems with custom module hooks, e.g. Google App Engine, or when the\n-  import name is inside a zip archive (usually a .egg) prior to Python 2.7.\n-- Blueprints now have a decorator to add custom template filters application\n-  wide, :meth:`flask.Blueprint.app_template_filter`.\n-- The Flask and Blueprint classes now have a non-decorator method for adding\n-  custom template filters application wide,\n-  :meth:`flask.Flask.add_template_filter` and\n-  :meth:`flask.Blueprint.add_app_template_filter`.\n-- The :func:`flask.get_flashed_messages` function now allows rendering flashed\n-  message categories in separate blocks, through a ``category_filter``\n-  argument.\n-- The :meth:`flask.Flask.run` method now accepts ``None`` for `host` and `port`\n-  arguments, using default values when ``None``.  This allows for calling run\n-  using configuration values, e.g. ``app.run(app.config.get(\'MYHOST\'),\n-  app.config.get(\'MYPORT\'))``, with proper behavior whether or not a config\n-  file is provided.\n-- The :meth:`flask.render_template` method now accepts a either an iterable of\n-  template names or a single template name.  Previously, it only accepted a\n-  single template name.  On an iterable, the first template found is rendered.\n-- Added :meth:`flask.Flask.app_context` which works very similar to the\n-  request context but only provides access to the current application.  This\n-  also adds support for URL generation without an active request context.\n-- View functions can now return a tuple with the first instance being an\n-  instance of :class:`flask.Response`.  This allows for returning\n-  ``jsonify(error=""error msg""), 400`` from a view function.\n-- :class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a\n-  :meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to override\n-  behavior of serving static files from Flask when using\n-  :meth:`flask.Flask.send_static_file` (used for the default static file\n-  handler) and :func:`~flask.helpers.send_file`.  This hook is provided a\n-  filename, which for example allows changing cache controls by file extension.\n-  The default max-age for `send_file` and static files can be configured\n-  through a new ``SEND_FILE_MAX_AGE_DEFAULT`` configuration variable, which is\n-  used in the default `get_send_file_max_age` implementation.\n-- Fixed an assumption in sessions implementation which could break message\n-  flashing on sessions implementations which use external storage.\n-- Changed the behavior of tuple return values from functions.  They are no\n-  longer arguments to the response object, they now have a defined meaning.\n-- Added :attr:`flask.Flask.request_globals_class` to allow a specific class to\n-  be used on creation of the :data:`~flask.g` instance of each request.\n-- Added `required_methods` attribute to view functions to force-add methods\n-  on registration.\n-- Added :func:`flask.after_this_request`.\n-- Added :func:`flask.stream_with_context` and the ability to push contexts\n-  multiple times without producing unexpected behavior.\n+Released 2012-07-01, codename Campari\n+\n+-   The :func:`flask.Request.on_json_loading_failed` now returns a JSON\n+    formatted response by default.\n+-   The :func:`flask.url_for` function now can generate anchors to the\n+    generated links.\n+-   The :func:`flask.url_for` function now can also explicitly generate\n+    URL rules specific to a given HTTP method.\n+-   Logger now only returns the debug log setting if it was not set\n+    explicitly.\n+-   Unregister a circular dependency between the WSGI environment and\n+    the request object when shutting down the request. This means that\n+    environ ``werkzeug.request`` will be ``None`` after the response was\n+    returned to the WSGI server but has the advantage that the garbage\n+    collector is not needed on CPython to tear down the request unless\n+    the user created circular dependencies themselves.\n+-   Session is now stored after callbacks so that if the session payload\n+    is stored in the session you can still modify it in an after request\n+    callback.\n+-   The :class:`flask.Flask` class will avoid importing the provided\n+    import name if it can (the required first parameter), to benefit\n+    tools which build Flask instances programmatically. The Flask class\n+    will fall back to using import on systems with custom module hooks,\n+    e.g. Google App Engine, or when the import name is inside a zip\n+    archive (usually a .egg) prior to Python 2.7.\n+-   Blueprints now have a decorator to add custom template filters\n+    application wide, :meth:`flask.Blueprint.app_template_filter`.\n+-   The Flask and Blueprint classes now have a non-decorator method for\n+    adding custom template filters application wide,\n+    :meth:`flask.Flask.add_template_filter` and\n+    :meth:`flask.Blueprint.add_app_template_filter`.\n+-   The :func:`flask.get_flashed_messages` function now allows rendering\n+    flashed message categories in separate blocks, through a\n+    ``category_filter`` argument.\n+-   The :meth:`flask.Flask.run` method now accepts ``None`` for ``host``\n+    and ``port`` arguments, using default values when ``None``. This\n+    allows for calling run using configuration values, e.g.\n+    ``app.run(app.config.get(\'MYHOST\'), app.config.get(\'MYPORT\'))``,\n+    with proper behavior whether or not a config file is provided.\n+-   The :meth:`flask.render_template` method now accepts a either an\n+    iterable of template names or a single template name. Previously, it\n+    only accepted a single template name. On an iterable, the first\n+    template found is rendered.\n+-   Added :meth:`flask.Flask.app_context` which works very similar to\n+    the request context but only provides access to the current\n+    application. This also adds support for URL generation without an\n+    active request context.\n+-   View functions can now return a tuple with the first instance being\n+    an instance of :class:`flask.Response`. This allows for returning\n+    ``jsonify(error=""error msg""), 400`` from a view function.\n+-   :class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a\n+    :meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to\n+    override behavior of serving static files from Flask when using\n+    :meth:`flask.Flask.send_static_file` (used for the default static\n+    file handler) and :func:`~flask.helpers.send_file`. This hook is\n+    provided a filename, which for example allows changing cache\n+    controls by file extension. The default max-age for ``send_file``\n+    and static files can be configured through a new\n+    ``SEND_FILE_MAX_AGE_DEFAULT`` configuration variable, which is used\n+    in the default ``get_send_file_max_age`` implementation.\n+-   Fixed an assumption in sessions implementation which could break\n+    message flashing on sessions implementations which use external\n+    storage.\n+-   Changed the behavior of tuple return values from functions. They are\n+    no longer arguments to the response object, they now have a defined\n+    meaning.\n+-   Added :attr:`flask.Flask.request_globals_class` to allow a specific\n+    class to be used on creation of the :data:`~flask.g` instance of\n+    each request.\n+-   Added ``required_methods`` attribute to view functions to force-add\n+    methods on registration.\n+-   Added :func:`flask.after_this_request`.\n+-   Added :func:`flask.stream_with_context` and the ability to push\n+    contexts multiple times without producing unexpected behavior.\n+\n \n Version 0.8.1\n -------------\n \n-Bugfix release, released on July 1st 2012\n+Released 2012-07-01\n+\n+-   Fixed an issue with the undocumented ``flask.session`` module to not\n+    work properly on Python 2.5. It should not be used but did cause\n+    some problems for package managers.\n \n-- Fixed an issue with the undocumented `flask.session` module to not\n-  work properly on Python 2.5.  It should not be used but did cause\n-  some problems for package managers.\n \n Version 0.8\n -----------\n \n-Released on September 29th 2011, codename Rakija\n-\n-- Refactored session support into a session interface so that\n-  the implementation of the sessions can be changed without\n-  having to override the Flask class.\n-- Empty session cookies are now deleted properly automatically.\n-- View functions can now opt out of getting the automatic\n-  OPTIONS implementation.\n-- HTTP exceptions and Bad Request errors can now be trapped so that they\n-  show up normally in the traceback.\n-- Flask in debug mode is now detecting some common problems and tries to\n-  warn you about them.\n-- Flask in debug mode will now complain with an assertion error if a view\n-  was attached after the first request was handled.  This gives earlier\n-  feedback when users forget to import view code ahead of time.\n-- Added the ability to register callbacks that are only triggered once at\n-  the beginning of the first request. (:meth:`Flask.before_first_request`)\n-- Malformed JSON data will now trigger a bad request HTTP exception instead\n-  of a value error which usually would result in a 500 internal server\n-  error if not handled.  This is a backwards incompatible change.\n-- Applications now not only have a root path where the resources and modules\n-  are located but also an instance path which is the designated place to\n-  drop files that are modified at runtime (uploads etc.).  Also this is\n-  conceptually only instance depending and outside version control so it\'s\n-  the perfect place to put configuration files etc.  For more information\n-  see :ref:`instance-folders`.\n-- Added the ``APPLICATION_ROOT`` configuration variable.\n-- Implemented :meth:`~flask.testing.TestClient.session_transaction` to\n-  easily modify sessions from the test environment.\n-- Refactored test client internally.  The ``APPLICATION_ROOT`` configuration\n-  variable as well as ``SERVER_NAME`` are now properly used by the test client\n-  as defaults.\n-- Added :attr:`flask.views.View.decorators` to support simpler decorating of\n-  pluggable (class-based) views.\n-- Fixed an issue where the test client if used with the ""with"" statement did not\n-  trigger the execution of the teardown handlers.\n-- Added finer control over the session cookie parameters.\n-- HEAD requests to a method view now automatically dispatch to the `get`\n-  method if no handler was implemented.\n-- Implemented the virtual :mod:`flask.ext` package to import extensions from.\n-- The context preservation on exceptions is now an integral component of\n-  Flask itself and no longer of the test client.  This cleaned up some\n-  internal logic and lowers the odds of runaway request contexts in unittests.\n-\n-Version 0.7.3\n--------------\n-\n-Bugfix release, release date to be decided\n+Released 2011-09-29, codename Rakija\n+\n+-   Refactored session support into a session interface so that the\n+    implementation of the sessions can be changed without having to\n+    override the Flask class.\n+-   Empty session cookies are now deleted properly automatically.\n+-   View functions can now opt out of getting the automatic OPTIONS\n+    implementation.\n+-   HTTP exceptions and Bad Request errors can now be trapped so that\n+    they show up normally in the traceback.\n+-   Flask in debug mode is now detecting some common problems and tries\n+    to warn you about them.\n+-   Flask in debug mode will now complain with an assertion error if a\n+    view was attached after the first request was handled. This gives\n+    earlier feedback when users forget to import view code ahead of\n+    time.\n+-   Added the ability to register callbacks that are only triggered once\n+    at the beginning of the first request.\n+    (:meth:`Flask.before_first_request`)\n+-   Malformed JSON data will now trigger a bad request HTTP exception\n+    instead of a value error which usually would result in a 500\n+    internal server error if not handled. This is a backwards\n+    incompatible change.\n+-   Applications now not only have a root path where the resources and\n+    modules are located but also an instance path which is the\n+    designated place to drop files that are modified at runtime (uploads\n+    etc.). Also this is conceptually only instance depending and outside\n+    version control so it\'s the perfect place to put configuration files\n+    etc. For more information see :ref:`instance-folders`.\n+-   Added the ``APPLICATION_ROOT`` configuration variable.\n+-   Implemented :meth:`~flask.testing.TestClient.session_transaction` to\n+    easily modify sessions from the test environment.\n+-   Refactored test client internally. The ``APPLICATION_ROOT``\n+    configuration variable as well as ``SERVER_NAME`` are now properly\n+    used by the test client as defaults.\n+-   Added :attr:`flask.views.View.decorators` to support simpler\n+    decorating of pluggable (class-based) views.\n+-   Fixed an issue where the test client if used with the ""with""\n+    statement did not trigger the execution of the teardown handlers.\n+-   Added finer control over the session cookie parameters.\n+-   HEAD requests to a method view now automatically dispatch to the\n+    ``get`` method if no handler was implemented.\n+-   Implemented the virtual :mod:`flask.ext` package to import\n+    extensions from.\n+-   The context preservation on exceptions is now an integral component\n+    of Flask itself and no longer of the test client. This cleaned up\n+    some internal logic and lowers the odds of runaway request contexts\n+    in unittests.\n+-   Fixed the Jinja2 environment\'s ``list_templates`` method not\n+    returning the correct names when blueprints or modules were\n+    involved.\n \n-- Fixed the Jinja2 environment\'s list_templates method not returning the\n-  correct names when blueprints or modules were involved.\n \n Version 0.7.2\n -------------\n \n-Bugfix release, released on July 6th 2011\n+Released 2011-07-06\n+\n+-   Fixed an issue with URL processors not properly working on\n+    blueprints.\n \n-- Fixed an issue with URL processors not properly working on\n-  blueprints.\n \n Version 0.7.1\n -------------\n \n-Bugfix release, released on June 29th 2011\n+Released 2011-06-29\n+\n+-   Added missing future import that broke 2.5 compatibility.\n+-   Fixed an infinite redirect issue with blueprints.\n \n-- Added missing future import that broke 2.5 compatibility.\n-- Fixed an infinite redirect issue with blueprints.\n \n Version 0.7\n -----------\n \n-Released on June 28th 2011, codename Grappa\n-\n-- Added :meth:`~flask.Flask.make_default_options_response`\n-  which can be used by subclasses to alter the default\n-  behavior for ``OPTIONS`` responses.\n-- Unbound locals now raise a proper :exc:`RuntimeError` instead\n-  of an :exc:`AttributeError`.\n-- Mimetype guessing and etag support based on file objects is now\n-  deprecated for :func:`flask.send_file` because it was unreliable.\n-  Pass filenames instead or attach your own etags and provide a\n-  proper mimetype by hand.\n-- Static file handling for modules now requires the name of the\n-  static folder to be supplied explicitly.  The previous autodetection\n-  was not reliable and caused issues on Google\'s App Engine.  Until\n-  1.0 the old behavior will continue to work but issue dependency\n-  warnings.\n-- fixed a problem for Flask to run on jython.\n-- added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be\n-  used to flip the setting of exception propagation which previously\n-  was linked to ``DEBUG`` alone and is now linked to either ``DEBUG`` or\n-  ``TESTING``.\n-- Flask no longer internally depends on rules being added through the\n-  `add_url_rule` function and can now also accept regular werkzeug\n-  rules added to the url map.\n-- Added an `endpoint` method to the flask application object which\n-  allows one to register a callback to an arbitrary endpoint with\n-  a decorator.\n-- Use Last-Modified for static file sending instead of Date which\n-  was incorrectly introduced in 0.6.\n-- Added `create_jinja_loader` to override the loader creation process.\n-- Implemented a silent flag for `config.from_pyfile`.\n-- Added `teardown_request` decorator, for functions that should run at the end\n-  of a request regardless of whether an exception occurred.  Also the behavior\n-  for `after_request` was changed.  It\'s now no longer executed when an exception\n-  is raised.  See :ref:`upgrading-to-new-teardown-handling`\n-- Implemented :func:`flask.has_request_context`\n-- Deprecated `init_jinja_globals`.  Override the\n-  :meth:`~flask.Flask.create_jinja_environment` method instead to\n-  achieve the same functionality.\n-- Added :func:`flask.safe_join`\n-- The automatic JSON request data unpacking now looks at the charset\n-  mimetype parameter.\n-- Don\'t modify the session on :func:`flask.get_flashed_messages` if there\n-  are no messages in the session.\n-- `before_request` handlers are now able to abort requests with errors.\n-- it is not possible to define user exception handlers.  That way you can\n-  provide custom error messages from a central hub for certain errors that\n-  might occur during request processing (for instance database connection\n-  errors, timeouts from remote resources etc.).\n-- Blueprints can provide blueprint specific error handlers.\n-- Implemented generic :ref:`views` (class-based views).\n+Released 2011-06-28, codename Grappa\n+\n+-   Added :meth:`~flask.Flask.make_default_options_response` which can\n+    be used by subclasses to alter the default behavior for ``OPTIONS``\n+    responses.\n+-   Unbound locals now raise a proper :exc:`RuntimeError` instead of an\n+    :exc:`AttributeError`.\n+-   Mimetype guessing and etag support based on file objects is now\n+    deprecated for :func:`flask.send_file` because it was unreliable.\n+    Pass filenames instead or attach your own etags and provide a proper\n+    mimetype by hand.\n+-   Static file handling for modules now requires the name of the static\n+    folder to be supplied explicitly. The previous autodetection was not\n+    reliable and caused issues on Google\'s App Engine. Until 1.0 the old\n+    behavior will continue to work but issue dependency warnings.\n+-   Fixed a problem for Flask to run on jython.\n+-   Added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be\n+    used to flip the setting of exception propagation which previously\n+    was linked to ``DEBUG`` alone and is now linked to either ``DEBUG``\n+    or ``TESTING``.\n+-   Flask no longer internally depends on rules being added through the\n+    ``add_url_rule`` function and can now also accept regular werkzeug\n+    rules added to the url map.\n+-   Added an ``endpoint`` method to the flask application object which\n+    allows one to register a callback to an arbitrary endpoint with a\n+    decorator.\n+-   Use Last-Modified for static file sending instead of Date which was\n+    incorrectly introduced in 0.6.\n+-   Added ``create_jinja_loader`` to override the loader creation\n+    process.\n+-   Implemented a silent flag for ``config.from_pyfile``.\n+-   Added ``teardown_request`` decorator, for functions that should run\n+    at the end of a request regardless of whether an exception occurred.\n+    Also the behavior for ``after_request`` was changed. It\'s now no\n+    longer executed when an exception is raised. See\n+    :ref:`upgrading-to-new-teardown-handling`\n+-   Implemented :func:`flask.has_request_context`\n+-   Deprecated ``init_jinja_globals``. Override the\n+    :meth:`~flask.Flask.create_jinja_environment` method instead to\n+    achieve the same functionality.\n+-   Added :func:`flask.safe_join`\n+-   The automatic JSON request data unpacking now looks at the charset\n+    mimetype parameter.\n+-   Don\'t modify the session on :func:`flask.get_flashed_messages` if\n+    there are no messages in the session.\n+-   ``before_request`` handlers are now able to abort requests with\n+    errors.\n+-   It is not possible to define user exception handlers. That way you\n+    can provide custom error messages from a central hub for certain\n+    errors that might occur during request processing (for instance\n+    database connection errors, timeouts from remote resources etc.).\n+-   Blueprints can provide blueprint specific error handlers.\n+-   Implemented generic :ref:`views` (class-based views).\n+\n \n Version 0.6.1\n -------------\n \n-Bugfix release, released on December 31st 2010\n+Released 2010-12-31\n+\n+-   Fixed an issue where the default ``OPTIONS`` response was not\n+    exposing all valid methods in the ``Allow`` header.\n+-   Jinja2 template loading syntax now allows ""./"" in front of a\n+    template load path. Previously this caused issues with module\n+    setups.\n+-   Fixed an issue where the subdomain setting for modules was ignored\n+    for the static folder.\n+-   Fixed a security problem that allowed clients to download arbitrary\n+    files if the host server was a windows based operating system and\n+    the client uses backslashes to escape the directory the files where\n+    exposed from.\n \n-- Fixed an issue where the default ``OPTIONS`` response was\n-  not exposing all valid methods in the ``Allow`` header.\n-- Jinja2 template loading syntax now allows ""./"" in front of\n-  a template load path.  Previously this caused issues with\n-  module setups.\n-- Fixed an issue where the subdomain setting for modules was\n-  ignored for the static folder.\n-- Fixed a security problem that allowed clients to download arbitrary files\n-  if the host server was a windows based operating system and the client\n-  uses backslashes to escape the directory the files where exposed from.\n \n Version 0.6\n -----------\n \n-Released on July 27th 2010, codename Whisky\n-\n-- after request functions are now called in reverse order of\n-  registration.\n-- OPTIONS is now automatically implemented by Flask unless the\n-  application explicitly adds \'OPTIONS\' as method to the URL rule.\n-  In this case no automatic OPTIONS handling kicks in.\n-- static rules are now even in place if there is no static folder\n-  for the module.  This was implemented to aid GAE which will\n-  remove the static folder if it\'s part of a mapping in the .yml\n-  file.\n-- the :attr:`~flask.Flask.config` is now available in the templates\n-  as `config`.\n-- context processors will no longer override values passed directly\n-  to the render function.\n-- added the ability to limit the incoming request data with the\n-  new ``MAX_CONTENT_LENGTH`` configuration value.\n-- the endpoint for the :meth:`flask.Module.add_url_rule` method\n-  is now optional to be consistent with the function of the\n-  same name on the application object.\n-- added a :func:`flask.make_response` function that simplifies\n-  creating response object instances in views.\n-- added signalling support based on blinker.  This feature is currently\n-  optional and supposed to be used by extensions and applications.  If\n-  you want to use it, make sure to have `blinker`_ installed.\n-- refactored the way URL adapters are created.  This process is now\n-  fully customizable with the :meth:`~flask.Flask.create_url_adapter`\n-  method.\n-- modules can now register for a subdomain instead of just an URL\n-  prefix.  This makes it possible to bind a whole module to a\n-  configurable subdomain.\n+Released 2010-07-27, codename Whisky\n+\n+-   After request functions are now called in reverse order of\n+    registration.\n+-   OPTIONS is now automatically implemented by Flask unless the\n+    application explicitly adds \'OPTIONS\' as method to the URL rule. In\n+    this case no automatic OPTIONS handling kicks in.\n+-   Static rules are now even in place if there is no static folder for\n+    the module. This was implemented to aid GAE which will remove the\n+    static folder if it\'s part of a mapping in the .yml file.\n+-   The :attr:`~flask.Flask.config` is now available in the templates as\n+    ``config``.\n+-   Context processors will no longer override values passed directly to\n+    the render function.\n+-   Added the ability to limit the incoming request data with the new\n+    ``MAX_CONTENT_LENGTH`` configuration value.\n+-   The endpoint for the :meth:`flask.Module.add_url_rule` method is now\n+    optional to be consistent with the function of the same name on the\n+    application object.\n+-   Added a :func:`flask.make_response` function that simplifies\n+    creating response object instances in views.\n+-   Added signalling support based on blinker. This feature is currently\n+    optional and supposed to be used by extensions and applications. If\n+    you want to use it, make sure to have `blinker`_ installed.\n+-   Refactored the way URL adapters are created. This process is now\n+    fully customizable with the :meth:`~flask.Flask.create_url_adapter`\n+    method.\n+-   Modules can now register for a subdomain instead of just an URL\n+    prefix. This makes it possible to bind a whole module to a\n+    configurable subdomain.\n \n .. _blinker: https://pypi.org/project/blinker/\n \n+\n Version 0.5.2\n -------------\n \n-Bugfix Release, released on July 15th 2010\n+Released 2010-07-15\n+\n+-   Fixed another issue with loading templates from directories when\n+    modules were used.\n \n-- fixed another issue with loading templates from directories when\n-  modules were used.\n \n Version 0.5.1\n -------------\n \n-Bugfix Release, released on July 6th 2010\n+Released 2010-07-06\n+\n+-   Fixes an issue with template loading from directories when modules\n+    where used.\n \n-- fixes an issue with template loading from directories when modules\n-  where used.\n \n Version 0.5\n -----------\n \n-Released on July 6th 2010, codename Calvados\n-\n-- fixed a bug with subdomains that was caused by the inability to\n-  specify the server name.  The server name can now be set with\n-  the ``SERVER_NAME`` config key.  This key is now also used to set\n-  the session cookie cross-subdomain wide.\n-- autoescaping is no longer active for all templates.  Instead it\n-  is only active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``.\n-  Inside templates this behavior can be changed with the\n-  ``autoescape`` tag.\n-- refactored Flask internally.  It now consists of more than a\n-  single file.\n-- :func:`flask.send_file` now emits etags and has the ability to\n-  do conditional responses builtin.\n-- (temporarily) dropped support for zipped applications.  This was a\n-  rarely used feature and led to some confusing behavior.\n-- added support for per-package template and static-file directories.\n-- removed support for `create_jinja_loader` which is no longer used\n-  in 0.5 due to the improved module support.\n-- added a helper function to expose files from any directory.\n+Released 2010-07-06, codename Calvados\n+\n+-   Fixed a bug with subdomains that was caused by the inability to\n+    specify the server name. The server name can now be set with the\n+    ``SERVER_NAME`` config key. This key is now also used to set the\n+    session cookie cross-subdomain wide.\n+-   Autoescaping is no longer active for all templates. Instead it is\n+    only active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``. Inside\n+    templates this behavior can be changed with the ``autoescape`` tag.\n+-   Refactored Flask internally. It now consists of more than a single\n+    file.\n+-   :func:`flask.send_file` now emits etags and has the ability to do\n+    conditional responses builtin.\n+-   (temporarily) dropped support for zipped applications. This was a\n+    rarely used feature and led to some confusing behavior.\n+-   Added support for per-package template and static-file directories.\n+-   Removed support for ``create_jinja_loader`` which is no longer used\n+    in 0.5 due to the improved module support.\n+-   Added a helper function to expose files from any directory.\n+\n \n Version 0.4\n -----------\n \n-Released on June 18th 2010, codename Rakia\n-\n-- added the ability to register application wide error handlers\n-  from modules.\n-- :meth:`~flask.Flask.after_request` handlers are now also invoked\n-  if the request dies with an exception and an error handling page\n-  kicks in.\n-- test client has not the ability to preserve the request context\n-  for a little longer.  This can also be used to trigger custom\n-  requests that do not pop the request stack for testing.\n-- because the Python standard library caches loggers, the name of\n-  the logger is configurable now to better support unittests.\n-- added ``TESTING`` switch that can activate unittesting helpers.\n-- the logger switches to ``DEBUG`` mode now if debug is enabled.\n+Released 2010-06-18, codename Rakia\n+\n+-   Added the ability to register application wide error handlers from\n+    modules.\n+-   :meth:`~flask.Flask.after_request` handlers are now also invoked if\n+    the request dies with an exception and an error handling page kicks\n+    in.\n+-   Test client has not the ability to preserve the request context for\n+    a little longer. This can also be used to trigger custom requests\n+    that do not pop the request stack for testing.\n+-   Because the Python standard library caches loggers, the name of the\n+    logger is configurable now to better support unittests.\n+-   Added ``TESTING`` switch that can activate unittesting helpers.\n+-   The logger switches to ``DEBUG`` mode now if debug is enabled.\n+\n \n Version 0.3.1\n -------------\n \n-Bugfix release, released on May 28th 2010\n+Released 2010-05-28\n+\n+-   Fixed a error reporting bug with :meth:`flask.Config.from_envvar`\n+-   Removed some unused code from flask\n+-   Release does no longer include development leftover files (.git\n+    folder for themes, built documentation in zip and pdf file and some\n+    .pyc files)\n \n-- fixed a error reporting bug with :meth:`flask.Config.from_envvar`\n-- removed some unused code from flask\n-- release does no longer include development leftover files (.git\n-  folder for themes, built documentation in zip and pdf file and\n-  some .pyc files)\n \n Version 0.3\n -----------\n \n-Released on May 28th 2010, codename Schnaps\n+Released 2010-05-28, codename Schnaps\n+\n+-   Added support for categories for flashed messages.\n+-   The application now configures a :class:`logging.Handler` and will\n+    log request handling exceptions to that logger when not in debug\n+    mode. This makes it possible to receive mails on server errors for\n+    example.\n+-   Added support for context binding that does not require the use of\n+    the with statement for playing in the console.\n+-   The request context is now available within the with statement\n+    making it possible to further push the request context or pop it.\n+-   Added support for configurations.\n \n-- added support for categories for flashed messages.\n-- the application now configures a :class:`logging.Handler` and will\n-  log request handling exceptions to that logger when not in debug\n-  mode.  This makes it possible to receive mails on server errors\n-  for example.\n-- added support for context binding that does not require the use of\n-  the with statement for playing in the console.\n-- the request context is now available within the with statement making\n-  it possible to further push the request context or pop it.\n-- added support for configurations.\n \n Version 0.2\n -----------\n \n-Released on May 12th 2010, codename Jägermeister\n-\n-- various bugfixes\n-- integrated JSON support\n-- added :func:`~flask.get_template_attribute` helper function.\n-- :meth:`~flask.Flask.add_url_rule` can now also register a\n-  view function.\n-- refactored internal request dispatching.\n-- server listens on 127.0.0.1 by default now to fix issues with chrome.\n-- added external URL support.\n-- added support for :func:`~flask.send_file`\n-- module support and internal request handling refactoring\n-  to better support pluggable applications.\n-- sessions can be set to be permanent now on a per-session basis.\n-- better error reporting on missing secret keys.\n-- added support for Google Appengine.\n+Released 2010-05-12, codename Jägermeister\n+\n+-   Various bugfixes\n+-   Integrated JSON support\n+-   Added :func:`~flask.get_template_attribute` helper function.\n+-   :meth:`~flask.Flask.add_url_rule` can now also register a view\n+    function.\n+-   Refactored internal request dispatching.\n+-   Server listens on 127.0.0.1 by default now to fix issues with\n+    chrome.\n+-   Added external URL support.\n+-   Added support for :func:`~flask.send_file`\n+-   Module support and internal request handling refactoring to better\n+    support pluggable applications.\n+-   Sessions can be set to be permanent now on a per-session basis.\n+-   Better error reporting on missing secret keys.\n+-   Added support for Google Appengine.\n+\n \n Version 0.1\n -----------\n \n-First public preview release.\n+Released 2010-04-16\n+\n+-   First public preview release.\n'",0,0
docs/changelog.rst,docs/changelog.rst,7d779580004c0aa481648f1165e87e6ce4bac087,24498afed5075583ecd5667b105b4a315a25051e,"'use sphinx-issues, rewrap changelog'","'@@ -1 +1,4 @@\n+Changelog\n+=========\n+\n .. include:: ../CHANGES.rst\n'",0,0
docs/Makefile,docs/Makefile,28b35c55a1fd7963227011b1a8a3dae2feb308a3,7d779580004c0aa481648f1165e87e6ce4bac087,'update docs config',"'@@ -4,7 +4,6 @@\n # You can set these variables from the command line.\n SPHINXOPTS    =\n SPHINXBUILD   = sphinx-build\n-SPHINXPROJ    = Flask\n SOURCEDIR     = .\n BUILDDIR      = _build\n \n@@ -17,4 +16,4 @@ help:\n # Catch-all target: route all unknown targets to Sphinx using the new\n # ""make mode"" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n %: Makefile\n-\t@$(SPHINXBUILD) -M $@ ""$(SOURCEDIR)"" ""$(BUILDDIR)"" $(SPHINXOPTS) $(O)\n\\ No newline at end of file\n+\t@$(SPHINXBUILD) -M $@ ""$(SOURCEDIR)"" ""$(BUILDDIR)"" $(SPHINXOPTS) $(O)\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -9,7 +9,7 @@ Support questions\n Please, don't use the issue tracker for this. Use one of the following\n resources for questions about your own code:\n \n-* The ``#get-help`` channel on our Discord chat: https://discord.gg/t6rrQZH\n+* The ``#get-help`` channel on our Discord chat: https://discordapp.com/invite/t6rrQZH\n \n   * The IRC channel ``#pocoo`` on FreeNode is linked to Discord, but\n     Discord is preferred.\n@@ -24,15 +24,15 @@ Reporting issues\n ----------------\n \n - Describe what you expected to happen.\n-- If possible, include a `minimal, complete, and verifiable example`_ to help\n-  us identify the issue. This also helps check that the issue is not with your\n-  own code.\n+- If possible, include a `minimal reproducible example`_ to help us\n+  identify the issue. This also helps check that the issue is not with\n+  your own code.\n - Describe what actually happened. Include the full traceback if there was an\n   exception.\n - List your Python, Flask, and Werkzeug versions. If possible, check if this\n   issue is already fixed in the repository.\n \n-.. _minimal, complete, and verifiable example: https://stackoverflow.com/help/mcve\n+.. _minimal reproducible example: https://stackoverflow.com/help/minimal-reproducible-example\n \n Submitting patches\n ------------------\n@@ -76,10 +76,10 @@ First time setup\n \n .. _GitHub account: https://github.com/join\n .. _latest version of git: https://git-scm.com/downloads\n-.. _username: https://help.github.com/articles/setting-your-username-in-git/\n-.. _email: https://help.github.com/articles/setting-your-email-in-git/\n+.. _username: https://help.github.com/en/articles/setting-your-username-in-git\n+.. _email: https://help.github.com/en/articles/setting-your-commit-email-address-in-git\n .. _Fork: https://github.com/pallets/flask/fork\n-.. _Clone: https://help.github.com/articles/fork-a-repo/#step-2-create-a-local-clone-of-your-fork\n+.. _Clone: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n \n Start coding\n ~~~~~~~~~~~~\n@@ -96,8 +96,8 @@ Start coding\n         git checkout -b your-branch-name origin/master\n \n - Using your favorite editor, make your changes, `committing as you go`_.\n-- Try to follow `PEP8`_, but you may ignore the line length limit if following\n-  it would make the code uglier.\n+- Try to follow `PEP8`_. We have a pre-commit config and tests that will\n+  ensure the code follows our style guide.\n - Include tests that cover any code changes you make. Make sure the test fails\n   without your patch. `Run the tests. <contributing-testsuite_>`_.\n - Push your commits to GitHub and `create a pull request`_ by using::\n@@ -106,9 +106,9 @@ Start coding\n \n - Celebrate 🎉\n \n-.. _committing as you go: http://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n+.. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n .. _PEP8: https://pep8.org/\n-.. _create a pull request: https://help.github.com/articles/creating-a-pull-request/\n+.. _create a pull request: https://help.github.com/en/articles/creating-a-pull-request\n \n .. _contributing-testsuite:\n \n@@ -157,19 +157,8 @@ Build the docs in the ``docs`` directory using Sphinx::\n \n Open ``_build/html/index.html`` in your browser to view the docs.\n \n-Read more about `Sphinx <http://www.sphinx-doc.org>`_.\n-\n-\n-make targets\n-~~~~~~~~~~~~\n-\n-Flask provides a ``Makefile`` with various shortcuts. They will ensure that\n-all dependencies are installed.\n+Read more about `Sphinx <https://www.sphinx-doc.org/en/master/>`_.\n \n-- ``make test`` runs the basic test suite with ``pytest``\n-- ``make cov`` runs the basic test suite with ``coverage``\n-- ``make test-all`` runs the full test suite with ``tox``\n-- ``make docs`` builds the HTML documentation\n \n Caution: zero-padded file modes\n -------------------------------\n""",0,0
docs/api.rst,docs/api.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -43,9 +43,9 @@ Incoming Request Data\n    .. attribute:: base_url\n    .. attribute:: url_root\n \n-      Provides different ways to look at the current `IRI\n-      <http://tools.ietf.org/html/rfc3987>`_.  Imagine your application is\n-      listening on the following application root::\n+      Provides different ways to look at the current :rfc:`3987`.\n+      Imagine your application is listening on the following application\n+      root::\n \n           http://www.example.com/myapplication\n \n'",1.1875,1.1875
docs/becomingbig.rst,docs/becomingbig.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -44,7 +44,7 @@ The :ref:`app-dispatch` chapter shows in detail how to apply middleware. You\n can introduce WSGI middleware to wrap your Flask instances and introduce fixes\n and changes at the layer between your Flask application and your HTTP\n server. Werkzeug includes several `middlewares\n-<http://werkzeug.pocoo.org/docs/middlewares/>`_.\n+<https://werkzeug.palletsprojects.com/middleware/>`_.\n \n Fork.\n -----\n'",0,0
docs/cli.rst,docs/cli.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -10,7 +10,7 @@ interface, in your virtualenv. Executed from the terminal, this script gives\n access to built-in, extension, and application-defined commands. The ``--help``\n option will give more information about any commands and options.\n \n-.. _Click: http://click.pocoo.org/\n+.. _Click: https://click.palletsprojects.com/\n \n \n Application Discovery\n@@ -340,7 +340,7 @@ they are installed. Entry points are specified in :file:`setup.py` ::\n     )\n \n \n-.. _entry point: https://packaging.python.org/tutorials/distributing-packages/#entry-points\n+.. _entry point: https://packaging.python.org/tutorials/packaging-projects/#entry-points\n \n Inside :file:`flask_my_extension/commands.py` you can then export a Click\n object::\n@@ -409,7 +409,7 @@ script is available. Note that you don't need to set ``FLASK_APP``. ::\n     The ``flask`` command, being separate from your code, does not have\n     this issue and is recommended in most cases.\n \n-.. _console script: https://packaging.python.org/tutorials/distributing-packages/#console-scripts\n+.. _console script: https://packaging.python.org/tutorials/packaging-projects/#console-scripts\n \n \n PyCharm Integration\n""",1.0,1.0
docs/deploying/cgi.rst,docs/deploying/cgi.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -58,4 +58,4 @@ work in that case:\n \n For more information consult the documentation of your webserver.\n \n-.. _App Engine: https://developers.google.com/appengine/\n+.. _App Engine: https://cloud.google.com/appengine/docs/\n'",0,0
docs/deploying/index.rst,docs/deploying/index.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -17,12 +17,9 @@ Hosted options\n --------------\n \n - `Deploying Flask on Heroku <https://devcenter.heroku.com/articles/getting-started-with-python>`_\n-- `Deploying Flask on OpenShift <https://developers.openshift.com/en/python-flask.html>`_\n-- `Deploying Flask on Webfaction <http://flask.pocoo.org/snippets/65/>`_\n - `Deploying Flask on Google App Engine <https://cloud.google.com/appengine/docs/standard/python/getting-started/python-standard-env>`_\n - `Deploying Flask on AWS Elastic Beanstalk <https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-flask.html>`_\n-- `Sharing your Localhost Server with Localtunnel <http://flask.pocoo.org/snippets/89/>`_\n-- `Deploying on Azure (IIS) <https://azure.microsoft.com/documentation/articles/web-sites-python-configure/>`_\n+- `Deploying on Azure (IIS) <https://docs.microsoft.com/en-us/azure/app-service/containers/how-to-configure-python>`_\n - `Deploying on PythonAnywhere <https://help.pythonanywhere.com/pages/Flask/>`_\n \n Self-hosted options\n'",0,0
docs/deploying/uwsgi.rst,docs/deploying/uwsgi.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -69,4 +69,4 @@ to have it in the URL root its a bit simpler::\n .. _nginx: https://nginx.org/\n .. _lighttpd: https://www.lighttpd.net/\n .. _cherokee: http://cherokee-project.com/\n-.. _uwsgi: http://projects.unbit.it/uwsgi/\n+.. _uwsgi: https://uwsgi-docs.readthedocs.io/en/latest/\n'",0,0
docs/deploying/wsgi-standalone.rst,docs/deploying/wsgi-standalone.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -43,11 +43,10 @@ Running `uWSGI HTTP Router`_::\n \n     uwsgi --http 127.0.0.1:5000 --module myproject:app\n \n-For a more optimized setup, see `configuring uWSGI and NGINX`_.\n+For a more optimized setup, see :doc:`/deploying/uwsgi`.\n \n-.. _uWSGI: http://uwsgi-docs.readthedocs.io/en/latest/\n-.. _uWSGI HTTP Router: http://uwsgi-docs.readthedocs.io/en/latest/HTTP.html#the-uwsgi-http-https-router\n-.. _configuring uWSGI and NGINX: uwsgi.html#starting-your-app-with-uwsgi\n+.. _uWSGI: https://uwsgi-docs.readthedocs.io/en/latest/\n+.. _uWSGI HTTP Router: https://uwsgi-docs.readthedocs.io/en/latest/HTTP.html#the-uwsgi-http-https-router\n \n Gevent\n -------\n@@ -86,7 +85,7 @@ application from ``myproject``::\n \n     twistd -n web --port tcp:8080 --wsgi myproject.app\n \n-.. _Twisted: https://twistedmatrix.com/\n+.. _Twisted: https://twistedmatrix.com/trac/\n .. _Twisted Web: https://twistedmatrix.com/trac/wiki/TwistedWeb\n \n .. _deploying-proxy-setups:\n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -34,10 +34,10 @@ Error Logging Tools\n Sending error mails, even if just for critical ones, can become\n overwhelming if enough users are hitting the error and log files are\n typically never looked at. This is why we recommend using `Sentry\n-<https://www.getsentry.com/>`_ for dealing with application errors.  It's\n+<https://sentry.io/welcome/>`_ for dealing with application errors.  It's\n available as an Open Source project `on GitHub\n <https://github.com/getsentry/sentry>`__ and is also available as a `hosted version\n-<https://getsentry.com/signup/>`_ which you can try for free. Sentry\n+<https://sentry.io/signup/>`_ which you can try for free. Sentry\n aggregates duplicate errors, captures the full stack trace and local\n variables for debugging, and sends you mails based on new errors or\n frequency thresholds.\n""",1.0,1.0
docs/extensiondev.rst,docs/extensiondev.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -4,9 +4,8 @@ Flask Extension Development\n ===========================\n \n Flask, being a microframework, often requires some repetitive steps to get\n-a third party library working.  Because very often these steps could be\n-abstracted to support multiple projects the `Flask Extension Registry`_\n-was created.\n+a third party library working. Many such extensions are already available\n+on `PyPI <https://pypi.org/search/?c=Framework+%3A%3A+Flask>`_.\n \n If you want to create your own Flask extension for something that does not\n exist yet, this guide to extension development will help you get your\n@@ -328,8 +327,8 @@ extension to be approved you have to follow these guidelines:\n 6.  Approved extensions must define all their dependencies in the\n     :file:`setup.py` file unless a dependency cannot be met because it is not\n     available on PyPI.\n-7.  The documentation must use the ``flask`` theme from the `Official\n-    Pallets Themes`_.\n+7.  The documentation must use the ``flask`` theme from the\n+    `Official Pallets Themes`_.\n 8.  The setup.py description (and thus the PyPI description) has to\n     link to the documentation, website (if there is one) and there\n     must be a link to automatically install the development version\n@@ -342,4 +341,4 @@ extension to be approved you have to follow these guidelines:\n .. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n .. _mailinglist: http://flask.pocoo.org/mailinglist/\n .. _IRC channel: http://flask.pocoo.org/community/irc/\n-.. _Official Pallets Themes: https://pypi.org/project/pallets-sphinx-themes/\n+.. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n'",1.6666666666666667,1.6666666666666667
docs/htmlfaq.rst,docs/htmlfaq.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -186,7 +186,7 @@ Many other features have been added, as well. A good guide to new features\n in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.\n Not all of them are supported in browsers yet, however, so use caution.\n \n-.. _Dive Into HTML5: http://diveintohtml5.info/\n+.. _Dive Into HTML5: https://diveintohtml5.info/\n \n What should be used?\n --------------------\n""",0,0
docs/index.rst,docs/index.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -19,7 +19,7 @@ Flask depends on the `Jinja`_ template engine and the `Werkzeug`_ WSGI\n toolkit. The documentation for these libraries can be found at:\n \n - `Jinja documentation <http://jinja.pocoo.org/docs>`_\n-- `Werkzeug documentation <http://werkzeug.pocoo.org/docs>`_\n+- `Werkzeug documentation <https://werkzeug.palletsprojects.com/>`_\n \n .. _Jinja: https://www.palletsprojects.com/p/jinja/\n .. _Werkzeug: https://www.palletsprojects.com/p/werkzeug/\n'",0,0
docs/installation.rst,docs/installation.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -25,11 +25,11 @@ These distributions will be installed automatically when installing Flask.\n * `Click`_ is a framework for writing command line applications. It provides\n   the ``flask`` command and allows adding custom management commands.\n \n-.. _Werkzeug: http://werkzeug.pocoo.org/\n-.. _Jinja: http://jinja.pocoo.org/\n-.. _MarkupSafe: https://pypi.org/project/MarkupSafe/\n-.. _ItsDangerous: https://pythonhosted.org/itsdangerous/\n-.. _Click: http://click.pocoo.org/\n+.. _Werkzeug: https://palletsprojects.com/p/werkzeug/\n+.. _Jinja: https://palletsprojects.com/p/jinja/\n+.. _MarkupSafe: https://palletsprojects.com/p/markupsafe/\n+.. _ItsDangerous: https://palletsprojects.com/p/itsdangerous/\n+.. _Click: https://palletsprojects.com/p/click/\n \n Optional dependencies\n ~~~~~~~~~~~~~~~~~~~~~\n'",0,0
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -60,7 +60,7 @@ Factories & Extensions\n It\'s preferable to create your extensions and app factories so that the\n extension object does not initially get bound to the application.\n \n-Using `Flask-SQLAlchemy <http://flask-sqlalchemy.pocoo.org/>`_,\n+Using `Flask-SQLAlchemy <https://flask-sqlalchemy.palletsprojects.com/>`_,\n as an example, you should not do something along those lines::\n \n     def create_app(config_filename):\n@@ -93,13 +93,13 @@ To run such an application, you can use the :command:`flask` command::\n \n     export FLASK_APP=myapp\n     flask run\n-    \n-Flask will automatically detect the factory (``create_app`` or ``make_app``) \n+\n+Flask will automatically detect the factory (``create_app`` or ``make_app``)\n in ``myapp``. You can also pass arguments to the factory like this::\n \n     export FLASK_APP=""myapp:create_app(\'dev\')""\n     flask run\n-    \n+\n Then the ``create_app`` factory in ``myapp`` is called with the string\n ``\'dev\'`` as the argument. See :doc:`/cli` for more detail.\n \n'",1.0,1.0
docs/patterns/jquery.rst,docs/patterns/jquery.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -11,7 +11,7 @@ Python primitives (numbers, strings, dicts and lists) look like which is\n widely supported and very easy to parse.  It became popular a few years\n ago and quickly replaced XML as transport format in web applications.\n \n-.. _jQuery: http://jquery.com/\n+.. _jQuery: https://jquery.com/\n \n Loading jQuery\n --------------\n@@ -27,7 +27,7 @@ to add a script statement to the bottom of your ``<body>`` to load jQuery:\n      url_for(\'static\', filename=\'jquery.js\') }}""></script>\n \n Another method is using Google\'s `AJAX Libraries API\n-<https://developers.google.com/speed/libraries/devguide>`_ to load jQuery:\n+<https://developers.google.com/speed/libraries/>`_ to load jQuery:\n \n .. sourcecode:: html\n \n'",1.0,1.0
docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -22,7 +22,7 @@ if you want to get started quickly.\n You can download `Flask-SQLAlchemy`_ from `PyPI\n <https://pypi.org/project/Flask-SQLAlchemy/>`_.\n \n-.. _Flask-SQLAlchemy: http://flask-sqlalchemy.pocoo.org/\n+.. _Flask-SQLAlchemy: https://flask-sqlalchemy.palletsprojects.com/\n \n \n Declarative\n'",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -69,8 +69,8 @@ This launches a very simple builtin server, which is good enough for testing\n but probably not what you want to use in production. For deployment options see\n :ref:`deployment`.\n \n-Now head over to `http://127.0.0.1:5000/ <http://127.0.0.1:5000/>`_, and you\n-should see your hello world greeting.\n+Now head over to http://127.0.0.1:5000/, and you should see your hello\n+world greeting.\n \n .. _public-server:\n \n@@ -167,7 +167,7 @@ Screenshot of the debugger in action:\n More information on using the debugger can be found in the `Werkzeug\n documentation`_.\n \n-.. _Werkzeug documentation: http://werkzeug.pocoo.org/docs/debug/#using-the-debugger\n+.. _Werkzeug documentation: https://werkzeug.palletsprojects.com/debug/#using-the-debugger\n \n Have another debugger in mind? See :ref:`working-with-debuggers`.\n \n@@ -384,7 +384,7 @@ package it's actually inside your package:\n \n For templates you can use the full power of Jinja2 templates.  Head over\n to the official `Jinja2 Template Documentation\n-<http://jinja.pocoo.org/docs/templates>`_ for more information.\n+<http://jinja.pocoo.org/docs/templates/>`_ for more information.\n \n Here is an example template:\n \n@@ -819,9 +819,8 @@ Here are some example log calls::\n     app.logger.error('An error occurred')\n \n The attached :attr:`~flask.Flask.logger` is a standard logging\n-:class:`~logging.Logger`, so head over to the official `logging\n-documentation <https://docs.python.org/library/logging.html>`_ for more\n-information.\n+:class:`~logging.Logger`, so head over to the official :mod:`logging`\n+docs for more information.\n \n Read more on :ref:`application-errors`.\n \n""",1.2,1.2
docs/templating.rst,docs/templating.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -11,7 +11,7 @@ An extension can depend on Jinja2 being present.\n This section only gives a very quick introduction into how Jinja2\n is integrated into Flask.  If you want information on the template\n engine's syntax itself, head over to the official `Jinja2 Template\n-Documentation <http://jinja.pocoo.org/docs/templates>`_ for\n+Documentation <http://jinja.pocoo.org/docs/templates/>`_ for\n more information.\n \n Jinja Setup\n""",1.0,1.0
docs/testing.rst,docs/testing.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -20,8 +20,7 @@ framework for our tests. You can install it with ``pip``, like so::\n \n     pip install pytest\n \n-.. _pytest:\n-   https://pytest.org\n+.. _pytest: https://docs.pytest.org/\n \n The Application\n ---------------\n@@ -453,5 +452,5 @@ This is useful for testing complex validation rules and custom types. ::\n         context = hello_command.make_context('hello', ['--name', 'flask'])\n         assert context.params['name'] == 'FLASK'\n \n-.. _click: http://click.pocoo.org/\n-.. _utilities for testing: http://click.pocoo.org/testing\n+.. _click: https://click.palletsprojects.com/\n+.. _utilities for testing: https://click.palletsprojects.com/testing/\n""",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -116,6 +116,6 @@ your application. Waitress is just an example, chosen for the tutorial\n because it supports both Windows and Linux. There are many more WSGI\n servers and deployment options that you may choose for your project.\n \n-.. _Waitress: https://docs.pylonsproject.org/projects/waitress/\n+.. _Waitress: https://docs.pylonsproject.org/projects/waitress/en/stable/\n \n Continue to :doc:`next`.\n'",0,0
docs/tutorial/install.rst,docs/tutorial/install.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"'@@ -70,7 +70,7 @@ files.\n See the `official packaging guide`_ for another explanation of the files\n and options used.\n \n-.. _official packaging guide: https://packaging.python.org/tutorials/distributing-packages/\n+.. _official packaging guide: https://packaging.python.org/tutorials/packaging-projects/\n \n \n Install the Project\n'",0,0
docs/unicode.rst,docs/unicode.rst,cb6272ccc8a836b402d518cf1f90328cf06cd7ea,28b35c55a1fd7963227011b1a8a3dae2feb308a3,'fix docks linkcheck',"""@@ -6,9 +6,9 @@ text.  Not only these libraries, also the majority of web related Python\n libraries that deal with text.  If you don't know Unicode so far, you\n should probably read `The Absolute Minimum Every Software Developer\n Absolutely, Positively Must Know About Unicode and Character Sets\n-<http://www.joelonsoftware.com/articles/Unicode.html>`_.  This part of the\n-documentation just tries to cover the very basics so that you have a\n-pleasant experience with Unicode related things.\n+<https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/>`_.\n+This part of the documentation just tries to cover the very basics so\n+that you have a pleasant experience with Unicode related things.\n \n Automatic Conversion\n --------------------\n""",0,0
CHANGES.rst,CHANGES.rst,871e6d6a9d1c453716f68e4e88268961d067b26d,31d3c7e71941c3a1800f5e31064c9862da473d86,"""don't clear BadRequestKeyError args""","'@@ -1,5 +1,15 @@\n .. currentmodule:: flask\n \n+Version 1.0.4\n+-------------\n+\n+Unreleased\n+\n+-   The key information for ``BadRequestKeyError`` is no longer cleared\n+    outside debug mode, so error handlers can still access it. This\n+    requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n+\n+\n Version 1.0.3\n -------------\n \n'",0,0
flask/__init__.py,flask/__init__.py,871e6d6a9d1c453716f68e4e88268961d067b26d,31d3c7e71941c3a1800f5e31064c9862da473d86,"""don't clear BadRequestKeyError args""","'@@ -10,7 +10,7 @@\n     :license: BSD-3-Clause\n """"""\n \n-__version__ = \'1.0.3\'\n+__version__ = \'1.0.4.dev\'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n'",0,0
flask/app.py,flask/app.py,871e6d6a9d1c453716f68e4e88268961d067b26d,31d3c7e71941c3a1800f5e31064c9862da473d86,"""don't clear BadRequestKeyError args""","'@@ -1724,14 +1724,14 @@ class Flask(_PackageBoundObject):\n \n         if isinstance(e, BadRequestKeyError):\n             if self.debug or self.config[""TRAP_BAD_REQUEST_ERRORS""]:\n+                e.show_exception = True\n+\n                 # Werkzeug < 0.15 doesn\'t add the KeyError to the 400\n                 # message, add it in manually.\n-                description = e.get_description()\n-\n-                if e.args[0] not in description:\n+                # TODO: clean up once Werkzeug >= 0.15.5 is required\n+                if e.args[0] not in e.get_description():\n                     e.description = ""KeyError: \'{}\'"".format(*e.args)\n-            else:\n-                # Werkzeug >= 0.15 does add it, remove it in production\n+            elif not hasattr(BadRequestKeyError, ""show_exception""):\n                 e.args = ()\n \n         if isinstance(e, HTTPException) and not self.trap_http_exception(e):\n'",2.623529411764706,2.635294117647059
CHANGES.rst,CHANGES.rst,54cbb4e64297d68ff6c9ef3fe03c283448e3533f,6ed68f015a50ab35b84a8ea71b0f846ca6a75281,"'send_file quotes "":/"" in UTF-8 filename'","'@@ -8,6 +8,8 @@ Unreleased\n -   The key information for ``BadRequestKeyError`` is no longer cleared\n     outside debug mode, so error handlers can still access it. This\n     requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n+-   ``send_file`` url quotes the "":"" and ""/"" characters for more\n+    compatible UTF-8 filename support in some browsers. :issue:`3074`\n \n \n Version 1.0.3\n'",0,0
flask/helpers.py,flask/helpers.py,54cbb4e64297d68ff6c9ef3fe03c283448e3533f,6ed68f015a50ab35b84a8ea71b0f846ca6a75281,"'send_file quotes "":/"" in UTF-8 filename'","'@@ -576,7 +576,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n             filenames = {\n                 \'filename\': unicodedata.normalize(\n                     \'NFKD\', attachment_filename).encode(\'ascii\', \'ignore\'),\n-                \'filename*\': ""UTF-8\'\'%s"" % url_quote(attachment_filename),\n+                \'filename*\': ""UTF-8\'\'%s"" % url_quote(attachment_filename, safe=b""""),\n             }\n         else:\n             filenames = {\'filename\': attachment_filename}\n'",4.03125,4.03125
tests/test_helpers.py,tests/test_helpers.py,54cbb4e64297d68ff6c9ef3fe03c283448e3533f,6ed68f015a50ab35b84a8ea71b0f846ca6a75281,"'send_file quotes "":/"" in UTF-8 filename'","'@@ -646,6 +646,8 @@ class TestSendfile(object):\n         (u\'Vögel.txt\', \'Vogel.txt\', \'V%C3%B6gel.txt\'),\n         # Native string not marked as Unicode on Python 2\n         (\'tést.txt\', \'test.txt\', \'t%C3%A9st.txt\'),\n+        # "":/"" are not safe in filename* value\n+        (u""те:/ст"", \'"":/""\', ""%D1%82%D0%B5%3A%2F%D1%81%D1%82""),\n     ))\n     def test_attachment_filename_encoding(self, filename, ascii, utf8):\n         rv = flask.send_file(\'static/index.html\', as_attachment=True, attachment_filename=filename)\n'",1.1818181818181819,1.1818181818181819
CHANGES.rst,CHANGES.rst,ac302fb6071a4a580234e3596dac082d6e8d8a1f,2a2134974cc8d39f64c89b40dd5999e0c3ec01ae,'Make the changelog UTF-8 compatible',"'@@ -7,81 +7,81 @@ Unreleased\n \n -   Bump minimum Werkzeug version to >= 0.15.\n -   Drop support for Python 3.4.\n--   Error handlers for InternalServerError or 500 will always be\n-    passed an instance of InternalServerError. If they are invoked\n+-   Error handlers for ``InternalServerError`` or ``500`` will always be\n+    passed an instance of ``InternalServerError``. If they are invoked\n     due to an unhandled exception, that original exception is now\n-    available as e.original_exception rather than being passed\n+    available as ``e.original_exception`` rather than being passed\n     directly to the handler. The same is true if the handler is for the\n-    base HTTPException. This makes error handler behavior more\n-    consistent. :pr:3266\n+    base ``HTTPException``. This makes error handler behavior more\n+    consistent. :pr:`3266`\n \n-    -   :meth:Flask.finalize_request is called for all unhandled\n-        exceptions even if there is no 500 error handler.\n+    -   :meth:`Flask.finalize_request` is called for all unhandled\n+        exceptions even if there is no ``500`` error handler.\n \n--   :meth:flask.RequestContext.copy includes the current session\n-    object in the request context copy. This prevents session\n-    pointing to an out-of-date object. :issue:2935\n+-   :meth:`flask.RequestContext.copy` includes the current session\n+    object in the request context copy. This prevents ``session``\n+    pointing to an out-of-date object. :issue:`2935`\n -   Using built-in RequestContext, unprintable Unicode characters in\n     Host header will result in a HTTP 400 response and not HTTP 500 as\n-    previously. :pr:2994\n--   :func:send_file supports :class:~os.PathLike objects as\n-    described in PEP 0519, to support :mod:pathlib in Python 3.\n-    :pr:3059\n--   :func:send_file supports :class:~io.BytesIO partial content.\n-    :issue:2957\n--   :func:open_resource accepts the ""rt"" file mode. This still does\n-    the same thing as ""r"". :issue:3163\n--   The :attr:MethodView.methods attribute set in a base class is used\n-    by subclasses. :issue:3138\n--   :attr:Flask.jinja_options is a dict instead of an\n-    ImmutableDict to allow easier configuration. Changes must still\n-    be made before creating the environment. :pr:3190\n--   Flasks JSONMixin for the request and response wrappers was\n-    moved into Werkzeug. Use Werkzeugs version with Flask-specific\n+    previously. :pr:`2994`\n+-   :func:`send_file` supports :class:`~os.PathLike` objects as\n+    described in PEP 0519, to support :mod:`pathlib` in Python 3.\n+    :pr:`3059`\n+-   :func:`send_file` supports :class:`~io.BytesIO` partial content.\n+    :issue:`2957`\n+-   :func:`open_resource` accepts the ""rt"" file mode. This still does\n+    the same thing as ""r"". :issue:`3163`\n+-   The :attr:`MethodView.methods` attribute set in a base class is used\n+    by subclasses. :issue:`3138`\n+-   :attr:`Flask.jinja_options` is a ``dict`` instead of an\n+    ``ImmutableDict`` to allow easier configuration. Changes must still\n+    be made before creating the environment. :pr:`3190`\n+-   Flask\'s ``JSONMixin`` for the request and response wrappers was\n+    moved into Werkzeug. Use Werkzeug\'s version with Flask-specific\n     support. This bumps the Werkzeug dependency to >= 0.15.\n-    :issue:3125\n--   The flask command entry point is simplified to take advantage\n-    of Werkzeug 0.15s better reloader support. This bumps the Werkzeug\n-    dependency to >= 0.15. :issue:3022\n--   Support static_url_path that ends with a forward slash.\n-    :issue:3134\n--   Support empty static_folder without requiring setting an empty\n-    static_url_path as well. :pr:3124\n--   :meth:jsonify supports :class:dataclasses.dataclass objects.\n-    :pr:3195\n--   Allow customizing the :attr:Flask.url_map_class used for routing.\n-    :pr:3069\n+    :issue:`3125`\n+-   The ``flask`` command entry point is simplified to take advantage\n+    of Werkzeug 0.15\'s better reloader support. This bumps the Werkzeug\n+    dependency to >= 0.15. :issue:`3022`\n+-   Support ``static_url_path`` that ends with a forward slash.\n+    :issue:`3134`\n+-   Support empty ``static_folder`` without requiring setting an empty\n+    ``static_url_path`` as well. :pr:`3124`\n+-   :meth:`jsonify` supports :class:`dataclasses.dataclass` objects.\n+    :pr:`3195`\n+-   Allow customizing the :attr:`Flask.url_map_class` used for routing.\n+    :pr:`3069`\n -   The development server port can be set to 0, which tells the OS to\n-    pick an available port. :issue:2926\n--   The return value from :meth:cli.load_dotenv is more consistent\n-    with the documentation. It will return False if python-dotenv is\n-    not installed, or if the given path isnt a file. :issue:2937\n--   Signaling support has a stub for the connect_via method when\n-    the Blinker library is not installed. :pr:3208\n--   Add an --extra-files option to the flask run CLI command to\n+    pick an available port. :issue:`2926`\n+-   The return value from :meth:`cli.load_dotenv` is more consistent\n+    with the documentation. It will return ``False`` if python-dotenv is\n+    not installed, or if the given path isn\'t a file. :issue:`2937`\n+-   Signaling support has a stub for the ``connect_via`` method when\n+    the Blinker library is not installed. :pr:`3208`\n+-   Add an ``--extra-files`` option to the ``flask run`` CLI command to\n     specify extra files that will trigger the reloader on change.\n-    :issue:2897\n+    :issue:`2897`\n -   Allow returning a dictionary from a view function. Similar to how\n-    returning a string will produce a text/html response, returning\n-    a dict will call jsonify to produce a application/json\n-    response. :pr:3111\n--   Blueprints have a cli Click group like app.cli. CLI commands\n+    returning a string will produce a ``text/html`` response, returning\n+    a dict will call ``jsonify`` to produce a ``application/json``\n+    response. :pr:`3111`\n+-   Blueprints have a ``cli`` Click group like ``app.cli``. CLI commands\n     registered with a blueprint will be available as a group under the\n-    flask command. :issue:1357.\n--   When using the test client as a context manager (with client:),\n+    ``flask`` command. :issue:`1357`.\n+-   When using the test client as a context manager (``with client:``),\n     all preserved request contexts are popped when the block exits,\n-    ensuring nested contexts are cleaned up correctly. :pr:3157\n+    ensuring nested contexts are cleaned up correctly. :pr:`3157`\n -   Show a better error message when the view return type is not\n-    supported. :issue:3214\n--   flask.testing.make_test_environ_builder() has been deprecated in\n-    favour of a new class flask.testing.EnvironBuilder. :pr:3232\n--   The flask run command no longer fails if Python is not built\n-    with SSL support. Using the --cert option will show an\n-    appropriate error message. :issue:3211\n+    supported. :issue:`3214`\n+-   ``flask.testing.make_test_environ_builder()`` has been deprecated in\n+    favour of a new class ``flask.testing.EnvironBuilder``. :pr:`3232`\n+-   The ``flask run`` command no longer fails if Python is not built\n+    with SSL support. Using the ``--cert`` option will show an\n+    appropriate error message. :issue:`3211`\n -   URL matching now occurs after the request context is pushed, rather\n-    than when its created. This allows custom URL converters to access\n+    than when it\'s created. This allows custom URL converters to access\n     the app and request contexts, such as to query a database for an id.\n-    :issue:3088\n+    :issue:`3088`\n \n \n Version 1.0.4\n@@ -89,9 +89,9 @@ Version 1.0.4\n \n Unreleased\n \n--   The key information for BadRequestKeyError is no longer cleared\n+-   The key information for ``BadRequestKeyError`` is no longer cleared\n     outside debug mode, so error handlers can still access it. This\n-    requires upgrading to Werkzeug 0.15.5. :issue:3249\n+    requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n \n \n Version 1.0.3\n@@ -99,22 +99,22 @@ Version 1.0.3\n \n Released 2019-05-17\n \n--   :func:send_file encodes filenames as ASCII instead of Latin-1\n+-   :func:`send_file` encodes filenames as ASCII instead of Latin-1\n     (ISO-8859-1). This fixes compatibility with Gunicorn, which is\n-    stricter about header encodings than PEP 3333. :issue:2766\n--   Allow custom CLIs using FlaskGroup to set the debug flag without\n+    stricter about header encodings than PEP 3333. :issue:`2766`\n+-   Allow custom CLIs using ``FlaskGroup`` to set the debug flag without\n     it always being overwritten based on environment variables.\n-    :pr:2765\n--   flask --version outputs Werkzeugs version and simplifies the\n-    Python version. :pr:2825\n--   :func:send_file handles an attachment_filename that is a\n-    native Python 2 string (bytes) with UTF-8 coded bytes. :issue:2933\n--   A catch-all error handler registered for HTTPException will not\n-    handle RoutingException, which is used internally during\n+    :pr:`2765`\n+-   ``flask --version`` outputs Werkzeug\'s version and simplifies the\n+    Python version. :pr:`2825`\n+-   :func:`send_file` handles an ``attachment_filename`` that is a\n+    native Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`\n+-   A catch-all error handler registered for ``HTTPException`` will not\n+    handle ``RoutingException``, which is used internally during\n     routing. This fixes the unexpected behavior that had been introduced\n-    in 1.0. :pr:2986\n--   Passing the json argument to app.test_client does not\n-    push/pop an extra app context. :issue:2900\n+    in 1.0. :pr:`2986`\n+-   Passing the ``json`` argument to ``app.test_client`` does not\n+    push/pop an extra app context. :issue:`2900`\n \n \n Version 1.0.2\n@@ -123,9 +123,9 @@ Version 1.0.2\n Released 2018-05-02\n \n -   Fix more backwards compatibility issues with merging slashes between\n-    a blueprint prefix and route. :pr:2748\n--   Fix error with flask routes command when there are no routes.\n-    :issue:2751\n+    a blueprint prefix and route. :pr:`2748`\n+-   Fix error with ``flask routes`` command when there are no routes.\n+    :issue:`2751`\n \n \n Version 1.0.1\n@@ -133,18 +133,18 @@ Version 1.0.1\n \n Released 2018-04-29\n \n--   Fix registering partials (with no __name__) as view functions.\n-    :pr:2730\n--   Dont treat lists returned from view functions the same as tuples.\n-    Only tuples are interpreted as response data. :issue:2736\n--   Extra slashes between a blueprints url_prefix and a route URL\n+-   Fix registering partials (with no ``__name__``) as view functions.\n+    :pr:`2730`\n+-   Don\'t treat lists returned from view functions the same as tuples.\n+    Only tuples are interpreted as response data. :issue:`2736`\n+-   Extra slashes between a blueprint\'s ``url_prefix`` and a route URL\n     are merged. This fixes some backwards compatibility issues with the\n-    change in 1.0. :issue:2731, :issue:2742\n--   Only trap BadRequestKeyError errors in debug mode, not all\n-    BadRequest errors. This allows abort(400) to continue\n-    working as expected. :issue:2735\n--   The FLASK_SKIP_DOTENV environment variable can be set to 1\n-    to skip automatically loading dotenv files. :issue:2722\n+    change in 1.0. :issue:`2731`, :issue:`2742`\n+-   Only trap ``BadRequestKeyError`` errors in debug mode, not all\n+    ``BadRequest`` errors. This allows ``abort(400)`` to continue\n+    working as expected. :issue:`2735`\n+-   The ``FLASK_SKIP_DOTENV`` environment variable can be set to ``1``\n+    to skip automatically loading dotenv files. :issue:`2722`\n \n \n Version 1.0\n@@ -155,157 +155,157 @@ Released 2018-04-26\n -   Python 2.6 and 3.3 are no longer supported.\n -   Bump minimum dependency versions to the latest stable versions:\n     Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.\n-    :issue:2586\n--   Skip :meth:app.run <Flask.run> when a Flask application is run\n+    :issue:`2586`\n+-   Skip :meth:`app.run <Flask.run>` when a Flask application is run\n     from the command line. This avoids some behavior that was confusing\n     to debug.\n--   Change the default for :data:JSONIFY_PRETTYPRINT_REGULAR to\n-    False. :func:~json.jsonify returns a compact format by\n-    default, and an indented format in debug mode. :pr:2193\n--   :meth:Flask.__init__ <Flask> accepts the host_matching\n-    argument and sets it on :attr:~Flask.url_map. :issue:1559\n--   :meth:Flask.__init__ <Flask> accepts the static_host argument\n-    and passes it as the host argument when defining the static\n-    route. :issue:1559\n--   :func:send_file supports Unicode in attachment_filename.\n-    :pr:2223\n--   Pass _scheme argument from :func:url_for to\n-    :meth:~Flask.handle_url_build_error. :pr:2017\n--   :meth:~Flask.add_url_rule accepts the\n-    provide_automatic_options argument to disable adding the\n-    OPTIONS method. :pr:1489\n--   :class:~views.MethodView subclasses inherit method handlers from\n-    base classes. :pr:1936\n+-   Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to\n+    ``False``. :func:`~json.jsonify` returns a compact format by\n+    default, and an indented format in debug mode. :pr:`2193`\n+-   :meth:`Flask.__init__ <Flask>` accepts the ``host_matching``\n+    argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`\n+-   :meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument\n+    and passes it as the ``host`` argument when defining the static\n+    route. :issue:`1559`\n+-   :func:`send_file` supports Unicode in ``attachment_filename``.\n+    :pr:`2223`\n+-   Pass ``_scheme`` argument from :func:`url_for` to\n+    :meth:`~Flask.handle_url_build_error`. :pr:`2017`\n+-   :meth:`~Flask.add_url_rule` accepts the\n+    ``provide_automatic_options`` argument to disable adding the\n+    ``OPTIONS`` method. :pr:`1489`\n+-   :class:`~views.MethodView` subclasses inherit method handlers from\n+    base classes. :pr:`1936`\n -   Errors caused while opening the session at the beginning of the\n-    request are handled by the apps error handlers. :pr:2254\n--   Blueprints gained :attr:~Blueprint.json_encoder and\n-    :attr:~Blueprint.json_decoder attributes to override the apps\n-    encoder and decoder. :pr:1898\n--   :meth:Flask.make_response raises TypeError instead of\n-    ValueError for bad response types. The error messages have been\n-    improved to describe why the type is invalid. :pr:2256\n--   Add routes CLI command to output routes registered on the\n-    application. :pr:2259\n+    request are handled by the app\'s error handlers. :pr:`2254`\n+-   Blueprints gained :attr:`~Blueprint.json_encoder` and\n+    :attr:`~Blueprint.json_decoder` attributes to override the app\'s\n+    encoder and decoder. :pr:`1898`\n+-   :meth:`Flask.make_response` raises ``TypeError`` instead of\n+    ``ValueError`` for bad response types. The error messages have been\n+    improved to describe why the type is invalid. :pr:`2256`\n+-   Add ``routes`` CLI command to output routes registered on the\n+    application. :pr:`2259`\n -   Show warning when session cookie domain is a bare hostname or an IP\n     address, as these may not behave properly in some browsers, such as\n-    Chrome. :pr:2282\n--   Allow IP address as exact session cookie domain. :pr:2282\n--   SESSION_COOKIE_DOMAIN is set if it is detected through\n-    SERVER_NAME. :pr:2282\n--   Auto-detect zero-argument app factory called create_app or\n-    make_app from FLASK_APP. :pr:2297\n--   Factory functions are not required to take a script_info\n-    parameter to work with the flask command. If they take a single\n-    parameter or a parameter named script_info, the\n-    :class:~cli.ScriptInfo object will be passed. :pr:2319\n--   FLASK_APP can be set to an app factory, with arguments if\n-    needed, for example FLASK_APP=myproject.app:create_app(dev).\n-    :pr:2326\n--   FLASK_APP can point to local packages that are not installed in\n-    editable mode, although pip install -e is still preferred.\n-    :pr:2414\n--   The :class:~views.View class attribute\n-    :attr:~views.View.provide_automatic_options is set in\n-    :meth:~views.View.as_view, to be detected by\n-    :meth:~Flask.add_url_rule. :pr:2316\n--   Error handling will try handlers registered for blueprint, code,\n-    app, code, blueprint, exception, app, exception.\n-    :pr:2314\n--   Cookie is added to the responses Vary header if the session\n-    is accessed at all during the request (and not deleted). :pr:2288\n--   :meth:~Flask.test_request_context accepts subdomain and\n-    url_scheme arguments for use when building the base URL.\n-    :pr:1621\n--   Set :data:APPLICATION_ROOT to / by default. This was already\n-    the implicit default when it was set to None.\n--   :data:TRAP_BAD_REQUEST_ERRORS is enabled by default in debug mode.\n-    BadRequestKeyError has a message with the bad key in debug mode\n-    instead of the generic bad request message. :pr:2348\n+    Chrome. :pr:`2282`\n+-   Allow IP address as exact session cookie domain. :pr:`2282`\n+-   ``SESSION_COOKIE_DOMAIN`` is set if it is detected through\n+    ``SERVER_NAME``. :pr:`2282`\n+-   Auto-detect zero-argument app factory called ``create_app`` or\n+    ``make_app`` from ``FLASK_APP``. :pr:`2297`\n+-   Factory functions are not required to take a ``script_info``\n+    parameter to work with the ``flask`` command. If they take a single\n+    parameter or a parameter named ``script_info``, the\n+    :class:`~cli.ScriptInfo` object will be passed. :pr:`2319`\n+-   ``FLASK_APP`` can be set to an app factory, with arguments if\n+    needed, for example ``FLASK_APP=myproject.app:create_app(\'dev\')``.\n+    :pr:`2326`\n+-   ``FLASK_APP`` can point to local packages that are not installed in\n+    editable mode, although ``pip install -e`` is still preferred.\n+    :pr:`2414`\n+-   The :class:`~views.View` class attribute\n+    :attr:`~views.View.provide_automatic_options` is set in\n+    :meth:`~views.View.as_view`, to be detected by\n+    :meth:`~Flask.add_url_rule`. :pr:`2316`\n+-   Error handling will try handlers registered for ``blueprint, code``,\n+    ``app, code``, ``blueprint, exception``, ``app, exception``.\n+    :pr:`2314`\n+-   ``Cookie`` is added to the response\'s ``Vary`` header if the session\n+    is accessed at all during the request (and not deleted). :pr:`2288`\n+-   :meth:`~Flask.test_request_context` accepts ``subdomain`` and\n+    ``url_scheme`` arguments for use when building the base URL.\n+    :pr:`1621`\n+-   Set :data:`APPLICATION_ROOT` to ``\'/\'`` by default. This was already\n+    the implicit default when it was set to ``None``.\n+-   :data:`TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode.\n+    ``BadRequestKeyError`` has a message with the bad key in debug mode\n+    instead of the generic bad request message. :pr:`2348`\n -   Allow registering new tags with\n-    :class:~json.tag.TaggedJSONSerializer to support storing other\n-    types in the session cookie. :pr:2352\n+    :class:`~json.tag.TaggedJSONSerializer` to support storing other\n+    types in the session cookie. :pr:`2352`\n -   Only open the session if the request has not been pushed onto the\n-    context stack yet. This allows :func:~stream_with_context\n+    context stack yet. This allows :func:`~stream_with_context`\n     generators to access the same session that the containing view uses.\n-    :pr:2354\n--   Add json keyword argument for the test client request methods.\n+    :pr:`2354`\n+-   Add ``json`` keyword argument for the test client request methods.\n     This will dump the given object as JSON and set the appropriate\n-    content type. :pr:2358\n+    content type. :pr:`2358`\n -   Extract JSON handling to a mixin applied to both the\n-    :class:Request and :class:Response classes. This adds the\n-    :meth:~Response.is_json and :meth:~Response.get_json methods to\n-    the response to make testing JSON response much easier. :pr:2358\n+    :class:`Request` and :class:`Response` classes. This adds the\n+    :meth:`~Response.is_json` and :meth:`~Response.get_json` methods to\n+    the response to make testing JSON response much easier. :pr:`2358`\n -   Removed error handler caching because it caused unexpected results\n     for some exception inheritance hierarchies. Register handlers\n     explicitly for each exception if you want to avoid traversing the\n-    MRO. :pr:2362\n--   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:2374\n+    MRO. :pr:`2362`\n+-   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`\n -   Template auto reloading will honor debug mode even even if\n-    :attr:~Flask.jinja_env was already accessed. :pr:2373\n--   The following old deprecated code was removed. :issue:2385\n-\n-    -   flask.ext - import extensions directly by their name instead\n-        of through the flask.ext namespace. For example,\n-        import flask.ext.sqlalchemy becomes\n-        import flask_sqlalchemy.\n-    -   Flask.init_jinja_globals - extend\n-        :meth:Flask.create_jinja_environment instead.\n-    -   Flask.error_handlers - tracked by\n-        :attr:Flask.error_handler_spec, use :meth:Flask.errorhandler\n+    :attr:`~Flask.jinja_env` was already accessed. :pr:`2373`\n+-   The following old deprecated code was removed. :issue:`2385`\n+\n+    -   ``flask.ext`` - import extensions directly by their name instead\n+        of through the ``flask.ext`` namespace. For example,\n+        ``import flask.ext.sqlalchemy`` becomes\n+        ``import flask_sqlalchemy``.\n+    -   ``Flask.init_jinja_globals`` - extend\n+        :meth:`Flask.create_jinja_environment` instead.\n+    -   ``Flask.error_handlers`` - tracked by\n+        :attr:`Flask.error_handler_spec`, use :meth:`Flask.errorhandler`\n         to register handlers.\n-    -   Flask.request_globals_class - use\n-        :attr:Flask.app_ctx_globals_class instead.\n-    -   Flask.static_path - use :attr:Flask.static_url_path\n+    -   ``Flask.request_globals_class`` - use\n+        :attr:`Flask.app_ctx_globals_class` instead.\n+    -   ``Flask.static_path`` - use :attr:`Flask.static_url_path`\n         instead.\n-    -   Request.module - use :attr:Request.blueprint instead.\n-\n--   The :attr:Request.json property is no longer deprecated.\n-    :issue:1421\n--   Support passing a :class:~werkzeug.test.EnvironBuilder or dict\n-    to :meth:test_client.open <werkzeug.test.Client.open>. :pr:2412\n--   The flask command and :meth:Flask.run will load environment\n-    variables from .env and .flaskenv files if python-dotenv is\n-    installed. :pr:2416\n+    -   ``Request.module`` - use :attr:`Request.blueprint` instead.\n+\n+-   The :attr:`Request.json` property is no longer deprecated.\n+    :issue:`1421`\n+-   Support passing a :class:`~werkzeug.test.EnvironBuilder` or ``dict``\n+    to :meth:`test_client.open <werkzeug.test.Client.open>`. :pr:`2412`\n+-   The ``flask`` command and :meth:`Flask.run` will load environment\n+    variables from ``.env`` and ``.flaskenv`` files if python-dotenv is\n+    installed. :pr:`2416`\n -   When passing a full URL to the test client, the scheme in the URL is\n-    used instead of :data:PREFERRED_URL_SCHEME. :pr:2430\n--   :attr:Flask.logger has been simplified. LOGGER_NAME and\n-    LOGGER_HANDLER_POLICY config was removed. The logger is always\n-    named flask.app. The level is only set on first access, it\n-    doesnt check :attr:Flask.debug each time. Only one format is\n-    used, not different ones depending on :attr:Flask.debug. No\n+    used instead of :data:`PREFERRED_URL_SCHEME`. :pr:`2430`\n+-   :attr:`Flask.logger` has been simplified. ``LOGGER_NAME`` and\n+    ``LOGGER_HANDLER_POLICY`` config was removed. The logger is always\n+    named ``flask.app``. The level is only set on first access, it\n+    doesn\'t check :attr:`Flask.debug` each time. Only one format is\n+    used, not different ones depending on :attr:`Flask.debug`. No\n     handlers are removed, and a handler is only added if no handlers are\n-    already configured. :pr:2436\n--   Blueprint view function names may not contain dots. :pr:2450\n--   Fix a ValueError caused by invalid Range requests in some\n-    cases. :issue:2526\n--   The development server uses threads by default. :pr:2529\n--   Loading config files with silent=True will ignore\n-    :data:~errno.ENOTDIR errors. :pr:2581\n--   Pass --cert and --key options to flask run to run the\n-    development server over HTTPS. :pr:2606\n--   Added :data:SESSION_COOKIE_SAMESITE to control the SameSite\n-    attribute on the session cookie. :pr:2607\n--   Added :meth:~flask.Flask.test_cli_runner to create a Click runner\n-    that can invoke Flask CLI commands for testing. :pr:2636\n+    already configured. :pr:`2436`\n+-   Blueprint view function names may not contain dots. :pr:`2450`\n+-   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n+    cases. :issue:`2526`\n+-   The development server uses threads by default. :pr:`2529`\n+-   Loading config files with ``silent=True`` will ignore\n+    :data:`~errno.ENOTDIR` errors. :pr:`2581`\n+-   Pass ``--cert`` and ``--key`` options to ``flask run`` to run the\n+    development server over HTTPS. :pr:`2606`\n+-   Added :data:`SESSION_COOKIE_SAMESITE` to control the ``SameSite``\n+    attribute on the session cookie. :pr:`2607`\n+-   Added :meth:`~flask.Flask.test_cli_runner` to create a Click runner\n+    that can invoke Flask CLI commands for testing. :pr:`2636`\n -   Subdomain matching is disabled by default and setting\n-    :data:SERVER_NAME does not implicitly enable it. It can be enabled\n-    by passing subdomain_matching=True to the Flask constructor.\n-    :pr:2635\n+    :data:`SERVER_NAME` does not implicitly enable it. It can be enabled\n+    by passing ``subdomain_matching=True`` to the ``Flask`` constructor.\n+    :pr:`2635`\n -   A single trailing slash is stripped from the blueprint\n-    url_prefix when it is registered with the app. :pr:2629\n--   :meth:Request.get_json doesnt cache the result if parsing fails\n-    when silent is true. :issue:2651\n--   :func:Request.get_json no longer accepts arbitrary encodings.\n-    Incoming JSON should be encoded using UTF-8 per :rfc:8259, but\n-    Flask will autodetect UTF-8, -16, or -32. :pr:2691\n--   Added :data:MAX_COOKIE_SIZE and :attr:Response.max_cookie_size\n+    ``url_prefix`` when it is registered with the app. :pr:`2629`\n+-   :meth:`Request.get_json` doesn\'t cache the result if parsing fails\n+    when ``silent`` is true. :issue:`2651`\n+-   :func:`Request.get_json` no longer accepts arbitrary encodings.\n+    Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n+    Flask will autodetect UTF-8, -16, or -32. :pr:`2691`\n+-   Added :data:`MAX_COOKIE_SIZE` and :attr:`Response.max_cookie_size`\n     to control when Werkzeug warns about large cookies that browsers may\n-    ignore. :pr:2693\n+    ignore. :pr:`2693`\n -   Updated documentation theme to make docs look better in small\n-    windows. :pr:2709\n+    windows. :pr:`2709`\n -   Rewrote the tutorial docs and example project to take a more\n     structured approach to help new users avoid common pitfalls.\n-    :pr:2676\n+    :pr:`2676`\n \n \n Version 0.12.4\n@@ -313,7 +313,7 @@ Version 0.12.4\n \n Released 2018-04-29\n \n--   Repackage 0.12.3 to fix package layout issue. :issue:2728\n+-   Repackage 0.12.3 to fix package layout issue. :issue:`2728`\n \n \n Version 0.12.3\n@@ -321,12 +321,12 @@ Version 0.12.3\n \n Released 2018-04-26\n \n--   :func:Request.get_json no longer accepts arbitrary encodings.\n-    Incoming JSON should be encoded using UTF-8 per :rfc:8259, but\n-    Flask will autodetect UTF-8, -16, or -32. :issue:2692\n--   Fix a Python warning about imports when using python -m flask.\n-    :issue:2666\n--   Fix a ValueError caused by invalid Range requests in some\n+-   :func:`Request.get_json` no longer accepts arbitrary encodings.\n+    Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n+    Flask will autodetect UTF-8, -16, or -32. :issue:`2692`\n+-   Fix a Python warning about imports when using ``python -m flask``.\n+    :issue:`2666`\n+-   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n     cases.\n \n \n@@ -335,7 +335,7 @@ Version 0.12.2\n \n Released 2017-05-16\n \n--   Fix a bug in safe_join on Windows.\n+-   Fix a bug in ``safe_join`` on Windows.\n \n \n Version 0.12.1\n@@ -343,14 +343,14 @@ Version 0.12.1\n \n Released 2017-03-31\n \n--   Prevent flask run from showing a NoAppException when an\n-    ImportError occurs within the imported application module.\n--   Fix encoding behavior of app.config.from_pyfile for Python 3.\n-    :issue:2118\n--   Use the SERVER_NAME config if it is present as default values\n-    for app.run. :issue:2109, :pr:2152\n--   Call ctx.auto_pop with the exception object instead of None,\n-    in the event that a BaseException such as KeyboardInterrupt\n+-   Prevent ``flask run`` from showing a ``NoAppException`` when an\n+    ``ImportError`` occurs within the imported application module.\n+-   Fix encoding behavior of ``app.config.from_pyfile`` for Python 3.\n+    :issue:`2118`\n+-   Use the ``SERVER_NAME`` config if it is present as default values\n+    for ``app.run``. :issue:`2109`, :pr:`2152`\n+-   Call ``ctx.auto_pop`` with the exception object instead of ``None``,\n+    in the event that a ``BaseException`` such as ``KeyboardInterrupt``\n     is raised in a request handler.\n \n \n@@ -359,22 +359,22 @@ Version 0.12\n \n Released 2016-12-21, codename Punsch\n \n--   The cli command now responds to --version.\n+-   The cli command now responds to ``--version``.\n -   Mimetype guessing and ETag generation for file-like objects in\n-    send_file has been removed. :issue:104, :pr1849\n--   Mimetype guessing in send_file now fails loudly and doesnt fall\n-    back to application/octet-stream. :pr:1988\n--   Make flask.safe_join able to join multiple paths like\n-    os.path.join :pr:1730\n+    ``send_file`` has been removed. :issue:`104`, :pr`1849`\n+-   Mimetype guessing in ``send_file`` now fails loudly and doesn\'t fall\n+    back to ``application/octet-stream``. :pr:`1988`\n+-   Make ``flask.safe_join`` able to join multiple paths like\n+    ``os.path.join`` :pr:`1730`\n -   Revert a behavior change that made the dev server crash instead of\n-    returning an Internal Server Error. :pr:2006\n+    returning an Internal Server Error. :pr:`2006`\n -   Correctly invoke response handlers for both regular request\n     dispatching as well as error handlers.\n -   Disable logger propagation by default for the app logger.\n--   Add support for range requests in send_file.\n--   app.test_client includes preset default environment, which can\n-    now be directly set, instead of per client.get.\n--   Fix crash when running under PyPy3. :pr:1814\n+-   Add support for range requests in ``send_file``.\n+-   ``app.test_client`` includes preset default environment, which can\n+    now be directly set, instead of per ``client.get``.\n+-   Fix crash when running under PyPy3. :pr:`1814`\n \n \n Version 0.11.1\n@@ -382,8 +382,8 @@ Version 0.11.1\n \n Released 2016-06-07\n \n--   Fixed a bug that prevented FLASK_APP=foobar/__init__.py from\n-    working. :pr:1872\n+-   Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from\n+    working. :pr:`1872`\n \n \n Version 0.11\n@@ -392,98 +392,98 @@ Version 0.11\n Released 2016-05-29, codename Absinthe\n \n -   Added support to serializing top-level arrays to\n-    :func:flask.jsonify. This introduces a security risk in ancient\n-    browsers. See :ref:json-security for details.\n+    :func:`flask.jsonify`. This introduces a security risk in ancient\n+    browsers. See :ref:`json-security` for details.\n -   Added before_render_template signal.\n--   Added **kwargs to :meth:flask.Test.test_client to support\n+-   Added ``**kwargs`` to :meth:`flask.Test.test_client` to support\n     passing additional keyword arguments to the constructor of\n-    :attr:flask.Flask.test_client_class.\n--   Added SESSION_REFRESH_EACH_REQUEST config key that controls the\n-    set-cookie behavior. If set to True a permanent session will be\n+    :attr:`flask.Flask.test_client_class`.\n+-   Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the\n+    set-cookie behavior. If set to ``True`` a permanent session will be\n     refreshed each request and get their lifetime extended, if set to\n-    False it will only be modified if the session actually modifies.\n+    ``False`` it will only be modified if the session actually modifies.\n     Non permanent sessions are not affected by this and will always\n     expire if the browser window closes.\n -   Made Flask support custom JSON mimetypes for incoming data.\n--   Added support for returning tuples in the form (response,\n-    headers) from a view function.\n--   Added :meth:flask.Config.from_json.\n--   Added :attr:flask.Flask.config_class.\n--   Added :meth:flask.Config.get_namespace.\n+-   Added support for returning tuples in the form ``(response,\n+    headers)`` from a view function.\n+-   Added :meth:`flask.Config.from_json`.\n+-   Added :attr:`flask.Flask.config_class`.\n+-   Added :meth:`flask.Config.get_namespace`.\n -   Templates are no longer automatically reloaded outside of debug\n-    mode. This can be configured with the new TEMPLATES_AUTO_RELOAD\n+    mode. This can be configured with the new ``TEMPLATES_AUTO_RELOAD``\n     config key.\n--   Added a workaround for a limitation in Python 3.3s namespace\n+-   Added a workaround for a limitation in Python 3.3\'s namespace\n     loader.\n--   Added support for explicit root paths when using Python 3.3s\n+-   Added support for explicit root paths when using Python 3.3\'s\n     namespace packages.\n--   Added :command:flask and the flask.cli module to start the\n+-   Added :command:`flask` and the ``flask.cli`` module to start the\n     local debug server through the click CLI system. This is recommended\n-    over the old flask.run() method as it works faster and more\n+    over the old ``flask.run()`` method as it works faster and more\n     reliable due to a different design and also replaces\n-    Flask-Script.\n+    ``Flask-Script``.\n -   Error handlers that match specific classes are now checked first,\n     thereby allowing catching exceptions that are subclasses of HTTP\n-    exceptions (in werkzeug.exceptions). This makes it possible for\n+    exceptions (in ``werkzeug.exceptions``). This makes it possible for\n     an extension author to create exceptions that will by default result\n     in the HTTP error of their choosing, but may be caught with a custom\n     error handler if desired.\n--   Added :meth:flask.Config.from_mapping.\n+-   Added :meth:`flask.Config.from_mapping`.\n -   Flask will now log by default even if debug is disabled. The log\n     format is now hardcoded but the default log handling can be disabled\n-    through the LOGGER_HANDLER_POLICY configuration key.\n+    through the ``LOGGER_HANDLER_POLICY`` configuration key.\n -   Removed deprecated module functionality.\n--   Added the EXPLAIN_TEMPLATE_LOADING config flag which when\n+-   Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when\n     enabled will instruct Flask to explain how it locates templates.\n     This should help users debug when the wrong templates are loaded.\n -   Enforce blueprint handling in the order they were registered for\n     template loading.\n -   Ported test suite to py.test.\n--   Deprecated request.json in favour of request.get_json().\n+-   Deprecated ``request.json`` in favour of ``request.get_json()``.\n -   Add ""pretty"" and ""compressed"" separators definitions in jsonify()\n     method. Reduces JSON response size when\n-    JSONIFY_PRETTYPRINT_REGULAR=False by removing unnecessary white\n+    ``JSONIFY_PRETTYPRINT_REGULAR=False`` by removing unnecessary white\n     space included by default after separators.\n -   JSON responses are now terminated with a newline character, because\n     it is a convention that UNIX text files end with a newline and some\n-    clients dont deal well when this newline is missing. This came up\n+    clients don\'t deal well when this newline is missing. This came up\n     originally as a part of\n-    https://github.com/postmanlabs/httpbin/issues/168. :pr:1262\n--   The automatically provided OPTIONS method is now correctly\n+    https://github.com/postmanlabs/httpbin/issues/168. :pr:`1262`\n+-   The automatically provided ``OPTIONS`` method is now correctly\n     disabled if the user registered an overriding rule with the\n-    lowercase-version options. :issue:1288\n--   flask.json.jsonify now supports the datetime.date type.\n-    :pr:1326\n--   Dont leak exception info of already caught exceptions to context\n-    teardown handlers. :pr:1393\n--   Allow custom Jinja environment subclasses. :pr:1422\n+    lowercase-version ``options``. :issue:`1288`\n+-   ``flask.json.jsonify`` now supports the ``datetime.date`` type.\n+    :pr:`1326`\n+-   Don\'t leak exception info of already caught exceptions to context\n+    teardown handlers. :pr:`1393`\n+-   Allow custom Jinja environment subclasses. :pr:`1422`\n -   Updated extension dev guidelines.\n--   flask.g now has pop() and setdefault methods.\n--   Turn on autoescape for flask.templating.render_template_string\n-    by default. :pr:1515\n--   flask.ext is now deprecated. :pr:1484\n--   send_from_directory now raises BadRequest if the filename is\n-    invalid on the server OS. :pr:1763\n--   Added the JSONIFY_MIMETYPE configuration variable. :pr:1728\n+-   ``flask.g`` now has ``pop()`` and ``setdefault`` methods.\n+-   Turn on autoescape for ``flask.templating.render_template_string``\n+    by default. :pr:`1515`\n+-   ``flask.ext`` is now deprecated. :pr:`1484`\n+-   ``send_from_directory`` now raises BadRequest if the filename is\n+    invalid on the server OS. :pr:`1763`\n+-   Added the ``JSONIFY_MIMETYPE`` configuration variable. :pr:`1728`\n -   Exceptions during teardown handling will no longer leave bad\n     application contexts lingering around.\n--   Fixed broken test_appcontext_signals() test case.\n--   Raise an :exc:AttributeError in :func:flask.helpers.find_package\n+-   Fixed broken ``test_appcontext_signals()`` test case.\n+-   Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package`\n     with a useful message explaining why it is raised when a PEP 302\n-    import hook is used without an is_package() method.\n+    import hook is used without an ``is_package()`` method.\n -   Fixed an issue causing exceptions raised before entering a request\n     or app context to be passed to teardown handlers.\n -   Fixed an issue with query parameters getting removed from requests\n     in the test client when absolute URLs were requested.\n--   Made @before_first_request into a decorator as intended.\n+-   Made ``@before_first_request`` into a decorator as intended.\n -   Fixed an etags bug when sending a file streams with a name.\n--   Fixed send_from_directory not expanding to the application root\n+-   Fixed ``send_from_directory`` not expanding to the application root\n     path correctly.\n -   Changed logic of before first request handlers to flip the flag\n     after invoking. This will allow some uses that are potentially\n     dangerous but should probably be permitted.\n -   Fixed Python 3 bug when a handler from\n-    app.url_build_error_handlers reraises the BuildError.\n+    ``app.url_build_error_handlers`` reraises the ``BuildError``.\n \n \n Version 0.10.1\n@@ -491,8 +491,8 @@ Version 0.10.1\n \n Released 2013-06-14\n \n--   Fixed an issue where |tojson was not quoting single quotes which\n-    made the filter not work properly in HTML attributes. Now its\n+-   Fixed an issue where ``|tojson`` was not quoting single quotes which\n+    made the filter not work properly in HTML attributes. Now it\'s\n     possible to use that filter in single quoted attributes. This should\n     make using that filter with angular.js easier.\n -   Added support for byte strings back to the session system. This\n@@ -509,15 +509,15 @@ Released 2013-06-13, codename Limoncello\n \n -   Changed default cookie serialization format from pickle to JSON to\n     limit the impact an attacker can do if the secret key leaks. See\n-    :ref:upgrading-to-010 for more information.\n--   Added template_test methods in addition to the already existing\n-    template_filter method family.\n--   Added template_global methods in addition to the already\n-    existing template_filter method family.\n+    :ref:`upgrading-to-010` for more information.\n+-   Added ``template_test`` methods in addition to the already existing\n+    ``template_filter`` method family.\n+-   Added ``template_global`` methods in addition to the already\n+    existing ``template_filter`` method family.\n -   Set the content-length header for x-sendfile.\n--   tojson filter now does not escape script blocks in HTML5\n+-   ``tojson`` filter now does not escape script blocks in HTML5\n     parsers.\n--   tojson used in templates is now safe by default due. This was\n+-   ``tojson`` used in templates is now safe by default due. This was\n     allowed due to the different escaping behavior.\n -   Flask will now raise an error if you attempt to register a new\n     function on an already used endpoint.\n@@ -525,41 +525,41 @@ Released 2013-06-13, codename Limoncello\n     serialization of datetime objects. This allows much easier\n     customization of how JSON is handled by Flask or any Flask\n     extension.\n--   Removed deprecated internal flask.session module alias. Use\n-    flask.sessions instead to get the session module. This is not to\n-    be confused with flask.session the session proxy.\n+-   Removed deprecated internal ``flask.session`` module alias. Use\n+    ``flask.sessions`` instead to get the session module. This is not to\n+    be confused with ``flask.session`` the session proxy.\n -   Templates can now be rendered without request context. The behavior\n-    is slightly different as the request, session and g\n-    objects will not be available and blueprints context processors are\n+    is slightly different as the ``request``, ``session`` and ``g``\n+    objects will not be available and blueprint\'s context processors are\n     not called.\n -   The config object is now available to the template as a real global\n     and not through a context processor which makes it available even in\n     imported templates by default.\n -   Added an option to generate non-ascii encoded JSON which should\n-    result in less bytes being transmitted over the network. Its\n+    result in less bytes being transmitted over the network. It\'s\n     disabled by default to not cause confusion with existing libraries\n-    that might expect flask.json.dumps to return bytestrings by\n+    that might expect ``flask.json.dumps`` to return bytestrings by\n     default.\n--   flask.g is now stored on the app context instead of the request\n+-   ``flask.g`` is now stored on the app context instead of the request\n     context.\n--   flask.g now gained a get() method for not erroring out on\n+-   ``flask.g`` now gained a ``get()`` method for not erroring out on\n     non existing items.\n--   flask.g now can be used with the in operator to see whats\n+-   ``flask.g`` now can be used with the ``in`` operator to see what\'s\n     defined and it now is iterable and will yield all attributes stored.\n--   flask.Flask.request_globals_class got renamed to\n-    flask.Flask.app_ctx_globals_class which is a better name to what\n+-   ``flask.Flask.request_globals_class`` got renamed to\n+    ``flask.Flask.app_ctx_globals_class`` which is a better name to what\n     it does since 0.10.\n--   request, session and g are now also added as proxies to\n+-   ``request``, ``session`` and ``g`` are now also added as proxies to\n     the template context which makes them available in imported\n     templates. One has to be very careful with those though because\n     usage outside of macros might cause caching.\n -   Flask will no longer invoke the wrong error handlers if a proxy\n     exception is passed through.\n--   Added a workaround for chromes cookies in localhost not working as\n+-   Added a workaround for chrome\'s cookies in localhost not working as\n     intended with domain names.\n -   Changed logic for picking defaults for cookie values from sessions\n     to work better with Google Chrome.\n--   Added message_flashed signal that simplifies flashing testing.\n+-   Added ``message_flashed`` signal that simplifies flashing testing.\n -   Added support for copying of request contexts for better working\n     with greenlets.\n -   Removed custom JSON HTTP exception subclasses. If you were relying\n@@ -573,14 +573,14 @@ Released 2013-06-13, codename Limoncello\n -   Request context preservation in debug mode now keeps the exception\n     information around which means that teardown handlers are able to\n     distinguish error from success cases.\n--   Added the JSONIFY_PRETTYPRINT_REGULAR configuration variable.\n+-   Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable.\n -   Flask now orders JSON keys by default to not trash HTTP caches due\n     to different hash seeds between different workers.\n--   Added appcontext_pushed and appcontext_popped signals.\n--   The builtin run method now takes the SERVER_NAME into account\n+-   Added ``appcontext_pushed`` and ``appcontext_popped`` signals.\n+-   The builtin run method now takes the ``SERVER_NAME`` into account\n     when picking the default port to run on.\n--   Added flask.request.get_json() as a replacement for the old\n-    flask.request.json property.\n+-   Added ``flask.request.get_json()`` as a replacement for the old\n+    ``flask.request.json`` property.\n \n \n Version 0.9\n@@ -588,77 +588,77 @@ Version 0.9\n \n Released 2012-07-01, codename Campari\n \n--   The :func:flask.Request.on_json_loading_failed now returns a JSON\n+-   The :func:`flask.Request.on_json_loading_failed` now returns a JSON\n     formatted response by default.\n--   The :func:flask.url_for function now can generate anchors to the\n+-   The :func:`flask.url_for` function now can generate anchors to the\n     generated links.\n--   The :func:flask.url_for function now can also explicitly generate\n+-   The :func:`flask.url_for` function now can also explicitly generate\n     URL rules specific to a given HTTP method.\n -   Logger now only returns the debug log setting if it was not set\n     explicitly.\n -   Unregister a circular dependency between the WSGI environment and\n     the request object when shutting down the request. This means that\n-    environ werkzeug.request will be None after the response was\n+    environ ``werkzeug.request`` will be ``None`` after the response was\n     returned to the WSGI server but has the advantage that the garbage\n     collector is not needed on CPython to tear down the request unless\n     the user created circular dependencies themselves.\n -   Session is now stored after callbacks so that if the session payload\n     is stored in the session you can still modify it in an after request\n     callback.\n--   The :class:flask.Flask class will avoid importing the provided\n+-   The :class:`flask.Flask` class will avoid importing the provided\n     import name if it can (the required first parameter), to benefit\n     tools which build Flask instances programmatically. The Flask class\n     will fall back to using import on systems with custom module hooks,\n     e.g. Google App Engine, or when the import name is inside a zip\n     archive (usually a .egg) prior to Python 2.7.\n -   Blueprints now have a decorator to add custom template filters\n-    application wide, :meth:flask.Blueprint.app_template_filter.\n+    application wide, :meth:`flask.Blueprint.app_template_filter`.\n -   The Flask and Blueprint classes now have a non-decorator method for\n     adding custom template filters application wide,\n-    :meth:flask.Flask.add_template_filter and\n-    :meth:flask.Blueprint.add_app_template_filter.\n--   The :func:flask.get_flashed_messages function now allows rendering\n+    :meth:`flask.Flask.add_template_filter` and\n+    :meth:`flask.Blueprint.add_app_template_filter`.\n+-   The :func:`flask.get_flashed_messages` function now allows rendering\n     flashed message categories in separate blocks, through a\n-    category_filter argument.\n--   The :meth:flask.Flask.run method now accepts None for host\n-    and port arguments, using default values when None. This\n+    ``category_filter`` argument.\n+-   The :meth:`flask.Flask.run` method now accepts ``None`` for ``host``\n+    and ``port`` arguments, using default values when ``None``. This\n     allows for calling run using configuration values, e.g.\n-    app.run(app.config.get(MYHOST), app.config.get(MYPORT)),\n+    ``app.run(app.config.get(\'MYHOST\'), app.config.get(\'MYPORT\'))``,\n     with proper behavior whether or not a config file is provided.\n--   The :meth:flask.render_template method now accepts a either an\n+-   The :meth:`flask.render_template` method now accepts a either an\n     iterable of template names or a single template name. Previously, it\n     only accepted a single template name. On an iterable, the first\n     template found is rendered.\n--   Added :meth:flask.Flask.app_context which works very similar to\n+-   Added :meth:`flask.Flask.app_context` which works very similar to\n     the request context but only provides access to the current\n     application. This also adds support for URL generation without an\n     active request context.\n -   View functions can now return a tuple with the first instance being\n-    an instance of :class:flask.Response. This allows for returning\n-    jsonify(error=""error msg""), 400 from a view function.\n--   :class:~flask.Flask and :class:~flask.Blueprint now provide a\n-    :meth:~flask.Flask.get_send_file_max_age hook for subclasses to\n+    an instance of :class:`flask.Response`. This allows for returning\n+    ``jsonify(error=""error msg""), 400`` from a view function.\n+-   :class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a\n+    :meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to\n     override behavior of serving static files from Flask when using\n-    :meth:flask.Flask.send_static_file (used for the default static\n-    file handler) and :func:~flask.helpers.send_file. This hook is\n+    :meth:`flask.Flask.send_static_file` (used for the default static\n+    file handler) and :func:`~flask.helpers.send_file`. This hook is\n     provided a filename, which for example allows changing cache\n-    controls by file extension. The default max-age for send_file\n+    controls by file extension. The default max-age for ``send_file``\n     and static files can be configured through a new\n-    SEND_FILE_MAX_AGE_DEFAULT configuration variable, which is used\n-    in the default get_send_file_max_age implementation.\n+    ``SEND_FILE_MAX_AGE_DEFAULT`` configuration variable, which is used\n+    in the default ``get_send_file_max_age`` implementation.\n -   Fixed an assumption in sessions implementation which could break\n     message flashing on sessions implementations which use external\n     storage.\n -   Changed the behavior of tuple return values from functions. They are\n     no longer arguments to the response object, they now have a defined\n     meaning.\n--   Added :attr:flask.Flask.request_globals_class to allow a specific\n-    class to be used on creation of the :data:~flask.g instance of\n+-   Added :attr:`flask.Flask.request_globals_class` to allow a specific\n+    class to be used on creation of the :data:`~flask.g` instance of\n     each request.\n--   Added required_methods attribute to view functions to force-add\n+-   Added ``required_methods`` attribute to view functions to force-add\n     methods on registration.\n--   Added :func:flask.after_this_request.\n--   Added :func:flask.stream_with_context and the ability to push\n+-   Added :func:`flask.after_this_request`.\n+-   Added :func:`flask.stream_with_context` and the ability to push\n     contexts multiple times without producing unexpected behavior.\n \n \n@@ -667,7 +667,7 @@ Version 0.8.1\n \n Released 2012-07-01\n \n--   Fixed an issue with the undocumented flask.session module to not\n+-   Fixed an issue with the undocumented ``flask.session`` module to not\n     work properly on Python 2.5. It should not be used but did cause\n     some problems for package managers.\n \n@@ -693,7 +693,7 @@ Released 2011-09-29, codename Rakija\n     time.\n -   Added the ability to register callbacks that are only triggered once\n     at the beginning of the first request.\n-    (:meth:Flask.before_first_request)\n+    (:meth:`Flask.before_first_request`)\n -   Malformed JSON data will now trigger a bad request HTTP exception\n     instead of a value error which usually would result in a 500\n     internal server error if not handled. This is a backwards\n@@ -702,28 +702,28 @@ Released 2011-09-29, codename Rakija\n     modules are located but also an instance path which is the\n     designated place to drop files that are modified at runtime (uploads\n     etc.). Also this is conceptually only instance depending and outside\n-    version control so its the perfect place to put configuration files\n-    etc. For more information see :ref:instance-folders.\n--   Added the APPLICATION_ROOT configuration variable.\n--   Implemented :meth:~flask.testing.TestClient.session_transaction to\n+    version control so it\'s the perfect place to put configuration files\n+    etc. For more information see :ref:`instance-folders`.\n+-   Added the ``APPLICATION_ROOT`` configuration variable.\n+-   Implemented :meth:`~flask.testing.TestClient.session_transaction` to\n     easily modify sessions from the test environment.\n--   Refactored test client internally. The APPLICATION_ROOT\n-    configuration variable as well as SERVER_NAME are now properly\n+-   Refactored test client internally. The ``APPLICATION_ROOT``\n+    configuration variable as well as ``SERVER_NAME`` are now properly\n     used by the test client as defaults.\n--   Added :attr:flask.views.View.decorators to support simpler\n+-   Added :attr:`flask.views.View.decorators` to support simpler\n     decorating of pluggable (class-based) views.\n -   Fixed an issue where the test client if used with the ""with""\n     statement did not trigger the execution of the teardown handlers.\n -   Added finer control over the session cookie parameters.\n -   HEAD requests to a method view now automatically dispatch to the\n-    get method if no handler was implemented.\n--   Implemented the virtual :mod:flask.ext package to import\n+    ``get`` method if no handler was implemented.\n+-   Implemented the virtual :mod:`flask.ext` package to import\n     extensions from.\n -   The context preservation on exceptions is now an integral component\n     of Flask itself and no longer of the test client. This cleaned up\n     some internal logic and lowers the odds of runaway request contexts\n     in unittests.\n--   Fixed the Jinja2 environments list_templates method not\n+-   Fixed the Jinja2 environment\'s ``list_templates`` method not\n     returning the correct names when blueprints or modules were\n     involved.\n \n@@ -751,57 +751,57 @@ Version 0.7\n \n Released 2011-06-28, codename Grappa\n \n--   Added :meth:~flask.Flask.make_default_options_response which can\n-    be used by subclasses to alter the default behavior for OPTIONS\n+-   Added :meth:`~flask.Flask.make_default_options_response` which can\n+    be used by subclasses to alter the default behavior for ``OPTIONS``\n     responses.\n--   Unbound locals now raise a proper :exc:RuntimeError instead of an\n-    :exc:AttributeError.\n+-   Unbound locals now raise a proper :exc:`RuntimeError` instead of an\n+    :exc:`AttributeError`.\n -   Mimetype guessing and etag support based on file objects is now\n-    deprecated for :func:flask.send_file because it was unreliable.\n+    deprecated for :func:`flask.send_file` because it was unreliable.\n     Pass filenames instead or attach your own etags and provide a proper\n     mimetype by hand.\n -   Static file handling for modules now requires the name of the static\n     folder to be supplied explicitly. The previous autodetection was not\n-    reliable and caused issues on Googles App Engine. Until 1.0 the old\n+    reliable and caused issues on Google\'s App Engine. Until 1.0 the old\n     behavior will continue to work but issue dependency warnings.\n -   Fixed a problem for Flask to run on jython.\n--   Added a PROPAGATE_EXCEPTIONS configuration variable that can be\n+-   Added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be\n     used to flip the setting of exception propagation which previously\n-    was linked to DEBUG alone and is now linked to either DEBUG\n-    or TESTING.\n+    was linked to ``DEBUG`` alone and is now linked to either ``DEBUG``\n+    or ``TESTING``.\n -   Flask no longer internally depends on rules being added through the\n-    add_url_rule function and can now also accept regular werkzeug\n+    ``add_url_rule`` function and can now also accept regular werkzeug\n     rules added to the url map.\n--   Added an endpoint method to the flask application object which\n+-   Added an ``endpoint`` method to the flask application object which\n     allows one to register a callback to an arbitrary endpoint with a\n     decorator.\n -   Use Last-Modified for static file sending instead of Date which was\n     incorrectly introduced in 0.6.\n--   Added create_jinja_loader to override the loader creation\n+-   Added ``create_jinja_loader`` to override the loader creation\n     process.\n--   Implemented a silent flag for config.from_pyfile.\n--   Added teardown_request decorator, for functions that should run\n+-   Implemented a silent flag for ``config.from_pyfile``.\n+-   Added ``teardown_request`` decorator, for functions that should run\n     at the end of a request regardless of whether an exception occurred.\n-    Also the behavior for after_request was changed. Its now no\n+    Also the behavior for ``after_request`` was changed. It\'s now no\n     longer executed when an exception is raised. See\n-    :ref:upgrading-to-new-teardown-handling\n--   Implemented :func:flask.has_request_context\n--   Deprecated init_jinja_globals. Override the\n-    :meth:~flask.Flask.create_jinja_environment method instead to\n+    :ref:`upgrading-to-new-teardown-handling`\n+-   Implemented :func:`flask.has_request_context`\n+-   Deprecated ``init_jinja_globals``. Override the\n+    :meth:`~flask.Flask.create_jinja_environment` method instead to\n     achieve the same functionality.\n--   Added :func:flask.safe_join\n+-   Added :func:`flask.safe_join`\n -   The automatic JSON request data unpacking now looks at the charset\n     mimetype parameter.\n--   Dont modify the session on :func:flask.get_flashed_messages if\n+-   Don\'t modify the session on :func:`flask.get_flashed_messages` if\n     there are no messages in the session.\n--   before_request handlers are now able to abort requests with\n+-   ``before_request`` handlers are now able to abort requests with\n     errors.\n -   It is not possible to define user exception handlers. That way you\n     can provide custom error messages from a central hub for certain\n     errors that might occur during request processing (for instance\n     database connection errors, timeouts from remote resources etc.).\n -   Blueprints can provide blueprint specific error handlers.\n--   Implemented generic :ref:views (class-based views).\n+-   Implemented generic :ref:`views` (class-based views).\n \n \n Version 0.6.1\n@@ -809,8 +809,8 @@ Version 0.6.1\n \n Released 2010-12-31\n \n--   Fixed an issue where the default OPTIONS response was not\n-    exposing all valid methods in the Allow header.\n+-   Fixed an issue where the default ``OPTIONS`` response was not\n+    exposing all valid methods in the ``Allow`` header.\n -   Jinja2 template loading syntax now allows ""./"" in front of a\n     template load path. Previously this caused issues with module\n     setups.\n@@ -830,27 +830,27 @@ Released 2010-07-27, codename Whisky\n -   After request functions are now called in reverse order of\n     registration.\n -   OPTIONS is now automatically implemented by Flask unless the\n-    application explicitly adds OPTIONS as method to the URL rule. In\n+    application explicitly adds \'OPTIONS\' as method to the URL rule. In\n     this case no automatic OPTIONS handling kicks in.\n -   Static rules are now even in place if there is no static folder for\n     the module. This was implemented to aid GAE which will remove the\n-    static folder if its part of a mapping in the .yml file.\n--   The :attr:~flask.Flask.config is now available in the templates as\n-    config.\n+    static folder if it\'s part of a mapping in the .yml file.\n+-   The :attr:`~flask.Flask.config` is now available in the templates as\n+    ``config``.\n -   Context processors will no longer override values passed directly to\n     the render function.\n -   Added the ability to limit the incoming request data with the new\n-    MAX_CONTENT_LENGTH configuration value.\n--   The endpoint for the :meth:flask.Module.add_url_rule method is now\n+    ``MAX_CONTENT_LENGTH`` configuration value.\n+-   The endpoint for the :meth:`flask.Module.add_url_rule` method is now\n     optional to be consistent with the function of the same name on the\n     application object.\n--   Added a :func:flask.make_response function that simplifies\n+-   Added a :func:`flask.make_response` function that simplifies\n     creating response object instances in views.\n -   Added signalling support based on blinker. This feature is currently\n     optional and supposed to be used by extensions and applications. If\n-    you want to use it, make sure to have blinker_ installed.\n+    you want to use it, make sure to have `blinker`_ installed.\n -   Refactored the way URL adapters are created. This process is now\n-    fully customizable with the :meth:~flask.Flask.create_url_adapter\n+    fully customizable with the :meth:`~flask.Flask.create_url_adapter`\n     method.\n -   Modules can now register for a subdomain instead of just an URL\n     prefix. This makes it possible to bind a whole module to a\n@@ -884,19 +884,19 @@ Released 2010-07-06, codename Calvados\n \n -   Fixed a bug with subdomains that was caused by the inability to\n     specify the server name. The server name can now be set with the\n-    SERVER_NAME config key. This key is now also used to set the\n+    ``SERVER_NAME`` config key. This key is now also used to set the\n     session cookie cross-subdomain wide.\n -   Autoescaping is no longer active for all templates. Instead it is\n-    only active for .html, .htm, .xml and .xhtml. Inside\n-    templates this behavior can be changed with the autoescape tag.\n+    only active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``. Inside\n+    templates this behavior can be changed with the ``autoescape`` tag.\n -   Refactored Flask internally. It now consists of more than a single\n     file.\n--   :func:flask.send_file now emits etags and has the ability to do\n+-   :func:`flask.send_file` now emits etags and has the ability to do\n     conditional responses builtin.\n -   (temporarily) dropped support for zipped applications. This was a\n     rarely used feature and led to some confusing behavior.\n -   Added support for per-package template and static-file directories.\n--   Removed support for create_jinja_loader which is no longer used\n+-   Removed support for ``create_jinja_loader`` which is no longer used\n     in 0.5 due to the improved module support.\n -   Added a helper function to expose files from any directory.\n \n@@ -908,7 +908,7 @@ Released 2010-06-18, codename Rakia\n \n -   Added the ability to register application wide error handlers from\n     modules.\n--   :meth:~flask.Flask.after_request handlers are now also invoked if\n+-   :meth:`~flask.Flask.after_request` handlers are now also invoked if\n     the request dies with an exception and an error handling page kicks\n     in.\n -   Test client has not the ability to preserve the request context for\n@@ -916,8 +916,8 @@ Released 2010-06-18, codename Rakia\n     that do not pop the request stack for testing.\n -   Because the Python standard library caches loggers, the name of the\n     logger is configurable now to better support unittests.\n--   Added TESTING switch that can activate unittesting helpers.\n--   The logger switches to DEBUG mode now if debug is enabled.\n+-   Added ``TESTING`` switch that can activate unittesting helpers.\n+-   The logger switches to ``DEBUG`` mode now if debug is enabled.\n \n \n Version 0.3.1\n@@ -925,7 +925,7 @@ Version 0.3.1\n \n Released 2010-05-28\n \n--   Fixed a error reporting bug with :meth:flask.Config.from_envvar\n+-   Fixed a error reporting bug with :meth:`flask.Config.from_envvar`\n -   Removed some unused code from flask\n -   Release does no longer include development leftover files (.git\n     folder for themes, built documentation in zip and pdf file and some\n@@ -938,7 +938,7 @@ Version 0.3\n Released 2010-05-28, codename Schnaps\n \n -   Added support for categories for flashed messages.\n--   The application now configures a :class:logging.Handler and will\n+-   The application now configures a :class:`logging.Handler` and will\n     log request handling exceptions to that logger when not in debug\n     mode. This makes it possible to receive mails on server errors for\n     example.\n@@ -956,14 +956,14 @@ Released 2010-05-12, codename J?germeister\n \n -   Various bugfixes\n -   Integrated JSON support\n--   Added :func:~flask.get_template_attribute helper function.\n--   :meth:~flask.Flask.add_url_rule can now also register a view\n+-   Added :func:`~flask.get_template_attribute` helper function.\n+-   :meth:`~flask.Flask.add_url_rule` can now also register a view\n     function.\n -   Refactored internal request dispatching.\n -   Server listens on 127.0.0.1 by default now to fix issues with\n     chrome.\n -   Added external URL support.\n--   Added support for :func:~flask.send_file\n+-   Added support for :func:`~flask.send_file`\n -   Module support and internal request handling refactoring to better\n     support pluggable applications.\n -   Sessions can be set to be permanent now on a per-session basis.\n'",0,0
README.rst,README.rst,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,2675076cb77fb5d37f54aa05473157ae27be7c42,'fix tests link',"'@@ -62,7 +62,7 @@ Links\n * Releases: https://pypi.org/project/Flask/\n * Code: https://github.com/pallets/flask\n * Issue tracker: https://github.com/pallets/flask/issues\n-* Test status: https://dev.azure.com/pallets/pallets/_build?definitionId=2\n+* Test status: https://dev.azure.com/pallets/flask/_build\n * Official chat: https://discord.gg/t6rrQZH\n \n .. _WSGI: https://wsgi.readthedocs.io\n'",1.0,1.0
CHANGES.rst,CHANGES.rst,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"'@@ -10,6 +10,7 @@ Unreleased\n     requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n -   ``send_file`` url quotes the "":"" and ""/"" characters for more\n     compatible UTF-8 filename support in some browsers. :issue:`3074`\n+-   Fixes for PEP451 import loaders and pytest 5.x.  :issue:`3275`\n \n \n Version 1.0.3\n'",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"""@@ -188,7 +188,7 @@ should be closed.\n         with pytest.raises(sqlite3.ProgrammingError) as e:\n             db.execute('SELECT 1')\n \n-        assert 'closed' in str(e)\n+        assert 'closed' in str(e.value)\n \n The ``init-db`` command should call the ``init_db`` function and output\n a message.\n""",1.0,1.0
examples/tutorial/tests/test_db.py,examples/tutorial/tests/test_db.py,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"""@@ -12,7 +12,7 @@ def test_get_close_db(app):\n     with pytest.raises(sqlite3.ProgrammingError) as e:\n         db.execute('SELECT 1')\n \n-    assert 'closed' in str(e)\n+    assert 'closed' in str(e.value)\n \n \n def test_init_db_command(runner, monkeypatch):\n""",1.0,1.0
flask/helpers.py,flask/helpers.py,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"'@@ -789,19 +789,38 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n         loader.__class__.__name__)\n \n \n-def find_package(import_name):\n-    """"""Finds a package and returns the prefix (or None if the package is\n-    not installed) as well as the folder that contains the package or\n-    module as a tuple.  The package path returned is the module that would\n-    have to be added to the pythonpath in order to make it possible to\n-    import the module.  The prefix is the path below which a UNIX like\n-    folder structure exists (lib, share etc.).\n-    """"""\n-    root_mod_name = import_name.split(\'.\')[0]\n+def _find_package_path(root_mod_name):\n+    """"""Find the path where the module\'s root exists in""""""\n+    if sys.version_info >= (3, 4):\n+        import importlib.util\n+\n+        try:\n+            spec = importlib.util.find_spec(root_mod_name)\n+            if spec is None:\n+                raise ValueError(""not found"")\n+        # ImportError: the machinery told us it does not exist\n+        # ValueError:\n+        #    - the module name was invalid\n+        #    - the module name is __main__\n+        #    - *we* raised `ValueError` due to `spec` being `None`\n+        except (ImportError, ValueError):\n+            pass  # handled below\n+        else:\n+            # namespace package\n+            if spec.origin in {""namespace"", None}:\n+                return os.path.dirname(next(iter(spec.submodule_search_locations)))\n+            # a package (with __init__.py)\n+            elif spec.submodule_search_locations:\n+                return os.path.dirname(os.path.dirname(spec.origin))\n+            # just a normal module\n+            else:\n+                return os.path.dirname(spec.origin)\n+\n+    # we were unable to find the `package_path` using PEP 451 loaders\n     loader = pkgutil.get_loader(root_mod_name)\n-    if loader is None or import_name == \'__main__\':\n+    if loader is None or root_mod_name == \'__main__\':\n         # import name is not found, or interactive/main module\n-        package_path = os.getcwd()\n+        return os.getcwd()\n     else:\n         # For .egg, zipimporter does not have get_filename until Python 2.7.\n         if hasattr(loader, \'get_filename\'):\n@@ -815,17 +834,29 @@ def find_package(import_name):\n             # Google App Engine\'s HardenedModulesHook\n             #\n             # Fall back to imports.\n-            __import__(import_name)\n-            filename = sys.modules[import_name].__file__\n+            __import__(root_mod_name)\n+            filename = sys.modules[root_mod_name].__file__\n         package_path = os.path.abspath(os.path.dirname(filename))\n \n         # In case the root module is a package we need to chop of the\n         # rightmost part.  This needs to go through a helper function\n         # because of python 3.3 namespace packages.\n-        if _matching_loader_thinks_module_is_package(\n-                loader, root_mod_name):\n+        if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n             package_path = os.path.dirname(package_path)\n \n+    return package_path\n+\n+\n+def find_package(import_name):\n+    """"""Finds a package and returns the prefix (or None if the package is\n+    not installed) as well as the folder that contains the package or\n+    module as a tuple.  The package path returned is the module that would\n+    have to be added to the pythonpath in order to make it possible to\n+    import the module.  The prefix is the path below which a UNIX like\n+    folder structure exists (lib, share etc.).\n+    """"""\n+    root_mod_name, _, _ = import_name.partition(\'.\')\n+    package_path = _find_package_path(root_mod_name)\n     site_parent, site_folder = os.path.split(package_path)\n     py_prefix = os.path.abspath(sys.prefix)\n     if package_path.startswith(py_prefix):\n'",4.03125,4.090909090909091
tests/test_basic.py,tests/test_basic.py,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"""@@ -1219,17 +1219,17 @@ def test_response_type_errors():\n \n     with pytest.raises(TypeError) as e:\n         c.get('/none')\n-        assert 'returned None' in str(e)\n+        assert 'returned None' in str(e.value)\n \n     with pytest.raises(TypeError) as e:\n         c.get('/small_tuple')\n-        assert 'tuple must have the form' in str(e)\n+        assert 'tuple must have the form' in str(e.value)\n \n     pytest.raises(TypeError, c.get, '/large_tuple')\n \n     with pytest.raises(TypeError) as e:\n         c.get('/bad_type')\n-        assert 'it was a bool' in str(e)\n+        assert 'it was a bool' in str(e.value)\n \n     pytest.raises(TypeError, c.get, '/bad_wsgi')\n \n@@ -1622,7 +1622,7 @@ def test_debug_mode_complains_after_first_request(app, client):\n         @app.route('/foo')\n         def broken():\n             return 'Meh'\n-    assert 'A setup function was called' in str(e)\n+    assert 'A setup function was called' in str(e.value)\n \n     app.debug = False\n \n@@ -1677,9 +1677,9 @@ def test_routing_redirect_debugging(app, client):\n     with client:\n         with pytest.raises(AssertionError) as e:\n             client.post('/foo', data={})\n-        assert 'http://localhost/foo/' in str(e)\n+        assert 'http://localhost/foo/' in str(e.value)\n         assert ('Make sure to directly send '\n-                'your POST-request to this URL') in str(e)\n+                'your POST-request to this URL') in str(e.value)\n \n         rv = client.get('/foo', data={}, follow_redirects=True)\n         assert rv.data == b'success'\n""",1.078125,1.078125
tests/test_helpers.py,tests/test_helpers.py,a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57,b9c22672724ee3c89cc959bd80d3fcd81afb10e7,'Fixes for PEP451 import loaders and pytest 5.x\n\n- pytest 5.x drops python2 compatibility and therefore only implements PEP 451\n- pytest 5.x made the repr of `ExcInfo` less confusing (fixed tests depending\n  on the old format)',"'@@ -468,8 +468,8 @@ class TestSendfile(object):\n     def test_send_file_object_without_mimetype(self, app, req_ctx):\n         with pytest.raises(ValueError) as excinfo:\n             flask.send_file(StringIO(""LOL""))\n-        assert \'Unable to infer MIME-type\' in str(excinfo)\n-        assert \'no filename is available\' in str(excinfo)\n+        assert \'Unable to infer MIME-type\' in str(excinfo.value)\n+        assert \'no filename is available\' in str(excinfo.value)\n \n         flask.send_file(StringIO(""LOL""), attachment_filename=\'filename\')\n \n'",1.1818181818181819,1.1818181818181819
flask/cli.py,flask/cli.py,3aff003c456ecfd329c29432d941714a0b474d53,043443d2d3432d8c182f059cf2f30967eda73d1f,'Update cli.py',"'@@ -459,7 +459,7 @@ class FlaskGroup(AppGroup):\n     For information as of why this is useful see :ref:`custom-scripts`.\n \n     :param add_default_commands: if this is True then the default run and\n-        shell commands wil be added.\n+        shell commands will be added.\n     :param add_version_option: adds the ``--version`` option.\n     :param create_app: an optional callback that is passed the script info and\n         returns the loaded app.\n'",4.228571428571429,4.228571428571429
CHANGES.rst,CHANGES.rst,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -18,6 +18,12 @@ Unreleased\n     -   :meth:`Flask.finalize_request` is called for all unhandled\n         exceptions even if there is no ``500`` error handler.\n \n+-   :attr:`Flask.logger` takes the same name as\n+    :attr:`Flask.name` (the value passed as\n+    ``Flask(import_name)``. This reverts 1.0\'s behavior of always\n+    logging to ``""flask.app""``, in order to support multiple apps in the\n+    same process. This may require adjusting logging configuration.\n+    :issue:`2866`.\n -   :meth:`flask.RequestContext.copy` includes the current session\n     object in the request context copy. This prevents ``session``\n     pointing to an out-of-date object. :issue:`2935`\n'",0,0
docs/config.rst,docs/config.rst,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -382,7 +382,7 @@ The following configuration values are used internally by Flask:\n \n .. versionchanged:: 1.0\n     ``LOGGER_NAME`` and ``LOGGER_HANDLER_POLICY`` were removed. See\n-    :ref:`logging` for information about configuration.\n+    :doc:`/logging` for information about configuration.\n \n     Added :data:`ENV` to reflect the :envvar:`FLASK_ENV` environment\n     variable.\n'",1.0,1.0
docs/errorhandling.rst,docs/errorhandling.rst,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -231,7 +231,7 @@ errors, use ``getattr`` to get access it for compatibility.\n Logging\n -------\n \n-See :ref:`logging` for information on how to log exceptions, such as by\n+See :doc:`/logging` for information on how to log exceptions, such as by\n emailing them to admins.\n \n \n'",1.5,1.5
docs/logging.rst,docs/logging.rst,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"""@@ -1,12 +1,12 @@\n-.. _logging:\n-\n Logging\n =======\n \n-Flask uses standard Python :mod:`logging`. All Flask-related messages are\n-logged under the ``'flask'`` logger namespace.\n-:meth:`Flask.logger <flask.Flask.logger>` returns the logger named\n-``'flask.app'``, and can be used to log messages for your application. ::\n+Flask uses standard Python :mod:`logging`. Messages about your Flask\n+application are logged with :meth:`app.logger <flask.Flask.logger>`,\n+which takes the same name as :attr:`app.name <flask.Flask.name>`. This\n+logger can also be used to log your own messages.\n+\n+.. code-block:: python\n \n     @app.route('/login', methods=['POST'])\n     def login():\n""",2.0,2.0
src/flask/app.py,src/flask/app.py,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -653,22 +653,26 @@ class Flask(_PackageBoundObject):\n \n     @locked_cached_property\n     def logger(self):\n-        """"""The ``\'flask.app\'`` logger, a standard Python\n-        :class:`~logging.Logger`.\n+        """"""A standard Python :class:`~logging.Logger` for the app, with\n+        the same name as :attr:`name`.\n \n-        In debug mode, the logger\'s :attr:`~logging.Logger.level` will be set\n-        to :data:`~logging.DEBUG`.\n+        In debug mode, the logger\'s :attr:`~logging.Logger.level` will\n+        be set to :data:`~logging.DEBUG`.\n \n-        If there are no handlers configured, a default handler will be added.\n-        See :ref:`logging` for more information.\n+        If there are no handlers configured, a default handler will be\n+        added. See :doc:`/logging` for more information.\n \n-        .. versionchanged:: 1.0\n+        .. versionchanged:: 1.1.0\n+            The logger takes the same name as :attr:`name` rather than\n+            hard-coding ``""flask.app""``.\n+\n+        .. versionchanged:: 1.0.0\n             Behavior was simplified. The logger is always named\n-            ``flask.app``. The level is only set during configuration, it\n-            doesn\'t check ``app.debug`` each time. Only one format is used,\n-            not different ones depending on ``app.debug``. No handlers are\n-            removed, and a handler is only added if no handlers are already\n-            configured.\n+            ``""flask.app""``. The level is only set during configuration,\n+            it doesn\'t check ``app.debug`` each time. Only one format is\n+            used, not different ones depending on ``app.debug``. No\n+            handlers are removed, and a handler is only added if no\n+            handlers are already configured.\n \n         .. versionadded:: 0.3\n         """"""\n'",2.6470588235294117,2.6470588235294117
src/flask/logging.py,src/flask/logging.py,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -57,7 +57,10 @@ default_handler.setFormatter(\n \n \n def create_logger(app):\n-    """"""Get the ``\'flask.app\'`` logger and configure it if needed.\n+    """"""Get the the Flask apps\'s logger and configure it if needed.\n+\n+    The logger name will be the same as\n+    :attr:`app.import_name <flask.Flask.name>`.\n \n     When :attr:`~flask.Flask.debug` is enabled, set the logger level to\n     :data:`logging.DEBUG` if it is not set.\n@@ -66,7 +69,7 @@ def create_logger(app):\n     :class:`~logging.StreamHandler` for\n     :func:`~flask.logging.wsgi_errors_stream` with a basic format.\n     """"""\n-    logger = logging.getLogger(""flask.app"")\n+    logger = logging.getLogger(app.name)\n \n     if app.debug and logger.level == logging.NOTSET:\n         logger.setLevel(logging.DEBUG)\n'",3.6666666666666665,3.6666666666666665
tests/test_logging.py,tests/test_logging.py,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -23,7 +23,7 @@ def reset_logging(pytestconfig):\n     logging.root.handlers = []\n     root_level = logging.root.level\n \n-    logger = logging.getLogger(""flask.app"")\n+    logger = logging.getLogger(""flask_test"")\n     logger.handlers = []\n     logger.setLevel(logging.NOTSET)\n \n@@ -42,7 +42,7 @@ def reset_logging(pytestconfig):\n \n \n def test_logger(app):\n-    assert app.logger.name == ""flask.app""\n+    assert app.logger.name == ""flask_test""\n     assert app.logger.level == logging.NOTSET\n     assert app.logger.handlers == [default_handler]\n \n'",1.1111111111111112,1.1111111111111112
tests/test_templating.py,tests/test_templating.py,df470aecb96efbcb17ca76e73196c25c38ce6d17,465da9f610a04d379bb39a0ff03fb6c0b0ea1c45,'use app.name as app.logger name',"'@@ -430,7 +430,9 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n \n     with app.test_client() as c:\n         monkeypatch.setitem(app.config, ""EXPLAIN_TEMPLATE_LOADING"", True)\n-        monkeypatch.setattr(logging.getLogger(""flask""), ""handlers"", [_TestHandler()])\n+        monkeypatch.setattr(\n+            logging.getLogger(""blueprintapp""), ""handlers"", [_TestHandler()]\n+        )\n \n         with pytest.raises(TemplateNotFound) as excinfo:\n             c.get(""/missing"")\n'",1.0,1.0
CHANGES.rst,CHANGES.rst,b08e35e4ab525c207144e42af1b678a78abe09cb,6665c91e6fad7df5997c8f3ae2136049062c1b7f,'show warning for old logger config',"'@@ -22,8 +22,8 @@ Unreleased\n     :attr:`Flask.name` (the value passed as\n     ``Flask(import_name)``. This reverts 1.0\'s behavior of always\n     logging to ``""flask.app""``, in order to support multiple apps in the\n-    same process. This may require adjusting logging configuration.\n-    :issue:`2866`.\n+    same process. A warning will be shown if old configuration is\n+    detected that needs to be moved. :issue:`2866`\n -   :meth:`flask.RequestContext.copy` includes the current session\n     object in the request context copy. This prevents ``session``\n     pointing to an out-of-date object. :issue:`2935`\n'",0,0
src/flask/logging.py,src/flask/logging.py,b08e35e4ab525c207144e42af1b678a78abe09cb,6665c91e6fad7df5997c8f3ae2136049062c1b7f,'show warning for old logger config',"'@@ -10,6 +10,7 @@ from __future__ import absolute_import\n \n import logging\n import sys\n+import warnings\n \n from werkzeug.local import LocalProxy\n \n@@ -56,6 +57,20 @@ default_handler.setFormatter(\n )\n \n \n+def _has_config(logger):\n+    """"""Decide if a logger has direct configuration applied by checking\n+    its properties against the defaults.\n+\n+    :param logger: The :class:`~logging.Logger` to inspect.\n+    """"""\n+    return (\n+        logger.level != logging.NOTSET\n+        or logger.handlers\n+        or logger.filters\n+        or not logger.propagate\n+    )\n+\n+\n def create_logger(app):\n     """"""Get the the Flask apps\'s logger and configure it if needed.\n \n@@ -71,7 +86,21 @@ def create_logger(app):\n     """"""\n     logger = logging.getLogger(app.name)\n \n-    if app.debug and logger.level == logging.NOTSET:\n+    # 1.1.0 changes name of logger, warn if config is detected for old\n+    # name and not new name\n+    for old_name in (""flask.app"", ""flask""):\n+        old_logger = logging.getLogger(old_name)\n+\n+        if _has_config(old_logger) and not _has_config(logger):\n+            warnings.warn(\n+                ""\'app.logger\' is named \'{name}\' for this application,""\n+                "" but configuration was found for \'{old_name}\', which""\n+                "" no longer has an effect. The logging configuration""\n+                "" should be moved to \'{name}\'."".format(name=app.name, old_name=old_name)\n+            )\n+            break\n+\n+    if app.debug and not logger.level:\n         logger.setLevel(logging.DEBUG)\n \n     if not has_level_handler(logger):\n'",3.6666666666666665,4.5
tests/test_logging.py,tests/test_logging.py,b08e35e4ab525c207144e42af1b678a78abe09cb,6665c91e6fad7df5997c8f3ae2136049062c1b7f,'show warning for old logger config',"'@@ -104,3 +104,12 @@ def test_log_view_exception(app, client):\n     err = stream.getvalue()\n     assert ""Exception on / [GET]"" in err\n     assert ""Exception: test"" in err\n+\n+\n+def test_warn_old_config(app, request):\n+    old_logger = logging.getLogger(""flask.app"")\n+    old_logger.setLevel(logging.DEBUG)\n+    request.addfinalizer(lambda: old_logger.setLevel(logging.NOTSET))\n+\n+    with pytest.warns(UserWarning):\n+        assert app.logger.getEffectiveLevel() == logging.WARNING\n'",1.1111111111111112,1.1
CHANGES.rst,CHANGES.rst,975f9792697c1a74bca3cfff201d1e0415bece6a,cf4923bf586c51365970ee11a33771104241cf60,'Move dotenv warning to stderr',"'@@ -11,6 +11,7 @@ Unreleased\n -   ``send_file`` url quotes the "":"" and ""/"" characters for more\n     compatible UTF-8 filename support in some browsers. :issue:`3074`\n -   Fixes for PEP451 import loaders and pytest 5.x.  :issue:`3275`\n+-   Show message about dotenv on stderr instead of stdout.  :issue:`3285`\n \n \n Version 1.0.3\n'",0,0
flask/cli.py,flask/cli.py,975f9792697c1a74bca3cfff201d1e0415bece6a,cf4923bf586c51365970ee11a33771104241cf60,'Move dotenv warning to stderr',"'@@ -600,7 +600,7 @@ def load_dotenv(path=None):\n             click.secho(\n                 \' * Tip: There are .env files present.\'\n                 \' Do ""pip install python-dotenv"" to use them.\',\n-                fg=\'yellow\')\n+                fg=\'yellow\', err=True)\n         return\n \n     if path is not None:\n'",4.228571428571429,4.228571428571429
CHANGES.rst,CHANGES.rst,626b5cc166e6151dfe0e86b514b2d9a1f55752a8,c07475935cdaec6dbb5ffe2df8bd5a4abafff99b,'release version 1.0.4',"'@@ -3,15 +3,15 @@\n Version 1.0.4\n -------------\n \n-Unreleased\n+Released 2019-07-04\n \n -   The key information for ``BadRequestKeyError`` is no longer cleared\n     outside debug mode, so error handlers can still access it. This\n     requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n -   ``send_file`` url quotes the "":"" and ""/"" characters for more\n     compatible UTF-8 filename support in some browsers. :issue:`3074`\n--   Fixes for PEP451 import loaders and pytest 5.x.  :issue:`3275`\n--   Show message about dotenv on stderr instead of stdout.  :issue:`3285`\n+-   Fixes for PEP451 import loaders and pytest 5.x. :issue:`3275`\n+-   Show message about dotenv on stderr instead of stdout. :issue:`3285`\n \n \n Version 1.0.3\n'",0,0
flask/__init__.py,flask/__init__.py,626b5cc166e6151dfe0e86b514b2d9a1f55752a8,c07475935cdaec6dbb5ffe2df8bd5a4abafff99b,'release version 1.0.4',"'@@ -10,7 +10,7 @@\n     :license: BSD-3-Clause\n """"""\n \n-__version__ = \'1.0.4.dev\'\n+__version__ = \'1.0.4\'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n'",0,0
setup.py,setup.py,626b5cc166e6151dfe0e86b514b2d9a1f55752a8,c07475935cdaec6dbb5ffe2df8bd5a4abafff99b,'release version 1.0.4',"'@@ -40,6 +40,7 @@ setup(\n         ""Programming Language :: Python :: 3.4"",\n         ""Programming Language :: Python :: 3.5"",\n         ""Programming Language :: Python :: 3.6"",\n+        ""Programming Language :: Python :: 3.7"",\n         ""Topic :: Internet :: WWW/HTTP :: Dynamic Content"",\n         ""Topic :: Internet :: WWW/HTTP :: WSGI :: Application"",\n         ""Topic :: Software Development :: Libraries :: Application Frameworks"",\n'",0,0
CHANGES.rst,CHANGES.rst,1b4ace9ba5e77679bf9d8e409283654f7589907e,8a78fdb09cc0a645a757cbcfb1beb09a3d2e5bca,'release version 1.1.0',"'@@ -3,7 +3,7 @@\n Version 1.1.0\n -------------\n \n-Unreleased\n+Released 2019-07-04\n \n -   Bump minimum Werkzeug version to >= 0.15.\n -   Drop support for Python 3.4.\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,1b4ace9ba5e77679bf9d8e409283654f7589907e,8a78fdb09cc0a645a757cbcfb1beb09a3d2e5bca,'release version 1.1.0',"'@@ -56,4 +56,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.0.dev""\n+__version__ = ""1.1.0""\n'",0,0
.github/ISSUE_TEMPLATE.md,.github/ISSUE_TEMPLATE.md,73d997f0fc207aef8d9c7fa19d8878576dad3846,1b4ace9ba5e77679bf9d8e409283654f7589907e,'Update ISSUE_TEMPLATE.md',"""@@ -1,26 +1,24 @@\n-**This issue tracker is a tool to address bugs in Flask itself.\n+<!--**This issue tracker is a tool to address bugs in Flask itself.\n Please use the #pocoo IRC channel on freenode or Stack Overflow for general\n questions about using Flask or issues not related to Flask.**\n \n-If you'd like to report a bug in Flask, fill out the template below. Provide\n+<!-- If you'd like to report a bug in Flask, fill out the template below. Provide\n any extra information that may be useful / related to your problem.\n Ideally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\n understand the problem and helps check that it is not caused by something in\n your code.\n \n----\n \n-### Expected Behavior\n \n-Tell us what should happen.\n+### Expected Behavior\n+<!-- Tell us what should happen. -->\n \n ```python\n-Paste a minimal example that causes the problem.\n+# Paste a minimal example that causes the problem.\n ```\n \n ### Actual Behavior\n-\n-Tell us what happens instead.\n+<!-- Tell us what happens instead. -->\n \n ```pytb\n Paste the full traceback if there was an exception.\n""",0,0
.github/ISSUE_TEMPLATE.md,.github/ISSUE_TEMPLATE.md,e4c7033a3447b8d1af67acf9e34269f2c5633fb9,73d997f0fc207aef8d9c7fa19d8878576dad3846,'Comment out helpful tips in issue_template.md',"""@@ -1,12 +1,12 @@\n-<!--**This issue tracker is a tool to address bugs in Flask itself.\n+<!-- **This issue tracker is a tool to address bugs in Flask itself.\n Please use the #pocoo IRC channel on freenode or Stack Overflow for general\n-questions about using Flask or issues not related to Flask.**\n+questions about using Flask or issues not related to Flask.** -->\n \n <!-- If you'd like to report a bug in Flask, fill out the template below. Provide\n any extra information that may be useful / related to your problem.\n Ideally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\n understand the problem and helps check that it is not caused by something in\n-your code.\n+your code. -->\n \n \n \n""",0,0
CHANGES.rst,CHANGES.rst,1617202d91e46a4c2584656969f90aa5d5db7fed,1b4ace9ba5e77679bf9d8e409283654f7589907e,'restore and deprecate json_available',"'@@ -1,5 +1,15 @@\n .. currentmodule:: flask\n \n+Version 1.1.1\n+-------------\n+\n+Unreleased\n+\n+-   The ``flask.json_available`` flag was added back for compatibility\n+    with some extensions. It will raise a deprecation warning when used,\n+    and will be removed in version 2.0.0. :issue:`3288`\n+\n+\n Version 1.1.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,1617202d91e46a4c2584656969f90aa5d5db7fed,1b4ace9ba5e77679bf9d8e409283654f7589907e,'restore and deprecate json_available',"'@@ -17,6 +17,7 @@ from werkzeug.exceptions import abort\n from werkzeug.utils import redirect\n \n from . import json\n+from ._compat import json_available\n from .app import Flask\n from .app import Request\n from .app import Response\n@@ -56,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.0""\n+__version__ = ""1.1.1.dev""\n'",0,0
src/flask/_compat.py,src/flask/_compat.py,1617202d91e46a4c2584656969f90aa5d5db7fed,1b4ace9ba5e77679bf9d8e409283654f7589907e,'restore and deprecate json_available',"'@@ -113,3 +113,33 @@ except ImportError:\n     # https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\n     def fspath(path):\n         return path.__fspath__() if hasattr(path, ""__fspath__"") else path\n+\n+\n+class _DeprecatedBool(object):\n+    def __init__(self, name, version, value):\n+        self.message = ""\'{}\' is deprecated and will be removed in version {}."".format(\n+            name, version\n+        )\n+        self.value = value\n+\n+    def _warn(self):\n+        import warnings\n+\n+        warnings.warn(self.message, DeprecationWarning, stacklevel=2)\n+\n+    def __eq__(self, other):\n+        self._warn()\n+        return other == self.value\n+\n+    def __ne__(self, other):\n+        self._warn()\n+        return other != self.value\n+\n+    def __bool__(self):\n+        self._warn()\n+        return self.value\n+\n+    __nonzero__ = __bool__\n+\n+\n+json_available = _DeprecatedBool(""flask.json_available"", ""2.0.0"", True)\n'",1.4285714285714286,1.25
CHANGES.rst,CHANGES.rst,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,1a6696da70923b2433b588ddcde90fd31ec296a6,'release version 1.1.1',"'@@ -3,7 +3,7 @@\n Version 1.1.1\n -------------\n \n-Unreleased\n+Released 2019-07-08\n \n -   The ``flask.json_available`` flag was added back for compatibility\n     with some extensions. It will raise a deprecation warning when used,\n'",0,0
README.rst,README.rst,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,1a6696da70923b2433b588ddcde90fd31ec296a6,'release version 1.1.1',"'@@ -66,8 +66,8 @@ donate today`_.\n Links\n -----\n \n-* Website: https://www.palletsprojects.com/p/flask/\n-* Documentation: http://flask.pocoo.org/docs/\n+* Website: https://palletsprojects.com/p/flask/\n+* Documentation: https://flask.palletsprojects.com/\n * Releases: https://pypi.org/project/Flask/\n * Code: https://github.com/pallets/flask\n * Issue tracker: https://github.com/pallets/flask/issues\n'",1.0,1.0
setup.py,setup.py,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,1a6696da70923b2433b588ddcde90fd31ec296a6,'release version 1.1.1',"'@@ -15,7 +15,7 @@ setup(\n     version=version,\n     url=""https://palletsprojects.com/p/flask/"",\n     project_urls={\n-        ""Documentation"": ""http://flask.palletsprojects.com/"",\n+        ""Documentation"": ""https://flask.palletsprojects.com/"",\n         ""Code"": ""https://github.com/pallets/flask"",\n         ""Issue tracker"": ""https://github.com/pallets/flask/issues"",\n     },\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,1a6696da70923b2433b588ddcde90fd31ec296a6,'release version 1.1.1',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.1.dev""\n+__version__ = ""1.1.1""\n'",0,0
docs/installation.rst,docs/installation.rst,98a26cfb425aef527ce5ace06f3a8e7cac186a6a,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,'Documentation: Use Python 3.5+',"'@@ -6,7 +6,7 @@ Installation\n Python Version\n --------------\n \n-We recommend using the latest version of Python 3. Flask supports Python 3.4\n+We recommend using the latest version of Python 3. Flask supports Python 3.5\n and newer, Python 2.7, and PyPy.\n \n Dependencies\n'",0,0
CHANGES.rst,CHANGES.rst,c478e5d52f4985a9a58f1ac1d229b47e9f6fe24f,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,'pass sys.argv to flask cli',"'@@ -1,5 +1,14 @@\n .. currentmodule:: flask\n \n+Version 1.1.2\n+-------------\n+\n+Unreleased\n+\n+-   Work around an issue when running the ``flask`` command with an\n+    external debugger on Windows. :issue:`3297`\n+\n+\n Version 1.1.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,c478e5d52f4985a9a58f1ac1d229b47e9f6fe24f,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,'pass sys.argv to flask cli',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.1""\n+__version__ = ""1.1.2.dev""\n'",0,0
src/flask/cli.py,src/flask/cli.py,c478e5d52f4985a9a58f1ac1d229b47e9f6fe24f,ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7,'pass sys.argv to flask cli',"'@@ -963,7 +963,8 @@ debug mode.\n \n \n def main(as_module=False):\n-    cli.main(prog_name=""python -m flask"" if as_module else None)\n+    # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n+    cli.main(args=sys.argv[1:], prog_name=""python -m flask"" if as_module else None)\n \n \n if __name__ == ""__main__"":\n'",4.194444444444445,4.194444444444445
CHANGES.rst,CHANGES.rst,ded3d642a762823702848c5e5c4e041a676a10a1,3fb368a44407aed7b5da88f6b35de9504ea8aac7,'pass sys.argv to flask cli',"'@@ -1,5 +1,14 @@\n .. currentmodule:: flask\n \n+Version 1.1.2\n+-------------\n+\n+Unreleased\n+\n+-   Work around an issue when running the ``flask`` command with an\n+    external debugger on Windows. :issue:`3297`\n+\n+\n Version 1.1.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,ded3d642a762823702848c5e5c4e041a676a10a1,3fb368a44407aed7b5da88f6b35de9504ea8aac7,'pass sys.argv to flask cli',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.1""\n+__version__ = ""1.1.2.dev""\n'",0,0
src/flask/cli.py,src/flask/cli.py,ded3d642a762823702848c5e5c4e041a676a10a1,3fb368a44407aed7b5da88f6b35de9504ea8aac7,'pass sys.argv to flask cli',"'@@ -963,7 +963,8 @@ debug mode.\n \n \n def main(as_module=False):\n-    cli.main(prog_name=""python -m flask"" if as_module else None)\n+    # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n+    cli.main(args=sys.argv[1:], prog_name=""python -m flask"" if as_module else None)\n \n \n if __name__ == ""__main__"":\n'",4.194444444444445,4.194444444444445
CONTRIBUTING.rst,CONTRIBUTING.rst,3628cbceafef795f4889229ca3aed2bfb9fb26a8,722d5e610a1f11ef2010dd719811771706ea0683,"'Add version \'3.7\' and a comma in ""Running the test"" of contributing guide.'","'@@ -134,7 +134,7 @@ suite when you submit your pull request.\n \n The full test suite takes a long time to run because it tests multiple\n combinations of Python and dependencies. You need to have Python 2.7, 3.4,\n-3.5 3.6, and PyPy 2.7 installed to run all of the environments. Then run::\n+3.5, 3.6, 3.7 and PyPy 2.7 installed to run all of the environments. Then run::\n \n     tox\n \n'",0,0
docs/extensiondev.rst,docs/extensiondev.rst,90004a83befdb1d65df8632e48078fd721932590,626b5cc166e6151dfe0e86b514b2d9a1f55752a8,"'Update outdated extension doc\n\nRemove links and descriptions relate to abandoned ""Flask Extension\nRegistry"" in documentation'","""@@ -5,15 +5,13 @@ Flask Extension Development\n \n Flask, being a microframework, often requires some repetitive steps to get\n a third party library working. Many such extensions are already available\n-on `PyPI <https://pypi.org/search/?c=Framework+%3A%3A+Flask>`_.\n+on `PyPI`_.\n \n If you want to create your own Flask extension for something that does not\n exist yet, this guide to extension development will help you get your\n extension running in no time and to feel like users would expect your\n extension to behave.\n \n-.. _Flask Extension Registry: http://flask.pocoo.org/extensions/\n-\n Anatomy of an Extension\n -----------------------\n \n@@ -275,15 +273,14 @@ to anything that needs it for the duration of the request.\n Learn from Others\n -----------------\n \n-This documentation only touches the bare minimum for extension\n-development.  If you want to learn more, it's a very good idea to check\n-out existing extensions on the `Flask Extension Registry`_.  If you feel\n-lost there is still the `mailinglist`_ and the `IRC channel`_ to get some\n-ideas for nice looking APIs.  Especially if you do something nobody before\n-you did, it might be a very good idea to get some more input.  This not only\n-generates useful feedback on what people might want from an extension, but\n-also avoids having multiple developers working in isolation on pretty much the\n-same problem.\n+This documentation only touches the bare minimum for extension development.\n+If you want to learn more, it's a very good idea to check out existing extensions\n+on the `PyPI`_.  If you feel lost there is still the `mailinglist`_ and the\n+`IRC channel`_ to get some ideas for nice looking APIs.  Especially if you do\n+something nobody before you did, it might be a very good idea to get some more\n+input.  This not only generates useful feedback on what people might want from\n+an extension, but also avoids having multiple developers working in isolation\n+on pretty much the same problem.\n \n Remember: good API design is hard, so introduce your project on the\n mailing list, and let other developers give you a helping hand with\n@@ -297,9 +294,8 @@ Approved Extensions\n \n Flask also has the concept of approved extensions.  Approved extensions\n are tested as part of Flask itself to ensure extensions do not break on\n-new releases.  These approved extensions are listed on the `Flask\n-Extension Registry`_ and marked appropriately.  If you want your own\n-extension to be approved you have to follow these guidelines:\n+new releases.  If you want your own extension to be approved you have to\n+follow these guidelines:\n \n 0.  An approved Flask extension requires a maintainer. In the event an\n     extension author would like to move beyond the project, the project should\n@@ -338,6 +334,7 @@ extension to be approved you have to follow these guidelines:\n 10. An extension currently has to support Python 3.4 and newer and 2.7.\n \n \n+.. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n .. _mailinglist: http://flask.pocoo.org/mailinglist/\n .. _IRC channel: http://flask.pocoo.org/community/irc/\n""",1.6666666666666667,1.6666666666666667
docs/extensions.rst,docs/extensions.rst,90004a83befdb1d65df8632e48078fd721932590,626b5cc166e6151dfe0e86b514b2d9a1f55752a8,"'Update outdated extension doc\n\nRemove links and descriptions relate to abandoned ""Flask Extension\nRegistry"" in documentation'","'@@ -12,10 +12,8 @@ frameworks to help build certain types of applications, like a REST API.\n Finding Extensions\n ------------------\n \n-Flask extensions are usually named ""Flask-Foo"" or ""Foo-Flask"". Many\n-extensions are listed in the `Extension Registry`_, which can be updated\n-by extension developers. You can also search PyPI for packages tagged\n-with `Framework :: Flask <pypi_>`_.\n+Flask extensions are usually named ""Flask-Foo"" or ""Foo-Flask"". You can\n+search PyPI for packages tagged with `Framework :: Flask <pypi_>`_.\n \n \n Using Extensions\n@@ -43,11 +41,10 @@ an extension caled ""Flask-Foo"" might be used like this::\n Building Extensions\n -------------------\n \n-While the `Extension Registry`_ contains many Flask extensions, you may\n+While the `PyPI <pypi_>`_ contains many Flask extensions, you may\n not find an extension that fits your need. If this is the case, you can\n create your own. Read :ref:`extension-dev` to develop your own Flask\n extension.\n \n \n-.. _Extension Registry: http://flask.pocoo.org/extensions/\n .. _pypi: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n'",0,0
src/flask/app.py,src/flask/app.py,a0a49e1c9ea9b0e850e9039c1b7000adbaf7370b,fb4aab5d899fa8d4257aad12f7df6050d1da3d2e,'clean up outdated code',"'@@ -23,7 +23,6 @@ from werkzeug.exceptions import BadRequestKeyError\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n-from werkzeug.exceptions import MethodNotAllowed\n from werkzeug.routing import BuildError\n from werkzeug.routing import Map\n from werkzeug.routing import RequestRedirect\n@@ -2000,17 +1999,7 @@ class Flask(_PackageBoundObject):\n         .. versionadded:: 0.7\n         """"""\n         adapter = _request_ctx_stack.top.url_adapter\n-        if hasattr(adapter, ""allowed_methods""):\n-            methods = adapter.allowed_methods()\n-        else:\n-            # fallback for Werkzeug < 0.7\n-            methods = []\n-            try:\n-                adapter.match(method=""--"")\n-            except MethodNotAllowed as e:\n-                methods = e.valid_methods\n-            except HTTPException:\n-                pass\n+        methods = adapter.allowed_methods()\n         rv = self.response_class()\n         rv.allow.update(methods)\n         return rv\n'",2.6470588235294117,2.611764705882353
docs/conf.py,docs/conf.py,2a8ebc4411deacb6eeac5d4cb6f9568d61ac6a12,d0df619263c3264d11fbb8a11698a2b73a08722c,'Fix github link generator for docs',"'@@ -1,3 +1,5 @@\n+import packaging\n+\n from pallets_sphinx_themes import get_version\n from pallets_sphinx_themes import ProjectLink\n \n@@ -74,7 +76,7 @@ def github_link(name, rawtext, text, lineno, inliner, options=None, content=None\n     else:\n         words = None\n \n-    if release.endswith(""dev""):\n+    if packaging.version.parse(release).is_devrelease:\n         url = ""{0}master/{1}"".format(base_url, text)\n     else:\n         url = ""{0}{1}/{2}"".format(base_url, release, text)\n'",3.0,3.0
docs/patterns/urlprocessors.rst,docs/patterns/urlprocessors.rst,28ffe153490c2a58919835bf0f9828958795871f,c42803f168208e558b7428c46e13bd1d5dbdc38c,'Fix typo in urlprocessors.rst',"""@@ -39,8 +39,8 @@ generate URLs from one function to another you would have to still provide\n the language code explicitly which can be annoying.\n \n For the latter, this is where :func:`~flask.Flask.url_defaults` functions\n-come in.  They can automatically inject values into a call for\n-:func:`~flask.url_for` automatically.  The code below checks if the\n+come in.  They can automatically inject values into a call to\n+:func:`~flask.url_for`.  The code below checks if the\n language code is not yet in the dictionary of URL values and if the\n endpoint wants a value named ``'lang_code'``::\n \n""",1.6666666666666667,1.6666666666666667
docs/conf.py,docs/conf.py,b3b38285a424487e5c400bf23e2554f112a099c1,02cfee8461c6dca8532b2ee82e1aa4c7dfc776fc,'fix stylecheck',"'@@ -1,5 +1,4 @@\n import packaging\n-\n from pallets_sphinx_themes import get_version\n from pallets_sphinx_themes import ProjectLink\n \n'",3.0,3.0
src/flask/logging.py,src/flask/logging.py,353d891561659a754ee92bb5e6576e82be58934a,33db5351088f58219d0d13f1a2efa7a85880eb55,'fixed typo in logging docstring (#3328)\n\n* fixed typo in logging docstring\r\n\r\n* second typo fix',"'@@ -72,7 +72,7 @@ def _has_config(logger):\n \n \n def create_logger(app):\n-    """"""Get the the Flask apps\'s logger and configure it if needed.\n+    """"""Get the Flask app\'s logger and configure it if needed.\n \n     The logger name will be the same as\n     :attr:`app.import_name <flask.Flask.name>`.\n'",4.5,4.5
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,b33e89935a38b184b148ac5b72ae457a4a385d36,353d891561659a754ee92bb5e6576e82be58934a,"'docs: Change max content length value to megabyte\n\n16 * 1024 * 1024 = 16 MiB (Mebibyte)\r\n16 * 1000 * 1000 = 16 MB (Megabyte)\r\n\r\nThe example is in megabytes, not in mebibytes.'","""@@ -147,7 +147,7 @@ config key::\n     from flask import Flask, Request\n \n     app = Flask(__name__)\n-    app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024\n+    app.config['MAX_CONTENT_LENGTH'] = 16 * 1000 * 1000\n \n The code above will limit the maximum allowed payload to 16 megabytes.\n If a larger file is transmitted, Flask will raise a\n""",0,0
src/flask/ctx.py,src/flask/ctx.py,553b26f8579a21a2d3644cb3bc5cb2ed8cedabc5,353d891561659a754ee92bb5e6576e82be58934a,'Fix typo in pop documentation',"'@@ -61,7 +61,7 @@ class _AppCtxGlobals(object):\n \n         :param name: Name of attribute to pop.\n         :param default: Value to return if the attribute is not present,\n-            instead of raise a ``KeyError``.\n+            instead of raising a ``KeyError``.\n \n         .. versionadded:: 0.11\n         """"""\n'",2.185185185185185,2.185185185185185
docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,b839beb23d5fd3431132df68693f402891c5f69e,b3b38285a424487e5c400bf23e2554f112a099c1,'fix typo: base on -> based on',"'@@ -70,7 +70,7 @@ straightforward to read.\n \n The decorated function will then work as follows\n \n-1. get the unique cache key for the current request base on the current\n+1. get the unique cache key for the current request based on the current\n    path.\n 2. get the value for that key from the cache. If the cache returned\n    something we will return that value.\n'",1.3846153846153846,1.3846153846153846
CONTRIBUTING.rst,CONTRIBUTING.rst,9b94e1463894c3fb2c37092a19dc3c04588741f7,908a364996bc519c98b758a604802defc6ec16b5,'Updating contribution docs. Added the link with a guide to install pre-commit and made the pre-commit installation command a code block.',"'@@ -79,7 +79,8 @@ First time setup\n \n         pip install -e "".[dev]""\n \n-- Install the pre-commit hooks:\n+- Install the `pre-commit framework`_.\n+- Install the pre-commit hooks::\n \n         pre-commit install --install-hooks\n \n@@ -89,6 +90,7 @@ First time setup\n .. _email: https://help.github.com/en/articles/setting-your-commit-email-address-in-git\n .. _Fork: https://github.com/pallets/flask/fork\n .. _Clone: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n+.. _pre-commit framework: https://pre-commit.com/#install\n \n Start coding\n ~~~~~~~~~~~~\n'",0,0
docs/testing.rst,docs/testing.rst,2ec150af02de076a2e64046fef634d873140ddce,db061cf736b9b30f7bb7860060a91d565c9a5e16,'Update testing.rst\n\nIt now describes how to install flaskr using pip so that all tests pass.',"""@@ -29,6 +29,9 @@ First, we need an application to test; we will use the application from\n the :ref:`tutorial`.  If you don't have that application yet, get the\n source code from :gh:`the examples <examples/tutorial>`.\n \n+So that we can import the module ``flaskr`` correctly, we need to run\n+``pip install -e .`` in the folder ``tutorial``.\n+\n The Testing Skeleton\n --------------------\n \n@@ -46,7 +49,7 @@ the application for testing and initializes a new database::\n \n     import pytest\n \n-    from flaskr import flaskr\n+    from flaskr import create_app\n \n \n     @pytest.fixture\n""",0,0
docs/appcontext.rst,docs/appcontext.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -144,7 +144,7 @@ If you're writing an extension, :data:`g` should be reserved for user\n code. You may store internal data on the context itself, but be sure to\n use a sufficiently unique name. The current context is accessed with\n :data:`_app_ctx_stack.top <_app_ctx_stack>`. For more information see\n-:doc:`extensiondev`.\n+:doc:`/extensiondev`.\n \n \n Events and Signals\n""",1.6666666666666667,1.6666666666666667
docs/becomingbig.rst,docs/becomingbig.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -21,13 +21,13 @@ Hook. Extend.\n -------------\n \n The :ref:`api` docs are full of available overrides, hook points, and\n-:ref:`signals`. You can provide custom classes for things like the request and\n-response objects.  Dig deeper on the APIs you use, and look for the\n-customizations which are available out of the box in a Flask release.  Look for\n-ways in which your project can be refactored into a collection of utilities and\n-Flask extensions.  Explore the many `extensions\n-<http://flask.pocoo.org/extensions/>`_ in the community, and look for patterns to\n-build your own extensions if you do not find the tools you need.\n+:ref:`signals`. You can provide custom classes for things like the\n+request and response objects. Dig deeper on the APIs you use, and look\n+for the customizations which are available out of the box in a Flask\n+release. Look for ways in which your project can be refactored into a\n+collection of utilities and Flask extensions. Explore the many\n+:doc:`/extensions` in the community, and look for patterns to build your\n+own extensions if you do not find the tools you need.\n \n Subclass.\n ---------\n@@ -96,6 +96,6 @@ Discuss with the community.\n \n The Flask developers keep the framework accessible to users with codebases big\n and small. If you find an obstacle in your way, caused by Flask, don't hesitate\n-to contact the developers on the mailing list or IRC channel.  The best way for\n+to contact the developers on the mailing list or Discord server.  The best way for\n the Flask and Flask extension developers to improve the tools for larger\n applications is getting feedback from users.\n""",0,0
docs/extensiondev.rst,docs/extensiondev.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -1,5 +1,3 @@\n-.. _extension-dev:\n-\n Flask Extension Development\n ===========================\n \n@@ -276,7 +274,7 @@ Learn from Others\n This documentation only touches the bare minimum for extension development.\n If you want to learn more, it's a very good idea to check out existing extensions\n on the `PyPI`_.  If you feel lost there is still the `mailinglist`_ and the\n-`IRC channel`_ to get some ideas for nice looking APIs.  Especially if you do\n+`Discord server`_ to get some ideas for nice looking APIs.  Especially if you do\n something nobody before you did, it might be a very good idea to get some more\n input.  This not only generates useful feedback on what people might want from\n an extension, but also avoids having multiple developers working in isolation\n@@ -292,50 +290,45 @@ API.  And this can only work if collaboration happens early.\n Approved Extensions\n -------------------\n \n-Flask also has the concept of approved extensions.  Approved extensions\n-are tested as part of Flask itself to ensure extensions do not break on\n-new releases.  If you want your own extension to be approved you have to\n-follow these guidelines:\n+Flask previously had the concept of approved extensions. These came with\n+some vetting of support and compatibility. While this list became too\n+difficult to maintain over time, the guidelines are still relevant to\n+all extensions maintained and developed today, as they help the Flask\n+ecosystem remain consistent and compatible.\n \n 0.  An approved Flask extension requires a maintainer. In the event an\n-    extension author would like to move beyond the project, the project should\n-    find a new maintainer including full source hosting transition and PyPI\n-    access.  If no maintainer is available, give access to the Flask core team.\n-1.  An approved Flask extension must provide exactly one package or module\n-    named ``flask_extensionname``.\n-2.  It must ship a testing suite that can either be invoked with ``make test``\n-    or ``python setup.py test``.  For test suites invoked with ``make\n-    test`` the extension has to ensure that all dependencies for the test\n-    are installed automatically.  If tests are invoked with ``python setup.py\n-    test``, test dependencies can be specified in the :file:`setup.py` file.  The\n-    test suite also has to be part of the distribution.\n-3.  APIs of approved extensions will be checked for the following\n-    characteristics:\n-\n-   -   an approved extension has to support multiple applications\n-       running in the same Python process.\n-   -   it must be possible to use the factory pattern for creating\n-       applications.\n-\n-4.  The license must be BSD/MIT/WTFPL licensed.\n-5.  The naming scheme for official extensions is *Flask-ExtensionName* or\n-    *ExtensionName-Flask*.\n-6.  Approved extensions must define all their dependencies in the\n-    :file:`setup.py` file unless a dependency cannot be met because it is not\n-    available on PyPI.\n-7.  The documentation must use the ``flask`` theme from the\n-    `Official Pallets Themes`_.\n-8.  The setup.py description (and thus the PyPI description) has to\n-    link to the documentation, website (if there is one) and there\n-    must be a link to automatically install the development version\n-    (``PackageName==dev``).\n-9. The ``zip_safe`` flag in the setup script must be set to ``False``,\n-   even if the extension would be safe for zipping.\n-10. An extension currently has to support Python 3.4 and newer and 2.7.\n+    extension author would like to move beyond the project, the project\n+    should find a new maintainer and transfer access to the repository,\n+    documentation, PyPI, and any other services. If no maintainer\n+    is available, give access to the Pallets core team.\n+1.  The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*.\n+    It must provide exactly one package or module named\n+    ``flask_extension_name``.\n+2.  The extension must be BSD or MIT licensed. It must be open source\n+    and publicly available.\n+3.  The extension's API must have the following characteristics:\n+\n+    -   It must support multiple applications running in the same Python\n+        process. Use ``current_app`` instead of ``self.app``, store\n+        configuration and state per application instance.\n+    -   It must be possible to use the factory pattern for creating\n+        applications. Use the ``ext.init_app()`` pattern.\n+\n+4.  From a clone of the repository, an extension with its dependencies\n+    must be installable with ``pip install -e .``.\n+5.  It must ship a testing suite that can be invoked with ``tox -e py``\n+    or ``pytest``. If not using ``tox``, the test dependencies should be\n+    specified in a ``requirements.txt`` file. The tests must be part of\n+    the sdist distribution.\n+6.  The documentation must use the ``flask`` theme from the\n+    `Official Pallets Themes`_. A link to the documentation or project\n+    website must be in the PyPI metadata or the readme.\n+7.  The active versions of Python should be supported. As of 2020 this\n+    means Python 3.5 and newer.\n \n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n-.. _mailinglist: http://flask.pocoo.org/mailinglist/\n-.. _IRC channel: http://flask.pocoo.org/community/irc/\n+.. _mailinglist: https://mail.python.org/mailman/listinfo/flask\n+.. _Discord server: https://discord.gg/t6rrQZH\n .. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n""",1.6666666666666667,1.6666666666666667
docs/extensions.rst,docs/extensions.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","'@@ -43,7 +43,7 @@ Building Extensions\n \n While the `PyPI <pypi_>`_ contains many Flask extensions, you may\n not find an extension that fits your need. If this is the case, you can\n-create your own. Read :ref:`extension-dev` to develop your own Flask\n+create your own. Read :doc:`/extensiondev` to develop your own Flask\n extension.\n \n \n'",0,0
docs/patterns/appdispatch.rst,docs/patterns/appdispatch.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -62,12 +62,12 @@ dispatched based on prefix.\n For example you could have your main application run on ``/`` and your\n backend interface on ``/backend``::\n \n-    from werkzeug.wsgi import DispatcherMiddleware\n+    from werkzeug.middleware.dispatcher import DispatcherMiddleware\n     from frontend_app import application as frontend\n     from backend_app import application as backend\n \n     application = DispatcherMiddleware(frontend, {\n-        '/backend':     backend\n+        '/backend': backend\n     })\n \n \n""",1.6666666666666667,1.6666666666666667
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -121,7 +121,7 @@ Alternatively you can register `uploaded_file` as `build_only` rule and\n use the :class:`~werkzeug.wsgi.SharedDataMiddleware`.  This also works with\n older versions of Flask::\n \n-    from werkzeug import SharedDataMiddleware\n+    from werkzeug.middleware.shared_data import SharedDataMiddleware\n     app.add_url_rule('/uploads/<filename>', 'uploaded_file',\n                      build_only=True)\n     app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {\n""",0,0
docs/patterns/index.rst,docs/patterns/index.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","'@@ -3,15 +3,16 @@\n Patterns for Flask\n ==================\n \n-Certain things are common enough that the chances are high you will find\n-them in most web applications.  For example quite a lot of applications\n-are using relational databases and user authentication.  In that case,\n-chances are they will open a database connection at the beginning of the\n-request and get the information of the currently logged in user.  At the\n-end of the request, the database connection is closed again.\n+Certain features and interactions are common enough that you will find\n+them in most web applications. For example, many applications use a\n+relational database and user authentication. They will open a database\n+connection at the beginning of the request and get the information for\n+the logged in user. At the end of the request, the database connection\n+is closed.\n \n-There are more user contributed snippets and patterns in the `Flask\n-Snippet Archives <http://flask.pocoo.org/snippets/>`_.\n+These types of patterns may be a bit outside the scope of Flask itself,\n+but Flask makes it easy to implement them. Some common patterns are\n+collected in the following pages.\n \n .. toctree::\n    :maxdepth: 2\n'",0,0
docs/patterns/lazyloading.rst,docs/patterns/lazyloading.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","'@@ -58,7 +58,7 @@ loaded upfront.  The trick is to actually load the view function as needed.\n This can be accomplished with a helper class that behaves just like a\n function but internally imports the real function on first use::\n \n-    from werkzeug import import_string, cached_property\n+    from werkzeug.utils import import_string, cached_property\n \n     class LazyView(object):\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,e01b68e7ee66f7c5ec221bcb9e0cd3526153664d,c074422cfdbcae3cef305631988288e13bbce2d1,"'update patterns, snippets, extensions docs'","""@@ -824,16 +824,22 @@ docs for more information.\n \n Read more on :ref:`application-errors`.\n \n-Hooking in WSGI Middlewares\n----------------------------\n+Hooking in WSGI Middleware\n+--------------------------\n \n-If you want to add a WSGI middleware to your application you can wrap the\n-internal WSGI application.  For example if you want to use one of the\n-middlewares from the Werkzeug package to work around bugs in lighttpd, you\n-can do it like this::\n+To add WSGI middleware to your Flask application, wrap the application's\n+``wsgi_app`` attribute. For example, to apply Werkzeug's\n+:class:`~werkzeug.middlware.proxy_fix.ProxyFix` middleware for running\n+behind Nginx:\n \n-    from werkzeug.contrib.fixers import LighttpdCGIRootFix\n-    app.wsgi_app = LighttpdCGIRootFix(app.wsgi_app)\n+.. code-block:: python\n+\n+    from werkzeug.middleware.proxy_fix import ProxyFix\n+    app.wsgi_app = ProxyFix(app.wsgi_app)\n+\n+Wrapping ``app.wsgi_app`` instead of ``app`` means that ``app`` still\n+points at your Flask application, not at the middleware, so you can\n+continue to use and configure ``app`` directly.\n \n Using Flask Extensions\n ----------------------\n""",1.2,1.2
docs/extensiondev.rst,docs/extensiondev.rst,6cde195c88ee720ca029b4fbfa64ea60d6983914,06507ed4e455dd8b94242d4477dce05b1d95c6c5,'reword extension python version item',"'@@ -323,9 +323,10 @@ ecosystem remain consistent and compatible.\n 6.  The documentation must use the ``flask`` theme from the\n     `Official Pallets Themes`_. A link to the documentation or project\n     website must be in the PyPI metadata or the readme.\n-7.  The active versions of Python should be supported. As of 2020 this\n-    means Python 3.5 and newer.\n-\n+7.  For maximum compatibility, the extension should support the same\n+    versions of Python that Flask supports. 3.6+ is recommended as of\n+    2020. Use ``python_requires="">= 3.6""`` in ``setup.py`` to indicate\n+    supported versions.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n'",1.6666666666666667,1.6666666666666667
docs/logging.rst,docs/logging.rst,2ceae5f8a5783d292d89cb9cb8dbec429fc3e502,6429bf19a00069c163219ea10b32b43821cfd8c8,'mention default logging level',"""@@ -20,6 +20,9 @@ logger can also be used to log your own messages.\n             app.logger.info('%s failed to log in', user.username)\n             abort(401)\n \n+If you don't configure logging, Python's default log level is usually\n+'warning'. Nothing below the configured level will be visible.\n+\n \n Basic Configuration\n -------------------\n""",2.0,2.0
docs/Makefile,docs/Makefile,4ed20657c61c3e64aba4652e1f053bae65ebc821,1c2a2cd0014693f1e1f894e498c2dc50dbb44f66,'update docs for new theme',"'@@ -1,10 +1,10 @@\n # Minimal makefile for Sphinx documentation\n #\n \n-# You can set these variables from the command line.\n-SPHINXOPTS    =\n-SPHINXBUILD   = sphinx-build\n-SPHINXPROJ    = Flask\n+# You can set these variables from the command line, and also\n+# from the environment for the first two.\n+SPHINXOPTS    ?=\n+SPHINXBUILD   ?= sphinx-build\n SOURCEDIR     = .\n BUILDDIR      = _build\n \n@@ -17,4 +17,4 @@ help:\n # Catch-all target: route all unknown targets to Sphinx using the new\n # ""make mode"" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n %: Makefile\n-\t@$(SPHINXBUILD) -M $@ ""$(SOURCEDIR)"" ""$(BUILDDIR)"" $(SPHINXOPTS) $(O)\n\\ No newline at end of file\n+\t@$(SPHINXBUILD) -M $@ ""$(SOURCEDIR)"" ""$(BUILDDIR)"" $(SPHINXOPTS) $(O)\n'",0,0
docs/_static/debugger.png,docs/_static/debugger.png,4ed20657c61c3e64aba4652e1f053bae65ebc821,1c2a2cd0014693f1e1f894e498c2dc50dbb44f66,'update docs for new theme','Binary files a/docs/_static/debugger.png and b/docs/_static/debugger.png differ\n',0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,941bc9ff6019117c9aa341f809bef7e0e54d0ebf,a3f07829ca03bf312b12b3732e917498299fa82d,'Fix link to header in CONTRIBUTING (#3382)',"'@@ -108,7 +108,7 @@ Start coding\n \n - Using your favorite editor, make your changes, `committing as you go`_.\n - Include tests that cover any code changes you make. Make sure the test fails\n-  without your patch. `Run the tests. <contributing-testsuite_>`_.\n+  without your patch. `Run the tests <contributing-testsuite_>`_.\n - Push your commits to GitHub and `create a pull request`_ by using::\n \n         git push --set-upstream origin your-branch-name\n@@ -121,7 +121,7 @@ Start coding\n .. _pre-commit: https://pre-commit.com\n .. _create a pull request: https://help.github.com/en/articles/creating-a-pull-request\n \n-.. _contributing-testsuite:\n+.. _contributing-testsuite: #running-the-tests\n \n Running the tests\n ~~~~~~~~~~~~~~~~~\n'",0,0
docs/reqcontext.rst,docs/reqcontext.rst,af970bd20f2d5c1d36abcb1f300a531c436b5655,7fdd0df6eca5fc564443acbf9f71555f6834359a,'fix typo in request context docs',"'@@ -170,8 +170,8 @@ will not fail.\n \n During testing, it can be useful to defer popping the contexts after the\n request ends, so that their data can be accessed in the test function.\n-Using the :meth:`~Flask.test_client` as a ``with`` block to preserve the\n-contexts until the with block exits.\n+Use the :meth:`~Flask.test_client` as a ``with`` block to preserve the\n+contexts until the ``with`` block exits.\n \n .. code-block:: python\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,413778afc19ce9f0cb484878d86375729c14faf4,db061cf736b9b30f7bb7860060a91d565c9a5e16,"""explain escape at top of quickstart\n\n* introduce escape, and explain why it's omitted in examples\n* clean up imports in examples""","'@@ -3,48 +3,59 @@\n Quickstart\n ==========\n \n-Eager to get started?  This page gives a good introduction to Flask.  It\n-assumes you already have Flask installed.  If you do not, head over to the\n-:ref:`installation` section.\n+Eager to get started? This page gives a good introduction to Flask.\n+Follow :doc:`installation` to set up a project and install Flask first.\n \n \n A Minimal Application\n ---------------------\n \n-A minimal Flask application looks something like this::\n+A minimal Flask application looks something like this:\n+\n+.. code-block:: python\n \n     from flask import Flask\n+    from markupsafe import escape\n+\n     app = Flask(__name__)\n \n-    @app.route(\'/\')\n+    @app.route(""/"")\n     def hello_world():\n-        return \'Hello, World!\'\n+        return f""<p>Hello, {escape(name)}!</p>""\n \n So what did that code do?\n \n-1. First we imported the :class:`~flask.Flask` class.  An instance of this\n-   class will be our WSGI application.\n-2. Next we create an instance of this class. The first argument is the name of\n-   the application\'s module or package.  If you are using a single module (as\n-   in this example), you should use ``__name__`` because depending on if it\'s\n-   started as application or imported as module the name will be different\n-   (``\'__main__\'`` versus the actual import name). This is needed so that\n-   Flask knows where to look for templates, static files, and so on. For more\n-   information have a look at the :class:`~flask.Flask` documentation.\n-3. We then use the :meth:`~flask.Flask.route` decorator to tell Flask what URL\n-   should trigger our function.\n-4. The function is given a name which is also used to generate URLs for that\n-   particular function, and returns the message we want to display in the\n-   user\'s browser.\n-\n-Just save it as :file:`hello.py` or something similar. Make sure to not call\n+1.  First we imported the :class:`~flask.Flask` class. An instance of\n+    this class will be our WSGI application.\n+2.  Next we create an instance of this class. The first argument is the\n+    name of the application\'s module or package. ``__name__`` is a\n+    convenient shortcut for this that is appropriate for most cases.\n+    This is needed so that Flask knows where to look for resources such\n+    as templates and static files.\n+3.  We then use the :meth:`~flask.Flask.route` decorator to tell Flask\n+    what URL should trigger our function.\n+4.  The function returns the message we want to display in the user\'s\n+    browser. The default content type is HTML, so HTML in the string\n+    will be rendered by the browser.\n+\n+.. note:: HTML escaping\n+\n+    When returning HTML (the default response type in Flask), any user\n+    input rendered in the output must be escaped to protect from\n+    injection attacks. HTML templates in Jinja, introduced later, will\n+    do this automatically. :func:`~markupsafe.escape`, shown above, can\n+    be used manually. It\'s omitted for brevity in the examples below.\n+\n+Save it as :file:`hello.py` or something similar. Make sure to not call\n your application :file:`flask.py` because this would conflict with Flask\n itself.\n \n-To run the application you can either use the :command:`flask` command or\n-python\'s ``-m`` switch with Flask.  Before you can do that you need\n+To run the application, use the :command:`flask` command or\n+:command:`python -m flask`. Before you can do that you need\n to tell your terminal the application to work with by exporting the\n-``FLASK_APP`` environment variable::\n+``FLASK_APP`` environment variable:\n+\n+.. code-block:: text\n \n     $ export FLASK_APP=hello.py\n     $ flask run\n@@ -59,12 +70,6 @@ And on PowerShell::\n \n     PS C:\\path\\to\\app> $env:FLASK_APP = ""hello.py""\n \n-Alternatively you can use :command:`python -m flask`::\n-\n-    $ export FLASK_APP=hello.py\n-    $ python -m flask run\n-     * Running on http://127.0.0.1:5000/\n-\n This launches a very simple builtin server, which is good enough for testing\n but probably not what you want to use in production. For deployment options see\n :ref:`deployment`.\n@@ -203,17 +208,17 @@ of the argument like ``<converter:variable_name>``. ::\n     @app.route(\'/user/<username>\')\n     def show_user_profile(username):\n         # show the user profile for that user\n-        return \'User %s\' % escape(username)\n+        return f\'User {username}\'\n \n     @app.route(\'/post/<int:post_id>\')\n     def show_post(post_id):\n         # show the post with the given id, the id is an integer\n-        return \'Post %d\' % post_id\n+        return f\'Post {post_id}\'\n \n     @app.route(\'/path/<path:subpath>\')\n     def show_subpath(subpath):\n         # show the subpath after /path/\n-        return \'Subpath %s\' % escape(subpath)\n+        return f\'Subpath {subpath}\'\n \n Converter types:\n \n@@ -281,9 +286,7 @@ Python shell. See :ref:`context-locals`.\n \n .. code-block:: python\n \n-    from flask import Flask, escape, url_for\n-\n-    app = Flask(__name__)\n+    from flask import url_for\n \n     @app.route(\'/\')\n     def index():\n@@ -295,7 +298,7 @@ Python shell. See :ref:`context-locals`.\n \n     @app.route(\'/user/<username>\')\n     def profile(username):\n-        return \'{}\\\'s profile\'.format(escape(username))\n+        return f\'{username}\\\'s profile\'\n \n     with app.test_request_context():\n         print(url_for(\'index\'))\n@@ -416,12 +419,12 @@ Automatic escaping is enabled, so if ``name`` contains HTML it will be escaped\n automatically.  If you can trust a variable and you know that it will be\n safe HTML (for example because it came from a module that converts wiki\n markup to HTML) you can mark it as safe by using the\n-:class:`~jinja2.Markup` class or by using the ``|safe`` filter in the\n+:class:`~markupsafe.Markup` class or by using the ``|safe`` filter in the\n template.  Head over to the Jinja 2 documentation for more examples.\n \n Here is a basic introduction to how the :class:`~jinja2.Markup` class works::\n \n-    >>> from flask import Markup\n+    >>> from markupsafe import Markup\n     >>> Markup(\'<strong>Hello %s!</strong>\') % \'<blink>hacker</blink>\'\n     Markup(u\'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>\')\n     >>> Markup.escape(\'<blink>hacker</blink>\')\n@@ -495,8 +498,6 @@ test request so that you can interact with it.  Here is an example::\n The other possibility is passing a whole WSGI environment to the\n :meth:`~flask.Flask.request_context` method::\n \n-    from flask import request\n-\n     with app.request_context(environ):\n         assert request.method == \'POST\'\n \n@@ -582,7 +583,6 @@ of the client to store the file on the server, pass it through the\n :func:`~werkzeug.utils.secure_filename` function that\n Werkzeug provides for you::\n \n-    from flask import request\n     from werkzeug.utils import secure_filename\n \n     @app.route(\'/upload\', methods=[\'GET\', \'POST\'])\n@@ -706,6 +706,8 @@ you can use the :func:`~flask.make_response` function.\n \n Imagine you have a view like this::\n \n+    from flask import render_template\n+\n     @app.errorhandler(404)\n     def not_found(error):\n         return render_template(\'error.html\'), 404\n@@ -714,6 +716,8 @@ You just need to wrap the return expression with\n :func:`~flask.make_response` and get the response object to modify it, then\n return it::\n \n+    from flask import make_response\n+\n     @app.errorhandler(404)\n     def not_found(error):\n         resp = make_response(render_template(\'error.html\'), 404)\n@@ -747,6 +751,8 @@ more complex applications.\n \n .. code-block:: python\n \n+    from flask import jsonify\n+\n     @app.route(""/users"")\n     def users_api():\n         users = get_all_users()\n@@ -768,9 +774,7 @@ unless they know the secret key used for signing.\n In order to use sessions you have to set a secret key.  Here is how\n sessions work::\n \n-    from flask import Flask, session, redirect, url_for, escape, request\n-\n-    app = Flask(__name__)\n+    from flask import session\n \n     # Set the secret key to some random bytes. Keep this really secret!\n     app.secret_key = b\'_5#y2L""F4Q8z\\n\\xec]/\'\n@@ -778,7 +782,7 @@ sessions work::\n     @app.route(\'/\')\n     def index():\n         if \'username\' in session:\n-            return \'Logged in as %s\' % escape(session[\'username\'])\n+            return f\'Logged in as {session[""username""]}\'\n         return \'You are not logged in\'\n \n     @app.route(\'/login\', methods=[\'GET\', \'POST\'])\n@@ -799,9 +803,6 @@ sessions work::\n         session.pop(\'username\', None)\n         return redirect(url_for(\'index\'))\n \n-The :func:`~flask.escape` mentioned here does escaping for you if you are\n-not using the template engine (as in this example).\n-\n .. admonition:: How to generate good secret keys\n \n     A secret key should be as random as possible. Your operating system has\n'",1.2666666666666666,1.3636363636363635
CHANGES.rst,CHANGES.rst,0c0b31a789f8bfeadcbcf49d1fb38a00624b3065,4bceeccfffd09cd6d02489988444e25b07f32ae0,'get_cookie_name in SessionInterface for easier overriding in SecureCookieSessionInterface',"'@@ -1,5 +1,14 @@\n .. currentmodule:: flask\n \n+Version 2.0.0\n+-------------\n+\n+Unreleased\n+\n+-   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n+    setting the session cookie name dynamically. :pr:`3369`\n+\n+\n Version 1.1.2\n -------------\n \n'",0,0
src/flask/sessions.py,src/flask/sessions.py,0c0b31a789f8bfeadcbcf49d1fb38a00624b3065,4bceeccfffd09cd6d02489988444e25b07f32ae0,'get_cookie_name in SessionInterface for easier overriding in SecureCookieSessionInterface',"'@@ -173,6 +173,13 @@ class SessionInterface(object):\n         """"""\n         return isinstance(obj, self.null_session_class)\n \n+    def get_cookie_name(self, app):\n+        """"""Returns the name of the session cookie.\n+\n+        Uses ``app.session_cookie_name`` which is set to ``SESSION_COOKIE_NAME``\n+        """"""\n+        return app.session_cookie_name\n+\n     def get_cookie_domain(self, app):\n         """"""Returns the domain that should be set for the session cookie.\n \n@@ -340,7 +347,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         s = self.get_signing_serializer(app)\n         if s is None:\n             return None\n-        val = request.cookies.get(app.session_cookie_name)\n+        val = request.cookies.get(self.get_cookie_name(app))\n         if not val:\n             return self.session_class()\n         max_age = total_seconds(app.permanent_session_lifetime)\n@@ -351,6 +358,7 @@ class SecureCookieSessionInterface(SessionInterface):\n             return self.session_class()\n \n     def save_session(self, app, session, response):\n+        name = self.get_cookie_name(app)\n         domain = self.get_cookie_domain(app)\n         path = self.get_cookie_path(app)\n \n@@ -358,9 +366,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         # If the session is empty, return without setting the cookie.\n         if not session:\n             if session.modified:\n-                response.delete_cookie(\n-                    app.session_cookie_name, domain=domain, path=path\n-                )\n+                response.delete_cookie(name, domain=domain, path=path)\n \n             return\n \n@@ -377,7 +383,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         expires = self.get_expiration_time(app, session)\n         val = self.get_signing_serializer(app).dumps(dict(session))\n         response.set_cookie(\n-            app.session_cookie_name,\n+            name,\n             val,\n             expires=expires,\n             httponly=httponly,\n'",1.8636363636363635,1.826086956521739
tests/test_reqctx.py,tests/test_reqctx.py,0c0b31a789f8bfeadcbcf49d1fb38a00624b3065,4bceeccfffd09cd6d02489988444e25b07f32ae0,'get_cookie_name in SessionInterface for easier overriding in SecureCookieSessionInterface',"'@@ -11,6 +11,7 @@\n import pytest\n \n import flask\n+from flask.sessions import SecureCookieSessionInterface\n from flask.sessions import SessionInterface\n \n try:\n@@ -229,6 +230,58 @@ def test_session_error_pops_context():\n     assert not flask.current_app\n \n \n+def test_session_dynamic_cookie_name():\n+\n+    # This session interface will use a cookie with a different name if the\n+    # requested url ends with the string ""dynamic_cookie""\n+    class PathAwareSessionInterface(SecureCookieSessionInterface):\n+        def get_cookie_name(self, app):\n+            if flask.request.url.endswith(""dynamic_cookie""):\n+                return ""dynamic_cookie_name""\n+            else:\n+                return super(PathAwareSessionInterface, self).get_cookie_name(app)\n+\n+    class CustomFlask(flask.Flask):\n+        session_interface = PathAwareSessionInterface()\n+\n+    app = CustomFlask(__name__)\n+    app.secret_key = ""secret_key""\n+\n+    @app.route(""/set"", methods=[""POST""])\n+    def set():\n+        flask.session[""value""] = flask.request.form[""value""]\n+        return ""value set""\n+\n+    @app.route(""/get"")\n+    def get():\n+        v = flask.session.get(""value"", ""None"")\n+        return v\n+\n+    @app.route(""/set_dynamic_cookie"", methods=[""POST""])\n+    def set_dynamic_cookie():\n+        flask.session[""value""] = flask.request.form[""value""]\n+        return ""value set""\n+\n+    @app.route(""/get_dynamic_cookie"")\n+    def get_dynamic_cookie():\n+        v = flask.session.get(""value"", ""None"")\n+        return v\n+\n+    test_client = app.test_client()\n+\n+    # first set the cookie in both /set urls but each with a different value\n+    assert test_client.post(""/set"", data={""value"": ""42""}).data == b""value set""\n+    assert (\n+        test_client.post(""/set_dynamic_cookie"", data={""value"": ""616""}).data\n+        == b""value set""\n+    )\n+\n+    # now check that the relevant values come back - meaning that different\n+    # cookies are being used for the urls that end with ""dynamic cookie""\n+    assert test_client.get(""/get"").data == b""42""\n+    assert test_client.get(""/get_dynamic_cookie"").data == b""616""\n+\n+\n def test_bad_environ_raises_bad_request():\n     app = flask.Flask(__name__)\n \n'",1.103448275862069,1.1142857142857143
docs/reqcontext.rst,docs/reqcontext.rst,468705df1751b515fa088e6ccb374a59d1afbf76,200ce9bd39c70a7782ef8ace0338ad71dbdb175d,'Update reqcontext.rst',"'@@ -109,7 +109,7 @@ redirects or chain different applications together.\n After the request is dispatched and a response is generated and sent,\n the request context is popped, which then pops the application context.\n Immediately before they are popped, the :meth:`~Flask.teardown_request`\n-and :meth:`~Flask.teardown_appcontext` functions are are executed. These\n+and :meth:`~Flask.teardown_appcontext` functions are executed. These\n execute even if an unhandled exception occurred during dispatch.\n \n \n'",0,0
docs/config.rst,docs/config.rst,829aa65e642baf2f90bc29f940c8cbf180848dbc,7df10cd8e07f734bca875cda4b591f18e7b657cd,"'Support loading configuration from text files\n\nTOML is a very popular format now, and is taking hold in the Python\necosystem via pyproject.toml (among others). This allows toml config\nfiles via,\n\n    app.config.from_file(""config.toml"", toml.loads)\n\nit also allows for any other file format whereby there is a loader\nthat takes a string and returns a mapping.'","'@@ -393,8 +393,8 @@ The following configuration values are used internally by Flask:\n     Added :data:`MAX_COOKIE_SIZE` to control a warning from Werkzeug.\n \n \n-Configuring from Files\n-----------------------\n+Configuring from Python Files\n+-----------------------------\n \n Configuration becomes more useful if you can store it in a separate file,\n ideally located outside the actual application package. This makes\n@@ -440,6 +440,20 @@ methods on the config object as well to load from individual files.  For a\n complete reference, read the :class:`~flask.Config` object\'s\n documentation.\n \n+Configuring from files\n+----------------------\n+\n+It is also possible to load configure from a flat file in a format of\n+your choice, for example to load from a TOML (or JSON) formatted\n+file::\n+\n+   import json\n+   import toml\n+\n+   app.config.from_file(""config.toml"", load=toml.load)\n+   # Alternatively, if you prefer JSON\n+   app.config.from_file(""config.json"", load=json.load)\n+\n \n Configuring from Environment Variables\n --------------------------------------\n'",1.0,1.0
src/flask/config.py,src/flask/config.py,829aa65e642baf2f90bc29f940c8cbf180848dbc,7df10cd8e07f734bca875cda4b591f18e7b657cd,"'Support loading configuration from text files\n\nTOML is a very popular format now, and is taking hold in the Python\necosystem via pyproject.toml (among others). This allows toml config\nfiles via,\n\n    app.config.from_file(""config.toml"", toml.loads)\n\nit also allows for any other file format whereby there is a loader\nthat takes a string and returns a mapping.'","'@@ -11,6 +11,7 @@\n import errno\n import os\n import types\n+import warnings\n \n from werkzeug.utils import import_string\n \n@@ -176,24 +177,27 @@ class Config(dict):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n \n-    def from_json(self, filename, silent=False):\n-        """"""Updates the values in the config from a JSON file. This function\n-        behaves as if the JSON object was a dictionary and passed to the\n-        :meth:`from_mapping` function.\n+    def from_file(self, filename, load, silent=False):\n+        """"""Update the values in the config from a file that is loaded using\n+        the *load* argument. This method passes the loaded Mapping\n+        to the :meth:`from_mapping` function.\n \n         :param filename: the filename of the JSON file.  This can either be an\n                          absolute filename or a filename relative to the\n                          root path.\n+        :param load: a callable that takes a file handle and returns a mapping\n+                     from the file.\n+        :type load: Callable[[Reader], Mapping]. Where Reader is a Protocol\n+                    that implements a read method.\n         :param silent: set to ``True`` if you want silent failure for missing\n                        files.\n \n-        .. versionadded:: 0.11\n+        .. versionadded:: 1.2\n         """"""\n         filename = os.path.join(self.root_path, filename)\n-\n         try:\n-            with open(filename) as json_file:\n-                obj = json.loads(json_file.read())\n+            with open(filename) as file_:\n+                obj = load(file_)\n         except IOError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                 return False\n@@ -201,6 +205,27 @@ class Config(dict):\n             raise\n         return self.from_mapping(obj)\n \n+    def from_json(self, filename, silent=False):\n+        """"""Updates the values in the config from a JSON file. This function\n+        behaves as if the JSON object was a dictionary and passed to the\n+        :meth:`from_mapping` function.\n+\n+        :param filename: the filename of the JSON file.  This can either be an\n+                         absolute filename or a filename relative to the\n+                         root path.\n+        :param silent: set to ``True`` if you want silent failure for missing\n+                       files.\n+\n+        .. versionadded:: 0.11\n+        """"""\n+        warnings.warn(\n+            DeprecationWarning(\n+                \'""from_json"" is deprecated and will be removed in 2.0. Use\'\n+                \' ""from_file(filename, load=json.load)"" instead.\'\n+            )\n+        )\n+        return self.from_file(filename, json.load, silent=silent)\n+\n     def from_mapping(self, *mapping, **kwargs):\n         """"""Updates the config like :meth:`update` ignoring items with non-upper\n         keys.\n'",3.1818181818181817,3.0
tests/test_config.py,tests/test_config.py,829aa65e642baf2f90bc29f940c8cbf180848dbc,7df10cd8e07f734bca875cda4b591f18e7b657cd,"'Support loading configuration from text files\n\nTOML is a very popular format now, and is taking hold in the Python\necosystem via pyproject.toml (among others). This allows toml config\nfiles via,\n\n    app.config.from_file(""config.toml"", toml.loads)\n\nit also allows for any other file format whereby there is a loader\nthat takes a string and returns a mapping.'","'@@ -6,6 +6,7 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n """"""\n+import json\n import os\n import textwrap\n from datetime import timedelta\n@@ -27,7 +28,7 @@ def common_object_test(app):\n     assert ""TestConfig"" not in app.config\n \n \n-def test_config_from_file():\n+def test_config_from_pyfile():\n     app = flask.Flask(__name__)\n     app.config.from_pyfile(__file__.rsplit(""."", 1)[0] + "".py"")\n     common_object_test(app)\n@@ -39,10 +40,10 @@ def test_config_from_object():\n     common_object_test(app)\n \n \n-def test_config_from_json():\n+def test_config_from_file():\n     app = flask.Flask(__name__)\n     current_dir = os.path.dirname(os.path.abspath(__file__))\n-    app.config.from_json(os.path.join(current_dir, ""static"", ""config.json""))\n+    app.config.from_file(os.path.join(current_dir, ""static"", ""config.json""), json.load)\n     common_object_test(app)\n \n \n@@ -116,16 +117,16 @@ def test_config_missing():\n     assert not app.config.from_pyfile(""missing.cfg"", silent=True)\n \n \n-def test_config_missing_json():\n+def test_config_missing_file():\n     app = flask.Flask(__name__)\n     with pytest.raises(IOError) as e:\n-        app.config.from_json(""missing.json"")\n+        app.config.from_file(""missing.json"", load=json.load)\n     msg = str(e.value)\n     assert msg.startswith(\n         ""[Errno 2] Unable to load configuration file (No such file or directory):""\n     )\n     assert msg.endswith(""missing.json\'"")\n-    assert not app.config.from_json(""missing.json"", silent=True)\n+    assert not app.config.from_file(""missing.json"", load=json.load, silent=True)\n \n \n def test_custom_config_class():\n'",1.0666666666666667,1.0666666666666667
CHANGES.rst,CHANGES.rst,aac0f585b944cc65a1b570c1cc26d840f03e2f72,829aa65e642baf2f90bc29f940c8cbf180848dbc,'clean up config.from_file docs',"'@@ -7,6 +7,9 @@ Unreleased\n \n -   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n     setting the session cookie name dynamically. :pr:`3369`\n+-   Add :meth:`Config.from_file` to load config using arbitrary file\n+    loaders, such as ``toml.load`` or ``json.load``.\n+    :meth:`Config.from_json` is deprecated in favor of this. :pr:`3398`\n \n \n Version 1.1.2\n'",0,0
docs/config.rst,docs/config.rst,aac0f585b944cc65a1b570c1cc26d840f03e2f72,829aa65e642baf2f90bc29f940c8cbf180848dbc,'clean up config.from_file docs',"'@@ -440,19 +440,25 @@ methods on the config object as well to load from individual files.  For a\n complete reference, read the :class:`~flask.Config` object\'s\n documentation.\n \n-Configuring from files\n-----------------------\n \n-It is also possible to load configure from a flat file in a format of\n-your choice, for example to load from a TOML (or JSON) formatted\n-file::\n+Configuring from Data Files\n+---------------------------\n \n-   import json\n-   import toml\n+It is also possible to load configuration from a file in a format of\n+your choice using :meth:`~flask.Config.from_file`. For example to load\n+from a TOML file:\n \n-   app.config.from_file(""config.toml"", load=toml.load)\n-   # Alternatively, if you prefer JSON\n-   app.config.from_file(""config.json"", load=json.load)\n+.. code-block:: python\n+\n+    import toml\n+    app.config.from_file(""config.toml"", load=toml.load)\n+\n+Or from a JSON file:\n+\n+.. code-block:: python\n+\n+    import json\n+    app.config.from_file(""config.json"", load=json.load)\n \n \n Configuring from Environment Variables\n'",1.0,1.0
src/flask/config.py,src/flask/config.py,aac0f585b944cc65a1b570c1cc26d840f03e2f72,829aa65e642baf2f90bc29f940c8cbf180848dbc,'clean up config.from_file docs',"'@@ -15,7 +15,6 @@ import warnings\n \n from werkzeug.utils import import_string\n \n-from . import json\n from ._compat import iteritems\n from ._compat import string_types\n \n@@ -178,53 +177,61 @@ class Config(dict):\n                 self[key] = getattr(obj, key)\n \n     def from_file(self, filename, load, silent=False):\n-        """"""Update the values in the config from a file that is loaded using\n-        the *load* argument. This method passes the loaded Mapping\n-        to the :meth:`from_mapping` function.\n+        """"""Update the values in the config from a file that is loaded\n+        using the ``load`` parameter. The loaded data is passed to the\n+        :meth:`from_mapping` method.\n \n-        :param filename: the filename of the JSON file.  This can either be an\n-                         absolute filename or a filename relative to the\n-                         root path.\n-        :param load: a callable that takes a file handle and returns a mapping\n-                     from the file.\n-        :type load: Callable[[Reader], Mapping]. Where Reader is a Protocol\n-                    that implements a read method.\n-        :param silent: set to ``True`` if you want silent failure for missing\n-                       files.\n+        .. code-block:: python\n+\n+            import toml\n+            app.config.from_file(""config.toml"", load=toml.load)\n+\n+        :param filename: The path to the data file. This can be an\n+            absolute path or relative to the config root path.\n+        :param load: A callable that takes a file handle and returns a\n+            mapping of loaded data from the file.\n+        :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n+            implements a ``read`` method.\n+        :param silent: Ignore the file if it doesn\'t exist.\n \n         .. versionadded:: 1.2\n         """"""\n         filename = os.path.join(self.root_path, filename)\n+\n         try:\n-            with open(filename) as file_:\n-                obj = load(file_)\n+            with open(filename) as f:\n+                obj = load(f)\n         except IOError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                 return False\n+\n             e.strerror = ""Unable to load configuration file (%s)"" % e.strerror\n             raise\n+\n         return self.from_mapping(obj)\n \n     def from_json(self, filename, silent=False):\n-        """"""Updates the values in the config from a JSON file. This function\n-        behaves as if the JSON object was a dictionary and passed to the\n-        :meth:`from_mapping` function.\n+        """"""Update the values in the config from a JSON file. The loaded\n+        data is passed to the :meth:`from_mapping` method.\n \n-        :param filename: the filename of the JSON file.  This can either be an\n-                         absolute filename or a filename relative to the\n-                         root path.\n-        :param silent: set to ``True`` if you want silent failure for missing\n-                       files.\n+        :param filename: The path to the JSON file. This can be an\n+            absolute path or relative to the config root path.\n+        :param silent: Ignore the file if it doesn\'t exist.\n+\n+        .. deprecated:: 1.2\n+            Use :meth:`from_file` with :meth:`json.load` instead.\n \n         .. versionadded:: 0.11\n         """"""\n         warnings.warn(\n-            DeprecationWarning(\n-                \'""from_json"" is deprecated and will be removed in 2.0. Use\'\n-                \' ""from_file(filename, load=json.load)"" instead.\'\n-            )\n+            ""\'from_json\' is deprecated and will be removed in 2.0.""\n+            "" Use \'from_file(filename, load=json.load)\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n         )\n-        return self.from_file(filename, json.load, silent=silent)\n+        from .json import load\n+\n+        return self.from_file(filename, load, silent=silent)\n \n     def from_mapping(self, *mapping, **kwargs):\n         """"""Updates the config like :meth:`update` ignoring items with non-upper\n'",3.0,3.0
docs/blueprints.rst,docs/blueprints.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -70,7 +70,7 @@ implement a blueprint that does simple rendering of static templates::\n     @simple_page.route('/<page>')\n     def show(page):\n         try:\n-            return render_template('pages/%s.html' % page)\n+            return render_template(f'pages/{page}.html')\n         except TemplateNotFound:\n             abort(404)\n \n""",1.0,1.0
docs/patterns/fabric.rst,docs/patterns/fabric.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -49,16 +49,16 @@ virtual environment::\n     def deploy():\n         # figure out the package name and version\n         dist = local('python setup.py --fullname', capture=True).strip()\n-        filename = '%s.tar.gz' % dist\n+        filename = f'{dist}.tar.gz'\n \n         # upload the package to the temporary folder on the server\n-        put('dist/%s' % filename, '/tmp/%s' % filename)\n+        put(f'dist/{filename}', f'/tmp/{filename}')\n \n         # install the package in the application's virtualenv with pip\n-        run('/var/www/yourapplication/env/bin/pip install /tmp/%s' % filename)\n+        run(f'/var/www/yourapplication/env/bin/pip install /tmp/{filename}')\n \n         # remove the uploaded package\n-        run('rm -r /tmp/%s' % filename)\n+        run(f'rm -r /tmp/{filename}')\n \n         # touch the .wsgi file to trigger a reload in mod_wsgi\n         run('touch /var/www/yourapplication.wsgi')\n""",0,0
docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -86,7 +86,7 @@ Here is an example model (put this into :file:`models.py`, e.g.)::\n             self.email = email\n \n         def __repr__(self):\n-            return '<User %r>' % (self.name)\n+            return f'<User {self.name!r}>'\n \n To create the database you can use the `init_db` function:\n \n@@ -159,7 +159,7 @@ Here is an example table and model (put this into :file:`models.py`)::\n             self.email = email\n \n         def __repr__(self):\n-            return '<User %r>' % (self.name)\n+            return f'<User {self.name!r}>'\n \n     users = Table('users', metadata,\n         Column('id', Integer, primary_key=True),\n""",1.0,1.0
docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -82,11 +82,11 @@ Here the code::\n     from functools import wraps\n     from flask import request\n \n-    def cached(timeout=5 * 60, key='view/%s'):\n+    def cached(timeout=5 * 60, key='view/{}'):\n         def decorator(f):\n             @wraps(f)\n             def decorated_function(*args, **kwargs):\n-                cache_key = key % request.path\n+                cache_key = key.format(request.path)\n                 rv = cache.get(cache_key)\n                 if rv is not None:\n                     return rv\n""",1.3846153846153846,1.3846153846153846
docs/signals.rst,docs/signals.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -179,7 +179,7 @@ With Blinker 1.1 you can also easily subscribe to signals by using the new\n \n     @template_rendered.connect_via(app)\n     def when_template_rendered(sender, template, context, **extra):\n-        print 'Template %s is rendered with %s' % (template.name, context)\n+        print f'Template {template.name} is rendered with {context}'\n \n Core Signals\n ------------\n""",1.3333333333333333,1.3333333333333333
docs/styleguide.rst,docs/styleguide.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -51,11 +51,11 @@ Blank lines:\n   segments in code.  Example::\n \n     def hello(name):\n-        print 'Hello %s!' % name\n+        print f'Hello {name}!'\n \n \n     def goodbye(name):\n-        print 'See you %s.' % name\n+        print f'See you {name}.'\n \n \n     class MyClass(object):\n""",1.0,1.0
docs/views.rst,docs/views.rst,07caa442241b36e14cf91b0fa0201ad764dfbd47,8f422d2b5efe685bf67852b8f06672a32c1f07e6,'Change docs to use f-strings',"""@@ -231,7 +231,7 @@ registration code::\n         app.add_url_rule(url, defaults={pk: None},\n                          view_func=view_func, methods=['GET',])\n         app.add_url_rule(url, view_func=view_func, methods=['POST',])\n-        app.add_url_rule('%s<%s:%s>' % (url, pk_type, pk), view_func=view_func,\n+        app.add_url_rule(f'{url}<{pk_type}:{pk}>', view_func=view_func,\n                          methods=['GET', 'PUT', 'DELETE'])\n \n     register_api(UserAPI, 'user_api', '/users/', pk='user_id')\n""",1.2,1.2
docs/api.rst,docs/api.rst,3ddf7fd2c2b4108a55213c791bd80981bd1f90f5,8f422d2b5efe685bf67852b8f06672a32c1f07e6,"'Make the documentation build reproducibly\n\nWhilst working on the Reproducible Builds effort [0] we noticed that\nflask could not be built reproducibly.\n\nThis is because it includes an absolute build directory in the\ndocumentation as the ""json_module"" attribute points to a Python class/\nmodule which has a string representation including its path.\n\nThis commit skips this (inherited) member from the documentation.\n\n(This was originally filed in Debian as #943674 [1].)\n\n [0] https://reproducible-builds.org/\n [1] https://bugs.debian.org/943674'","'@@ -31,6 +31,7 @@ Incoming Request Data\n .. autoclass:: Request\n    :members:\n    :inherited-members:\n+   :exclude-members: json_module\n \n    .. attribute:: environ\n \n'",1.1875,1.1875
tests/test_helpers.py,tests/test_helpers.py,c367a86cc5be70da4928b276d0218f98df6e854d,9bdc42d300c63f82cf3aad872d606434fcb8cb97,'Test test_send_from_directory_bad_request no longer fails in Python 3.8.',"'@@ -11,6 +11,7 @@\n import datetime\n import io\n import os\n+import sys\n import uuid\n \n import pytest\n@@ -780,12 +781,17 @@ class TestSendfile(object):\n         assert rv.data.strip() == b""Hello Subdomain""\n         rv.close()\n \n-    def test_send_from_directory_bad_request(self, app, req_ctx):\n+    def test_send_from_directory_null_character(self, app, req_ctx):\n         app.root_path = os.path.join(\n             os.path.dirname(__file__), ""test_apps"", ""subdomaintestmodule""\n         )\n \n-        with pytest.raises(BadRequest):\n+        if sys.version_info >= (3, 8):\n+            exception = NotFound\n+        else:\n+            exception = BadRequest\n+\n+        with pytest.raises(exception):\n             flask.send_from_directory(""static"", ""bad\\x00"")\n \n \n'",1.1764705882352942,1.1862745098039216
docs/patterns/deferredcallbacks.rst,docs/patterns/deferredcallbacks.rst,4f6b3105135026bbd8d0045703b5b5746554239e,1234eb0f9ff997932cfb79835e101df7e49babb1,'Fix typo',"'@@ -16,7 +16,7 @@ response object.\n \n One way is to avoid the situation. Very often that is possible. For instance\n you can try to move that logic into a :meth:`~flask.Flask.after_request`\n-callback instead. However, sometimes moving code there makes it more\n+callback instead. However, sometimes moving code there makes it\n more complicated or awkward to reason about.\n \n As an alternative, you can use :func:`~flask.after_this_request` to register\n'",1.5,1.5
src/flask/config.py,src/flask/config.py,1feb69d595575fabb569f8481c85c3568075d7ad,a250997f75cd540bcf268c2d451ab035611aaee2,"'Update `versionadded` for `Config.from_file`\n\nAccording to the change log at https://github.com/pallets/flask/blob/master/CHANGES.rst, the release `Config.from_file` will be published with is now 2.0.0 rather than 1.2.0.'","'@@ -194,7 +194,7 @@ class Config(dict):\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn\'t exist.\n \n-        .. versionadded:: 1.2\n+        .. versionadded:: 2.0\n         """"""\n         filename = os.path.join(self.root_path, filename)\n \n'",3.0,3.0
CHANGES.rst,CHANGES.rst,240a11052bb2ef1ba0bbcc5d503601a175926f75,a83d6d25285bb1eb3860dd054c866d579c3c0823,'lazy load app on reload only',"'@@ -10,6 +10,9 @@ Unreleased\n -   Add :meth:`Config.from_file` to load config using arbitrary file\n     loaders, such as ``toml.load`` or ``json.load``.\n     :meth:`Config.from_json` is deprecated in favor of this. :pr:`3398`\n+-   The ``flask run`` command will only defer errors on reload. Errors\n+    present during the initial call will cause the server to exit with\n+    the traceback immediately. :issue:`3431`\n \n \n Version 1.1.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,240a11052bb2ef1ba0bbcc5d503601a175926f75,a83d6d25285bb1eb3860dd054c866d579c3c0823,'lazy load app on reload only',"'@@ -296,11 +296,15 @@ class DispatchingApp(object):\n     of the Werkzeug debugger means that it shows up in the browser.\n     """"""\n \n-    def __init__(self, loader, use_eager_loading=False):\n+    def __init__(self, loader, use_eager_loading=None):\n         self.loader = loader\n         self._app = None\n         self._lock = Lock()\n         self._bg_loading_exc_info = None\n+\n+        if use_eager_loading is None:\n+            use_eager_loading = os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true""\n+\n         if use_eager_loading:\n             self._load_unlocked()\n         else:\n@@ -841,9 +845,6 @@ def run_command(\n     if debugger is None:\n         debugger = debug\n \n-    if eager_loading is None:\n-        eager_loading = not reload\n-\n     show_server_banner(get_env(), debug, info.app_import_path, eager_loading)\n     app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n \n'",4.194444444444445,4.194444444444445
docs/quickstart.rst,docs/quickstart.rst,a671e47921f6b3f1e6c24f34f23b83ed13fe63b6,240a11052bb2ef1ba0bbcc5d503601a175926f75,'rewrite the development server docs',"'@@ -108,8 +108,8 @@ Old Version of Flask\n Versions of Flask older than 0.11 use to have different ways to start the\n application.  In short, the :command:`flask` command did not exist, and\n neither did :command:`python -m flask`.  In that case you have two options:\n-either upgrade to newer Flask versions or have a look at the :ref:`server`\n-docs to see the alternative method for running a server.\n+either upgrade to newer Flask versions or have a look at :doc:`/server`\n+to see the alternative method for running a server.\n \n Invalid Import Name\n ```````````````````\n@@ -153,7 +153,7 @@ This does the following things:\n You can also control debug mode separately from the environment by\n exporting ``FLASK_DEBUG=1``.\n \n-There are more parameters that are explained in the :ref:`server` docs.\n+There are more parameters that are explained in :doc:`/server`.\n \n .. admonition:: Attention\n \n'",1.3636363636363635,1.3636363636363635
docs/server.rst,docs/server.rst,a671e47921f6b3f1e6c24f34f23b83ed13fe63b6,240a11052bb2ef1ba0bbcc5d503601a175926f75,'rewrite the development server docs',"'@@ -1,62 +1,89 @@\n-.. _server:\n+.. currentmodule:: flask\n \n Development Server\n ==================\n \n-.. currentmodule:: flask\n+Flask provides a ``run`` command to run the application with a\n+development server. In development mode, this server provides an\n+interactive debugger and will reload when code is changed.\n+\n+.. warning::\n+\n+    Do not use the development server when deploying to production. It\n+    is intended for use only during local development. It is not\n+    designed to be particularly efficient, stable, or secure.\n \n-Starting with Flask 0.11 there are multiple built-in ways to run a\n-development server.  The best one is the :command:`flask` command line utility\n-but you can also continue using the :meth:`Flask.run` method.\n+    See :doc:`/deploying/index` for deployment options.\n \n Command Line\n ------------\n \n-The :command:`flask` command line script (:ref:`cli`) is strongly\n-recommended for development because it provides a superior reload\n-experience due to how it loads the application.  The basic usage is like\n-this::\n+The ``flask run`` command line script is the recommended way to run the\n+development server. It requires setting the ``FLASK_APP`` environment\n+variable to point to your application, and ``FLASK_ENV=development`` to\n+fully enable development mode.\n \n-    $ export FLASK_APP=my_application\n+.. code-block:: text\n+\n+    $ export FLASK_APP=hello\n     $ export FLASK_ENV=development\n     $ flask run\n \n This enables the development environment, including the interactive\n debugger and reloader, and then starts the server on\n-*http://localhost:5000/*.\n-\n-The individual features of the server can be controlled by passing more\n-arguments to the ``run`` option. For instance the reloader can be\n-disabled::\n-\n-    $ flask run --no-reload\n+http://localhost:5000/. Use ``flask run --help`` to see the available\n+options, and  :doc:`/cli` for detailed instructions about configuring\n+and using the CLI.\n \n .. note::\n \n-    Prior to Flask 1.0 the :envvar:`FLASK_ENV` environment variable was\n-    not supported and you needed to enable debug mode by exporting\n+    Prior to Flask 1.0 the ``FLASK_ENV`` environment variable was not\n+    supported and you needed to enable debug mode by exporting\n     ``FLASK_DEBUG=1``. This can still be used to control debug mode, but\n     you should prefer setting the development environment as shown\n     above.\n \n+\n+Lazy or Eager Loading\n+~~~~~~~~~~~~~~~~~~~~~\n+\n+When using the ``flask run`` command with the reloader, the server will\n+continue to run even if you introduce syntax errors or other\n+initialization errors into the code. Accessing the site will show the\n+interactive debugger for the error, rather than crashing the server.\n+This feature is called ""lazy loading"".\n+\n+If a syntax error is already present when calling ``flask run``, it will\n+fail immediately and show the traceback rather than waiting until the\n+site is accessed. This is intended to make errors more visible initially\n+while still allowing the server to handle errors on reload.\n+\n+To override this behavior and always fail immediately, even on reload,\n+pass the ``--eager-loading`` option. To always keep the server running,\n+even on the initial call, pass ``--lazy-loading``.\n+\n+\n In Code\n -------\n \n-The alternative way to start the application is through the\n-:meth:`Flask.run` method.  This will immediately launch a local server\n-exactly the same way the :command:`flask` script does.\n+As an alternative to the ``flask run`` command, the development server\n+can also be started from Python with the :meth:`Flask.run` method. This\n+method takes arguments similar to the CLI options to control the server.\n+The main difference from the CLI command is that the server will crash\n+if there are errors when reloading.\n+\n+``debug=True`` can be passed to enable the debugger and reloader, but\n+the ``FLASK_ENV=development`` environment variable is still required to\n+fully enable development mode.\n+\n+Place the call in a main block, otherwise it will interfere when trying\n+to import and run the application with a production server later.\n \n-Example::\n+.. code-block:: python\n \n-    if __name__ == \'__main__\':\n-        app.run()\n+    if __name__ == ""__main__"":\n+        app.run(debug=True)\n \n-This works well for the common case but it does not work well for\n-development which is why from Flask 0.11 onwards the :command:`flask`\n-method is recommended.  The reason for this is that due to how the reload\n-mechanism works there are some bizarre side-effects (like executing\n-certain code twice, sometimes crashing without message or dying when a\n-syntax or import error happens).\n+.. code-block:: text\n \n-It is however still a perfectly valid method for invoking a non automatic\n-reloading application.\n+    $ python hello.py\n'",0,0
src/flask/cli.py,src/flask/cli.py,a671e47921f6b3f1e6c24f34f23b83ed13fe63b6,240a11052bb2ef1ba0bbcc5d503601a175926f75,'rewrite the development server docs',"'@@ -806,7 +806,7 @@ class SeparatedPathType(click.Path):\n     ""is active if debug is enabled."",\n )\n @click.option(\n-    ""--eager-loading/--lazy-loader"",\n+    ""--eager-loading/--lazy-loading"",\n     default=None,\n     help=""Enable or disable eager loading. By default eager ""\n     ""loading is enabled if the reloader is disabled."",\n'",4.194444444444445,4.194444444444445
setup.py,setup.py,33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a,42942ec2910420ff6107b9da839c93d9c422109c,'declare support for Python 3.8',"'@@ -40,6 +40,9 @@ setup(\n         ""Programming Language :: Python :: 3.5"",\n         ""Programming Language :: Python :: 3.6"",\n         ""Programming Language :: Python :: 3.7"",\n+        ""Programming Language :: Python :: 3.8"",\n+        ""Programming Language :: Python :: Implementation :: CPython"",\n+        ""Programming Language :: Python :: Implementation :: PyPy"",\n         ""Topic :: Internet :: WWW/HTTP :: Dynamic Content"",\n         ""Topic :: Internet :: WWW/HTTP :: WSGI :: Application"",\n         ""Topic :: Software Development :: Libraries :: Application Frameworks"",\n'",0,0
tox.ini,tox.ini,33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a,42942ec2910420ff6107b9da839c93d9c422109c,'declare support for Python 3.8',"'@@ -1,7 +1,7 @@\n [tox]\n envlist =\n-    py{37,36,35,27,py3,py}\n-    py37-{simplejson,devel,lowest}\n+    py{38,37,36,35,27,py3,py}\n+    py38-{simplejson,devel,lowest}\n     docs-html\n     coverage\n \n'",0,0
.azure-pipelines.yml,.azure-pipelines.yml,824e548036096c835735b5655513fe291d9560bc,33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a,'add 3.8 to pipelines',"""@@ -5,39 +5,38 @@ trigger:\n jobs:\n   - job: Flask\n     variables:\n-      vmImage: ubuntu-latest\n-      python.version: '3.7'\n-      python.architecture: 'x64'\n+      vmImage: 'ubuntu-latest'\n+      python.version: '3.8'\n       TOXENV: 'py,coverage-ci'\n-      publish.test.results: 'true'\n+      hasTestResults: 'true'\n \n     strategy:\n       matrix:\n-        Python37Linux:\n-          python.version: '3.7'\n-        Python37Windows:\n-          python.version: '3.7'\n+        Python 3.8 Linux:\n+          vmImage: 'ubuntu-latest'\n+        Python 3.8 Windows:\n           vmImage: 'windows-latest'\n-        Python37Mac:\n-          python.version: '3.7'\n+        Python 3.8 Mac:\n           vmImage: 'macos-latest'\n-        Pypy3Linux:\n+        PyPy 3 Linux:\n           python.version: 'pypy3'\n-        Python36Linux:\n+        Python 3.7 Linux:\n+          python.version: '3.7'\n+        Python 3.6 Linux:\n           python.version: '3.6'\n-        Python35Linux:\n+        Python 3.5 Linux:\n           python.version: '3.5'\n-        Python27Linux:\n+        Python 2.7 Linux:\n           python.version: '2.7'\n-        Python27Windows:\n+        Python 2.7 Windows:\n           python.version: '2.7'\n           vmImage: 'windows-latest'\n-        DocsHtml:\n-          TOXENV: 'docs-html'\n-          publish.test.results: 'false'\n+        Docs:\n+          TOXENV: 'docs'\n+          hasTestResults: 'false'\n         Style:\n-          TOXENV: stylecheck\n-          publish.test.results: 'false'\n+          TOXENV: 'style'\n+          hasTestResults: 'false'\n         VersionRange:\n           TOXENV: 'devel,lowest,coverage-ci'\n \n@@ -48,27 +47,26 @@ jobs:\n       - task: UsePythonVersion@0\n         inputs:\n           versionSpec: $(python.version)\n-          architecture: $(python.architecture)\n         displayName: Use Python $(python.version)\n \n       - script: pip --disable-pip-version-check install -U tox\n         displayName: Install tox\n \n-      - script: tox -- --junitxml=test-results.xml tests examples\n+      - script: tox -s false -- --junitxml=test-results.xml tests examples\n         displayName: Run tox\n \n       - task: PublishTestResults@2\n         inputs:\n           testResultsFiles: test-results.xml\n           testRunTitle: $(Agent.JobName)\n-        condition: eq(variables['publish.test.results'], 'true')\n+        condition: eq(variables['hasTestResults'], 'true')\n         displayName: Publish test results\n \n       - task: PublishCodeCoverageResults@1\n         inputs:\n           codeCoverageTool: Cobertura\n           summaryFileLocation: coverage.xml\n-        condition: eq(variables['publish.test.results'], 'true')\n+        condition: eq(variables['hasTestResults'], 'true')\n         displayName: Publish coverage results\n \n   # Test on the nightly version of Python.\n""",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,824e548036096c835735b5655513fe291d9560bc,33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a,'add 3.8 to pipelines',"'@@ -164,6 +164,7 @@ Building the docs\n Build the docs in the ``docs`` directory using Sphinx::\n \n     cd docs\n+    pip install -r requirements.txt\n     make html\n \n Open ``_build/html/index.html`` in your browser to view the docs.\n'",0,0
tox.ini,tox.ini,824e548036096c835735b5655513fe291d9560bc,33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a,'add 3.8 to pipelines',"""@@ -2,8 +2,9 @@\n envlist =\n     py{38,37,36,35,27,py3,py}\n     py38-{simplejson,devel,lowest}\n-    docs-html\n+    docs\n     coverage\n+skip_missing_interpreters = true\n \n [testenv]\n passenv = LANG\n@@ -14,7 +15,7 @@ deps =\n     blinker\n     python-dotenv\n \n-    lowest: Werkzeug==0.15\n+    lowest: Werkzeug==0.15.5\n     lowest: Jinja2==2.10\n     lowest: itsdangerous==0.24\n     lowest: Click==5.1\n@@ -39,16 +40,14 @@ commands =\n # courtesy Python nightly test, don't fail the build in CI\n ignore_outcome = true\n commands =\n-    pip install -q -e examples/tutorial[test]\n-    pip install -q -e examples/javascript[test]\n-    coverage run -p -m pytest --tb=short -Werror --junitxml=test-results.xml {posargs:tests examples}\n+    coverage run -p -m pytest --tb=short -Werror --junitxml=test-results.xml tests\n \n-[testenv:stylecheck]\n+[testenv:style]\n deps = pre-commit\n skip_install = true\n commands = pre-commit run --all-files --show-diff-on-failure\n \n-[testenv:docs-html]\n+[testenv:docs]\n deps =\n     -r docs/requirements.txt\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n""",0,0
.azure-pipelines.yml,.azure-pipelines.yml,26dac4fd77c9f73a552618597e24f324837c10a1,af5743f6bd2a62072657830d3585b98680e1c203,'fix test pipeline display name',"""@@ -3,7 +3,7 @@ trigger:\n   - '*.x'\n \n jobs:\n-  - job: Flask\n+  - job: Tests\n     variables:\n       vmImage: 'ubuntu-latest'\n       python.version: '3.8'\n""",0,0
CHANGES.rst,CHANGES.rst,980168d08498c00a14ab0f687ffac8cc50edb326,2659f0a5e62c9a97ef37dc2ded3ca8fda3c53c9f,"""send_file doesn't allow StringIO""","'@@ -13,6 +13,9 @@ Unreleased\n -   The ``flask run`` command will only defer errors on reload. Errors\n     present during the initial call will cause the server to exit with\n     the traceback immediately. :issue:`3431`\n+-   :func:`send_file` raises a :exc:`ValueError` when passed an\n+    :mod:`io` object in text mode. Previously, it would respond with\n+    200 OK and an empty file. :issue:`3358`\n \n \n Version 1.1.2\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,980168d08498c00a14ab0f687ffac8cc50edb326,2659f0a5e62c9a97ef37dc2ded3ca8fda3c53c9f,"""send_file doesn't allow StringIO""","'@@ -489,6 +489,11 @@ def send_file(\n     guessing requires a `filename` or an `attachment_filename` to be\n     provided.\n \n+    When passing a file-like object instead of a filename, only binary\n+    mode is supported (``open(filename, ""rb"")``, :class:`~io.BytesIO`,\n+    etc.). Text mode files and :class:`~io.StringIO` will raise a\n+    :exc:`ValueError`.\n+\n     ETags will also be attached automatically if a `filename` is provided. You\n     can turn this off by setting `add_etags=False`.\n \n@@ -499,53 +504,56 @@ def send_file(\n     Please never pass filenames to this function from user sources;\n     you should use :func:`send_from_directory` instead.\n \n-    .. versionadded:: 0.2\n+    .. versionchanged:: 2.0\n+        Passing a file-like object that inherits from\n+        :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather\n+        than sending an empty file.\n \n-    .. versionadded:: 0.5\n-       The `add_etags`, `cache_timeout` and `conditional` parameters were\n-       added.  The default behavior is now to attach etags.\n+    .. versionchanged:: 1.1\n+        ``filename`` may be a :class:`~os.PathLike` object.\n \n-    .. versionchanged:: 0.7\n-       mimetype guessing and etag support for file objects was\n-       deprecated because it was unreliable.  Pass a filename if you are\n-       able to, otherwise attach an etag yourself.  This functionality\n-       will be removed in Flask 1.0\n+    .. versionchanged:: 1.1\n+        Passing a :class:`~io.BytesIO` object supports range requests.\n \n-    .. versionchanged:: 0.9\n-       cache_timeout pulls its default from application config, when None.\n+    .. versionchanged:: 1.0.3\n+        Filenames are encoded with ASCII instead of Latin-1 for broader\n+        compatibility with WSGI servers.\n+\n+    .. versionchanged:: 1.0\n+        UTF-8 filenames, as specified in `RFC 2231`_, are supported.\n+\n+    .. _RFC 2231: https://tools.ietf.org/html/rfc2231#section-4\n \n     .. versionchanged:: 0.12\n-       The filename is no longer automatically inferred from file objects. If\n-       you want to use automatic mimetype and etag support, pass a filepath via\n-       `filename_or_fp` or `attachment_filename`.\n+       The filename is no longer automatically inferred from file\n+       objects. If you want to use automatic MIME and etag support, pass\n+       a filename via ``filename_or_fp`` or ``attachment_filename``.\n \n     .. versionchanged:: 0.12\n-       The `attachment_filename` is preferred over `filename` for MIME-type\n+       ``attachment_filename`` is preferred over ``filename`` for MIME\n        detection.\n \n-    .. versionchanged:: 1.0\n-        UTF-8 filenames, as specified in `RFC 2231`_, are supported.\n+    .. versionchanged:: 0.9\n+       ``cache_timeout`` defaults to\n+       :meth:`Flask.get_send_file_max_age`.\n \n-    .. _RFC 2231: https://tools.ietf.org/html/rfc2231#section-4\n+    .. versionchanged:: 0.7\n+       MIME guessing and etag support for file-like objects was\n+       deprecated because it was unreliable. Pass a filename if you are\n+       able to, otherwise attach an etag yourself. This functionality\n+       will be removed in Flask 1.0.\n \n-    .. versionchanged:: 1.0.3\n-        Filenames are encoded with ASCII instead of Latin-1 for broader\n-        compatibility with WSGI servers.\n+    .. versionadded:: 0.5\n+       The ``add_etags``, ``cache_timeout`` and ``conditional``\n+       parameters were added. The default behavior is to add etags.\n \n-    .. versionchanged:: 1.1\n-        Filename may be a :class:`~os.PathLike` object.\n-\n-    .. versionadded:: 1.1\n-        Partial content supports :class:`~io.BytesIO`.\n-\n-    :param filename_or_fp: the filename of the file to send.\n-                           This is relative to the :attr:`~Flask.root_path`\n-                           if a relative path is specified.\n-                           Alternatively a file object might be provided in\n-                           which case ``X-Sendfile`` might not work and fall\n-                           back to the traditional method.  Make sure that the\n-                           file pointer is positioned at the start of data to\n-                           send before calling :func:`send_file`.\n+    .. versionadded:: 0.2\n+\n+    :param filename_or_fp: The filename of the file to send, relative to\n+        :attr:`~Flask.root_path` if a relative path is specified.\n+        Alternatively, a file-like object opened in binary mode. Make\n+        sure the file pointer is seeked to the start of the data.\n+        ``X-Sendfile`` will only be used with filenames.\n     :param mimetype: the mimetype of the file if provided. If a file path is\n                      given, auto detection happens as fallback, otherwise an\n                      error will be raised.\n@@ -620,25 +628,29 @@ def send_file(\n     if current_app.use_x_sendfile and filename:\n         if file is not None:\n             file.close()\n+\n         headers[""X-Sendfile""] = filename\n         fsize = os.path.getsize(filename)\n-        headers[""Content-Length""] = fsize\n         data = None\n     else:\n         if file is None:\n             file = open(filename, ""rb"")\n             mtime = os.path.getmtime(filename)\n             fsize = os.path.getsize(filename)\n-            headers[""Content-Length""] = fsize\n         elif isinstance(file, io.BytesIO):\n             try:\n                 fsize = file.getbuffer().nbytes\n             except AttributeError:\n                 # Python 2 doesn\'t have getbuffer\n                 fsize = len(file.getvalue())\n-            headers[""Content-Length""] = fsize\n+        elif isinstance(file, io.TextIOBase):\n+            raise ValueError(""Files must be opened in binary mode or use BytesIO."")\n+\n         data = wrap_file(request.environ, file)\n \n+    if fsize is not None:\n+        headers[""Content-Length""] = fsize\n+\n     rv = current_app.response_class(\n         data, mimetype=mimetype, headers=headers, direct_passthrough=True\n     )\n'",4.212121212121212,4.2727272727272725
tests/test_helpers.py,tests/test_helpers.py,980168d08498c00a14ab0f687ffac8cc50edb326,2659f0a5e62c9a97ef37dc2ded3ca8fda3c53c9f,"""send_file doesn't allow StringIO""","'@@ -24,6 +24,7 @@ from werkzeug.http import parse_options_header\n \n import flask\n from flask import json\n+from flask._compat import PY2\n from flask._compat import StringIO\n from flask._compat import text_type\n from flask.helpers import get_debug_flag\n@@ -446,6 +447,14 @@ class TestJSON(object):\n             assert lines == sorted_by_str\n \n \n+class PyStringIO(object):\n+    def __init__(self, *args, **kwargs):\n+        self._io = io.BytesIO(*args, **kwargs)\n+\n+    def __getattr__(self, name):\n+        return getattr(self._io, name)\n+\n+\n class TestSendfile(object):\n     def test_send_file_regular(self, app, req_ctx):\n         rv = flask.send_file(""static/index.html"")\n@@ -473,7 +482,7 @@ class TestSendfile(object):\n         @app.route(""/"")\n         def index():\n             return flask.send_file(\n-                StringIO(""party like it\'s""),\n+                io.BytesIO(b""party like it\'s""),\n                 last_modified=last_modified,\n                 mimetype=""text/plain"",\n             )\n@@ -483,65 +492,53 @@ class TestSendfile(object):\n \n     def test_send_file_object_without_mimetype(self, app, req_ctx):\n         with pytest.raises(ValueError) as excinfo:\n-            flask.send_file(StringIO(""LOL""))\n+            flask.send_file(io.BytesIO(b""LOL""))\n         assert ""Unable to infer MIME-type"" in str(excinfo.value)\n         assert ""no filename is available"" in str(excinfo.value)\n \n-        flask.send_file(StringIO(""LOL""), attachment_filename=""filename"")\n-\n-    def test_send_file_object(self, app, req_ctx):\n-        with open(os.path.join(app.root_path, ""static/index.html""), mode=""rb"") as f:\n-            rv = flask.send_file(f, mimetype=""text/html"")\n-            rv.direct_passthrough = False\n-            with app.open_resource(""static/index.html"") as f:\n-                assert rv.data == f.read()\n-            assert rv.mimetype == ""text/html""\n-            rv.close()\n+        flask.send_file(io.BytesIO(b""LOL""), attachment_filename=""filename"")\n \n+    @pytest.mark.parametrize(\n+        ""opener"",\n+        [\n+            lambda app: open(os.path.join(app.static_folder, ""index.html""), ""rb""),\n+            lambda app: io.BytesIO(b""Test""),\n+            pytest.param(\n+                lambda app: StringIO(""Test""),\n+                marks=pytest.mark.skipif(not PY2, reason=""Python 2 only""),\n+            ),\n+            lambda app: PyStringIO(b""Test""),\n+        ],\n+    )\n+    @pytest.mark.usefixtures(""req_ctx"")\n+    def test_send_file_object(self, app, opener):\n+        file = opener(app)\n         app.use_x_sendfile = True\n-\n-        with open(os.path.join(app.root_path, ""static/index.html"")) as f:\n-            rv = flask.send_file(f, mimetype=""text/html"")\n-            assert rv.mimetype == ""text/html""\n-            assert ""x-sendfile"" not in rv.headers\n-            rv.close()\n-\n-        app.use_x_sendfile = False\n-        f = StringIO(""Test"")\n-        rv = flask.send_file(f, mimetype=""application/octet-stream"")\n+        rv = flask.send_file(file, mimetype=""text/plain"")\n         rv.direct_passthrough = False\n-        assert rv.data == b""Test""\n-        assert rv.mimetype == ""application/octet-stream""\n-        rv.close()\n-\n-        class PyStringIO(object):\n-            def __init__(self, *args, **kwargs):\n-                self._io = StringIO(*args, **kwargs)\n-\n-            def __getattr__(self, name):\n-                return getattr(self._io, name)\n-\n-        f = PyStringIO(""Test"")\n-        f.name = ""test.txt""\n-        rv = flask.send_file(f, attachment_filename=f.name)\n-        rv.direct_passthrough = False\n-        assert rv.data == b""Test""\n+        assert rv.data\n         assert rv.mimetype == ""text/plain""\n+        assert ""x-sendfile"" not in rv.headers\n         rv.close()\n \n-        f = StringIO(""Test"")\n-        rv = flask.send_file(f, mimetype=""text/plain"")\n-        rv.direct_passthrough = False\n-        assert rv.data == b""Test""\n-        assert rv.mimetype == ""text/plain""\n-        rv.close()\n+    @pytest.mark.parametrize(\n+        ""opener"",\n+        [\n+            lambda app: io.StringIO(u""Test""),\n+            pytest.param(\n+                lambda app: open(os.path.join(app.static_folder, ""index.html"")),\n+                marks=pytest.mark.skipif(PY2, reason=""Python 3 only""),\n+            ),\n+        ],\n+    )\n+    @pytest.mark.usefixtures(""req_ctx"")\n+    def test_send_file_text_fails(self, app, opener):\n+        file = opener(app)\n \n-        app.use_x_sendfile = True\n+        with pytest.raises(ValueError):\n+            flask.send_file(file, mimetype=""text/plain"")\n \n-        f = StringIO(""Test"")\n-        rv = flask.send_file(f, mimetype=""text/html"")\n-        assert ""x-sendfile"" not in rv.headers\n-        rv.close()\n+        file.close()\n \n     def test_send_file_pathlike(self, app, req_ctx):\n         rv = flask.send_file(FakePath(""static/index.html""))\n@@ -630,10 +627,6 @@ class TestSendfile(object):\n         assert rv.data == b""somethingsomething""[4:16]\n         rv.close()\n \n-    @pytest.mark.skipif(\n-        not callable(getattr(Range, ""to_content_range_header"", None)),\n-        reason=""not implemented within werkzeug"",\n-    )\n     def test_send_file_range_request_xsendfile_invalid(self, app, client):\n         # https://github.com/pallets/flask/issues/2526\n         app.use_x_sendfile = True\n@@ -649,7 +642,7 @@ class TestSendfile(object):\n     def test_attachment(self, app, req_ctx):\n         app = flask.Flask(__name__)\n         with app.test_request_context():\n-            with open(os.path.join(app.root_path, ""static/index.html"")) as f:\n+            with open(os.path.join(app.root_path, ""static/index.html""), ""rb"") as f:\n                 rv = flask.send_file(\n                     f, as_attachment=True, attachment_filename=""index.html""\n                 )\n@@ -657,7 +650,7 @@ class TestSendfile(object):\n                 assert value == ""attachment""\n                 rv.close()\n \n-        with open(os.path.join(app.root_path, ""static/index.html"")) as f:\n+        with open(os.path.join(app.root_path, ""static/index.html""), ""rb"") as f:\n             rv = flask.send_file(\n                 f, as_attachment=True, attachment_filename=""index.html""\n             )\n@@ -674,7 +667,7 @@ class TestSendfile(object):\n         rv.close()\n \n         rv = flask.send_file(\n-            StringIO(""Test""),\n+            io.BytesIO(b""Test""),\n             as_attachment=True,\n             attachment_filename=""index.txt"",\n             add_etags=False,\n'",1.1862745098039216,1.1844660194174756
docs/conf.py,docs/conf.py,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -23,7 +23,7 @@ intersphinx_mapping = {\n     ""python"": (""https://docs.python.org/3/"", None),\n     ""werkzeug"": (""https://werkzeug.palletsprojects.com/"", None),\n     ""click"": (""https://click.palletsprojects.com/"", None),\n-    ""jinja"": (""http://jinja.pocoo.org/docs/"", None),\n+    ""jinja"": (""https://jinja.palletsprojects.com/"", None),\n     ""itsdangerous"": (""https://itsdangerous.palletsprojects.com/"", None),\n     ""sqlalchemy"": (""https://docs.sqlalchemy.org/"", None),\n     ""wtforms"": (""https://wtforms.readthedocs.io/en/stable/"", None),\n'",3.0,3.0
docs/index.rst,docs/index.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -20,7 +20,7 @@ Flask in detail, with a full reference in the :ref:`api` section.\n Flask depends on the `Jinja`_ template engine and the `Werkzeug`_ WSGI\n toolkit. The documentation for these libraries can be found at:\n \n-- `Jinja documentation <http://jinja.pocoo.org/docs>`_\n+- `Jinja documentation <https://jinja.palletsprojects.com/>`_\n - `Werkzeug documentation <https://werkzeug.palletsprojects.com/>`_\n \n .. _Jinja: https://www.palletsprojects.com/p/jinja/\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"""@@ -359,7 +359,7 @@ Rendering Templates\n Generating HTML from within Python is not fun, and actually pretty\n cumbersome because you have to do the HTML escaping on your own to keep\n the application secure.  Because of that Flask configures the `Jinja2\n-<http://jinja.pocoo.org/>`_ template engine for you automatically.\n+<https://palletsprojects.com/p/jinja/>`_ template engine for you automatically.\n \n To render a template you can use the :func:`~flask.render_template`\n method.  All you have to do is provide the name of the template and the\n@@ -392,7 +392,7 @@ package it's actually inside your package:\n \n For templates you can use the full power of Jinja2 templates.  Head over\n to the official `Jinja2 Template Documentation\n-<http://jinja.pocoo.org/docs/templates/>`_ for more information.\n+<http://jinja.palletsprojects.com/templates/>`_ for more information.\n \n Here is an example template:\n \n""",1.3636363636363635,1.3636363636363635
docs/templating.rst,docs/templating.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"""@@ -11,7 +11,7 @@ An extension can depend on Jinja2 being present.\n This section only gives a very quick introduction into how Jinja2\n is integrated into Flask.  If you want information on the template\n engine's syntax itself, head over to the official `Jinja2 Template\n-Documentation <http://jinja.pocoo.org/docs/templates/>`_ for\n+Documentation <https://jinja.palletsprojects.com/templates/>`_ for\n more information.\n \n Jinja Setup\n""",1.0,1.0
docs/tutorial/blog.rst,docs/tutorial/blog.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"""@@ -125,7 +125,7 @@ special variable available inside `Jinja for loops`_. It's used to\n display a line after each post except the last one, to visually separate\n them.\n \n-.. _Jinja for loops: http://jinja.pocoo.org/docs/templates/#for\n+.. _Jinja for loops: https://jinja.palletsprojects.com/templates/#for\n \n \n Create\n""",0,0
docs/tutorial/templates.rst,docs/tutorial/templates.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -31,7 +31,7 @@ statement like ``if`` and ``for``. Unlike Python, blocks are denoted\n by start and end tags rather than indentation since static text within\n a block could change indentation.\n \n-.. _Jinja: http://jinja.pocoo.org/docs/templates/\n+.. _Jinja: https://jinja.palletsprojects.com/templates/\n .. _HTML: https://developer.mozilla.org/docs/Web/HTML\n \n \n'",0,0
examples/javascript/README.rst,examples/javascript/README.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -15,7 +15,7 @@ page. Demonstrates using |XMLHttpRequest|_, |fetch|_, and\n .. |jQuery.ajax| replace:: ``jQuery.ajax``\n .. _jQuery.ajax: https://api.jquery.com/jQuery.ajax/\n \n-.. _Flask docs: http://flask.pocoo.org/docs/patterns/jquery/\n+.. _Flask docs: https://flask.palletsprojects.com/patterns/jquery/\n \n \n Install\n'",0,0
examples/javascript/setup.py,examples/javascript/setup.py,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -9,7 +9,7 @@ with io.open(""README.rst"", ""rt"", encoding=""utf8"") as f:\n setup(\n     name=""js_example"",\n     version=""1.0.0"",\n-    url=""http://flask.pocoo.org/docs/patterns/jquery/"",\n+    url=""https://flask.palletsprojects.com/patterns/jquery/"",\n     license=""BSD"",\n     maintainer=""Pallets team"",\n     maintainer_email=""contact@palletsprojects.com"",\n'",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -3,7 +3,7 @@ Flaskr\n \n The basic blog app built in the Flask `tutorial`_.\n \n-.. _tutorial: http://flask.pocoo.org/docs/tutorial/\n+.. _tutorial: https://flask.palletsprojects.com/tutorial/\n \n \n Install\n'",0,0
examples/tutorial/setup.py,examples/tutorial/setup.py,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -9,7 +9,7 @@ with io.open(""README.rst"", ""rt"", encoding=""utf8"") as f:\n setup(\n     name=""flaskr"",\n     version=""1.0.0"",\n-    url=""http://flask.pocoo.org/docs/tutorial/"",\n+    url=""https://flask.palletsprojects.com/tutorial/"",\n     license=""BSD"",\n     maintainer=""Pallets team"",\n     maintainer_email=""contact@palletsprojects.com"",\n'",0,0
src/flask/debughelpers.py,src/flask/debughelpers.py,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -164,7 +164,7 @@ def explain_template_loading_attempts(app, template, attempts):\n             \'belongs to the blueprint ""%s"".\' % blueprint\n         )\n         info.append(""  Maybe you did not place a template in the right folder?"")\n-        info.append(""  See http://flask.pocoo.org/docs/blueprints/#templates"")\n+        info.append(""  See https://flask.palletsprojects.com/blueprints/#templates"")\n \n     app.logger.info(""\\n"".join(info))\n \n'",4.125,4.125
tests/test_templating.py,tests/test_templating.py,ef434ea9985b756f13bed283dfa55828829e5e1f,d49cfb35d4bb45e94d8c7c1920e7be99e4e10dde,'Replace old pocoo links everywhere\n\npocco.org -> palletsprojects.com',"'@@ -426,7 +426,7 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n             assert (\n                 ""looked up from an endpoint that belongs to "" \'the blueprint ""frontend""\'\n             ) in text\n-            assert ""See http://flask.pocoo.org/docs/blueprints/#templates"" in text\n+            assert ""See https://flask.palletsprojects.com/blueprints/#templates"" in text\n \n     with app.test_client() as c:\n         monkeypatch.setitem(app.config, ""EXPLAIN_TEMPLATE_LOADING"", True)\n'",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,a3415fc6dcf3f355a2b815686d6de12fa7383335,ef434ea9985b756f13bed283dfa55828829e5e1f,'Use https for pallets URL',"""@@ -392,7 +392,7 @@ package it's actually inside your package:\n \n For templates you can use the full power of Jinja2 templates.  Head over\n to the official `Jinja2 Template Documentation\n-<http://jinja.palletsprojects.com/templates/>`_ for more information.\n+<https://jinja.palletsprojects.com/templates/>`_ for more information.\n \n Here is an example template:\n \n""",1.3636363636363635,1.3636363636363635
src/flask/app.py,src/flask/app.py,38eb5d3b49d628785a470e2e773fc5ac82e3c8e4,25a5d3031167566cef0fcf38b54afc6b7dcf6e86,"""Remove comment about extension backwards compat\n\n0.7 was a long time ago; there's no reason for extension to supports such old versions.""","'@@ -549,12 +549,7 @@ class Flask(_PackageBoundObject):\n \n         #: a place where extensions can store application specific state.  For\n         #: example this is where an extension could store database engines and\n-        #: similar things.  For backwards compatibility extensions should register\n-        #: themselves like this::\n-        #:\n-        #:      if not hasattr(app, \'extensions\'):\n-        #:          app.extensions = {}\n-        #:      app.extensions[\'extensionname\'] = SomeObject()\n+        #: similar things.\n         #:\n         #: The key must match the name of the extension module. For example in\n         #: case of a ""Flask-Foo"" extension in `flask_foo`, the key would be\n'",2.611764705882353,2.611764705882353
docs/reqcontext.rst,docs/reqcontext.rst,ce08807a8b1f1229a1c390b6a86d5ee0f4029da0,26dac4fd77c9f73a552618597e24f324837c10a1,'This is a typo.',"'@@ -199,7 +199,7 @@ contexts until the ``with`` block exits.\n         print(request.path)\n \n     # the contexts are popped and teardown functions are called after\n-    # the client with block exists\n+    # the client with block exits\n \n Signals\n ~~~~~~~\n'",0,0
docs/reqcontext.rst,docs/reqcontext.rst,bb66b61d1d008599e39fd9d8c666ca0f0e9850e4,0a8be38058a2335c6ffa15b9c6be0562a70f9d35,'A better expression for the intended meaning',"""@@ -251,7 +251,7 @@ point to the unique object bound to each worker behind the scenes as\n described on this page.\n \n Most of the time you don't have to care about that, but there are some\n-exceptions where it is good to know that this object is an actual proxy:\n+exceptions where it is good to know that this object is actually a proxy:\n \n -   The proxy objects cannot fake their type as the actual object types.\n     If you want to perform instance checks, you have to do that on the\n""",0,0
CHANGES.rst,CHANGES.rst,8d5234e4c729893c3ebd732839a8e7a01a51b7bc,38eb5d3b49d628785a470e2e773fc5ac82e3c8e4,'next version 1.2.0',"'@@ -1,6 +1,6 @@\n .. currentmodule:: flask\n \n-Version 2.0.0\n+Version 1.2.0\n -------------\n \n Unreleased\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,8d5234e4c729893c3ebd732839a8e7a01a51b7bc,38eb5d3b49d628785a470e2e773fc5ac82e3c8e4,'next version 1.2.0',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.2.dev""\n+__version__ = ""1.2.0.dev0""\n'",0,0
tests/test_instance_config.py,tests/test_instance_config.py,63b40254e992c6c18d16ffade7aa8358d686a697,de4be03b5d704240af5d27cf98c87a39f78570d4,'xfail __main__ instance test interacting with tox',"'@@ -24,6 +24,7 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n+@pytest.mark.xfail(reason=""TODO: weird interaction with tox"")\n def test_main_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""main_app.py"")\n     app.write(\'import flask\\n\\napp = flask.Flask(""__main__"")\')\n'",1.2,1.2
.gitignore,.gitignore,6627c5a3d250d760777b8e84d61ea6abb98e2937,de4be03b5d704240af5d27cf98c87a39f78570d4,'Add vscode settings dir to .gitignore',"'@@ -15,6 +15,7 @@ _mailinglist\n .pytest_cache/\n .idea/\n docs/_build/\n+.vscode\n \n # Coverage reports\n htmlcov/\n'",0,0
setup.py,setup.py,85db0135cb302e2e17936fb4cf62c9f90c94e342,e0079490176f080a9a4e52d4edc67e370992d943,'Pin Werkzeug < 1.0 for 0.12 (#3497)',"""@@ -71,7 +71,7 @@ setup(\n     zip_safe=False,\n     platforms='any',\n     install_requires=[\n-        'Werkzeug>=0.7',\n+        'Werkzeug>=0.7,<1.0',\n         'Jinja2>=2.4',\n         'itsdangerous>=0.21',\n         'click>=2.0',\n""",0,0
CHANGES,CHANGES,8086ce8b9f17e53ce505206fde8e0de2739712ff,85db0135cb302e2e17936fb4cf62c9f90c94e342,'Changelog for 0.12.5',"'@@ -2,6 +2,15 @@ Flask Changelog\n ===============\n \n \n+Version 0.12.5\n+--------------\n+\n+Released on February 10 2020\n+\n+-   Pin Werkzeug to < 1.0.0.  (`#3497`_)\n+\n+.. _#3497: https://github.com/pallets/flask/issues/3497\n+\n Version 0.12.4\n --------------\n \n'",0,0
flask/__init__.py,flask/__init__.py,191710cbda616a53533d5e794a787f24c453ac5a,8086ce8b9f17e53ce505206fde8e0de2739712ff,'Bump version number to 0.12.5',"'@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n """"""\n \n-__version__ = \'0.12.5.dev\'\n+__version__ = \'0.12.5\'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n'",0,0
flask/__init__.py,flask/__init__.py,79c71f24e4cb064852e2cbbfef78a0a051eb7ced,191710cbda616a53533d5e794a787f24c453ac5a,'0.12.6.dev',"'@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n """"""\n \n-__version__ = \'0.12.5\'\n+__version__ = \'0.12.6.dev\'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n'",0,0
src/flask/app.py,src/flask/app.py,900fa2f795615683234cc7e7b050a1e131983689,5ceb0a59dd189675710da58f88719683a4edcb66,'Feature request #3445.',"'@@ -2078,9 +2078,9 @@ class Flask(_PackageBoundObject):\n         # the body must not be None\n         if rv is None:\n             raise TypeError(\n-                ""The view function did not return a valid response. The""\n+                \'The view function for ""{}"" did not return a valid response. The\'\n                 "" function either returned None or ended without a return""\n-                "" statement.""\n+                "" statement."".format(request.endpoint)\n             )\n \n         # make sure the body is an instance of the response class\n'",2.611764705882353,2.611764705882353
tests/test_basic.py,tests/test_basic.py,900fa2f795615683234cc7e7b050a1e131983689,5ceb0a59dd189675710da58f88719683a4edcb66,'Feature request #3445.',"'@@ -1221,6 +1221,7 @@ def test_response_type_errors():\n     with pytest.raises(TypeError) as e:\n         c.get(""/none"")\n         assert ""returned None"" in str(e.value)\n+        assert ""from_none"" in str(e.value)\n \n     with pytest.raises(TypeError) as e:\n         c.get(""/small_tuple"")\n'",1.0739299610894941,1.0739299610894941
CHANGES.rst,CHANGES.rst,d92b64aa275841b0c9aea3903aba72fbc4275d91,2f8086e8c88377b822be6b83b306c8a1ef7ce426,'clean up merge',"'@@ -231,11 +231,9 @@ Released 2018-04-26\n Version 0.12.5\n --------------\n \n-Released on February 10 2020\n+Released 2020-02-10\n \n--   Pin Werkzeug to < 1.0.0.  (`#3497`_)\n-\n-.. _#3497: https://github.com/pallets/flask/issues/3497\n+-   Pin Werkzeug to < 1.0.0. :issue:`3497`\n \n \n Version 0.12.4\n'",0,0
setup.py,setup.py,d92b64aa275841b0c9aea3903aba72fbc4275d91,2f8086e8c88377b822be6b83b306c8a1ef7ce426,'clean up merge',"'@@ -50,7 +50,7 @@ setup(\n     include_package_data=True,\n     python_requires="">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"",\n     install_requires=[\n-        \'Werkzeug>=0.7,<1.0\',\n+        \'Werkzeug>=0.14\',\n         \'Jinja2>=2.4\',\n         \'itsdangerous>=0.21\',\n         \'click>=2.0\',\n'",0,0
.github/ISSUE_TEMPLATE.md,.github/ISSUE_TEMPLATE.md,e6ac789554ac1e5cf69a2442f252dba8233cde32,ab6e6301945bf42a429f52bc34602627ca0566bc,'mention discord in issue template',"""@@ -1,6 +1,6 @@\n <!-- **This issue tracker is a tool to address bugs in Flask itself.\n-Please use the #pocoo IRC channel on freenode or Stack Overflow for general\n-questions about using Flask or issues not related to Flask.** -->\n+Please use the Pallets Discord or Stack Overflow for general questions\n+about using Flask or issues not related to Flask.** -->\n \n <!-- If you'd like to report a bug in Flask, fill out the template below. Provide\n any extra information that may be useful / related to your problem.\n@@ -8,8 +8,6 @@ Ideally, create an [MCVE](https://stackoverflow.com/help/mcve), which helps us\n understand the problem and helps check that it is not caused by something in\n your code. -->\n \n-\n-\n ### Expected Behavior\n <!-- Tell us what should happen. -->\n \n""",0,0
docs/foreword.rst,docs/foreword.rst,aa1d4cb840352be3c57b912fded1de8b33024ec5,ab6e6301945bf42a429f52bc34602627ca0566bc,'remove approved extensions in foreword',"""@@ -38,9 +38,7 @@ Growing with Flask\n ------------------\n \n Once you have Flask up and running, you'll find a variety of extensions\n-available in the community to integrate your project for production. The Flask\n-core team reviews extensions and ensures approved extensions do not break with\n-future releases.\n+available in the community to integrate your project for production.\n \n As your codebase grows, you are free to make the design decisions appropriate\n for your project.  Flask will continue to provide a very simple glue layer to\n""",0,0
src/flask/ctx.py,src/flask/ctx.py,5da342e4dd7dfcc16aa25928ea91d69c2d362f73,ab6e6301945bf42a429f52bc34602627ca0566bc,'fix docstring and remove redundant parentheses',"'@@ -75,7 +75,7 @@ class _AppCtxGlobals(object):\n         set and return a default value. Like :meth:`dict.setdefault`.\n \n         :param name: Name of attribute to get.\n-        :param: default: Value to set and return if the attribute is not\n+        :param default: Value to set and return if the attribute is not\n             present.\n \n         .. versionadded:: 0.11\n'",2.185185185185185,2.185185185185185
tests/test_basic.py,tests/test_basic.py,5da342e4dd7dfcc16aa25928ea91d69c2d362f73,ab6e6301945bf42a429f52bc34602627ca0566bc,'fix docstring and remove redundant parentheses',"'@@ -1689,7 +1689,7 @@ def test_routing_redirect_debugging(app, client):\n         with pytest.raises(AssertionError) as e:\n             client.post(""/foo"", data={})\n         assert ""http://localhost/foo/"" in str(e.value)\n-        assert (""Make sure to directly send your POST-request to this URL"") in str(\n+        assert ""Make sure to directly send your POST-request to this URL"" in str(\n             e.value\n         )\n \n'",1.0739299610894941,1.0739299610894941
CHANGES.rst,CHANGES.rst,bcde664f9a3f6ef3b3d33c6c4e7c3cb3acc2af30,982663d0631e1cb3bf4e66d567dc83373a3046dd,'cli checks for cryptography library',"'@@ -16,6 +16,8 @@ Unreleased\n -   :func:`send_file` raises a :exc:`ValueError` when passed an\n     :mod:`io` object in text mode. Previously, it would respond with\n     200 OK and an empty file. :issue:`3358`\n+-   When using ad-hoc certificates, check for the cryptography library\n+    instead of PyOpenSSL. :pr:`3492`\n \n \n Version 1.1.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,bcde664f9a3f6ef3b3d33c6c4e7c3cb3acc2af30,982663d0631e1cb3bf4e66d567dc83373a3046dd,'cli checks for cryptography library',"'@@ -713,10 +713,12 @@ class CertParamType(click.ParamType):\n \n             if value == ""adhoc"":\n                 try:\n-                    import OpenSSL  # noqa: F401\n+                    import cryptography  # noqa: F401\n                 except ImportError:\n                     raise click.BadParameter(\n-                        ""Using ad-hoc certificates requires pyOpenSSL."", ctx, param\n+                        ""Using ad-hoc certificates requires the cryptography library."",\n+                        ctx,\n+                        param,\n                     )\n \n                 return value\n@@ -743,7 +745,7 @@ def _validate_key(ctx, param, value):\n     if sys.version_info < (2, 7, 9):\n         is_context = cert and not isinstance(cert, (text_type, bytes))\n     else:\n-        is_context = isinstance(cert, ssl.SSLContext)\n+        is_context = ssl and isinstance(cert, ssl.SSLContext)\n \n     if value is not None:\n         if is_adhoc:\n'",4.194444444444445,4.222222222222222
tests/test_cli.py,tests/test_cli.py,bcde664f9a3f6ef3b3d33c6c4e7c3cb3acc2af30,982663d0631e1cb3bf4e66d567dc83373a3046dd,'cli checks for cryptography library',"'@@ -566,14 +566,14 @@ def test_run_cert_path():\n \n \n def test_run_cert_adhoc(monkeypatch):\n-    monkeypatch.setitem(sys.modules, ""OpenSSL"", None)\n+    monkeypatch.setitem(sys.modules, ""cryptography"", None)\n \n-    # pyOpenSSL not installed\n+    # cryptography not installed\n     with pytest.raises(click.BadParameter):\n         run_command.make_context(""run"", [""--cert"", ""adhoc""])\n \n-    # pyOpenSSL installed\n-    monkeypatch.setitem(sys.modules, ""OpenSSL"", types.ModuleType(""OpenSSL""))\n+    # cryptography installed\n+    monkeypatch.setitem(sys.modules, ""cryptography"", types.ModuleType(""cryptography""))\n     ctx = run_command.make_context(""run"", [""--cert"", ""adhoc""])\n     assert ctx.params[""cert""] == ""adhoc""\n \n'",1.0793650793650793,1.0793650793650793
docs/reqcontext.rst,docs/reqcontext.rst,b80eaf2c9978c776c9efbb267ccbfdee875d0966,ef27c1b74969c48abdce76e650ecdefdab96b30e,'Incorrect grammar\n\nThe original sentence has incorrect grammar',"'@@ -256,8 +256,9 @@ exceptions where it is good to know that this object is actually a proxy:\n -   The proxy objects cannot fake their type as the actual object types.\n     If you want to perform instance checks, you have to do that on the\n     object being proxied.\n--   If the specific object reference is important, for example for\n-    sending :ref:`signals` or passing data to a background thread.\n+-   The reference to the proxied object is needed in some situations,\n+    such as sending :ref:`signals` or passing data to a background\n+    thread.\n \n If you need to access the underlying object that is proxied, use the\n :meth:`~werkzeug.local.LocalProxy._get_current_object` method::\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,571e92b317a8ccd86ea3a5eb3231a78529f48baa,ef27c1b74969c48abdce76e650ecdefdab96b30e,'add import for escape in quickstart\n\nimport escape from markupsafe instead of flask',"""@@ -200,6 +200,8 @@ You can add variable sections to a URL by marking sections with\n as a keyword argument. Optionally, you can use a converter to specify the type\n of the argument like ``<converter:variable_name>``. ::\n \n+    from markupsafe import escape\n+\n     @app.route('/user/<username>')\n     def show_user_profile(username):\n         # show the user profile for that user\n@@ -281,7 +283,8 @@ Python shell. See :ref:`context-locals`.\n \n .. code-block:: python\n \n-    from flask import Flask, escape, url_for\n+    from flask import Flask, url_for\n+    from markupsafe import escape\n \n     app = Flask(__name__)\n \n@@ -419,9 +422,9 @@ markup to HTML) you can mark it as safe by using the\n :class:`~jinja2.Markup` class or by using the ``|safe`` filter in the\n template.  Head over to the Jinja 2 documentation for more examples.\n \n-Here is a basic introduction to how the :class:`~jinja2.Markup` class works::\n+Here is a basic introduction to how the :class:`~markupsafe.Markup` class works::\n \n-    >>> from flask import Markup\n+    >>> from markupsafe import Markup\n     >>> Markup('<strong>Hello %s!</strong>') % '<blink>hacker</blink>'\n     Markup(u'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>')\n     >>> Markup.escape('<blink>hacker</blink>')\n@@ -768,7 +771,8 @@ unless they know the secret key used for signing.\n In order to use sessions you have to set a secret key.  Here is how\n sessions work::\n \n-    from flask import Flask, session, redirect, url_for, escape, request\n+    from flask import Flask, session, redirect, url_for, request\n+    from markupsafe import escape\n \n     app = Flask(__name__)\n \n""",1.2666666666666666,1.2666666666666666
CHANGES.rst,CHANGES.rst,d4076cf07c70d7fccf82aba5c5acae3f3fb99447,ef27c1b74969c48abdce76e650ecdefdab96b30e,'strip the ending slash for static_url_path',"'@@ -7,6 +7,8 @@ Unreleased\n \n -   Work around an issue when running the ``flask`` command with an\n     external debugger on Windows. :issue:`3297`\n+-   The static route will not catch all URLs if the ``Flask``\n+    ``static_folder`` argument ends with a slash. :issue:`3452`\n \n \n Version 1.1.1\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,d4076cf07c70d7fccf82aba5c5acae3f3fb99447,ef27c1b74969c48abdce76e650ecdefdab96b30e,'strip the ending slash for static_url_path',"'@@ -1013,7 +1013,7 @@ class _PackageBoundObject(object):\n             return self._static_url_path\n \n         if self.static_folder is not None:\n-            basename = os.path.basename(self.static_folder)\n+            basename = os.path.basename(self.static_folder.rstrip(""/""))\n             return (""/"" + basename).rstrip(""/"")\n \n     @static_url_path.setter\n'",4.212121212121212,4.212121212121212
tests/test_basic.py,tests/test_basic.py,d4076cf07c70d7fccf82aba5c5acae3f3fb99447,ef27c1b74969c48abdce76e650ecdefdab96b30e,'strip the ending slash for static_url_path',"'@@ -1425,6 +1425,17 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n+def test_static_folder_with_ending_slash():\n+    app = flask.Flask(__name__, static_folder=""static/"")\n+\n+    @app.route(""/<path:path>"")\n+    def catch_all(path):\n+        return path\n+\n+    rv = app.test_client().get(""/catch/all"")\n+    assert rv.data == b""catch/all""\n+\n+\n def test_static_route_with_host_matching():\n     app = flask.Flask(__name__, host_matching=True, static_host=""example.com"")\n     c = app.test_client()\n'",1.0739299610894941,1.0733590733590734
docs/patterns/singlepageapplications.rst,docs/patterns/singlepageapplications.rst,7e068145df57784b61ca254d5c0b83edaf3e7435,c12d9f8b490c56fcba7ad793249ab14441c544d6,'pass static_url_path along with static_folder',"'@@ -10,7 +10,7 @@ The following example demonstrates how to serve an SPA along with an API::\n \n     from flask import Flask, jsonify\n \n-    app = Flask(__name__, static_folder=\'app\')\n+    app = Flask(__name__, static_folder=\'app\', static_url_path=""/app"")\n \n \n     @app.route(""/heartbeat"")\n'",1.0,1.0
src/flask/helpers.py,src/flask/helpers.py,e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a,d4076cf07c70d7fccf82aba5c5acae3f3fb99447,'Handle different sep across os',"'@@ -1000,6 +1000,8 @@ class _PackageBoundObject(object):\n \n     @static_folder.setter\n     def static_folder(self, value):\n+        if value is not None:\n+            value = value.rstrip(""/\\\\"")\n         self._static_folder = value\n \n     @property\n@@ -1013,7 +1015,7 @@ class _PackageBoundObject(object):\n             return self._static_url_path\n \n         if self.static_folder is not None:\n-            basename = os.path.basename(self.static_folder.rstrip(""/""))\n+            basename = os.path.basename(self.static_folder)\n             return (""/"" + basename).rstrip(""/"")\n \n     @static_url_path.setter\n'",4.212121212121212,4.242424242424242
docs/reqcontext.rst,docs/reqcontext.rst,37f582dbb131356810d26fb8129488276f765656,a75315028cc7b8219f2ec28c7c7c7beb92c113c2,'Fix typo in docs (#3517)',"'@@ -109,7 +109,7 @@ redirects or chain different applications together.\n After the request is dispatched and a response is generated and sent,\n the request context is popped, which then pops the application context.\n Immediately before they are popped, the :meth:`~Flask.teardown_request`\n-and :meth:`~Flask.teardown_appcontext` functions are are executed. These\n+and :meth:`~Flask.teardown_appcontext` functions are executed. These\n execute even if an unhandled exception occurred during dispatch.\n \n \n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,1d45539000c27951add3b518a73d73a7e3de7044,37f582dbb131356810d26fb8129488276f765656,"""Fix property name in description\n\nPreviously, the description referred to a property named `original_error`.\r\nHowever, both the code sample that followed it _and_ the Werkzeug\r\ndocumentation refer to it as `original_exception` instead.\r\n\r\nIn this commit, I change the description to use the same property name\r\nas is used in the code sample and the Werkzeug documentation.\r\n\r\nHere's a link to the Werkzeug documentation of that property:\r\n- https://werkzeug.palletsprojects.com/en/1.0.x/exceptions/#werkzeug.exceptions.InternalServerError.original_exception""","'@@ -210,7 +210,7 @@ behavior.\n If there is an error handler registered for ``InternalServerError``,\n this will be invoked. As of Flask 1.1.0, this error handler will always\n be passed an instance of ``InternalServerError``, not the original\n-unhandled error. The original error is available as ``e.original_error``.\n+unhandled error. The original error is available as ``e.original_exception``.\n Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n errors, use ``getattr`` to get access it for compatibility.\n \n'",1.5,1.5
setup.cfg,setup.cfg,9311a823a7155b8f6377bbd22cf783a182011d54,64ba43411fbfb2e435455b0df2453d7809b7c5a8,"'Remove deprecated `license_file` option\n\nStarting with wheel 0.32.0 (2018-09-29), the `license_file` option is\r\ndeprecated in favor of `license_files`.\r\n\r\nhttps://wheel.readthedocs.io/en/stable/news.html\r\n\r\nThe wheel will continue to include `LICENSE`, it is now included\r\nautomatically:\r\n\r\nhttps://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file\r\n\r\nSee https://github.com/FactoryBoy/factory_boy/pull/696 for inspiration and more discussion.'","'@@ -1,6 +1,3 @@\n-[metadata]\n-license_file = LICENSE.rst\n-\n [bdist_wheel]\n universal = true\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,56e75eace520a78cbee07570706519b0680b7d29,64ba43411fbfb2e435455b0df2453d7809b7c5a8,"""Move HTML escaping example back to Variable Rules.\n\nDemonstration of markupsafe's escape function was in the Minimal\nApplication example, but the minimal example does not accept user\ninput.""","'@@ -15,13 +15,12 @@ A minimal Flask application looks something like this:\n .. code-block:: python\n \n     from flask import Flask\n-    from markupsafe import escape\n \n     app = Flask(__name__)\n \n     @app.route(""/"")\n     def hello_world():\n-        return f""<p>Hello, {escape(name)}!</p>""\n+        return ""<p>Hello, World!</p>""\n \n So what did that code do?\n \n@@ -38,14 +37,6 @@ So what did that code do?\n     browser. The default content type is HTML, so HTML in the string\n     will be rendered by the browser.\n \n-.. note:: HTML escaping\n-\n-    When returning HTML (the default response type in Flask), any user\n-    input rendered in the output must be escaped to protect from\n-    injection attacks. HTML templates in Jinja, introduced later, will\n-    do this automatically. :func:`~markupsafe.escape`, shown above, can\n-    be used manually. It\'s omitted for brevity in the examples below.\n-\n Save it as :file:`hello.py` or something similar. Make sure to not call\n your application :file:`flask.py` because this would conflict with Flask\n itself.\n@@ -210,17 +201,17 @@ of the argument like ``<converter:variable_name>``. ::\n     @app.route(\'/user/<username>\')\n     def show_user_profile(username):\n         # show the user profile for that user\n-        return f\'User {username}\'\n+        return f\'User {escape(username)}\'\n \n     @app.route(\'/post/<int:post_id>\')\n     def show_post(post_id):\n         # show the post with the given id, the id is an integer\n-        return f\'Post {post_id}\'\n+        return f\'Post {escape(post_id)}\'\n \n     @app.route(\'/path/<path:subpath>\')\n     def show_subpath(subpath):\n         # show the subpath after /path/\n-        return f\'Subpath {subpath}\'\n+        return f\'Subpath {escape(subpath)}\'\n \n Converter types:\n \n@@ -232,6 +223,15 @@ Converter types:\n ``uuid``   accepts UUID strings\n ========== ==========================================\n \n+.. note:: HTML escaping\n+\n+    When returning HTML (the default response type in Flask), any user\n+    input rendered in the output must be escaped to protect from\n+    injection attacks. HTML templates in Jinja, introduced later, will\n+    do this automatically. :func:`~markupsafe.escape`, shown above, can\n+    be used manually.\n+\n+\n Unique URLs / Redirection Behavior\n ``````````````````````````````````\n \n'",1.3636363636363635,1.2666666666666666
docs/testing.rst,docs/testing.rst,ceed993d639ff053b20c61db5afdb8ced574841b,fd3fca2aa0567220e1c75c28f7b1ca7403966308,'docs: testing.rst function def missing colon',"""@@ -420,7 +420,7 @@ command line. ::\n \n     @app.cli.command('hello')\n     @click.option('--name', default='World')\n-    def hello_command(name)\n+    def hello_command(name):\n         click.echo(f'Hello, {name}!')\n \n     def test_hello():\n@@ -447,7 +447,7 @@ This is useful for testing complex validation rules and custom types. ::\n \n     @app.cli.command('hello')\n     @click.option('--name', default='World', callback=upper)\n-    def hello_command(name)\n+    def hello_command(name):\n         click.echo(f'Hello, {name}!')\n \n     def test_hello_params():\n""",0,0
src/flask/app.py,src/flask/app.py,d5f88dafaf03a21aa4b6f0a273228fe9263a4a78,64ba43411fbfb2e435455b0df2453d7809b7c5a8,'refactor variable choices into if blocks',"'@@ -960,17 +960,24 @@ class Flask(_PackageBoundObject):\n         if debug is not None:\n             self.debug = bool(debug)\n \n-        _host = ""127.0.0.1""\n-        _port = 5000\n         server_name = self.config.get(""SERVER_NAME"")\n-        sn_host, sn_port = None, None\n+        sn_host = sn_port = None\n \n         if server_name:\n             sn_host, _, sn_port = server_name.partition("":"")\n \n-        host = host or sn_host or _host\n-        # pick the first value that\'s not None (0 is allowed)\n-        port = int(next((p for p in (port, sn_port) if p is not None), _port))\n+        if not host:\n+            if sn_host:\n+                host = sn_host\n+            else:\n+                host = ""127.0.0.1""\n+\n+        if port or port == 0:\n+            port = int(port)\n+        elif sn_port:\n+            port = int(sn_port)\n+        else:\n+            port = 5000\n \n         options.setdefault(""use_reloader"", self.debug)\n         options.setdefault(""use_debugger"", self.debug)\n@@ -2146,11 +2153,11 @@ class Flask(_PackageBoundObject):\n             # If subdomain matching is disabled (the default), use the\n             # default subdomain in all cases. This should be the default\n             # in Werkzeug but it currently does not have that feature.\n-            subdomain = (\n-                (self.url_map.default_subdomain or None)\n-                if not self.subdomain_matching\n-                else None\n-            )\n+            if not self.subdomain_matching:\n+                subdomain = self.url_map.default_subdomain or None\n+            else:\n+                subdomain = None\n+\n             return self.url_map.bind_to_environ(\n                 request.environ,\n                 server_name=self.config[""SERVER_NAME""],\n'",2.611764705882353,2.623529411764706
docs/deploying/index.rst,docs/deploying/index.rst,d115d843e654c88ecb3833150ef9556bb0262cf3,fd3fca2aa0567220e1c75c28f7b1ca7403966308,"'docs: update ""Deploying on Google App Engine""\n\nUse the documentation for Python 3 instead of Python 2, which is deprecated.'","'@@ -17,7 +17,7 @@ Hosted options\n --------------\n \n - `Deploying Flask on Heroku <https://devcenter.heroku.com/articles/getting-started-with-python>`_\n-- `Deploying Flask on Google App Engine <https://cloud.google.com/appengine/docs/standard/python/getting-started/python-standard-env>`_\n+- `Deploying Flask on Google App Engine <https://cloud.google.com/appengine/docs/standard/python3/runtime>`_\n - `Deploying Flask on AWS Elastic Beanstalk <https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-flask.html>`_\n - `Deploying on Azure (IIS) <https://docs.microsoft.com/en-us/azure/app-service/containers/how-to-configure-python>`_\n - `Deploying on PythonAnywhere <https://help.pythonanywhere.com/pages/Flask/>`_\n'",0,0
src/flask/config.py,src/flask/config.py,e047dd6a32dc57cd6e4fb5f064aceddeed979756,29d33203d0325f006c75fc88359872bd68c8bdf5,'Update deprecated for config.from_json',"""@@ -218,7 +218,7 @@ class Config(dict):\n             absolute path or relative to the config root path.\n         :param silent: Ignore the file if it doesn't exist.\n \n-        .. deprecated:: 1.2\n+        .. deprecated:: 2.0\n             Use :meth:`from_file` with :meth:`json.load` instead.\n \n         .. versionadded:: 0.11\n""",3.0,3.0
docs/templating.rst,docs/templating.rst,8fc723c7c2b3bfe75bf76db75f2970d4253ce3bc,c47c8c4389e837062af489879f7a1282c9ec3894,'itty bitty typo',"'@@ -3,7 +3,7 @@\n Templates\n =========\n \n-Flask leverages Jinja2 as template engine.  You are obviously free to use\n+Flask leverages Jinja2 as its template engine.  You are obviously free to use\n a different template engine, but you still have to install Jinja2 to run\n Flask itself.  This requirement is necessary to enable rich extensions.\n An extension can depend on Jinja2 being present.\n'",1.0,1.0
docs/templating.rst,docs/templating.rst,1736e01ea0b2d39ac1ee7e7b5993579487175530,80a597b7f94d28fd368f877c94ff51a116ca38c3,'Grammar and clarity fix',"'@@ -100,7 +100,7 @@ by default:\n Standard Filters\n ----------------\n \n-These filters are available in Jinja2 additionally to the filters provided\n+Flask provides the following Jinja2 filters in addition to the filters provided\n by Jinja2 itself:\n \n .. function:: tojson\n'",1.0,1.0
docs/cli.rst,docs/cli.rst,c6a619af833416160475c25aa3d11ef14ed74618,ac9589ca7222cc7437f09e8d4660438a132f420a,'update CLI docs IDE integration',"'@@ -491,10 +491,10 @@ script is available. Note that you don\'t need to set ``FLASK_APP``. ::\n PyCharm Integration\n -------------------\n \n-Prior to PyCharm 2018.1, the Flask CLI features weren\'t yet fully\n-integrated into PyCharm. We have to do a few tweaks to get them working\n-smoothly. These instructions should be similar for any other IDE you\n-might want to use.\n+PyCharm Professional provides a special Flask run configuration. For\n+the Community Edition, we need to configure it to call the ``flask run``\n+CLI command with the correct environment variables. These instructions\n+should be similar for any other IDE you might want to use.\n \n In PyCharm, with your project open, click on *Run* from the menu bar and\n go to *Edit Configurations*. You\'ll be greeted by a screen similar to\n@@ -503,7 +503,7 @@ this:\n .. image:: _static/pycharm-runconfig.png\n     :align: center\n     :class: screenshot\n-    :alt: screenshot of pycharm\'s run configuration settings\n+    :alt: Screenshot of PyCharms\'s run configuration settings.\n \n There\'s quite a few options to change, but once we\'ve done it for one\n command, we can easily copy the entire configuration and make a single\n@@ -511,9 +511,9 @@ tweak to give us access to other commands, including any custom ones you\n may implement yourself.\n \n Click the + (*Add New Configuration*) button and select *Python*. Give\n-the configuration a good descriptive name such as ""Run Flask Server"".\n-For the ``flask run`` command, check ""Single instance only"" since you\n-can\'t run the server more than once at the same time.\n+the configuration a name such as ""flask run"". For the ``flask run``\n+command, check ""Single instance only"" since you can\'t run the server\n+more than once at the same time.\n \n Select *Module name* from the dropdown (**A**) then input ``flask``.\n \n@@ -524,7 +524,8 @@ the development server.\n You can skip this next step if you\'re using :ref:`dotenv`. We need to\n add an environment variable (**C**) to identify our application. Click\n on the browse button and add an entry with ``FLASK_APP`` on the left and\n-the Python import or file on the right (``hello`` for example).\n+the Python import or file on the right (``hello`` for example). Add an\n+entry with ``FLASK_ENV`` and set it to ``development``.\n \n Next we need to set the working directory (**D**) to be the folder where\n our application resides.\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,57f9623b0835cbae06b25d7329cda480539049c3,56e75eace520a78cbee07570706519b0680b7d29,'move html escaping to dedicated section',"'@@ -168,6 +168,34 @@ documentation`_.\n Have another debugger in mind? See :ref:`working-with-debuggers`.\n \n \n+HTML Escaping\n+-------------\n+\n+When returning HTML (the default response type in Flask), any\n+user-provided values rendered in the output must be escaped to protect\n+from injection attacks. HTML templates rendered with Jinja, introduced\n+later, will do this automatically.\n+\n+:func:`~markupsafe.escape`, shown here, can be used manually. It is\n+omitted in most examples for brevity, but you should always be aware of\n+how you\'re using untrusted data.\n+\n+.. code-block:: python\n+\n+    from markupsafe import escape\n+\n+    @app.route(""/<name>"")\n+    def hello(name):\n+        return f""Hello, {escape(name)}!""\n+\n+If a user managed to submit the name ``<script>alert(""bad"")</script>``,\n+escaping causes it to be rendered as text, rather than running the\n+script in the user\'s browser.\n+\n+``<name>`` in the route captures a value from the URL and passes it to\n+the view function. These variable rules are explained below.\n+\n+\n Routing\n -------\n \n@@ -201,17 +229,17 @@ of the argument like ``<converter:variable_name>``. ::\n     @app.route(\'/user/<username>\')\n     def show_user_profile(username):\n         # show the user profile for that user\n-        return f\'User {escape(username)}\'\n+        return f\'User {username}\'\n \n     @app.route(\'/post/<int:post_id>\')\n     def show_post(post_id):\n         # show the post with the given id, the id is an integer\n-        return f\'Post {escape(post_id)}\'\n+        return f\'Post {post_id}\'\n \n     @app.route(\'/path/<path:subpath>\')\n     def show_subpath(subpath):\n         # show the subpath after /path/\n-        return f\'Subpath {escape(subpath)}\'\n+        return f\'Subpath {subpath}\'\n \n Converter types:\n \n@@ -223,14 +251,6 @@ Converter types:\n ``uuid``   accepts UUID strings\n ========== ==========================================\n \n-.. note:: HTML escaping\n-\n-    When returning HTML (the default response type in Flask), any user\n-    input rendered in the output must be escaped to protect from\n-    injection attacks. HTML templates in Jinja, introduced later, will\n-    do this automatically. :func:`~markupsafe.escape`, shown above, can\n-    be used manually.\n-\n \n Unique URLs / Redirection Behavior\n ``````````````````````````````````\n'",1.2666666666666666,1.2666666666666666
src/flask/app.py,src/flask/app.py,4548e00dba81a5e60024d76b35bcfe2a7be8e675,c6a619af833416160475c25aa3d11ef14ed74618,'clarify static_folder is relative to root_path',"""@@ -170,9 +170,9 @@ class Flask(_PackageBoundObject):\n     :param static_url_path: can be used to specify a different path for the\n                             static files on the web.  Defaults to the name\n                             of the `static_folder` folder.\n-    :param static_folder: the folder with static files that should be served\n-                          at `static_url_path`.  Defaults to the ``'static'``\n-                          folder in the root path of the application.\n+    :param static_folder: The folder with static files that is served at\n+        ``static_url_path``. Relative to the application ``root_path``\n+        or an absolute path. Defaults to ``'static'``.\n     :param static_host: the host to use when adding the static route.\n         Defaults to None. Required when using ``host_matching=True``\n         with a ``static_folder`` configured.\n""",2.6470588235294117,2.6470588235294117
src/flask/app.py,src/flask/app.py,4024a4a89c18a1048b7496cf223c0b8c1e63c485,f991a898100359684111be1ddef7bb60ab6f0f9a,'update deprecation versions',"'@@ -1074,16 +1074,16 @@ class Flask(_PackageBoundObject):\n         we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.open_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.open_session`` instead.\n \n         :param request: an instance of :attr:`request_class`.\n         """"""\n \n         warnings.warn(\n             DeprecationWarning(\n-                \'""open_session"" is deprecated and will be removed in 1.1. Use\'\n-                \' ""session_interface.open_session"" instead.\'\n+                \'""open_session"" is deprecated and will be removed in\'\n+                \' 2.0. Use ""session_interface.open_session"" instead.\'\n             )\n         )\n         return self.session_interface.open_session(self, request)\n@@ -1094,8 +1094,8 @@ class Flask(_PackageBoundObject):\n         method we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.save_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.save_session`` instead.\n \n         :param session: the session to be saved (a\n                         :class:`~werkzeug.contrib.securecookie.SecureCookie`\n@@ -1105,8 +1105,8 @@ class Flask(_PackageBoundObject):\n \n         warnings.warn(\n             DeprecationWarning(\n-                \'""save_session"" is deprecated and will be removed in 1.1. Use\'\n-                \' ""session_interface.save_session"" instead.\'\n+                \'""save_session"" is deprecated and will be removed in\'\n+                \' 2.0. Use ""session_interface.save_session"" instead.\'\n             )\n         )\n         return self.session_interface.save_session(self, session, response)\n@@ -1116,16 +1116,17 @@ class Flask(_PackageBoundObject):\n         this method we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.make_null_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.make_null_session`` instead.\n \n         .. versionadded:: 0.7\n         """"""\n \n         warnings.warn(\n             DeprecationWarning(\n-                \'""make_null_session"" is deprecated and will be removed in 1.1. Use\'\n-                \' ""session_interface.make_null_session"" instead.\'\n+                \'""make_null_session"" is deprecated and will be removed\'\n+                \' in 2.0. Use ""session_interface.make_null_session""\'\n+                "" instead.""\n             )\n         )\n         return self.session_interface.make_null_session(self)\n'",2.6470588235294117,2.6470588235294117
src/flask/testing.py,src/flask/testing.py,4024a4a89c18a1048b7496cf223c0b8c1e63c485,f991a898100359684111be1ddef7bb60ab6f0f9a,'update deprecation versions',"'@@ -99,14 +99,14 @@ def make_test_environ_builder(*args, **kwargs):\n     """"""Create a :class:`flask.testing.EnvironBuilder`.\n \n     .. deprecated: 1.1\n-        Will be removed in 1.2. Construct ``flask.testing.EnvironBuilder``\n-        directly instead.\n+        Will be removed in 2.0. Construct\n+        ``flask.testing.EnvironBuilder`` directly instead.\n     """"""\n     warnings.warn(\n         DeprecationWarning(\n-            \'""make_test_environ_builder()"" is deprecated and will be removed \'\n-            \'in 1.2. Construct ""flask.testing.EnvironBuilder"" directly \'\n-            ""instead.""\n+            \'""make_test_environ_builder()"" is deprecated and will be\'\n+            \' removed in 2.0. Construct ""flask.testing.EnvironBuilder""\'\n+            "" directly instead.""\n         )\n     )\n     return EnvironBuilder(*args, **kwargs)\n'",3.7,3.7
CHANGES.rst,CHANGES.rst,93dd1709d05a1cf0e886df6223377bdab3b077fb,4024a4a89c18a1048b7496cf223c0b8c1e63c485,'release version 1.1.2',"'@@ -3,7 +3,7 @@\n Version 1.1.2\n -------------\n \n-Unreleased\n+Released 2020-04-03\n \n -   Work around an issue when running the ``flask`` command with an\n     external debugger on Windows. :issue:`3297`\n'",0,0
MANIFEST.in,MANIFEST.in,93dd1709d05a1cf0e886df6223377bdab3b077fb,4024a4a89c18a1048b7496cf223c0b8c1e63c485,'release version 1.1.2',"'@@ -6,3 +6,4 @@ graft docs\n prune docs/_build\n graft examples\n graft tests\n+global-exclude *.pyc\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,93dd1709d05a1cf0e886df6223377bdab3b077fb,4024a4a89c18a1048b7496cf223c0b8c1e63c485,'release version 1.1.2',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.2.dev""\n+__version__ = ""1.1.2""\n'",0,0
CHANGES.rst,CHANGES.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -452,7 +452,7 @@ Released 2016-05-29, codename Absinthe\n \n -   Added support to serializing top-level arrays to\n     :func:`flask.jsonify`. This introduces a security risk in ancient\n-    browsers. See :ref:`json-security` for details.\n+    browsers.\n -   Added before_render_template signal.\n -   Added ``**kwargs`` to :meth:`flask.Test.test_client` to support\n     passing additional keyword arguments to the constructor of\n@@ -567,8 +567,7 @@ Version 0.10\n Released 2013-06-13, codename Limoncello\n \n -   Changed default cookie serialization format from pickle to JSON to\n-    limit the impact an attacker can do if the secret key leaks. See\n-    :ref:`upgrading-to-010` for more information.\n+    limit the impact an attacker can do if the secret key leaks.\n -   Added ``template_test`` methods in addition to the already existing\n     ``template_filter`` method family.\n -   Added ``template_global`` methods in addition to the already\n@@ -597,8 +596,7 @@ Released 2013-06-13, codename Limoncello\n -   Added an option to generate non-ascii encoded JSON which should\n     result in less bytes being transmitted over the network. It's\n     disabled by default to not cause confusion with existing libraries\n-    that might expect ``flask.json.dumps`` to return bytestrings by\n-    default.\n+    that might expect ``flask.json.dumps`` to return bytes by default.\n -   ``flask.g`` is now stored on the app context instead of the request\n     context.\n -   ``flask.g`` now gained a ``get()`` method for not erroring out on\n@@ -762,7 +760,7 @@ Released 2011-09-29, codename Rakija\n     designated place to drop files that are modified at runtime (uploads\n     etc.). Also this is conceptually only instance depending and outside\n     version control so it's the perfect place to put configuration files\n-    etc. For more information see :ref:`instance-folders`.\n+    etc.\n -   Added the ``APPLICATION_ROOT`` configuration variable.\n -   Implemented :meth:`~flask.testing.TestClient.session_transaction` to\n     easily modify sessions from the test environment.\n@@ -842,8 +840,7 @@ Released 2011-06-28, codename Grappa\n -   Added ``teardown_request`` decorator, for functions that should run\n     at the end of a request regardless of whether an exception occurred.\n     Also the behavior for ``after_request`` was changed. It's now no\n-    longer executed when an exception is raised. See\n-    :ref:`upgrading-to-new-teardown-handling`\n+    longer executed when an exception is raised.\n -   Implemented :func:`flask.has_request_context`\n -   Deprecated ``init_jinja_globals``. Override the\n     :meth:`~flask.Flask.create_jinja_environment` method instead to\n@@ -860,7 +857,7 @@ Released 2011-06-28, codename Grappa\n     errors that might occur during request processing (for instance\n     database connection errors, timeouts from remote resources etc.).\n -   Blueprints can provide blueprint specific error handlers.\n--   Implemented generic :ref:`views` (class-based views).\n+-   Implemented generic class-based views.\n \n \n Version 0.6.1\n""",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -135,8 +135,9 @@ depends on which part of Flask you're working on. Travis-CI will run the full\n suite when you submit your pull request.\n \n The full test suite takes a long time to run because it tests multiple\n-combinations of Python and dependencies. You need to have Python 2.7, 3.4,\n-3.5, 3.6, 3.7 and PyPy 2.7 installed to run all of the environments. Then run::\n+combinations of Python and dependencies. If you don't have a Python\n+version installed, it will be skipped with a warning message at the end.\n+Run::\n \n     tox\n \n""",0,0
docs/config.rst,docs/config.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"'@@ -161,8 +161,8 @@ The following configuration values are used internally by Flask:\n \n     A secret key that will be used for securely signing the session cookie\n     and can be used for any other security related needs by extensions or your\n-    application. It should be a long random string of bytes, although unicode\n-    is accepted too. For example, copy the output of this to your config::\n+    application. It should be a long random ``bytes`` or ``str``. For\n+    example, copy the output of this to your config::\n \n         $ python -c \'import os; print(os.urandom(16))\'\n         b\'_5#y2L""F4Q8z\\n\\xec]/\'\n@@ -302,10 +302,10 @@ The following configuration values are used internally by Flask:\n \n .. py:data:: JSON_AS_ASCII\n \n-    Serialize objects to ASCII-encoded JSON. If this is disabled, the JSON\n-    will be returned as a Unicode string, or encoded as ``UTF-8`` by\n-    ``jsonify``. This has security implications when rendering the JSON into\n-    JavaScript in templates, and should typically remain enabled.\n+    Serialize objects to ASCII-encoded JSON. If this is disabled, the\n+    JSON returned from ``jsonify`` will contain Unicode characters. This\n+    has security implications when rendering the JSON into JavaScript in\n+    templates, and should typically remain enabled.\n \n     Default: ``True``\n \n@@ -678,7 +678,7 @@ locations are used:\n \n -   Installed module or package::\n \n-        $PREFIX/lib/python2.X/site-packages/myapp\n+        $PREFIX/lib/pythonX.Y/site-packages/myapp\n         $PREFIX/var/myapp-instance\n \n     ``$PREFIX`` is the prefix of your Python installation.  This can be\n'",1.0,1.0
docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -210,11 +210,6 @@ you have to modify your ``.wsgi`` file slightly.\n \n Add the following lines to the top of your ``.wsgi`` file::\n \n-    activate_this = '/path/to/env/bin/activate_this.py'\n-    execfile(activate_this, dict(__file__=activate_this))\n-\n-For Python 3 add the following lines to the top of your ``.wsgi`` file::\n-\n     activate_this = '/path/to/env/bin/activate_this.py'\n     with open(activate_this) as file_:\n         exec(file_.read(), dict(__file__=activate_this))\n""",0,0
docs/design.rst,docs/design.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -109,14 +109,14 @@ has a certain understanding about how things work.  On the surface they\n all work the same: you tell the engine to evaluate a template with a set\n of variables and take the return value as string.\n \n-But that's about where similarities end.  Jinja2 for example has an\n-extensive filter system, a certain way to do template inheritance, support\n-for reusable blocks (macros) that can be used from inside templates and\n-also from Python code, uses Unicode for all operations, supports\n-iterative template rendering, configurable syntax and more.  On the other\n-hand an engine like Genshi is based on XML stream evaluation, template\n-inheritance by taking the availability of XPath into account and more.\n-Mako on the other hand treats templates similar to Python modules.\n+But that's about where similarities end. Jinja2 for example has an\n+extensive filter system, a certain way to do template inheritance,\n+support for reusable blocks (macros) that can be used from inside\n+templates and also from Python code, supports iterative template\n+rendering, configurable syntax and more. On the other hand an engine\n+like Genshi is based on XML stream evaluation, template inheritance by\n+taking the availability of XPath into account and more. Mako on the\n+other hand treats templates similar to Python modules.\n \n When it comes to connecting a template engine with an application or\n framework there is more than just rendering templates.  For instance,\n""",0,0
docs/index.rst,docs/index.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"'@@ -84,10 +84,7 @@ Design notes, legal information and changelog are here for the interested.\n    design\n    htmlfaq\n    security\n-   unicode\n    extensiondev\n-   styleguide\n-   upgrading\n    changelog\n    license\n    contributing\n'",0,0
docs/installation.rst,docs/installation.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -3,11 +3,13 @@\n Installation\n ============\n \n+\n Python Version\n --------------\n \n-We recommend using the latest version of Python 3. Flask supports Python 3.5\n-and newer, Python 2.7, and PyPy.\n+We recommend using the latest version of Python. Flask supports Python\n+3.6 and newer.\n+\n \n Dependencies\n ------------\n@@ -31,6 +33,7 @@ These distributions will be installed automatically when installing Flask.\n .. _ItsDangerous: https://palletsprojects.com/p/itsdangerous/\n .. _Click: https://palletsprojects.com/p/click/\n \n+\n Optional dependencies\n ~~~~~~~~~~~~~~~~~~~~~\n \n@@ -51,6 +54,7 @@ use them if you install them.\n .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n .. _watchdog: https://pythonhosted.org/watchdog/\n \n+\n Virtual environments\n --------------------\n \n@@ -66,13 +70,9 @@ Virtual environments are independent groups of Python libraries, one for each\n project. Packages installed for one project will not affect other projects or\n the operating system's packages.\n \n-Python 3 comes bundled with the :mod:`venv` module to create virtual\n-environments. If you're using a modern version of Python, you can continue on\n-to the next section.\n-\n-If you're using Python 2, see :ref:`install-install-virtualenv` first.\n+Python comes bundled with the :mod:`venv` module to create virtual\n+environments.\n \n-.. _install-create-env:\n \n Create an environment\n ~~~~~~~~~~~~~~~~~~~~~\n@@ -91,18 +91,6 @@ On Windows:\n \n     $ py -3 -m venv venv\n \n-If you needed to install virtualenv because you are using Python 2, use\n-the following command instead:\n-\n-.. code-block:: sh\n-\n-    $ python2 -m virtualenv venv\n-\n-On Windows:\n-\n-.. code-block:: bat\n-\n-    > \\Python27\\Scripts\\virtualenv.exe venv\n \n .. _install-activate-env:\n \n@@ -121,12 +109,15 @@ On Windows:\n \n     > venv\\Scripts\\activate\n \n-Your shell prompt will change to show the name of the activated environment.\n+Your shell prompt will change to show the name of the activated\n+environment.\n+\n \n Install Flask\n -------------\n \n-Within the activated environment, use the following command to install Flask:\n+Within the activated environment, use the following command to install\n+Flask:\n \n .. code-block:: sh\n \n@@ -134,53 +125,3 @@ Within the activated environment, use the following command to install Flask:\n \n Flask is now installed. Check out the :doc:`/quickstart` or go to the\n :doc:`Documentation Overview </index>`.\n-\n-Living on the edge\n-~~~~~~~~~~~~~~~~~~\n-\n-If you want to work with the latest Flask code before it's released, install or\n-update the code from the master branch:\n-\n-.. code-block:: sh\n-\n-    $ pip install -U https://github.com/pallets/flask/archive/master.tar.gz\n-\n-.. _install-install-virtualenv:\n-\n-Install virtualenv\n-------------------\n-\n-If you are using Python 2, the venv module is not available. Instead,\n-install `virtualenv`_.\n-\n-On Linux, virtualenv is provided by your package manager:\n-\n-.. code-block:: sh\n-\n-    # Debian, Ubuntu\n-    $ sudo apt-get install python-virtualenv\n-\n-    # CentOS, Fedora\n-    $ sudo yum install python-virtualenv\n-\n-    # Arch\n-    $ sudo pacman -S python-virtualenv\n-\n-If you are on Mac OS X or Windows, download `get-pip.py`_, then:\n-\n-.. code-block:: sh\n-\n-    $ sudo python2 Downloads/get-pip.py\n-    $ sudo python2 -m pip install virtualenv\n-\n-On Windows, as an administrator:\n-\n-.. code-block:: bat\n-\n-    > \\Python27\\python.exe Downloads\\get-pip.py\n-    > \\Python27\\python.exe -m pip install virtualenv\n-\n-Now you can return above and :ref:`install-create-env`.\n-\n-.. _virtualenv: https://virtualenv.pypa.io/\n-.. _get-pip.py: https://bootstrap.pypa.io/get-pip.py\n""",0,0
docs/patterns/distribute.rst,docs/patterns/distribute.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"'@@ -19,10 +19,6 @@ complex constructs that make larger applications easier to distribute:\n   other package.\n - **installation manager**: :command:`pip` can install other libraries for you.\n \n-If you have Python 2 (>=2.7.9) or Python 3 (>=3.4) installed from python.org,\n-you will already have pip and setuptools on your system.  Otherwise, you\n-will need to install them yourself.\n-\n Flask itself, and all the libraries you can find on PyPI are distributed with\n either setuptools or distutils.\n \n'",0,0
docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -39,7 +39,7 @@ Here's the example :file:`database.py` module for your application::\n     from sqlalchemy.orm import scoped_session, sessionmaker\n     from sqlalchemy.ext.declarative import declarative_base\n \n-    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)\n+    engine = create_engine('sqlite:////tmp/test.db')\n     db_session = scoped_session(sessionmaker(autocommit=False,\n                                              autoflush=False,\n                                              bind=engine))\n@@ -127,7 +127,7 @@ Here is an example :file:`database.py` module for your application::\n     from sqlalchemy import create_engine, MetaData\n     from sqlalchemy.orm import scoped_session, sessionmaker\n \n-    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)\n+    engine = create_engine('sqlite:////tmp/test.db')\n     metadata = MetaData()\n     db_session = scoped_session(sessionmaker(autocommit=False,\n                                              autoflush=False,\n@@ -179,7 +179,7 @@ you basically only need the engine::\n \n     from sqlalchemy import create_engine, MetaData, Table\n \n-    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)\n+    engine = create_engine('sqlite:////tmp/test.db')\n     metadata = MetaData(bind=engine)\n \n Then you can either declare the tables in your code like in the examples\n""",1.0,1.0
docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"""@@ -98,9 +98,9 @@ This macro accepts a couple of keyword arguments that are forwarded to\n WTForm's field function, which renders the field for us.  The keyword\n arguments will be inserted as HTML attributes.  So, for example, you can\n call ``render_field(form.username, class='username')`` to add a class to\n-the input element.  Note that WTForms returns standard Python unicode\n-strings, so we have to tell Jinja2 that this data is already HTML-escaped\n-with the ``|safe`` filter.\n+the input element.  Note that WTForms returns standard Python strings,\n+so we have to tell Jinja2 that this data is already HTML-escaped with\n+the ``|safe`` filter.\n \n Here is the :file:`register.html` template for the function we used above, which\n takes advantage of the :file:`_formhelpers.html` template:\n""",3.0,3.0
docs/quickstart.rst,docs/quickstart.rst,7673835b3da50575a14213814ea1ccefa860260f,96b4dcafc33a32317ba9d1193dc3758f4d70d73c,'remove Python 2 from docs',"'@@ -293,8 +293,7 @@ Why would you want to build URLs using the URL reversing function\n 1. Reversing is often more descriptive than hard-coding the URLs.\n 2. You can change your URLs in one go instead of needing to remember to\n    manually change hard-coded URLs.\n-3. URL building handles escaping of special characters and Unicode data\n-   transparently.\n+3. URL building handles escaping of special characters transparently.\n 4. The generated paths are always absolute, avoiding unexpected behavior\n    of relative paths in browsers.\n 5. If your application is placed outside the URL root, for example, in\n'",1.2666666666666666,1.2666666666666666
.azure-pipelines.yml,.azure-pipelines.yml,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -1,85 +1,44 @@\n trigger:\n-  - \'master\'\n+  - master\n   - \'*.x\'\n \n-jobs:\n-  - job: Tests\n-    variables:\n-      vmImage: \'ubuntu-latest\'\n-      python.version: \'3.8\'\n-      TOXENV: \'py,coverage-ci\'\n-      hasTestResults: \'true\'\n+variables:\n+  vmImage: ubuntu-latest\n+  python.version: \'3.8\'\n+  TOXENV: py\n \n-    strategy:\n-      matrix:\n-        Python 3.8 Linux:\n-          vmImage: \'ubuntu-latest\'\n-        Python 3.8 Windows:\n-          vmImage: \'windows-latest\'\n-        Python 3.8 Mac:\n-          vmImage: \'macos-latest\'\n-        PyPy 3 Linux:\n-          python.version: \'pypy3\'\n-        Python 3.7 Linux:\n-          python.version: \'3.7\'\n-        Python 3.6 Linux:\n-          python.version: \'3.6\'\n-        Python 3.5 Linux:\n-          python.version: \'3.5\'\n-        Python 2.7 Linux:\n-          python.version: \'2.7\'\n-        Python 2.7 Windows:\n-          python.version: \'2.7\'\n-          vmImage: \'windows-latest\'\n-        Docs:\n-          TOXENV: \'docs\'\n-          hasTestResults: \'false\'\n-        Style:\n-          TOXENV: \'style\'\n-          hasTestResults: \'false\'\n-        VersionRange:\n-          TOXENV: \'devel,lowest,coverage-ci\'\n-\n-    pool:\n-      vmImage: $[ variables.vmImage ]\n-\n-    steps:\n-      - task: UsePythonVersion@0\n-        inputs:\n-          versionSpec: $(python.version)\n-        displayName: Use Python $(python.version)\n-\n-      - script: pip --disable-pip-version-check install -U tox\n-        displayName: Install tox\n-\n-      - script: tox -s false -- --junitxml=test-results.xml tests examples\n-        displayName: Run tox\n-\n-      - task: PublishTestResults@2\n-        inputs:\n-          testResultsFiles: test-results.xml\n-          testRunTitle: $(Agent.JobName)\n-        condition: eq(variables[\'hasTestResults\'], \'true\')\n-        displayName: Publish test results\n-\n-      - task: PublishCodeCoverageResults@1\n-        inputs:\n-          codeCoverageTool: Cobertura\n-          summaryFileLocation: coverage.xml\n-        condition: eq(variables[\'hasTestResults\'], \'true\')\n-        displayName: Publish coverage results\n-\n-  # Test on the nightly version of Python.\n-  # Use a container since Azure Pipelines may not have the latest build.\n-  - job: FlaskOnNightly\n-    pool:\n+strategy:\n+  matrix:\n+    Linux:\n       vmImage: ubuntu-latest\n-    container: python:rc-stretch\n-    steps:\n-      - script: |\n-          echo ""##vso[task.prependPath]$HOME/.local/bin""\n-          pip --disable-pip-version-check install --user -U tox\n-        displayName: Install tox\n-\n-      - script: tox -e nightly\n-        displayName: Run tox\n+    Windows:\n+      vmImage: windows-latest\n+    Mac:\n+      vmImage: macos-latest\n+    Python 3.7:\n+      python.version: \'3.7\'\n+    Python 3.6:\n+      python.version: \'3.6\'\n+    PyPy 3:\n+      python.version: pypy3\n+    Version Range:\n+      TOXENV: \'devel,lowest\'\n+    Docs:\n+      TOXENV: docs\n+    Style:\n+      TOXENV: style\n+\n+pool:\n+  vmImage: $[ variables.vmImage ]\n+\n+steps:\n+  - task: UsePythonVersion@0\n+    inputs:\n+      versionSpec: $(python.version)\n+    displayName: Use Python $(python.version)\n+\n+  - script: pip --disable-pip-version-check install -U tox\n+    displayName: Install tox\n+\n+  - script: tox\n+    displayName: Run tox\n'",0,0
CHANGES.rst,CHANGES.rst,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -1,10 +1,11 @@\n .. currentmodule:: flask\n \n-Version 1.2.0\n+Version 2.0.0\n -------------\n \n Unreleased\n \n+-   Drop support for Python 2 and 3.5.\n -   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n     setting the session cookie name dynamically. :pr:`3369`\n -   Add :meth:`Config.from_file` to load config using arbitrary file\n'",0,0
setup.cfg,setup.cfg,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -1,8 +1,7 @@\n-[bdist_wheel]\n-universal = true\n-\n [tool:pytest]\n testpaths = tests\n+filterwarnings =\n+    error\n \n [coverage:run]\n branch = True\n@@ -12,9 +11,8 @@ source =\n \n [coverage:paths]\n source =\n-    src/flask\n-    .tox/*/lib/python*/site-packages/flask\n-    .tox/*/site-packages/flask\n+    src\n+    */site-packages\n \n [flake8]\n # B = bugbear\n'",0,0
setup.py,setup.py,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -34,15 +34,6 @@ setup(\n         ""License :: OSI Approved :: BSD License"",\n         ""Operating System :: OS Independent"",\n         ""Programming Language :: Python"",\n-        ""Programming Language :: Python :: 2"",\n-        ""Programming Language :: Python :: 2.7"",\n-        ""Programming Language :: Python :: 3"",\n-        ""Programming Language :: Python :: 3.5"",\n-        ""Programming Language :: Python :: 3.6"",\n-        ""Programming Language :: Python :: 3.7"",\n-        ""Programming Language :: Python :: 3.8"",\n-        ""Programming Language :: Python :: Implementation :: CPython"",\n-        ""Programming Language :: Python :: Implementation :: PyPy"",\n         ""Topic :: Internet :: WWW/HTTP :: Dynamic Content"",\n         ""Topic :: Internet :: WWW/HTTP :: WSGI :: Application"",\n         ""Topic :: Software Development :: Libraries :: Application Frameworks"",\n@@ -51,7 +42,7 @@ setup(\n     packages=find_packages(""src""),\n     package_dir={"""": ""src""},\n     include_package_data=True,\n-    python_requires="">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"",\n+    python_requires="">=3.6"",\n     install_requires=[\n         ""Werkzeug>=0.15"",\n         ""Jinja2>=2.10.1"",\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.2.0.dev""\n+__version__ = ""2.0.0.dev""\n'",0,0
tests/test_instance_config.py,tests/test_instance_config.py,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"'@@ -24,7 +24,7 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n-@pytest.mark.xfail(reason=""TODO: weird interaction with tox"")\n+@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_main_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""main_app.py"")\n     app.write(\'import flask\\n\\napp = flask.Flask(""__main__"")\')\n@@ -36,6 +36,7 @@ def test_main_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == os.path.join(here, ""instance"")\n \n \n+@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""config_module_app.py"").write(\n         ""import os\\n""\n@@ -50,6 +51,7 @@ def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == str(modules_tmpdir.join(""instance""))\n \n \n+@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.mkdir(""config_package_app"")\n     init = app.join(""__init__.py"")\n'",1.2,1.2
tox.ini,tox.ini,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,7673835b3da50575a14213814ea1ccefa860260f,'drop support for Python 2.7 and 3.5',"""@@ -1,16 +1,14 @@\n [tox]\n envlist =\n-    py{38,37,36,35,27,py3,py}\n+    py{38,37,36,py3}\n     py38-{simplejson,devel,lowest}\n+    style\n     docs\n-    coverage\n skip_missing_interpreters = true\n \n [testenv]\n-passenv = LANG\n deps =\n     pytest\n-    coverage\n     greenlet\n     blinker\n     python-dotenv\n@@ -29,18 +27,10 @@ deps =\n     simplejson: simplejson\n \n commands =\n-    # the examples need to be installed to test successfully\n     pip install -q -e examples/tutorial[test]\n     pip install -q -e examples/javascript[test]\n \n-    # pytest-cov doesn't seem to play nice with -p\n-    coverage run -p -m pytest --tb=short -Werror {posargs:tests examples}\n-\n-[testenv:nightly]\n-# courtesy Python nightly test, don't fail the build in CI\n-ignore_outcome = true\n-commands =\n-    coverage run -p -m pytest --tb=short -Werror --junitxml=test-results.xml tests\n+    pytest --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n \n [testenv:style]\n deps = pre-commit\n@@ -48,22 +38,5 @@ skip_install = true\n commands = pre-commit run --all-files --show-diff-on-failure\n \n [testenv:docs]\n-deps =\n-    -r docs/requirements.txt\n+deps = -r docs/requirements.txt\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n-\n-[testenv:coverage]\n-deps = coverage\n-skip_install = true\n-commands =\n-    coverage combine\n-    coverage html\n-    coverage report\n-\n-[testenv:coverage-ci]\n-deps = coverage\n-skip_install = true\n-commands =\n-    coverage combine\n-    coverage xml\n-    coverage report\n""",0,0
src/flask/__init__.py,src/flask/__init__.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -17,7 +17,6 @@ from werkzeug.exceptions import abort\n from werkzeug.utils import redirect\n \n from . import json\n-from ._compat import json_available\n from .app import Flask\n from .app import Request\n from .app import Response\n'",0,0
src/flask/_compat.py,src/flask/_compat.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -113,33 +113,3 @@ except ImportError:\n     # https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\n     def fspath(path):\n         return path.__fspath__() if hasattr(path, ""__fspath__"") else path\n-\n-\n-class _DeprecatedBool(object):\n-    def __init__(self, name, version, value):\n-        self.message = ""\'{}\' is deprecated and will be removed in version {}."".format(\n-            name, version\n-        )\n-        self.value = value\n-\n-    def _warn(self):\n-        import warnings\n-\n-        warnings.warn(self.message, DeprecationWarning, stacklevel=2)\n-\n-    def __eq__(self, other):\n-        self._warn()\n-        return other == self.value\n-\n-    def __ne__(self, other):\n-        self._warn()\n-        return other != self.value\n-\n-    def __bool__(self):\n-        self._warn()\n-        return self.value\n-\n-    __nonzero__ = __bool__\n-\n-\n-json_available = _DeprecatedBool(""flask.json_available"", ""2.0.0"", True)\n'",1.25,1.4285714285714286
src/flask/app.py,src/flask/app.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -10,7 +10,6 @@\n """"""\n import os\n import sys\n-import warnings\n from datetime import timedelta\n from functools import update_wrapper\n from itertools import chain\n@@ -1066,70 +1065,6 @@ class Flask(_PackageBoundObject):\n \n         return cls(self, **kwargs)\n \n-    def open_session(self, request):\n-        """"""Creates or opens a new session.  Default implementation stores all\n-        session data in a signed cookie.  This requires that the\n-        :attr:`secret_key` is set.  Instead of overriding this method\n-        we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.open_session`` instead.\n-\n-        :param request: an instance of :attr:`request_class`.\n-        """"""\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                \'""open_session"" is deprecated and will be removed in\'\n-                \' 2.0. Use ""session_interface.open_session"" instead.\'\n-            )\n-        )\n-        return self.session_interface.open_session(self, request)\n-\n-    def save_session(self, session, response):\n-        """"""Saves the session if it needs updates.  For the default\n-        implementation, check :meth:`open_session`.  Instead of overriding this\n-        method we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.save_session`` instead.\n-\n-        :param session: the session to be saved (a\n-                        :class:`~werkzeug.contrib.securecookie.SecureCookie`\n-                        object)\n-        :param response: an instance of :attr:`response_class`\n-        """"""\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                \'""save_session"" is deprecated and will be removed in\'\n-                \' 2.0. Use ""session_interface.save_session"" instead.\'\n-            )\n-        )\n-        return self.session_interface.save_session(self, session, response)\n-\n-    def make_null_session(self):\n-        """"""Creates a new instance of a missing session.  Instead of overriding\n-        this method we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.make_null_session`` instead.\n-\n-        .. versionadded:: 0.7\n-        """"""\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                \'""make_null_session"" is deprecated and will be removed\'\n-                \' in 2.0. Use ""session_interface.make_null_session""\'\n-                "" instead.""\n-            )\n-        )\n-        return self.session_interface.make_null_session(self)\n-\n     @setupmethod\n     def register_blueprint(self, blueprint, **options):\n         """"""Register a :class:`~flask.Blueprint` on the application. Keyword\n'",2.623529411764706,2.682926829268293
src/flask/config.py,src/flask/config.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -11,7 +11,6 @@\n import errno\n import os\n import types\n-import warnings\n \n from werkzeug.utils import import_string\n \n@@ -210,29 +209,6 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n-    def from_json(self, filename, silent=False):\n-        """"""Update the values in the config from a JSON file. The loaded\n-        data is passed to the :meth:`from_mapping` method.\n-\n-        :param filename: The path to the JSON file. This can be an\n-            absolute path or relative to the config root path.\n-        :param silent: Ignore the file if it doesn\'t exist.\n-\n-        .. deprecated:: 2.0\n-            Use :meth:`from_file` with :meth:`json.load` instead.\n-\n-        .. versionadded:: 0.11\n-        """"""\n-        warnings.warn(\n-            ""\'from_json\' is deprecated and will be removed in 2.0.""\n-            "" Use \'from_file(filename, load=json.load)\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        from .json import load\n-\n-        return self.from_file(filename, load, silent=silent)\n-\n     def from_mapping(self, *mapping, **kwargs):\n         """"""Updates the config like :meth:`update` ignoring items with non-upper\n         keys.\n'",3.0,3.1818181818181817
src/flask/logging.py,src/flask/logging.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -10,7 +10,6 @@ from __future__ import absolute_import\n \n import logging\n import sys\n-import warnings\n \n from werkzeug.local import LocalProxy\n \n@@ -57,20 +56,6 @@ default_handler.setFormatter(\n )\n \n \n-def _has_config(logger):\n-    """"""Decide if a logger has direct configuration applied by checking\n-    its properties against the defaults.\n-\n-    :param logger: The :class:`~logging.Logger` to inspect.\n-    """"""\n-    return (\n-        logger.level != logging.NOTSET\n-        or logger.handlers\n-        or logger.filters\n-        or not logger.propagate\n-    )\n-\n-\n def create_logger(app):\n     """"""Get the Flask app\'s logger and configure it if needed.\n \n@@ -86,20 +71,6 @@ def create_logger(app):\n     """"""\n     logger = logging.getLogger(app.name)\n \n-    # 1.1.0 changes name of logger, warn if config is detected for old\n-    # name and not new name\n-    for old_name in (""flask.app"", ""flask""):\n-        old_logger = logging.getLogger(old_name)\n-\n-        if _has_config(old_logger) and not _has_config(logger):\n-            warnings.warn(\n-                ""\'app.logger\' is named \'{name}\' for this application,""\n-                "" but configuration was found for \'{old_name}\', which""\n-                "" no longer has an effect. The logging configuration""\n-                "" should be moved to \'{name}\'."".format(name=app.name, old_name=old_name)\n-            )\n-            break\n-\n     if app.debug and not logger.level:\n         logger.setLevel(logging.DEBUG)\n \n'",4.5,3.6666666666666665
src/flask/testing.py,src/flask/testing.py,1263d3bd142e4964da123f4e59088aa2968ec7e5,a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8,'remove deprecated code',"'@@ -9,7 +9,6 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n """"""\n-import warnings\n from contextlib import contextmanager\n \n import werkzeug.test\n@@ -95,23 +94,6 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         return json_dumps(obj, **kwargs)\n \n \n-def make_test_environ_builder(*args, **kwargs):\n-    """"""Create a :class:`flask.testing.EnvironBuilder`.\n-\n-    .. deprecated: 1.1\n-        Will be removed in 2.0. Construct\n-        ``flask.testing.EnvironBuilder`` directly instead.\n-    """"""\n-    warnings.warn(\n-        DeprecationWarning(\n-            \'""make_test_environ_builder()"" is deprecated and will be\'\n-            \' removed in 2.0. Construct ""flask.testing.EnvironBuilder""\'\n-            "" directly instead.""\n-        )\n-    )\n-    return EnvironBuilder(*args, **kwargs)\n-\n-\n class FlaskClient(Client):\n     """"""Works like a regular Werkzeug test client but has some knowledge about\n     how Flask works to defer the cleanup of the request context stack to the\n'",3.7,4.0
src/flask/cli.py,src/flask/cli.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -721,12 +721,8 @@ class CertParamType(click.ParamType):\n \n             obj = import_string(value, silent=True)\n \n-            if sys.version_info < (2, 7, 9):\n-                if obj:\n-                    return obj\n-            else:\n-                if isinstance(obj, ssl.SSLContext):\n-                    return obj\n+            if isinstance(obj, ssl.SSLContext):\n+                return obj\n \n             raise\n \n'",4.166666666666667,4.111111111111111
src/flask/ctx.py,src/flask/ctx.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -221,8 +221,6 @@ class AppContext(object):\n     def push(self):\n         """"""Binds the app context to the current context.""""""\n         self._refcnt += 1\n-        if hasattr(sys, ""exc_clear""):\n-            sys.exc_clear()\n         _app_ctx_stack.push(self)\n         appcontext_pushed.send(self.app)\n \n@@ -371,9 +369,6 @@ class RequestContext(object):\n         else:\n             self._implicit_app_ctx_stack.append(None)\n \n-        if hasattr(sys, ""exc_clear""):\n-            sys.exc_clear()\n-\n         _request_ctx_stack.push(self)\n \n         # Open the session at the moment that the request context is available.\n@@ -399,9 +394,9 @@ class RequestContext(object):\n            Added the `exc` argument.\n         """"""\n         app_ctx = self._implicit_app_ctx_stack.pop()\n+        clear_request = False\n \n         try:\n-            clear_request = False\n             if not self._implicit_app_ctx_stack:\n                 self.preserved = False\n                 self._preserved_exc = None\n@@ -409,13 +404,6 @@ class RequestContext(object):\n                     exc = sys.exc_info()[1]\n                 self.app.do_teardown_request(exc)\n \n-                # If this interpreter supports clearing the exception information\n-                # we do that now.  This will only go into effect on Python 2.x,\n-                # on 3.x it disappears automatically at the end of the exception\n-                # stack.\n-                if hasattr(sys, ""exc_clear""):\n-                    sys.exc_clear()\n-\n                 request_close = getattr(self.request, ""close"", None)\n                 if request_close is not None:\n                     request_close()\n'",2.037037037037037,1.9259259259259258
src/flask/helpers.py,src/flask/helpers.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -634,11 +634,7 @@ def send_file(\n             mtime = os.path.getmtime(filename)\n             fsize = os.path.getsize(filename)\n         elif isinstance(file, io.BytesIO):\n-            try:\n-                fsize = file.getbuffer().nbytes\n-            except AttributeError:\n-                # Python 2 doesn\'t have getbuffer\n-                fsize = len(file.getvalue())\n+            fsize = file.getbuffer().nbytes\n         elif isinstance(file, io.TextIOBase):\n             raise ValueError(""Files must be opened in binary mode or use BytesIO."")\n \n@@ -799,8 +795,6 @@ def get_root_path(import_name):\n     if loader is None or import_name == ""__main__"":\n         return os.getcwd()\n \n-    # For .egg, zipimporter does not have get_filename until Python 2.7.\n-    # Some other loaders might exhibit the same behavior.\n     if hasattr(loader, ""get_filename""):\n         filepath = loader.get_filename(import_name)\n     else:\n@@ -857,30 +851,29 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n \n def _find_package_path(root_mod_name):\n     """"""Find the path where the module\'s root exists in""""""\n-    if sys.version_info >= (3, 4):\n-        import importlib.util\n+    import importlib.util\n \n-        try:\n-            spec = importlib.util.find_spec(root_mod_name)\n-            if spec is None:\n-                raise ValueError(""not found"")\n-        # ImportError: the machinery told us it does not exist\n-        # ValueError:\n-        #    - the module name was invalid\n-        #    - the module name is __main__\n-        #    - *we* raised `ValueError` due to `spec` being `None`\n-        except (ImportError, ValueError):\n-            pass  # handled below\n+    try:\n+        spec = importlib.util.find_spec(root_mod_name)\n+        if spec is None:\n+            raise ValueError(""not found"")\n+    # ImportError: the machinery told us it does not exist\n+    # ValueError:\n+    #    - the module name was invalid\n+    #    - the module name is __main__\n+    #    - *we* raised `ValueError` due to `spec` being `None`\n+    except (ImportError, ValueError):\n+        pass  # handled below\n+    else:\n+        # namespace package\n+        if spec.origin in {""namespace"", None}:\n+            return os.path.dirname(next(iter(spec.submodule_search_locations)))\n+        # a package (with __init__.py)\n+        elif spec.submodule_search_locations:\n+            return os.path.dirname(os.path.dirname(spec.origin))\n+        # just a normal module\n         else:\n-            # namespace package\n-            if spec.origin in {""namespace"", None}:\n-                return os.path.dirname(next(iter(spec.submodule_search_locations)))\n-            # a package (with __init__.py)\n-            elif spec.submodule_search_locations:\n-                return os.path.dirname(os.path.dirname(spec.origin))\n-            # just a normal module\n-            else:\n-                return os.path.dirname(spec.origin)\n+            return os.path.dirname(spec.origin)\n \n     # we were unable to find the `package_path` using PEP 451 loaders\n     loader = pkgutil.get_loader(root_mod_name)\n@@ -888,7 +881,6 @@ def _find_package_path(root_mod_name):\n         # import name is not found, or interactive/main module\n         return os.getcwd()\n     else:\n-        # For .egg, zipimporter does not have get_filename until Python 2.7.\n         if hasattr(loader, ""get_filename""):\n             filename = loader.get_filename(root_mod_name)\n         elif hasattr(loader, ""archive""):\n'",4.212121212121212,4.151515151515151
tests/test_basic.py,tests/test_basic.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -91,12 +91,7 @@ def test_provide_automatic_options_kwarg(app, client):\n     assert rv.status_code == 405\n     assert sorted(rv.allow) == [""GET"", ""HEAD""]\n \n-    # Older versions of Werkzeug.test.Client don\'t have an options method\n-    if hasattr(client, ""options""):\n-        rv = client.options(""/"")\n-    else:\n-        rv = client.open(""/"", method=""OPTIONS"")\n-\n+    rv = client.open(""/"", method=""OPTIONS"")\n     assert rv.status_code == 405\n \n     rv = client.head(""/"")\n@@ -109,11 +104,7 @@ def test_provide_automatic_options_kwarg(app, client):\n     assert rv.status_code == 405\n     assert sorted(rv.allow) == [""GET"", ""HEAD"", ""POST""]\n \n-    if hasattr(client, ""options""):\n-        rv = client.options(""/more"")\n-    else:\n-        rv = client.open(""/more"", method=""OPTIONS"")\n-\n+    rv = client.open(""/more"", method=""OPTIONS"")\n     assert rv.status_code == 405\n \n \n'",1.0733590733590734,1.0656370656370657
tests/test_cli.py,tests/test_cli.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -589,16 +589,11 @@ def test_run_cert_import(monkeypatch):\n     with pytest.raises(click.BadParameter):\n         run_command.make_context(""run"", [""--cert"", ""not_here""])\n \n-    # not an SSLContext\n-    if sys.version_info >= (2, 7, 9):\n-        with pytest.raises(click.BadParameter):\n-            run_command.make_context(""run"", [""--cert"", ""flask""])\n+    with pytest.raises(click.BadParameter):\n+        run_command.make_context(""run"", [""--cert"", ""flask""])\n \n     # SSLContext\n-    if sys.version_info < (2, 7, 9):\n-        ssl_context = object()\n-    else:\n-        ssl_context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)\n+    ssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)\n \n     monkeypatch.setitem(sys.modules, ""ssl_context"", ssl_context)\n     ctx = run_command.make_context(""run"", [""--cert"", ""ssl_context""])\n'",1.0793650793650793,1.0476190476190477
tests/test_helpers.py,tests/test_helpers.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -92,7 +92,6 @@ class TestJSON(object):\n     )\n     def test_detect_encoding(self, value, encoding):\n         data = json.dumps(value).encode(encoding)\n-        assert json.detect_encoding(data) == encoding\n         assert json.loads(data) == value\n \n     @pytest.mark.parametrize(""debug"", (True, False))\n@@ -679,8 +678,6 @@ class TestSendfile(object):\n                 ""%C3%91and%C3%BA%EF%BC%8Fping%C3%BCino.txt"",\n             ),\n             (u""Vögel.txt"", ""Vogel.txt"", ""V%C3%B6gel.txt""),\n-            # Native string not marked as Unicode on Python 2\n-            (""tést.txt"", ""test.txt"", ""t%C3%A9st.txt""),\n             # "":/"" are not safe in filename* value\n             (u""те:/ст"", \'"":/""\', ""%D1%82%D0%B5%3A%2F%D1%81%D1%82""),\n         ),\n'",1.1844660194174756,1.1844660194174756
tests/test_regression.py,tests/test_regression.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -9,7 +9,7 @@\n     :license: BSD-3-Clause\n """"""\n import gc\n-import sys\n+import platform\n import threading\n \n import pytest\n@@ -44,6 +44,7 @@ class assert_no_leak(object):\n         gc.enable()\n \n \n+@pytest.mark.skipif(platform.python_implementation() == ""PyPy"", reason=""CPython only"")\n def test_memory_consumption():\n     app = flask.Flask(__name__)\n \n@@ -60,11 +61,9 @@ def test_memory_consumption():\n     # Trigger caches\n     fire()\n \n-    # This test only works on CPython 2.7.\n-    if sys.version_info >= (2, 7) and not hasattr(sys, ""pypy_translation_info""):\n-        with assert_no_leak():\n-            for _x in range(10):\n-                fire()\n+    with assert_no_leak():\n+        for _x in range(10):\n+            fire()\n \n \n def test_safe_join_toplevel_pardir():\n'",1.4,1.2
tests/test_reqctx.py,tests/test_reqctx.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -285,10 +285,6 @@ def test_session_dynamic_cookie_name():\n def test_bad_environ_raises_bad_request():\n     app = flask.Flask(__name__)\n \n-    # We cannot use app.test_client() for the Unicode-rich Host header,\n-    # because werkzeug enforces latin1 on Python 2.\n-    # However it works when actually passed to the server.\n-\n     from flask.testing import EnvironBuilder\n \n     builder = EnvironBuilder(app)\n@@ -309,10 +305,6 @@ def test_environ_for_valid_idna_completes():\n     def index():\n         return ""Hello World!""\n \n-    # We cannot use app.test_client() for the Unicode-rich Host header,\n-    # because werkzeug enforces latin1 on Python 2.\n-    # However it works when actually passed to the server.\n-\n     from flask.testing import EnvironBuilder\n \n     builder = EnvironBuilder(app)\n'",1.1142857142857143,1.1142857142857143
tests/test_testing.py,tests/test_testing.py,57d628ca74513480908a63a6b66c1c8b1af896e8,662c245795c7cbb5dbd657a2d707c62c16770c18,'remove more compat code',"'@@ -169,12 +169,10 @@ def test_redirect_keep_session(app, client, app_ctx):\n         rv = client.get(""/"")\n         assert rv.data == b""index""\n         assert flask.session.get(""data"") == ""foo""\n+\n         rv = client.post(""/"", data={}, follow_redirects=True)\n         assert rv.data == b""foo""\n-\n-        # This support requires a new Werkzeug version\n-        if not hasattr(client, ""redirect_client""):\n-            assert flask.session.get(""data"") == ""foo""\n+        assert flask.session.get(""data"") == ""foo""\n \n         rv = client.get(""/getsession"")\n         assert rv.data == b""foo""\n'",1.0612244897959184,1.0408163265306123
.pre-commit-config.yaml,.pre-commit-config.yaml,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,22 +1,29 @@\n repos:\n+  - repo: https://github.com/asottile/pyupgrade\n+    rev: v2.1.0\n+    hooks:\n+      - id: pyupgrade\n+        args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v1.5.0\n+    rev: v2.1.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n-        args: [""--application-directories"", "".:src""]\n+        args: [""--application-directories"", ""src""]\n   - repo: https://github.com/python/black\n-    rev: 19.3b0\n+    rev: 19.10b0\n     hooks:\n       - id: black\n   - repo: https://gitlab.com/pycqa/flake8\n-    rev: 3.7.7\n+    rev: 3.7.9\n     hooks:\n       - id: flake8\n-        additional_dependencies: [flake8-bugbear]\n+        additional_dependencies:\n+          - flake8-bugbear\n+          - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v2.2.3\n+    rev: v2.5.0\n     hooks:\n       - id: check-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
docs/conf.py,docs/conf.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -52,14 +52,12 @@ singlehtml_sidebars = {""index"": [""project.html"", ""localtoc.html""]}\n html_static_path = [""_static""]\n html_favicon = ""_static/flask-icon.png""\n html_logo = ""_static/flask-icon.png""\n-html_title = ""Flask Documentation ({})"".format(version)\n+html_title = f""Flask Documentation ({version})""\n html_show_sourcelink = False\n \n # LaTeX ----------------------------------------------------------------\n \n-latex_documents = [\n-    (master_doc, ""Flask-{}.tex"".format(version), html_title, author, ""manual"")\n-]\n+latex_documents = [(master_doc, f""Flask-{version}.tex"", html_title, author, ""manual"")]\n \n # Local Extensions -----------------------------------------------------\n \n@@ -76,9 +74,9 @@ def github_link(name, rawtext, text, lineno, inliner, options=None, content=None\n         words = None\n \n     if packaging.version.parse(release).is_devrelease:\n-        url = ""{0}master/{1}"".format(base_url, text)\n+        url = f""{base_url}master/{text}""\n     else:\n-        url = ""{0}{1}/{2}"".format(base_url, release, text)\n+        url = f""{base_url}{release}/{text}""\n \n     if words is None:\n         words = url\n'",3.0,3.0
examples/javascript/js_example/__init__.py,examples/javascript/js_example/__init__.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -2,4 +2,4 @@ from flask import Flask\n \n app = Flask(__name__)\n \n-from js_example import views\n+from js_example import views  # noqa: F401\n'",0,0
examples/javascript/js_example/views.py,examples/javascript/js_example/views.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -8,7 +8,7 @@ from js_example import app\n @app.route(""/"", defaults={""js"": ""plain""})\n @app.route(""/<any(plain, jquery, fetch):js>"")\n def index(js):\n-    return render_template(""{0}.html"".format(js), js=js)\n+    return render_template(f""{js}.html"", js=js)\n \n \n @app.route(""/add"", methods=[""POST""])\n'",1.0,1.0
examples/javascript/setup.py,examples/javascript/setup.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,9 +1,7 @@\n-import io\n-\n from setuptools import find_packages\n from setuptools import setup\n \n-with io.open(""README.rst"", ""rt"", encoding=""utf8"") as f:\n+with open(""README.rst"", encoding=""utf8"") as f:\n     readme = f.read()\n \n setup(\n'",0,0
examples/tutorial/flaskr/auth.py,examples/tutorial/flaskr/auth.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -64,7 +64,7 @@ def register():\n             db.execute(""SELECT id FROM user WHERE username = ?"", (username,)).fetchone()\n             is not None\n         ):\n-            error = ""User {0} is already registered."".format(username)\n+            error = f""User {username} is already registered.""\n \n         if error is None:\n             # the name is available, store it in the database and go to\n'",2.8333333333333335,2.8333333333333335
examples/tutorial/flaskr/blog.py,examples/tutorial/flaskr/blog.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -49,7 +49,7 @@ def get_post(id, check_author=True):\n     )\n \n     if post is None:\n-        abort(404, ""Post id {0} doesn\'t exist."".format(id))\n+        abort(404, f""Post id {id} doesn\'t exist."")\n \n     if check_author and post[""author_id""] != g.user[""id""]:\n         abort(403)\n'",2.8,2.8
examples/tutorial/setup.py,examples/tutorial/setup.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,9 +1,7 @@\n-import io\n-\n from setuptools import find_packages\n from setuptools import setup\n \n-with io.open(""README.rst"", ""rt"", encoding=""utf8"") as f:\n+with open(""README.rst"", encoding=""utf8"") as f:\n     readme = f.read()\n \n setup(\n'",0,0
examples/tutorial/tests/conftest.py,examples/tutorial/tests/conftest.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -44,7 +44,7 @@ def runner(app):\n     return app.test_cli_runner()\n \n \n-class AuthActions(object):\n+class AuthActions:\n     def __init__(self, client):\n         self._client = client\n \n'",1.0,1.0
examples/tutorial/tests/test_db.py,examples/tutorial/tests/test_db.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -17,7 +17,7 @@ def test_get_close_db(app):\n \n \n def test_init_db_command(runner, monkeypatch):\n-    class Recorder(object):\n+    class Recorder:\n         called = False\n \n     def fake_init_db():\n'",1.0,1.0
setup.cfg,setup.cfg,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -20,7 +20,8 @@ source =\n # F = flake8 pyflakes\n # W = pycodestyle warnings\n # B9 = bugbear opinions\n-select = B, E, F, W, B9\n+# ISC = implicit-str-concat\n+select = B, E, F, W, B9, ISC\n ignore =\n     # slice notation whitespace, invalid\n     E203\n@@ -35,6 +36,5 @@ ignore =\n # up to 88 allowed by bugbear B950\n max-line-length = 80\n per-file-ignores =\n-    # __init__ modules export names\n-    **/__init__.py: F401\n-    src/flask/_compat.py: E731, B301, F401\n+    # __init__ module exports names\n+    src/flask/__init__.py: F401\n'",0,0
setup.py,setup.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,13 +1,12 @@\n-import io\n import re\n \n from setuptools import find_packages\n from setuptools import setup\n \n-with io.open(""README.rst"", ""rt"", encoding=""utf8"") as f:\n+with open(""README.rst"", encoding=""utf8"") as f:\n     readme = f.read()\n \n-with io.open(""src/flask/__init__.py"", ""rt"", encoding=""utf8"") as f:\n+with open(""src/flask/__init__.py"", encoding=""utf8"") as f:\n     version = re.search(r\'__version__ = ""(.*?)""\', f.read()).group(1)\n \n setup(\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask\n     ~~~~~\n'",0,0
src/flask/__main__.py,src/flask/__main__.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.__main__\n     ~~~~~~~~~~~~~~\n'",0,0
src/flask/app.py,src/flask/app.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.app\n     ~~~~~~~~~\n@@ -1111,7 +1110,7 @@ class Flask(_PackageBoundObject):\n         endpoint=None,\n         view_func=None,\n         provide_automatic_options=None,\n-        **options\n+        **options,\n     ):\n         """"""Connects a URL rule.  Works exactly like the :meth:`route`\n         decorator.  If a view_func is provided it will be registered with the\n@@ -1180,7 +1179,7 @@ class Flask(_PackageBoundObject):\n                 ""Allowed methods must be a list of strings, for""\n                 \' example: @app.route(..., methods=[""POST""])\'\n             )\n-        methods = set(item.upper() for item in methods)\n+        methods = {item.upper() for item in methods}\n \n         # Methods that should always be added\n         required_methods = set(getattr(view_func, ""required_methods"", ()))\n@@ -1342,7 +1341,7 @@ class Flask(_PackageBoundObject):\n         """"""\n         if isinstance(code_or_exception, HTTPException):  # old broken behavior\n             raise ValueError(\n-                ""Tried to register a handler for an exception instance {0!r}.""\n+                ""Tried to register a handler for an exception instance {!r}.""\n                 "" Handlers can only be registered for exception classes or""\n                 "" HTTP error codes."".format(code_or_exception)\n             )\n@@ -1351,7 +1350,7 @@ class Flask(_PackageBoundObject):\n             exc_class, code = self._get_exc_class_and_code(code_or_exception)\n         except KeyError:\n             raise KeyError(\n-                ""\'{0}\' is not a recognized HTTP error code. Use a subclass of""\n+                ""\'{}\' is not a recognized HTTP error code. Use a subclass of""\n                 "" HTTPException with that code instead."".format(code_or_exception)\n             )\n \n@@ -1811,7 +1810,7 @@ class Flask(_PackageBoundObject):\n         .. versionadded:: 0.8\n         """"""\n         self.logger.error(\n-            ""Exception on %s [%s]"" % (request.path, request.method), exc_info=exc_info\n+            f""Exception on {request.path} [{request.method}]"", exc_info=exc_info\n         )\n \n     def raise_routing_exception(self, request):\n@@ -2376,4 +2375,4 @@ class Flask(_PackageBoundObject):\n         return self.wsgi_app(environ, start_response)\n \n     def __repr__(self):\n-        return ""<%s %r>"" % (self.__class__.__name__, self.name)\n+        return f""<{self.__class__.__name__} {self.name!r}>""\n'",2.682926829268293,2.682926829268293
src/flask/blueprints.py,src/flask/blueprints.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.blueprints\n     ~~~~~~~~~~~~~~~~\n@@ -18,7 +17,7 @@ from .helpers import _PackageBoundObject\n _sentinel = object()\n \n \n-class BlueprintSetupState(object):\n+class BlueprintSetupState:\n     """"""Temporary holder object for registering a blueprint with the\n     application.  An instance of this class is created by the\n     :meth:`~flask.Blueprint.make_setup_state` method and later passed\n@@ -80,10 +79,10 @@ class BlueprintSetupState(object):\n             defaults = dict(defaults, **options.pop(""defaults""))\n         self.app.add_url_rule(\n             rule,\n-            ""%s.%s"" % (self.blueprint.name, endpoint),\n+            f""{self.blueprint.name}.{endpoint}"",\n             view_func,\n             defaults=defaults,\n-            **options\n+            **options,\n         )\n \n \n'",1.4772727272727273,1.4772727272727273
src/flask/cli.py,src/flask/cli.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.cli\n     ~~~~~~~~~\n@@ -8,8 +7,6 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n """"""\n-from __future__ import print_function\n-\n import ast\n import inspect\n import os\n@@ -167,7 +164,7 @@ def find_app_by_string(script_info, module, app_name):\n     if inspect.isfunction(attr):\n         if args:\n             try:\n-                args = ast.literal_eval(""({args},)"".format(args=args))\n+                args = ast.literal_eval(f""({args},)"")\n             except (ValueError, SyntaxError) as e:\n                 raise NoAppException(\n                     ""Could not parse the arguments in ""\n@@ -243,7 +240,7 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n                 ""\\n\\n{tb}"".format(name=module_name, tb=traceback.format_exc())\n             )\n         elif raise_if_not_found:\n-            raise NoAppException(\'Could not import ""{name}"".\'.format(name=module_name))\n+            raise NoAppException(f\'Could not import ""{module_name}"".\')\n         else:\n             return\n \n@@ -285,7 +282,7 @@ version_option = click.Option(\n )\n \n \n-class DispatchingApp(object):\n+class DispatchingApp:\n     """"""Special application that dispatches to a Flask application which\n     is imported by name in a background thread.  If an error happens\n     it is recorded and shown as part of the WSGI handling which in case\n@@ -344,7 +341,7 @@ class DispatchingApp(object):\n             return rv(environ, start_response)\n \n \n-class ScriptInfo(object):\n+class ScriptInfo:\n     """"""Helper object to deal with Flask applications.  This is usually not\n     necessary to interface with as it\'s used internally in the dispatching\n     to click.  In future versions of Flask this object will most likely play\n@@ -491,7 +488,7 @@ class FlaskGroup(AppGroup):\n         add_version_option=True,\n         load_dotenv=True,\n         set_debug_flag=True,\n-        **extra\n+        **extra,\n     ):\n         params = list(extra.pop(""params"", None) or ())\n \n@@ -583,7 +580,7 @@ class FlaskGroup(AppGroup):\n \n         kwargs[""obj""] = obj\n         kwargs.setdefault(""auto_envvar_prefix"", ""FLASK"")\n-        return super(FlaskGroup, self).main(*args, **kwargs)\n+        return super().main(*args, **kwargs)\n \n \n def _path_is_ancestor(path, other):\n@@ -662,14 +659,14 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n         return\n \n     if app_import_path is not None:\n-        message = \' * Serving Flask app ""{0}""\'.format(app_import_path)\n+        message = f\' * Serving Flask app ""{app_import_path}""\'\n \n         if not eager_loading:\n             message += "" (lazy loading)""\n \n         click.echo(message)\n \n-    click.echo("" * Environment: {0}"".format(env))\n+    click.echo(f"" * Environment: {env}"")\n \n     if env == ""production"":\n         click.secho(\n@@ -680,7 +677,7 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n         click.secho(""   Use a production WSGI server instead."", dim=True)\n \n     if debug is not None:\n-        click.echo("" * Debug mode: {0}"".format(""on"" if debug else ""off""))\n+        click.echo("" * Debug mode: {}"".format(""on"" if debug else ""off""))\n \n \n class CertParamType(click.ParamType):\n@@ -766,7 +763,7 @@ class SeparatedPathType(click.Path):\n \n     def convert(self, value, param, ctx):\n         items = self.split_envvar_value(value)\n-        super_convert = super(SeparatedPathType, self).convert\n+        super_convert = super().convert\n         return [super_convert(item, param, ctx) for item in items]\n \n \n@@ -866,12 +863,8 @@ def shell_command():\n     from .globals import _app_ctx_stack\n \n     app = _app_ctx_stack.top.app\n-    banner = ""Python %s on %s\\nApp: %s [%s]\\nInstance: %s"" % (\n-        sys.version,\n-        sys.platform,\n-        app.import_name,\n-        app.env,\n-        app.instance_path,\n+    banner = ""Python {} on {}\\nApp: {} [{}]\\nInstance: {}"".format(\n+        sys.version, sys.platform, app.import_name, app.env, app.instance_path,\n     )\n     ctx = {}\n \n@@ -879,7 +872,7 @@ def shell_command():\n     # is using it.\n     startup = os.environ.get(""PYTHONSTARTUP"")\n     if startup and os.path.isfile(startup):\n-        with open(startup, ""r"") as f:\n+        with open(startup) as f:\n             eval(compile(f.read(), startup, ""exec""), ctx)\n \n     ctx.update(app.make_shell_context())\n'",4.111111111111111,4.111111111111111
src/flask/config.py,src/flask/config.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.config\n     ~~~~~~~~~~~~\n@@ -15,7 +14,7 @@ import types\n from werkzeug.utils import import_string\n \n \n-class ConfigAttribute(object):\n+class ConfigAttribute:\n     """"""Makes an attribute forward to the config""""""\n \n     def __init__(self, name, get_converter=None):\n@@ -126,7 +125,7 @@ class Config(dict):\n         try:\n             with open(filename, mode=""rb"") as config_file:\n                 exec(compile(config_file.read(), filename, ""exec""), d.__dict__)\n-        except IOError as e:\n+        except OSError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                 return False\n             e.strerror = ""Unable to load configuration file (%s)"" % e.strerror\n@@ -197,7 +196,7 @@ class Config(dict):\n         try:\n             with open(filename) as f:\n                 obj = load(f)\n-        except IOError as e:\n+        except OSError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                 return False\n \n@@ -271,4 +270,4 @@ class Config(dict):\n         return rv\n \n     def __repr__(self):\n-        return ""<%s %s>"" % (self.__class__.__name__, dict.__repr__(self))\n+        return ""<{} {}>"".format(self.__class__.__name__, dict.__repr__(self))\n'",3.1818181818181817,3.1818181818181817
src/flask/ctx.py,src/flask/ctx.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.ctx\n     ~~~~~~~~~\n@@ -23,7 +22,7 @@ from .signals import appcontext_pushed\n _sentinel = object()\n \n \n-class _AppCtxGlobals(object):\n+class _AppCtxGlobals:\n     """"""A plain object. Used as a namespace for storing data during an\n     application context.\n \n@@ -200,7 +199,7 @@ def has_app_context():\n     return _app_ctx_stack.top is not None\n \n \n-class AppContext(object):\n+class AppContext:\n     """"""The application context binds an application object implicitly\n     to the current thread or greenlet, similar to how the\n     :class:`RequestContext` binds request information.  The application\n@@ -234,7 +233,7 @@ class AppContext(object):\n                 self.app.do_teardown_appcontext(exc)\n         finally:\n             rv = _app_ctx_stack.pop()\n-        assert rv is self, ""Popped wrong app context.  (%r instead of %r)"" % (rv, self)\n+        assert rv is self, f""Popped wrong app context.  ({rv!r} instead of {self!r})""\n         appcontext_popped.send(self.app)\n \n     def __enter__(self):\n@@ -245,7 +244,7 @@ class AppContext(object):\n         self.pop(exc_value)\n \n \n-class RequestContext(object):\n+class RequestContext:\n     """"""The request context contains all request relevant information.  It is\n     created at the beginning of the request and pushed to the\n     `_request_ctx_stack` and removed at the end of it.  It will create the\n@@ -420,10 +419,9 @@ class RequestContext(object):\n             if app_ctx is not None:\n                 app_ctx.pop(exc)\n \n-            assert rv is self, ""Popped wrong request context. (%r instead of %r)"" % (\n-                rv,\n-                self,\n-            )\n+            assert (\n+                rv is self\n+            ), f""Popped wrong request context. ({rv!r} instead of {self!r})""\n \n     def auto_pop(self, exc):\n         if self.request.environ.get(""flask._preserve_context"") or (\n@@ -447,7 +445,7 @@ class RequestContext(object):\n         self.auto_pop(exc_value)\n \n     def __repr__(self):\n-        return ""<%s \'%s\' [%s] of %s>"" % (\n+        return ""<{} \'{}\' [{}] of {}>"".format(\n             self.__class__.__name__,\n             self.request.url,\n             self.request.method,\n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.debughelpers\n     ~~~~~~~~~~~~~~~~~~\n@@ -102,7 +101,7 @@ def attach_enctype_error_multidict(request):\n \n \n def _dump_loader_info(loader):\n-    yield ""class: %s.%s"" % (type(loader).__module__, type(loader).__name__)\n+    yield ""class: {}.{}"".format(type(loader).__module__, type(loader).__name__)\n     for key, value in sorted(loader.__dict__.items()):\n         if key.startswith(""_""):\n             continue\n@@ -115,7 +114,7 @@ def _dump_loader_info(loader):\n             continue\n         elif not isinstance(value, (str, int, float, bool)):\n             continue\n-        yield ""%s: %r"" % (key, value)\n+        yield f""{key}: {value!r}""\n \n \n def explain_template_loading_attempts(app, template, attempts):\n@@ -131,7 +130,7 @@ def explain_template_loading_attempts(app, template, attempts):\n         if isinstance(srcobj, Flask):\n             src_info = \'application ""%s""\' % srcobj.import_name\n         elif isinstance(srcobj, Blueprint):\n-            src_info = \'blueprint ""%s"" (%s)\' % (srcobj.name, srcobj.import_name)\n+            src_info = f\'blueprint ""{srcobj.name}"" ({srcobj.import_name})\'\n         else:\n             src_info = repr(srcobj)\n \n'",4.125,4.125
src/flask/globals.py,src/flask/globals.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.globals\n     ~~~~~~~~~~~~~\n'",2.0,2.0
src/flask/helpers.py,src/flask/helpers.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.helpers\n     ~~~~~~~~~~~~~\n@@ -155,8 +154,7 @@ def stream_with_context(generator_or_function):\n             # don\'t need that because they are closed on their destruction\n             # automatically.\n             try:\n-                for item in gen:\n-                    yield item\n+                yield from gen\n             finally:\n                 if hasattr(gen, ""close""):\n                     gen.close()\n@@ -933,7 +931,7 @@ def find_package(import_name):\n     return None, package_path\n \n \n-class locked_cached_property(object):\n+class locked_cached_property:\n     """"""A decorator that converts a function into a lazy property.  The\n     function wrapped is called the first time to retrieve the result\n     and then that calculated result is used the next time you access\n@@ -959,7 +957,7 @@ class locked_cached_property(object):\n             return value\n \n \n-class _PackageBoundObject(object):\n+class _PackageBoundObject:\n     #: The name of the package or module that this app belongs to. Do not\n     #: change this once it is set by the constructor.\n     import_name = None\n@@ -1137,7 +1135,7 @@ def is_ip(value):\n     for family in (socket.AF_INET, socket.AF_INET6):\n         try:\n             socket.inet_pton(family, value)\n-        except socket.error:\n+        except OSError:\n             pass\n         else:\n             return True\n'",4.151515151515151,4.121212121212121
src/flask/json/__init__.py,src/flask/json/__init__.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n flask.json\n ~~~~~~~~~~\n@@ -286,10 +285,10 @@ def htmlsafe_dumps(obj, **kwargs):\n     """"""\n     rv = (\n         dumps(obj, **kwargs)\n-        .replace(u""<"", u""\\\\u003c"")\n-        .replace(u"">"", u""\\\\u003e"")\n-        .replace(u""&"", u""\\\\u0026"")\n-        .replace(u""\'"", u""\\\\u0027"")\n+        .replace(""<"", ""\\\\u003c"")\n+        .replace("">"", ""\\\\u003e"")\n+        .replace(""&"", ""\\\\u0026"")\n+        .replace(""\'"", ""\\\\u0027"")\n     )\n     if not _slash_escape:\n         rv = rv.replace(""\\\\/"", ""/"")\n'",4.071428571428571,4.071428571428571
src/flask/json/tag.py,src/flask/json/tag.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n Tagged JSON\n ~~~~~~~~~~~\n@@ -54,7 +53,7 @@ from ..json import dumps\n from ..json import loads\n \n \n-class JSONTag(object):\n+class JSONTag:\n     """"""Base class for defining type tags for :class:`TaggedJSONSerializer`.""""""\n \n     __slots__ = (""serializer"",)\n@@ -122,7 +121,7 @@ class PassDict(JSONTag):\n     def to_json(self, value):\n         # JSON objects may only have string keys, so don\'t bother tagging the\n         # key here.\n-        return dict((k, self.serializer.tag(v)) for k, v in value.items())\n+        return {k: self.serializer.tag(v) for k, v in value.items()}\n \n     tag = to_json\n \n@@ -213,7 +212,7 @@ class TagDateTime(JSONTag):\n         return parse_date(value)\n \n \n-class TaggedJSONSerializer(object):\n+class TaggedJSONSerializer:\n     """"""Serializer that uses a tag system to compactly represent objects that\n     are not JSON types. Passed as the intermediate serializer to\n     :class:`itsdangerous.Serializer`.\n@@ -269,7 +268,7 @@ class TaggedJSONSerializer(object):\n \n         if key is not None:\n             if not force and key in self.tags:\n-                raise KeyError(""Tag \'{0}\' is already registered."".format(key))\n+                raise KeyError(f""Tag \'{key}\' is already registered."")\n \n             self.tags[key] = tag\n \n'",1.4242424242424243,1.4242424242424243
src/flask/logging.py,src/flask/logging.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n flask.logging\n ~~~~~~~~~~~~~\n@@ -6,8 +5,6 @@ flask.logging\n :copyright: 2010 Pallets\n :license: BSD-3-Clause\n """"""\n-from __future__ import absolute_import\n-\n import logging\n import sys\n \n'",3.6666666666666665,3.6666666666666665
src/flask/sessions.py,src/flask/sessions.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.sessions\n     ~~~~~~~~~~~~~~\n@@ -77,19 +76,19 @@ class SecureCookieSession(CallbackDict, SessionMixin):\n             self.modified = True\n             self.accessed = True\n \n-        super(SecureCookieSession, self).__init__(initial, on_update)\n+        super().__init__(initial, on_update)\n \n     def __getitem__(self, key):\n         self.accessed = True\n-        return super(SecureCookieSession, self).__getitem__(key)\n+        return super().__getitem__(key)\n \n     def get(self, key, default=None):\n         self.accessed = True\n-        return super(SecureCookieSession, self).get(key, default)\n+        return super().get(key, default)\n \n     def setdefault(self, key, default=None):\n         self.accessed = True\n-        return super(SecureCookieSession, self).setdefault(key, default)\n+        return super().setdefault(key, default)\n \n \n class NullSession(SecureCookieSession):\n@@ -109,7 +108,7 @@ class NullSession(SecureCookieSession):\n     del _fail\n \n \n-class SessionInterface(object):\n+class SessionInterface:\n     """"""The basic interface you have to implement in order to replace the\n     default session interface which uses werkzeug\'s securecookie\n     implementation.  The only methods you have to implement are\n'",1.826086956521739,1.826086956521739
src/flask/signals.py,src/flask/signals.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.signals\n     ~~~~~~~~~~~~~\n@@ -16,11 +15,11 @@ try:\n except ImportError:\n     signals_available = False\n \n-    class Namespace(object):\n+    class Namespace:\n         def signal(self, name, doc=None):\n             return _FakeSignal(name, doc)\n \n-    class _FakeSignal(object):\n+    class _FakeSignal:\n         """"""If blinker is unavailable, create a fake class with the same\n         interface that allows sending of signals but will fail with an\n         error on anything else.  Instead of doing anything on send, it\n'",1.0,1.0
src/flask/templating.py,src/flask/templating.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.templating\n     ~~~~~~~~~~~~~~~~\n'",2.5454545454545454,2.5454545454545454
src/flask/testing.py,src/flask/testing.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.testing\n     ~~~~~~~~~~~~~\n@@ -51,7 +50,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         subdomain=None,\n         url_scheme=None,\n         *args,\n-        **kwargs\n+        **kwargs,\n     ):\n         assert not (base_url or subdomain or url_scheme) or (\n             base_url is not None\n@@ -64,7 +63,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n             app_root = app.config[""APPLICATION_ROOT""]\n \n             if subdomain:\n-                http_host = ""{0}.{1}"".format(subdomain, http_host)\n+                http_host = f""{subdomain}.{http_host}""\n \n             if url_scheme is None:\n                 url_scheme = app.config[""PREFERRED_URL_SCHEME""]\n@@ -82,7 +81,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n                 path += sep + url.query\n \n         self.app = app\n-        super(EnvironBuilder, self).__init__(path, base_url, *args, **kwargs)\n+        super().__init__(path, base_url, *args, **kwargs)\n \n     def json_dumps(self, obj, **kwargs):\n         """"""Serialize ``obj`` to a JSON-formatted string.\n@@ -112,7 +111,7 @@ class FlaskClient(Client):\n     preserve_context = False\n \n     def __init__(self, *args, **kwargs):\n-        super(FlaskClient, self).__init__(*args, **kwargs)\n+        super().__init__(*args, **kwargs)\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n             ""HTTP_USER_AGENT"": ""werkzeug/"" + werkzeug.__version__,\n@@ -239,7 +238,7 @@ class FlaskCliRunner(CliRunner):\n \n     def __init__(self, app, **kwargs):\n         self.app = app\n-        super(FlaskCliRunner, self).__init__(**kwargs)\n+        super().__init__(**kwargs)\n \n     def invoke(self, cli=None, args=None, **kwargs):\n         """"""Invokes a CLI command in an isolated environment. See\n@@ -262,4 +261,4 @@ class FlaskCliRunner(CliRunner):\n         if ""obj"" not in kwargs:\n             kwargs[""obj""] = ScriptInfo(create_app=lambda: self.app)\n \n-        return super(FlaskCliRunner, self).invoke(cli, args, **kwargs)\n+        return super().invoke(cli, args, **kwargs)\n'",4.0,4.0
src/flask/views.py,src/flask/views.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.views\n     ~~~~~~~~~~~\n@@ -16,7 +15,7 @@ http_method_funcs = frozenset(\n )\n \n \n-class View(object):\n+class View:\n     """"""Alternative way to use view functions.  A subclass has to implement\n     :meth:`dispatch_request` which is called with the view arguments from\n     the URL routing system.  If :attr:`methods` is provided the methods\n@@ -113,7 +112,7 @@ class MethodViewType(type):\n     """"""\n \n     def __init__(cls, name, bases, d):\n-        super(MethodViewType, cls).__init__(name, bases, d)\n+        super().__init__(name, bases, d)\n \n         if ""methods"" not in d:\n             methods = set()\n'",3.0,3.0
src/flask/wrappers.py,src/flask/wrappers.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     flask.wrappers\n     ~~~~~~~~~~~~~~\n@@ -22,7 +21,7 @@ class JSONMixin(_JSONMixin):\n \n     def on_json_loading_failed(self, e):\n         if current_app and current_app.debug:\n-            raise BadRequest(""Failed to decode JSON object: {0}"".format(e))\n+            raise BadRequest(f""Failed to decode JSON object: {e}"")\n \n         raise BadRequest()\n \n@@ -134,4 +133,4 @@ class Response(ResponseBase, JSONMixin):\n             return current_app.config[""MAX_COOKIE_SIZE""]\n \n         # return Werkzeug\'s default when not in an app context\n-        return super(Response, self).max_cookie_size\n+        return super().max_cookie_size\n'",2.5714285714285716,2.5714285714285716
tests/conftest.py,tests/conftest.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.conftest\n     ~~~~~~~~~~~~~~\n@@ -112,7 +111,7 @@ def limit_loader(request, monkeypatch):\n     if not request.param:\n         return\n \n-    class LimitedLoader(object):\n+    class LimitedLoader:\n         def __init__(self, loader):\n             self.loader = loader\n \n@@ -172,7 +171,7 @@ def install_egg(modules_tmpdir, monkeypatch):\n             textwrap.dedent(\n                 """"""\n         from setuptools import setup\n-        setup(name=\'{0}\',\n+        setup(name=\'{}\',\n               version=\'1.0\',\n               packages=[\'site_egg\'],\n               zip_safe=True)\n@@ -187,7 +186,7 @@ def install_egg(modules_tmpdir, monkeypatch):\n         subprocess.check_call(\n             [sys.executable, ""setup.py"", ""bdist_egg""], cwd=str(modules_tmpdir)\n         )\n-        egg_path, = modules_tmpdir.join(""dist/"").listdir()\n+        (egg_path,) = modules_tmpdir.join(""dist/"").listdir()\n         monkeypatch.syspath_prepend(str(egg_path))\n         return egg_path\n \n'",1.3157894736842106,1.3157894736842106
tests/test_appctx.py,tests/test_appctx.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.appctx\n     ~~~~~~~~~~~~\n@@ -163,7 +162,7 @@ def test_app_ctx_globals_methods(app, app_ctx):\n \n \n def test_custom_app_ctx_globals_class(app):\n-    class CustomRequestGlobals(object):\n+    class CustomRequestGlobals:\n         def __init__(self):\n             self.spam = ""eggs""\n \n@@ -190,7 +189,7 @@ def test_context_refcounts(app, client):\n                 pass\n         env = flask._request_ctx_stack.top.request.environ\n         assert env[""werkzeug.request""] is not None\n-        return u""""\n+        return """"\n \n     res = client.get(""/"")\n     assert res.status_code == 200\n'",1.103448275862069,1.103448275862069
tests/test_apps/cliapp/app.py,tests/test_apps/cliapp/app.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,6 +1,3 @@\n-from __future__ import absolute_import\n-from __future__ import print_function\n-\n from flask import Flask\n \n testapp = Flask(""testapp"")\n'",0,0
tests/test_apps/cliapp/factory.py,tests/test_apps/cliapp/factory.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,6 +1,3 @@\n-from __future__ import absolute_import\n-from __future__ import print_function\n-\n from flask import Flask\n \n \n'",1.0,1.0
tests/test_apps/cliapp/importerrorapp.py,tests/test_apps/cliapp/importerrorapp.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,6 +1,3 @@\n-from __future__ import absolute_import\n-from __future__ import print_function\n-\n from flask import Flask\n \n raise ImportError()\n'",0,0
tests/test_apps/cliapp/multiapp.py,tests/test_apps/cliapp/multiapp.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,6 +1,3 @@\n-from __future__ import absolute_import\n-from __future__ import print_function\n-\n from flask import Flask\n \n app1 = Flask(""app1"")\n'",0,0
tests/test_basic.py,tests/test_basic.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.basic\n     ~~~~~~~~~~~~~~~~~~~~~\n@@ -278,7 +277,7 @@ def test_session_using_server_name_port_and_path(app, client):\n \n \n def test_session_using_application_root(app, client):\n-    class PrefixPathMiddleware(object):\n+    class PrefixPathMiddleware:\n         def __init__(self, app, prefix):\n             self.app = app\n             self.prefix = prefix\n@@ -583,18 +582,18 @@ def test_extended_flashing(app):\n \n     @app.route(""/"")\n     def index():\n-        flask.flash(u""Hello World"")\n-        flask.flash(u""Hello World"", ""error"")\n-        flask.flash(flask.Markup(u""<em>Testing</em>""), ""warning"")\n+        flask.flash(""Hello World"")\n+        flask.flash(""Hello World"", ""error"")\n+        flask.flash(flask.Markup(""<em>Testing</em>""), ""warning"")\n         return """"\n \n     @app.route(""/test/"")\n     def test():\n         messages = flask.get_flashed_messages()\n         assert list(messages) == [\n-            u""Hello World"",\n-            u""Hello World"",\n-            flask.Markup(u""<em>Testing</em>""),\n+            ""Hello World"",\n+            ""Hello World"",\n+            flask.Markup(""<em>Testing</em>""),\n         ]\n         return """"\n \n@@ -603,9 +602,9 @@ def test_extended_flashing(app):\n         messages = flask.get_flashed_messages(with_categories=True)\n         assert len(messages) == 3\n         assert list(messages) == [\n-            (""message"", u""Hello World""),\n-            (""error"", u""Hello World""),\n-            (""warning"", flask.Markup(u""<em>Testing</em>"")),\n+            (""message"", ""Hello World""),\n+            (""error"", ""Hello World""),\n+            (""warning"", flask.Markup(""<em>Testing</em>"")),\n         ]\n         return """"\n \n@@ -614,7 +613,7 @@ def test_extended_flashing(app):\n         messages = flask.get_flashed_messages(\n             category_filter=[""message""], with_categories=True\n         )\n-        assert list(messages) == [(""message"", u""Hello World"")]\n+        assert list(messages) == [(""message"", ""Hello World"")]\n         return """"\n \n     @app.route(""/test_filters/"")\n@@ -623,8 +622,8 @@ def test_extended_flashing(app):\n             category_filter=[""message"", ""warning""], with_categories=True\n         )\n         assert list(messages) == [\n-            (""message"", u""Hello World""),\n-            (""warning"", flask.Markup(u""<em>Testing</em>"")),\n+            (""message"", ""Hello World""),\n+            (""warning"", flask.Markup(""<em>Testing</em>"")),\n         ]\n         return """"\n \n@@ -632,8 +631,8 @@ def test_extended_flashing(app):\n     def test_filters2():\n         messages = flask.get_flashed_messages(category_filter=[""message"", ""warning""])\n         assert len(messages) == 2\n-        assert messages[0] == u""Hello World""\n-        assert messages[1] == flask.Markup(u""<em>Testing</em>"")\n+        assert messages[0] == ""Hello World""\n+        assert messages[1] == flask.Markup(""<em>Testing</em>"")\n         return """"\n \n     # Create new test client on each test to clean flashed messages.\n@@ -1102,11 +1101,11 @@ def test_enctype_debug_helper(app, client):\n def test_response_types(app, client):\n     @app.route(""/text"")\n     def from_text():\n-        return u""Hällo Wörld""\n+        return ""Hällo Wörld""\n \n     @app.route(""/bytes"")\n     def from_bytes():\n-        return u""Hällo Wörld"".encode(""utf-8"")\n+        return ""Hällo Wörld"".encode()\n \n     @app.route(""/full_tuple"")\n     def from_full_tuple():\n@@ -1143,8 +1142,8 @@ def test_response_types(app, client):\n     def from_dict():\n         return {""foo"": ""bar""}, 201\n \n-    assert client.get(""/text"").data == u""Hällo Wörld"".encode(""utf-8"")\n-    assert client.get(""/bytes"").data == u""Hällo Wörld"".encode(""utf-8"")\n+    assert client.get(""/text"").data == ""Hällo Wörld"".encode()\n+    assert client.get(""/bytes"").data == ""Hällo Wörld"".encode()\n \n     rv = client.get(""/full_tuple"")\n     assert rv.data == b""Meh""\n@@ -1611,11 +1610,11 @@ def test_inject_blueprint_url_defaults(app):\n \n \n def test_nonascii_pathinfo(app, client):\n-    @app.route(u""/киртест"")\n+    @app.route(""/киртест"")\n     def index():\n         return ""Hello World!""\n \n-    rv = client.get(u""/киртест"")\n+    rv = client.get(""/киртест"")\n     assert rv.data == b""Hello World!""\n \n \n@@ -1875,7 +1874,7 @@ def test_multi_route_rules(app, client):\n \n \n def test_multi_route_class_views(app, client):\n-    class View(object):\n+    class View:\n         def __init__(self, app):\n             app.add_url_rule(""/"", ""index"", self.index)\n             app.add_url_rule(""/<test>/"", ""index"", self.index)\n@@ -1907,12 +1906,12 @@ def test_run_server_port(monkeypatch, app):\n \n     # Mocks werkzeug.serving.run_simple method\n     def run_simple_mock(hostname, port, application, *args, **kwargs):\n-        rv[""result""] = ""running on %s:%s ..."" % (hostname, port)\n+        rv[""result""] = f""running on {hostname}:{port} ...""\n \n     monkeypatch.setattr(werkzeug.serving, ""run_simple"", run_simple_mock)\n     hostname, port = ""localhost"", 8000\n     app.run(hostname, port, debug=True)\n-    assert rv[""result""] == ""running on %s:%s ..."" % (hostname, port)\n+    assert rv[""result""] == f""running on {hostname}:{port} ...""\n \n \n @pytest.mark.parametrize(\n'",1.0656370656370657,1.0656370656370657
tests/test_blueprints.py,tests/test_blueprints.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.blueprints\n     ~~~~~~~~~~~~~~~~\n'",1.0495867768595042,1.0495867768595042
tests/test_cli.py,tests/test_cli.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.test_cli\n     ~~~~~~~~~~~~~~\n@@ -8,8 +7,6 @@\n """"""\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n-from __future__ import absolute_import\n-\n import os\n import ssl\n import sys\n@@ -261,7 +258,7 @@ def test_get_version(test_apps, capsys):\n     from werkzeug import __version__ as werkzeug_version\n     from platform import python_version\n \n-    class MockCtx(object):\n+    class MockCtx:\n         resilient_parsing = False\n         color = None\n \n'",1.0476190476190477,1.0476190476190477
tests/test_config.py,tests/test_config.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.test_config\n     ~~~~~~~~~~~~~~~~~\n@@ -65,7 +64,7 @@ def test_config_from_mapping():\n \n \n def test_config_from_class():\n-    class Base(object):\n+    class Base:\n         TEST_KEY = ""foo""\n \n     class Test(Base):\n@@ -186,8 +185,8 @@ def test_from_pyfile_weird_encoding(tmpdir, encoding):\n     f = tmpdir.join(""my_config.py"")\n     f.write_binary(\n         textwrap.dedent(\n-            u""""""\n-    # -*- coding: {0} -*-\n+            """"""\n+    # -*- coding: {} -*-\n     TEST_VALUE = ""föö""\n     """""".format(\n                 encoding\n@@ -197,4 +196,4 @@ def test_from_pyfile_weird_encoding(tmpdir, encoding):\n     app = flask.Flask(__name__)\n     app.config.from_pyfile(str(f))\n     value = app.config[""TEST_VALUE""]\n-    assert value == u""föö""\n+    assert value == ""föö""\n'",1.0,1.0
tests/test_converters.py,tests/test_converters.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -10,7 +10,7 @@ def test_custom_converters(app, client):\n             return value.split("","")\n \n         def to_url(self, value):\n-            base_to_url = super(ListConverter, self).to_url\n+            base_to_url = super().to_url\n             return "","".join(base_to_url(x) for x in value)\n \n     app.url_map.converters[""list""] = ListConverter\n'",1.1428571428571428,1.1428571428571428
tests/test_helpers.py,tests/test_helpers.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.helpers\n     ~~~~~~~~~~~~~~~~~~~~~~~\n@@ -38,7 +37,7 @@ def has_encoding(name):\n         return False\n \n \n-class FakePath(object):\n+class FakePath:\n     """"""Fake object to represent a ``PathLike object``.\n \n     This represents a ``pathlib.Path`` object in python 3.\n@@ -73,9 +72,9 @@ class FixedOffset(datetime.tzinfo):\n         return datetime.timedelta()\n \n \n-class TestJSON(object):\n+class TestJSON:\n     @pytest.mark.parametrize(\n-        ""value"", (1, ""t"", True, False, None, [], [1, 2, 3], {}, {""foo"": u""🐍""})\n+        ""value"", (1, ""t"", True, False, None, [], [1, 2, 3], {}, {""foo"": ""🐍""})\n     )\n     @pytest.mark.parametrize(\n         ""encoding"",\n@@ -126,12 +125,12 @@ class TestJSON(object):\n         assert rv.data == b""foo""\n \n     @pytest.mark.parametrize(\n-        ""test_value,expected"", [(True, \'""\\\\u2603""\'), (False, u\'""\\u2603""\')]\n+        ""test_value,expected"", [(True, \'""\\\\u2603""\'), (False, \'""\\u2603""\')]\n     )\n     def test_json_as_unicode(self, test_value, expected, app, app_ctx):\n \n         app.config[""JSON_AS_ASCII""] = test_value\n-        rv = flask.json.dumps(u""\\N{SNOWMAN}"")\n+        rv = flask.json.dumps(""\\N{SNOWMAN}"")\n         assert rv == expected\n \n     def test_json_dump_to_file(self, app, app_ctx):\n@@ -217,7 +216,7 @@ class TestJSON(object):\n         )\n \n         for i, d in enumerate(test_dates):\n-            url = ""/datetest{0}"".format(i)\n+            url = f""/datetest{i}""\n             app.add_url_rule(url, str(i), lambda val=d: flask.jsonify(x=val))\n             rv = client.get(url)\n             assert rv.mimetype == ""application/json""\n@@ -262,7 +261,7 @@ class TestJSON(object):\n     def test_template_escaping(self, app, req_ctx):\n         render = flask.render_template_string\n         rv = flask.json.htmlsafe_dumps(""</script>"")\n-        assert rv == u\'""\\\\u003c/script\\\\u003e""\'\n+        assert rv == \'""\\\\u003c/script\\\\u003e""\'\n         assert type(rv) is str\n         rv = render(\'{{ ""</script>""|tojson }}\')\n         assert rv == \'""\\\\u003c/script\\\\u003e""\'\n@@ -280,7 +279,7 @@ class TestJSON(object):\n         assert rv == \'<a ng-data=\\\'{""x"": [""foo"", ""bar"", ""baz\\\\u0027""]}\\\'></a>\'\n \n     def test_json_customization(self, app, client):\n-        class X(object):  # noqa: B903, for Python2 compatibility\n+        class X:  # noqa: B903, for Python2 compatibility\n             def __init__(self, val):\n                 self.val = val\n \n@@ -315,7 +314,7 @@ class TestJSON(object):\n         assert rv.data == b\'""<42>""\'\n \n     def test_blueprint_json_customization(self, app, client):\n-        class X(object):  # noqa: B903, for Python2 compatibility\n+        class X:  # noqa: B903, for Python2 compatibility\n             def __init__(self, val):\n                 self.val = val\n \n@@ -368,9 +367,9 @@ class TestJSON(object):\n         def index():\n             return flask.request.args[""foo""]\n \n-        rv = client.get(u""/?foo=정상처리"".encode(""euc-kr""))\n+        rv = client.get(""/?foo=정상처리"".encode(""euc-kr""))\n         assert rv.status_code == 200\n-        assert rv.data == u""정상처리"".encode(""utf-8"")\n+        assert rv.data == ""정상처리"".encode()\n \n     def test_json_key_sorting(self, app, client):\n         app.debug = True\n@@ -443,7 +442,7 @@ class TestJSON(object):\n             assert lines == sorted_by_str\n \n \n-class PyBytesIO(object):\n+class PyBytesIO:\n     def __init__(self, *args, **kwargs):\n         self._io = io.BytesIO(*args, **kwargs)\n \n@@ -451,7 +450,7 @@ class PyBytesIO(object):\n         return getattr(self._io, name)\n \n \n-class TestSendfile(object):\n+class TestSendfile:\n     def test_send_file_regular(self, app, req_ctx):\n         rv = flask.send_file(""static/index.html"")\n         assert rv.direct_passthrough\n@@ -516,7 +515,7 @@ class TestSendfile(object):\n     @pytest.mark.parametrize(\n         ""opener"",\n         [\n-            lambda app: io.StringIO(u""Test""),\n+            lambda app: io.StringIO(""Test""),\n             lambda app: open(os.path.join(app.static_folder, ""index.html"")),\n         ],\n     )\n@@ -673,13 +672,13 @@ class TestSendfile(object):\n         (\n             (""index.html"", ""index.html"", False),\n             (\n-                u""Ñandú／pingüino.txt"",\n+                ""Ñandú／pingüino.txt"",\n                 \'""Nandu/pinguino.txt""\',\n                 ""%C3%91and%C3%BA%EF%BC%8Fping%C3%BCino.txt"",\n             ),\n-            (u""Vögel.txt"", ""Vogel.txt"", ""V%C3%B6gel.txt""),\n+            (""Vögel.txt"", ""Vogel.txt"", ""V%C3%B6gel.txt""),\n             # "":/"" are not safe in filename* value\n-            (u""те:/ст"", \'"":/""\', ""%D1%82%D0%B5%3A%2F%D1%81%D1%82""),\n+            (""те:/ст"", \'"":/""\', ""%D1%82%D0%B5%3A%2F%D1%81%D1%82""),\n         ),\n     )\n     def test_attachment_filename_encoding(self, filename, ascii, utf8):\n@@ -775,7 +774,7 @@ class TestSendfile(object):\n             flask.send_from_directory(""static"", ""bad\\x00"")\n \n \n-class TestUrlFor(object):\n+class TestUrlFor:\n     def test_url_for_with_anchor(self, app, req_ctx):\n         @app.route(""/"")\n         def index():\n@@ -834,7 +833,7 @@ class TestUrlFor(object):\n         assert flask.url_for(""myview"", _method=""POST"") == ""/myview/create""\n \n \n-class TestNoImports(object):\n+class TestNoImports:\n     """"""Test Flasks are created without import.\n \n     Avoiding ``__import__`` helps create Flask instances where there are errors\n@@ -853,7 +852,7 @@ class TestNoImports(object):\n             AssertionError(""Flask(import_name) is importing import_name."")\n \n \n-class TestStreaming(object):\n+class TestStreaming:\n     def test_streaming_with_context(self, app, client):\n         @app.route(""/"")\n         def index():\n@@ -884,7 +883,7 @@ class TestStreaming(object):\n     def test_streaming_with_context_and_custom_close(self, app, client):\n         called = []\n \n-        class Wrapper(object):\n+        class Wrapper:\n             def __init__(self, gen):\n                 self._gen = gen\n \n@@ -927,7 +926,7 @@ class TestStreaming(object):\n         assert rv.data == b""flask""\n \n \n-class TestSafeJoin(object):\n+class TestSafeJoin:\n     def test_safe_join(self):\n         # Valid combinations of *args and expected joined paths.\n         passing = (\n@@ -968,7 +967,7 @@ class TestSafeJoin(object):\n                 print(flask.safe_join(*args))\n \n \n-class TestHelpers(object):\n+class TestHelpers:\n     @pytest.mark.parametrize(\n         ""debug, expected_flag, expected_default_flag"",\n         [\n'",1.1844660194174756,1.1844660194174756
tests/test_instance_config.py,tests/test_instance_config.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.test_instance\n     ~~~~~~~~~~~~~~~~~~~\n'",1.25,1.25
tests/test_json_tag.py,tests/test_json_tag.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n tests.test_json_tag\n ~~~~~~~~~~~~~~~~~~~\n@@ -48,7 +47,7 @@ def test_duplicate_tag():\n \n \n def test_custom_tag():\n-    class Foo(object):  # noqa: B903, for Python2 compatibility\n+    class Foo:  # noqa: B903, for Python2 compatibility\n         def __init__(self, data):\n             self.data = data\n \n'",1.0,1.0
tests/test_logging.py,tests/test_logging.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n tests.test_logging\n ~~~~~~~~~~~~~~~~~~~\n'",1.1111111111111112,1.1111111111111112
tests/test_regression.py,tests/test_regression.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.regression\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~\n@@ -20,7 +19,7 @@ import flask\n _gc_lock = threading.Lock()\n \n \n-class assert_no_leak(object):\n+class assert_no_leak:\n     def __enter__(self):\n         gc.disable()\n         _gc_lock.acquire()\n'",1.2,1.2
tests/test_reqctx.py,tests/test_reqctx.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.reqctx\n     ~~~~~~~~~~~~\n@@ -150,7 +149,7 @@ def test_manual_context_binding(app):\n \n \n @pytest.mark.skipif(greenlet is None, reason=""greenlet not installed"")\n-class TestGreenletContextCopying(object):\n+class TestGreenletContextCopying:\n     def test_greenlet_context_copying(self, app, client):\n         greenlets = []\n \n@@ -239,7 +238,7 @@ def test_session_dynamic_cookie_name():\n             if flask.request.url.endswith(""dynamic_cookie""):\n                 return ""dynamic_cookie_name""\n             else:\n-                return super(PathAwareSessionInterface, self).get_cookie_name(app)\n+                return super().get_cookie_name(app)\n \n     class CustomFlask(flask.Flask):\n         session_interface = PathAwareSessionInterface()\n@@ -291,7 +290,7 @@ def test_bad_environ_raises_bad_request():\n     environ = builder.get_environ()\n \n     # use a non-printable character in the Host - this is key to this test\n-    environ[""HTTP_HOST""] = u""\\x8a""\n+    environ[""HTTP_HOST""] = ""\\x8a""\n \n     with app.request_context(environ):\n         response = app.full_dispatch_request()\n@@ -311,7 +310,7 @@ def test_environ_for_valid_idna_completes():\n     environ = builder.get_environ()\n \n     # these characters are all IDNA-compatible\n-    environ[""HTTP_HOST""] = u""ąśźäüжŠßя.com""\n+    environ[""HTTP_HOST""] = ""ąśźäüжŠßя.com""\n \n     with app.request_context(environ):\n         response = app.full_dispatch_request()\n'",1.1142857142857143,1.1142857142857143
tests/test_signals.py,tests/test_signals.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.signals\n     ~~~~~~~~~~~~~~~~~~~~~~~\n'",1.28,1.28
tests/test_subclassing.py,tests/test_subclassing.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.subclassing\n     ~~~~~~~~~~~~~~~~~\n'",1.0,1.0
tests/test_templating.py,tests/test_templating.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.templating\n     ~~~~~~~~~~~~~~~~\n@@ -417,14 +416,14 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n             text = str(record.msg)\n             assert \'1: trying loader of application ""blueprintapp""\' in text\n             assert (\n-                \'2: trying loader of blueprint ""admin"" \' ""(blueprintapp.apps.admin)""\n+                \'2: trying loader of blueprint ""admin"" (blueprintapp.apps.admin)\'\n             ) in text\n             assert (\n-                \'trying loader of blueprint ""frontend"" \' ""(blueprintapp.apps.frontend)""\n+                \'trying loader of blueprint ""frontend"" (blueprintapp.apps.frontend)\'\n             ) in text\n             assert ""Error: the template could not be found"" in text\n             assert (\n-                ""looked up from an endpoint that belongs to "" \'the blueprint ""frontend""\'\n+                \'looked up from an endpoint that belongs to the blueprint ""frontend""\'\n             ) in text\n             assert ""See https://flask.palletsprojects.com/blueprints/#templates"" in text\n \n'",1.0,1.0
tests/test_testing.py,tests/test_testing.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.testing\n     ~~~~~~~~~~~~~\n@@ -122,8 +121,8 @@ def test_path_is_url(app):\n def test_environbuilder_json_dumps(app):\n     """"""EnvironBuilder.json_dumps() takes settings from the app.""""""\n     app.config[""JSON_AS_ASCII""] = False\n-    eb = EnvironBuilder(app, json=u""\\u20ac"")\n-    assert eb.input_stream.read().decode(""utf8"") == u\'""\\u20ac""\'\n+    eb = EnvironBuilder(app, json=""\\u20ac"")\n+    assert eb.input_stream.read().decode(""utf8"") == \'""\\u20ac""\'\n \n \n def test_blueprint_with_subdomain():\n@@ -324,7 +323,7 @@ def test_client_json_no_app_context(app, client):\n     def hello():\n         return ""Hello, {}!"".format(flask.request.json[""name""])\n \n-    class Namespace(object):\n+    class Namespace:\n         count = 0\n \n         def add(self, app):\n@@ -402,7 +401,7 @@ def test_cli_invoke(app):\n \n \n def test_cli_custom_obj(app):\n-    class NS(object):\n+    class NS:\n         called = False\n \n     def create_app():\n'",1.0408163265306123,1.0408163265306123
tests/test_user_error_handler.py,tests/test_user_error_handler.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n tests.test_user_error_handler\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n@@ -208,7 +207,7 @@ def test_default_error_handler():\n     assert c.get(""/slash"", follow_redirects=True).data == b""slash""\n \n \n-class TestGenericHandlers(object):\n+class TestGenericHandlers:\n     """"""Test how very generic handlers are dispatched to.""""""\n \n     class Custom(Exception):\n'",1.0454545454545454,1.0454545454545454
tests/test_views.py,tests/test_views.py,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,57d628ca74513480908a63a6b66c1c8b1af896e8,'apply pyupgrade',"'@@ -1,4 +1,3 @@\n-# -*- coding: utf-8 -*-\n """"""\n     tests.views\n     ~~~~~~~~~~~\n'",1.0,1.0
docs/api.rst,docs/api.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"""@@ -58,12 +58,12 @@ Incoming Request Data\n       the following:\n \n       ============= ======================================================\n-      `path`        ``u'/π/page.html'``\n-      `full_path`   ``u'/π/page.html?x=y'``\n-      `script_root` ``u'/myapplication'``\n-      `base_url`    ``u'http://www.example.com/myapplication/π/page.html'``\n-      `url`         ``u'http://www.example.com/myapplication/π/page.html?x=y'``\n-      `url_root`    ``u'http://www.example.com/myapplication/'``\n+      `path`        ``'/π/page.html'``\n+      `full_path`   ``'/π/page.html?x=y'``\n+      `script_root` ``'/myapplication'``\n+      `base_url`    ``'http://www.example.com/myapplication/π/page.html'``\n+      `url`         ``'http://www.example.com/myapplication/π/page.html?x=y'``\n+      `url_root`    ``'http://www.example.com/myapplication/'``\n       ============= ======================================================\n \n \n""",1.1875,1.1875
docs/config.rst,docs/config.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -596,8 +596,8 @@ your configuration classes::\n         DB_SERVER = \'192.168.1.56\'\n \n         @property\n-        def DATABASE_URI(self):         # Note: all caps\n-            return \'mysql://user@{}/foo\'.format(self.DB_SERVER)\n+        def DATABASE_URI(self):  # Note: all caps\n+            return f""mysql://user@{self.DB_SERVER}/foo""\n \n     class ProductionConfig(Config):\n         """"""Uses production database server.""""""\n'",1.0,1.0
docs/patterns/flashing.rst,docs/patterns/flashing.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"""@@ -103,7 +103,7 @@ error messages could be displayed with a red background.\n To flash a message with a different category, just use the second argument\n to the :func:`~flask.flash` function::\n \n-    flash(u'Invalid password provided', 'error')\n+    flash('Invalid password provided', 'error')\n \n Inside the template you then have to tell the\n :func:`~flask.get_flashed_messages` function to also return the\n""",2.5,2.5
docs/patterns/lazyloading.rst,docs/patterns/lazyloading.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -93,7 +93,7 @@ write this by having a function that calls into\n name and a dot, and by wrapping `view_func` in a `LazyView` as needed.  ::\n \n     def url(import_name, url_rules=[], **options):\n-        view = LazyView(\'yourapplication.\' + import_name)\n+        view = LazyView(f""yourapplication.{import_name}"")\n         for url_rule in url_rules:\n             app.add_url_rule(url_rule, view_func=view, **options)\n \n'",0,0
docs/patterns/requestchecksum.rst,docs/patterns/requestchecksum.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -52,4 +52,4 @@ Example usage::\n         files = request.files\n         # At this point the hash is fully constructed.\n         checksum = hash.hexdigest()\n-        return \'Hash was: %s\' % checksum\n+        return f""Hash was: {checksum}""\n'",1.0,1.0
docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"""@@ -104,9 +104,9 @@ You can insert entries into the database like this:\n Querying is simple as well:\n \n >>> User.query.all()\n-[<User u'admin'>]\n+[<User 'admin'>]\n >>> User.query.filter(User.name == 'admin').first()\n-<User u'admin'>\n+<User 'admin'>\n \n .. _SQLAlchemy: https://www.sqlalchemy.org/\n .. _declarative:\n@@ -200,19 +200,19 @@ SQLAlchemy will automatically commit for us.\n To query your database, you use the engine directly or use a connection:\n \n >>> users.select(users.c.id == 1).execute().first()\n-(1, u'admin', u'admin@localhost')\n+(1, 'admin', 'admin@localhost')\n \n These results are also dict-like tuples:\n \n >>> r = users.select(users.c.id == 1).execute().first()\n >>> r['name']\n-u'admin'\n+'admin'\n \n You can also pass strings of SQL statements to the\n :meth:`~sqlalchemy.engine.base.Connection.execute` method:\n \n >>> engine.execute('select * from users where id = :1', [1]).first()\n-(1, u'admin', u'admin@localhost')\n+(1, 'admin', 'admin@localhost')\n \n For more information about SQLAlchemy, head over to the\n `website <https://www.sqlalchemy.org/>`_.\n""",1.0,1.0
docs/patterns/streaming.rst,docs/patterns/streaming.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -21,7 +21,7 @@ data and to then invoke that function and pass it to a response object::\n     def generate_large_csv():\n         def generate():\n             for row in iter_all_rows():\n-                yield \',\'.join(row) + \'\\n\'\n+                yield f""{\',\'.join(row)}\\n""\n         return Response(generate(), mimetype=\'text/csv\')\n \n Each ``yield`` expression is directly sent to the browser.  Note though\n'",1.25,1.25
docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -142,8 +142,7 @@ Here is the code for that decorator::\n             def decorated_function(*args, **kwargs):\n                 template_name = template\n                 if template_name is None:\n-                    template_name = request.endpoint \\\n-                        .replace(\'.\', \'/\') + \'.html\'\n+                    template_name = f""\'{request.endpoint.replace(\'.\', \'/\')}.html\'""\n                 ctx = f(*args, **kwargs)\n                 if ctx is None:\n                     ctx = {}\n'",1.3846153846153846,1.3846153846153846
docs/quickstart.rst,docs/quickstart.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -447,11 +447,11 @@ Here is a basic introduction to how the :class:`~markupsafe.Markup` class works:\n \n     >>> from markupsafe import Markup\n     >>> Markup(\'<strong>Hello %s!</strong>\') % \'<blink>hacker</blink>\'\n-    Markup(u\'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>\')\n+    Markup(\'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>\')\n     >>> Markup.escape(\'<blink>hacker</blink>\')\n-    Markup(u\'&lt;blink&gt;hacker&lt;/blink&gt;\')\n+    Markup(\'&lt;blink&gt;hacker&lt;/blink&gt;\')\n     >>> Markup(\'<em>Marked up</em> &raquo; HTML\').striptags()\n-    u\'Marked up \\xbb HTML\'\n+    \'Marked up \\xbb HTML\'\n \n .. versionchanged:: 0.5\n \n@@ -609,8 +609,8 @@ Werkzeug provides for you::\n     @app.route(\'/upload\', methods=[\'GET\', \'POST\'])\n     def upload_file():\n         if request.method == \'POST\':\n-            f = request.files[\'the_file\']\n-            f.save(\'/var/www/uploads/\' + secure_filename(f.filename))\n+            file = request.files[\'the_file\']\n+            file.save(f""/var/www/uploads/{secure_filename(f.filename)}"")\n         ...\n \n For some better examples, checkout the :ref:`uploading-files` pattern.\n'",1.2666666666666666,1.2666666666666666
docs/templating.rst,docs/templating.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -222,8 +222,8 @@ functions)::\n \n     @app.context_processor\n     def utility_processor():\n-        def format_price(amount, currency=u\'€\'):\n-            return u\'{0:.2f}{1}\'.format(amount, currency)\n+        def format_price(amount, currency=""€""):\n+            return f""{amount:.2f}{currency}""\n         return dict(format_price=format_price)\n \n The context processor above makes the `format_price` function available to all\n'",1.0,1.0
docs/testing.rst,docs/testing.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -165,16 +165,19 @@ invalid credentials.  Add this new test function::\n     def test_login_logout(client):\n         """"""Make sure login and logout works.""""""\n \n-        rv = login(client, flaskr.app.config[\'USERNAME\'], flaskr.app.config[\'PASSWORD\'])\n+        username = flaskr.app.config[""USERNAME""]\n+        password = flaskr.app.config[""PASSWORD""]\n+\n+        rv = login(client, username, password)\n         assert b\'You were logged in\' in rv.data\n \n         rv = logout(client)\n         assert b\'You were logged out\' in rv.data\n \n-        rv = login(client, flaskr.app.config[\'USERNAME\'] + \'x\', flaskr.app.config[\'PASSWORD\'])\n+        rv = login(client, f""{username}x"", password)\n         assert b\'Invalid username\' in rv.data\n \n-        rv = login(client, flaskr.app.config[\'USERNAME\'], flaskr.app.config[\'PASSWORD\'] + \'x\')\n+        rv = login(client, username, f\'{password}x\')\n         assert b\'Invalid password\' in rv.data\n \n Test Adding Messages\n'",0,0
docs/tutorial/blog.rst,docs/tutorial/blog.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -207,7 +207,7 @@ it from each view.\n         ).fetchone()\n \n         if post is None:\n-            abort(404, ""Post id {0} doesn\'t exist."".format(id))\n+            abort(404, f""Post id {id} doesn\'t exist."")\n \n         if check_author and post[\'author_id\'] != g.user[\'id\']:\n             abort(403)\n'",0,0
docs/tutorial/views.rst,docs/tutorial/views.rst,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -94,7 +94,7 @@ write templates to generate the HTML form.\n             elif db.execute(\n                 \'SELECT id FROM user WHERE username = ?\', (username,)\n             ).fetchone() is not None:\n-                error = \'User {} is already registered.\'.format(username)\n+                error = f""User {username} is already registered.""\n \n             if error is None:\n                 db.execute(\n'",1.5,1.5
src/flask/app.py,src/flask/app.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -585,7 +585,7 @@ class Flask(_PackageBoundObject):\n                 bool(static_host) == host_matching\n             ), ""Invalid static_host/host_matching combination""\n             self.add_url_rule(\n-                self.static_url_path + ""/<path:filename>"",\n+                f""{self.static_url_path}/<path:filename>"",\n                 endpoint=""static"",\n                 host=static_host,\n                 view_func=self.send_static_file,\n@@ -711,7 +711,7 @@ class Flask(_PackageBoundObject):\n         prefix, package_path = find_package(self.import_name)\n         if prefix is None:\n             return os.path.join(package_path, ""instance"")\n-        return os.path.join(prefix, ""var"", self.name + ""-instance"")\n+        return os.path.join(prefix, ""var"", f""{self.name}-instance"")\n \n     def open_instance_resource(self, resource, mode=""rb""):\n         """"""Opens a resource from the application\'s instance folder\n@@ -1084,10 +1084,11 @@ class Flask(_PackageBoundObject):\n \n         if blueprint.name in self.blueprints:\n             assert self.blueprints[blueprint.name] is blueprint, (\n-                ""A name collision occurred between blueprints %r and %r. Both""\n-                \' share the same name ""%s"". Blueprints that are created on the\'\n-                "" fly need unique names.""\n-                % (blueprint, self.blueprints[blueprint.name], blueprint.name)\n+                ""A name collision occurred between blueprints""\n+                f"" {blueprint!r} and {self.blueprints[blueprint.name]!r}.""\n+                f"" Both share the same name {blueprint.name!r}.""\n+                f"" Blueprints that are created on the fly need unique""\n+                f"" names.""\n             )\n         else:\n             self.blueprints[blueprint.name] = blueprint\n@@ -1209,8 +1210,8 @@ class Flask(_PackageBoundObject):\n             old_func = self.view_functions.get(endpoint)\n             if old_func is not None and old_func != view_func:\n                 raise AssertionError(\n-                    ""View function mapping is overwriting an ""\n-                    ""existing endpoint function: %s"" % endpoint\n+                    ""View function mapping is overwriting an existing""\n+                    f"" endpoint function: {endpoint}""\n                 )\n             self.view_functions[endpoint] = view_func\n \n@@ -1341,17 +1342,18 @@ class Flask(_PackageBoundObject):\n         """"""\n         if isinstance(code_or_exception, HTTPException):  # old broken behavior\n             raise ValueError(\n-                ""Tried to register a handler for an exception instance {!r}.""\n-                "" Handlers can only be registered for exception classes or""\n-                "" HTTP error codes."".format(code_or_exception)\n+                ""Tried to register a handler for an exception instance""\n+                f"" {code_or_exception!r}. Handlers can only be""\n+                "" registered for exception classes or HTTP error codes.""\n             )\n \n         try:\n             exc_class, code = self._get_exc_class_and_code(code_or_exception)\n         except KeyError:\n             raise KeyError(\n-                ""\'{}\' is not a recognized HTTP error code. Use a subclass of""\n-                "" HTTPException with that code instead."".format(code_or_exception)\n+                f""\'{code_or_exception}\' is not a recognized HTTP error""\n+                "" code. Use a subclass of HTTPException with that code""\n+                "" instead.""\n             )\n \n         handlers = self.error_handler_spec.setdefault(key, {}).setdefault(code, {})\n@@ -1730,7 +1732,7 @@ class Flask(_PackageBoundObject):\n                 # message, add it in manually.\n                 # TODO: clean up once Werkzeug >= 0.15.5 is required\n                 if e.args[0] not in e.get_description():\n-                    e.description = ""KeyError: \'{}\'"".format(*e.args)\n+                    e.description = f""KeyError: {e.args[0]!r}""\n             elif not hasattr(BadRequestKeyError, ""show_exception""):\n                 e.args = ()\n \n@@ -2006,9 +2008,9 @@ class Flask(_PackageBoundObject):\n         # the body must not be None\n         if rv is None:\n             raise TypeError(\n-                \'The view function for ""{}"" did not return a valid response. The\'\n-                "" function either returned None or ended without a return""\n-                "" statement."".format(request.endpoint)\n+                f""The view function for {request.endpoint!r} did not""\n+                "" return a valid response. The function either returned""\n+                "" None or ended without a return statement.""\n             )\n \n         # make sure the body is an instance of the response class\n@@ -2028,17 +2030,17 @@ class Flask(_PackageBoundObject):\n                     rv = self.response_class.force_type(rv, request.environ)\n                 except TypeError as e:\n                     raise TypeError(\n-                        ""{e}\\nThe view function did not return a valid""\n-                        "" response. The return type must be a string, dict, tuple,""\n-                        "" Response instance, or WSGI callable, but it was a""\n-                        "" {rv.__class__.__name__}."".format(e=e, rv=rv)\n+                        f""{e}\\nThe view function did not return a valid""\n+                        "" response. The return type must be a string,""\n+                        "" dict, tuple, Response instance, or WSGI""\n+                        f"" callable, but it was a {type(rv).__name__}.""\n                     ).with_traceback(sys.exc_info()[2])\n             else:\n                 raise TypeError(\n                     ""The view function did not return a valid""\n-                    "" response. The return type must be a string, dict, tuple,""\n-                    "" Response instance, or WSGI callable, but it was a""\n-                    "" {rv.__class__.__name__}."".format(rv=rv)\n+                    "" response. The return type must be a string,""\n+                    "" dict, tuple, Response instance, or WSGI""\n+                    f"" callable, but it was a {type(rv).__name__}.""\n                 )\n \n         # prefer the status if it was provided\n@@ -2375,4 +2377,4 @@ class Flask(_PackageBoundObject):\n         return self.wsgi_app(environ, start_response)\n \n     def __repr__(self):\n-        return f""<{self.__class__.__name__} {self.name!r}>""\n+        return f""<{type(self).__name__} {self.name!r}>""\n'",2.682926829268293,2.682926829268293
src/flask/blueprints.py,src/flask/blueprints.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -246,7 +246,7 @@ class Blueprint(_PackageBoundObject):\n \n         if self.has_static_folder:\n             state.add_url_rule(\n-                self.static_url_path + ""/<path:filename>"",\n+                f""{self.static_url_path}/<path:filename>"",\n                 view_func=self.send_static_file,\n                 endpoint=""static"",\n             )\n'",1.4772727272727273,1.4772727272727273
src/flask/cli.py,src/flask/cli.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -62,13 +62,13 @@ def find_best_app(script_info, module):\n         return matches[0]\n     elif len(matches) > 1:\n         raise NoAppException(\n-            \'Detected multiple Flask applications in module ""{module}"". Use \'\n-            \'""FLASK_APP={module}:name"" to specify the correct \'\n-            ""one."".format(module=module.__name__)\n+            ""Detected multiple Flask applications in module""\n+            f"" {module.__name__!r}. Use \'FLASK_APP={module.__name__}:name\'""\n+            f"" to specify the correct one.""\n         )\n \n     # Search for app factory functions.\n-    for attr_name in (""create_app"", ""make_app""):\n+    for attr_name in {""create_app"", ""make_app""}:\n         app_factory = getattr(module, attr_name, None)\n \n         if inspect.isfunction(app_factory):\n@@ -81,15 +81,16 @@ def find_best_app(script_info, module):\n                 if not _called_with_wrong_args(app_factory):\n                     raise\n                 raise NoAppException(\n-                    \'Detected factory ""{factory}"" in module ""{module}"", but \'\n-                    ""could not call it without arguments. Use ""\n-                    ""\\""FLASK_APP=\'{module}:{factory}(args)\'\\"" to specify ""\n-                    ""arguments."".format(factory=attr_name, module=module.__name__)\n+                    f""Detected factory {attr_name!r} in module {module.__name__!r},""\n+                    "" but could not call it without arguments. Use""\n+                    f"" \\""FLASK_APP=\'{module.__name__}:{attr_name}(args)\'\\""""\n+                    "" to specify arguments.""\n                 )\n \n     raise NoAppException(\n-        \'Failed to find Flask application or factory in module ""{module}"". \'\n-        \'Use ""FLASK_APP={module}:name to specify one.\'.format(module=module.__name__)\n+        ""Failed to find Flask application or factory in module""\n+        f"" {module.__name__!r}. Use \'FLASK_APP={module.__name__}:name\'""\n+        "" to specify one.""\n     )\n \n \n@@ -150,8 +151,7 @@ def find_app_by_string(script_info, module, app_name):\n \n     if not match:\n         raise NoAppException(\n-            \'""{name}"" is not a valid variable name or function \'\n-            ""expression."".format(name=app_name)\n+            f""{app_name!r} is not a valid variable name or function expression.""\n         )\n \n     name, args = match.groups()\n@@ -165,11 +165,8 @@ def find_app_by_string(script_info, module, app_name):\n         if args:\n             try:\n                 args = ast.literal_eval(f""({args},)"")\n-            except (ValueError, SyntaxError) as e:\n-                raise NoAppException(\n-                    ""Could not parse the arguments in ""\n-                    \'""{app_name}"".\'.format(e=e, app_name=app_name)\n-                )\n+            except (ValueError, SyntaxError):\n+                raise NoAppException(f""Could not parse the arguments in {app_name!r}."")\n         else:\n             args = ()\n \n@@ -180,10 +177,9 @@ def find_app_by_string(script_info, module, app_name):\n                 raise\n \n             raise NoAppException(\n-                \'{e}\\nThe factory ""{app_name}"" in module ""{module}"" could not \'\n-                ""be called with the specified arguments."".format(\n-                    e=e, app_name=app_name, module=module.__name__\n-                )\n+                f""{e}\\nThe factory {app_name!r} in module""\n+                f"" {module.__name__!r} could not be called with the""\n+                "" specified arguments.""\n             )\n     else:\n         app = attr\n@@ -192,8 +188,8 @@ def find_app_by_string(script_info, module, app_name):\n         return app\n \n     raise NoAppException(\n-        ""A valid Flask application was not obtained from ""\n-        \'""{module}:{app_name}"".\'.format(module=module.__name__, app_name=app_name)\n+        ""A valid Flask application was not obtained from""\n+        f"" \'{module.__name__}:{app_name}\'.""\n     )\n \n \n@@ -236,11 +232,11 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n         # Determine this by checking whether the trace has a depth > 1.\n         if sys.exc_info()[2].tb_next:\n             raise NoAppException(\n-                \'While importing ""{name}"", an ImportError was raised:\'\n-                ""\\n\\n{tb}"".format(name=module_name, tb=traceback.format_exc())\n+                f""While importing {module_name!r}, an ImportError was""\n+                f"" raised:\\n\\n{traceback.format_exc()}""\n             )\n         elif raise_if_not_found:\n-            raise NoAppException(f\'Could not import ""{module_name}"".\')\n+            raise NoAppException(f""Could not import {module_name!r}."")\n         else:\n             return\n \n@@ -259,14 +255,10 @@ def get_version(ctx, param, value):\n     import werkzeug\n     from . import __version__\n \n-    message = ""Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s""\n     click.echo(\n-        message\n-        % {\n-            ""python"": platform.python_version(),\n-            ""flask"": __version__,\n-            ""werkzeug"": werkzeug.__version__,\n-        },\n+        f""Python {platform.python_version()}\\n""\n+        f""Flask {__version__}\\n""\n+        f""Werkzeug {werkzeug.__version__}"",\n         color=ctx.color,\n     )\n     ctx.exit()\n@@ -659,7 +651,7 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n         return\n \n     if app_import_path is not None:\n-        message = f\' * Serving Flask app ""{app_import_path}""\'\n+        message = f"" * Serving Flask app {app_import_path!r}""\n \n         if not eager_loading:\n             message += "" (lazy loading)""\n@@ -670,14 +662,14 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n \n     if env == ""production"":\n         click.secho(\n-            ""   WARNING: This is a development server. ""\n-            ""Do not use it in a production deployment."",\n+            ""   WARNING: This is a development server. Do not use it in""\n+            "" a production deployment."",\n             fg=""red"",\n         )\n         click.secho(""   Use a production WSGI server instead."", dim=True)\n \n     if debug is not None:\n-        click.echo("" * Debug mode: {}"".format(""on"" if debug else ""off""))\n+        click.echo(f"" * Debug mode: {\'on\' if debug else \'off\'}"")\n \n \n class CertParamType(click.ParamType):\n@@ -809,7 +801,7 @@ class SeparatedPathType(click.Path):\n     type=SeparatedPathType(),\n     help=(\n         ""Extra files that trigger a reload on change. Multiple paths""\n-        "" are separated by \'{}\'."".format(os.path.pathsep)\n+        f"" are separated by {os.path.pathsep!r}.""\n     ),\n )\n @pass_script_info\n@@ -863,8 +855,10 @@ def shell_command():\n     from .globals import _app_ctx_stack\n \n     app = _app_ctx_stack.top.app\n-    banner = ""Python {} on {}\\nApp: {} [{}]\\nInstance: {}"".format(\n-        sys.version, sys.platform, app.import_name, app.env, app.instance_path,\n+    banner = (\n+        f""Python {sys.version} on {sys.platform}\\n""\n+        f""App: {app.import_name} [{app.env}]\\n""\n+        f""Instance: {app.instance_path}""\n     )\n     ctx = {}\n \n'",4.111111111111111,4.083333333333333
src/flask/config.py,src/flask/config.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -98,10 +98,10 @@ class Config(dict):\n             if silent:\n                 return False\n             raise RuntimeError(\n-                ""The environment variable %r is not set ""\n-                ""and as such configuration could not be ""\n-                ""loaded.  Set this variable and make it ""\n-                ""point to a configuration file"" % variable_name\n+                f""The environment variable {variable_name!r} is not set""\n+                "" and as such configuration could not be loaded. Set""\n+                "" this variable and make it point to a configuration""\n+                "" file""\n             )\n         return self.from_pyfile(rv, silent=silent)\n \n@@ -128,7 +128,7 @@ class Config(dict):\n         except OSError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                 return False\n-            e.strerror = ""Unable to load configuration file (%s)"" % e.strerror\n+            e.strerror = f""Unable to load configuration file ({e.strerror})""\n             raise\n         self.from_object(d)\n         return True\n@@ -200,7 +200,7 @@ class Config(dict):\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                 return False\n \n-            e.strerror = ""Unable to load configuration file (%s)"" % e.strerror\n+            e.strerror = f""Unable to load configuration file ({e.strerror})""\n             raise\n \n         return self.from_mapping(obj)\n@@ -219,7 +219,7 @@ class Config(dict):\n                 mappings.append(mapping[0])\n         elif len(mapping) > 1:\n             raise TypeError(\n-                ""expected at most 1 positional argument, got %d"" % len(mapping)\n+                f""expected at most 1 positional argument, got {len(mapping)}""\n             )\n         mappings.append(kwargs.items())\n         for mapping in mappings:\n@@ -270,4 +270,4 @@ class Config(dict):\n         return rv\n \n     def __repr__(self):\n-        return ""<{} {}>"".format(self.__class__.__name__, dict.__repr__(self))\n+        return f""<{type(self).__name__} {dict.__repr__(self)}>""\n'",3.1818181818181817,3.1818181818181817
src/flask/ctx.py,src/flask/ctx.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -88,7 +88,7 @@ class _AppCtxGlobals:\n     def __repr__(self):\n         top = _app_ctx_stack.top\n         if top is not None:\n-            return ""<flask.g of %r>"" % top.app.name\n+            return f""<flask.g of {top.app.name!r}>""\n         return object.__repr__(self)\n \n \n@@ -445,9 +445,7 @@ class RequestContext:\n         self.auto_pop(exc_value)\n \n     def __repr__(self):\n-        return ""<{} \'{}\' [{}] of {}>"".format(\n-            self.__class__.__name__,\n-            self.request.url,\n-            self.request.method,\n-            self.app.name,\n+        return (\n+            f""<{type(self).__name__} {self.request.url!r}""\n+            f"" [{self.request.method}] of {self.app.name}>""\n         )\n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -29,17 +29,18 @@ class DebugFilesKeyError(KeyError, AssertionError):\n     def __init__(self, request, key):\n         form_matches = request.form.getlist(key)\n         buf = [\n-            \'You tried to access the file ""%s"" in the request.files \'\n-            ""dictionary but it does not exist.  The mimetype for the request ""\n-            \'is ""%s"" instead of ""multipart/form-data"" which means that no \'\n-            ""file contents were transmitted.  To fix this error you should ""\n-            \'provide enctype=""multipart/form-data"" in your form.\'\n-            % (key, request.mimetype)\n+            f""You tried to access the file {key!r} in the request.files""\n+            "" dictionary but it does not exist. The mimetype for the""\n+            f"" request is {request.mimetype!r} instead of""\n+            "" \'multipart/form-data\' which means that no file contents""\n+            "" were transmitted. To fix this error you should provide""\n+            \' enctype=""multipart/form-data"" in your form.\'\n         ]\n         if form_matches:\n+            names = "", "".join(repr(x) for x in form_matches)\n             buf.append(\n                 ""\\n\\nThe browser instead transmitted some file names. ""\n-                ""This was submitted: %s"" % "", "".join(\'""%s""\' % x for x in form_matches)\n+                f""This was submitted: {names}""\n             )\n         self.msg = """".join(buf)\n \n@@ -56,24 +57,24 @@ class FormDataRoutingRedirect(AssertionError):\n     def __init__(self, request):\n         exc = request.routing_exception\n         buf = [\n-            ""A request was sent to this URL (%s) but a redirect was ""\n-            \'issued automatically by the routing system to ""%s"".\'\n-            % (request.url, exc.new_url)\n+            f""A request was sent to this URL ({request.url}) but a""\n+            "" redirect was issued automatically by the routing system""\n+            f"" to {exc.new_url!r}.""\n         ]\n \n         # In case just a slash was appended we can be extra helpful\n-        if request.base_url + ""/"" == exc.new_url.split(""?"")[0]:\n+        if f""{request.base_url}/"" == exc.new_url.split(""?"")[0]:\n             buf.append(\n-                ""  The URL was defined with a trailing slash so ""\n-                ""Flask will automatically redirect to the URL ""\n-                ""with the trailing slash if it was accessed ""\n-                ""without one.""\n+                ""  The URL was defined with a trailing slash so Flask""\n+                "" will automatically redirect to the URL with the""\n+                "" trailing slash if it was accessed without one.""\n             )\n \n         buf.append(\n-            ""  Make sure to directly send your %s-request to this URL ""\n-            ""since we can\'t make browsers or HTTP clients redirect ""\n-            ""with form data reliably or without user interaction."" % request.method\n+            ""  Make sure to directly send your""\n+            f"" {request.method}-request to this URL since we can\'t make""\n+            "" browsers or HTTP clients redirect with form data reliably""\n+            "" or without user interaction.""\n         )\n         buf.append(""\\n\\nNote: this exception is only raised in debug mode"")\n         AssertionError.__init__(self, """".join(buf).encode(""utf-8""))\n@@ -101,16 +102,16 @@ def attach_enctype_error_multidict(request):\n \n \n def _dump_loader_info(loader):\n-    yield ""class: {}.{}"".format(type(loader).__module__, type(loader).__name__)\n+    yield f""class: {type(loader).__module__}.{type(loader).__name__}""\n     for key, value in sorted(loader.__dict__.items()):\n         if key.startswith(""_""):\n             continue\n         if isinstance(value, (tuple, list)):\n             if not all(isinstance(x, str) for x in value):\n                 continue\n-            yield ""%s:"" % key\n+            yield f""{key}:""\n             for item in value:\n-                yield ""  - %s"" % item\n+                yield f""  - {item}""\n             continue\n         elif not isinstance(value, (str, int, float, bool)):\n             continue\n@@ -119,7 +120,7 @@ def _dump_loader_info(loader):\n \n def explain_template_loading_attempts(app, template, attempts):\n     """"""This should help developers understand what failed""""""\n-    info = [\'Locating template ""%s"":\' % template]\n+    info = [f""Locating template {template!r}:""]\n     total_found = 0\n     blueprint = None\n     reqctx = _request_ctx_stack.top\n@@ -128,23 +129,23 @@ def explain_template_loading_attempts(app, template, attempts):\n \n     for idx, (loader, srcobj, triple) in enumerate(attempts):\n         if isinstance(srcobj, Flask):\n-            src_info = \'application ""%s""\' % srcobj.import_name\n+            src_info = f""application {srcobj.import_name!r}""\n         elif isinstance(srcobj, Blueprint):\n-            src_info = f\'blueprint ""{srcobj.name}"" ({srcobj.import_name})\'\n+            src_info = f""blueprint {srcobj.name!r} ({srcobj.import_name})""\n         else:\n             src_info = repr(srcobj)\n \n-        info.append(""% 5d: trying loader of %s"" % (idx + 1, src_info))\n+        info.append(f""{idx + 1:5}: trying loader of {src_info}"")\n \n         for line in _dump_loader_info(loader):\n-            info.append(""       %s"" % line)\n+            info.append(f""       {line}"")\n \n         if triple is None:\n             detail = ""no match""\n         else:\n-            detail = ""found (%r)"" % (triple[1] or ""<string>"")\n+            detail = f""found ({triple[1] or \'<string>\'!r})""\n             total_found += 1\n-        info.append(""       -> %s"" % detail)\n+        info.append(f""       -> {detail}"")\n \n     seems_fishy = False\n     if total_found == 0:\n@@ -156,8 +157,8 @@ def explain_template_loading_attempts(app, template, attempts):\n \n     if blueprint is not None and seems_fishy:\n         info.append(\n-            ""  The template was looked up from an endpoint that ""\n-            \'belongs to the blueprint ""%s"".\' % blueprint\n+            ""  The template was looked up from an endpoint that belongs""\n+            f"" to the blueprint {blueprint!r}.""\n         )\n         info.append(""  Maybe you did not place a template in the right folder?"")\n         info.append(""  See https://flask.palletsprojects.com/blueprints/#templates"")\n@@ -169,11 +170,10 @@ def explain_ignored_app_run():\n     if os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true"":\n         warn(\n             Warning(\n-                ""Silently ignoring app.run() because the ""\n-                ""application is run from the flask command line ""\n-                ""executable.  Consider putting app.run() behind an ""\n-                \'if __name__ == ""__main__"" guard to silence this \'\n-                ""warning.""\n+                ""Silently ignoring app.run() because the application is""\n+                "" run from the flask command line executable. Consider""\n+                \' putting app.run() behind an if __name__ == ""__main__""\'\n+                "" guard to silence this warning.""\n             ),\n             stacklevel=3,\n         )\n'",4.125,4.0
src/flask/helpers.py,src/flask/helpers.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -311,7 +311,7 @@ def url_for(endpoint, **values):\n \n         if endpoint[:1] == ""."":\n             if blueprint_name is not None:\n-                endpoint = blueprint_name + endpoint\n+                endpoint = f""{blueprint_name}{endpoint}""\n             else:\n                 endpoint = endpoint[1:]\n \n@@ -364,7 +364,7 @@ def url_for(endpoint, **values):\n         return appctx.app.handle_url_build_error(error, endpoint, values)\n \n     if anchor is not None:\n-        rv += ""#"" + url_quote(anchor)\n+        rv += f""#{url_quote(anchor)}""\n     return rv\n \n \n@@ -608,11 +608,12 @@ def send_file(\n         try:\n             attachment_filename = attachment_filename.encode(""ascii"")\n         except UnicodeEncodeError:\n+            quoted = url_quote(attachment_filename, safe="""")\n             filenames = {\n                 ""filename"": unicodedata.normalize(""NFKD"", attachment_filename).encode(\n                     ""ascii"", ""ignore""\n                 ),\n-                ""filename*"": ""UTF-8\'\'%s"" % url_quote(attachment_filename, safe=""""),\n+                ""filename*"": f""UTF-8\'\'{quoted}"",\n             }\n         else:\n             filenames = {""filename"": attachment_filename}\n@@ -661,23 +662,19 @@ def send_file(\n         from warnings import warn\n \n         try:\n-            rv.set_etag(\n-                ""%s-%s-%s""\n-                % (\n-                    os.path.getmtime(filename),\n-                    os.path.getsize(filename),\n-                    adler32(\n-                        filename.encode(""utf-8"")\n-                        if isinstance(filename, str)\n-                        else filename\n-                    )\n-                    & 0xFFFFFFFF,\n+            check = (\n+                adler32(\n+                    filename.encode(""utf-8"") if isinstance(filename, str) else filename\n                 )\n+                & 0xFFFFFFFF\n+            )\n+            rv.set_etag(\n+                f""{os.path.getmtime(filename)}-{os.path.getsize(filename)}-{check}""\n             )\n         except OSError:\n             warn(\n-                ""Access %s failed, maybe it does not exist, so ignore etags in ""\n-                ""headers"" % filename,\n+                f""Access {filename} failed, maybe it does not exist, so""\n+                "" ignore etags in headers"",\n                 stacklevel=2,\n             )\n \n@@ -806,13 +803,12 @@ def get_root_path(import_name):\n         # first module that is contained in our package.\n         if filepath is None:\n             raise RuntimeError(\n-                ""No root path can be found for the provided ""\n-                \'module ""%s"".  This can happen because the \'\n-                ""module came from an import hook that does ""\n-                ""not provide file name information or because ""\n-                ""it\'s a namespace package.  In this case ""\n-                ""the root path needs to be explicitly ""\n-                ""provided."" % import_name\n+                ""No root path can be found for the provided module""\n+                f"" {import_name!r}. This can happen because the module""\n+                "" came from an import hook that does not provide file""\n+                "" name information or because it\'s a namespace package.""\n+                "" In this case the root path needs to be explicitly""\n+                "" provided.""\n             )\n \n     # filepath is import_name.py for a module, or __init__.py for a package.\n@@ -823,6 +819,7 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n     """"""Given the loader that loaded a module and the module this function\n     attempts to figure out if the given module is actually a package.\n     """"""\n+    cls = type(loader)\n     # If the loader can tell us if something is a package, we can\n     # directly ask the loader.\n     if hasattr(loader, ""is_package""):\n@@ -830,20 +827,13 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n     # importlib\'s namespace loaders do not have this functionality but\n     # all the modules it loads are packages, so we can take advantage of\n     # this information.\n-    elif (\n-        loader.__class__.__module__ == ""_frozen_importlib""\n-        and loader.__class__.__name__ == ""NamespaceLoader""\n-    ):\n+    elif cls.__module__ == ""_frozen_importlib"" and cls.__name__ == ""NamespaceLoader"":\n         return True\n     # Otherwise we need to fail with an error that explains what went\n     # wrong.\n     raise AttributeError(\n-        (\n-            ""%s.is_package() method is missing but is required by Flask of ""\n-            ""PEP 302 import hooks.  If you do not use import hooks and ""\n-            ""you encounter this error please file a bug against Flask.""\n-        )\n-        % loader.__class__.__name__\n+        f""{cls.__name__}.is_package() method is missing but is required""\n+        "" for PEP 302 import hooks.""\n     )\n \n \n@@ -1014,7 +1004,7 @@ class _PackageBoundObject:\n \n         if self.static_folder is not None:\n             basename = os.path.basename(self.static_folder)\n-            return (""/"" + basename).rstrip(""/"")\n+            return f""/{basename}"".rstrip(""/"")\n \n     @static_url_path.setter\n     def static_url_path(self, value):\n'",4.121212121212121,4.121212121212121
src/flask/json/__init__.py,src/flask/json/__init__.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -364,7 +364,7 @@ def jsonify(*args, **kwargs):\n         data = args or kwargs\n \n     return current_app.response_class(\n-        dumps(data, indent=indent, separators=separators) + ""\\n"",\n+        f""{dumps(data, indent=indent, separators=separators)}\\n"",\n         mimetype=current_app.config[""JSONIFY_MIMETYPE""],\n     )\n \n'",4.071428571428571,4.071428571428571
src/flask/json/tag.py,src/flask/json/tag.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -105,7 +105,7 @@ class TagDict(JSONTag):\n \n     def to_json(self, value):\n         key = next(iter(value))\n-        return {key + ""__"": self.serializer.tag(value[key])}\n+        return {f""{key}__"": self.serializer.tag(value[key])}\n \n     def to_python(self, value):\n         key = next(iter(value))\n'",1.4242424242424243,1.4242424242424243
src/flask/sessions.py,src/flask/sessions.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -208,13 +208,13 @@ class SessionInterface:\n         rv = rv.rsplit("":"", 1)[0].lstrip(""."")\n \n         if ""."" not in rv:\n-            # Chrome doesn\'t allow names without a \'.\'\n-            # this should only come up with localhost\n-            # hack around this by not setting the name, and show a warning\n+            # Chrome doesn\'t allow names without a \'.\'. This should only\n+            # come up with localhost. Hack around this by not setting\n+            # the name, and show a warning.\n             warnings.warn(\n-                \'""{rv}"" is not a valid cookie domain, it must contain a ""."".\'\n-                "" Add an entry to your hosts file, for example""\n-                \' ""{rv}.localdomain"", and use that instead.\'.format(rv=rv)\n+                f""{rv!r} is not a valid cookie domain, it must contain""\n+                "" a \'.\'. Add an entry to your hosts file, for example""\n+                f"" \'{rv}.localdomain\', and use that instead.""\n             )\n             app.config[""SESSION_COOKIE_DOMAIN""] = False\n             return None\n@@ -232,7 +232,7 @@ class SessionInterface:\n         # if this is not an ip and app is mounted at the root, allow subdomain\n         # matching by adding a \'.\' prefix\n         if self.get_cookie_path(app) == ""/"" and not ip:\n-            rv = ""."" + rv\n+            rv = f"".{rv}""\n \n         app.config[""SESSION_COOKIE_DOMAIN""] = rv\n         return rv\n'",1.826086956521739,1.826086956521739
src/flask/testing.py,src/flask/testing.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -69,10 +69,9 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n                 url_scheme = app.config[""PREFERRED_URL_SCHEME""]\n \n             url = url_parse(path)\n-            base_url = ""{scheme}://{netloc}/{path}"".format(\n-                scheme=url.scheme or url_scheme,\n-                netloc=url.netloc or http_host,\n-                path=app_root.lstrip(""/""),\n+            base_url = (\n+                f""{url.scheme or url_scheme}://{url.netloc or http_host}""\n+                f""/{app_root.lstrip(\'/\')}""\n             )\n             path = url.path\n \n@@ -114,7 +113,7 @@ class FlaskClient(Client):\n         super().__init__(*args, **kwargs)\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n-            ""HTTP_USER_AGENT"": ""werkzeug/"" + werkzeug.__version__,\n+            ""HTTP_USER_AGENT"": f""werkzeug/{werkzeug.__version__}"",\n         }\n \n     @contextmanager\n'",4.0,3.7777777777777777
src/flask/views.py,src/flask/views.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -26,7 +26,7 @@ class View:\n             methods = [\'GET\']\n \n             def dispatch_request(self, name):\n-                return \'Hello %s!\' % name\n+                return f""Hello {name}!""\n \n         app.add_url_rule(\'/hello/<name>\', view_func=MyView.as_view(\'myview\'))\n \n@@ -157,5 +157,5 @@ class MethodView(View, metaclass=MethodViewType):\n         if meth is None and request.method == ""HEAD"":\n             meth = getattr(self, ""get"", None)\n \n-        assert meth is not None, ""Unimplemented method %r"" % request.method\n+        assert meth is not None, f""Unimplemented method {request.method!r}""\n         return meth(*args, **kwargs)\n'",3.0,3.0
tests/conftest.py,tests/conftest.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -116,9 +116,8 @@ def limit_loader(request, monkeypatch):\n             self.loader = loader\n \n         def __getattr__(self, name):\n-            if name in (""archive"", ""get_filename""):\n-                msg = ""Mocking a loader which does not have `%s.`"" % name\n-                raise AttributeError(msg)\n+            if name in {""archive"", ""get_filename""}:\n+                raise AttributeError(f""Mocking a loader which does not have {name!r}."")\n             return getattr(self.loader, name)\n \n     old_get_loader = pkgutil.get_loader\n@@ -148,7 +147,7 @@ def site_packages(modules_tmpdir, monkeypatch):\n     """"""Create a fake site-packages.""""""\n     rv = (\n         modules_tmpdir.mkdir(""lib"")\n-        .mkdir(""python{x[0]}.{x[1]}"".format(x=sys.version_info))\n+        .mkdir(f""python{sys.version_info.major}.{sys.version_info.minor}"")\n         .mkdir(""site-packages"")\n     )\n     monkeypatch.syspath_prepend(str(rv))\n@@ -161,23 +160,21 @@ def install_egg(modules_tmpdir, monkeypatch):\n     sys.path.""""""\n \n     def inner(name, base=modules_tmpdir):\n-        if not isinstance(name, str):\n-            raise ValueError(name)\n         base.join(name).ensure_dir()\n         base.join(name).join(""__init__.py"").ensure()\n \n         egg_setup = base.join(""setup.py"")\n         egg_setup.write(\n             textwrap.dedent(\n-                """"""\n-        from setuptools import setup\n-        setup(name=\'{}\',\n-              version=\'1.0\',\n-              packages=[\'site_egg\'],\n-              zip_safe=True)\n-        """""".format(\n-                    name\n+                f""""""\n+                from setuptools import setup\n+                setup(\n+                    name=""{name}"",\n+                    version=""1.0"",\n+                    packages=[""site_egg""],\n+                    zip_safe=True,\n                 )\n+                """"""\n             )\n         )\n \n'",1.3157894736842106,1.263157894736842
tests/test_basic.py,tests/test_basic.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -361,7 +361,7 @@ def test_session_localhost_warning(recwarn, app, client):\n     rv = client.get(""/"", ""http://localhost:5000/"")\n     assert ""domain"" not in rv.headers[""set-cookie""].lower()\n     w = recwarn.pop(UserWarning)\n-    assert \'""localhost"" is not a valid cookie domain\' in str(w.message)\n+    assert ""\'localhost\' is not a valid cookie domain"" in str(w.message)\n \n \n def test_session_ip_warning(recwarn, app, client):\n@@ -1095,7 +1095,7 @@ def test_enctype_debug_helper(app, client):\n         with pytest.raises(DebugFilesKeyError) as e:\n             client.post(""/fail"", data={""foo"": ""index.txt""})\n         assert ""no file contents were transmitted"" in str(e.value)\n-        assert \'This was submitted: ""index.txt""\' in str(e.value)\n+        assert ""This was submitted: \'index.txt\'"" in str(e.value)\n \n \n def test_response_types(app, client):\n@@ -1821,7 +1821,7 @@ def test_subdomain_matching():\n \n     @app.route(""/"", subdomain=""<user>"")\n     def index(user):\n-        return ""index for %s"" % user\n+        return f""index for {user}""\n \n     rv = client.get(""/"", ""http://mitsuhiko.localhost.localdomain/"")\n     assert rv.data == b""index for mitsuhiko""\n@@ -1834,7 +1834,7 @@ def test_subdomain_matching_with_ports():\n \n     @app.route(""/"", subdomain=""<user>"")\n     def index(user):\n-        return ""index for %s"" % user\n+        return f""index for {user}""\n \n     rv = client.get(""/"", ""http://mitsuhiko.localhost.localdomain:3000/"")\n     assert rv.data == b""index for mitsuhiko""\n'",1.0656370656370657,1.0656370656370657
tests/test_blueprints.py,tests/test_blueprints.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -144,7 +144,7 @@ def test_blueprint_url_defaults(app, client):\n \n     @bp.route(""/foo"", defaults={""baz"": 42})\n     def foo(bar, baz):\n-        return ""%s/%d"" % (bar, baz)\n+        return f""{bar}/{baz:d}""\n \n     @bp.route(""/bar"")\n     def bar(bar):\n'",1.0495867768595042,1.0495867768595042
tests/test_cli.py,tests/test_cli.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -268,9 +268,9 @@ def test_get_version(test_apps, capsys):\n     ctx = MockCtx()\n     get_version(ctx, None, ""test"")\n     out, err = capsys.readouterr()\n-    assert ""Python "" + python_version() in out\n-    assert ""Flask "" + flask_version in out\n-    assert ""Werkzeug "" + werkzeug_version in out\n+    assert f""Python {python_version()}"" in out\n+    assert f""Flask {flask_version}"" in out\n+    assert f""Werkzeug {werkzeug_version}"" in out\n \n \n def test_scriptinfo(test_apps, monkeypatch):\n@@ -288,7 +288,7 @@ def test_scriptinfo(test_apps, monkeypatch):\n     app = obj.load_app()\n     assert app.name == ""testapp""\n     assert obj.load_app() is app\n-    obj = ScriptInfo(app_import_path=cli_app_path + "":testapp"")\n+    obj = ScriptInfo(app_import_path=f""{cli_app_path}:testapp"")\n     app = obj.load_app()\n     assert app.name == ""testapp""\n     assert obj.load_app() is app\n@@ -406,7 +406,7 @@ def test_flaskgroup_debug(runner, set_debug_flag):\n \n     result = runner.invoke(cli, [""test""])\n     assert result.exit_code == 0\n-    assert result.output == ""%s\\n"" % str(not set_debug_flag)\n+    assert result.output == f""{not set_debug_flag}\\n""\n \n \n def test_print_exceptions(runner):\n@@ -656,4 +656,4 @@ def test_cli_empty(app):\n     app.register_blueprint(bp)\n \n     result = app.test_cli_runner().invoke(args=[""blue"", ""--help""])\n-    assert result.exit_code == 2, ""Unexpected success:\\n\\n"" + result.output\n+    assert result.exit_code == 2, f""Unexpected success:\\n\\n{result.output}""\n'",1.0476190476190477,1.0476190476190477
tests/test_config.py,tests/test_config.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -28,7 +28,7 @@ def common_object_test(app):\n \n def test_config_from_pyfile():\n     app = flask.Flask(__name__)\n-    app.config.from_pyfile(__file__.rsplit(""."", 1)[0] + "".py"")\n+    app.config.from_pyfile(f""{__file__.rsplit(\'.\', 1)[0]}.py"")\n     common_object_test(app)\n \n \n@@ -84,7 +84,7 @@ def test_config_from_envvar(monkeypatch):\n     assert not app.config.from_envvar(""FOO_SETTINGS"", silent=True)\n \n     monkeypatch.setattr(\n-        ""os.environ"", {""FOO_SETTINGS"": __file__.rsplit(""."", 1)[0] + "".py""}\n+        ""os.environ"", {""FOO_SETTINGS"": f""{__file__.rsplit(\'.\', 1)[0]}.py""}\n     )\n     assert app.config.from_envvar(""FOO_SETTINGS"")\n     common_object_test(app)\n@@ -185,12 +185,10 @@ def test_from_pyfile_weird_encoding(tmpdir, encoding):\n     f = tmpdir.join(""my_config.py"")\n     f.write_binary(\n         textwrap.dedent(\n+            f""""""\n+            # -*- coding: {encoding} -*-\n+            TEST_VALUE = ""föö""\n             """"""\n-    # -*- coding: {} -*-\n-    TEST_VALUE = ""föö""\n-    """""".format(\n-                encoding\n-            )\n         ).encode(encoding)\n     )\n     app = flask.Flask(__name__)\n'",1.0,1.0
tests/test_helpers.py,tests/test_helpers.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -286,7 +286,7 @@ class TestJSON:\n         class MyEncoder(flask.json.JSONEncoder):\n             def default(self, o):\n                 if isinstance(o, X):\n-                    return ""<%d>"" % o.val\n+                    return f""<{o.val}>""\n                 return flask.json.JSONEncoder.default(self, o)\n \n         class MyDecoder(flask.json.JSONDecoder):\n@@ -314,14 +314,16 @@ class TestJSON:\n         assert rv.data == b\'""<42>""\'\n \n     def test_blueprint_json_customization(self, app, client):\n-        class X:  # noqa: B903, for Python2 compatibility\n+        class X:\n+            __slots__ = (""val"",)\n+\n             def __init__(self, val):\n                 self.val = val\n \n         class MyEncoder(flask.json.JSONEncoder):\n             def default(self, o):\n                 if isinstance(o, X):\n-                    return ""<%d>"" % o.val\n+                    return f""<{o.val}>""\n \n                 return flask.json.JSONEncoder.default(self, o)\n \n@@ -687,9 +689,9 @@ class TestSendfile:\n         )\n         rv.close()\n         content_disposition = rv.headers[""Content-Disposition""]\n-        assert ""filename=%s"" % ascii in content_disposition\n+        assert f""filename={ascii}"" in content_disposition\n         if utf8:\n-            assert ""filename*=UTF-8\'\'"" + utf8 in content_disposition\n+            assert f""filename*=UTF-8\'\'{utf8}"" in content_disposition\n         else:\n             assert ""filename*=UTF-8\'\'"" not in content_disposition\n \n@@ -818,7 +820,7 @@ class TestUrlFor:\n             def get(self, id=None):\n                 if id is None:\n                     return ""List""\n-                return ""Get %d"" % id\n+                return f""Get {id:d}""\n \n             def post(self):\n                 return ""Create""\n'",1.1844660194174756,1.1844660194174756
tests/test_reqctx.py,tests/test_reqctx.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -110,7 +110,7 @@ def test_proper_test_request_context(app):\n def test_context_binding(app):\n     @app.route(""/"")\n     def index():\n-        return ""Hello %s!"" % flask.request.args[""name""]\n+        return f""Hello {flask.request.args[\'name\']}!""\n \n     @app.route(""/meh"")\n     def meh():\n@@ -138,7 +138,7 @@ def test_context_test(app):\n def test_manual_context_binding(app):\n     @app.route(""/"")\n     def index():\n-        return ""Hello %s!"" % flask.request.args[""name""]\n+        return f""Hello {flask.request.args[\'name\']}!""\n \n     ctx = app.test_request_context(""/?name=World"")\n     ctx.push()\n'",1.1142857142857143,1.1142857142857143
tests/test_templating.py,tests/test_templating.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -414,16 +414,16 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n         def handle(self, record):\n             called.append(True)\n             text = str(record.msg)\n-            assert \'1: trying loader of application ""blueprintapp""\' in text\n+            assert ""1: trying loader of application \'blueprintapp\'"" in text\n             assert (\n-                \'2: trying loader of blueprint ""admin"" (blueprintapp.apps.admin)\'\n+                ""2: trying loader of blueprint \'admin\' (blueprintapp.apps.admin)""\n             ) in text\n             assert (\n-                \'trying loader of blueprint ""frontend"" (blueprintapp.apps.frontend)\'\n+                ""trying loader of blueprint \'frontend\' (blueprintapp.apps.frontend)""\n             ) in text\n             assert ""Error: the template could not be found"" in text\n             assert (\n-                \'looked up from an endpoint that belongs to the blueprint ""frontend""\'\n+                ""looked up from an endpoint that belongs to the blueprint \'frontend\'""\n             ) in text\n             assert ""See https://flask.palletsprojects.com/blueprints/#templates"" in text\n \n'",1.0,1.0
tests/test_testing.py,tests/test_testing.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -59,7 +59,7 @@ def test_environ_base_default(app, client, app_ctx):\n \n     rv = client.get(""/"")\n     assert rv.data == b""127.0.0.1""\n-    assert flask.g.user_agent == ""werkzeug/"" + werkzeug.__version__\n+    assert flask.g.user_agent == f""werkzeug/{werkzeug.__version__}""\n \n \n def test_environ_base_modified(app, client, app_ctx):\n@@ -321,7 +321,7 @@ def test_json_request_and_response(app, client):\n def test_client_json_no_app_context(app, client):\n     @app.route(""/hello"", methods=[""POST""])\n     def hello():\n-        return ""Hello, {}!"".format(flask.request.json[""name""])\n+        return f""Hello, {flask.request.json[\'name\']}!""\n \n     class Namespace:\n         count = 0\n'",1.0408163265306123,1.0408163265306123
tests/test_user_error_handler.py,tests/test_user_error_handler.py,2ae740dd4903bbe5f3864384bcdf2ab2d4638bce,524fd0bc8cec7bfe8167c9c98cb5511b01a0f4c6,'f-strings everywhere',"'@@ -29,7 +29,7 @@ def test_error_handler_no_match(app, client):\n         original = getattr(e, ""original_exception"", None)\n \n         if original is not None:\n-            return ""wrapped "" + type(original).__name__\n+            return f""wrapped {type(original).__name__}""\n \n         return ""direct""\n \n@@ -238,9 +238,9 @@ class TestGenericHandlers:\n         original = getattr(e, ""original_exception"", None)\n \n         if original is not None:\n-            return ""wrapped "" + type(original).__name__\n+            return f""wrapped {type(original).__name__}""\n \n-        return ""direct "" + type(e).__name__\n+        return f""direct {type(e).__name__}""\n \n     @pytest.mark.parametrize(""to_handle"", (InternalServerError, 500))\n     def test_handle_class_or_code(self, app, client, to_handle):\n'",1.0454545454545454,1.0454545454545454
src/flask/__init__.py,src/flask/__init__.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,15 +1,3 @@\n-""""""\n-    flask\n-    ~~~~~\n-\n-    A microframework based on Werkzeug.  It\'s extensively documented\n-    and follows best practice patterns.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n-# utilities we import from Werkzeug and Jinja2 that are unused\n-# in the module but are exported as public interface.\n from jinja2 import escape\n from jinja2 import Markup\n from werkzeug.exceptions import abort\n'",0,0
src/flask/__main__.py,src/flask/__main__.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,14 +1,3 @@\n-""""""\n-    flask.__main__\n-    ~~~~~~~~~~~~~~\n+from .cli import main\n \n-    Alias for flask.run for the command line.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n-\n-if __name__ == ""__main__"":\n-    from .cli import main\n-\n-    main(as_module=True)\n+main(as_module=True)\n'",0,0
src/flask/app.py,src/flask/app.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.app\n-    ~~~~~~~~~\n-\n-    This module implements the central WSGI application object.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import os\n import sys\n from datetime import timedelta\n'",2.682926829268293,2.682926829268293
src/flask/blueprints.py,src/flask/blueprints.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,13 +1,3 @@\n-""""""\n-    flask.blueprints\n-    ~~~~~~~~~~~~~~~~\n-\n-    Blueprints are the recommended way to implement larger or more\n-    pluggable applications in Flask 0.7 and later.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from functools import update_wrapper\n \n from .helpers import _endpoint_from_view_func\n'",1.4772727272727273,1.4772727272727273
src/flask/cli.py,src/flask/cli.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.cli\n-    ~~~~~~~~~\n-\n-    A simple command line application to run flask apps.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import ast\n import inspect\n import os\n'",4.083333333333333,4.083333333333333
src/flask/config.py,src/flask/config.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.config\n-    ~~~~~~~~~~~~\n-\n-    Implements the configuration related objects.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import errno\n import os\n import types\n'",3.1818181818181817,3.1818181818181817
src/flask/ctx.py,src/flask/ctx.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.ctx\n-    ~~~~~~~~~\n-\n-    Implements the objects required to keep the context.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import sys\n from functools import update_wrapper\n \n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.debughelpers\n-    ~~~~~~~~~~~~~~~~~~\n-\n-    Various helpers to make the development experience better.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import os\n from warnings import warn\n \n'",4.0,4.0
src/flask/globals.py,src/flask/globals.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,13 +1,3 @@\n-""""""\n-    flask.globals\n-    ~~~~~~~~~~~~~\n-\n-    Defines all the global objects that are proxies to the current\n-    active context.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from functools import partial\n \n from werkzeug.local import LocalProxy\n'",2.0,2.0
src/flask/helpers.py,src/flask/helpers.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.helpers\n-    ~~~~~~~~~~~~~\n-\n-    Implements various helpers.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import io\n import mimetypes\n import os\n'",4.121212121212121,4.121212121212121
src/flask/json/__init__.py,src/flask/json/__init__.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-flask.json\n-~~~~~~~~~~\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n-""""""\n import codecs\n import io\n import uuid\n'",4.071428571428571,4.071428571428571
src/flask/json/tag.py,src/flask/json/tag.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -2,10 +2,10 @@\n Tagged JSON\n ~~~~~~~~~~~\n \n-A compact representation for lossless serialization of non-standard JSON types.\n-:class:`~flask.sessions.SecureCookieSessionInterface` uses this to serialize\n-the session data, but it may be useful in other places. It can be extended to\n-support other types.\n+A compact representation for lossless serialization of non-standard JSON\n+types. :class:`~flask.sessions.SecureCookieSessionInterface` uses this\n+to serialize the session data, but it may be useful in other places. It\n+can be extended to support other types.\n \n .. autoclass:: TaggedJSONSerializer\n     :members:\n@@ -13,12 +13,15 @@ support other types.\n .. autoclass:: JSONTag\n     :members:\n \n-Let\'s seen an example that adds support for :class:`~collections.OrderedDict`.\n-Dicts don\'t have an order in Python or JSON, so to handle this we will dump\n-the items as a list of ``[key, value]`` pairs. Subclass :class:`JSONTag` and\n-give it the new key ``\' od\'`` to identify the type. The session serializer\n-processes dicts first, so insert the new tag at the front of the order since\n-``OrderedDict`` must be processed before ``dict``. ::\n+Let\'s see an example that adds support for\n+:class:`~collections.OrderedDict`. Dicts don\'t have an order in JSON, so\n+to handle this we will dump the items as a list of ``[key, value]``\n+pairs. Subclass :class:`JSONTag` and give it the new key ``\' od\'`` to\n+identify the type. The session serializer processes dicts first, so\n+insert the new tag at the front of the order since ``OrderedDict`` must\n+be processed before ``dict``.\n+\n+.. code-block:: python\n \n     from flask.json.tag import JSONTag\n \n@@ -36,9 +39,6 @@ processes dicts first, so insert the new tag at the front of the order since\n             return OrderedDict(value)\n \n     app.session_interface.serializer.register(TagOrderedDict, index=0)\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n """"""\n from base64 import b64decode\n from base64 import b64encode\n'",1.4242424242424243,1.4242424242424243
src/flask/logging.py,src/flask/logging.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-flask.logging\n-~~~~~~~~~~~~~\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n-""""""\n import logging\n import sys\n \n'",3.6666666666666665,3.6666666666666665
src/flask/sessions.py,src/flask/sessions.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.sessions\n-    ~~~~~~~~~~~~~~\n-\n-    Implements cookie based sessions based on itsdangerous.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import hashlib\n import warnings\n from collections.abc import MutableMapping\n'",1.826086956521739,1.826086956521739
src/flask/signals.py,src/flask/signals.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,13 +1,3 @@\n-""""""\n-    flask.signals\n-    ~~~~~~~~~~~~~\n-\n-    Implements signals based on blinker if available, otherwise\n-    falls silently back to a noop.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n try:\n     from blinker import Namespace\n \n'",1.0,1.0
src/flask/templating.py,src/flask/templating.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.templating\n-    ~~~~~~~~~~~~~~~~\n-\n-    Implements the bridge to Jinja2.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from jinja2 import BaseLoader\n from jinja2 import Environment as BaseEnvironment\n from jinja2 import TemplateNotFound\n'",2.5454545454545454,2.5454545454545454
src/flask/testing.py,src/flask/testing.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,13 +1,3 @@\n-""""""\n-    flask.testing\n-    ~~~~~~~~~~~~~\n-\n-    Implements test support helpers.  This module is lazily imported\n-    and usually not used in production environments.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from contextlib import contextmanager\n \n import werkzeug.test\n'",3.7777777777777777,3.7777777777777777
src/flask/views.py,src/flask/views.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.views\n-    ~~~~~~~~~~~\n-\n-    This module provides class-based views inspired by the ones in Django.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from .globals import request\n \n \n'",3.0,3.0
src/flask/wrappers.py,src/flask/wrappers.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    flask.wrappers\n-    ~~~~~~~~~~~~~~\n-\n-    Implements the WSGI wrappers (request and response).\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from werkzeug.exceptions import BadRequest\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n'",2.5714285714285716,2.5714285714285716
tests/conftest.py,tests/conftest.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-    tests.conftest\n-    ~~~~~~~~~~~~~~\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import os\n import pkgutil\n import sys\n'",1.263157894736842,1.263157894736842
tests/test_appctx.py,tests/test_appctx.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.appctx\n-    ~~~~~~~~~~~~\n-\n-    Tests the application context.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import pytest\n \n import flask\n'",1.103448275862069,1.103448275862069
tests/test_basic.py,tests/test_basic.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.basic\n-    ~~~~~~~~~~~~~~~~~~~~~\n-\n-    The basic functionality.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import re\n import sys\n import time\n'",1.0656370656370657,1.0656370656370657
tests/test_blueprints.py,tests/test_blueprints.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.blueprints\n-    ~~~~~~~~~~~~~~~~\n-\n-    Blueprints (and currently modules)\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import functools\n \n import pytest\n'",1.0495867768595042,1.0495867768595042
tests/test_cli.py,tests/test_cli.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-    tests.test_cli\n-    ~~~~~~~~~~~~~~\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n import os\n'",1.0476190476190477,1.0476190476190477
tests/test_config.py,tests/test_config.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-    tests.test_config\n-    ~~~~~~~~~~~~~~~~~\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import json\n import os\n import textwrap\n'",1.0,1.0
tests/test_helpers.py,tests/test_helpers.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.helpers\n-    ~~~~~~~~~~~~~~~~~~~~~~~\n-\n-    Various helpers.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import datetime\n import io\n import os\n'",1.1844660194174756,1.1844660194174756
tests/test_instance_config.py,tests/test_instance_config.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-    tests.test_instance\n-    ~~~~~~~~~~~~~~~~~~~\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import os\n import sys\n \n'",1.25,1.25
tests/test_json_tag.py,tests/test_json_tag.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-tests.test_json_tag\n-~~~~~~~~~~~~~~~~~~~\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n-""""""\n from datetime import datetime\n from uuid import uuid4\n \n'",1.0,1.0
tests/test_logging.py,tests/test_logging.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-tests.test_logging\n-~~~~~~~~~~~~~~~~~~~\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n-""""""\n import logging\n import sys\n from io import StringIO\n'",1.1111111111111112,1.1111111111111112
tests/test_regression.py,tests/test_regression.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.regression\n-    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n-\n-    Tests regressions.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import gc\n import platform\n import threading\n'",1.2,1.2
tests/test_reqctx.py,tests/test_reqctx.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.reqctx\n-    ~~~~~~~~~~~~\n-\n-    Tests the request context.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import pytest\n \n import flask\n'",1.1142857142857143,1.1142857142857143
tests/test_signals.py,tests/test_signals.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.signals\n-    ~~~~~~~~~~~~~~~~~~~~~~~\n-\n-    Signalling.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import pytest\n \n try:\n'",1.28,1.28
tests/test_subclassing.py,tests/test_subclassing.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,13 +1,3 @@\n-""""""\n-    tests.subclassing\n-    ~~~~~~~~~~~~~~~~~\n-\n-    Test that certain behavior of flask can be customized by\n-    subclasses.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n from io import StringIO\n \n import flask\n'",1.0,1.0
tests/test_templating.py,tests/test_templating.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.templating\n-    ~~~~~~~~~~~~~~~~\n-\n-    Template functionality\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import logging\n \n import pytest\n'",1.0,1.0
tests/test_testing.py,tests/test_testing.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.testing\n-    ~~~~~~~~~~~~~\n-\n-    Test client and more.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import click\n import pytest\n import werkzeug\n'",1.0408163265306123,1.0408163265306123
tests/test_user_error_handler.py,tests/test_user_error_handler.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,10 +1,3 @@\n-""""""\n-tests.test_user_error_handler\n-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-\n-:copyright: 2010 Pallets\n-:license: BSD-3-Clause\n-""""""\n import pytest\n from werkzeug.exceptions import Forbidden\n from werkzeug.exceptions import HTTPException\n'",1.0454545454545454,1.0454545454545454
tests/test_views.py,tests/test_views.py,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,cd8a3745047a4413387f1e8a6877fd35859e21be,'remove unused module docstrings',"'@@ -1,12 +1,3 @@\n-""""""\n-    tests.views\n-    ~~~~~~~~~~~\n-\n-    Pluggable views.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-""""""\n import pytest\n from werkzeug.http import parse_set_header\n \n'",1.0,1.0
docs/advanced_foreword.rst,docs/advanced_foreword.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _advanced_foreword:\n-\n Foreword for Experienced Programmers\n ====================================\n \n'",0,0
docs/api.rst,docs/api.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,5 +1,3 @@\n-.. _api:\n-\n API\n ===\n \n@@ -326,12 +324,12 @@ happens automatically (but it's harmless to include ``|safe`` anyway).\n \n .. admonition:: Auto-Sort JSON Keys\n \n-    The configuration variable ``JSON_SORT_KEYS`` (:ref:`config`) can be\n-    set to false to stop Flask from auto-sorting keys.  By default sorting\n+    The configuration variable :data:`JSON_SORT_KEYS` can be set to\n+    ``False`` to stop Flask from auto-sorting keys. By default sorting\n     is enabled and outside of the app context sorting is turned on.\n \n-    Notice that disabling key sorting can cause issues when using content\n-    based HTTP caches and Python's hash randomization feature.\n+    Notice that disabling key sorting can cause issues when using\n+    content  based HTTP caches and Python's hash randomization feature.\n \n .. autofunction:: jsonify\n \n@@ -634,7 +632,6 @@ The following signals exist in Flask:\n \n .. _blinker: https://pypi.org/project/blinker/\n \n-.. _class-based-views:\n \n Class-Based Views\n -----------------\n@@ -761,7 +758,6 @@ instead of the `view_func` parameter.\n                 handling.  They have to be specified as keyword arguments.\n =============== ==========================================================\n \n-.. _view-func-options:\n \n View Function Options\n ---------------------\n""",1.1875,1.1875
docs/appcontext.rst,docs/appcontext.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,7 +1,5 @@\n .. currentmodule:: flask\n \n-.. _app-context:\n-\n The Application Context\n =======================\n \n'",1.6666666666666667,1.6666666666666667
docs/becomingbig.rst,docs/becomingbig.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _becomingbig:\n-\n Becoming Big\n ============\n \n@@ -20,8 +18,8 @@ project.\n Hook. Extend.\n -------------\n \n-The :ref:`api` docs are full of available overrides, hook points, and\n-:ref:`signals`. You can provide custom classes for things like the\n+The :doc:`/api` docs are full of available overrides, hook points, and\n+:doc:`/signals`. You can provide custom classes for things like the\n request and response objects. Dig deeper on the APIs you use, and look\n for the customizations which are available out of the box in a Flask\n release. Look for ways in which your project can be refactored into a\n@@ -35,13 +33,13 @@ Subclass.\n The :class:`~flask.Flask` class has many methods designed for subclassing. You\n can quickly add or customize behavior by subclassing :class:`~flask.Flask` (see\n the linked method docs) and using that subclass wherever you instantiate an\n-application class. This works well with :ref:`app-factories`.\n+application class. This works well with :doc:`/patterns/appfactories`.\n See :doc:`/patterns/subclassing` for an example.\n \n Wrap with middleware.\n ---------------------\n \n-The :ref:`app-dispatch` chapter shows in detail how to apply middleware. You\n+The :doc:`/patterns/appdispatch` pattern shows in detail how to apply middleware. You\n can introduce WSGI middleware to wrap your Flask instances and introduce fixes\n and changes at the layer between your Flask application and your HTTP\n server. Werkzeug includes several `middlewares\n'",0,0
docs/blueprints.rst,docs/blueprints.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,5 +1,3 @@\n-.. _blueprints:\n-\n Modular Applications with Blueprints\n ====================================\n \n@@ -37,8 +35,9 @@ Blueprints in Flask are intended for these cases:\n A blueprint in Flask is not a pluggable app because it is not actually an\n application -- it's a set of operations which can be registered on an\n application, even multiple times.  Why not have multiple application\n-objects?  You can do that (see :ref:`app-dispatch`), but your applications\n-will have separate configs and will be managed at the WSGI layer.\n+objects?  You can do that (see :doc:`/patterns/appdispatch`), but your\n+applications will have separate configs and will be managed at the WSGI\n+layer.\n \n Blueprints instead provide separation at the Flask level, share\n application config, and can change an application object as necessary with\n@@ -274,4 +273,4 @@ at the application level using the ``request`` proxy object::\n         else:\n             return ex\n \n-More information on error handling see :ref:`errorpages`.\n+More information on error handling see :doc:`/patterns/errorpages`.\n""",1.0,1.0
docs/changelog.rst,docs/changelog.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,4 +1,4 @@\n-Changelog\n-=========\n+Changes\n+=======\n \n .. include:: ../CHANGES.rst\n'",0,0
docs/cli.rst,docs/cli.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,7 +1,5 @@\n .. currentmodule:: flask\n \n-.. _cli:\n-\n Command Line Interface\n ======================\n \n@@ -99,7 +97,7 @@ replaces the :meth:`Flask.run` method in most cases. ::\n .. warning:: Do not use this command to run your application in production.\n     Only use the development server during development. The development server\n     is provided for convenience, but is not designed to be particularly secure,\n-    stable, or efficient. See :ref:`deployment` for how to run in production.\n+    stable, or efficient. See :doc:`/deploying/index` for how to run in production.\n \n \n Open a Shell\n'",0,0
docs/config.rst,docs/config.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _config:\n-\n Configuration Handling\n ======================\n \n@@ -278,7 +276,7 @@ The following configuration values are used internally by Flask:\n     Inform the application what path it is mounted under by the application /\n     web server.  This is used for generating URLs outside the context of a\n     request (inside a request, the dispatcher is responsible for setting\n-    ``SCRIPT_NAME`` instead; see :ref:`Application Dispatching <app-dispatch>`\n+    ``SCRIPT_NAME`` instead; see :doc:`/patterns/appdispatch`\n     for examples of dispatch configuration).\n \n     Will be used for the session cookie path if ``SESSION_COOKIE_PATH`` is not\n@@ -399,7 +397,7 @@ Configuring from Python Files\n Configuration becomes more useful if you can store it in a separate file,\n ideally located outside the actual application package. This makes\n packaging and distributing your application possible via various package\n-handling tools (:ref:`distribute-deployment`) and finally modifying the\n+handling tools (:doc:`/patterns/distribute`) and finally modifying the\n configuration file afterwards.\n \n So a common pattern is this::\n@@ -628,7 +626,7 @@ your configuration files.  However here a list of good recommendations:\n -   Use a tool like `fabric`_ in production to push code and\n     configurations separately to the production server(s).  For some\n     details about how to do that, head over to the\n-    :ref:`fabric-deployment` pattern.\n+    :doc:`/patterns/fabric` pattern.\n \n .. _fabric: https://www.fabfile.org/\n \n'",1.0,1.0
docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _deploying-fastcgi:\n-\n FastCGI\n =======\n \n'",1.0,1.0
docs/deploying/index.rst,docs/deploying/index.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _deployment:\n-\n Deployment Options\n ==================\n \n'",0,0
docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _mod_wsgi-deployment:\n-\n mod_wsgi (Apache)\n =================\n \n'",0,0
docs/deploying/uwsgi.rst,docs/deploying/uwsgi.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _deploying-uwsgi:\n-\n uWSGI\n =====\n \n'",0,0
docs/deploying/wsgi-standalone.rst,docs/deploying/wsgi-standalone.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _deploying-wsgi-standalone:\n-\n Standalone WSGI Containers\n ==========================\n \n'",0,0
docs/design.rst,docs/design.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _design:\n-\n Design Decisions in Flask\n =========================\n \n@@ -77,7 +75,7 @@ to the application object :meth:`~flask.Flask.wsgi_app`).\n \n Furthermore this design makes it possible to use a factory function to\n create the application which is very helpful for unit testing and similar\n-things (:ref:`app-factories`).\n+things (:doc:`/patterns/appfactories`).\n \n The Routing System\n ------------------\n@@ -169,7 +167,7 @@ large applications harder to maintain.  However Flask is just not designed\n for large applications or asynchronous servers.  Flask wants to make it\n quick and easy to write a traditional web application.\n \n-Also see the :ref:`becomingbig` section of the documentation for some\n+Also see the :doc:`/becomingbig` section of the documentation for some\n inspiration for larger applications based on Flask.\n \n \n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _application-errors:\n-\n Application Errors\n ==================\n \n@@ -68,7 +66,6 @@ Follow-up reads:\n * `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n * `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n \n-.. _error-handlers:\n \n Error handlers\n --------------\n@@ -239,7 +236,7 @@ Debugging Application Errors\n ============================\n \n For production applications, configure your application with logging and\n-notifications as described in :ref:`application-errors`.  This section provides\n+notifications as described in :doc:`/logging`. This section provides\n pointers when debugging deployment configuration and digging deeper with a\n full-featured Python debugger.\n \n'",1.5,1.5
docs/extensiondev.rst,docs/extensiondev.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -27,9 +27,10 @@ their :file:`setup.py` files.\n But what do extensions look like themselves?  An extension has to ensure\n that it works with multiple Flask application instances at once.  This is\n a requirement because many people will use patterns like the\n-:ref:`app-factories` pattern to create their application as needed to aid\n-unittests and to support multiple configurations.  Because of that it is\n-crucial that your application supports that kind of behavior.\n+:doc:`/patterns/appfactories` pattern to create their application as\n+needed to aid unittests and to support multiple configurations. Because\n+of that it is crucial that your application supports that kind of\n+behavior.\n \n Most importantly the extension must be shipped with a :file:`setup.py` file and\n registered on PyPI.  Also the development checkout link should work so\n@@ -117,8 +118,8 @@ Initializing Extensions\n \n Many extensions will need some kind of initialization step.  For example,\n consider an application that's currently connecting to SQLite like the\n-documentation suggests (:ref:`sqlite3`).  So how does the extension\n-know the name of the application object?\n+documentation suggests (:doc:`/patterns/sqlite3`). So how does the\n+extension know the name of the application object?\n \n Quite simple: you pass it to it.\n \n""",1.6666666666666667,1.6666666666666667
docs/extensions.rst,docs/extensions.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _extensions:\n-\n Extensions\n ==========\n \n'",0,0
docs/foreword.rst,docs/foreword.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -49,8 +49,5 @@ the Python web interface.\n \n Flask includes many hooks to customize its behavior. Should you need more\n customization, the Flask class is built for subclassing. If you are interested\n-in that, check out the :ref:`becomingbig` chapter.  If you are curious about\n-the Flask design principles, head over to the section about :ref:`design`.\n-\n-Continue to :ref:`installation`, the :ref:`quickstart`, or the\n-:ref:`advanced_foreword`.\n+in that, check out the :doc:`becomingbig` chapter.  If you are curious about\n+the Flask design principles, head over to the section about :doc:`design`.\n'",0,0
docs/index.rst,docs/index.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,7 +1,5 @@\n .. rst-class:: hide-header\n \n-.. rst-class:: hide-header\n-\n Welcome to Flask\n ================\n \n@@ -10,12 +8,13 @@ Welcome to Flask\n     :align: center\n     :target: https://palletsprojects.com/p/flask/\n \n-Welcome to Flask's documentation. Get started with :ref:`installation`\n-and then get an overview with the :ref:`quickstart`. There is also a\n-more detailed :ref:`tutorial` that shows how to create a small but\n+Welcome to Flask's documentation. Get started with :doc:`installation`\n+and then get an overview with the :doc:`quickstart`. There is also a\n+more detailed :doc:`tutorial/index` that shows how to create a small but\n complete application with Flask. Common patterns are described in the\n-:ref:`patterns` section. The rest of the docs describe each component of\n-Flask in detail, with a full reference in the :ref:`api` section.\n+:doc:`patterns/index` section. The rest of the docs describe each\n+component of Flask in detail, with a full reference in the :doc:`api`\n+section.\n \n Flask depends on the `Jinja`_ template engine and the `Werkzeug`_ WSGI\n toolkit. The documentation for these libraries can be found at:\n""",0,0
docs/installation.rst,docs/installation.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,5 +1,3 @@\n-.. _installation:\n-\n Installation\n ============\n \n@@ -40,7 +38,7 @@ Optional dependencies\n These distributions will not be installed automatically. Flask will detect and\n use them if you install them.\n \n-* `Blinker`_ provides support for :ref:`signals`.\n+* `Blinker`_ provides support for :doc:`signals`.\n * `SimpleJSON`_ is a fast JSON implementation that is compatible with\n   Python's ``json`` module. It is preferred for JSON operations if it is\n   installed.\n@@ -74,6 +72,8 @@ Python comes bundled with the :mod:`venv` module to create virtual\n environments.\n \n \n+.. _install-create-env:\n+\n Create an environment\n ~~~~~~~~~~~~~~~~~~~~~\n \n""",0,0
docs/license.rst,docs/license.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -4,9 +4,9 @@ License\n Source License\n --------------\n \n-This license applies to all files in the Flask repository and source\n-distribution. This includes Flask's source code, the examples, and\n-tests, as well as the documentation.\n+The BSD-3-Clause license applies to all files in the Flask repository\n+and source distribution. This includes Flask's source code, the\n+examples, and tests, as well as the documentation.\n \n .. include:: ../LICENSE.rst\n \n""",0,0
docs/patterns/appdispatch.rst,docs/patterns/appdispatch.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _app-dispatch:\n-\n Application Dispatching\n =======================\n \n@@ -10,25 +8,25 @@ Django and a Flask application in the same interpreter side by side if\n you want.  The usefulness of this depends on how the applications work\n internally.\n \n-The fundamental difference from the :ref:`module approach\n-<larger-applications>` is that in this case you are running the same or\n-different Flask applications that are entirely isolated from each other.\n-They run different configurations and are dispatched on the WSGI level.\n+The fundamental difference from :doc:`packages` is that in this case you\n+are running the same or different Flask applications that are entirely\n+isolated from each other. They run different configurations and are\n+dispatched on the WSGI level.\n \n \n Working with this Document\n --------------------------\n \n-Each of the techniques and examples below results in an ``application`` object\n-that can be run with any WSGI server.  For production, see :ref:`deployment`.\n-For development, Werkzeug provides a builtin server for development available\n-at :func:`werkzeug.serving.run_simple`::\n+Each of the techniques and examples below results in an ``application``\n+object that can be run with any WSGI server. For production, see\n+:doc:`/deploying/index`. For development, Werkzeug provides a server\n+through :func:`werkzeug.serving.run_simple`::\n \n     from werkzeug.serving import run_simple\n     run_simple(\'localhost\', 5000, application, use_reloader=True)\n \n Note that :func:`run_simple <werkzeug.serving.run_simple>` is not intended for\n-use in production.  Use a :ref:`full-blown WSGI server <deployment>`.\n+use in production.  Use a production WSGI server. See :doc:`/deploying/index`.\n \n In order to use the interactive debugger, debugging must be enabled both on\n the application and the simple server. Here is the ""hello world"" example with\n@@ -79,7 +77,7 @@ with different configurations.  Assuming the application is created inside\n a function and you can call that function to instantiate it, that is\n really easy to implement.  In order to develop your application to support\n creating new instances in functions have a look at the\n-:ref:`app-factories` pattern.\n+:doc:`appfactories` pattern.\n \n A very common example would be creating applications per subdomain.  For\n instance you configure your webserver to dispatch all requests for all\n'",1.6666666666666667,1.6666666666666667
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,10 +1,8 @@\n-.. _app-factories:\n-\n Application Factories\n =====================\n \n If you are already using packages and blueprints for your application\n-(:ref:`blueprints`) there are a couple of really nice ways to further improve\n+(:doc:`/blueprints`) there are a couple of really nice ways to further improve\n the experience.  A common pattern is creating the application object when\n the blueprint is imported.  But if you move the creation of this object\n into a function, you can then create multiple instances of this app later.\n'",1.0,1.0
docs/patterns/caching.rst,docs/patterns/caching.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _caching-pattern:\n-\n Caching\n =======\n \n'",0,0
docs/patterns/deferredcallbacks.rst,docs/patterns/deferredcallbacks.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _deferred-callbacks:\n-\n Deferred Request Callbacks\n ==========================\n \n'",1.5,1.5
docs/patterns/distribute.rst,docs/patterns/distribute.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _distribute-deployment:\n-\n Deploying with Setuptools\n =========================\n \n@@ -23,14 +21,13 @@ Flask itself, and all the libraries you can find on PyPI are distributed with\n either setuptools or distutils.\n \n In this case we assume your application is called\n-:file:`yourapplication.py` and you are not using a module, but a :ref:`package\n-<larger-applications>`. If you have not yet converted your application into\n-a package, head over to the :ref:`larger-applications` pattern to see\n-how this can be done.\n+:file:`yourapplication.py` and you are not using a module, but a\n+package. If you have not yet converted your application into a package,\n+head over to :doc:`packages` to see how this can be done.\n \n A working deployment with setuptools is the first step into more complex\n and more automated deployment scenarios.  If you want to fully automate\n-the process, also read the :ref:`fabric-deployment` chapter.\n+the process, also read the :doc:`fabric` chapter.\n \n Basic Setup Script\n ------------------\n@@ -38,8 +35,8 @@ Basic Setup Script\n Because you have Flask installed, you have setuptools available on your system.\n Flask already depends upon setuptools.\n \n-Standard disclaimer applies: :ref:`you better use a virtualenv\n-<virtualenv>`.\n+Standard disclaimer applies: :ref:`use a virtualenv\n+<install-create-env>`.\n \n Your setup code always goes into a file named :file:`setup.py` next to your\n application.  The name of the file is only convention, but because\n'",0,0
docs/patterns/errorpages.rst,docs/patterns/errorpages.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _errorpages:\n-\n Custom Error Pages\n ==================\n \n@@ -41,7 +39,7 @@ even if the application behaves correctly:\n     Usually happens on programming errors or if the server is overloaded.\n     A terribly good idea is to have a nice page there, because your\n     application *will* fail sooner or later (see also:\n-    :ref:`application-errors`).\n+    :doc:`/errorhandling`).\n \n \n Error Handlers\n@@ -74,7 +72,7 @@ Here is an example implementation for a ""404 Page Not Found"" exception::\n         # note that we set the 404 status explicitly\n         return render_template(\'404.html\'), 404\n \n-When using the :ref:`application factory pattern <app-factories>`::\n+When using the :doc:`appfactories`::\n \n     from flask import Flask, render_template\n \n'",1.2,1.2
docs/patterns/fabric.rst,docs/patterns/fabric.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,12 +1,10 @@\n-.. _fabric-deployment:\n-\n Deploying with Fabric\n =====================\n \n `Fabric`_ is a tool for Python similar to Makefiles but with the ability\n to execute commands on a remote server.  In combination with a properly\n-set up Python package (:ref:`larger-applications`) and a good concept for\n-configurations (:ref:`config`) it is very easy to deploy Flask\n+set up Python package (:doc:`packages`) and a good concept for\n+configurations (:doc:`/config`) it is very easy to deploy Flask\n applications to external servers.\n \n Before we get started, here a quick checklist of things we have to ensure\n@@ -15,7 +13,7 @@ upfront:\n -   Fabric 1.0 has to be installed locally.  This tutorial assumes the\n     latest version of Fabric.\n -   The application already has to be a package and requires a working\n-    :file:`setup.py` file (:ref:`distribute-deployment`).\n+    :file:`setup.py` file (:doc:`distribute`).\n -   In the following example we are using `mod_wsgi` for the remote\n     servers.  You can of course use your own favourite server there, but\n     for this example we chose Apache + `mod_wsgi` because it's very easy\n@@ -101,7 +99,7 @@ To setup a new server you would roughly do these steps:\n 3.  Create a new Apache config for ``yourapplication`` and activate it.\n     Make sure to activate watching for changes of the ``.wsgi`` file so\n     that we can automatically reload the application by touching it.\n-    (See :ref:`mod_wsgi-deployment` for more information)\n+    See :doc:`/deploying/mod_wsgi`.\n \n So now the question is, where do the :file:`application.wsgi` and\n :file:`application.cfg` files come from?\n@@ -124,7 +122,7 @@ the config at that environment variable::\n     app.config.from_object('yourapplication.default_config')\n     app.config.from_envvar('YOURAPPLICATION_CONFIG')\n \n-This approach is explained in detail in the :ref:`config` section of the\n+This approach is explained in detail in the :doc:`/config` section of the\n documentation.\n \n The Configuration File\n""",0,0
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"""@@ -1,5 +1,3 @@\n-.. _uploading-files:\n-\n Uploading Files\n ===============\n \n@@ -39,7 +37,7 @@ Why do we limit the extensions that are allowed?  You probably don't want\n your users to be able to upload everything there if the server is directly\n sending out the data to the client.  That way you can make sure that users\n are not able to upload HTML files that would cause XSS problems (see\n-:ref:`xss`).  Also make sure to disallow ``.php`` files if the server\n+:ref:`security-xss`).  Also make sure to disallow ``.php`` files if the server\n executes them, but who has PHP installed on their server, right?  :)\n \n Next the functions that check if an extension is valid and that uploads\n""",0,0
docs/patterns/flashing.rst,docs/patterns/flashing.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _message-flashing-pattern:\n-\n Message Flashing\n ================\n \n'",2.5,2.5
docs/patterns/index.rst,docs/patterns/index.rst,171aabc87dd8bff0367d0555c8be6105b00c22ce,f2f027d1fbc12f3ff24f3e471e11ac56e1a5d869,'remove unused ref directives\n\nreplace page refs with doc directives',"'@@ -1,5 +1,3 @@\n-.. _patterns:\n-\n Patterns for Flask\n ==================\n \n'",0,0
MANIFEST.in,MANIFEST.in,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,171aabc87dd8bff0367d0555c8be6105b00c22ce,'move package metadata to setup.cfg',"'@@ -1,5 +1,6 @@\n include CHANGES.rst\n include CONTRIBUTING.rst\n+include LICENSE.rst\n include tox.ini\n graft artwork\n graft docs\n'",0,0
CHANGES.rst,CHANGES.rst,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","""@@ -19,6 +19,9 @@ Unreleased\n     200 OK and an empty file. :issue:`3358`\n -   When using ad-hoc certificates, check for the cryptography library\n     instead of PyOpenSSL. :pr:`3492`\n+-   JSON support no longer uses simplejson if it's installed. To use\n+    another JSON module, override ``app.json_encoder`` and\n+    ``json_decoder``. :issue:`3555`\n \n \n Version 1.1.2\n""",0,0
docs/api.rst,docs/api.rst,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","""@@ -284,22 +284,9 @@ JSON Support\n \n .. module:: flask.json\n \n-Flask uses ``simplejson`` for the JSON implementation.  Since simplejson\n-is provided by both the standard library as well as extension, Flask will\n-try simplejson first and then fall back to the stdlib json module.  On top\n-of that it will delegate access to the current application's JSON encoders\n-and decoders for easier customization.\n-\n-So for starters instead of doing::\n-\n-    try:\n-        import simplejson as json\n-    except ImportError:\n-        import json\n-\n-You can instead just do this::\n-\n-    from flask import json\n+Flask uses the built-in :mod:`json` module for the JSON implementation.\n+It will delegate access to the current application's JSON encoders and\n+decoders for easier customization.\n \n For usage examples, read the :mod:`json` documentation in the standard\n library.  The following extensions are by default applied to the stdlib's\n""",1.1875,1.1875
docs/installation.rst,docs/installation.rst,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","""@@ -39,16 +39,12 @@ These distributions will not be installed automatically. Flask will detect and\n use them if you install them.\n \n * `Blinker`_ provides support for :doc:`signals`.\n-* `SimpleJSON`_ is a fast JSON implementation that is compatible with\n-  Python's ``json`` module. It is preferred for JSON operations if it is\n-  installed.\n * `python-dotenv`_ enables support for :ref:`dotenv` when running ``flask``\n   commands.\n * `Watchdog`_ provides a faster, more efficient reloader for the development\n   server.\n \n .. _Blinker: https://pythonhosted.org/blinker/\n-.. _SimpleJSON: https://simplejson.readthedocs.io/\n .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n .. _watchdog: https://pythonhosted.org/watchdog/\n \n""",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","'@@ -1,10 +1,9 @@\n-import codecs\n import io\n+import json as _json\n import uuid\n from datetime import date\n from datetime import datetime\n \n-from itsdangerous import json as _json\n from jinja2 import Markup\n from werkzeug.http import http_date\n \n@@ -17,10 +16,6 @@ except ImportError:\n     # Python < 3.7\n     dataclasses = None\n \n-# Figure out if simplejson escapes slashes.  This behavior was changed\n-# from one version to another without reason.\n-_slash_escape = ""\\\\/"" not in _json.dumps(""/"")\n-\n \n __all__ = [\n     ""dump"",\n@@ -93,7 +88,7 @@ class JSONEncoder(_json.JSONEncoder):\n \n class JSONDecoder(_json.JSONDecoder):\n     """"""The default JSON decoder.  This one does not change the behavior from\n-    the default simplejson decoder.  Consult the :mod:`json` documentation\n+    the default decoder.  Consult the :mod:`json` documentation\n     for more information.  This decoder is not only used for the load\n     functions of this module but also :attr:`~flask.Request`.\n     """"""\n@@ -133,49 +128,6 @@ def _load_arg_defaults(kwargs, app=None):\n         kwargs.setdefault(""cls"", JSONDecoder)\n \n \n-def detect_encoding(data):\n-    """"""Detect which UTF codec was used to encode the given bytes.\n-\n-    The latest JSON standard (:rfc:`8259`) suggests that only UTF-8 is\n-    accepted. Older documents allowed 8, 16, or 32. 16 and 32 can be big\n-    or little endian. Some editors or libraries may prepend a BOM.\n-\n-    :param data: Bytes in unknown UTF encoding.\n-    :return: UTF encoding name\n-    """"""\n-    head = data[:4]\n-\n-    if head[:3] == codecs.BOM_UTF8:\n-        return ""utf-8-sig""\n-\n-    if b""\\x00"" not in head:\n-        return ""utf-8""\n-\n-    if head in (codecs.BOM_UTF32_BE, codecs.BOM_UTF32_LE):\n-        return ""utf-32""\n-\n-    if head[:2] in (codecs.BOM_UTF16_BE, codecs.BOM_UTF16_LE):\n-        return ""utf-16""\n-\n-    if len(head) == 4:\n-        if head[:3] == b""\\x00\\x00\\x00"":\n-            return ""utf-32-be""\n-\n-        if head[::2] == b""\\x00\\x00"":\n-            return ""utf-16-be""\n-\n-        if head[1:] == b""\\x00\\x00\\x00"":\n-            return ""utf-32-le""\n-\n-        if head[1::2] == b""\\x00\\x00"":\n-            return ""utf-16-le""\n-\n-    if len(head) == 2:\n-        return ""utf-16-be"" if head.startswith(b""\\x00"") else ""utf-16-le""\n-\n-    return ""utf-8""\n-\n-\n def dumps(obj, app=None, **kwargs):\n     """"""Serialize ``obj`` to a JSON-formatted string. If there is an\n     app context pushed, use the current app\'s configured encoder\n@@ -183,8 +135,7 @@ def dumps(obj, app=None, **kwargs):\n     :class:`JSONEncoder`.\n \n     Takes the same arguments as the built-in :func:`json.dumps`, and\n-    does some extra configuration based on the application. If the\n-    simplejson package is installed, it is preferred.\n+    does some extra configuration based on the application.\n \n     :param obj: Object to serialize to JSON.\n     :param app: App instance to use to configure the JSON encoder.\n@@ -200,8 +151,10 @@ def dumps(obj, app=None, **kwargs):\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n     rv = _json.dumps(obj, **kwargs)\n+\n     if encoding is not None and isinstance(rv, str):\n         rv = rv.encode(encoding)\n+\n     return rv\n \n \n@@ -209,8 +162,10 @@ def dump(obj, fp, app=None, **kwargs):\n     """"""Like :func:`dumps` but writes into a file object.""""""\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n+\n     if encoding is not None:\n         fp = _wrap_writer_for_text(fp, encoding)\n+\n     _json.dump(obj, fp, **kwargs)\n \n \n@@ -221,8 +176,7 @@ def loads(s, app=None, **kwargs):\n     default :class:`JSONDecoder`.\n \n     Takes the same arguments as the built-in :func:`json.loads`, and\n-    does some extra configuration based on the application. If the\n-    simplejson package is installed, it is preferred.\n+    does some extra configuration based on the application.\n \n     :param s: JSON string to deserialize.\n     :param app: App instance to use to configure the JSON decoder.\n@@ -236,21 +190,27 @@ def loads(s, app=None, **kwargs):\n         context for configuration.\n     """"""\n     _load_arg_defaults(kwargs, app=app)\n-    if isinstance(s, bytes):\n-        encoding = kwargs.pop(""encoding"", None)\n-        if encoding is None:\n-            encoding = detect_encoding(s)\n+    encoding = kwargs.pop(""encoding"", None)\n+\n+    if encoding is not None and isinstance(s, bytes):\n         s = s.decode(encoding)\n+\n     return _json.loads(s, **kwargs)\n \n \n def load(fp, app=None, **kwargs):\n     """"""Like :func:`loads` but reads from a file object.""""""\n     _load_arg_defaults(kwargs, app=app)\n-    fp = _wrap_reader_for_text(fp, kwargs.pop(""encoding"", None) or ""utf-8"")\n+    encoding = kwargs.pop(""encoding"", None)\n+    fp = _wrap_reader_for_text(fp, encoding or ""utf-8"")\n     return _json.load(fp, **kwargs)\n \n \n+_htmlsafe_map = str.maketrans(\n+    {""<"": ""\\\\u003c"", "">"": ""\\\\u003e"", ""&"": ""\\\\u0026"", ""\'"": ""\\\\u0027""}\n+)\n+\n+\n def htmlsafe_dumps(obj, **kwargs):\n     """"""Works exactly like :func:`dumps` but is safe for use in ``<script>``\n     tags.  It accepts the same arguments and returns a JSON string.  Note that\n@@ -276,16 +236,7 @@ def htmlsafe_dumps(obj, **kwargs):\n        quoted.  Always single quote attributes if you use the ``|tojson``\n        filter.  Alternatively use ``|tojson|forceescape``.\n     """"""\n-    rv = (\n-        dumps(obj, **kwargs)\n-        .replace(""<"", ""\\\\u003c"")\n-        .replace("">"", ""\\\\u003e"")\n-        .replace(""&"", ""\\\\u0026"")\n-        .replace(""\'"", ""\\\\u0027"")\n-    )\n-    if not _slash_escape:\n-        rv = rv.replace(""\\\\/"", ""/"")\n-    return rv\n+    return dumps(obj, **kwargs).translate(_htmlsafe_map)\n \n \n def htmlsafe_dump(obj, fp, **kwargs):\n'",4.071428571428571,3.3846153846153846
tests/test_helpers.py,tests/test_helpers.py,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","'@@ -13,7 +13,6 @@ from werkzeug.http import parse_cache_control_header\n from werkzeug.http import parse_options_header\n \n import flask\n-from flask import json\n from flask.helpers import get_debug_flag\n from flask.helpers import get_env\n \n@@ -64,26 +63,6 @@ class FixedOffset(datetime.tzinfo):\n \n \n class TestJSON:\n-    @pytest.mark.parametrize(\n-        ""value"", (1, ""t"", True, False, None, [], [1, 2, 3], {}, {""foo"": ""🐍""})\n-    )\n-    @pytest.mark.parametrize(\n-        ""encoding"",\n-        (\n-            ""utf-8"",\n-            ""utf-8-sig"",\n-            ""utf-16-le"",\n-            ""utf-16-be"",\n-            ""utf-16"",\n-            ""utf-32-le"",\n-            ""utf-32-be"",\n-            ""utf-32"",\n-        ),\n-    )\n-    def test_detect_encoding(self, value, encoding):\n-        data = json.dumps(value).encode(encoding)\n-        assert json.loads(data) == value\n-\n     @pytest.mark.parametrize(""debug"", (True, False))\n     def test_bad_request_debug_message(self, app, client, debug):\n         app.config[""DEBUG""] = debug\n'",1.1844660194174756,1.1862745098039216
tox.ini,tox.ini,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,024f0d384cf5bb65c76ac59f8ddce464b2dc2ca1,"'remove simplejson\n\n- remove encoding detection backport, json.loads supports it directly\n- use str.translate instead of multiple str.replace'","'@@ -1,7 +1,7 @@\n [tox]\n envlist =\n     py{38,37,36,py3}\n-    py38-{simplejson,devel,lowest}\n+    py38-{devel,lowest}\n     style\n     docs\n skip_missing_interpreters = true\n@@ -24,8 +24,6 @@ deps =\n     devel: https://github.com/pallets/itsdangerous/archive/master.tar.gz\n     devel: https://github.com/pallets/click/archive/master.tar.gz\n \n-    simplejson: simplejson\n-\n commands =\n     pip install -q -e examples/tutorial[test]\n     pip install -q -e examples/javascript[test]\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,'deprecate JSON encoding options\n\nmake consistent with built-in json module',"'@@ -1,10 +1,11 @@\n import io\n import json as _json\n import uuid\n+import warnings\n from datetime import date\n from datetime import datetime\n \n-from jinja2 import Markup\n+from markupsafe import Markup\n from werkzeug.http import http_date\n \n from ..globals import current_app\n@@ -17,33 +18,6 @@ except ImportError:\n     dataclasses = None\n \n \n-__all__ = [\n-    ""dump"",\n-    ""dumps"",\n-    ""load"",\n-    ""loads"",\n-    ""htmlsafe_dump"",\n-    ""htmlsafe_dumps"",\n-    ""JSONDecoder"",\n-    ""JSONEncoder"",\n-    ""jsonify"",\n-]\n-\n-\n-def _wrap_reader_for_text(fp, encoding):\n-    if isinstance(fp.read(0), bytes):\n-        fp = io.TextIOWrapper(io.BufferedReader(fp), encoding)\n-    return fp\n-\n-\n-def _wrap_writer_for_text(fp, encoding):\n-    try:\n-        fp.write("""")\n-    except TypeError:\n-        fp = io.TextIOWrapper(fp, encoding)\n-    return fp\n-\n-\n class JSONEncoder(_json.JSONEncoder):\n     """"""The default Flask JSON encoder. This one extends the default\n     encoder by also supporting ``datetime``, ``UUID``, ``dataclasses``,\n@@ -83,7 +57,7 @@ class JSONEncoder(_json.JSONEncoder):\n             return dataclasses.asdict(o)\n         if hasattr(o, ""__html__""):\n             return str(o.__html__())\n-        return _json.JSONEncoder.default(self, o)\n+        return super().default(self, o)\n \n \n class JSONDecoder(_json.JSONDecoder):\n@@ -101,13 +75,9 @@ def _dump_arg_defaults(kwargs, app=None):\n \n     if app:\n         bp = app.blueprints.get(request.blueprint) if request else None\n-        kwargs.setdefault(\n-            ""cls"", bp.json_encoder if bp and bp.json_encoder else app.json_encoder\n-        )\n-\n-        if not app.config[""JSON_AS_ASCII""]:\n-            kwargs.setdefault(""ensure_ascii"", False)\n-\n+        cls = bp.json_encoder if bp and bp.json_encoder else app.json_encoder\n+        kwargs.setdefault(""cls"", cls)\n+        kwargs.setdefault(""ensure_ascii"", app.config[""JSON_AS_ASCII""])\n         kwargs.setdefault(""sort_keys"", app.config[""JSON_SORT_KEYS""])\n     else:\n         kwargs.setdefault(""sort_keys"", True)\n@@ -121,9 +91,8 @@ def _load_arg_defaults(kwargs, app=None):\n \n     if app:\n         bp = app.blueprints.get(request.blueprint) if request else None\n-        kwargs.setdefault(\n-            ""cls"", bp.json_decoder if bp and bp.json_decoder else app.json_decoder\n-        )\n+        cls = bp.json_decoder if bp and bp.json_decoder else app.json_decoder\n+        kwargs.setdefault(""cls"", cls)\n     else:\n         kwargs.setdefault(""cls"", JSONDecoder)\n \n@@ -152,8 +121,15 @@ def dumps(obj, app=None, **kwargs):\n     encoding = kwargs.pop(""encoding"", None)\n     rv = _json.dumps(obj, **kwargs)\n \n-    if encoding is not None and isinstance(rv, str):\n-        rv = rv.encode(encoding)\n+    if encoding is not None:\n+        warnings.warn(\n+            ""\'encoding\' is deprecated and will be removed in 2.1."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+\n+        if isinstance(rv, str):\n+            return rv.encode(encoding)\n \n     return rv\n \n@@ -162,9 +138,21 @@ def dump(obj, fp, app=None, **kwargs):\n     """"""Like :func:`dumps` but writes into a file object.""""""\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n+    show_warning = encoding is not None\n \n-    if encoding is not None:\n-        fp = _wrap_writer_for_text(fp, encoding)\n+    try:\n+        fp.write("""")\n+    except TypeError:\n+        show_warning = True\n+        fp = io.TextIOWrapper(fp, encoding or ""utf-8"")\n+\n+    if show_warning:\n+        warnings.warn(\n+            ""Writing to a binary file, and the \'encoding\' argument, is""\n+            "" deprecated and will be removed in 2.1."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n \n     _json.dump(obj, fp, **kwargs)\n \n@@ -192,8 +180,16 @@ def loads(s, app=None, **kwargs):\n     _load_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n \n-    if encoding is not None and isinstance(s, bytes):\n-        s = s.decode(encoding)\n+    if encoding is not None:\n+        warnings.warn(\n+            ""\'encoding\' is deprecated and will be removed in 2.1. The""\n+            "" data must be a string or UTF-8 bytes."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+\n+        if isinstance(s, bytes):\n+            s = s.decode(encoding)\n \n     return _json.loads(s, **kwargs)\n \n@@ -202,7 +198,18 @@ def load(fp, app=None, **kwargs):\n     """"""Like :func:`loads` but reads from a file object.""""""\n     _load_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n-    fp = _wrap_reader_for_text(fp, encoding or ""utf-8"")\n+\n+    if encoding is not None:\n+        warnings.warn(\n+            ""\'encoding\' is deprecated and will be removed in 2.1. The""\n+            "" file must be text mode, or binary mode with UTF-8 bytes."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+\n+        if isinstance(fp.read(0), bytes):\n+            fp = io.TextIOWrapper(fp, encoding)\n+\n     return _json.load(fp, **kwargs)\n \n \n@@ -241,7 +248,7 @@ def htmlsafe_dumps(obj, **kwargs):\n \n def htmlsafe_dump(obj, fp, **kwargs):\n     """"""Like :func:`htmlsafe_dumps` but writes into a file object.""""""\n-    fp.write(str(htmlsafe_dumps(obj, **kwargs)))\n+    fp.write(htmlsafe_dumps(obj, **kwargs))\n \n \n def jsonify(*args, **kwargs):\n@@ -293,7 +300,6 @@ def jsonify(*args, **kwargs):\n \n     .. versionadded:: 0.2\n     """"""\n-\n     indent = None\n     separators = ("","", "":"")\n \n'",3.3846153846153846,3.8181818181818183
tests/test_helpers.py,tests/test_helpers.py,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,c43edfc7c08b8dbe883761bec14fa75ee7db1bf3,'deprecate JSON encoding options\n\nmake consistent with built-in json module',"'@@ -232,7 +232,6 @@ class TestJSON:\n         render = flask.render_template_string\n         rv = flask.json.htmlsafe_dumps(""</script>"")\n         assert rv == \'""\\\\u003c/script\\\\u003e""\'\n-        assert type(rv) is str\n         rv = render(\'{{ ""</script>""|tojson }}\')\n         assert rv == \'""\\\\u003c/script\\\\u003e""\'\n         rv = render(\'{{ ""<\\0/script>""|tojson }}\')\n'",1.1862745098039216,1.1862745098039216
CHANGES.rst,CHANGES.rst,756902cca1bab981fbec0ea759d93239d9a711f0,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,'update json docs',"""@@ -6,6 +6,9 @@ Version 2.0.0\n Unreleased\n \n -   Drop support for Python 2 and 3.5.\n+-   JSON support no longer uses simplejson. To use another JSON module,\n+    override ``app.json_encoder`` and ``json_decoder``. :issue:`3555`\n+-   The ``encoding`` option to JSON functions is deprecated. :pr:`3562`\n -   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n     setting the session cookie name dynamically. :pr:`3369`\n -   Add :meth:`Config.from_file` to load config using arbitrary file\n@@ -19,9 +22,6 @@ Unreleased\n     200 OK and an empty file. :issue:`3358`\n -   When using ad-hoc certificates, check for the cryptography library\n     instead of PyOpenSSL. :pr:`3492`\n--   JSON support no longer uses simplejson if it's installed. To use\n-    another JSON module, override ``app.json_encoder`` and\n-    ``json_decoder``. :issue:`3555`\n \n \n Version 1.1.2\n""",0,0
docs/api.rst,docs/api.rst,756902cca1bab981fbec0ea759d93239d9a711f0,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,'update json docs',"""@@ -279,45 +279,34 @@ Message Flashing\n \n .. autofunction:: get_flashed_messages\n \n+\n JSON Support\n ------------\n \n .. module:: flask.json\n \n-Flask uses the built-in :mod:`json` module for the JSON implementation.\n-It will delegate access to the current application's JSON encoders and\n-decoders for easier customization.\n-\n-For usage examples, read the :mod:`json` documentation in the standard\n-library.  The following extensions are by default applied to the stdlib's\n-JSON module:\n+Flask uses the built-in :mod:`json` module for handling JSON. It will\n+use the current blueprint's or application's JSON encoder and decoder\n+for easier customization. By default it handles some extra data types:\n \n-1.  ``datetime`` objects are serialized as :rfc:`822` strings.\n-2.  Any object with an ``__html__`` method (like :class:`~flask.Markup`)\n-    will have that method called and then the return value is serialized\n-    as string.\n+-   :class:`datetime.datetime` and :class:`datetime.date` are serialized\n+    to :rfc:`822` strings. This is the same as the HTTP date format.\n+-   :class:`uuid.UUID` is serialized to a string.\n+-   :class:`dataclasses.dataclass` is passed to\n+    :func:`dataclasses.asdict`.\n+-   :class:`~markupsafe.Markup` (or any object with a ``__html__``\n+    method) will call the ``__html__`` method to get a string.\n \n-The :func:`~htmlsafe_dumps` function of this json module is also available\n-as a filter called ``|tojson`` in Jinja2.  Note that in versions of Flask prior\n-to Flask 0.10, you must disable escaping with ``|safe`` if you intend to use\n-``|tojson`` output inside ``script`` tags. In Flask 0.10 and above, this\n-happens automatically (but it's harmless to include ``|safe`` anyway).\n+:func:`~htmlsafe_dumps` is also available as the ``|tojson`` template\n+filter. The filter marks the output with ``|safe`` so it can be used\n+inside ``script`` tags.\n \n .. sourcecode:: html+jinja\n \n     <script type=text/javascript>\n-        doSomethingWith({{ user.username|tojson|safe }});\n+        renderChart({{ axis_data|tojson }});\n     </script>\n \n-.. admonition:: Auto-Sort JSON Keys\n-\n-    The configuration variable :data:`JSON_SORT_KEYS` can be set to\n-    ``False`` to stop Flask from auto-sorting keys. By default sorting\n-    is enabled and outside of the app context sorting is turned on.\n-\n-    Notice that disabling key sorting can cause issues when using\n-    content  based HTTP caches and Python's hash randomization feature.\n-\n .. autofunction:: jsonify\n \n .. autofunction:: dumps\n@@ -336,6 +325,7 @@ happens automatically (but it's harmless to include ``|safe`` anyway).\n \n .. automodule:: flask.json.tag\n \n+\n Template Rendering\n ------------------\n \n""",1.1875,1.1875
src/flask/json/__init__.py,src/flask/json/__init__.py,756902cca1bab981fbec0ea759d93239d9a711f0,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,'update json docs',"'@@ -19,33 +19,27 @@ except ImportError:\n \n \n class JSONEncoder(_json.JSONEncoder):\n-    """"""The default Flask JSON encoder. This one extends the default\n-    encoder by also supporting ``datetime``, ``UUID``, ``dataclasses``,\n-    and ``Markup`` objects.\n-\n-    ``datetime`` objects are serialized as RFC 822 datetime strings.\n-    This is the same as the HTTP date format.\n-\n-    In order to support more data types, override the :meth:`default`\n-    method.\n+    """"""The default JSON encoder. Handles extra types compared to the\n+    built-in :class:`json.JSONEncoder`.\n+\n+    -   :class:`datetime.datetime` and :class:`datetime.date` are\n+        serialized to :rfc:`822` strings. This is the same as the HTTP\n+        date format.\n+    -   :class:`uuid.UUID` is serialized to a string.\n+    -   :class:`dataclasses.dataclass` is passed to\n+        :func:`dataclasses.asdict`.\n+    -   :class:`~markupsafe.Markup` (or any object with a ``__html__``\n+        method) will call the ``__html__`` method to get a string.\n+\n+    Assign a subclass of this to :attr:`flask.Flask.json_encoder` or\n+    :attr:`flask.Blueprint.json_encoder` to override the default.\n     """"""\n \n     def default(self, o):\n-        """"""Implement this method in a subclass such that it returns a\n-        serializable object for ``o``, or calls the base implementation (to\n-        raise a :exc:`TypeError`).\n-\n-        For example, to support arbitrary iterators, you could implement\n-        default like this::\n-\n-            def default(self, o):\n-                try:\n-                    iterable = iter(o)\n-                except TypeError:\n-                    pass\n-                else:\n-                    return list(iterable)\n-                return JSONEncoder.default(self, o)\n+        """"""Convert ``o`` to a JSON serializable type. See\n+        :meth:`json.JSONEncoder.default`. Python does not support\n+        overriding how basic types like ``str`` or ``list`` are\n+        serialized, they are handled before this method.\n         """"""\n         if isinstance(o, datetime):\n             return http_date(o.utctimetuple())\n@@ -61,10 +55,13 @@ class JSONEncoder(_json.JSONEncoder):\n \n \n class JSONDecoder(_json.JSONDecoder):\n-    """"""The default JSON decoder.  This one does not change the behavior from\n-    the default decoder.  Consult the :mod:`json` documentation\n-    for more information.  This decoder is not only used for the load\n-    functions of this module but also :attr:`~flask.Request`.\n+    """"""The default JSON decoder.\n+\n+    This does not change any behavior from the built-in\n+    :class:`json.JSONDecoder`.\n+\n+    Assign a subclass of this to :attr:`flask.Flask.json_decoder` or\n+    :attr:`flask.Blueprint.json_decoder` to override the default.\n     """"""\n \n \n@@ -98,22 +95,20 @@ def _load_arg_defaults(kwargs, app=None):\n \n \n def dumps(obj, app=None, **kwargs):\n-    """"""Serialize ``obj`` to a JSON-formatted string. If there is an\n-    app context pushed, use the current app\'s configured encoder\n-    (:attr:`~flask.Flask.json_encoder`), or fall back to the default\n-    :class:`JSONEncoder`.\n+    """"""Serialize an object to a string of JSON.\n \n-    Takes the same arguments as the built-in :func:`json.dumps`, and\n-    does some extra configuration based on the application.\n+    Takes the same arguments as the built-in :func:`json.dumps`, with\n+    some defaults from application configuration.\n \n     :param obj: Object to serialize to JSON.\n-    :param app: App instance to use to configure the JSON encoder.\n-        Uses ``current_app`` if not given, and falls back to the default\n-        encoder when not in an app context.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    :param app: Use this app\'s config instead of the active app context\n+        or defaults.\n+    :param kwargs: Extra arguments passed to func:`json.dumps`.\n \n-    .. versionchanged:: 1.0.3\n+    .. versionchanged:: 2.0\n+        ``encoding`` is deprecated and will be removed in 2.1.\n \n+    .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n@@ -135,7 +130,21 @@ def dumps(obj, app=None, **kwargs):\n \n \n def dump(obj, fp, app=None, **kwargs):\n-    """"""Like :func:`dumps` but writes into a file object.""""""\n+    """"""Serialize an object to JSON written to a file object.\n+\n+    Takes the same arguments as the built-in :func:`json.dump`, with\n+    some defaults from application configuration.\n+\n+    :param obj: Object to serialize to JSON.\n+    :param fp: File object to write JSON to.\n+    :param app: Use this app\'s config instead of the active app context\n+        or defaults.\n+    :param kwargs: Extra arguments passed to func:`json.dump`.\n+\n+    .. versionchanged:: 2.0\n+        Writing to a binary file, and the ``encoding`` argument, is\n+        deprecated and will be removed in 2.1.\n+    """"""\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n     show_warning = encoding is not None\n@@ -158,22 +167,21 @@ def dump(obj, fp, app=None, **kwargs):\n \n \n def loads(s, app=None, **kwargs):\n-    """"""Deserialize an object from a JSON-formatted string ``s``. If\n-    there is an app context pushed, use the current app\'s configured\n-    decoder (:attr:`~flask.Flask.json_decoder`), or fall back to the\n-    default :class:`JSONDecoder`.\n+    """"""Deserialize an object from a string of JSON.\n \n-    Takes the same arguments as the built-in :func:`json.loads`, and\n-    does some extra configuration based on the application.\n+    Takes the same arguments as the built-in :func:`json.loads`, with\n+    some defaults from application configuration.\n \n     :param s: JSON string to deserialize.\n-    :param app: App instance to use to configure the JSON decoder.\n-        Uses ``current_app`` if not given, and falls back to the default\n-        encoder when not in an app context.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    :param app: Use this app\'s config instead of the active app context\n+        or defaults.\n+    :param kwargs: Extra arguments passed to func:`json.dump`.\n \n-    .. versionchanged:: 1.0.3\n+    .. versionchanged:: 2.0\n+        ``encoding`` is deprecated and will be removed in 2.1. The data\n+        must be a string or UTF-8 bytes.\n \n+    .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n@@ -195,7 +203,20 @@ def loads(s, app=None, **kwargs):\n \n \n def load(fp, app=None, **kwargs):\n-    """"""Like :func:`loads` but reads from a file object.""""""\n+    """"""Deserialize an object from JSON read from a file object.\n+\n+    Takes the same arguments as the built-in :func:`json.load`, with\n+    some defaults from application configuration.\n+\n+    :param fp: File object to read JSON from.\n+    :param app: Use this app\'s config instead of the active app context\n+        or defaults.\n+    :param kwargs: Extra arguments passed to func:`json.load`.\n+\n+    .. versionchanged:: 2.0\n+        ``encoding`` is deprecated and will be removed in 2.1. The file\n+        must be text mode, or binary mode with UTF-8 bytes.\n+    """"""\n     _load_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n \n@@ -219,84 +240,80 @@ _htmlsafe_map = str.maketrans(\n \n \n def htmlsafe_dumps(obj, **kwargs):\n-    """"""Works exactly like :func:`dumps` but is safe for use in ``<script>``\n-    tags.  It accepts the same arguments and returns a JSON string.  Note that\n-    this is available in templates through the ``|tojson`` filter which will\n-    also mark the result as safe.  Due to how this function escapes certain\n-    characters this is safe even if used outside of ``<script>`` tags.\n-\n-    The following characters are escaped in strings:\n+    """"""Serialize an object to a string of JSON, replacing HTML-unsafe\n+    characters with Unicode escapes. Otherwise behaves the same as\n+    :func:`dumps`.\n \n-    -   ``<``\n-    -   ``>``\n-    -   ``&``\n-    -   ``\'``\n+    This is available in templates as the ``|tojson`` filter, which will\n+    also mark the result with ``|safe``.\n \n-    This makes it safe to embed such strings in any place in HTML with the\n-    notable exception of double quoted attributes.  In that case single\n-    quote your attributes or HTML escape it in addition.\n+    The returned string is safe to render in HTML documents and\n+    ``<script>`` tags. The exception is in HTML attributes that are\n+    double quoted; either use single quotes or the ``|forceescape``\n+    filter.\n \n     .. versionchanged:: 0.10\n-       This function\'s return value is now always safe for HTML usage, even\n-       if outside of script tags or if used in XHTML.  This rule does not\n-       hold true when using this function in HTML attributes that are double\n-       quoted.  Always single quote attributes if you use the ``|tojson``\n-       filter.  Alternatively use ``|tojson|forceescape``.\n+        Single quotes are escaped, making this safe to use in HTML,\n+        ``<script>`` tags, and single-quoted attributes without further\n+        escaping.\n     """"""\n     return dumps(obj, **kwargs).translate(_htmlsafe_map)\n \n \n def htmlsafe_dump(obj, fp, **kwargs):\n-    """"""Like :func:`htmlsafe_dumps` but writes into a file object.""""""\n+    """"""Serialize an object to JSON written to a file object, replacing\n+    HTML-unsafe characters with Unicode escapes. See\n+    :func:`htmlsafe_dumps` and :func:`dumps`.\n+    """"""\n     fp.write(htmlsafe_dumps(obj, **kwargs))\n \n \n def jsonify(*args, **kwargs):\n-    """"""This function wraps :func:`dumps` to add a few enhancements that make\n-    life easier.  It turns the JSON output into a :class:`~flask.Response`\n-    object with the :mimetype:`application/json` mimetype.  For convenience, it\n-    also converts multiple arguments into an array or multiple keyword arguments\n-    into a dict.  This means that both ``jsonify(1,2,3)`` and\n-    ``jsonify([1,2,3])`` serialize to ``[1,2,3]``.\n+    """"""Serialize data to JSON and wrap it in a :class:`~flask.Response`\n+    with the :mimetype:`application/json` mimetype.\n \n-    For clarity, the JSON serialization behavior has the following differences\n-    from :func:`dumps`:\n+    Uses :func:`dumps` to serialize the data, but ``args`` and\n+    ``kwargs`` are treated as data rather than arguments to\n+    :func:`json.dumps`.\n \n-    1. Single argument: Passed straight through to :func:`dumps`.\n-    2. Multiple arguments: Converted to an array before being passed to\n-       :func:`dumps`.\n-    3. Multiple keyword arguments: Converted to a dict before being passed to\n-       :func:`dumps`.\n-    4. Both args and kwargs: Behavior undefined and will throw an exception.\n+    1.  Single argument: Treated as a single value.\n+    2.  Multiple arguments: Treated as a list of values.\n+        ``jsonify(1, 2, 3)`` is the same as ``jsonify([1, 2, 3])``.\n+    3.  Keyword arguments: Treated as a dict of values.\n+        ``jsonify(data=data, errors=errors)`` is the same as\n+        ``jsonify({""data"": data, ""errors"": errors})``.\n+    4.  Passing both arguments and keyword arguments is not allowed as\n+        it\'s not clear what should happen.\n \n-    Example usage::\n+    .. code-block:: python\n \n         from flask import jsonify\n \n-        @app.route(\'/_get_current_user\')\n+        @app.route(""/users/me"")\n         def get_current_user():\n-            return jsonify(username=g.user.username,\n-                           email=g.user.email,\n-                           id=g.user.id)\n+            return jsonify(\n+                username=g.user.username,\n+                email=g.user.email,\n+                id=g.user.id,\n+            )\n \n-    This will send a JSON response like this to the browser::\n+    Will return a JSON response like this:\n+\n+    .. code-block:: javascript\n \n         {\n-            ""username"": ""admin"",\n-            ""email"": ""admin@localhost"",\n-            ""id"": 42\n+          ""username"": ""admin"",\n+          ""email"": ""admin@localhost"",\n+          ""id"": 42\n         }\n \n+    The default output omits indents and spaces after separators. In\n+    debug mode or if :data:`JSONIFY_PRETTYPRINT_REGULAR` is ``True``,\n+    the output will be formatted to be easier to read.\n \n     .. versionchanged:: 0.11\n         Added support for serializing top-level arrays. This introduces\n-        a security risk in ancient browsers. See :ref:`security-json`\n-        for details.\n-\n-    This function\'s response will be pretty printed if the\n-    ``JSONIFY_PRETTYPRINT_REGULAR`` config parameter is set to True or the\n-    Flask app is running in debug mode. Compressed (not pretty) formatting\n-    currently means no indents and no spaces after separators.\n+        a security risk in ancient browsers. See :ref:`security-json`.\n \n     .. versionadded:: 0.2\n     """"""\n'",3.8181818181818183,3.8181818181818183
src/flask/json/tag.py,src/flask/json/tag.py,756902cca1bab981fbec0ea759d93239d9a711f0,8b5f760b7285c863d5c7a4ee10adb5eb7ac60a05,'update json docs',"'@@ -45,7 +45,7 @@ from base64 import b64encode\n from datetime import datetime\n from uuid import UUID\n \n-from jinja2 import Markup\n+from markupsafe import Markup\n from werkzeug.http import http_date\n from werkzeug.http import parse_date\n \n@@ -167,9 +167,9 @@ class TagBytes(JSONTag):\n \n \n class TagMarkup(JSONTag):\n-    """"""Serialize anything matching the :class:`~flask.Markup` API by\n+    """"""Serialize anything matching the :class:`~markupsafe.Markup` API by\n     having a ``__html__`` method to the result of that method. Always\n-    deserializes to an instance of :class:`~flask.Markup`.""""""\n+    deserializes to an instance of :class:`~markupsafe.Markup`.""""""\n \n     __slots__ = ()\n     key = "" m""\n@@ -222,7 +222,7 @@ class TaggedJSONSerializer:\n     * :class:`dict`\n     * :class:`tuple`\n     * :class:`bytes`\n-    * :class:`~flask.Markup`\n+    * :class:`~markupsafe.Markup`\n     * :class:`~uuid.UUID`\n     * :class:`~datetime.datetime`\n     """"""\n'",1.4242424242424243,1.4242424242424243
docs/api.rst,docs/api.rst,7e3b8abf992be711e2961bd9155bf1ae96c81b74,e69b49bd3d2df261316c1c5dbdd53b96d93d2f56,'update docs requirements\n\nremove duplicate docs',"""@@ -31,40 +31,6 @@ Incoming Request Data\n    :inherited-members:\n    :exclude-members: json_module\n \n-   .. attribute:: environ\n-\n-      The underlying WSGI environment.\n-\n-   .. attribute:: path\n-   .. attribute:: full_path\n-   .. attribute:: script_root\n-   .. attribute:: url\n-   .. attribute:: base_url\n-   .. attribute:: url_root\n-\n-      Provides different ways to look at the current :rfc:`3987`.\n-      Imagine your application is listening on the following application\n-      root::\n-\n-          http://www.example.com/myapplication\n-\n-      And a user requests the following URI::\n-\n-          http://www.example.com/myapplication/%CF%80/page.html?x=y\n-\n-      In this case the values of the above mentioned attributes would be\n-      the following:\n-\n-      ============= ======================================================\n-      `path`        ``'/π/page.html'``\n-      `full_path`   ``'/π/page.html?x=y'``\n-      `script_root` ``'/myapplication'``\n-      `base_url`    ``'http://www.example.com/myapplication/π/page.html'``\n-      `url`         ``'http://www.example.com/myapplication/π/page.html?x=y'``\n-      `url_root`    ``'http://www.example.com/myapplication/'``\n-      ============= ======================================================\n-\n-\n .. attribute:: request\n \n    To access incoming request data, you can use the global `request`\n""",1.1875,1.1875
docs/requirements.txt,docs/requirements.txt,7e3b8abf992be711e2961bd9155bf1ae96c81b74,e69b49bd3d2df261316c1c5dbdd53b96d93d2f56,'update docs requirements\n\nremove duplicate docs',"'@@ -1,5 +1,5 @@\n-Sphinx~=2.2.0\n-Pallets-Sphinx-Themes~=1.2.2\n+Sphinx~=3.0.0\n+Pallets-Sphinx-Themes~=1.2.3\n sphinxcontrib-log-cabinet~=1.0.1\n sphinx-issues~=1.2.0\n-packaging~=19.2\n+packaging~=20.3\n'",0,0
CHANGES.rst,CHANGES.rst,fcac7f11cf5fbdaa43c3a8c305b31cf0a43a70d3,7e3b8abf992be711e2961bd9155bf1ae96c81b74,'deprecate passing script_info to factory',"""@@ -9,6 +9,9 @@ Unreleased\n -   JSON support no longer uses simplejson. To use another JSON module,\n     override ``app.json_encoder`` and ``json_decoder``. :issue:`3555`\n -   The ``encoding`` option to JSON functions is deprecated. :pr:`3562`\n+-   Passing ``script_info`` to app factory functions is deprecated. This\n+    was not portable outside the ``flask`` command. Use\n+    ``click.get_current_context().obj`` if it's needed. :issue:`3552`\n -   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n     setting the session cookie name dynamically. :pr:`3369`\n -   Add :meth:`Config.from_file` to load config using arbitrary file\n""",0,0
docs/cli.rst,docs/cli.rst,fcac7f11cf5fbdaa43c3a8c305b31cf0a43a70d3,7e3b8abf992be711e2961bd9155bf1ae96c81b74,'deprecate passing script_info to factory',"'@@ -75,13 +75,9 @@ Within the given import, the command looks for an application instance named\n found, the command looks for a factory function named ``create_app`` or\n ``make_app`` that returns an instance.\n \n-When calling an application factory, if the factory takes an argument named\n-``script_info``, then the :class:`~cli.ScriptInfo` instance is passed as a\n-keyword argument. If the application factory takes only one argument and no\n-parentheses follow the factory name, the :class:`~cli.ScriptInfo` instance\n-is passed as a positional argument. If parentheses follow the factory name,\n-their contents are parsed as Python literals and passes as arguments to the\n-function. This means that strings must still be in quotes.\n+If parentheses follow the factory name, their contents are parsed as\n+Python literals and passed as arguments to the function. This means that\n+strings must still be in quotes.\n \n \n Run the Development Server\n'",0,0
src/flask/cli.py,src/flask/cli.py,fcac7f11cf5fbdaa43c3a8c305b31cf0a43a70d3,7e3b8abf992be711e2961bd9155bf1ae96c81b74,'deprecate passing script_info to factory',"'@@ -5,6 +5,7 @@ import platform\n import re\n import sys\n import traceback\n+import warnings\n from functools import update_wrapper\n from operator import attrgetter\n from threading import Lock\n@@ -91,14 +92,22 @@ def call_factory(script_info, app_factory, arguments=()):\n     the app_factory depending on that and the arguments provided.\n     """"""\n     args_spec = inspect.getfullargspec(app_factory)\n-    arg_names = args_spec.args\n-    arg_defaults = args_spec.defaults\n \n-    if ""script_info"" in arg_names:\n+    if ""script_info"" in args_spec.args:\n+        warnings.warn(\n+            ""The \'script_info\' argument is deprecated and will not be""\n+            "" passed to the app factory function in 2.1."",\n+            DeprecationWarning,\n+        )\n         return app_factory(*arguments, script_info=script_info)\n     elif arguments:\n         return app_factory(*arguments)\n-    elif not arguments and len(arg_names) == 1 and arg_defaults is None:\n+    elif not arguments and len(args_spec.args) == 1 and args_spec.defaults is None:\n+        warnings.warn(\n+            ""Script info is deprecated and will not be passed as the""\n+            "" first argument to the app factory function in 2.1."",\n+            DeprecationWarning,\n+        )\n         return app_factory(script_info)\n \n     return app_factory()\n@@ -131,10 +140,8 @@ def _called_with_wrong_args(factory):\n \n \n def find_app_by_string(script_info, module, app_name):\n-    """"""Checks if the given string is a variable name or a function. If it is a\n-    function, it checks for specified arguments and whether it takes a\n-    ``script_info`` argument and calls the function with the appropriate\n-    arguments.\n+    """"""Check if the given string is a variable name or a function. Call\n+    a function to get the app instance, or return the variable directly.\n     """"""\n     from . import Flask\n \n'",4.083333333333333,4.083333333333333
tests/test_apps/cliapp/factory.py,tests/test_apps/cliapp/factory.py,fcac7f11cf5fbdaa43c3a8c305b31cf0a43a70d3,7e3b8abf992be711e2961bd9155bf1ae96c81b74,'deprecate passing script_info to factory',"'@@ -9,9 +9,5 @@ def create_app2(foo, bar):\n     return Flask(""_"".join([""app2"", foo, bar]))\n \n \n-def create_app3(foo, script_info):\n-    return Flask(""_"".join([""app3"", foo, script_info.data[""test""]]))\n-\n-\n def no_app():\n     pass\n'",1.0,1.0
tests/test_cli.py,tests/test_cli.py,fcac7f11cf5fbdaa43c3a8c305b31cf0a43a70d3,7e3b8abf992be711e2961bd9155bf1ae96c81b74,'deprecate passing script_info to factory',"'@@ -67,32 +67,40 @@ def test_find_best_app(test_apps):\n         def create_app():\n             return Flask(""appname"")\n \n-    assert isinstance(find_best_app(script_info, Module), Flask)\n-    assert find_best_app(script_info, Module).name == ""appname""\n+    app = find_best_app(script_info, Module)\n+    assert isinstance(app, Flask)\n+    assert app.name == ""appname""\n \n     class Module:\n         @staticmethod\n         def create_app(foo):\n             return Flask(""appname"")\n \n-    assert isinstance(find_best_app(script_info, Module), Flask)\n-    assert find_best_app(script_info, Module).name == ""appname""\n+    with pytest.deprecated_call(match=""Script info""):\n+        app = find_best_app(script_info, Module)\n+\n+    assert isinstance(app, Flask)\n+    assert app.name == ""appname""\n \n     class Module:\n         @staticmethod\n         def create_app(foo=None, script_info=None):\n             return Flask(""appname"")\n \n-    assert isinstance(find_best_app(script_info, Module), Flask)\n-    assert find_best_app(script_info, Module).name == ""appname""\n+    with pytest.deprecated_call(match=""script_info""):\n+        app = find_best_app(script_info, Module)\n+\n+    assert isinstance(app, Flask)\n+    assert app.name == ""appname""\n \n     class Module:\n         @staticmethod\n         def make_app():\n             return Flask(""appname"")\n \n-    assert isinstance(find_best_app(script_info, Module), Flask)\n-    assert find_best_app(script_info, Module).name == ""appname""\n+    app = find_best_app(script_info, Module)\n+    assert isinstance(app, Flask)\n+    assert app.name == ""appname""\n \n     class Module:\n         myapp = Flask(""appname1"")\n@@ -199,15 +207,12 @@ def test_prepare_import(request, value, path, result):\n         (""cliapp.factory"", \'create_app2(""foo"", ""bar"")\', ""app2_foo_bar""),\n         # trailing comma space\n         (""cliapp.factory"", \'create_app2(""foo"", ""bar"", )\', ""app2_foo_bar""),\n-        # takes script_info\n-        (""cliapp.factory"", \'create_app3(""foo"")\', ""app3_foo_spam""),\n         # strip whitespace\n         (""cliapp.factory"", "" create_app () "", ""app""),\n     ),\n )\n def test_locate_app(test_apps, iname, aname, result):\n     info = ScriptInfo()\n-    info.data[""test""] = ""spam""\n     assert locate_app(info, iname, aname).name == result\n \n \n@@ -286,7 +291,7 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert app.name == ""testapp""\n     assert obj.load_app() is app\n \n-    def create_app(info):\n+    def create_app():\n         return Flask(""createapp"")\n \n     obj = ScriptInfo(create_app=create_app)\n@@ -324,7 +329,7 @@ def test_with_appcontext(runner):\n     def testcmd():\n         click.echo(current_app.name)\n \n-    obj = ScriptInfo(create_app=lambda info: Flask(""testapp""))\n+    obj = ScriptInfo(create_app=lambda: Flask(""testapp""))\n \n     result = runner.invoke(testcmd, obj=obj)\n     assert result.exit_code == 0\n@@ -350,7 +355,7 @@ def test_appgroup(runner):\n     def test2():\n         click.echo(current_app.name)\n \n-    obj = ScriptInfo(create_app=lambda info: Flask(""testappgroup""))\n+    obj = ScriptInfo(create_app=lambda: Flask(""testappgroup""))\n \n     result = runner.invoke(cli, [""test""], obj=obj)\n     assert result.exit_code == 0\n@@ -364,7 +369,7 @@ def test_appgroup(runner):\n def test_flaskgroup(runner):\n     """"""Test FlaskGroup.""""""\n \n-    def create_app(info):\n+    def create_app():\n         return Flask(""flaskgroup"")\n \n     @click.group(cls=FlaskGroup, create_app=create_app)\n@@ -384,7 +389,7 @@ def test_flaskgroup(runner):\n def test_flaskgroup_debug(runner, set_debug_flag):\n     """"""Test FlaskGroup debug flag behavior.""""""\n \n-    def create_app(info):\n+    def create_app():\n         app = Flask(""flaskgroup"")\n         app.debug = True\n         return app\n@@ -405,7 +410,7 @@ def test_flaskgroup_debug(runner, set_debug_flag):\n def test_print_exceptions(runner):\n     """"""Print the stacktrace if the CLI.""""""\n \n-    def create_app(info):\n+    def create_app():\n         raise Exception(""oh no"")\n         return Flask(""flaskgroup"")\n \n@@ -422,7 +427,7 @@ def test_print_exceptions(runner):\n class TestRoutes:\n     @pytest.fixture\n     def invoke(self, runner):\n-        def create_app(info):\n+        def create_app():\n             app = Flask(__name__)\n             app.testing = True\n \n@@ -441,7 +446,7 @@ class TestRoutes:\n \n     @pytest.fixture\n     def invoke_no_routes(self, runner):\n-        def create_app(info):\n+        def create_app():\n             app = Flask(__name__, static_folder=None)\n             app.testing = True\n \n'",1.0476190476190477,1.0476190476190477
CHANGES.rst,CHANGES.rst,ff2f71379b719903e462ed6a83801b1736009000,0d04b40d130a49cef0609ac95be48013528e97d9,'use ast to parse FLASK_APP\n\nenables keyword arguments to factory functions',"'@@ -25,6 +25,8 @@ Unreleased\n     200 OK and an empty file. :issue:`3358`\n -   When using ad-hoc certificates, check for the cryptography library\n     instead of PyOpenSSL. :pr:`3492`\n+-   When specifying a factory function with ``FLASK_APP``, keyword\n+    argument can be passed. :issue:`3553`\n \n \n Version 1.1.2\n'",0,0
docs/cli.rst,docs/cli.rst,ff2f71379b719903e462ed6a83801b1736009000,0d04b40d130a49cef0609ac95be48013528e97d9,'use ast to parse FLASK_APP\n\nenables keyword arguments to factory functions',"'@@ -76,8 +76,8 @@ found, the command looks for a factory function named ``create_app`` or\n ``make_app`` that returns an instance.\n \n If parentheses follow the factory name, their contents are parsed as\n-Python literals and passed as arguments to the function. This means that\n-strings must still be in quotes.\n+Python literals and passed as arguments and keyword arguments to the\n+function. This means that strings must still be in quotes.\n \n \n Run the Development Server\n'",0,0
src/flask/cli.py,src/flask/cli.py,ff2f71379b719903e462ed6a83801b1736009000,0d04b40d130a49cef0609ac95be48013528e97d9,'use ast to parse FLASK_APP\n\nenables keyword arguments to factory functions',"'@@ -86,55 +86,60 @@ def find_best_app(script_info, module):\n     )\n \n \n-def call_factory(script_info, app_factory, arguments=()):\n+def call_factory(script_info, app_factory, args=None, kwargs=None):\n     """"""Takes an app factory, a ``script_info` object and  optionally a tuple\n     of arguments. Checks for the existence of a script_info argument and calls\n     the app_factory depending on that and the arguments provided.\n     """"""\n-    args_spec = inspect.getfullargspec(app_factory)\n+    sig = inspect.signature(app_factory)\n+    args = [] if args is None else args\n+    kwargs = {} if kwargs is None else kwargs\n \n-    if ""script_info"" in args_spec.args:\n+    if ""script_info"" in sig.parameters:\n         warnings.warn(\n             ""The \'script_info\' argument is deprecated and will not be""\n             "" passed to the app factory function in 2.1."",\n             DeprecationWarning,\n         )\n-        return app_factory(*arguments, script_info=script_info)\n-    elif arguments:\n-        return app_factory(*arguments)\n-    elif not arguments and len(args_spec.args) == 1 and args_spec.defaults is None:\n+        kwargs[""script_info""] = script_info\n+\n+    if (\n+        not args\n+        and len(sig.parameters) == 1\n+        and next(iter(sig.parameters.values())).default is inspect.Parameter.empty\n+    ):\n         warnings.warn(\n             ""Script info is deprecated and will not be passed as the""\n-            "" first argument to the app factory function in 2.1."",\n+            "" single argument to the app factory function in 2.1."",\n             DeprecationWarning,\n         )\n-        return app_factory(script_info)\n+        args.append(script_info)\n \n-    return app_factory()\n+    return app_factory(*args, **kwargs)\n \n \n-def _called_with_wrong_args(factory):\n+def _called_with_wrong_args(f):\n     """"""Check whether calling a function raised a ``TypeError`` because\n     the call failed or because something in the factory raised the\n     error.\n \n-    :param factory: the factory function that was called\n-    :return: true if the call failed\n+    :param f: The function that was called.\n+    :return: ``True`` if the call failed.\n     """"""\n     tb = sys.exc_info()[2]\n \n     try:\n         while tb is not None:\n-            if tb.tb_frame.f_code is factory.__code__:\n-                # in the factory, it was called successfully\n+            if tb.tb_frame.f_code is f.__code__:\n+                # In the function, it was called successfully.\n                 return False\n \n             tb = tb.tb_next\n \n-        # didn\'t reach the factory\n+        # Didn\'t reach the function.\n         return True\n     finally:\n-        # explicitly delete tb as it is circular referenced\n+        # Delete tb to break a circular reference.\n         # https://docs.python.org/2/library/sys.html#sys.exc_info\n         del tb\n \n@@ -145,37 +150,60 @@ def find_app_by_string(script_info, module, app_name):\n     """"""\n     from . import Flask\n \n-    match = re.match(r""^ *([^ ()]+) *(?:\\((.*?) *,? *\\))? *$"", app_name)\n-\n-    if not match:\n+    # Parse app_name as a single expression to determine if it\'s a valid\n+    # attribute name or function call.\n+    try:\n+        expr = ast.parse(app_name.strip(), mode=""eval"").body\n+    except SyntaxError:\n         raise NoAppException(\n-            f""{app_name!r} is not a valid variable name or function expression.""\n+            f""Failed to parse {app_name!r} as an attribute name or function call.""\n         )\n \n-    name, args = match.groups()\n+    if isinstance(expr, ast.Name):\n+        name = expr.id\n+        args = kwargs = None\n+    elif isinstance(expr, ast.Call):\n+        # Ensure the function name is an attribute name only.\n+        if not isinstance(expr.func, ast.Name):\n+            raise NoAppException(\n+                f""Function reference must be a simple name: {app_name!r}.""\n+            )\n+\n+        name = expr.func.id\n+\n+        # Parse the positional and keyword arguments as literals.\n+        try:\n+            args = [ast.literal_eval(arg) for arg in expr.args]\n+            kwargs = {kw.arg: ast.literal_eval(kw.value) for kw in expr.keywords}\n+        except ValueError:\n+            # literal_eval gives cryptic error messages, show a generic\n+            # message with the full expression instead.\n+            raise NoAppException(\n+                f""Failed to parse arguments as literal values: {app_name!r}.""\n+            )\n+    else:\n+        raise NoAppException(\n+            f""Failed to parse {app_name!r} as an attribute name or function call.""\n+        )\n \n     try:\n         attr = getattr(module, name)\n-    except AttributeError as e:\n-        raise NoAppException(e.args[0])\n+    except AttributeError:\n+        raise NoAppException(\n+            f""Failed to find attribute {name!r} in {module.__name__!r}.""\n+        )\n \n+    # If the attribute is a function, call it with any args and kwargs\n+    # to get the real application.\n     if inspect.isfunction(attr):\n-        if args:\n-            try:\n-                args = ast.literal_eval(f""({args},)"")\n-            except (ValueError, SyntaxError):\n-                raise NoAppException(f""Could not parse the arguments in {app_name!r}."")\n-        else:\n-            args = ()\n-\n         try:\n-            app = call_factory(script_info, attr, args)\n-        except TypeError as e:\n+            app = call_factory(script_info, attr, args, kwargs)\n+        except TypeError:\n             if not _called_with_wrong_args(attr):\n                 raise\n \n             raise NoAppException(\n-                f""{e}\\nThe factory {app_name!r} in module""\n+                f""The factory {app_name!r} in module""\n                 f"" {module.__name__!r} could not be called with the""\n                 "" specified arguments.""\n             )\n@@ -362,8 +390,6 @@ class ScriptInfo:\n         if self._loaded_app is not None:\n             return self._loaded_app\n \n-        app = None\n-\n         if self.create_app is not None:\n             app = call_factory(self, self.create_app)\n         else:\n'",4.083333333333333,4.222222222222222
tests/test_cli.py,tests/test_cli.py,ff2f71379b719903e462ed6a83801b1736009000,0d04b40d130a49cef0609ac95be48013528e97d9,'use ast to parse FLASK_APP\n\nenables keyword arguments to factory functions',"'@@ -203,7 +203,6 @@ def test_prepare_import(request, value, path, result):\n         (""cliapp.factory"", None, ""app""),\n         (""cliapp.factory"", ""create_app"", ""app""),\n         (""cliapp.factory"", ""create_app()"", ""app""),\n-        # no script_info\n         (""cliapp.factory"", \'create_app2(""foo"", ""bar"")\', ""app2_foo_bar""),\n         # trailing comma space\n         (""cliapp.factory"", \'create_app2(""foo"", ""bar"", )\', ""app2_foo_bar""),\n'",1.0476190476190477,1.0476190476190477
src/flask/app.py,src/flask/app.py,846ee2c62e369ed06190b8791088748bd3a83557,2062d984abd3364557a6dcbd3300cfe3e4ecf156,'add assert message for errorhandler exception type',"'@@ -1270,7 +1270,9 @@ class Flask(_PackageBoundObject):\n         else:\n             exc_class = exc_class_or_code\n \n-        assert issubclass(exc_class, Exception)\n+        assert issubclass(\n+            exc_class, Exception\n+        ), ""Custom exceptions must be subclasses of Exception.""\n \n         if issubclass(exc_class, HTTPException):\n             return exc_class, exc_class.code\n'",2.682926829268293,2.682926829268293
tests/test_user_error_handler.py,tests/test_user_error_handler.py,846ee2c62e369ed06190b8791088748bd3a83557,2062d984abd3364557a6dcbd3300cfe3e4ecf156,'add assert message for errorhandler exception type',"'@@ -11,11 +11,19 @@ def test_error_handler_no_match(app, client):\n     class CustomException(Exception):\n         pass\n \n+    class UnacceptableCustomException(BaseException):\n+        pass\n+\n     @app.errorhandler(CustomException)\n     def custom_exception_handler(e):\n         assert isinstance(e, CustomException)\n         return ""custom""\n \n+    with pytest.raises(\n+        AssertionError, match=""Custom exceptions must be subclasses of Exception.""\n+    ):\n+        app.register_error_handler(UnacceptableCustomException, None)\n+\n     @app.errorhandler(500)\n     def handle_500(e):\n         assert isinstance(e, InternalServerError)\n'",1.0454545454545454,1.0454545454545454
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,c432d8b2bcecab32a6ccb2ac3bae8898ec2789f5,d091bb00c0358e9f30006a064f3dbb671b99aeae,'Fix docs link for Flask-Uploads',"'@@ -185,4 +185,4 @@ applications dealing with uploads, there is also a Flask extension called\n blacklisting of extensions and more.\n \n .. _jQuery: https://jquery.com/\n-.. _Flask-Uploads: https://pythonhosted.org/Flask-Uploads/\n+.. _Flask-Uploads: https://flask-uploads.readthedocs.io/en/latest/\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,8e2fb4633ea48b228479a5af6ef23c39c34d68d2,295e1e759f28417b564e5b6c1c65cc19d87c3a02,'reformat contributing doc',"'@@ -3,86 +3,108 @@ How to contribute to Flask\n \n Thank you for considering contributing to Flask!\n \n+\n Support questions\n -----------------\n \n Please, don\'t use the issue tracker for this. Use one of the following\n resources for questions about your own code:\n \n-* The ``#get-help`` channel on our Discord chat: https://discordapp.com/invite/t6rrQZH\n+-   The ``#get-help`` channel on our Discord chat:\n+    https://discord.gg/t6rrQZH\n \n-  * The IRC channel ``#pocoo`` on FreeNode is linked to Discord, but\n-    Discord is preferred.\n+    -   The IRC channel ``#pocoo`` on FreeNode is linked to Discord, but\n+        Discord is preferred.\n \n-* The mailing list flask@python.org for long term discussion or larger issues.\n-* Ask on `Stack Overflow`_. Search with Google first using:\n-  ``site:stackoverflow.com flask {search term, exception message, etc.}``\n+-   The mailing list flask@python.org for long term discussion or larger\n+    issues.\n+-   Ask on `Stack Overflow`_. Search with Google first using:\n+    ``site:stackoverflow.com flask {search term, exception message, etc.}``\n \n .. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?sort=linked\n \n+\n Reporting issues\n ----------------\n \n-- Describe what you expected to happen.\n-- If possible, include a `minimal reproducible example`_ to help us\n-  identify the issue. This also helps check that the issue is not with\n-  your own code.\n-- Describe what actually happened. Include the full traceback if there was an\n-  exception.\n-- List your Python, Flask, and Werkzeug versions. If possible, check if this\n-  issue is already fixed in the repository.\n+-   Describe what you expected to happen.\n+-   If possible, include a `minimal reproducible example`_ to help us\n+    identify the issue. This also helps check that the issue is not with\n+    your own code.\n+-   Describe what actually happened. Include the full traceback if there\n+    was an exception.\n+-   List your Python, Flask, and Werkzeug versions. If possible, check\n+    if this issue is already fixed in the repository.\n \n .. _minimal reproducible example: https://stackoverflow.com/help/minimal-reproducible-example\n \n+\n Submitting patches\n ------------------\n \n-- Use `Black`_ to autoformat your code. This should be done for you as a\n-  git `pre-commit`_ hook, which gets installed when you run ``pip install -e .[dev]``.\n-  You may also wish to use Black\'s `Editor integration`_.\n-- Include tests if your patch is supposed to solve a bug, and explain\n-  clearly under which circumstances the bug happens. Make sure the test fails\n-  without your patch.\n-- Include a string like ""Fixes #123"" in your commit message\n-  (where 123 is the issue you fixed).\n-  See `Closing issues using keywords\n-  <https://help.github.com/articles/creating-a-pull-request/>`__.\n+-   Use `Black`_ to autoformat your code. This should be done for you as\n+    a Git `pre-commit`_ hook, set up below. You may also wish to use\n+    Black\'s `Editor integration`_.\n+-   Include tests if your patch is supposed to solve a bug, and explain\n+    clearly under which circumstances the bug happens. Make sure the\n+    test fails without your patch.\n+-   Include a string like ""Fixes #123"" in your commit message (where 123\n+    is the issue you fixed). See `Closing issues using keywords\n+    <https://help.github.com/articles/creating-a-pull-request/>`__.\n+\n \n First time setup\n ~~~~~~~~~~~~~~~~\n \n-- Download and install the `latest version of git`_.\n-- Configure git with your `username`_ and `email`_::\n+-   Download and install the `latest version of git`_.\n+-   Configure git with your `username`_ and `email`_.\n+\n+    .. code-block:: text\n+\n+        $ git config --global user.name \'your name\'\n+        $ git config --global user.email \'your email\'\n+\n+-   Make sure you have a `GitHub account`_.\n+-   Fork Flask to your GitHub account by clicking the `Fork`_ button.\n+-   `Clone`_ your GitHub fork locally.\n \n-        git config --global user.name \'your name\'\n-        git config --global user.email \'your email\'\n+    .. code-block:: text\n \n-- Make sure you have a `GitHub account`_.\n-- Fork Flask to your GitHub account by clicking the `Fork`_ button.\n-- `Clone`_ your GitHub fork locally::\n+        $ git clone https://github.com/{username}/flask\n+        $ cd flask\n \n-        git clone https://github.com/{username}/flask\n-        cd flask\n+-   Add the main repository as a remote to update later::\n \n-- Add the main repository as a remote to update later::\n+    .. code-block:: text\n \n         git remote add pallets https://github.com/pallets/flask\n         git fetch pallets\n \n-- Create a virtualenv::\n+-   Create a virtualenv.\n+\n+    .. code-block:: text\n+\n+        $ python3 -m venv env\n+        $ . env/bin/activate\n+\n+    On Windows, activating is different.\n+\n+    .. code-block:: text\n+\n+        > env\\Scripts\\activate\n+\n+-   Install Flask in editable mode with development dependencies.\n \n-        python3 -m venv env\n-        . env/bin/activate\n-        # or ""env\\Scripts\\activate"" on Windows\n+    .. code-block:: text\n \n-- Install Flask in editable mode with development dependencies::\n+        $ pip install -e "".[dev]""\n \n-        pip install -e "".[dev]""\n+-   Install the `pre-commit framework`_.\n+-   Install the pre-commit hooks.\n \n-- Install the `pre-commit framework`_.\n-- Install the pre-commit hooks::\n+    .. code-block:: text\n \n-        pre-commit install --install-hooks\n+        $ pre-commit install\n \n .. _GitHub account: https://github.com/join\n .. _latest version of git: https://git-scm.com/downloads\n@@ -92,28 +114,35 @@ First time setup\n .. _Clone: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n .. _pre-commit framework: https://pre-commit.com/#install\n \n+\n Start coding\n ~~~~~~~~~~~~\n \n -   Create a branch to identify the issue you would like to work on. If\n     you\'re submitting a bug or documentation fix, branch off of the\n-    latest "".x"" branch::\n+    latest "".x"" branch.\n+\n+    .. code-block:: text\n \n-        git checkout -b your-branch-name origin/1.0.x\n+        $ git checkout -b your-branch-name origin/1.0.x\n \n     If you\'re submitting a feature addition or change, branch off of the\n-    ""master"" branch::\n+    ""master"" branch.\n+\n+    .. code-block:: text\n \n-        git checkout -b your-branch-name origin/master\n+        $ git checkout -b your-branch-name origin/master\n \n-- Using your favorite editor, make your changes, `committing as you go`_.\n-- Include tests that cover any code changes you make. Make sure the test fails\n-  without your patch. `Run the tests <contributing-testsuite_>`_.\n-- Push your commits to GitHub and `create a pull request`_ by using::\n+-   Using your favorite editor, make your changes,\n+    `committing as you go`_.\n+-   Include tests that cover any code changes you make. Make sure the\n+    test fails without your patch.\n+    `Run the tests <contributing-testsuite_>`_.\n+-   Push your commits to GitHub and `create a pull request`_.\n \n-        git push --set-upstream origin your-branch-name\n+    .. code-block:: text\n \n-- Celebrate 🎉\n+        $ git push --set-upstream origin your-branch-name\n \n .. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n .. _Black: https://black.readthedocs.io\n@@ -121,37 +150,43 @@ Start coding\n .. _pre-commit: https://pre-commit.com\n .. _create a pull request: https://help.github.com/en/articles/creating-a-pull-request\n \n+\n .. _contributing-testsuite: #running-the-tests\n \n Running the tests\n ~~~~~~~~~~~~~~~~~\n \n-Run the basic test suite with::\n+Run the basic test suite with pytest.\n+\n+.. code-block:: text\n \n-    pytest\n+    $ pytest\n \n-This only runs the tests for the current environment. Whether this is relevant\n-depends on which part of Flask you\'re working on. Travis-CI will run the full\n-suite when you submit your pull request.\n+This only runs the tests for the current environment. Whether this is\n+relevant depends on which part of Flask you\'re working on. CI will run\n+the full suite when you submit your pull request.\n \n The full test suite takes a long time to run because it tests multiple\n combinations of Python and dependencies. If you don\'t have a Python\n version installed, it will be skipped with a warning message at the end.\n-Run::\n \n-    tox\n+.. code-block:: text\n+\n+    $ tox\n+\n \n Running test coverage\n ~~~~~~~~~~~~~~~~~~~~~\n \n Generating a report of lines that do not have test coverage can indicate\n-where to start contributing. Run ``pytest`` using ``coverage`` and generate a\n-report on the terminal and as an interactive HTML document::\n+where to start contributing. Run ``pytest`` using ``coverage`` and\n+generate a report on the terminal and as an interactive HTML document.\n+\n+.. code-block:: text\n \n-    coverage run -m pytest\n-    coverage report\n-    coverage html\n-    # then open htmlcov/index.html\n+    $ coverage run -m pytest\n+    $ coverage report\n+    $ coverage html  # then open htmlcov/index.html\n \n Read more about `coverage <https://coverage.readthedocs.io>`_.\n \n@@ -162,11 +197,12 @@ from all runs.\n Building the docs\n ~~~~~~~~~~~~~~~~~\n \n-Build the docs in the ``docs`` directory using Sphinx::\n+Build the docs in the ``docs`` directory using Sphinx.\n+\n+.. code-block:: text\n \n-    cd docs\n-    pip install -r requirements.txt\n-    make html\n+    $ cd docs\n+    $ make html\n \n Open ``_build/html/index.html`` in your browser to view the docs.\n \n@@ -176,22 +212,23 @@ Read more about `Sphinx <https://www.sphinx-doc.org/en/master/>`_.\n Caution: zero-padded file modes\n -------------------------------\n \n-This repository contains several zero-padded file modes that may cause issues\n-when pushing this repository to git hosts other than GitHub. Fixing this is\n-destructive to the commit history, so we suggest ignoring these warnings. If it\n-fails to push and you\'re using a self-hosted git service like GitLab, you can\n-turn off repository checks in the admin panel.\n+This repository contains several zero-padded file modes that may cause\n+issues when pushing this repository to Git hosts other than GitHub.\n+Fixing this is destructive to the commit history, so we suggest ignoring\n+these warnings. If it fails to push and you\'re using a self-hosted Git\n+service like GitLab, you can turn off repository checks in the admin\n+panel.\n \n-These files can also cause issues while cloning. If you have ::\n+These files can also cause issues while cloning if you have\n+``fsckObjects`` enabled with either of the following in your git config.\n \n-    [fetch]\n-    fsckobjects = true\n+.. code-block::\n \n-or ::\n+    [fetch]\n+    fsckObjects = true\n \n     [receive]\n     fsckObjects = true\n \n-set in your git configuration file, cloning this repository will fail. The only\n-solution is to set both of the above settings to false while cloning, and then\n-setting them back to true after the cloning is finished.\n+The only solution is to set both of the above to ``false``, clone, and\n+then set them back to ``true`` after.\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,eea31f29a50eeb30ec3c314bb2a6de4c931095c1,8e2fb4633ea48b228479a5af6ef23c39c34d68d2,'use pip-compile to pin dev requirements',"'@@ -1,11 +1,11 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.1.0\n+    rev: v2.4.3\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.1.0\n+    rev: v2.3.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n@@ -16,14 +16,14 @@ repos:\n     hooks:\n       - id: black\n   - repo: https://gitlab.com/pycqa/flake8\n-    rev: 3.7.9\n+    rev: 3.8.2\n     hooks:\n       - id: flake8\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v2.5.0\n+    rev: v3.1.0\n     hooks:\n       - id: check-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
.readthedocs.yaml,.readthedocs.yaml,eea31f29a50eeb30ec3c314bb2a6de4c931095c1,8e2fb4633ea48b228479a5af6ef23c39c34d68d2,'use pip-compile to pin dev requirements',"'@@ -1,8 +1,8 @@\n version: 2\n python:\n   install:\n+    - requirements: requirements/docs.txt\n     - method: pip\n       path: .\n-    - requirements: docs/requirements.txt\n sphinx:\n   builder: dirhtml\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,eea31f29a50eeb30ec3c314bb2a6de4c931095c1,8e2fb4633ea48b228479a5af6ef23c39c34d68d2,'use pip-compile to pin dev requirements',"'@@ -97,9 +97,8 @@ First time setup\n \n     .. code-block:: text\n \n-        $ pip install -e "".[dev]""\n+        $ pip install -e . -r requirements/dev.txt\n \n--   Install the `pre-commit framework`_.\n -   Install the pre-commit hooks.\n \n     .. code-block:: text\n'",0,0
MANIFEST.in,MANIFEST.in,eea31f29a50eeb30ec3c314bb2a6de4c931095c1,8e2fb4633ea48b228479a5af6ef23c39c34d68d2,'use pip-compile to pin dev requirements',"'@@ -2,6 +2,7 @@ include CHANGES.rst\n include CONTRIBUTING.rst\n include LICENSE.rst\n include tox.ini\n+include requirements/*.txt\n graft artwork\n graft docs\n prune docs/_build\n'",0,0
requirements/dev.txt,requirements/dev.txt,9eae42b9e11b7b0a179bb9144aa3d08e569261ce,330a3e3ddba712def955e7a2ccee92a205dfb656,'Bump sphinx from 3.0.3 to 3.0.4 (#3624)\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.0.3 to 3.0.4.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.0.3...v3.0.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\n\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -40,7 +40,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.0.3             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.0.4             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,9eae42b9e11b7b0a179bb9144aa3d08e569261ce,330a3e3ddba712def955e7a2ccee92a205dfb656,'Bump sphinx from 3.0.3 to 3.0.4 (#3624)\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.0.3 to 3.0.4.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.0.3...v3.0.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\n\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.0.3             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.0.4             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/dev.txt,requirements/dev.txt,fd348ba8cb1aca26d85e90d007c1c8639256c583,9eae42b9e11b7b0a179bb9144aa3d08e569261ce,'Bump pip-tools from 5.1.2 to 5.2.0 (#3627)\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 5.1.2 to 5.2.0.\r\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\r\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/jazzband/pip-tools/compare/5.1.2...5.2.0)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -26,7 +26,7 @@ more-itertools==8.3.0     # via pytest\n nodeenv==1.3.5            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.1.2          # via -r requirements/dev.in\n+pip-tools==5.2.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.4.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n'",0,0
requirements/dev.txt,requirements/dev.txt,8075be8261359986a7087039e3da90d0931eec72,fd348ba8cb1aca26d85e90d007c1c8639256c583,'Bump pytest from 5.4.2 to 5.4.3\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 5.4.2 to 5.4.3.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/5.4.2...5.4.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -32,7 +32,7 @@ pre-commit==2.4.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n-pytest==5.4.2             # via -r requirements/tests.in\n+pytest==5.4.3             # via -r requirements/tests.in\n python-dotenv==0.13.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,8075be8261359986a7087039e3da90d0931eec72,fd348ba8cb1aca26d85e90d007c1c8639256c583,'Bump pytest from 5.4.2 to 5.4.3\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 5.4.2 to 5.4.3.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/5.4.2...5.4.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -12,7 +12,7 @@ packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.8.1                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==5.4.2             # via -r requirements/tests.in\n+pytest==5.4.3             # via -r requirements/tests.in\n python-dotenv==0.13.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n wcwidth==0.1.9            # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,c2f2d9754b795c2383497dc073206b6c5233fbc7,42817f032aec5c1b3bf4b676bccba636fe0f1490,'Bump greenlet from 0.4.15 to 0.4.16\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.15 to 0.4.16.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/NEWS)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.15...0.4.16)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -16,7 +16,7 @@ click==7.1.2              # via pip-tools\n distlib==0.3.0            # via virtualenv\n docutils==0.16            # via sphinx\n filelock==3.0.12          # via tox, virtualenv\n-greenlet==0.4.15          # via -r requirements/tests.in\n+greenlet==0.4.16          # via -r requirements/tests.in\n identify==1.4.16          # via pre-commit\n idna==2.9                 # via requests\n imagesize==1.2.0          # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,c2f2d9754b795c2383497dc073206b6c5233fbc7,42817f032aec5c1b3bf4b676bccba636fe0f1490,'Bump greenlet from 0.4.15 to 0.4.16\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.15 to 0.4.16.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/NEWS)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.15...0.4.16)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -6,7 +6,7 @@\n #\n attrs==19.3.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n-greenlet==0.4.15          # via -r requirements/tests.in\n+greenlet==0.4.16          # via -r requirements/tests.in\n more-itertools==8.3.0     # via pytest\n packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n'",0,0
docs/security.rst,docs/security.rst,0b6a05f541a9b1321f57f9fb0e6593a1abff316d,93dd1709d05a1cf0e886df6223377bdab3b077fb,'add section on copy/paste security',"'@@ -258,3 +258,22 @@ certificate key to prevent MITM attacks.\n    or upgrade your key incorrectly.\n \n - https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning\n+\n+Copy/Paste Security Issues\n+~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If your website allows users to upload their own code, hidden characters\n+such as the backspace character (``\\b``, ``^H``) can cause the code to\n+have a different meaning when copy and pasted into terminals.\n+\n+For example, ``import y\\bose\\bm\\bi\\bt\\be\\b`` renders as\n+``import yosemite`` but becomes ``import os`` when pasted in a terminal.\n+\n+Consider applying extra filtering, such as replacing all ``\\b``\n+characters.\n+\n+.. code-block:: python\n+\n+    body = body.replace(""\\b"", """")\n+\n+- https://security.stackexchange.com/q/39118\n'",1.0,1.0
CONTRIBUTING.rst,CONTRIBUTING.rst,c59e019f5c5ed032c5360599bbd56e3fd9421adc,c34792183094b8a8c12d2dec2010e38bf39602e2,'update code-block typo (#3642)',"'@@ -73,12 +73,12 @@ First time setup\n         $ git clone https://github.com/{username}/flask\n         $ cd flask\n \n--   Add the main repository as a remote to update later::\n+-   Add the main repository as a remote to update later.\n \n     .. code-block:: text\n \n-        git remote add pallets https://github.com/pallets/flask\n-        git fetch pallets\n+        $ git remote add pallets https://github.com/pallets/flask\n+        $ git fetch pallets\n \n -   Create a virtualenv.\n \n'",0,0
docs/security.rst,docs/security.rst,51686f5ab44fce6bc487545f621e199d726b6f50,0b6a05f541a9b1321f57f9fb0e6593a1abff316d,'expand section on copy/paste security',"'@@ -259,21 +259,28 @@ certificate key to prevent MITM attacks.\n \n - https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning\n \n-Copy/Paste Security Issues\n-~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-If your website allows users to upload their own code, hidden characters\n-such as the backspace character (``\\b``, ``^H``) can cause the code to\n-have a different meaning when copy and pasted into terminals.\n+Copy/Paste to Terminal\n+----------------------\n+\n+Hidden characters such as the backspace character (``\\b``, ``^H``) can\n+cause text to render differently in HTML than how it is interpreted if\n+`pasted into a terminal <https://security.stackexchange.com/q/39118>`__.\n \n For example, ``import y\\bose\\bm\\bi\\bt\\be\\b`` renders as\n-``import yosemite`` but becomes ``import os`` when pasted in a terminal.\n+``import yosemite`` in HTML, but the backspaces are applied when pasted\n+into a terminal, and it becomes ``import os``.\n \n-Consider applying extra filtering, such as replacing all ``\\b``\n-characters.\n+If you expect users to copy and paste untrusted code from your site,\n+such as from comments posted by users on a technical blog, consider\n+applying extra filtering, such as replacing all ``\\b`` characters.\n \n .. code-block:: python\n \n     body = body.replace(""\\b"", """")\n \n-- https://security.stackexchange.com/q/39118\n+Most modern terminals will warn about and remove hidden characters when\n+pasting, so this isn\'t strictly necessary. It\'s also possible to craft\n+dangerous commands in other ways that aren\'t possible to filter.\n+Depending on your site\'s use case, it may be good to show a warning\n+about copying code in general.\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,347383b1bc947a94939a4e2a086c9966b3dfe8aa,eec29a8fc3a1e557c176ebee5ec8bca6e3091407,'Bump tox from 3.15.1 to 3.15.2\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.15.1 to 3.15.2.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.15.1...3.15.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.15.1               # via -r requirements/dev.in\n+tox==3.15.2               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,3207777cd4f97eacd4fcd39fb7cd593687d62c0c,eec29a8fc3a1e557c176ebee5ec8bca6e3091407,'Bump sphinx from 3.0.4 to 3.1.0\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.0.4 to 3.1.0.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.0.4...v3.1.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -40,7 +40,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.0.4             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,3207777cd4f97eacd4fcd39fb7cd593687d62c0c,eec29a8fc3a1e557c176ebee5ec8bca6e3091407,'Bump sphinx from 3.0.4 to 3.1.0\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.0.4 to 3.1.0.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.0.4...v3.1.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.0.4             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/dev.txt,requirements/dev.txt,f6d5daac468bbdd77a2823133b619a3e3e404b6e,d4f443d8d0127d81e54c2f412a162a180615ee1f,'Bump pre-commit from 2.4.0 to 2.5.0\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.4.0 to 2.5.0.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.4.0...v2.5.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -28,7 +28,7 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.2.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.4.0         # via -r requirements/dev.in\n+pre-commit==2.5.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n'",0,0
requirements/dev.txt,requirements/dev.txt,a753fd601d7d7cb7385a2a68c090c7ad7ddf494f,fcc0d6ebd9ec1c7e38ecbf1d093969e92c6a4c8b,'Bump pip-tools from 5.2.0 to 5.2.1\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 5.2.0 to 5.2.1.\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jazzband/pip-tools/compare/5.2.0...5.2.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -26,7 +26,7 @@ more-itertools==8.3.0     # via pytest\n nodeenv==1.3.5            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.2.0          # via -r requirements/dev.in\n+pip-tools==5.2.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.5.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n'",0,0
requirements/dev.txt,requirements/dev.txt,ee28a130093760650195b71bd3ec2694b77a91e7,18a7751c7bc1779fa135eb1366cbbcc278669df6,'Bump pre-commit from 2.5.0 to 2.5.1\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.5.0 to 2.5.1.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.5.0...v2.5.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -28,7 +28,7 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.2.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.5.0         # via -r requirements/dev.in\n+pre-commit==2.5.1         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,a54f6ee648732200b927c0b27a14adcdfdf756bc,3ee366a199b2a73cf20e05c83b20a8e882be3400,'update contributing guide',"'@@ -7,19 +7,17 @@ Thank you for considering contributing to Flask!\n Support questions\n -----------------\n \n-Please, don\'t use the issue tracker for this. Use one of the following\n-resources for questions about your own code:\n+Please, don\'t use the issue tracker for this. The issue tracker is a\n+tool to address bugs and feature requests in Flask itself. Use one of\n+the following resources for questions about using Flask or issues with\n+your own code:\n \n -   The ``#get-help`` channel on our Discord chat:\n     https://discord.gg/t6rrQZH\n-\n-    -   The IRC channel ``#pocoo`` on FreeNode is linked to Discord, but\n-        Discord is preferred.\n-\n -   The mailing list flask@python.org for long term discussion or larger\n     issues.\n -   Ask on `Stack Overflow`_. Search with Google first using:\n-    ``site:stackoverflow.com flask {search term, exception message, etc.}``\n+    ``site:stackoverflow.com python flask {search term, exception message, etc.}``\n \n .. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?sort=linked\n \n@@ -27,6 +25,8 @@ resources for questions about your own code:\n Reporting issues\n ----------------\n \n+Include the following information in your post:\n+\n -   Describe what you expected to happen.\n -   If possible, include a `minimal reproducible example`_ to help us\n     identify the issue. This also helps check that the issue is not with\n@@ -34,7 +34,8 @@ Reporting issues\n -   Describe what actually happened. Include the full traceback if there\n     was an exception.\n -   List your Python, Flask, and Werkzeug versions. If possible, check\n-    if this issue is already fixed in the repository.\n+    if this issue is already fixed in the latest releases or the latest\n+    code in the repository.\n \n .. _minimal reproducible example: https://stackoverflow.com/help/minimal-reproducible-example\n \n@@ -42,15 +43,27 @@ Reporting issues\n Submitting patches\n ------------------\n \n--   Use `Black`_ to autoformat your code. This should be done for you as\n-    a Git `pre-commit`_ hook, set up below. You may also wish to use\n-    Black\'s `Editor integration`_.\n--   Include tests if your patch is supposed to solve a bug, and explain\n-    clearly under which circumstances the bug happens. Make sure the\n-    test fails without your patch.\n--   Include a string like ""Fixes #123"" in your commit message (where 123\n-    is the issue you fixed). See `Closing issues using keywords\n-    <https://help.github.com/articles/creating-a-pull-request/>`__.\n+If there is not an open issue for what you want to submit, prefer\n+opening one for discussion before working on a PR. You can work on any\n+issue that doesn\'t have an open PR linked to it or a maintainer assigned\n+to it. These show up in the sidebar. No need to ask if you can work on\n+an issue that interests you.\n+\n+Include the following in your patch:\n+\n+-   Use `Black`_ to format your code. This and other tools will run\n+    automatically if you install `pre-commit`_ using the instructions\n+    below.\n+-   Include tests if your patch adds or changes code. Make sure the test\n+    fails without your patch.\n+-   Update any relevant docs pages and docstrings. Docs pages and\n+    docstrings should be wrapped at 72 characters.\n+-   Add an entry in ``CHANGES.rst``. Use the same style as other\n+    entries. Also include ``.. versionchanged::`` inline changelogs in\n+    relevant docstrings.\n+\n+.. _Black: https://black.readthedocs.io\n+.. _pre-commit: https://pre-commit.com\n \n \n First time setup\n@@ -66,19 +79,20 @@ First time setup\n \n -   Make sure you have a `GitHub account`_.\n -   Fork Flask to your GitHub account by clicking the `Fork`_ button.\n--   `Clone`_ your GitHub fork locally.\n+-   `Clone`_ the main repository locally.\n \n     .. code-block:: text\n \n-        $ git clone https://github.com/{username}/flask\n+        $ git clone https://github.com/pallets/flask\n         $ cd flask\n \n--   Add the main repository as a remote to update later.\n+-   Add your fork as a remote to push your work to. Replace\n+    ``{username}`` with your username. This names the remote ""fork"", the\n+    default Pallets remote is ""origin"".\n \n     .. code-block:: text\n \n-        $ git remote add pallets https://github.com/pallets/flask\n-        $ git fetch pallets\n+        git remote add fork https://github.com/{username}/flask\n \n -   Create a virtualenv.\n \n@@ -105,13 +119,12 @@ First time setup\n \n         $ pre-commit install\n \n-.. _GitHub account: https://github.com/join\n .. _latest version of git: https://git-scm.com/downloads\n .. _username: https://help.github.com/en/articles/setting-your-username-in-git\n .. _email: https://help.github.com/en/articles/setting-your-commit-email-address-in-git\n+.. _GitHub account: https://github.com/join\n .. _Fork: https://github.com/pallets/flask/fork\n .. _Clone: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n-.. _pre-commit framework: https://pre-commit.com/#install\n \n \n Start coding\n@@ -123,35 +136,33 @@ Start coding\n \n     .. code-block:: text\n \n-        $ git checkout -b your-branch-name origin/1.0.x\n+        $ git fetch origin\n+        $ git checkout -b your-branch-name origin/1.1.x\n \n     If you\'re submitting a feature addition or change, branch off of the\n     ""master"" branch.\n \n     .. code-block:: text\n \n+        $ git fetch origin\n         $ git checkout -b your-branch-name origin/master\n \n -   Using your favorite editor, make your changes,\n     `committing as you go`_.\n -   Include tests that cover any code changes you make. Make sure the\n-    test fails without your patch.\n-    `Run the tests <contributing-testsuite_>`_.\n--   Push your commits to GitHub and `create a pull request`_.\n+    test fails without your patch. Run the tests as described below.\n+-   Push your commits to your fork on GitHub and\n+    `create a pull request`_. Link to the issue being addressed with\n+    ``fixes #123`` in the pull request.\n \n     .. code-block:: text\n \n-        $ git push --set-upstream origin your-branch-name\n+        $ git push --set-upstream fork your-branch-name\n \n .. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n-.. _Black: https://black.readthedocs.io\n-.. _Editor integration: https://black.readthedocs.io/en/stable/editor_integration.html\n-.. _pre-commit: https://pre-commit.com\n .. _create a pull request: https://help.github.com/en/articles/creating-a-pull-request\n \n \n-.. _contributing-testsuite: #running-the-tests\n-\n Running the tests\n ~~~~~~~~~~~~~~~~~\n \n@@ -161,13 +172,10 @@ Run the basic test suite with pytest.\n \n     $ pytest\n \n-This only runs the tests for the current environment. Whether this is\n-relevant depends on which part of Flask you\'re working on. CI will run\n-the full suite when you submit your pull request.\n-\n-The full test suite takes a long time to run because it tests multiple\n-combinations of Python and dependencies. If you don\'t have a Python\n-version installed, it will be skipped with a warning message at the end.\n+This runs the tests for the current environment, which is usually\n+sufficient. CI will run the full suite when you submit your pull\n+request. You can run the full test suite with tox if you don\'t want to\n+wait.\n \n .. code-block:: text\n \n@@ -179,18 +187,17 @@ Running test coverage\n \n Generating a report of lines that do not have test coverage can indicate\n where to start contributing. Run ``pytest`` using ``coverage`` and\n-generate a report on the terminal and as an interactive HTML document.\n+generate a report.\n \n .. code-block:: text\n \n+    $ pip install coverage\n     $ coverage run -m pytest\n-    $ coverage report\n-    $ coverage html  # then open htmlcov/index.html\n+    $ coverage html\n \n-Read more about `coverage <https://coverage.readthedocs.io>`_.\n+Open ``htmlcov/index.html`` in your browser to explore the report.\n \n-Running the full test suite with ``tox`` will combine the coverage reports\n-from all runs.\n+Read more about `coverage <https://coverage.readthedocs.io>`__.\n \n \n Building the docs\n@@ -205,29 +212,4 @@ Build the docs in the ``docs`` directory using Sphinx.\n \n Open ``_build/html/index.html`` in your browser to view the docs.\n \n-Read more about `Sphinx <https://www.sphinx-doc.org/en/master/>`_.\n-\n-\n-Caution: zero-padded file modes\n--------------------------------\n-\n-This repository contains several zero-padded file modes that may cause\n-issues when pushing this repository to Git hosts other than GitHub.\n-Fixing this is destructive to the commit history, so we suggest ignoring\n-these warnings. If it fails to push and you\'re using a self-hosted Git\n-service like GitLab, you can turn off repository checks in the admin\n-panel.\n-\n-These files can also cause issues while cloning if you have\n-``fsckObjects`` enabled with either of the following in your git config.\n-\n-.. code-block::\n-\n-    [fetch]\n-    fsckObjects = true\n-\n-    [receive]\n-    fsckObjects = true\n-\n-The only solution is to set both of the above to ``false``, clone, and\n-then set them back to ``true`` after.\n+Read more about `Sphinx <https://www.sphinx-doc.org/en/stable/>`__.\n'",0,0
requirements/dev.txt,requirements/dev.txt,710ac0db51b155678b4100888688d8c4378d5d64,a54f6ee648732200b927c0b27a14adcdfdf756bc,'Bump sphinx from 3.1.0 to 3.1.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.0 to 3.1.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.0...v3.1.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -40,7 +40,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,710ac0db51b155678b4100888688d8c4378d5d64,a54f6ee648732200b927c0b27a14adcdfdf756bc,'Bump sphinx from 3.1.0 to 3.1.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.0 to 3.1.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.0...v3.1.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
docs/patterns/streaming.rst,docs/patterns/streaming.rst,92f648b04eda0c8563a43c60d989ce416137e920,ecd07d680456df6e6991b40a76995e31e005d145,"""[docs] streaming contents: use app.response_class\n\nExamples should use app.response_class to encourage code that doesn't need to be changed should the response class be customized later on.""","'@@ -15,14 +15,12 @@ This is a basic view function that generates a lot of CSV data on the fly.\n The trick is to have an inner function that uses a generator to generate\n data and to then invoke that function and pass it to a response object::\n \n-    from flask import Response\n-\n     @app.route(\'/large.csv\')\n     def generate_large_csv():\n         def generate():\n             for row in iter_all_rows():\n                 yield f""{\',\'.join(row)}\\n""\n-        return Response(generate(), mimetype=\'text/csv\')\n+        return app.response_class(generate(), mimetype=\'text/csv\')\n \n Each ``yield`` expression is directly sent to the browser.  Note though\n that some WSGI middlewares might break streaming, so be careful there in\n@@ -35,8 +33,6 @@ The Jinja2 template engine also supports rendering templates piece by\n piece.  This functionality is not directly exposed by Flask because it is\n quite uncommon, but you can easily do it yourself::\n \n-    from flask import Response\n-\n     def stream_template(template_name, **context):\n         app.update_template_context(context)\n         t = app.jinja_env.get_template(template_name)\n@@ -47,7 +43,7 @@ quite uncommon, but you can easily do it yourself::\n     @app.route(\'/my-large-page.html\')\n     def render_large_template():\n         rows = iter_all_rows()\n-        return Response(stream_template(\'the_template.html\', rows=rows))\n+        return app.response_class(stream_template(\'the_template.html\', rows=rows))\n \n The trick here is to get the template object from the Jinja2 environment\n on the application and to call :meth:`~jinja2.Template.stream` instead of\n@@ -70,7 +66,7 @@ moment the function executes.  Flask 0.9 provides you with a helper that\n can keep the request context around during the execution of the\n generator::\n \n-    from flask import stream_with_context, request, Response\n+    from flask import stream_with_context, request\n \n     @app.route(\'/stream\')\n     def streamed_response():\n@@ -78,7 +74,7 @@ generator::\n             yield \'Hello \'\n             yield request.args[\'name\']\n             yield \'!\'\n-        return Response(stream_with_context(generate()))\n+        return app.response_class(stream_with_context(generate()))\n \n Without the :func:`~flask.stream_with_context` function you would get a\n :class:`RuntimeError` at that point.\n'",1.25,1.25
docs/config.rst,docs/config.rst,aec07a1cb59ec25765cc2f5c4b6011bccb989abc,9075da126c9a983917b9779dbc826841813eee3c,'Removed misleading DEBUG variable from examples',"'@@ -429,7 +429,6 @@ sure to use uppercase letters for your config keys.\n Here is an example of a configuration file::\n \n     # Example configuration\n-    DEBUG = False\n     SECRET_KEY = b\'_5#y2L""F4Q8z\\n\\xec]/\'\n \n Make sure to load the configuration very early on, so that extensions have\n@@ -554,7 +553,6 @@ An interesting pattern is also to use classes and inheritance for\n configuration::\n \n     class Config(object):\n-        DEBUG = False\n         TESTING = False\n         DATABASE_URI = \'sqlite:///:memory:\'\n \n@@ -562,7 +560,7 @@ configuration::\n         DATABASE_URI = \'mysql://user@localhost/foo\'\n \n     class DevelopmentConfig(Config):\n-        DEBUG = True\n+        pass\n \n     class TestingConfig(Config):\n         TESTING = True\n@@ -589,7 +587,6 @@ your configuration classes::\n \n     class Config(object):\n         """"""Base config, uses staging database server.""""""\n-        DEBUG = False\n         TESTING = False\n         DB_SERVER = \'192.168.1.56\'\n \n@@ -603,11 +600,9 @@ your configuration classes::\n \n     class DevelopmentConfig(Config):\n         DB_SERVER = \'localhost\'\n-        DEBUG = True\n \n     class TestingConfig(Config):\n         DB_SERVER = \'localhost\'\n-        DEBUG = True\n         DATABASE_URI = \'sqlite:///:memory:\'\n \n There are many different ways and it\'s up to you how you want to manage\n'",1.0,1.0
docs/config.rst,docs/config.rst,efbd721f20cbe21ae5350380035752282882e9a2,aec07a1cb59ec25765cc2f5c4b6011bccb989abc,'Changed example DATABASE_URI values',"'@@ -552,17 +552,21 @@ and import different hard-coded files based on that.\n An interesting pattern is also to use classes and inheritance for\n configuration::\n \n+    import os\n+\n+    basedir = os.path.abspath(os.path.dirname(__file__))\n+    \n     class Config(object):\n         TESTING = False\n-        DATABASE_URI = \'sqlite:///:memory:\'\n \n     class ProductionConfig(Config):\n         DATABASE_URI = \'mysql://user@localhost/foo\'\n \n     class DevelopmentConfig(Config):\n-        pass\n+        DATABASE_URI = ""sqlite:///"" + os.path.join(basedir, ""foo.db"")\n \n     class TestingConfig(Config):\n+        DATABASE_URI = \'sqlite:///:memory:\'\n         TESTING = True\n \n To enable such a config you just have to call into\n'",1.0,1.0
docs/config.rst,docs/config.rst,26ec470afbfb8b643f1d0ba3501b4def42b58911,efbd721f20cbe21ae5350380035752282882e9a2,'Fixed trailing whitespace',"'@@ -555,7 +555,7 @@ configuration::\n     import os\n \n     basedir = os.path.abspath(os.path.dirname(__file__))\n-    \n+\n     class Config(object):\n         TESTING = False\n \n'",1.0,1.0
docs/config.rst,docs/config.rst,2254adf8455953019cadd54ba837c53d3dfaca5d,26ec470afbfb8b643f1d0ba3501b4def42b58911,'Simplified version of file-based database',"'@@ -552,10 +552,6 @@ and import different hard-coded files based on that.\n An interesting pattern is also to use classes and inheritance for\n configuration::\n \n-    import os\n-\n-    basedir = os.path.abspath(os.path.dirname(__file__))\n-\n     class Config(object):\n         TESTING = False\n \n@@ -563,7 +559,7 @@ configuration::\n         DATABASE_URI = \'mysql://user@localhost/foo\'\n \n     class DevelopmentConfig(Config):\n-        DATABASE_URI = ""sqlite:///"" + os.path.join(basedir, ""foo.db"")\n+        DATABASE_URI = ""sqlite:////tmp/foo.db""\n \n     class TestingConfig(Config):\n         DATABASE_URI = \'sqlite:///:memory:\'\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,d74a8626e042a85f82502301e9b8f4317120e586,3349c4914d8556ced05ba85a89868f2ffb78fd46,'Bump tox from 3.15.2 to 3.16.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.15.2 to 3.16.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.15.2...3.16.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.15.2               # via -r requirements/dev.in\n+tox==3.16.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,cdc5a493331d181bae2b50996a50cb98f4a5ca4d,fe992ca9925a6358a25e00b48c22f47a3587ef97,'Bump tox from 3.16.0 to 3.16.1\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.16.0 to 3.16.1.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.16.0...3.16.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.16.0               # via -r requirements/dev.in\n+tox==3.16.1               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
setup.cfg,setup.cfg,634e901966749bcb5dcc43a7a64b3865e2ae1aa3,2b517a18d2cbebf8aec16eb5405340d11208a6dd,'update metadata',"'@@ -7,6 +7,8 @@ project_urls =\n     Code = https://github.com/pallets/flask\n     Issue tracker = https://github.com/pallets/flask/issues\n license = BSD-3-Clause\n+author = Armin Ronacher\n+author_email = armin.ronacher@active-4.com\n maintainer = Pallets\n maintainer_email = contact@palletsprojects.com\n description = A simple framework for building complex web applications.\n'",0,0
requirements/dev.txt,requirements/dev.txt,1f5a5dce43a23797b4573625b4a76edc37555403,634e901966749bcb5dcc43a7a64b3865e2ae1aa3,'Bump pre-commit from 2.5.1 to 2.6.0\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.5.1 to 2.6.0.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.5.1...v2.6.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -28,7 +28,7 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.2.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.5.1         # via -r requirements/dev.in\n+pre-commit==2.6.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n'",0,0
docs/api.rst,docs/api.rst,7d7e8eef23e3b30a3b1c16215374c9a5ef4ed839,0a3e91b782ce557498b3375067c134cfab2b5468,"""API docs - changed flask.request description\n\n - the link should point to the flask's Request\r\n - longer description is unnecessary, as it's all explained above in flask.Request""","'@@ -41,9 +41,7 @@ Incoming Request Data\n \n    This is a proxy.  See :ref:`notes-on-proxies` for more information.\n \n-   The request object is an instance of a :class:`~werkzeug.wrappers.Request`\n-   subclass and provides all of the attributes Werkzeug defines.  This\n-   just shows a quick overview of the most important ones.\n+   The request object is an instance of a :class:`~flask.Request`.\n \n \n Response Objects\n'",1.1875,1.1875
docs/quickstart.rst,docs/quickstart.rst,8074cbdc470494a6f20cf08f8831dc4ae388d7f6,47e165d6d560fa502e41f152a69b657cf95f975a,'Added very small clarification to quickstart.rst',"'@@ -264,12 +264,12 @@ The following two rules differ in their use of a trailing slash. ::\n         return \'The about page\'\n \n The canonical URL for the ``projects`` endpoint has a trailing slash.\n-It\'s similar to a folder in a file system. If you access the URL without\n+It\'s similar to a folder in a file system. If you access ``/projects`` - the URL without\n a trailing slash, Flask redirects you to the canonical URL with the\n-trailing slash.\n+trailing slash - ``/projects/``.\n \n The canonical URL for the ``about`` endpoint does not have a trailing\n-slash. It\'s similar to the pathname of a file. Accessing the URL with a\n+slash. It\'s similar to the pathname of a file. Accessing ``/about/`` - the URL with a\n trailing slash produces a 404 ""Not Found"" error. This helps keep URLs\n unique for these resources, which helps search engines avoid indexing\n the same page twice.\n'",1.2666666666666666,1.2666666666666666
docs/quickstart.rst,docs/quickstart.rst,718afcc1078b1d114c6739a0d65229d68246a6ed,8074cbdc470494a6f20cf08f8831dc4ae388d7f6,'Improve wording of tip for Unique URLs chapter',"'@@ -264,15 +264,15 @@ The following two rules differ in their use of a trailing slash. ::\n         return \'The about page\'\n \n The canonical URL for the ``projects`` endpoint has a trailing slash.\n-It\'s similar to a folder in a file system. If you access ``/projects`` - the URL without\n-a trailing slash, Flask redirects you to the canonical URL with the\n-trailing slash - ``/projects/``.\n+It\'s similar to a folder in a file system. If you access the URL without\n+a trailing slash (``/projects``), Flask redirects you to the canonical URL\n+with the trailing slash (``/projects/``).\n \n The canonical URL for the ``about`` endpoint does not have a trailing\n-slash. It\'s similar to the pathname of a file. Accessing ``/about/`` - the URL with a\n-trailing slash produces a 404 ""Not Found"" error. This helps keep URLs\n-unique for these resources, which helps search engines avoid indexing\n-the same page twice.\n+slash. It\'s similar to the pathname of a file. Accessing the URL with a\n+trailing slash (``/about/``) produces a 404 ""Not Found"" error. This helps\n+keep URLs unique for these resources, which helps search engines avoid\n+indexing the same page twice.\n \n \n .. _url-building:\n'",1.2666666666666666,1.2666666666666666
src/flask/cli.py,src/flask/cli.py,84cbfc0698f429c93450cd6f1600e56b41a30247,3fe5eecc2b57406bc9f14dbcc4fb1a76ba4ebab1,'Stop change CWD to .env/.flaskenv location',"'@@ -610,10 +610,6 @@ def load_dotenv(path=None):\n     If an env var is already set it is not overwritten, so earlier files in the\n     list are preferred over later files.\n \n-    Changes the current working directory to the location of the first file\n-    found, with the assumption that it is in the top level project directory\n-    and will be where the Python path should import local packages from.\n-\n     This is a no-op if `python-dotenv`_ is not installed.\n \n     .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n@@ -659,9 +655,6 @@ def load_dotenv(path=None):\n \n         dotenv.load_dotenv(path)\n \n-    if new_dir and os.getcwd() != new_dir:\n-        os.chdir(new_dir)\n-\n     return new_dir is not None  # at least one file was located and loaded\n \n \n'",4.222222222222222,4.166666666666667
tests/test_cli.py,tests/test_cli.py,84cbfc0698f429c93450cd6f1600e56b41a30247,3fe5eecc2b57406bc9f14dbcc4fb1a76ba4ebab1,'Stop change CWD to .env/.flaskenv location',"'@@ -504,7 +504,7 @@ def test_load_dotenv(monkeypatch):\n         monkeypatch._setitem.append((os.environ, item, notset))\n \n     monkeypatch.setenv(""EGGS"", ""3"")\n-    monkeypatch.chdir(os.path.join(test_path, ""cliapp"", ""inner1""))\n+    monkeypatch.chdir(test_path)\n     assert load_dotenv()\n     assert os.getcwd() == test_path\n     # .flaskenv doesn\'t overwrite .env\n'",1.0476190476190477,1.0476190476190477
CHANGES.rst,CHANGES.rst,e403e9ea970c875052c9199d35175e0a420bfed5,84cbfc0698f429c93450cd6f1600e56b41a30247,'Update changelog for load dotenv behaivour change',"'@@ -27,6 +27,9 @@ Unreleased\n     instead of PyOpenSSL. :pr:`3492`\n -   When specifying a factory function with ``FLASK_APP``, keyword\n     argument can be passed. :issue:`3553`\n+-   When loading a ``.env`` or ``.flaskenv`` file on top level directory,\n+    Flask will not change current work directory to the location of dotenv\n+    files, in order to prevent potential confusion. :pr:`3560`\n \n \n Version 1.1.2\n'",0,0
requirements/dev.txt,requirements/dev.txt,7fbb4f78da0c89c9a466f755fc466c85bf036ca2,3fe5eecc2b57406bc9f14dbcc4fb1a76ba4ebab1,'Bump python-dotenv from 0.13.0 to 0.14.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.13.0 to 0.14.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.13.0...v0.14.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -33,7 +33,7 @@ py==1.8.1                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n pytest==5.4.3             # via -r requirements/tests.in\n-python-dotenv==0.13.0     # via -r requirements/tests.in\n+python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n requests==2.23.0          # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,7fbb4f78da0c89c9a466f755fc466c85bf036ca2,3fe5eecc2b57406bc9f14dbcc4fb1a76ba4ebab1,'Bump python-dotenv from 0.13.0 to 0.14.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.13.0 to 0.14.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.13.0...v0.14.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -13,6 +13,6 @@ pluggy==0.13.1            # via pytest\n py==1.8.1                 # via pytest\n pyparsing==2.4.7          # via packaging\n pytest==5.4.3             # via -r requirements/tests.in\n-python-dotenv==0.13.0     # via -r requirements/tests.in\n+python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n wcwidth==0.1.9            # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,5f6586ae6d5111539b613534d0c746d8cef451c0,38a0d404b71807c1292eecf33b51312d6ecc6d8a,'Bump sphinx from 3.1.1 to 3.1.2\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.1 to 3.1.2.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.1...v3.1.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -40,7 +40,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.2             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,5f6586ae6d5111539b613534d0c746d8cef451c0,38a0d404b71807c1292eecf33b51312d6ecc6d8a,'Bump sphinx from 3.1.1 to 3.1.2\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.1 to 3.1.2.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.1...v3.1.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.1.2             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
CHANGES.rst,CHANGES.rst,7ba35c4d4fe99418cee9c87900bd0d3b38cf5bd0,b82cca728341926399ef4c06a7342867f5c43c72,"""Restore support for using pathlib.Path for static_folder.\n\n* No longer causes AttributeError: 'PosixPath' object has no\n  attribute 'rstrip'.\n\n* This was broken by e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a\n  which was released in 1.1.2.\n\n* Add a regression test that now passes.\n\nSee #3557.""","'@@ -29,6 +29,15 @@ Unreleased\n     argument can be passed. :issue:`3553`\n \n \n+Version 1.1.x\n+-------------\n+\n+Not yet released.\n+\n+-   Officially support passing a :class:`pathlib.Path` for\n+    ``static_folder`` which stopped working in 1.1.2. :pr:`3579`\n+\n+\n Version 1.1.2\n -------------\n \n'",0,0
src/flask/helpers.py,src/flask/helpers.py,7ba35c4d4fe99418cee9c87900bd0d3b38cf5bd0,b82cca728341926399ef4c06a7342867f5c43c72,"""Restore support for using pathlib.Path for static_folder.\n\n* No longer causes AttributeError: 'PosixPath' object has no\n  attribute 'rstrip'.\n\n* This was broken by e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a\n  which was released in 1.1.2.\n\n* Add a regression test that now passes.\n\nSee #3557.""","'@@ -980,7 +980,7 @@ class _PackageBoundObject:\n     @static_folder.setter\n     def static_folder(self, value):\n         if value is not None:\n-            value = value.rstrip(""/\\\\"")\n+            value = os.fspath(value).rstrip(r""\\/"")\n         self._static_folder = value\n \n     @property\n'",4.121212121212121,4.121212121212121
tests/test_basic.py,tests/test_basic.py,7ba35c4d4fe99418cee9c87900bd0d3b38cf5bd0,b82cca728341926399ef4c06a7342867f5c43c72,"""Restore support for using pathlib.Path for static_folder.\n\n* No longer causes AttributeError: 'PosixPath' object has no\n  attribute 'rstrip'.\n\n* This was broken by e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a\n  which was released in 1.1.2.\n\n* Add a regression test that now passes.\n\nSee #3557.""","'@@ -1406,6 +1406,16 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n+@pytest.mark.skipif(sys.version_info < (3, 6), reason=""requires Python >= 3.6"")\n+def test_static_folder_with_pathlib_path(app):\n+    from pathlib import Path\n+\n+    app = flask.Flask(__name__, static_folder=Path(""static""))\n+    rv = app.test_client().open(""/static/index.html"", method=""GET"")\n+    assert rv.status_code == 200\n+    rv.close()\n+\n+\n def test_static_folder_with_ending_slash():\n     app = flask.Flask(__name__, static_folder=""static/"")\n \n'",1.0656370656370657,1.0653846153846154
CHANGES.rst,CHANGES.rst,b724832872ae4b4cd4b5f61c153eae39f1c3b213,88c9c68e17774b24c4a67f2abadf411c6a689c1e,'Cherry-pick 7ba35c4 from master (support pathlib.Path for static_folder)',"'@@ -1,5 +1,16 @@\n .. currentmodule:: flask\n \n+\n+\n+Version 1.1.x\n+-------------\n+\n+Not yet released.\n+\n+-   Officially support passing a :class:`pathlib.Path` for\n+    ``static_folder`` which stopped working in 1.1.2. :pr:`3579`\n+\n+\n Version 1.1.2\n -------------\n \n'",0,0
src/flask/helpers.py,src/flask/helpers.py,b724832872ae4b4cd4b5f61c153eae39f1c3b213,88c9c68e17774b24c4a67f2abadf411c6a689c1e,'Cherry-pick 7ba35c4 from master (support pathlib.Path for static_folder)',"'@@ -1001,7 +1001,7 @@ class _PackageBoundObject(object):\n     @static_folder.setter\n     def static_folder(self, value):\n         if value is not None:\n-            value = value.rstrip(""/\\\\"")\n+            value = os.fspath(value).rstrip(r""\\/"")\n         self._static_folder = value\n \n     @property\n'",4.242424242424242,4.242424242424242
tests/test_basic.py,tests/test_basic.py,b724832872ae4b4cd4b5f61c153eae39f1c3b213,88c9c68e17774b24c4a67f2abadf411c6a689c1e,'Cherry-pick 7ba35c4 from master (support pathlib.Path for static_folder)',"'@@ -1425,6 +1425,16 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n+@pytest.mark.skipif(sys.version_info < (3, 6), reason=""requires Python >= 3.6"")\n+def test_static_folder_with_pathlib_path(app):\n+    from pathlib import Path\n+\n+    app = flask.Flask(__name__, static_folder=Path(""static""))\n+    rv = app.test_client().open(""/static/index.html"", method=""GET"")\n+    assert rv.status_code == 200\n+    rv.close()\n+\n+\n def test_static_folder_with_ending_slash():\n     app = flask.Flask(__name__, static_folder=""static/"")\n \n'",1.0733590733590734,1.073076923076923
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,4a1acc8b5f0b5608fa8f20a1ef3afc13574cb96e,cf5b1d028342a2f7c929a23d53367addf106064e,'Some small doc fixes',"'@@ -181,8 +181,8 @@ construction of progress bar.\n \n Because the common pattern for file uploads exists almost unchanged in all\n applications dealing with uploads, there is also a Flask extension called\n-`Flask-Uploads`_ that implements a full fledged upload mechanism with white and\n-blacklisting of extensions and more.\n+`Flask-Uploads`_ that implements a full fledged upload mechanism that\n+allows controlling with file extensions are allowed to be uploaded.\n \n .. _jQuery: https://jquery.com/\n .. _Flask-Uploads: https://flask-uploads.readthedocs.io/en/latest/\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,4a1acc8b5f0b5608fa8f20a1ef3afc13574cb96e,cf5b1d028342a2f7c929a23d53367addf106064e,'Some small doc fixes',"'@@ -437,7 +437,8 @@ def get_flashed_messages(with_categories=False, category_filter=()):\n         `category_filter` parameter added.\n \n     :param with_categories: set to ``True`` to also receive categories.\n-    :param category_filter: whitelist of categories to limit return values\n+    :param category_filter: filter of categories to limit return values.  Only\n+                            categories in the list will be returned.\n     """"""\n     flashes = _request_ctx_stack.top.flashes\n     if flashes is None:\n'",4.121212121212121,4.121212121212121
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,aab20ad431985b85dbe756b375e6ccfa39132054,a12a34100ac0ab85c29f87117ac0b75100b52d3c,'fix typo',"'@@ -182,7 +182,7 @@ construction of progress bar.\n Because the common pattern for file uploads exists almost unchanged in all\n applications dealing with uploads, there is also a Flask extension called\n `Flask-Uploads`_ that implements a full fledged upload mechanism that\n-allows controlling with file extensions are allowed to be uploaded.\n+allows controlling which file extensions are allowed to be uploaded.\n \n .. _jQuery: https://jquery.com/\n .. _Flask-Uploads: https://flask-uploads.readthedocs.io/en/latest/\n'",0,0
requirements/dev.txt,requirements/dev.txt,6ef9dafe4da10683508f37747728b64786fe6d9d,4e854ee49687ceac90985526928d901570d3585d,'Bump tox from 3.16.1 to 3.17.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.16.1 to 3.17.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/3.17.0/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.16.1...3.17.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.16.1               # via -r requirements/dev.in\n+tox==3.17.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,77e33c4de61e17d9ec1b11dbe64d2f743b766c7e,d0d7b796c4b49361be8e358f905dde16ae5021e3,'Bump tox from 3.17.0 to 3.17.1\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.17.0 to 3.17.1.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.17.0...3.17.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.17.0               # via -r requirements/dev.in\n+tox==3.17.1               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,1580aa30cb77c1db119c5c71b88795141d0a5045,a40c381ffdc4c28a19a0910c4da8ec54e3ae63cf,'Update Discord invite links',"'@@ -13,7 +13,7 @@ the following resources for questions about using Flask or issues with\n your own code:\n \n -   The ``#get-help`` channel on our Discord chat:\n-    https://discord.gg/t6rrQZH\n+    https://discord.gg/pallets\n -   The mailing list flask@python.org for long term discussion or larger\n     issues.\n -   Ask on `Stack Overflow`_. Search with Google first using:\n'",0,0
README.rst,README.rst,1580aa30cb77c1db119c5c71b88795141d0a5045,a40c381ffdc4c28a19a0910c4da8ec54e3ae63cf,'Update Discord invite links',"'@@ -72,7 +72,7 @@ Links\n * Code: https://github.com/pallets/flask\n * Issue tracker: https://github.com/pallets/flask/issues\n * Test status: https://dev.azure.com/pallets/flask/_build\n-* Official chat: https://discord.gg/t6rrQZH\n+* Official chat: https://discord.gg/pallets\n \n .. _WSGI: https://wsgi.readthedocs.io\n .. _Werkzeug: https://www.palletsprojects.com/p/werkzeug/\n'",1.0,1.0
docs/extensiondev.rst,docs/extensiondev.rst,1580aa30cb77c1db119c5c71b88795141d0a5045,a40c381ffdc4c28a19a0910c4da8ec54e3ae63cf,'Update Discord invite links',"'@@ -332,5 +332,5 @@ ecosystem remain consistent and compatible.\n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n .. _mailinglist: https://mail.python.org/mailman/listinfo/flask\n-.. _Discord server: https://discord.gg/t6rrQZH\n+.. _Discord server: https://discord.gg/pallets\n .. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n'",1.6666666666666667,1.6666666666666667
.github/workflows/tests.yaml,.github/workflows/tests.yaml,19a0db6d14722aeb6dd711efeafa72fcbc2562e1,f32f19162c936d94fb88f28f17f43dd9f195792b,"'remove lowest version test until next release\n\nThe next major release will depend on the next major releases of all\nthe other libraries, which is equivalent to devel right now.'","""@@ -22,7 +22,7 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n-          - {name: Version Range, python: '3.8', os: ubuntu-latest, tox: 'devel,lowest'}\n+          - {name: Version Range, python: '3.8', os: ubuntu-latest, tox: 'devel'}\n           - {name: Style, python: '3.8', os: ubuntu-latest, tox: style}\n           - {name: Docs, python: '3.8', os: ubuntu-latest, tox: docs}\n     steps:\n""",0,0
tox.ini,tox.ini,19a0db6d14722aeb6dd711efeafa72fcbc2562e1,f32f19162c936d94fb88f28f17f43dd9f195792b,"'remove lowest version test until next release\n\nThe next major release will depend on the next major releases of all\nthe other libraries, which is equivalent to devel right now.'","'@@ -1,7 +1,7 @@\n [tox]\n envlist =\n     py{38,37,36,py3}\n-    py38-{devel,lowest}\n+    py38-devel\n     style\n     docs\n skip_missing_interpreters = true\n@@ -10,11 +10,6 @@ skip_missing_interpreters = true\n deps =\n     -r requirements/tests.txt\n \n-    lowest: Werkzeug==0.15.5\n-    lowest: Jinja2==2.10\n-    lowest: itsdangerous==0.24\n-    lowest: Click==5.1\n-\n     devel: https://github.com/pallets/werkzeug/archive/master.tar.gz\n     devel: https://github.com/pallets/markupsafe/archive/master.tar.gz\n     devel: https://github.com/pallets/jinja/archive/master.tar.gz\n'",0,0
CHANGES.rst,CHANGES.rst,7b09a0904c32dc8784cdd68e842442057340a361,6f2fdc5ac4ad869a21c4c0281d7fa1eb8aa5a689,'change make_response to use headers.update',"'@@ -27,9 +27,14 @@ Unreleased\n     instead of PyOpenSSL. :pr:`3492`\n -   When specifying a factory function with ``FLASK_APP``, keyword\n     argument can be passed. :issue:`3553`\n--   When loading a ``.env`` or ``.flaskenv`` file on top level directory,\n-    Flask will not change current work directory to the location of dotenv\n-    files, in order to prevent potential confusion. :pr:`3560`\n+-   When loading a ``.env`` or ``.flaskenv`` file, the current working\n+    directory is no longer changed to the location of the file.\n+    :pr:`3560`\n+-   When returning a ``(response, headers)`` tuple from a view, the\n+    headers replace rather than extend existing headers on the response.\n+    For example, this allows setting the ``Content-Type`` for\n+    ``jsonify()``. Use ``response.headers.extend()`` if extending is\n+    desired. :issue:`3628`\n \n \n Version 1.1.x\n'",0,0
src/flask/app.py,src/flask/app.py,7b09a0904c32dc8784cdd68e842442057340a361,6f2fdc5ac4ad869a21c4c0281d7fa1eb8aa5a689,'change make_response to use headers.update',"'@@ -2045,7 +2045,7 @@ class Flask(_PackageBoundObject):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.extend(headers)\n+            rv.headers.update(headers)\n \n         return rv\n \n'",2.682926829268293,2.682926829268293
tests/test_basic.py,tests/test_basic.py,7b09a0904c32dc8784cdd68e842442057340a361,6f2fdc5ac4ad869a21c4c0281d7fa1eb8aa5a689,'change make_response to use headers.update',"'@@ -1117,8 +1117,10 @@ def test_response_types(app, client):\n     @app.route(""/response_headers"")\n     def from_response_headers():\n         return (\n-            flask.Response(""Hello world"", 404, {""X-Foo"": ""Baz""}),\n-            {""X-Foo"": ""Bar"", ""X-Bar"": ""Foo""},\n+            flask.Response(\n+                ""Hello world"", 404, {""Content-Type"": ""text/html"", ""X-Foo"": ""Baz""}\n+            ),\n+            {""Content-Type"": ""text/plain"", ""X-Foo"": ""Bar"", ""X-Bar"": ""Foo""},\n         )\n \n     @app.route(""/response_status"")\n@@ -1155,7 +1157,8 @@ def test_response_types(app, client):\n \n     rv = client.get(""/response_headers"")\n     assert rv.data == b""Hello world""\n-    assert rv.headers.getlist(""X-Foo"") == [""Baz"", ""Bar""]\n+    assert rv.content_type == ""text/plain""\n+    assert rv.headers.getlist(""X-Foo"") == [""Bar""]\n     assert rv.headers[""X-Bar""] == ""Foo""\n     assert rv.status_code == 404\n \n'",1.0653846153846154,1.0653846153846154
requirements/dev.txt,requirements/dev.txt,eb96acec46a74c03b88327c503d0352d6da4a107,2fa8eb3cfebd7d797f8d27bfd05ea5f63985665f,'Bump tox from 3.17.1 to 3.18.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.17.1 to 3.18.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.17.1...3.18.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -49,7 +49,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, tox\n-tox==3.17.1               # via -r requirements/dev.in\n+tox==3.18.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n wcwidth==0.1.9            # via pytest\n'",0,0
docs/blueprints.rst,docs/blueprints.rst,59b0b85835fa925e67f9a3f5173f7d6b6e67a411,2fa8eb3cfebd7d797f8d27bfd05ea5f63985665f,"'consolidate error handling docs\n\nRemove apierrors.rst and errorpages.rst from patterns and integrate the\ncontent into errorhandling.rst, along with other changes and extra\ncontent.'","'@@ -273,4 +273,4 @@ at the application level using the ``request`` proxy object::\n         else:\n             return ex\n \n-More information on error handling see :doc:`/patterns/errorpages`.\n+See :doc:`/errorhandling`.\n'",1.0,1.0
docs/errorhandling.rst,docs/errorhandling.rst,59b0b85835fa925e67f9a3f5173f7d6b6e67a411,2fa8eb3cfebd7d797f8d27bfd05ea5f63985665f,"'consolidate error handling docs\n\nRemove apierrors.rst and errorpages.rst from patterns and integrate the\ncontent into errorhandling.rst, along with other changes and extra\ncontent.'","'@@ -1,5 +1,5 @@\n-Application Errors\n-==================\n+Handling Application Errors\n+===========================\n \n .. versionadded:: 0.3\n \n@@ -20,121 +20,433 @@ errors:\n \n And that\'s just a small sample of issues you could be facing.  So how do we\n deal with that sort of problem?  By default if your application runs in\n-production mode, Flask will display a very simple page for you and log the\n-exception to the :attr:`~flask.Flask.logger`.\n+production mode, and an exception is raised Flask will display a very simple\n+page for you and log the exception to the :attr:`~flask.Flask.logger`.\n \n But there is more you can do, and we will cover some better setups to deal\n-with errors.\n+with errors including custom exceptions and 3rd party tools.\n+\n+\n+.. _common-error-codes:\n+\n+Common Error Codes\n+``````````````````\n+\n+The following error codes are some that are often displayed to the user,\n+even if the application behaves correctly:\n+\n+*400 Bad Request*\n+    When the server will not process the request due to something that\n+    the server perceives to be a client error. Such as malformed request\n+    syntax, missing query parameters, etc.\n+\n+*403 Forbidden*\n+    If you have some kind of access control on your website, you will have\n+    to send a 403 code for disallowed resources.  So make sure the user\n+    is not lost when they try to access a forbidden resource.\n+\n+*404 Not Found*\n+    The good old ""chap, you made a mistake typing that URL"" message.  So\n+    common that even novices to the internet know that 404 means: damn,\n+    the thing I was looking for is not there.  It\'s a very good idea to\n+    make sure there is actually something useful on a 404 page, at least a\n+    link back to the index.\n+\n+*410 Gone*\n+    Did you know that there the ""404 Not Found"" has a brother named ""410\n+    Gone""?  Few people actually implement that, but the idea is that\n+    resources that previously existed and got deleted answer with 410\n+    instead of 404.  If you are not deleting documents permanently from\n+    the database but just mark them as deleted, do the user a favour and\n+    use the 410 code instead and display a message that what they were\n+    looking for was deleted for all eternity.\n+\n+*500 Internal Server Error*\n+    Usually happens on programming errors or if the server is overloaded.\n+    A terribly good idea is to have a nice page there, because your\n+    application *will* fail sooner or later.\n+\n+\n+\n+Default Error Handling\n+``````````````````````\n+\n+When building a Flask application you *will* run into exceptions. If some part\n+of your code breaks while handling a request (and you have no error handlers\n+registered) an ""500 Internal Server Error""\n+(:exc:`~werkzeug.exceptions.InternalServerError`) will be returned by default.\n+Similarly, if a request is sent to an unregistered route a ""404 Not Found""\n+(:exc:`~werkzeug.exceptions.NotFound`) error will occur. If a route receives an\n+unallowed request method a ""405 Method Not Allowed""\n+(:exc:`~werkzeug.exceptions.MethodNotAllowed`) will be raised. These are all\n+subclasses of :class:`~werkzeug.exceptions.HTTPException` and are provided by\n+default in Flask.\n+\n+Flask gives you to the ability to raise any HTTP exception registered by\n+werkzeug. However, as the default HTTP exceptions return simple exception\n+pages, Flask also offers the opportunity to customise these HTTP exceptions via\n+custom error handlers as well as to add exception handlers for builtin and\n+custom exceptions.\n \n-Error Logging Tools\n--------------------\n+When an exception is caught by Flask while handling a request, it is first\n+looked up by code. If no handler is registered for the code, it is looked up\n+by its class hierarchy; the most specific handler is chosen. If no handler is\n+registered, :class:`~werkzeug.exceptions.HTTPException` subclasses show a\n+generic message about their code, while other exceptions are converted to a\n+generic ""500 Internal Server Error"".\n \n-Sending error mails, even if just for critical ones, can become\n-overwhelming if enough users are hitting the error and log files are\n-typically never looked at. This is why we recommend using `Sentry\n-<https://sentry.io/>`_ for dealing with application errors.  It\'s\n-available as an Open Source project `on GitHub\n-<https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n-<https://sentry.io/signup/>`_ which you can try for free. Sentry\n-aggregates duplicate errors, captures the full stack trace and local\n-variables for debugging, and sends you mails based on new errors or\n-frequency thresholds.\n+For example, if an instance of :exc:`ConnectionRefusedError` is raised,\n+and a handler is registered for :exc:`ConnectionError` and\n+:exc:`ConnectionRefusedError`, the more specific :exc:`ConnectionRefusedError`\n+handler is called with the exception instance to generate the response.\n \n-To use Sentry you need to install the `sentry-sdk` client with extra `flask` dependencies::\n+Handlers registered on the blueprint take precedence over those registered\n+globally on the application, assuming a blueprint is handling the request that\n+raises the exception. However, the blueprint cannot handle 404 routing errors\n+because the 404 occurs at the routing level before the blueprint can be\n+determined.\n \n-    $ pip install sentry-sdk[flask]\n \n-And then add this to your Flask app::\n \n-    import sentry_sdk\n-    from sentry_sdk.integrations.flask import FlaskIntegration\n+.. _handling-errors:\n \n-    sentry_sdk.init(\'YOUR_DSN_HERE\',integrations=[FlaskIntegration()])\n+Handling Errors\n+```````````````\n \n-The `YOUR_DSN_HERE` value needs to be replaced with the DSN value you get\n-from your Sentry installation.\n+Sometimes when building a Flask application, you might want to raise a\n+:exc:`~werkzeug.exceptions.HTTPException` to signal to the user that\n+something is wrong with the request. Fortunately, Flask comes with a handy\n+:func:`~flask.abort` function that aborts a request with a HTTP error from\n+werkzeug as desired.\n \n-After installation, failures leading to an Internal Server Error\n-are automatically reported to Sentry and from there you can\n-receive error notifications.\n+Consider the code below, we might have a user profile route, but if the user\n+fails to pass a username we raise a ""400 Bad Request"" and if the user passes a\n+username but we can\'t find it, we raise a ""404 Not Found"".\n \n-Follow-up reads:\n+.. code-block:: python\n \n-* Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n-  similar fashion.  See the `Python SDK docs\n-  <https://docs.sentry.io/platforms/python/>`_ for more information.\n-* `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n-* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n+    from flask import abort, render_template, request\n+\n+    # a username needs to be supplied in the query args\n+    # a successful request would be like /profile?username=jack\n+    @app.route(""/profile"")\n+    def user_profile():\n+        username = request.arg.get(""username"")\n+        # if a username isn\'t supplied in the request, return a 400 bad request\n+        if username is None:\n+            abort(400)\n+\n+        user = get_user(username=username)\n+        # if a user can\'t be found by their username, return 404 not found\n+        if user is None:\n+            abort(404)\n+\n+        return render_template(""profile.html"", user=user)\n \n \n-Error handlers\n---------------\n \n-You might want to show custom error pages to the user when an error occurs.\n-This can be done by registering error handlers.\n+.. _custom-error-handlers:\n+\n+Custom error handlers\n+`````````````````````\n+\n+The default :exc:`~werkzeug.exceptions.HTTPException` returns a black and white\n+error page with a basic description, but nothing fancy. Considering\n+these errors *will* be thrown during the lifetime of your application, it is\n+highly advisable to customise these exceptions to improve the user experience\n+of your site. This can be done by registering error handlers.\n \n An error handler is a normal view function that returns a response, but instead\n of being registered for a route, it is registered for an exception or HTTP\n status code that would be raised while trying to handle a request.\n \n-Registering\n-```````````\n+It is passed the instance of the error being handled, which is most\n+likely an integer that represents a :exc:`~werkzeug.exceptions.HTTPException`\n+status code. For example 500 (an ""Internal Server Error"") which maps to\n+:exc:`~werkzeug.exceptions.InternalServerError`.\n+\n+It is registered with the :meth:`~flask.Flask.errorhandler`\n+decorator or the :meth:`~flask.Flask.register_error_handler` to register\n+the function later. A handler can be registered for a status code,\n+like 404 or 500, or for an built-in exception class, like KeyError,\n+or a custom exception class that inherits from Exception or its subclasses.\n+\n+The status code of the response will not be set to the handler\'s code. Make\n+sure to provide the appropriate HTTP status code when returning a response from\n+a handler or a 200 OK HTTP code will be sent instead.\n+\n+.. code-block:: python\n+\n+    from werkzeug.exceptions import InternalServerError\n \n-Register handlers by decorating a function with\n-:meth:`~flask.Flask.errorhandler`. Or use\n-:meth:`~flask.Flask.register_error_handler` to register the function later.\n-Remember to set the error code when returning the response. ::\n+    # as a decorator with an int as the exception code\n+    @app.errorhandler(500)\n+    def handle_internal_server_error(e):\n+        # returning 500 with the text sets the error handler\'s code\n+        # make sure to provide the appropriate HTTP status code\n+        # otherwise 200 will be returned as default\n+        return \'Internal Server Error!\', 500\n \n-    @app.errorhandler(werkzeug.exceptions.BadRequest)\n-    def handle_bad_request(e):\n-        return \'bad request!\', 400\n+    # or, as a decorator with the werkzeug exception for internal server error\n+    @app.errorhandler(InternalServerError)\n+    def handle_internal_server_error(e):\n+        # werkzeug exceptions have a code attribute\n+        return \'Internal Server Error!\', e.code\n \n     # or, without the decorator\n-    app.register_error_handler(400, handle_bad_request)\n+    app.register_error_handler(500, handle_internal_server_error)\n+\n+    # similarly with a werkzeug exception\n+    app.register_error_handler(InternalServerError, handle_internal_server_error)\n+\n+\n+\n+A handler for ""500 Internal Server Error"" will not be used when running in\n+debug mode. Instead, the interactive debugger will be shown.\n+\n+If there is an error handler registered for ``InternalServerError``,\n+this will be invoked. As of Flask 1.1.0, this error handler will always\n+be passed an instance of ``InternalServerError``, not the original\n+unhandled error. The original error is available as ``e.original_exception``.\n+Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n+errors, use ``getattr`` to get access it for compatibility.\n+\n+.. code-block:: python\n+\n+    @app.errorhandler(InternalServerError)\n+    def handle_500(e):\n+        original = getattr(e, ""original_exception"", None)\n+\n+        if original is None:\n+            # direct 500 error, such as abort(500)\n+            return render_template(""500.html""), 500\n+\n+        # wrapped unhandled error\n+        return render_template(""500_unhandled.html"", e=original), 500\n+\n \n-:exc:`werkzeug.exceptions.HTTPException` subclasses like\n-:exc:`~werkzeug.exceptions.BadRequest` and their HTTP codes are interchangeable\n-when registering handlers. (``BadRequest.code == 400``)\n+\n+Registering Custom Exceptions\n+-----------------------------\n+\n+You can create your own custom exceptions by subclassing\n+:exc:`werkzeug.exceptions.HTTPException`. As shown above, integer HTTP codes\n+are interchangable when registering handlers. (``BadRequest.code == 400``)\n \n Non-standard HTTP codes cannot be registered by code because they are not known\n by Werkzeug. Instead, define a subclass of\n :class:`~werkzeug.exceptions.HTTPException` with the appropriate code and\n-register and raise that exception class. ::\n+register and raise that exception class:\n+\n+.. code-block:: python\n \n     class InsufficientStorage(werkzeug.exceptions.HTTPException):\n         code = 507\n         description = \'Not enough storage space.\'\n \n+    def handle_507(e):\n+        return \'Not enough storage space!\', 507\n+\n     app.register_error_handler(InsufficientStorage, handle_507)\n \n+    # during an request\n     raise InsufficientStorage()\n \n-Handlers can be registered for any exception class, not just\n-:exc:`~werkzeug.exceptions.HTTPException` subclasses or HTTP status\n-codes. Handlers can be registered for a specific class, or for all subclasses\n-of a parent class.\n+Handlers can be registered for any exception class that inherits from Exception.\n \n-Handling\n-````````\n \n-When an exception is caught by Flask while handling a request, it is first\n-looked up by code. If no handler is registered for the code, it is looked up\n-by its class hierarchy; the most specific handler is chosen. If no handler is\n-registered, :class:`~werkzeug.exceptions.HTTPException` subclasses show a\n-generic message about their code, while other exceptions are converted to a\n-generic 500 Internal Server Error.\n+Unhandled Exceptions\n+--------------------\n \n-For example, if an instance of :exc:`ConnectionRefusedError` is raised,\n-and a handler is registered for :exc:`ConnectionError` and\n-:exc:`ConnectionRefusedError`,\n-the more specific :exc:`ConnectionRefusedError` handler is called with the\n-exception instance to generate the response.\n+If an exception is raised in the code while Flask is handling a request and\n+there is no error handler registered for that exception, a ""500 Internal Server\n+Error"" will be returned instead. See :meth:`flask.Flask.handle_exception` for\n+information about this behavior.\n \n-Handlers registered on the blueprint take precedence over those registered\n-globally on the application, assuming a blueprint is handling the request that\n-raises the exception. However, the blueprint cannot handle 404 routing errors\n-because the 404 occurs at the routing level before the blueprint can be\n-determined.\n+Custom error pages\n+------------------\n+\n+The above examples wouldn\'t actually be an improvement on the default\n+exception pages. We can create a custom 500.html template like this:\n+\n+.. sourcecode:: html+jinja\n+\n+    {% extends ""layout.html"" %}\n+    {% block title %}Internal Server Error{% endblock %}\n+    {% block body %}\n+      <h1>Internal Server Error</h1>\n+      <p>Oops... we seem to have made a mistake, sorry!</p>\n+      <p><a href=""{{ url_for(\'index\') }}"">Go somewhere nice instead</a>\n+    {% endblock %}\n+\n+It can be implemented by rendering the template on ""500 Internal Server Error"":\n+\n+.. code-block:: python\n+\n+    from flask import render_template\n+\n+    @app.errorhandler(500)\n+    def internal_server_error(e):\n+        # note that we set the 500 status explicitly\n+        return render_template(\'500.html\'), 500\n+\n+\n+When using the :doc:`/patterns/appfactories`:\n+\n+.. code-block:: python\n+\n+\n+    from flask import Flask, render_template\n+\n+    def internal_server_error(e):\n+      return render_template(\'500.html\'), 500\n+\n+    def create_app():\n+        app = Flask(__name__)\n+        app.register_error_handler(500, internal_server_error)\n+        return app\n+\n+\n+When using :doc:`/blueprints`:\n+\n+.. code-block:: python\n+\n+    from flask import Blueprint\n+\n+    blog = Blueprint(\'blog\', __name__)\n+\n+    # as a decorator\n+    @blog.errorhandler(500)\n+    def internal_server_error(e):\n+        return render_template(\'500.html\'), 500\n+\n+    # or with register_error_handler\n+    blog.register_error_handler(500, internal_server_error)\n+\n+\n+\n+In blueprints errorhandlers will simply work as expected; however, there is a caveat\n+concerning handlers for 404 and 405 exceptions.  These errorhandlers are only\n+invoked from an appropriate ``raise`` statement or a call to ``abort`` in another\n+of the blueprint\'s view functions; they are not invoked by, e.g., an invalid URL\n+access.  This is because the blueprint does not ""own"" a certain URL space, so\n+the application instance has no way of knowing which blueprint error handler it\n+should run if given an invalid URL.  If you would like to execute different\n+handling strategies for these errors based on URL prefixes, they may be defined\n+at the application level using the ``request`` proxy object:\n+\n+.. code-block:: python\n+\n+    from flask import jsonify, render_template\n+\n+    # at the application level\n+    # not the blueprint level\n+    @app.errorhandler(404)\n+    def page_not_found(e):\n+        # if a request is in our blog URL space\n+        if request.path.startswith(\'/blog/\'):\n+            # we return a custom blog 404 page\n+            return render_template(""blog/404.html""), 404\n+        else:\n+            # otherwise we return our generic site-wide 404 page\n+            return render_template(""404.html""), 404\n+\n+\n+    @app.errorhandler(405)\n+    def method_not_allowed(e):\n+        # if a request has the wrong method to our API\n+        if request.path.startswith(\'/api/\'):\n+            # we return a json saying so\n+            return jsonify(message=""Method Not Allowed""), 405\n+        else:\n+            # otherwise we return a generic site-wide 405 page\n+            return render_template(""405.html""), 405\n+\n+\n+\n+More information on error handling with blueprint can be found in\n+:doc:`/blueprints`.\n+\n+\n+Returning API errors as JSON\n+````````````````````````````\n+\n+When building APIs in Flask, some developers realise that the builtin\n+exceptions are not expressive enough for APIs and that the content type of\n+:mimetype:`text/html` they are emitting is not very useful for API consumers.\n+\n+Using the same techniques as above and :func:`~flask.json.jsonify` we can return JSON\n+responses to API errors.  :func:`~flask.abort` is called\n+with a ``description`` parameter. The errorhandler will\n+use that as the JSON error message, and set the status code to 404.\n+\n+.. code-block:: python\n+\n+    from flask import abort, jsonify\n+\n+    @app.errorhandler(404)\n+    def resource_not_found(e):\n+        return jsonify(error=str(e)), 404\n+\n+    @app.route(""/cheese"")\n+    def get_one_cheese():\n+        resource = get_resource()\n+\n+        if resource is None:\n+            abort(404, description=""Resource not found"")\n+\n+        return jsonify(resource)\n+\n+\n+\n+We can also create custom exception classes; for instance, for an API we can\n+introduce a new custom exception that can take a proper human readable message,\n+a status code for the error and some optional payload to give more context\n+for the error.\n+\n+This is a simple example:\n+\n+.. code-block:: python\n+\n+    from flask import jsonify, request\n+\n+    class InvalidAPIUsage(Exception):\n+        status_code = 400\n+\n+        def __init__(self, message, status_code=None, payload=None):\n+            super().__init__()\n+            self.message = message\n+            if status_code is not None:\n+                self.status_code = status_code\n+            self.payload = payload\n+\n+        def to_dict(self):\n+            rv = dict(self.payload or ())\n+            rv[\'message\'] = self.message\n+            return rv\n+\n+    @app.errorhandler(InvalidAPIUsage)\n+    def invalid_api_usage(e):\n+        return jsonify(e.to_dict())\n+\n+    # an API app route for getting user information\n+    # a correct request might be /api/user?user_id=420\n+    @app.route(""/api/user"")\n+    def user_api(user_id):\n+        user_id = request.arg.get(""user_id"")\n+        if not user_id:\n+            raise InvalidAPIUsage(""No user id provided!"")\n+\n+        user = get_user(user_id=user_id)\n+        if not user:\n+            raise InvalidAPIUsage(""No such user!"", status_code=404)\n+\n+        return jsonify(user.to_dict())\n+\n+\n+A view can now raise that exception with an error message.  Additionally\n+some extra payload can be provided as a dictionary through the `payload`\n+parameter.\n \n \n Generic Exception Handlers\n@@ -169,6 +481,11 @@ so you don\'t lose information about the HTTP error.\n         response.content_type = ""application/json""\n         return response\n \n+    # or using jsonify\n+    @app.errorhandler(HTTPException)\n+    def handle_exception(e):\n+        return jsonify(""code"": e.code, ""name"": e.name, ""description"": e.description), e.code\n+\n \n An error handler for ``Exception`` might seem useful for changing how\n all errors, even unhandled ones, are presented to the user. However,\n@@ -196,50 +513,49 @@ register handlers for both ``HTTPException`` and ``Exception``, the\n ``Exception`` handler will not handle ``HTTPException`` subclasses\n because it the ``HTTPException`` handler is more specific.\n \n-Unhandled Exceptions\n-````````````````````\n \n-When there is no error handler registered for an exception, a 500\n-Internal Server Error will be returned instead. See\n-:meth:`flask.Flask.handle_exception` for information about this\n-behavior.\n+Generic Error Pages\n+-------------------\n \n-If there is an error handler registered for ``InternalServerError``,\n-this will be invoked. As of Flask 1.1.0, this error handler will always\n-be passed an instance of ``InternalServerError``, not the original\n-unhandled error. The original error is available as ``e.original_exception``.\n-Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n-errors, use ``getattr`` to get access it for compatibility.\n+If we pass in the exception into a template as below:\n \n .. code-block:: python\n \n-    @app.errorhandler(InternalServerError)\n-    def handle_500(e):\n-        original = getattr(e, ""original_exception"", None)\n+    from werkzeug.exceptions import HTTPException\n \n-        if original is None:\n-            # direct 500 error, such as abort(500)\n-            return render_template(""500.html""), 500\n+    @app.errorhandler(HTTPException)\n+    def handle_exception(e):\n+        return render_template(""exception.html"", e=e), e.code\n \n-        # wrapped unhandled error\n-        return render_template(""500_unhandled.html"", e=original), 500\n \n \n-Logging\n--------\n+.. sourcecode:: html+jinja\n+\n+    {% extends ""layout.html"" %}\n+    {% block title %}{{ e.name }}{% endblock %}\n+    {% block body %}\n+      <h1>{{ e.code }} {{ e.name }}</h1>\n+      <p>{{ e.description }}</p>\n+      <p><a href=""{{ url_for(\'index\') }}"">Go home</a>\n+    {% endblock %}\n \n-See :doc:`/logging` for information on how to log exceptions, such as by\n-emailing them to admins.\n \n \n Debugging Application Errors\n-============================\n+````````````````````````````\n \n For production applications, configure your application with logging and\n notifications as described in :doc:`/logging`. This section provides\n pointers when debugging deployment configuration and digging deeper with a\n full-featured Python debugger.\n \n+Logging\n+-------\n+\n+See :doc:`/logging` for information on how to log exceptions, such as by\n+emailing them to admins.\n+\n+\n \n When in Doubt, Run Manually\n ---------------------------\n@@ -292,3 +608,47 @@ you could have something like::\n        use_debugger = app.debug and not(app.config.get(\'DEBUG_WITH_APTANA\'))\n        app.run(use_debugger=use_debugger, debug=app.debug,\n                use_reloader=use_debugger, host=\'0.0.0.0\')\n+\n+\n+.. _error-logging-tools:\n+\n+\n+Error Logging Tools\n+-------------------\n+\n+Sending error mails, even if just for critical ones, can become\n+overwhelming if enough users are hitting the error and log files are\n+typically never looked at. This is why we recommend using `Sentry\n+<https://sentry.io/>`_ for dealing with application errors.  It\'s\n+available as an Open Source project `on GitHub\n+<https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n+<https://sentry.io/signup/>`_ which you can try for free. Sentry\n+aggregates duplicate errors, captures the full stack trace and local\n+variables for debugging, and sends you mails based on new errors or\n+frequency thresholds.\n+\n+To use Sentry you need to install the `sentry-sdk` client with extra `flask` dependencies::\n+\n+    $ pip install sentry-sdk[flask]\n+\n+And then add this to your Flask app::\n+\n+    import sentry_sdk\n+    from sentry_sdk.integrations.flask import FlaskIntegration\n+\n+    sentry_sdk.init(\'YOUR_DSN_HERE\',integrations=[FlaskIntegration()])\n+\n+The `YOUR_DSN_HERE` value needs to be replaced with the DSN value you get\n+from your Sentry installation.\n+\n+After installation, failures leading to an Internal Server Error\n+are automatically reported to Sentry and from there you can\n+receive error notifications.\n+\n+Follow-up reads:\n+\n+* Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n+  similar fashion.  See the `Python SDK docs\n+  <https://docs.sentry.io/platforms/python/>`_ for more information.\n+* `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n+* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n'",1.5,1.6
docs/blueprints.rst,docs/blueprints.rst,569c88d72102e502d71c07193182adb1769ee936,21c3df31de4bc2f838c945bd37d185210d9bab1a,'more changes to consolidated error handling docs',"'@@ -242,8 +242,10 @@ you can use relative redirects by prefixing the endpoint with a dot only::\n This will link to ``admin.index`` for instance in case the current request\n was dispatched to any other admin blueprint endpoint.\n \n-Error Handlers\n---------------\n+.. _my-blueprint-error-label:\n+\n+Blueprint Error Handlers\n+------------------------\n \n Blueprints support the ``errorhandler`` decorator just like the :class:`Flask`\n application object, so it is easy to make Blueprint-specific custom error\n'",1.0,1.0
docs/errorhandling.rst,docs/errorhandling.rst,569c88d72102e502d71c07193182adb1769ee936,21c3df31de4bc2f838c945bd37d185210d9bab1a,'more changes to consolidated error handling docs',"'@@ -26,11 +26,8 @@ page for you and log the exception to the :attr:`~flask.Flask.logger`.\n But there is more you can do, and we will cover some better setups to deal\n with errors including custom exceptions and 3rd party tools.\n \n-\n-.. _common-error-codes:\n-\n Common Error Codes\n-``````````````````\n+------------------\n \n The following error codes are some that are often displayed to the user,\n even if the application behaves correctly:\n@@ -66,32 +63,122 @@ even if the application behaves correctly:\n     A terribly good idea is to have a nice page there, because your\n     application *will* fail sooner or later.\n \n+Error Logging Tools\n+-------------------\n+\n+Sending error mails, even if just for critical ones, can become\n+overwhelming if enough users are hitting the error and log files are\n+typically never looked at. This is why we recommend using `Sentry\n+<https://sentry.io/>`_ for dealing with application errors.  It\'s\n+available as an Open Source project `on GitHub\n+<https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n+<https://sentry.io/signup/>`_ which you can try for free. Sentry\n+aggregates duplicate errors, captures the full stack trace and local\n+variables for debugging, and sends you mails based on new errors or\n+frequency thresholds.\n+\n+To use Sentry you need to install the `sentry-sdk` client with extra `flask` dependencies::\n+\n+    $ pip install sentry-sdk[flask]\n+\n+And then add this to your Flask app::\n+\n+    import sentry_sdk\n+    from sentry_sdk.integrations.flask import FlaskIntegration\n+\n+    sentry_sdk.init(\'YOUR_DSN_HERE\',integrations=[FlaskIntegration()])\n+\n+The `YOUR_DSN_HERE` value needs to be replaced with the DSN value you get\n+from your Sentry installation.\n+\n+After installation, failures leading to an Internal Server Error\n+are automatically reported to Sentry and from there you can\n+receive error notifications.\n+\n+Follow-up reads:\n+\n+* Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n+  similar fashion.  See the `Python SDK docs\n+  <https://docs.sentry.io/platforms/python/>`_ for more information.\n+* `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n+* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n+\n+.. _error-handlers:\n+\n+Error Handlers\n+--------------\n+\n+You might want to show custom error pages to the user when an error occurs.\n+This can be done by registering error handlers.\n+\n+An error handler is a function that returns a response when a type of error is\n+raised, similar to how a view is a function that returns a response when a\n+request URL is matched. It is passed the instance of the error being handled,\n+which is most likely a :exc:`~werkzeug.exceptions.HTTPException`.\n+\n+The status code of the response will not be set to the handler\'s code. Make\n+sure to provide the appropriate HTTP status code when returning a response from\n+a handler.\n+\n+Registering\n+```````````\n+\n+Register handlers by decorating a function with\n+:meth:`~flask.Flask.errorhandler`. Or use\n+:meth:`~flask.Flask.register_error_handler` to register the function later.\n+Remember to set the error code when returning the response. ::\n+\n+    @app.errorhandler(werkzeug.exceptions.BadRequest)\n+    def handle_bad_request(e):\n+        return \'bad request!\', 400\n+\n+    # or, without the decorator\n+    app.register_error_handler(400, handle_bad_request)\n+\n+:exc:`werkzeug.exceptions.HTTPException` subclasses like\n+:exc:`~werkzeug.exceptions.BadRequest` and their HTTP codes are interchangeable\n+when registering handlers. (``BadRequest.code == 400``)\n+\n+Non-standard HTTP codes cannot be registered by code because they are not known\n+by Werkzeug. Instead, define a subclass of\n+:class:`~werkzeug.exceptions.HTTPException` with the appropriate code and\n+register and raise that exception class. ::\n+\n+    class InsufficientStorage(werkzeug.exceptions.HTTPException):\n+        code = 507\n+        description = \'Not enough storage space.\'\n+\n+    app.register_error_handler(InsufficientStorage, handle_507)\n+\n+    raise InsufficientStorage()\n \n+Handlers can be registered for any exception class, not just\n+:exc:`~werkzeug.exceptions.HTTPException` subclasses or HTTP status\n+codes. Handlers can be registered for a specific class, or for all subclasses\n+of a parent class.\n \n-Default Error Handling\n-``````````````````````\n+Handling\n+````````\n \n When building a Flask application you *will* run into exceptions. If some part\n of your code breaks while handling a request (and you have no error handlers\n-registered) an ""500 Internal Server Error""\n+registered), a ""500 Internal Server Error""\n (:exc:`~werkzeug.exceptions.InternalServerError`) will be returned by default.\n-Similarly, if a request is sent to an unregistered route a ""404 Not Found""\n-(:exc:`~werkzeug.exceptions.NotFound`) error will occur. If a route receives an\n-unallowed request method a ""405 Method Not Allowed""\n+Similarly, ""404 Not Found""\n+(:exc:`~werkzeug.exceptions.NotFound`) error will occur if a request is sent to an unregistered route.\n+If a route receives an unallowed request method, a ""405 Method Not Allowed""\n (:exc:`~werkzeug.exceptions.MethodNotAllowed`) will be raised. These are all\n subclasses of :class:`~werkzeug.exceptions.HTTPException` and are provided by\n default in Flask.\n \n Flask gives you to the ability to raise any HTTP exception registered by\n-werkzeug. However, as the default HTTP exceptions return simple exception\n-pages, Flask also offers the opportunity to customise these HTTP exceptions via\n-custom error handlers as well as to add exception handlers for builtin and\n-custom exceptions.\n-\n-When an exception is caught by Flask while handling a request, it is first\n-looked up by code. If no handler is registered for the code, it is looked up\n-by its class hierarchy; the most specific handler is chosen. If no handler is\n-registered, :class:`~werkzeug.exceptions.HTTPException` subclasses show a\n+Werkzeug. However, the default HTTP exceptions return simple exception\n+pages. You might want to show custom error pages to the user when an error occurs.\n+This can be done by registering error handlers.\n+\n+When Flask catches an exception while handling a request, it is first looked up by code.\n+If no handler is registered for the code, Flask looks up the error by its class hierarchy; the most specific handler is chosen.\n+If no handler is registered, :class:`~werkzeug.exceptions.HTTPException` subclasses show a\n generic message about their code, while other exceptions are converted to a\n generic ""500 Internal Server Error"".\n \n@@ -106,108 +193,81 @@ raises the exception. However, the blueprint cannot handle 404 routing errors\n because the 404 occurs at the routing level before the blueprint can be\n determined.\n \n+Generic Exception Handlers\n+``````````````````````````\n \n+It is possible to register error handlers for very generic base classes\n+such as ``HTTPException`` or even ``Exception``. However, be aware that\n+these will catch more than you might expect.\n \n-.. _handling-errors:\n-\n-Handling Errors\n-```````````````\n-\n-Sometimes when building a Flask application, you might want to raise a\n-:exc:`~werkzeug.exceptions.HTTPException` to signal to the user that\n-something is wrong with the request. Fortunately, Flask comes with a handy\n-:func:`~flask.abort` function that aborts a request with a HTTP error from\n-werkzeug as desired.\n-\n-Consider the code below, we might have a user profile route, but if the user\n-fails to pass a username we raise a ""400 Bad Request"" and if the user passes a\n-username but we can\'t find it, we raise a ""404 Not Found"".\n+For example, an error handler for ``HTTPException`` might be useful for turning\n+the default HTML errors pages into JSON. However, this\n+handler will trigger for things you don\'t cause directly, such as 404\n+and 405 errors during routing. Be sure to craft your handler carefully\n+so you don\'t lose information about the HTTP error.\n \n .. code-block:: python\n \n-    from flask import abort, render_template, request\n-\n-    # a username needs to be supplied in the query args\n-    # a successful request would be like /profile?username=jack\n-    @app.route(""/profile"")\n-    def user_profile():\n-        username = request.arg.get(""username"")\n-        # if a username isn\'t supplied in the request, return a 400 bad request\n-        if username is None:\n-            abort(400)\n-\n-        user = get_user(username=username)\n-        # if a user can\'t be found by their username, return 404 not found\n-        if user is None:\n-            abort(404)\n-\n-        return render_template(""profile.html"", user=user)\n-\n-\n-\n-.. _custom-error-handlers:\n-\n-Custom error handlers\n-`````````````````````\n-\n-The default :exc:`~werkzeug.exceptions.HTTPException` returns a black and white\n-error page with a basic description, but nothing fancy. Considering\n-these errors *will* be thrown during the lifetime of your application, it is\n-highly advisable to customise these exceptions to improve the user experience\n-of your site. This can be done by registering error handlers.\n+    from flask import json\n+    from werkzeug.exceptions import HTTPException\n \n-An error handler is a normal view function that returns a response, but instead\n-of being registered for a route, it is registered for an exception or HTTP\n-status code that would be raised while trying to handle a request.\n+    @app.errorhandler(HTTPException)\n+    def handle_exception(e):\n+        """"""Return JSON instead of HTML for HTTP errors.""""""\n+        # start with the correct headers and status code from the error\n+        response = e.get_response()\n+        # replace the body with JSON\n+        response.data = json.dumps({\n+            ""code"": e.code,\n+            ""name"": e.name,\n+            ""description"": e.description,\n+        })\n+        response.content_type = ""application/json""\n+        return response\n \n-It is passed the instance of the error being handled, which is most\n-likely an integer that represents a :exc:`~werkzeug.exceptions.HTTPException`\n-status code. For example 500 (an ""Internal Server Error"") which maps to\n-:exc:`~werkzeug.exceptions.InternalServerError`.\n \n-It is registered with the :meth:`~flask.Flask.errorhandler`\n-decorator or the :meth:`~flask.Flask.register_error_handler` to register\n-the function later. A handler can be registered for a status code,\n-like 404 or 500, or for an built-in exception class, like KeyError,\n-or a custom exception class that inherits from Exception or its subclasses.\n+An error handler for ``Exception`` might seem useful for changing how\n+all errors, even unhandled ones, are presented to the user. However,\n+this is similar to doing ``except Exception:`` in Python, it will\n+capture *all* otherwise unhandled errors, including all HTTP status\n+codes.\n \n-The status code of the response will not be set to the handler\'s code. Make\n-sure to provide the appropriate HTTP status code when returning a response from\n-a handler or a 200 OK HTTP code will be sent instead.\n+In most cases it will be safer to register handlers for more\n+specific exceptions. Since ``HTTPException`` instances are valid WSGI\n+responses, you could also pass them through directly.\n \n .. code-block:: python\n \n-    from werkzeug.exceptions import InternalServerError\n-\n-    # as a decorator with an int as the exception code\n-    @app.errorhandler(500)\n-    def handle_internal_server_error(e):\n-        # returning 500 with the text sets the error handler\'s code\n-        # make sure to provide the appropriate HTTP status code\n-        # otherwise 200 will be returned as default\n-        return \'Internal Server Error!\', 500\n-\n-    # or, as a decorator with the werkzeug exception for internal server error\n-    @app.errorhandler(InternalServerError)\n-    def handle_internal_server_error(e):\n-        # werkzeug exceptions have a code attribute\n-        return \'Internal Server Error!\', e.code\n+    from werkzeug.exceptions import HTTPException\n \n-    # or, without the decorator\n-    app.register_error_handler(500, handle_internal_server_error)\n+    @app.errorhandler(Exception)\n+    def handle_exception(e):\n+        # pass through HTTP errors\n+        if isinstance(e, HTTPException):\n+            return e\n \n-    # similarly with a werkzeug exception\n-    app.register_error_handler(InternalServerError, handle_internal_server_error)\n+        # now you\'re handling non-HTTP exceptions only\n+        return render_template(""500_generic.html"", e=e), 500\n \n+Error handlers still respect the exception class hierarchy. If you\n+register handlers for both ``HTTPException`` and ``Exception``, the\n+``Exception`` handler will not handle ``HTTPException`` subclasses\n+because it the ``HTTPException`` handler is more specific.\n \n+Unhandled Exceptions\n+````````````````````\n \n-A handler for ""500 Internal Server Error"" will not be used when running in\n-debug mode. Instead, the interactive debugger will be shown.\n+When there is no error handler registered for an exception, a 500\n+Internal Server Error will be returned instead. See\n+:meth:`flask.Flask.handle_exception` for information about this\n+behavior.\n \n If there is an error handler registered for ``InternalServerError``,\n this will be invoked. As of Flask 1.1.0, this error handler will always\n be passed an instance of ``InternalServerError``, not the original\n-unhandled error. The original error is available as ``e.original_exception``.\n+unhandled error.\n+\n+The original error is available as ``e.original_exception``.\n Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n errors, use ``getattr`` to get access it for compatibility.\n \n@@ -224,47 +284,82 @@ errors, use ``getattr`` to get access it for compatibility.\n         # wrapped unhandled error\n         return render_template(""500_unhandled.html"", e=original), 500\n \n+An error handler for ""500 Internal Server Error"" will be passed uncaught exceptions in\n+addition to explicit 500 errors. In debug mode, a handler for ""500 Internal Server Error"" will not be used.\n+Instead, the interactive debugger will be shown.\n \n+Custom Error Pages\n+------------------\n \n-Registering Custom Exceptions\n------------------------------\n+Sometimes when building a Flask application, you might want to raise a\n+:exc:`~werkzeug.exceptions.HTTPException` to signal to the user that\n+something is wrong with the request. Fortunately, Flask comes with a handy\n+:func:`~flask.abort` function that aborts a request with a HTTP error from\n+werkzeug as desired. It will also provide a plain black and white error page\n+for you with a basic description, but nothing fancy.\n \n-You can create your own custom exceptions by subclassing\n-:exc:`werkzeug.exceptions.HTTPException`. As shown above, integer HTTP codes\n-are interchangable when registering handlers. (``BadRequest.code == 400``)\n+Depending on the error code it is less or more likely for the user to\n+actually see such an error.\n \n-Non-standard HTTP codes cannot be registered by code because they are not known\n-by Werkzeug. Instead, define a subclass of\n-:class:`~werkzeug.exceptions.HTTPException` with the appropriate code and\n-register and raise that exception class:\n+Consider the code below, we might have a user profile route, and if the user\n+fails to pass a username we can raise a ""400 Bad Request"". If the user passes a\n+username and we can\'t find it, we raise a ""404 Not Found"".\n \n .. code-block:: python\n \n-    class InsufficientStorage(werkzeug.exceptions.HTTPException):\n-        code = 507\n-        description = \'Not enough storage space.\'\n+    from flask import abort, render_template, request\n \n-    def handle_507(e):\n-        return \'Not enough storage space!\', 507\n+    # a username needs to be supplied in the query args\n+    # a successful request would be like /profile?username=jack\n+    @app.route(""/profile"")\n+    def user_profile():\n+        username = request.arg.get(""username"")\n+        # if a username isn\'t supplied in the request, return a 400 bad request\n+        if username is None:\n+            abort(400)\n \n-    app.register_error_handler(InsufficientStorage, handle_507)\n+        user = get_user(username=username)\n+        # if a user can\'t be found by their username, return 404 not found\n+        if user is None:\n+            abort(404)\n \n-    # during an request\n-    raise InsufficientStorage()\n+        return render_template(""profile.html"", user=user)\n \n-Handlers can be registered for any exception class that inherits from Exception.\n+Here is another example implementation for a ""404 Page Not Found"" exception::\n \n+    from flask import render_template\n \n-Unhandled Exceptions\n---------------------\n+    @app.errorhandler(404)\n+    def page_not_found(e):\n+        # note that we set the 404 status explicitly\n+        return render_template(\'404.html\'), 404\n \n-If an exception is raised in the code while Flask is handling a request and\n-there is no error handler registered for that exception, a ""500 Internal Server\n-Error"" will be returned instead. See :meth:`flask.Flask.handle_exception` for\n-information about this behavior.\n+When using :doc:`/patterns/appfactories`::\n \n-Custom error pages\n-------------------\n+    from flask import Flask, render_template\n+\n+    def page_not_found(e):\n+      return render_template(\'404.html\'), 404\n+\n+    def create_app(config_filename):\n+        app = Flask(__name__)\n+        app.register_error_handler(404, page_not_found)\n+        return app\n+\n+An example template might be this:\n+\n+.. sourcecode:: html+jinja\n+\n+    {% extends ""layout.html"" %}\n+    {% block title %}Page Not Found{% endblock %}\n+    {% block body %}\n+      <h1>Page Not Found</h1>\n+      <p>What you were looking for is just not there.\n+      <p><a href=""{{ url_for(\'index\') }}"">go somewhere nice</a>\n+    {% endblock %}\n+\n+Further Examples\n+````````````````\n \n The above examples wouldn\'t actually be an improvement on the default\n exception pages. We can create a custom 500.html template like this:\n@@ -291,7 +386,7 @@ It can be implemented by rendering the template on ""500 Internal Server Error"":\n         return render_template(\'500.html\'), 500\n \n \n-When using the :doc:`/patterns/appfactories`:\n+When using :doc:`/patterns/appfactories`:\n \n .. code-block:: python\n \n@@ -323,15 +418,18 @@ When using :doc:`/blueprints`:\n     # or with register_error_handler\n     blog.register_error_handler(500, internal_server_error)\n \n+Blueprint Error Handling\n+````````````````````````\n \n-\n-In blueprints errorhandlers will simply work as expected; however, there is a caveat\n-concerning handlers for 404 and 405 exceptions.  These errorhandlers are only\n+In blueprints, error handlers will work as expected. However, there is a caveat\n+concerning handlers for 404 and 405 exceptions.  These error handlers are only\n invoked from an appropriate ``raise`` statement or a call to ``abort`` in another\n of the blueprint\'s view functions; they are not invoked by, e.g., an invalid URL\n-access.  This is because the blueprint does not ""own"" a certain URL space, so\n+access.\n+\n+This is because the blueprint does not ""own"" a certain URL space, so\n the application instance has no way of knowing which blueprint error handler it\n-should run if given an invalid URL.  If you would like to execute different\n+should run if given an invalid URL. If you would like to execute different\n handling strategies for these errors based on URL prefixes, they may be defined\n at the application level using the ``request`` proxy object:\n \n@@ -364,20 +462,18 @@ at the application level using the ``request`` proxy object:\n \n \n \n-More information on error handling with blueprint can be found in\n-:doc:`/blueprints`.\n-\n+For more information on Blueprint Error Handling see :ref:`my-blueprint-error-label`.\n \n Returning API errors as JSON\n ````````````````````````````\n \n-When building APIs in Flask, some developers realise that the builtin\n+When building APIs in Flask, some developers realise that the built-in\n exceptions are not expressive enough for APIs and that the content type of\n :mimetype:`text/html` they are emitting is not very useful for API consumers.\n \n Using the same techniques as above and :func:`~flask.json.jsonify` we can return JSON\n responses to API errors.  :func:`~flask.abort` is called\n-with a ``description`` parameter. The errorhandler will\n+with a ``description`` parameter. The error handler will\n use that as the JSON error message, and set the status code to 404.\n \n .. code-block:: python\n@@ -397,10 +493,8 @@ use that as the JSON error message, and set the status code to 404.\n \n         return jsonify(resource)\n \n-\n-\n-We can also create custom exception classes; for instance, for an API we can\n-introduce a new custom exception that can take a proper human readable message,\n+We can also create custom exception classes. For instance, we can\n+introduce a new custom exception for an API that can take a proper human readable message,\n a status code for the error and some optional payload to give more context\n for the error.\n \n@@ -444,119 +538,24 @@ This is a simple example:\n         return jsonify(user.to_dict())\n \n \n-A view can now raise that exception with an error message.  Additionally\n+A view can now raise that exception with an error message. Additionally\n some extra payload can be provided as a dictionary through the `payload`\n parameter.\n \n+Logging\n+-------\n \n-Generic Exception Handlers\n-``````````````````````````\n-\n-It is possible to register error handlers for very generic base classes\n-such as ``HTTPException`` or even ``Exception``. However, be aware that\n-these will catch more than you might expect.\n-\n-An error handler for ``HTTPException`` might be useful for turning\n-the default HTML errors pages into JSON, for example. However, this\n-handler will trigger for things you don\'t cause directly, such as 404\n-and 405 errors during routing. Be sure to craft your handler carefully\n-so you don\'t lose information about the HTTP error.\n-\n-.. code-block:: python\n-\n-    from flask import json\n-    from werkzeug.exceptions import HTTPException\n-\n-    @app.errorhandler(HTTPException)\n-    def handle_exception(e):\n-        """"""Return JSON instead of HTML for HTTP errors.""""""\n-        # start with the correct headers and status code from the error\n-        response = e.get_response()\n-        # replace the body with JSON\n-        response.data = json.dumps({\n-            ""code"": e.code,\n-            ""name"": e.name,\n-            ""description"": e.description,\n-        })\n-        response.content_type = ""application/json""\n-        return response\n-\n-    # or using jsonify\n-    @app.errorhandler(HTTPException)\n-    def handle_exception(e):\n-        return jsonify(""code"": e.code, ""name"": e.name, ""description"": e.description), e.code\n-\n-\n-An error handler for ``Exception`` might seem useful for changing how\n-all errors, even unhandled ones, are presented to the user. However,\n-this is similar to doing ``except Exception:`` in Python, it will\n-capture *all* otherwise unhandled errors, including all HTTP status\n-codes. In most cases it will be safer to register handlers for more\n-specific exceptions. Since ``HTTPException`` instances are valid WSGI\n-responses, you could also pass them through directly.\n-\n-.. code-block:: python\n-\n-    from werkzeug.exceptions import HTTPException\n-\n-    @app.errorhandler(Exception)\n-    def handle_exception(e):\n-        # pass through HTTP errors\n-        if isinstance(e, HTTPException):\n-            return e\n-\n-        # now you\'re handling non-HTTP exceptions only\n-        return render_template(""500_generic.html"", e=e), 500\n-\n-Error handlers still respect the exception class hierarchy. If you\n-register handlers for both ``HTTPException`` and ``Exception``, the\n-``Exception`` handler will not handle ``HTTPException`` subclasses\n-because it the ``HTTPException`` handler is more specific.\n-\n-\n-Generic Error Pages\n--------------------\n-\n-If we pass in the exception into a template as below:\n-\n-.. code-block:: python\n-\n-    from werkzeug.exceptions import HTTPException\n-\n-    @app.errorhandler(HTTPException)\n-    def handle_exception(e):\n-        return render_template(""exception.html"", e=e), e.code\n-\n-\n-\n-.. sourcecode:: html+jinja\n-\n-    {% extends ""layout.html"" %}\n-    {% block title %}{{ e.name }}{% endblock %}\n-    {% block body %}\n-      <h1>{{ e.code }} {{ e.name }}</h1>\n-      <p>{{ e.description }}</p>\n-      <p><a href=""{{ url_for(\'index\') }}"">Go home</a>\n-    {% endblock %}\n-\n-\n+See :doc:`/logging` for information on how to log exceptions, such as by\n+emailing them to admins.\n \n Debugging Application Errors\n-````````````````````````````\n+============================\n \n For production applications, configure your application with logging and\n notifications as described in :doc:`/logging`. This section provides\n pointers when debugging deployment configuration and digging deeper with a\n full-featured Python debugger.\n \n-Logging\n--------\n-\n-See :doc:`/logging` for information on how to log exceptions, such as by\n-emailing them to admins.\n-\n-\n-\n When in Doubt, Run Manually\n ---------------------------\n \n@@ -608,47 +607,3 @@ you could have something like::\n        use_debugger = app.debug and not(app.config.get(\'DEBUG_WITH_APTANA\'))\n        app.run(use_debugger=use_debugger, debug=app.debug,\n                use_reloader=use_debugger, host=\'0.0.0.0\')\n-\n-\n-.. _error-logging-tools:\n-\n-\n-Error Logging Tools\n--------------------\n-\n-Sending error mails, even if just for critical ones, can become\n-overwhelming if enough users are hitting the error and log files are\n-typically never looked at. This is why we recommend using `Sentry\n-<https://sentry.io/>`_ for dealing with application errors.  It\'s\n-available as an Open Source project `on GitHub\n-<https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n-<https://sentry.io/signup/>`_ which you can try for free. Sentry\n-aggregates duplicate errors, captures the full stack trace and local\n-variables for debugging, and sends you mails based on new errors or\n-frequency thresholds.\n-\n-To use Sentry you need to install the `sentry-sdk` client with extra `flask` dependencies::\n-\n-    $ pip install sentry-sdk[flask]\n-\n-And then add this to your Flask app::\n-\n-    import sentry_sdk\n-    from sentry_sdk.integrations.flask import FlaskIntegration\n-\n-    sentry_sdk.init(\'YOUR_DSN_HERE\',integrations=[FlaskIntegration()])\n-\n-The `YOUR_DSN_HERE` value needs to be replaced with the DSN value you get\n-from your Sentry installation.\n-\n-After installation, failures leading to an Internal Server Error\n-are automatically reported to Sentry and from there you can\n-receive error notifications.\n-\n-Follow-up reads:\n-\n-* Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n-  similar fashion.  See the `Python SDK docs\n-  <https://docs.sentry.io/platforms/python/>`_ for more information.\n-* `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n-* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n'",1.6,1.6666666666666667
tests/test_cli.py,tests/test_cli.py,75a9b7465003205981b97fd4a133b07d7c330167,4e854ee49687ceac90985526928d901570d3585d,'DOC: Remove unnecessary docstrings',"'@@ -44,7 +44,6 @@ def test_cli_name(test_apps):\n \n \n def test_find_best_app(test_apps):\n-    """"""Test if `find_best_app` behaves as expected with different combinations of input.""""""  # noqa: B950\n     script_info = ScriptInfo()\n \n     class Module:\n@@ -271,7 +270,6 @@ def test_get_version(test_apps, capsys):\n \n \n def test_scriptinfo(test_apps, monkeypatch):\n-    """"""Test of ScriptInfo.""""""\n     obj = ScriptInfo(app_import_path=""cliapp.app:testapp"")\n     app = obj.load_app()\n     assert app.name == ""testapp""\n@@ -321,8 +319,6 @@ def test_scriptinfo(test_apps, monkeypatch):\n \n \n def test_with_appcontext(runner):\n-    """"""Test of with_appcontext.""""""\n-\n     @click.command()\n     @with_appcontext\n     def testcmd():\n@@ -336,8 +332,6 @@ def test_with_appcontext(runner):\n \n \n def test_appgroup(runner):\n-    """"""Test of with_appcontext.""""""\n-\n     @click.group(cls=AppGroup)\n     def cli():\n         pass\n@@ -366,8 +360,6 @@ def test_appgroup(runner):\n \n \n def test_flaskgroup(runner):\n-    """"""Test FlaskGroup.""""""\n-\n     def create_app():\n         return Flask(""flaskgroup"")\n \n@@ -386,8 +378,6 @@ def test_flaskgroup(runner):\n \n @pytest.mark.parametrize(""set_debug_flag"", (True, False))\n def test_flaskgroup_debug(runner, set_debug_flag):\n-    """"""Test FlaskGroup debug flag behavior.""""""\n-\n     def create_app():\n         app = Flask(""flaskgroup"")\n         app.debug = True\n'",1.0476190476190477,1.0476190476190477
tests/test_helpers.py,tests/test_helpers.py,75a9b7465003205981b97fd4a133b07d7c330167,4e854ee49687ceac90985526928d901570d3585d,'DOC: Remove unnecessary docstrings',"'@@ -116,8 +116,6 @@ class TestJSON:\n         ""test_value"", [0, -1, 1, 23, 3.14, ""s"", ""longer string"", True, False, None]\n     )\n     def test_jsonify_basic_types(self, test_value, app, client):\n-        """"""Test jsonify with basic types.""""""\n-\n         url = ""/jsonify_basic_types""\n         app.add_url_rule(url, url, lambda x=test_value: flask.jsonify(x))\n         rv = client.get(url)\n@@ -125,7 +123,6 @@ class TestJSON:\n         assert flask.json.loads(rv.data) == test_value\n \n     def test_jsonify_dicts(self, app, client):\n-        """"""Test jsonify with dicts and kwargs unpacking.""""""\n         d = {\n             ""a"": 0,\n             ""b"": 23,\n'",1.1862745098039216,1.1862745098039216
requirements/dev.txt,requirements/dev.txt,3f8ff0d181f0979a467676287f148afd8ee187d3,21c3df31de4bc2f838c945bd37d185210d9bab1a,'Bump pip-tools from 5.2.1 to 5.3.0\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 5.2.1 to 5.3.0.\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jazzband/pip-tools/compare/5.2.1...5.3.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -26,7 +26,7 @@ more-itertools==8.3.0     # via pytest\n nodeenv==1.3.5            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.2.1          # via -r requirements/dev.in\n+pip-tools==5.3.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.6.0         # via -r requirements/dev.in\n py==1.8.1                 # via pytest, tox\n'",0,0
docs/testing.rst,docs/testing.rst,daf9ec790a14e556049df36904ebc86c45f85b7b,93dd1709d05a1cf0e886df6223377bdab3b077fb,'swapping self.assert_equal for assert\n\nself.assert_equal is not in a class and is ambiguous. Beginners might copy and paste this example and not understand it.',"""@@ -312,7 +312,7 @@ And then to use it::\n         with app.test_client() as c:\n             resp = c.get('/users/me')\n             data = json.loads(resp.data)\n-            self.assert_equal(data['username'], my_user.username)\n+            assert data['username'] == my_user.username\n \n \n Keeping the Context Around\n""",0,0
docs/errorhandling.rst,docs/errorhandling.rst,0db95259db5b310c8c4ac9b97ca2b6ae075c06e5,569c88d72102e502d71c07193182adb1769ee936,'normalize sentence spacing',"'@@ -3,10 +3,10 @@ Handling Application Errors\n \n .. versionadded:: 0.3\n \n-Applications fail, servers fail.  Sooner or later you will see an exception\n-in production.  Even if your code is 100% correct, you will still see\n-exceptions from time to time.  Why?  Because everything else involved will\n-fail.  Here are some situations where perfectly fine code can lead to server\n+Applications fail, servers fail. Sooner or later you will see an exception\n+in production. Even if your code is 100% correct, you will still see\n+exceptions from time to time. Why? Because everything else involved will\n+fail. Here are some situations where perfectly fine code can lead to server\n errors:\n \n -   the client terminated the request early and the application was still\n@@ -18,8 +18,8 @@ errors:\n -   a programming error in a library you are using\n -   network connection of the server to another system failed\n \n-And that\'s just a small sample of issues you could be facing.  So how do we\n-deal with that sort of problem?  By default if your application runs in\n+And that\'s just a small sample of issues you could be facing. So how do we\n+deal with that sort of problem? By default if your application runs in\n production mode, and an exception is raised Flask will display a very simple\n page for you and log the exception to the :attr:`~flask.Flask.logger`.\n \n@@ -39,21 +39,21 @@ even if the application behaves correctly:\n \n *403 Forbidden*\n     If you have some kind of access control on your website, you will have\n-    to send a 403 code for disallowed resources.  So make sure the user\n+    to send a 403 code for disallowed resources. So make sure the user\n     is not lost when they try to access a forbidden resource.\n \n *404 Not Found*\n-    The good old ""chap, you made a mistake typing that URL"" message.  So\n+    The good old ""chap, you made a mistake typing that URL"" message. So\n     common that even novices to the internet know that 404 means: damn,\n-    the thing I was looking for is not there.  It\'s a very good idea to\n+    the thing I was looking for is not there. It\'s a very good idea to\n     make sure there is actually something useful on a 404 page, at least a\n     link back to the index.\n \n *410 Gone*\n     Did you know that there the ""404 Not Found"" has a brother named ""410\n-    Gone""?  Few people actually implement that, but the idea is that\n+    Gone""? Few people actually implement that, but the idea is that\n     resources that previously existed and got deleted answer with 410\n-    instead of 404.  If you are not deleting documents permanently from\n+    instead of 404. If you are not deleting documents permanently from\n     the database but just mark them as deleted, do the user a favour and\n     use the 410 code instead and display a message that what they were\n     looking for was deleted for all eternity.\n@@ -69,7 +69,7 @@ Error Logging Tools\n Sending error mails, even if just for critical ones, can become\n overwhelming if enough users are hitting the error and log files are\n typically never looked at. This is why we recommend using `Sentry\n-<https://sentry.io/>`_ for dealing with application errors.  It\'s\n+<https://sentry.io/>`_ for dealing with application errors. It\'s\n available as an Open Source project `on GitHub\n <https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n <https://sentry.io/signup/>`_ which you can try for free. Sentry\n@@ -98,7 +98,7 @@ receive error notifications.\n Follow-up reads:\n \n * Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n-  similar fashion.  See the `Python SDK docs\n+  similar fashion. See the `Python SDK docs\n   <https://docs.sentry.io/platforms/python/>`_ for more information.\n * `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n * `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n@@ -422,7 +422,7 @@ Blueprint Error Handling\n ````````````````````````\n \n In blueprints, error handlers will work as expected. However, there is a caveat\n-concerning handlers for 404 and 405 exceptions.  These error handlers are only\n+concerning handlers for 404 and 405 exceptions. These error handlers are only\n invoked from an appropriate ``raise`` statement or a call to ``abort`` in another\n of the blueprint\'s view functions; they are not invoked by, e.g., an invalid URL\n access.\n@@ -559,11 +559,11 @@ full-featured Python debugger.\n When in Doubt, Run Manually\n ---------------------------\n \n-Having problems getting your application configured for production?  If you\n+Having problems getting your application configured for production? If you\n have shell access to your host, verify that you can run your application\n-manually from the shell in the deployment environment.  Be sure to run under\n+manually from the shell in the deployment environment. Be sure to run under\n the same user account as the configured deployment to troubleshoot permission\n-issues.  You can use Flask\'s builtin development server with `debug=True` on\n+issues. You can use Flask\'s builtin development server with `debug=True` on\n your production host, which is helpful in catching configuration issues, but\n **be sure to do this temporarily in a controlled environment.** Do not run in\n production with `debug=True`.\n@@ -575,8 +575,8 @@ Working with Debuggers\n ----------------------\n \n To dig deeper, possibly to trace code execution, Flask provides a debugger out\n-of the box (see :ref:`debug-mode`).  If you would like to use another Python\n-debugger, note that debuggers interfere with each other.  You have to set some\n+of the box (see :ref:`debug-mode`). If you would like to use another Python\n+debugger, note that debuggers interfere with each other. You have to set some\n options in order to use your favorite debugger:\n \n * ``debug``        - whether to enable debug mode and catch exceptions\n'",1.6666666666666667,1.6666666666666667
docs/errorhandling.rst,docs/errorhandling.rst,2db3c9a72e446eac980451ef688d87b4fd32cad4,0db95259db5b310c8c4ac9b97ca2b6ae075c06e5,'rewrite external debuggers section',"'@@ -1,8 +1,6 @@\n Handling Application Errors\n ===========================\n \n-.. versionadded:: 0.3\n-\n Applications fail, servers fail. Sooner or later you will see an exception\n in production. Even if your code is 100% correct, you will still see\n exceptions from time to time. Why? Because everything else involved will\n@@ -574,36 +572,34 @@ production with `debug=True`.\n Working with Debuggers\n ----------------------\n \n-To dig deeper, possibly to trace code execution, Flask provides a debugger out\n-of the box (see :ref:`debug-mode`). If you would like to use another Python\n-debugger, note that debuggers interfere with each other. You have to set some\n-options in order to use your favorite debugger:\n+The built-in development server provides a :ref:`debug-mode` that shows\n+an interactive traceback in the browser when an unhandled error occurs\n+during a request.\n+\n+External debuggers, such as those provided by IDEs, can offer a much\n+more powerful and visual debugging experience. They can also be used to\n+step through code during a request before an error is raised, or if no\n+error is raised.\n \n-* ``debug``        - whether to enable debug mode and catch exceptions\n-* ``use_debugger`` - whether to use the internal Flask debugger\n-* ``use_reloader`` - whether to reload and fork the process if modules\n-  were changed\n+When using an external debugger, the app should still be in debug mode,\n+but it can be useful to disable the built-in debugger and reloader,\n+which can interfere.\n \n-``debug`` must be True (i.e., exceptions must be caught) in order for the other\n-two options to have any value.\n+When running from the command line:\n \n-If you\'re using Aptana/Eclipse for debugging you\'ll need to set both\n-``use_debugger`` and ``use_reloader`` to False.\n+.. code-block:: text\n \n-A possible useful pattern for configuration is to set the following in your\n-config.yaml (change the block as appropriate for your application, of course)::\n+    $ export FLASK_ENV=development\n+    $ flask run --no-debugger --no-reload\n \n-   FLASK:\n-       DEBUG: True\n-       DEBUG_WITH_APTANA: True\n+When running from Python:\n \n-Then in your application\'s entry-point (main.py),\n-you could have something like::\n+.. code-block:: python\n \n-   if __name__ == ""__main__"":\n-       # To allow aptana to receive errors, set use_debugger=False\n-       app = create_app(config=""config.yaml"")\n+    app.run(debug=True, use_debugger=False, use_reloader=False)\n \n-       use_debugger = app.debug and not(app.config.get(\'DEBUG_WITH_APTANA\'))\n-       app.run(use_debugger=use_debugger, debug=app.debug,\n-               use_reloader=use_debugger, host=\'0.0.0.0\')\n+Disabling these isn\'t required, an external debugger will continue to\n+work with the following caveats. If the built-in debugger is not\n+disabled, it will catch unhandled exceptions before the external\n+debugger can. If the reloader is not disabled, it could cause an\n+unexpected reload if code changes during debugging.\n'",1.6666666666666667,1.6666666666666667
docs/errorhandling.rst,docs/errorhandling.rst,ba118b4543bbc87cdb9dbe8297029ddddfe8958f,2db3c9a72e446eac980451ef688d87b4fd32cad4,'adjust header levels and spacing\n\nuse code-block consistently',"'@@ -101,6 +101,7 @@ Follow-up reads:\n * `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n * `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n \n+\n .. _error-handlers:\n \n Error Handlers\n@@ -118,13 +119,16 @@ The status code of the response will not be set to the handler\'s code. Make\n sure to provide the appropriate HTTP status code when returning a response from\n a handler.\n \n+\n Registering\n ```````````\n \n Register handlers by decorating a function with\n :meth:`~flask.Flask.errorhandler`. Or use\n :meth:`~flask.Flask.register_error_handler` to register the function later.\n-Remember to set the error code when returning the response. ::\n+Remember to set the error code when returning the response.\n+\n+.. code-block:: python\n \n     @app.errorhandler(werkzeug.exceptions.BadRequest)\n     def handle_bad_request(e):\n@@ -140,7 +144,9 @@ when registering handlers. (``BadRequest.code == 400``)\n Non-standard HTTP codes cannot be registered by code because they are not known\n by Werkzeug. Instead, define a subclass of\n :class:`~werkzeug.exceptions.HTTPException` with the appropriate code and\n-register and raise that exception class. ::\n+register and raise that exception class.\n+\n+.. code-block:: python\n \n     class InsufficientStorage(werkzeug.exceptions.HTTPException):\n         code = 507\n@@ -155,6 +161,7 @@ Handlers can be registered for any exception class, not just\n codes. Handlers can be registered for a specific class, or for all subclasses\n of a parent class.\n \n+\n Handling\n ````````\n \n@@ -191,6 +198,7 @@ raises the exception. However, the blueprint cannot handle 404 routing errors\n because the 404 occurs at the routing level before the blueprint can be\n determined.\n \n+\n Generic Exception Handlers\n ``````````````````````````\n \n@@ -223,7 +231,6 @@ so you don\'t lose information about the HTTP error.\n         response.content_type = ""application/json""\n         return response\n \n-\n An error handler for ``Exception`` might seem useful for changing how\n all errors, even unhandled ones, are presented to the user. However,\n this is similar to doing ``except Exception:`` in Python, it will\n@@ -252,6 +259,7 @@ register handlers for both ``HTTPException`` and ``Exception``, the\n ``Exception`` handler will not handle ``HTTPException`` subclasses\n because it the ``HTTPException`` handler is more specific.\n \n+\n Unhandled Exceptions\n ````````````````````\n \n@@ -286,6 +294,7 @@ An error handler for ""500 Internal Server Error"" will be passed uncaught excepti\n addition to explicit 500 errors. In debug mode, a handler for ""500 Internal Server Error"" will not be used.\n Instead, the interactive debugger will be shown.\n \n+\n Custom Error Pages\n ------------------\n \n@@ -323,7 +332,9 @@ username and we can\'t find it, we raise a ""404 Not Found"".\n \n         return render_template(""profile.html"", user=user)\n \n-Here is another example implementation for a ""404 Page Not Found"" exception::\n+Here is another example implementation for a ""404 Page Not Found"" exception:\n+\n+.. code-block:: python\n \n     from flask import render_template\n \n@@ -332,7 +343,9 @@ Here is another example implementation for a ""404 Page Not Found"" exception::\n         # note that we set the 404 status explicitly\n         return render_template(\'404.html\'), 404\n \n-When using :doc:`/patterns/appfactories`::\n+When using :doc:`/patterns/appfactories`:\n+\n+.. code-block:: python\n \n     from flask import Flask, render_template\n \n@@ -346,7 +359,7 @@ When using :doc:`/patterns/appfactories`::\n \n An example template might be this:\n \n-.. sourcecode:: html+jinja\n+.. code-block:: html+jinja\n \n     {% extends ""layout.html"" %}\n     {% block title %}Page Not Found{% endblock %}\n@@ -356,13 +369,14 @@ An example template might be this:\n       <p><a href=""{{ url_for(\'index\') }}"">go somewhere nice</a>\n     {% endblock %}\n \n+\n Further Examples\n ````````````````\n \n The above examples wouldn\'t actually be an improvement on the default\n exception pages. We can create a custom 500.html template like this:\n \n-.. sourcecode:: html+jinja\n+.. code-block:: html+jinja\n \n     {% extends ""layout.html"" %}\n     {% block title %}Internal Server Error{% endblock %}\n@@ -383,12 +397,10 @@ It can be implemented by rendering the template on ""500 Internal Server Error"":\n         # note that we set the 500 status explicitly\n         return render_template(\'500.html\'), 500\n \n-\n When using :doc:`/patterns/appfactories`:\n \n .. code-block:: python\n \n-\n     from flask import Flask, render_template\n \n     def internal_server_error(e):\n@@ -399,7 +411,6 @@ When using :doc:`/patterns/appfactories`:\n         app.register_error_handler(500, internal_server_error)\n         return app\n \n-\n When using :doc:`/blueprints`:\n \n .. code-block:: python\n@@ -416,20 +427,22 @@ When using :doc:`/blueprints`:\n     # or with register_error_handler\n     blog.register_error_handler(500, internal_server_error)\n \n-Blueprint Error Handling\n-````````````````````````\n \n-In blueprints, error handlers will work as expected. However, there is a caveat\n-concerning handlers for 404 and 405 exceptions. These error handlers are only\n-invoked from an appropriate ``raise`` statement or a call to ``abort`` in another\n-of the blueprint\'s view functions; they are not invoked by, e.g., an invalid URL\n-access.\n+Blueprint Error Handlers\n+------------------------\n+\n+In :doc:`/blueprints`, most error handlers will work as expected.\n+However, there is a caveat concerning handlers for 404 and 405\n+exceptions. These error handlers are only invoked from an appropriate\n+``raise`` statement or a call to ``abort`` in another of the blueprint\'s\n+view functions; they are not invoked by, e.g., an invalid URL access.\n \n This is because the blueprint does not ""own"" a certain URL space, so\n-the application instance has no way of knowing which blueprint error handler it\n-should run if given an invalid URL. If you would like to execute different\n-handling strategies for these errors based on URL prefixes, they may be defined\n-at the application level using the ``request`` proxy object:\n+the application instance has no way of knowing which blueprint error\n+handler it should run if given an invalid URL. If you would like to\n+execute different handling strategies for these errors based on URL\n+prefixes, they may be defined at the application level using the\n+``request`` proxy object.\n \n .. code-block:: python\n \n@@ -447,7 +460,6 @@ at the application level using the ``request`` proxy object:\n             # otherwise we return our generic site-wide 404 page\n             return render_template(""404.html""), 404\n \n-\n     @app.errorhandler(405)\n     def method_not_allowed(e):\n         # if a request has the wrong method to our API\n@@ -459,11 +471,8 @@ at the application level using the ``request`` proxy object:\n             return render_template(""405.html""), 405\n \n \n-\n-For more information on Blueprint Error Handling see :ref:`my-blueprint-error-label`.\n-\n-Returning API errors as JSON\n-````````````````````````````\n+Returning API Errors as JSON\n+----------------------------\n \n When building APIs in Flask, some developers realise that the built-in\n exceptions are not expressive enough for APIs and that the content type of\n@@ -535,11 +544,11 @@ This is a simple example:\n \n         return jsonify(user.to_dict())\n \n-\n A view can now raise that exception with an error message. Additionally\n some extra payload can be provided as a dictionary through the `payload`\n parameter.\n \n+\n Logging\n -------\n \n'",1.6666666666666667,1.6666666666666667
docs/errorhandling.rst,docs/errorhandling.rst,d25ee22e34a7682f3f0823b749597bd1dc28441a,ba118b4543bbc87cdb9dbe8297029ddddfe8958f,'reduce section on http status codes\n\nformatting in sentry section',"'@@ -24,42 +24,8 @@ page for you and log the exception to the :attr:`~flask.Flask.logger`.\n But there is more you can do, and we will cover some better setups to deal\n with errors including custom exceptions and 3rd party tools.\n \n-Common Error Codes\n-------------------\n \n-The following error codes are some that are often displayed to the user,\n-even if the application behaves correctly:\n-\n-*400 Bad Request*\n-    When the server will not process the request due to something that\n-    the server perceives to be a client error. Such as malformed request\n-    syntax, missing query parameters, etc.\n-\n-*403 Forbidden*\n-    If you have some kind of access control on your website, you will have\n-    to send a 403 code for disallowed resources. So make sure the user\n-    is not lost when they try to access a forbidden resource.\n-\n-*404 Not Found*\n-    The good old ""chap, you made a mistake typing that URL"" message. So\n-    common that even novices to the internet know that 404 means: damn,\n-    the thing I was looking for is not there. It\'s a very good idea to\n-    make sure there is actually something useful on a 404 page, at least a\n-    link back to the index.\n-\n-*410 Gone*\n-    Did you know that there the ""404 Not Found"" has a brother named ""410\n-    Gone""? Few people actually implement that, but the idea is that\n-    resources that previously existed and got deleted answer with 410\n-    instead of 404. If you are not deleting documents permanently from\n-    the database but just mark them as deleted, do the user a favour and\n-    use the 410 code instead and display a message that what they were\n-    looking for was deleted for all eternity.\n-\n-*500 Internal Server Error*\n-    Usually happens on programming errors or if the server is overloaded.\n-    A terribly good idea is to have a nice page there, because your\n-    application *will* fail sooner or later.\n+.. _error-logging-tools:\n \n Error Logging Tools\n -------------------\n@@ -75,31 +41,36 @@ aggregates duplicate errors, captures the full stack trace and local\n variables for debugging, and sends you mails based on new errors or\n frequency thresholds.\n \n-To use Sentry you need to install the `sentry-sdk` client with extra `flask` dependencies::\n+To use Sentry you need to install the ``sentry-sdk`` client with extra\n+``flask`` dependencies.\n+\n+.. code-block:: text\n \n     $ pip install sentry-sdk[flask]\n \n-And then add this to your Flask app::\n+And then add this to your Flask app:\n+\n+.. code-block:: python\n \n     import sentry_sdk\n     from sentry_sdk.integrations.flask import FlaskIntegration\n \n     sentry_sdk.init(\'YOUR_DSN_HERE\',integrations=[FlaskIntegration()])\n \n-The `YOUR_DSN_HERE` value needs to be replaced with the DSN value you get\n-from your Sentry installation.\n+The ``YOUR_DSN_HERE`` value needs to be replaced with the DSN value you\n+get from your Sentry installation.\n \n After installation, failures leading to an Internal Server Error\n are automatically reported to Sentry and from there you can\n receive error notifications.\n \n-Follow-up reads:\n+See also:\n \n-* Sentry also supports catching errors from your worker queue (RQ, Celery) in a\n-  similar fashion. See the `Python SDK docs\n-  <https://docs.sentry.io/platforms/python/>`_ for more information.\n-* `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n-* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n+-   Sentry also supports catching errors from a worker queue\n+    (RQ, Celery, etc.) in a similar fashion. See the `Python SDK docs\n+    <https://docs.sentry.io/platforms/python/>`__ for more information.\n+-   `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`__\n+-   `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`__\n \n \n .. _error-handlers:\n@@ -107,6 +78,12 @@ Follow-up reads:\n Error Handlers\n --------------\n \n+When an error occurs in Flask, an appropriate `HTTP status code\n+<https://developer.mozilla.org/en-US/docs/Web/HTTP/Status>`__ will be\n+returned. 400-499 indicate errors with the client\'s request data, or\n+about the data requested. 500-599 indicate errors with the server or\n+application itself.\n+\n You might want to show custom error pages to the user when an error occurs.\n This can be done by registering error handlers.\n \n'",1.6666666666666667,1.6
docs/blueprints.rst,docs/blueprints.rst,89d1487b2ed0eb4fc4fb49a50eb54b942bec4193,d25ee22e34a7682f3f0823b749597bd1dc28441a,"'rewrite debugging docs, move to separate page'","'@@ -242,7 +242,6 @@ you can use relative redirects by prefixing the endpoint with a dot only::\n This will link to ``admin.index`` for instance in case the current request\n was dispatched to any other admin blueprint endpoint.\n \n-.. _my-blueprint-error-label:\n \n Blueprint Error Handlers\n ------------------------\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,6ff7004db01d0dc3ddbcc943ea727cb1811ba1aa,37551e6798aabefd549340a7d3840b7648b413c7,'Bump pytest from 5.4.3 to 6.0.0\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 5.4.3 to 6.0.0.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/5.4.3...6.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -20,6 +20,7 @@ greenlet==0.4.16          # via -r requirements/tests.in\n identify==1.4.16          # via pre-commit\n idna==2.9                 # via requests\n imagesize==1.2.0          # via sphinx\n+iniconfig==1.0.0          # via pytest\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n more-itertools==8.3.0     # via pytest\n@@ -29,10 +30,10 @@ pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.3.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.6.0         # via -r requirements/dev.in\n-py==1.8.1                 # via pytest, tox\n+py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n-pytest==5.4.3             # via -r requirements/tests.in\n+pytest==6.0.0             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n@@ -48,11 +49,10 @@ sphinxcontrib-jsmath==1.0.1  # via sphinx\n sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n-toml==0.10.1              # via pre-commit, tox\n+toml==0.10.1              # via pre-commit, pytest, tox\n tox==3.18.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n-wcwidth==0.1.9            # via pytest\n \n # The following packages are considered to be unsafe in a requirements file:\n # pip\n'",0,0
requirements/tests.txt,requirements/tests.txt,6ff7004db01d0dc3ddbcc943ea727cb1811ba1aa,37551e6798aabefd549340a7d3840b7648b413c7,'Bump pytest from 5.4.3 to 6.0.0\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 5.4.3 to 6.0.0.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/5.4.3...6.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -7,12 +7,13 @@\n attrs==19.3.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n greenlet==0.4.16          # via -r requirements/tests.in\n+iniconfig==1.0.0          # via pytest\n more-itertools==8.3.0     # via pytest\n packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n-py==1.8.1                 # via pytest\n+py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==5.4.3             # via -r requirements/tests.in\n+pytest==6.0.0             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n-wcwidth==0.1.9            # via pytest\n+toml==0.10.1              # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,2a388c4dc00f8bb44b7a557a85ca97f8a913bbac,fc0aa7ac978b56e83dccde94214b1900a2ee1c3f,'Bump tox from 3.18.0 to 3.18.1\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.18.0 to 3.18.1.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.18.0...3.18.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -50,7 +50,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, pytest, tox\n-tox==3.18.0               # via -r requirements/dev.in\n+tox==3.18.1               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n \n'",0,0
CHANGES.rst,CHANGES.rst,253570784cdcc85d82142128ce33e3b9d8f8db14,fd0a6084498e9d1990ddcf96366e8ac27b63428a,"'cleaner message when CLI can\'t load app\n\nWhen loading the app fails for the --help command, only the error\nmessage is shown, then the help text. The full traceback is shown for\nother exceptions. Also show the message when loading fails while\ngetting a command, instead of only ""command not found"". The error\nmessage goes to stderr to match other error behavior, and is in red\nwith an extra newline to make it more obvious next to the help text.\n\nAlso fixes an issue with the test_apps fixture that caused an imported\napp to still be importable after the test was over and the path was\nreset. Now the module cache is reset as well.'","""@@ -12,6 +12,8 @@ Unreleased\n -   Passing ``script_info`` to app factory functions is deprecated. This\n     was not portable outside the ``flask`` command. Use\n     ``click.get_current_context().obj`` if it's needed. :issue:`3552`\n+-   The CLI shows better error messages when the app failed to load\n+    when looking up commands. :issue:`2741`\n -   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n     setting the session cookie name dynamically. :pr:`3369`\n -   Add :meth:`Config.from_file` to load config using arbitrary file\n""",0,0
src/flask/cli.py,src/flask/cli.py,253570784cdcc85d82142128ce33e3b9d8f8db14,fd0a6084498e9d1990ddcf96366e8ac27b63428a,"'cleaner message when CLI can\'t load app\n\nWhen loading the app fails for the --help command, only the error\nmessage is shown, then the help text. The full traceback is shown for\nother exceptions. Also show the message when loading fails while\ngetting a command, instead of only ""command not found"". The error\nmessage goes to stderr to match other error behavior, and is in red\nwith an extra newline to make it more obvious next to the help text.\n\nAlso fixes an issue with the test_apps fixture that caused an imported\napp to still be importable after the test was over and the path was\nreset. Now the module cache is reset as well.'","'@@ -536,43 +536,41 @@ class FlaskGroup(AppGroup):\n \n     def get_command(self, ctx, name):\n         self._load_plugin_commands()\n+        # Look up built-in and plugin commands, which should be\n+        # available even if the app fails to load.\n+        rv = super().get_command(ctx, name)\n \n-        # We load built-in commands first as these should always be the\n-        # same no matter what the app does.  If the app does want to\n-        # override this it needs to make a custom instance of this group\n-        # and not attach the default commands.\n-        #\n-        # This also means that the script stays functional in case the\n-        # application completely fails.\n-        rv = AppGroup.get_command(self, ctx, name)\n         if rv is not None:\n             return rv\n \n         info = ctx.ensure_object(ScriptInfo)\n+\n+        # Look up commands provided by the app, showing an error and\n+        # continuing if the app couldn\'t be loaded.\n         try:\n-            rv = info.load_app().cli.get_command(ctx, name)\n-            if rv is not None:\n-                return rv\n-        except NoAppException:\n-            pass\n+            return info.load_app().cli.get_command(ctx, name)\n+        except NoAppException as e:\n+            click.secho(f""Error: {e.format_message()}\\n"", err=True, fg=""red"")\n \n     def list_commands(self, ctx):\n         self._load_plugin_commands()\n-\n-        # The commands available is the list of both the application (if\n-        # available) plus the builtin commands.\n-        rv = set(click.Group.list_commands(self, ctx))\n+        # Start with the built-in and plugin commands.\n+        rv = set(super().list_commands(ctx))\n         info = ctx.ensure_object(ScriptInfo)\n+\n+        # Add commands provided by the app, showing an error and\n+        # continuing if the app couldn\'t be loaded.\n         try:\n             rv.update(info.load_app().cli.list_commands(ctx))\n+        except NoAppException as e:\n+            # When an app couldn\'t be loaded, show the error message\n+            # without the traceback.\n+            click.secho(f""Error: {e.format_message()}\\n"", err=True, fg=""red"")\n         except Exception:\n-            # Here we intentionally swallow all exceptions as we don\'t\n-            # want the help page to break if the app does not exist.\n-            # If someone attempts to use the command we try to create\n-            # the app again and this will give us the error.\n-            # However, we will not do so silently because that would confuse\n-            # users.\n-            traceback.print_exc()\n+            # When any other errors occurred during loading, show the\n+            # full traceback.\n+            click.secho(f""{traceback.format_exc()}\\n"", err=True, fg=""red"")\n+\n         return sorted(rv)\n \n     def main(self, *args, **kwargs):\n'",4.166666666666667,4.166666666666667
tests/conftest.py,tests/conftest.py,253570784cdcc85d82142128ce33e3b9d8f8db14,fd0a6084498e9d1990ddcf96366e8ac27b63428a,"'cleaner message when CLI can\'t load app\n\nWhen loading the app fails for the --help command, only the error\nmessage is shown, then the help text. The full traceback is shown for\nother exceptions. Also show the message when loading fails while\ngetting a command, instead of only ""command not found"". The error\nmessage goes to stderr to match other error behavior, and is in red\nwith an extra newline to make it more obvious next to the help text.\n\nAlso fixes an issue with the test_apps fixture that caused an imported\napp to still be importable after the test was over and the path was\nreset. Now the module cache is reset as well.'","'@@ -73,9 +73,15 @@ def client(app):\n \n @pytest.fixture\n def test_apps(monkeypatch):\n-    monkeypatch.syspath_prepend(\n-        os.path.abspath(os.path.join(os.path.dirname(__file__), ""test_apps""))\n-    )\n+    monkeypatch.syspath_prepend(os.path.join(os.path.dirname(__file__), ""test_apps""))\n+    original_modules = set(sys.modules.keys())\n+\n+    yield\n+\n+    # Remove any imports cached during the test. Otherwise ""import app""\n+    # will work in the next test even though it\'s no longer on the path.\n+    for key in sys.modules.keys() - original_modules:\n+        sys.modules.pop(key)\n \n \n @pytest.fixture(autouse=True)\n'",1.263157894736842,1.3157894736842106
tests/test_cli.py,tests/test_cli.py,253570784cdcc85d82142128ce33e3b9d8f8db14,fd0a6084498e9d1990ddcf96366e8ac27b63428a,"'cleaner message when CLI can\'t load app\n\nWhen loading the app fails for the --help command, only the error\nmessage is shown, then the help text. The full traceback is shown for\nother exceptions. Also show the message when loading fails while\ngetting a command, instead of only ""command not found"". The error\nmessage goes to stderr to match other error behavior, and is in red\nwith an extra newline to make it more obvious next to the help text.\n\nAlso fixes an issue with the test_apps fixture that caused an imported\napp to still be importable after the test was over and the path was\nreset. Now the module cache is reset as well.'","'@@ -239,7 +239,7 @@ def test_locate_app_raises(test_apps, iname, aname):\n         locate_app(info, iname, aname)\n \n \n-def test_locate_app_suppress_raise():\n+def test_locate_app_suppress_raise(test_apps):\n     info = ScriptInfo()\n     app = locate_app(info, ""notanapp.py"", None, raise_if_not_found=False)\n     assert app is None\n@@ -396,21 +396,36 @@ def test_flaskgroup_debug(runner, set_debug_flag):\n     assert result.output == f""{not set_debug_flag}\\n""\n \n \n-def test_print_exceptions(runner):\n-    """"""Print the stacktrace if the CLI.""""""\n+def test_no_command_echo_loading_error():\n+    from flask.cli import cli\n \n+    runner = CliRunner(mix_stderr=False)\n+    result = runner.invoke(cli, [""missing""])\n+    assert result.exit_code == 2\n+    assert ""FLASK_APP"" in result.stderr\n+    assert ""Usage:"" in result.stderr\n+\n+\n+def test_help_echo_loading_error():\n+    from flask.cli import cli\n+\n+    runner = CliRunner(mix_stderr=False)\n+    result = runner.invoke(cli, [""--help""])\n+    assert result.exit_code == 0\n+    assert ""FLASK_APP"" in result.stderr\n+    assert ""Usage:"" in result.stdout\n+\n+\n+def test_help_echo_exception():\n     def create_app():\n         raise Exception(""oh no"")\n-        return Flask(""flaskgroup"")\n-\n-    @click.group(cls=FlaskGroup, create_app=create_app)\n-    def cli(**params):\n-        pass\n \n+    cli = FlaskGroup(create_app=create_app)\n+    runner = CliRunner(mix_stderr=False)\n     result = runner.invoke(cli, [""--help""])\n     assert result.exit_code == 0\n-    assert ""Exception: oh no"" in result.output\n-    assert ""Traceback"" in result.output\n+    assert ""Exception: oh no"" in result.stderr\n+    assert ""Usage:"" in result.stdout\n \n \n class TestRoutes:\n'",1.0476190476190477,1.046875
requirements/dev.txt,requirements/dev.txt,ce7ee648b39c9dff05df53d1d007f50c2f146a39,6638432457320fd2db9c74b9135afef370ed96f0,'Bump pytest from 6.0.0 to 6.0.1\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.0 to 6.0.1.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.0...6.0.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -33,7 +33,7 @@ pre-commit==2.6.0         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.0             # via -r requirements/tests.in\n+pytest==6.0.1             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,ce7ee648b39c9dff05df53d1d007f50c2f146a39,6638432457320fd2db9c74b9135afef370ed96f0,'Bump pytest from 6.0.0 to 6.0.1\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.0 to 6.0.1.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.0...6.0.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -13,7 +13,7 @@ packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.0             # via -r requirements/tests.in\n+pytest==6.0.1             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n toml==0.10.1              # via pytest\n'",0,0
CHANGES.rst,CHANGES.rst,b146a13f633b0e2e26e3b8383b3db0feb563bc83,216d97c21abe9674fe1dd6364b64051b0d09d0b0,'extract common Flask/Blueprint API to Scaffold base class\n\nCo-authored-by: Chris Nguyen <chrisngyn99@gmail.com>',"'@@ -37,6 +37,11 @@ Unreleased\n     For example, this allows setting the ``Content-Type`` for\n     ``jsonify()``. Use ``response.headers.extend()`` if extending is\n     desired. :issue:`3628`\n+-   The ``Scaffold`` class provides a common API for the ``Flask`` and\n+    ``Blueprint`` classes. ``Blueprint`` information is stored in\n+    attributes just like ``Flask``, rather than opaque lambda functions.\n+    This is intended to improve consistency and maintainability.\n+    :issue:`3215`\n \n \n Version 1.1.x\n'",0,0
src/flask/app.py,src/flask/app.py,b146a13f633b0e2e26e3b8383b3db0feb563bc83,216d97c21abe9674fe1dd6364b64051b0d09d0b0,'extract common Flask/Blueprint API to Scaffold base class\n\nCo-authored-by: Chris Nguyen <chrisngyn99@gmail.com>',"'@@ -1,7 +1,6 @@\n import os\n import sys\n from datetime import timedelta\n-from functools import update_wrapper\n from itertools import chain\n from threading import Lock\n \n@@ -9,7 +8,6 @@ from werkzeug.datastructures import Headers\n from werkzeug.datastructures import ImmutableDict\n from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import BadRequestKeyError\n-from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n from werkzeug.routing import BuildError\n@@ -30,8 +28,6 @@ from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n from .globals import session\n-from .helpers import _endpoint_from_view_func\n-from .helpers import _PackageBoundObject\n from .helpers import find_package\n from .helpers import get_debug_flag\n from .helpers import get_env\n@@ -41,21 +37,21 @@ from .helpers import locked_cached_property\n from .helpers import url_for\n from .json import jsonify\n from .logging import create_logger\n+from .scaffold import _endpoint_from_view_func\n+from .scaffold import _sentinel\n+from .scaffold import Scaffold\n+from .scaffold import setupmethod\n from .sessions import SecureCookieSessionInterface\n from .signals import appcontext_tearing_down\n from .signals import got_request_exception\n from .signals import request_finished\n from .signals import request_started\n from .signals import request_tearing_down\n-from .templating import _default_template_ctx_processor\n from .templating import DispatchingJinjaLoader\n from .templating import Environment\n from .wrappers import Request\n from .wrappers import Response\n \n-# a singleton sentinel value for parameter defaults\n-_sentinel = object()\n-\n \n def _make_timedelta(value):\n     if not isinstance(value, timedelta):\n@@ -63,28 +59,7 @@ def _make_timedelta(value):\n     return value\n \n \n-def setupmethod(f):\n-    """"""Wraps a method so that it performs a check in debug mode if the\n-    first request was already handled.\n-    """"""\n-\n-    def wrapper_func(self, *args, **kwargs):\n-        if self.debug and self._got_first_request:\n-            raise AssertionError(\n-                ""A setup function was called after the ""\n-                ""first request was handled.  This usually indicates a bug ""\n-                ""in the application where a module was not imported ""\n-                ""and decorators or other functionality was called too late.\\n""\n-                ""To fix this make sure to import all your view modules, ""\n-                ""database models and everything related at a central place ""\n-                ""before the application starts serving requests.""\n-            )\n-        return f(self, *args, **kwargs)\n-\n-    return update_wrapper(wrapper_func, f)\n-\n-\n-class Flask(_PackageBoundObject):\n+class Flask(Scaffold):\n     """"""The flask object implements a WSGI application and acts as the central\n     object.  It is passed the name of the module or package of the\n     application.  Once it is created it will act as a central registry for\n@@ -394,13 +369,14 @@ class Flask(_PackageBoundObject):\n         instance_relative_config=False,\n         root_path=None,\n     ):\n-        _PackageBoundObject.__init__(\n-            self, import_name, template_folder=template_folder, root_path=root_path\n+        super().__init__(\n+            import_name=import_name,\n+            static_folder=static_folder,\n+            static_url_path=static_url_path,\n+            template_folder=template_folder,\n+            root_path=root_path,\n         )\n \n-        self.static_url_path = static_url_path\n-        self.static_folder = static_folder\n-\n         if instance_path is None:\n             instance_path = self.auto_find_instance_path()\n         elif not os.path.isabs(instance_path):\n@@ -419,24 +395,6 @@ class Flask(_PackageBoundObject):\n         #: to load a config from files.\n         self.config = self.make_config(instance_relative_config)\n \n-        #: A dictionary of all view functions registered.  The keys will\n-        #: be function names which are also used to generate URLs and\n-        #: the values are the function objects themselves.\n-        #: To register a view function, use the :meth:`route` decorator.\n-        self.view_functions = {}\n-\n-        #: A dictionary of all registered error handlers.  The key is ``None``\n-        #: for error handlers active on the application, otherwise the key is\n-        #: the name of the blueprint.  Each key points to another dictionary\n-        #: where the key is the status code of the http exception.  The\n-        #: special key ``None`` points to a list of tuples where the first item\n-        #: is the class for the instance check and the second the error handler\n-        #: function.\n-        #:\n-        #: To register an error handler, use the :meth:`errorhandler`\n-        #: decorator.\n-        self.error_handler_spec = {}\n-\n         #: A list of functions that are called when :meth:`url_for` raises a\n         #: :exc:`~werkzeug.routing.BuildError`.  Each function registered here\n         #: is called with `error`, `endpoint` and `values`.  If a function\n@@ -446,13 +404,6 @@ class Flask(_PackageBoundObject):\n         #: .. versionadded:: 0.9\n         self.url_build_error_handlers = []\n \n-        #: A dictionary with lists of functions that will be called at the\n-        #: beginning of each request. The key of the dictionary is the name of\n-        #: the blueprint this function is active for, or ``None`` for all\n-        #: requests. To register a function, use the :meth:`before_request`\n-        #: decorator.\n-        self.before_request_funcs = {}\n-\n         #: A list of functions that will be called at the beginning of the\n         #: first request to this instance. To register a function, use the\n         #: :meth:`before_first_request` decorator.\n@@ -460,25 +411,6 @@ class Flask(_PackageBoundObject):\n         #: .. versionadded:: 0.8\n         self.before_first_request_funcs = []\n \n-        #: A dictionary with lists of functions that should be called after\n-        #: each request.  The key of the dictionary is the name of the blueprint\n-        #: this function is active for, ``None`` for all requests.  This can for\n-        #: example be used to close database connections. To register a function\n-        #: here, use the :meth:`after_request` decorator.\n-        self.after_request_funcs = {}\n-\n-        #: A dictionary with lists of functions that are called after\n-        #: each request, even if an exception has occurred. The key of the\n-        #: dictionary is the name of the blueprint this function is active for,\n-        #: ``None`` for all requests. These functions are not allowed to modify\n-        #: the request, and their return values are ignored. If an exception\n-        #: occurred while processing the request, it gets passed to each\n-        #: teardown_request function. To register a function here, use the\n-        #: :meth:`teardown_request` decorator.\n-        #:\n-        #: .. versionadded:: 0.7\n-        self.teardown_request_funcs = {}\n-\n         #: A list of functions that are called when the application context\n         #: is destroyed.  Since the application context is also torn down\n         #: if the request ends this is the place to store code that disconnects\n@@ -487,35 +419,6 @@ class Flask(_PackageBoundObject):\n         #: .. versionadded:: 0.9\n         self.teardown_appcontext_funcs = []\n \n-        #: A dictionary with lists of functions that are called before the\n-        #: :attr:`before_request_funcs` functions. The key of the dictionary is\n-        #: the name of the blueprint this function is active for, or ``None``\n-        #: for all requests. To register a function, use\n-        #: :meth:`url_value_preprocessor`.\n-        #:\n-        #: .. versionadded:: 0.7\n-        self.url_value_preprocessors = {}\n-\n-        #: A dictionary with lists of functions that can be used as URL value\n-        #: preprocessors.  The key ``None`` here is used for application wide\n-        #: callbacks, otherwise the key is the name of the blueprint.\n-        #: Each of these functions has the chance to modify the dictionary\n-        #: of URL values before they are used as the keyword arguments of the\n-        #: view function.  For each function registered this one should also\n-        #: provide a :meth:`url_defaults` function that adds the parameters\n-        #: automatically again that were removed that way.\n-        #:\n-        #: .. versionadded:: 0.7\n-        self.url_default_functions = {}\n-\n-        #: A dictionary with list of functions that are called without argument\n-        #: to populate the template context.  The key of the dictionary is the\n-        #: name of the blueprint this function is active for, ``None`` for all\n-        #: requests.  Each returns a dictionary that the template context is\n-        #: updated with.  To register a function here, use the\n-        #: :meth:`context_processor` decorator.\n-        self.template_context_processors = {None: [_default_template_ctx_processor]}\n-\n         #: A list of shell context processor functions that should be run\n         #: when a shell context is created.\n         #:\n@@ -586,6 +489,9 @@ class Flask(_PackageBoundObject):\n         # the app\'s commands to another CLI tool.\n         self.cli.name = self.name\n \n+    def _is_setup_finished(self):\n+        return self.debug and self._got_first_request\n+\n     @locked_cached_property\n     def name(self):\n         """"""The name of the application.  This is usually the import name\n@@ -1206,152 +1112,6 @@ class Flask(_PackageBoundObject):\n                 )\n             self.view_functions[endpoint] = view_func\n \n-    def route(self, rule, **options):\n-        """"""A decorator that is used to register a view function for a\n-        given URL rule.  This does the same thing as :meth:`add_url_rule`\n-        but is intended for decorator usage::\n-\n-            @app.route(\'/\')\n-            def index():\n-                return \'Hello World\'\n-\n-        For more information refer to :ref:`url-route-registrations`.\n-\n-        :param rule: the URL rule as string\n-        :param endpoint: the endpoint for the registered URL rule.  Flask\n-                         itself assumes the name of the view function as\n-                         endpoint\n-        :param options: the options to be forwarded to the underlying\n-                        :class:`~werkzeug.routing.Rule` object.  A change\n-                        to Werkzeug is handling of method options.  methods\n-                        is a list of methods this rule should be limited\n-                        to (``GET``, ``POST`` etc.).  By default a rule\n-                        just listens for ``GET`` (and implicitly ``HEAD``).\n-                        Starting with Flask 0.6, ``OPTIONS`` is implicitly\n-                        added and handled by the standard request handling.\n-        """"""\n-\n-        def decorator(f):\n-            endpoint = options.pop(""endpoint"", None)\n-            self.add_url_rule(rule, endpoint, f, **options)\n-            return f\n-\n-        return decorator\n-\n-    @setupmethod\n-    def endpoint(self, endpoint):\n-        """"""A decorator to register a function as an endpoint.\n-        Example::\n-\n-            @app.endpoint(\'example.endpoint\')\n-            def example():\n-                return ""example""\n-\n-        :param endpoint: the name of the endpoint\n-        """"""\n-\n-        def decorator(f):\n-            self.view_functions[endpoint] = f\n-            return f\n-\n-        return decorator\n-\n-    @staticmethod\n-    def _get_exc_class_and_code(exc_class_or_code):\n-        """"""Get the exception class being handled. For HTTP status codes\n-        or ``HTTPException`` subclasses, return both the exception and\n-        status code.\n-\n-        :param exc_class_or_code: Any exception class, or an HTTP status\n-            code as an integer.\n-        """"""\n-        if isinstance(exc_class_or_code, int):\n-            exc_class = default_exceptions[exc_class_or_code]\n-        else:\n-            exc_class = exc_class_or_code\n-\n-        assert issubclass(\n-            exc_class, Exception\n-        ), ""Custom exceptions must be subclasses of Exception.""\n-\n-        if issubclass(exc_class, HTTPException):\n-            return exc_class, exc_class.code\n-        else:\n-            return exc_class, None\n-\n-    @setupmethod\n-    def errorhandler(self, code_or_exception):\n-        """"""Register a function to handle errors by code or exception class.\n-\n-        A decorator that is used to register a function given an\n-        error code.  Example::\n-\n-            @app.errorhandler(404)\n-            def page_not_found(error):\n-                return \'This page does not exist\', 404\n-\n-        You can also register handlers for arbitrary exceptions::\n-\n-            @app.errorhandler(DatabaseError)\n-            def special_exception_handler(error):\n-                return \'Database connection failed\', 500\n-\n-        .. versionadded:: 0.7\n-            Use :meth:`register_error_handler` instead of modifying\n-            :attr:`error_handler_spec` directly, for application wide error\n-            handlers.\n-\n-        .. versionadded:: 0.7\n-           One can now additionally also register custom exception types\n-           that do not necessarily have to be a subclass of the\n-           :class:`~werkzeug.exceptions.HTTPException` class.\n-\n-        :param code_or_exception: the code as integer for the handler, or\n-                                  an arbitrary exception\n-        """"""\n-\n-        def decorator(f):\n-            self._register_error_handler(None, code_or_exception, f)\n-            return f\n-\n-        return decorator\n-\n-    @setupmethod\n-    def register_error_handler(self, code_or_exception, f):\n-        """"""Alternative error attach function to the :meth:`errorhandler`\n-        decorator that is more straightforward to use for non decorator\n-        usage.\n-\n-        .. versionadded:: 0.7\n-        """"""\n-        self._register_error_handler(None, code_or_exception, f)\n-\n-    @setupmethod\n-    def _register_error_handler(self, key, code_or_exception, f):\n-        """"""\n-        :type key: None|str\n-        :type code_or_exception: int|T<=Exception\n-        :type f: callable\n-        """"""\n-        if isinstance(code_or_exception, HTTPException):  # old broken behavior\n-            raise ValueError(\n-                ""Tried to register a handler for an exception instance""\n-                f"" {code_or_exception!r}. Handlers can only be""\n-                "" registered for exception classes or HTTP error codes.""\n-            )\n-\n-        try:\n-            exc_class, code = self._get_exc_class_and_code(code_or_exception)\n-        except KeyError:\n-            raise KeyError(\n-                f""\'{code_or_exception}\' is not a recognized HTTP error""\n-                "" code. Use a subclass of HTTPException with that code""\n-                "" instead.""\n-            )\n-\n-        handlers = self.error_handler_spec.setdefault(key, {}).setdefault(code, {})\n-        handlers[exc_class] = f\n-\n     @setupmethod\n     def template_filter(self, name=None):\n         """"""A decorator that is used to register custom template filter.\n@@ -1455,20 +1215,6 @@ class Flask(_PackageBoundObject):\n         """"""\n         self.jinja_env.globals[name or f.__name__] = f\n \n-    @setupmethod\n-    def before_request(self, f):\n-        """"""Registers a function to run before each request.\n-\n-        For example, this can be used to open a database connection, or to load\n-        the logged in user from the session.\n-\n-        The function will be called without any arguments. If it returns a\n-        non-None value, the value is handled as if it was the return value from\n-        the view, and further request handling is stopped.\n-        """"""\n-        self.before_request_funcs.setdefault(None, []).append(f)\n-        return f\n-\n     @setupmethod\n     def before_first_request(self, f):\n         """"""Registers a function to be run before the first request to this\n@@ -1482,59 +1228,6 @@ class Flask(_PackageBoundObject):\n         self.before_first_request_funcs.append(f)\n         return f\n \n-    @setupmethod\n-    def after_request(self, f):\n-        """"""Register a function to be run after each request.\n-\n-        Your function must take one parameter, an instance of\n-        :attr:`response_class` and return a new response object or the\n-        same (see :meth:`process_response`).\n-\n-        As of Flask 0.7 this function might not be executed at the end of the\n-        request in case an unhandled exception occurred.\n-        """"""\n-        self.after_request_funcs.setdefault(None, []).append(f)\n-        return f\n-\n-    @setupmethod\n-    def teardown_request(self, f):\n-        """"""Register a function to be run at the end of each request,\n-        regardless of whether there was an exception or not.  These functions\n-        are executed when the request context is popped, even if not an\n-        actual request was performed.\n-\n-        Example::\n-\n-            ctx = app.test_request_context()\n-            ctx.push()\n-            ...\n-            ctx.pop()\n-\n-        When ``ctx.pop()`` is executed in the above example, the teardown\n-        functions are called just before the request context moves from the\n-        stack of active contexts.  This becomes relevant if you are using\n-        such constructs in tests.\n-\n-        Generally teardown functions must take every necessary step to avoid\n-        that they will fail.  If they do execute code that might fail they\n-        will have to surround the execution of these code by try/except\n-        statements and log occurring errors.\n-\n-        When a teardown function was called because of an exception it will\n-        be passed an error object.\n-\n-        The return values of teardown functions are ignored.\n-\n-        .. admonition:: Debug Note\n-\n-           In debug mode Flask will not tear down a request on an exception\n-           immediately.  Instead it will keep it alive so that the interactive\n-           debugger can still access it.  This behavior can be controlled\n-           by the ``PRESERVE_CONTEXT_ON_EXCEPTION`` configuration variable.\n-        """"""\n-        self.teardown_request_funcs.setdefault(None, []).append(f)\n-        return f\n-\n     @setupmethod\n     def teardown_appcontext(self, f):\n         """"""Registers a function to be called when the application context\n@@ -1568,12 +1261,6 @@ class Flask(_PackageBoundObject):\n         self.teardown_appcontext_funcs.append(f)\n         return f\n \n-    @setupmethod\n-    def context_processor(self, f):\n-        """"""Registers a template context processor function.""""""\n-        self.template_context_processors[None].append(f)\n-        return f\n-\n     @setupmethod\n     def shell_context_processor(self, f):\n         """"""Registers a shell context processor function.\n@@ -1583,32 +1270,6 @@ class Flask(_PackageBoundObject):\n         self.shell_context_processors.append(f)\n         return f\n \n-    @setupmethod\n-    def url_value_preprocessor(self, f):\n-        """"""Register a URL value preprocessor function for all view\n-        functions in the application. These functions will be called before the\n-        :meth:`before_request` functions.\n-\n-        The function can modify the values captured from the matched url before\n-        they are passed to the view. For example, this can be used to pop a\n-        common language code value and place it in ``g`` rather than pass it to\n-        every view.\n-\n-        The function is passed the endpoint name and values dict. The return\n-        value is ignored.\n-        """"""\n-        self.url_value_preprocessors.setdefault(None, []).append(f)\n-        return f\n-\n-    @setupmethod\n-    def url_defaults(self, f):\n-        """"""Callback function for URL defaults for all view functions of the\n-        application.  It\'s called with the endpoint and values and should\n-        update the values passed in place.\n-        """"""\n-        self.url_default_functions.setdefault(None, []).append(f)\n-        return f\n-\n     def _find_error_handler(self, e):\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n'",2.682926829268293,3.015151515151515
src/flask/blueprints.py,src/flask/blueprints.py,b146a13f633b0e2e26e3b8383b3db0feb563bc83,216d97c21abe9674fe1dd6364b64051b0d09d0b0,'extract common Flask/Blueprint API to Scaffold base class\n\nCo-authored-by: Chris Nguyen <chrisngyn99@gmail.com>',"'@@ -1,10 +1,8 @@\n from functools import update_wrapper\n \n-from .helpers import _endpoint_from_view_func\n-from .helpers import _PackageBoundObject\n-\n-# a singleton sentinel value for parameter defaults\n-_sentinel = object()\n+from .scaffold import _endpoint_from_view_func\n+from .scaffold import _sentinel\n+from .scaffold import Scaffold\n \n \n class BlueprintSetupState:\n@@ -76,7 +74,7 @@ class BlueprintSetupState:\n         )\n \n \n-class Blueprint(_PackageBoundObject):\n+class Blueprint(Scaffold):\n     """"""Represents a blueprint, a collection of routes and other\n     app-related functions that can be registered on a real application\n     later.\n@@ -167,20 +165,25 @@ class Blueprint(_PackageBoundObject):\n         root_path=None,\n         cli_group=_sentinel,\n     ):\n-        _PackageBoundObject.__init__(\n-            self, import_name, template_folder, root_path=root_path\n+        super().__init__(\n+            import_name=import_name,\n+            static_folder=static_folder,\n+            static_url_path=static_url_path,\n+            template_folder=template_folder,\n+            root_path=root_path,\n         )\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n-        self.static_folder = static_folder\n-        self.static_url_path = static_url_path\n         self.deferred_functions = []\n         if url_defaults is None:\n             url_defaults = {}\n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n \n+    def _is_setup_finished(self):\n+        return self.warn_on_modifications and self._got_registered_once\n+\n     def record(self, func):\n         """"""Registers a function that is called when the blueprint is\n         registered on the application.  This function is called with the\n@@ -241,6 +244,36 @@ class Blueprint(_PackageBoundObject):\n                 endpoint=""static"",\n             )\n \n+        # Merge app and self dictionaries.\n+        def merge_dict_lists(self_dict, app_dict):\n+            """"""Merges self_dict into app_dict. Replaces None keys with self.name.\n+            Values of dict must be lists.\n+            """"""\n+            for key, values in self_dict.items():\n+                key = self.name if key is None else f""{self.name}.{key}""\n+                app_dict.setdefault(key, []).extend(values)\n+\n+        def merge_dict_nested(self_dict, app_dict):\n+            """"""Merges self_dict into app_dict. Replaces None keys with self.name.\n+            Values of dict must be dict.\n+            """"""\n+            for key, value in self_dict.items():\n+                key = self.name if key is None else f""{self.name}.{key}""\n+                app_dict[key] = value\n+\n+        app.view_functions.update(self.view_functions)\n+\n+        merge_dict_lists(self.before_request_funcs, app.before_request_funcs)\n+        merge_dict_lists(self.after_request_funcs, app.after_request_funcs)\n+        merge_dict_lists(self.teardown_request_funcs, app.teardown_request_funcs)\n+        merge_dict_lists(self.url_default_functions, app.url_default_functions)\n+        merge_dict_lists(self.url_value_preprocessors, app.url_value_preprocessors)\n+        merge_dict_lists(\n+            self.template_context_processors, app.template_context_processors\n+        )\n+\n+        merge_dict_nested(self.error_handler_spec, app.error_handler_spec)\n+\n         for deferred in self.deferred_functions:\n             deferred(state)\n \n@@ -258,18 +291,6 @@ class Blueprint(_PackageBoundObject):\n             self.cli.name = cli_resolved_group\n             app.cli.add_command(self.cli)\n \n-    def route(self, rule, **options):\n-        """"""Like :meth:`Flask.route` but for a blueprint.  The endpoint for the\n-        :func:`url_for` function is prefixed with the name of the blueprint.\n-        """"""\n-\n-        def decorator(f):\n-            endpoint = options.pop(""endpoint"", f.__name__)\n-            self.add_url_rule(rule, endpoint, f, **options)\n-            return f\n-\n-        return decorator\n-\n     def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n         """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n         the :func:`url_for` function is prefixed with the name of the blueprint.\n@@ -282,23 +303,6 @@ class Blueprint(_PackageBoundObject):\n             ), ""Blueprint view function name should not contain dots""\n         self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n \n-    def endpoint(self, endpoint):\n-        """"""Like :meth:`Flask.endpoint` but for a blueprint.  This does not\n-        prefix the endpoint with the blueprint name, this has to be done\n-        explicitly by the user of this method.  If the endpoint is prefixed\n-        with a `.` it will be registered to the current blueprint, otherwise\n-        it\'s an application independent endpoint.\n-        """"""\n-\n-        def decorator(f):\n-            def register_endpoint(state):\n-                state.app.view_functions[endpoint] = f\n-\n-            self.record_once(register_endpoint)\n-            return f\n-\n-        return decorator\n-\n     def app_template_filter(self, name=None):\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n@@ -391,16 +395,6 @@ class Blueprint(_PackageBoundObject):\n \n         self.record_once(register_template)\n \n-    def before_request(self, f):\n-        """"""Like :meth:`Flask.before_request` but for a blueprint.  This function\n-        is only executed before each request that is handled by a function of\n-        that blueprint.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.before_request_funcs.setdefault(self.name, []).append(f)\n-        )\n-        return f\n-\n     def before_app_request(self, f):\n         """"""Like :meth:`Flask.before_request`.  Such a function is executed\n         before each request, even if outside of a blueprint.\n@@ -417,16 +411,6 @@ class Blueprint(_PackageBoundObject):\n         self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n         return f\n \n-    def after_request(self, f):\n-        """"""Like :meth:`Flask.after_request` but for a blueprint.  This function\n-        is only executed after each request that is handled by a function of\n-        that blueprint.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.after_request_funcs.setdefault(self.name, []).append(f)\n-        )\n-        return f\n-\n     def after_app_request(self, f):\n         """"""Like :meth:`Flask.after_request` but for a blueprint.  Such a function\n         is executed after each request, even if outside of the blueprint.\n@@ -436,18 +420,6 @@ class Blueprint(_PackageBoundObject):\n         )\n         return f\n \n-    def teardown_request(self, f):\n-        """"""Like :meth:`Flask.teardown_request` but for a blueprint.  This\n-        function is only executed when tearing down requests handled by a\n-        function of that blueprint.  Teardown request functions are executed\n-        when the request context is popped, even when no actual request was\n-        performed.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.teardown_request_funcs.setdefault(self.name, []).append(f)\n-        )\n-        return f\n-\n     def teardown_app_request(self, f):\n         """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n         function is executed when tearing down each request, even if outside of\n@@ -458,17 +430,6 @@ class Blueprint(_PackageBoundObject):\n         )\n         return f\n \n-    def context_processor(self, f):\n-        """"""Like :meth:`Flask.context_processor` but for a blueprint.  This\n-        function is only executed for requests handled by a blueprint.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.template_context_processors.setdefault(\n-                self.name, []\n-            ).append(f)\n-        )\n-        return f\n-\n     def app_context_processor(self, f):\n         """"""Like :meth:`Flask.context_processor` but for a blueprint.  Such a\n         function is executed each request, even if outside of the blueprint.\n@@ -489,26 +450,6 @@ class Blueprint(_PackageBoundObject):\n \n         return decorator\n \n-    def url_value_preprocessor(self, f):\n-        """"""Registers a function as URL value preprocessor for this\n-        blueprint.  It\'s called before the view functions are called and\n-        can modify the url values provided.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.url_value_preprocessors.setdefault(self.name, []).append(f)\n-        )\n-        return f\n-\n-    def url_defaults(self, f):\n-        """"""Callback function for URL defaults for this blueprint.  It\'s called\n-        with the endpoint and values and should update the values passed\n-        in place.\n-        """"""\n-        self.record_once(\n-            lambda s: s.app.url_default_functions.setdefault(self.name, []).append(f)\n-        )\n-        return f\n-\n     def app_url_value_preprocessor(self, f):\n         """"""Same as :meth:`url_value_preprocessor` but application wide.\n         """"""\n@@ -524,35 +465,3 @@ class Blueprint(_PackageBoundObject):\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n         return f\n-\n-    def errorhandler(self, code_or_exception):\n-        """"""Registers an error handler that becomes active for this blueprint\n-        only.  Please be aware that routing does not happen local to a\n-        blueprint so an error handler for 404 usually is not handled by\n-        a blueprint unless it is caused inside a view function.  Another\n-        special case is the 500 internal server error which is always looked\n-        up from the application.\n-\n-        Otherwise works as the :meth:`~flask.Flask.errorhandler` decorator\n-        of the :class:`~flask.Flask` object.\n-        """"""\n-\n-        def decorator(f):\n-            self.record_once(\n-                lambda s: s.app._register_error_handler(self.name, code_or_exception, f)\n-            )\n-            return f\n-\n-        return decorator\n-\n-    def register_error_handler(self, code_or_exception, f):\n-        """"""Non-decorator version of the :meth:`errorhandler` error attach\n-        function, akin to the :meth:`~flask.Flask.register_error_handler`\n-        application-wide function of the :class:`~flask.Flask` object but\n-        for error handlers limited to this blueprint.\n-\n-        .. versionadded:: 0.11\n-        """"""\n-        self.record_once(\n-            lambda s: s.app._register_error_handler(self.name, code_or_exception, f)\n-        )\n'",1.4772727272727273,1.7878787878787878
src/flask/helpers.py,src/flask/helpers.py,b146a13f633b0e2e26e3b8383b3db0feb563bc83,216d97c21abe9674fe1dd6364b64051b0d09d0b0,'extract common Flask/Blueprint API to Scaffold base class\n\nCo-authored-by: Chris Nguyen <chrisngyn99@gmail.com>',"'@@ -76,14 +76,6 @@ def get_load_dotenv(default=True):\n     return val.lower() in (""0"", ""false"", ""no"")\n \n \n-def _endpoint_from_view_func(view_func):\n-    """"""Internal helper that returns the default endpoint for a given\n-    function.  This always is the function name.\n-    """"""\n-    assert view_func is not None, ""expected view func if endpoint is not provided.""\n-    return view_func.__name__\n-\n-\n def stream_with_context(generator_or_function):\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n'",4.121212121212121,4.21875
requirements/dev.txt,requirements/dev.txt,045abd6c04cbb8b08aa1e41f90a5077ac97fee3d,632f85b65354ad573bb33c54a0a9dd3ffcef371f,'Bump pip-tools from 5.3.0 to 5.3.1\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 5.3.0 to 5.3.1.\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jazzband/pip-tools/compare/5.3.0...5.3.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -27,7 +27,7 @@ more-itertools==8.3.0     # via pytest\n nodeenv==1.3.5            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.3.0          # via -r requirements/dev.in\n+pip-tools==5.3.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.6.0         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n'",0,0
docs/conf.py,docs/conf.py,414b30b2ec8ae365ca311b697d44578394371ff6,eb865f8c24572065a4f1c7ec8316e0d9d0eab381,'Fix bad intersphinx link',"'@@ -26,7 +26,7 @@ intersphinx_mapping = {\n     ""jinja"": (""https://jinja.palletsprojects.com/"", None),\n     ""itsdangerous"": (""https://itsdangerous.palletsprojects.com/"", None),\n     ""sqlalchemy"": (""https://docs.sqlalchemy.org/"", None),\n-    ""wtforms"": (""https://wtforms.readthedocs.io/en/stable/"", None),\n+    ""wtforms"": (""https://wtforms.readthedocs.io/"", None),\n     ""blinker"": (""https://pythonhosted.org/blinker/"", None),\n }\n issues_github_path = ""pallets/flask""\n'",3.0,3.0
requirements/dev.txt,requirements/dev.txt,7eeb0c8d220f21fa08414f7726005b7c441a18a1,fd0f89ebf3ef44fd40372db48f25009bdad6d162,'Bump tox from 3.18.1 to 3.19.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.18.1 to 3.19.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.18.1...3.19.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -50,7 +50,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, pytest, tox\n-tox==3.18.1               # via -r requirements/dev.in\n+tox==3.19.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n \n'",0,0
requirements/dev.txt,requirements/dev.txt,1a6621ed840994b9600f12dde3bcb898c858889d,5bf8cc225f1e7f7efb2e8aa1f8e2c11190c1e5f8,'Bump sphinx from 3.1.2 to 3.2.0\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.2 to 3.2.0.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.2...v3.2.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -41,7 +41,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.2             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.2.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,1a6621ed840994b9600f12dde3bcb898c858889d,5bf8cc225f1e7f7efb2e8aa1f8e2c11190c1e5f8,'Bump sphinx from 3.1.2 to 3.2.0\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.1.2 to 3.2.0.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.1.2...v3.2.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.1.2             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.2.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
src/flask/cli.py,src/flask/cli.py,cf3089a8f82d50430da4cbe690c1ef11d30241ec,1a9059dd3a0c1a8574f6555e92f3ec3c596284f5,"'Discover app factory deterministically\n\nCommit 2ae740dd4903bbe5f3864384bcdf2ab2d4638bce probably inadvertently\nchanged to iterate over a set of ""create_app"", ""make_app"" to discover\napplication factory functions. As sets don\'t guarantee order,\ndifferences in the implementation of the type can make it\nnon-deterministic which factory function is used if a project implements\nboth. Revert to using a tuple.\n\nSigned-off-by: Nils Philippsen <nils@redhat.com>'","'@@ -60,7 +60,7 @@ def find_best_app(script_info, module):\n         )\n \n     # Search for app factory functions.\n-    for attr_name in {""create_app"", ""make_app""}:\n+    for attr_name in (""create_app"", ""make_app""):\n         app_factory = getattr(module, attr_name, None)\n \n         if inspect.isfunction(app_factory):\n'",4.166666666666667,4.166666666666667
requirements/dev.txt,requirements/dev.txt,7be45a4c5bb557cde56efac0cb85e0a9120acc37,1a9059dd3a0c1a8574f6555e92f3ec3c596284f5,'Bump sphinx from 3.2.0 to 3.2.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.2.0 to 3.2.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.2.0...v3.2.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -41,7 +41,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.2.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,7be45a4c5bb557cde56efac0cb85e0a9120acc37,1a9059dd3a0c1a8574f6555e92f3ec3c596284f5,'Bump sphinx from 3.2.0 to 3.2.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.2.0 to 3.2.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.2.0...v3.2.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.2.0             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,1f1b65a62576bc6a2f9cd27e9a725f0554fc70c7,e071734b4e9f5c21fe65400b167ff327c6c1f7bc,'fixed #3738 typo in src/flask/blueprints.py',"'@@ -121,7 +121,7 @@ class Blueprint(Scaffold):\n         default.\n     :param url_defaults: A dict of default values that blueprint routes\n         will receive by default.\n-    :param root_path: By default, the blueprint will automatically this\n+    :param root_path: By default, the blueprint will automatically set this\n         based on ``import_name``. In certain situations this automatic\n         detection can fail, so the path can be specified manually\n         instead.\n'",1.7878787878787878,1.7878787878787878
.github/workflows/tests.yaml,.github/workflows/tests.yaml,fe55f92cdc575d00204a134b2d556c1053e1ed4e,8952a178715c0f47f71a3600e9cfd49dd518096e,'Fix pre-commit cache key in GitHub Actions. (#3740)\n\nFix pre-commit cache key to include full Python version as per\r\nhttps://github.com/pre-commit/pre-commit/issues/1575#issuecomment-678792700\r\nand https://pre-commit.com/#github-actions-example',"'@@ -43,11 +43,14 @@ jobs:\n         with:\n           path: ${{ steps.pip-cache.outputs.dir }}\n           key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n+      - name: set full Python version in PY env var\n+        # See https://pre-commit.com/#github-actions-example\n+        run: echo ""::set-env name=PY::$(python -VV | sha256sum | cut -d\' \' -f1)""\n       - name: cache pre-commit\n         uses: actions/cache@v1\n         with:\n           path: ~/.cache/pre-commit\n-          key: pre-commit|${{ matrix.python }}|${{ hashFiles(\'.pre-commit-config.yaml\') }}\n+          key: pre-commit|${{ env.PY }}|${{ hashFiles(\'.pre-commit-config.yaml\') }}\n         if: matrix.tox == \'style\'\n       - run: pip install tox\n       - run: tox -e ${{ matrix.tox }}\n'",0,0
requirements/dev.txt,requirements/dev.txt,0885e68beb2ec2ba39a4ec1fb4097d082644e228,fe55f92cdc575d00204a134b2d556c1053e1ed4e,'Bump pre-commit from 2.6.0 to 2.7.1\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.6.0 to 2.7.1.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.6.0...v2.7.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -29,7 +29,7 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.3.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.6.0         # via -r requirements/dev.in\n+pre-commit==2.7.1         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n'",0,0
src/flask/cli.py,src/flask/cli.py,5bfe236fb531045497396bc85ee5026c6c9c68eb,6d3f87ee071ea061f0af2ba7d29b148841090b59,'fix typo in flask shell help (#3744)',"'@@ -859,7 +859,7 @@ def run_command(\n def shell_command():\n     """"""Run an interactive Python shell in the context of a given\n     Flask application.  The application will populate the default\n-    namespace of this shell according to it\'s configuration.\n+    namespace of this shell according to its configuration.\n \n     This is useful for executing small snippets of management code\n     without having to manually configure the application.\n'",4.166666666666667,4.166666666666667
.github/workflows/tests.yaml,.github/workflows/tests.yaml,a1fb8f143f5deb545a10ac2758cb7a2b2bd68df3,5bfe236fb531045497396bc85ee5026c6c9c68eb,'update cache action to v2 (#3749)',"'@@ -39,7 +39,7 @@ jobs:\n         id: pip-cache\n         run: echo ""::set-output name=dir::$(pip cache dir)""\n       - name: cache pip\n-        uses: actions/cache@v1\n+        uses: actions/cache@v2\n         with:\n           path: ${{ steps.pip-cache.outputs.dir }}\n           key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n@@ -47,7 +47,7 @@ jobs:\n         # See https://pre-commit.com/#github-actions-example\n         run: echo ""::set-env name=PY::$(python -VV | sha256sum | cut -d\' \' -f1)""\n       - name: cache pre-commit\n-        uses: actions/cache@v1\n+        uses: actions/cache@v2\n         with:\n           path: ~/.cache/pre-commit\n           key: pre-commit|${{ env.PY }}|${{ hashFiles(\'.pre-commit-config.yaml\') }}\n'",0,0
requirements/dev.txt,requirements/dev.txt,983af125acfd26779521b3bd0c08842e935df1de,a1fb8f143f5deb545a10ac2758cb7a2b2bd68df3,'Bump tox from 3.19.0 to 3.20.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.19.0 to 3.20.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.19.0...3.20.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -50,7 +50,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, pytest, tox\n-tox==3.19.0               # via -r requirements/dev.in\n+tox==3.20.0               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n \n'",0,0
requirements/dev.txt,requirements/dev.txt,ad10d12177c99fbe0f3e07c92efc492b0171fd1c,baaf8642373bdc4c99a6cf6a2c54cfbb03b203ab,'Bump pytest from 6.0.1 to 6.0.2\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.1 to 6.0.2.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.1...6.0.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -33,7 +33,7 @@ pre-commit==2.7.1         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.1             # via -r requirements/tests.in\n+pytest==6.0.2             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,ad10d12177c99fbe0f3e07c92efc492b0171fd1c,baaf8642373bdc4c99a6cf6a2c54cfbb03b203ab,'Bump pytest from 6.0.1 to 6.0.2\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.1 to 6.0.2.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.1...6.0.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -13,7 +13,7 @@ packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.1             # via -r requirements/tests.in\n+pytest==6.0.2             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n toml==0.10.1              # via pytest\n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,de464c03e134127140e5622e230790806a133ff9,e0d7d402e188f6b70f0cfe157a265550479afa5a,'Correct Sentry advertisement (not Free Software) (#3758)',"""@@ -34,7 +34,7 @@ Sending error mails, even if just for critical ones, can become\n overwhelming if enough users are hitting the error and log files are\n typically never looked at. This is why we recommend using `Sentry\n <https://sentry.io/>`_ for dealing with application errors. It's\n-available as an Open Source project `on GitHub\n+available as a source-available project `on GitHub\n <https://github.com/getsentry/sentry>`_ and is also available as a `hosted version\n <https://sentry.io/signup/>`_ which you can try for free. Sentry\n aggregates duplicate errors, captures the full stack trace and local\n""",1.6,1.6
docs/quickstart.rst,docs/quickstart.rst,12a4d1554689c0a0ac13988b0daf10c23c37c81d,b82c2e611a16efce910f2ae5eafc94066d48ec38,'Update quickstart.rst (#3767)',"'@@ -100,7 +100,7 @@ First of all you need to look at the error message.\n Old Version of Flask\n ````````````````````\n \n-Versions of Flask older than 0.11 use to have different ways to start the\n+Versions of Flask older than 0.11 used to have different ways to start the\n application.  In short, the :command:`flask` command did not exist, and\n neither did :command:`python -m flask`.  In that case you have two options:\n either upgrade to newer Flask versions or have a look at the :ref:`server`\n'",1.2666666666666666,1.2666666666666666
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,598c56c4983b33cbd9178f28516ebee33dd10fdd,de464c03e134127140e5622e230790806a133ff9,'fix grammar (#3769)',"""@@ -55,8 +55,8 @@ the file and redirects the user to the URL for the uploaded file::\n                 flash('No file part')\n                 return redirect(request.url)\n             file = request.files['file']\n-            # if user does not select file, browser also\n-            # submit an empty part without filename\n+            # If the user does not select a file, the browser submits an\n+            # empty file without a filename.\n             if file.filename == '':\n                 flash('No selected file')\n                 return redirect(request.url)\n@@ -135,10 +135,10 @@ Improving Uploads\n .. versionadded:: 0.6\n \n So how exactly does Flask handle uploads?  Well it will store them in the\n-webserver's memory if the files are reasonable small otherwise in a\n+webserver's memory if the files are reasonably small, otherwise in a\n temporary location (as returned by :func:`tempfile.gettempdir`).  But how\n do you specify the maximum file size after which an upload is aborted?  By\n-default Flask will happily accept file uploads to an unlimited amount of\n+default Flask will happily accept file uploads with an unlimited amount of\n memory, but you can limit that by setting the ``MAX_CONTENT_LENGTH``\n config key::\n \n@@ -167,10 +167,9 @@ Upload Progress Bars\n \n A while ago many developers had the idea to read the incoming file in\n small chunks and store the upload progress in the database to be able to\n-poll the progress with JavaScript from the client.  Long story short: the\n-client asks the server every 5 seconds how much it has transmitted\n-already.  Do you realize the irony?  The client is asking for something it\n-should already know.\n+poll the progress with JavaScript from the client. The client asks the\n+server every 5 seconds how much it has transmitted, but this is\n+something it should already know.\n \n An Easier Solution\n ------------------\n""",0,0
docs/errorhandling.rst,docs/errorhandling.rst,7e312c421ee1ccd57a6f1a5c43a00e8e4ec6a7d9,598c56c4983b33cbd9178f28516ebee33dd10fdd,'aesthetic: add a space after a comma (#3771)',"""@@ -55,7 +55,7 @@ And then add this to your Flask app:\n     import sentry_sdk\n     from sentry_sdk.integrations.flask import FlaskIntegration\n \n-    sentry_sdk.init('YOUR_DSN_HERE',integrations=[FlaskIntegration()])\n+    sentry_sdk.init('YOUR_DSN_HERE', integrations=[FlaskIntegration()])\n \n The ``YOUR_DSN_HERE`` value needs to be replaced with the DSN value you\n get from your Sentry installation.\n""",1.6,1.6
requirements/dev.txt,requirements/dev.txt,84a4669e54cc15e1c0e681ac6c4a7ae24db05342,7e312c421ee1ccd57a6f1a5c43a00e8e4ec6a7d9,'Bump greenlet from 0.4.16 to 0.4.17\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.16 to 0.4.17.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/NEWS)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.16...0.4.17)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -16,7 +16,7 @@ click==7.1.2              # via pip-tools\n distlib==0.3.0            # via virtualenv\n docutils==0.16            # via sphinx\n filelock==3.0.12          # via tox, virtualenv\n-greenlet==0.4.16          # via -r requirements/tests.in\n+greenlet==0.4.17          # via -r requirements/tests.in\n identify==1.4.16          # via pre-commit\n idna==2.9                 # via requests\n imagesize==1.2.0          # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,84a4669e54cc15e1c0e681ac6c4a7ae24db05342,7e312c421ee1ccd57a6f1a5c43a00e8e4ec6a7d9,'Bump greenlet from 0.4.16 to 0.4.17\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.16 to 0.4.17.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/NEWS)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.16...0.4.17)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -6,7 +6,7 @@\n #\n attrs==19.3.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n-greenlet==0.4.16          # via -r requirements/tests.in\n+greenlet==0.4.17          # via -r requirements/tests.in\n iniconfig==1.0.0          # via pytest\n more-itertools==8.3.0     # via pytest\n packaging==20.4           # via pytest\n'",0,0
src/flask/app.py,src/flask/app.py,8efea0ccbbf0985e0c3c001e5bd90b4912a18f54,4e8b0204942d89c7956f4e1a20e97b1a16ba6800,"'Break reference cycle created by default in Flask instances.\n\nFlask instances with static folders were creating a reference cycle\r\nvia their ""static"" view function (which held a strong reference back\r\nto the Flask instance to call its `send_static_file` method). This\r\nprevented CPython from freeing the memory for a Flask instance\r\nwhen all external references to it were released.\r\n\r\nNow use a weakref for the back reference to avoid this.\r\n\r\nCo-authored-by: Joshua Bronson <jab@users.noreply.github.com>'","'@@ -1,5 +1,6 @@\n import os\n import sys\n+import weakref\n from datetime import timedelta\n from itertools import chain\n from threading import Lock\n@@ -478,11 +479,14 @@ class Flask(Scaffold):\n             assert (\n                 bool(static_host) == host_matching\n             ), ""Invalid static_host/host_matching combination""\n+            # Use a weakref to avoid creating a reference cycle between the app\n+            # and the view function (see #3761).\n+            self_ref = weakref.ref(self)\n             self.add_url_rule(\n                 f""{self.static_url_path}/<path:filename>"",\n                 endpoint=""static"",\n                 host=static_host,\n-                view_func=self.send_static_file,\n+                view_func=lambda **kw: self_ref().send_static_file(**kw),\n             )\n \n         # Set the name of the Click group in case someone wants to add\n'",3.015151515151515,3.015151515151515
tests/test_basic.py,tests/test_basic.py,8efea0ccbbf0985e0c3c001e5bd90b4912a18f54,4e8b0204942d89c7956f4e1a20e97b1a16ba6800,"'Break reference cycle created by default in Flask instances.\n\nFlask instances with static folders were creating a reference cycle\r\nvia their ""static"" view function (which held a strong reference back\r\nto the Flask instance to call its `send_static_file` method). This\r\nprevented CPython from freeing the memory for a Flask instance\r\nwhen all external references to it were released.\r\n\r\nNow use a weakref for the back reference to avoid this.\r\n\r\nCo-authored-by: Joshua Bronson <jab@users.noreply.github.com>'","'@@ -1,8 +1,11 @@\n+import gc\n import re\n import sys\n import time\n import uuid\n+import weakref\n from datetime import datetime\n+from platform import python_implementation\n from threading import Thread\n \n import pytest\n@@ -16,6 +19,11 @@ from werkzeug.routing import BuildError\n import flask\n \n \n+require_cpython_gc = pytest.mark.skipif(\n+    python_implementation() != ""CPython"", reason=""Requires CPython GC behavior"",\n+)\n+\n+\n def test_options_work(app, client):\n     @app.route(""/"", methods=[""GET"", ""POST""])\n     def index():\n@@ -1970,3 +1978,19 @@ def test_max_cookie_size(app, client, recwarn):\n \n     client.get(""/"")\n     assert len(recwarn) == 0\n+\n+\n+@require_cpython_gc\n+def test_app_freed_on_zero_refcount():\n+    # A Flask instance should not create a reference cycle that prevents CPython\n+    # from freeing it when all external references to it are released (see #3761).\n+    gc.disable()\n+    try:\n+        app = flask.Flask(__name__)\n+        assert app.view_functions[""static""]\n+        weak = weakref.ref(app)\n+        assert weak() is not None\n+        del app\n+        assert weak() is None\n+    finally:\n+        gc.enable()\n'",1.0653846153846154,1.0689655172413792
src/flask/blueprints.py,src/flask/blueprints.py,bdf7083cfdeef0e0bdd0bf6d4c23b26c92b52d95,8efea0ccbbf0985e0c3c001e5bd90b4912a18f54,'refer to encoder instead of decoder',"""@@ -130,7 +130,7 @@ class Blueprint(Scaffold):\n     warn_on_modifications = False\n     _got_registered_once = False\n \n-    #: Blueprint local JSON decoder class to use.\n+    #: Blueprint local JSON encoder class to use.\n     #: Set to ``None`` to use the app's :class:`~flask.app.Flask.json_encoder`.\n     json_encoder = None\n     #: Blueprint local JSON decoder class to use.\n""",1.7878787878787878,1.7878787878787878
docs/errorhandling.rst,docs/errorhandling.rst,fa5aebc842c1cd19a57503984310db21aa512904,12a4d1554689c0a0ac13988b0daf10c23c37c81d,'updated Sentry link (#3788)',"'@@ -66,7 +66,7 @@ Follow-up reads:\n   similar fashion.  See the `Python SDK docs\n   <https://docs.sentry.io/platforms/python/>`_ for more information.\n * `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`_\n-* `Flask-specific documentation <https://docs.sentry.io/platforms/python/flask/>`_.\n+* `Flask-specific documentation <https://docs.sentry.io/platforms/python/guides/flask/>`_.\n \n .. _error-handlers:\n \n'",1.5,1.5
tests/test_helpers.py,tests/test_helpers.py,8c6baeedab60e0041317c2709df100dfd216c2ef,bdf7083cfdeef0e0bdd0bf6d4c23b26c92b52d95,'parametrize some tests (#3786)',"'@@ -895,9 +895,9 @@ class TestStreaming:\n \n \n class TestSafeJoin:\n-    def test_safe_join(self):\n-        # Valid combinations of *args and expected joined paths.\n-        passing = (\n+    @pytest.mark.parametrize(\n+        ""args, expected"",\n+        (\n             ((""a/b/c"",), ""a/b/c""),\n             ((""/"", ""a/"", ""b/"", ""c/""), ""/a/b/c""),\n             ((""a"", ""b"", ""c""), ""a/b/c""),\n@@ -912,14 +912,14 @@ class TestSafeJoin:\n             # Base directory is always considered safe\n             ((""../"", ""a/b/c""), ""../a/b/c""),\n             ((""/.."",), ""/..""),\n-        )\n-\n-        for args, expected in passing:\n-            assert flask.safe_join(*args) == expected\n+        ),\n+    )\n+    def test_safe_join(self, args, expected):\n+        assert flask.safe_join(*args) == expected\n \n-    def test_safe_join_exceptions(self):\n-        # Should raise werkzeug.exceptions.NotFound on unsafe joins.\n-        failing = (\n+    @pytest.mark.parametrize(\n+        ""args"",\n+        (\n             # path.isabs and ``..\'\' checks\n             (""/a"", ""b"", ""/c""),\n             (""/a"", ""../b/c""),\n@@ -928,11 +928,11 @@ class TestSafeJoin:\n             (""/a"", ""b/../b/../../c""),\n             (""/a"", ""b"", ""c/../..""),\n             (""/a"", ""b/../../c""),\n-        )\n-\n-        for args in failing:\n-            with pytest.raises(NotFound):\n-                print(flask.safe_join(*args))\n+        ),\n+    )\n+    def test_safe_join_exceptions(self, args):\n+        with pytest.raises(NotFound):\n+            print(flask.safe_join(*args))\n \n \n class TestHelpers:\n'",1.1862745098039216,1.1666666666666667
docs/appcontext.rst,docs/appcontext.rst,9d824db41c930126db7bc6af5c54eec670cf086c,fa5aebc842c1cd19a57503984310db21aa512904,'Update the signature of the teardown function (#3730)\n\nCo-authored-by: David Lord <davidism@gmail.com>',"""@@ -119,7 +119,7 @@ For example, you can manage a database connection using this pattern::\n         return g.db\n \n     @app.teardown_appcontext\n-    def teardown_db():\n+    def teardown_db(exception):\n         db = g.pop('db', None)\n \n         if db is not None:\n""",1.6666666666666667,1.6666666666666667
requirements/dev.txt,requirements/dev.txt,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,967b2350354a59a2b8ae0f5a481511353bfec136,'Bump pytest from 6.0.2 to 6.1.1 (#3790)\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.2 to 6.1.1.\r\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\r\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\r\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.2...6.1.1)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -23,7 +23,6 @@ imagesize==1.2.0          # via sphinx\n iniconfig==1.0.0          # via pytest\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n-more-itertools==8.3.0     # via pytest\n nodeenv==1.3.5            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n@@ -33,7 +32,7 @@ pre-commit==2.7.1         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.2             # via -r requirements/tests.in\n+pytest==6.1.1             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,967b2350354a59a2b8ae0f5a481511353bfec136,'Bump pytest from 6.0.2 to 6.1.1 (#3790)\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.0.2 to 6.1.1.\r\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\r\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\r\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.0.2...6.1.1)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -8,12 +8,11 @@ attrs==19.3.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n greenlet==0.4.17          # via -r requirements/tests.in\n iniconfig==1.0.0          # via pytest\n-more-itertools==8.3.0     # via pytest\n packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==6.0.2             # via -r requirements/tests.in\n+pytest==6.1.1             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n toml==0.10.1              # via pytest\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -96,16 +96,21 @@ First time setup\n \n -   Create a virtualenv.\n \n-    .. code-block:: text\n+    .. tabs::\n \n-        $ python3 -m venv env\n-        $ . env/bin/activate\n+       .. group-tab:: macOS/Linux\n \n-    On Windows, activating is different.\n+          .. code-block:: text\n \n-    .. code-block:: text\n+             $ python3 -m venv env\n+             $ . env/bin/activate\n+\n+       .. group-tab:: Windows\n+\n+          .. code-block:: text\n \n-        > env\\Scripts\\activate\n+             > py -3 -m venv env\n+             > env\\Scripts\\activate\n \n -   Install Flask in editable mode with development dependencies.\n \n'",0,0
docs/cli.rst,docs/cli.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -18,20 +18,28 @@ The ``flask`` command is installed by Flask, not your application; it must be\n told where to find your application in order to use it. The ``FLASK_APP``\n environment variable is used to specify how to load the application.\n \n-Unix Bash (Linux, Mac, etc.)::\n+.. tabs::\n \n-    $ export FLASK_APP=hello\n-    $ flask run\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=hello\n+         $ flask run\n+\n+   .. group-tab:: CMD\n \n-Windows CMD::\n+      .. code-block:: text\n \n-    > set FLASK_APP=hello\n-    > flask run\n+         > set FLASK_APP=hello\n+         > flask run\n \n-Windows PowerShell::\n+   .. group-tab:: Powershell\n \n-    > $env:FLASK_APP = ""hello""\n-    > flask run\n+      .. code-block:: text\n+\n+         > $env:FLASK_APP = ""hello""\n+         > flask run\n \n While ``FLASK_APP`` supports a variety of options for specifying your\n application, most use cases should be simple. Here are the typical values:\n@@ -128,16 +136,49 @@ If the env is set to ``development``, the ``flask`` command will enable\n debug mode and ``flask run`` will enable the interactive debugger and\n reloader.\n \n-::\n+.. tabs::\n \n-    $ FLASK_ENV=development flask run\n-     * Serving Flask app ""hello""\n-     * Environment: development\n-     * Debug mode: on\n-     * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n-     * Restarting with inotify reloader\n-     * Debugger is active!\n-     * Debugger PIN: 223-456-919\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+         $ flask run\n+          * Serving Flask app ""hello""\n+          * Environment: development\n+          * Debug mode: on\n+          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+          * Restarting with inotify reloader\n+          * Debugger is active!\n+          * Debugger PIN: 223-456-919\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+         > flask run\n+          * Serving Flask app ""hello""\n+          * Environment: development\n+          * Debug mode: on\n+          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+          * Restarting with inotify reloader\n+          * Debugger is active!\n+          * Debugger PIN: 223-456-919\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n+          * Serving Flask app ""hello""\n+          * Environment: development\n+          * Debug mode: on\n+          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+          * Restarting with inotify reloader\n+          * Debugger is active!\n+          * Debugger PIN: 223-456-919\n \n \n Watch Extra Files with the Reloader\n@@ -149,14 +190,40 @@ additional files with the ``--extra-files`` option, or the\n ``FLASK_RUN_EXTRA_FILES`` environment variable. Multiple paths are\n separated with ``:``, or ``;`` on Windows.\n \n-.. code-block:: none\n+.. tabs::\n \n-    $ flask run --extra-files file1:dirA/file2:dirB/\n-    # or\n-    $ export FLASK_RUN_EXTRA_FILES=file1:dirA/file2:dirB/\n-    $ flask run\n-     * Running on http://127.0.0.1:8000/\n-     * Detected change in \'/path/to/file1\', reloading\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+          $ flask run --extra-files file1:dirA/file2:dirB/\n+          # or\n+          $ export FLASK_RUN_EXTRA_FILES=file1:dirA/file2:dirB/\n+          $ flask run\n+           * Running on http://127.0.0.1:8000/\n+           * Detected change in \'/path/to/file1\', reloading\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+          > flask run --extra-files file1:dirA/file2:dirB/\n+          # or\n+          > set FLASK_RUN_EXTRA_FILES=file1:dirA/file2:dirB/\n+          > flask run\n+           * Running on http://127.0.0.1:8000/\n+           * Detected change in \'/path/to/file1\', reloading\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+          > flask run --extra-files file1:dirA/file2:dirB/\n+          # or\n+          > $env:FLASK_RUN_EXTRA_FILES = ""file1:dirA/file2:dirB/""\n+          > flask run\n+           * Running on http://127.0.0.1:8000/\n+           * Detected change in \'/path/to/file1\', reloading\n \n \n Debug Mode\n@@ -206,11 +273,31 @@ environment variables. The variables use the pattern\n ``FLASK_COMMAND_OPTION``. For example, to set the port for the run\n command, instead of ``flask run --port 8000``:\n \n-.. code-block:: bash\n+.. tabs::\n \n-    $ export FLASK_RUN_PORT=8000\n-    $ flask run\n-     * Running on http://127.0.0.1:8000/\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_RUN_PORT=8000\n+         $ flask run\n+          * Running on http://127.0.0.1:8000/\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_RUN_PORT=8000\n+         > flask run\n+          * Running on http://127.0.0.1:8000/\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_RUN_PORT = 8000\n+         > flask run\n+          * Running on http://127.0.0.1:8000/\n \n These can be added to the ``.flaskenv`` file just like ``FLASK_APP`` to\n control default command options.\n@@ -234,10 +321,28 @@ a project runner that loads them already. Keep in mind that the\n environment variables must be set before the app loads or it won\'t\n configure as expected.\n \n-.. code-block:: bash\n+.. tabs::\n \n-    $ export FLASK_SKIP_DOTENV=1\n-    $ flask run\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_SKIP_DOTENV=1\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_SKIP_DOTENV=1\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_SKIP_DOTENV = 1\n+         > flask run\n \n \n Environment Variables From virtualenv\n@@ -247,13 +352,25 @@ If you do not want to install dotenv support, you can still set environment\n variables by adding them to the end of the virtualenv\'s :file:`activate`\n script. Activating the virtualenv will set the variables.\n \n-Unix Bash, :file:`venv/bin/activate`::\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      Unix Bash, :file:`venv/bin/activate`::\n+\n+          $ export FLASK_APP=hello\n+\n+   .. group-tab:: CMD\n+\n+      Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::\n+\n+          > set FLASK_APP=hello\n \n-    $ export FLASK_APP=hello\n+   .. group-tab:: Powershell\n \n-Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::\n+      Windows Powershell, :file:`venv\\\\Scripts\\\\activate.ps1`::\n \n-    > set FLASK_APP=hello\n+          > $env:FLASK_APP = ""hello""\n \n It is preferred to use dotenv support over this, since :file:`.flaskenv` can be\n committed to the repository so that it works automatically wherever the project\n'",0,0
docs/conf.py,docs/conf.py,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -18,6 +18,7 @@ extensions = [\n     ""sphinxcontrib.log_cabinet"",\n     ""pallets_sphinx_themes"",\n     ""sphinx_issues"",\n+    ""sphinx_tabs.tabs"",\n ]\n intersphinx_mapping = {\n     ""python"": (""https://docs.python.org/3/"", None),\n'",3.0,3.0
docs/config.rst,docs/config.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -65,12 +65,30 @@ in debug mode. To control this separately from the environment, use the\n     from debug mode. The development environment enables debug mode.\n \n To switch Flask to the development environment and enable debug mode,\n-set :envvar:`FLASK_ENV`::\n+set :envvar:`FLASK_ENV`:\n \n-    $ export FLASK_ENV=development\n-    $ flask run\n+.. tabs::\n \n-(On Windows, use ``set`` instead of ``export``.)\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n \n Using the environment variables as described above is recommended. While\n it is possible to set :data:`ENV` and :data:`DEBUG` in your config or\n@@ -409,18 +427,34 @@ So a common pattern is this::\n This first loads the configuration from the\n `yourapplication.default_settings` module and then overrides the values\n with the contents of the file the :envvar:`YOURAPPLICATION_SETTINGS`\n-environment variable points to.  This environment variable can be set on\n-Linux or OS X with the export command in the shell before starting the\n-server::\n+environment variable points to.  This environment variable can be set\n+in the shell before starting the server:\n+\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n \n-    $ export YOURAPPLICATION_SETTINGS=/path/to/settings.cfg\n-    $ python run-app.py\n-     * Running on http://127.0.0.1:5000/\n-     * Restarting with reloader...\n+         $ export YOURAPPLICATION_SETTINGS=/path/to/settings.cfg\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n \n-On Windows systems use the `set` builtin instead::\n+   .. group-tab:: CMD\n \n-    > set YOURAPPLICATION_SETTINGS=\\path\\to\\settings.cfg\n+      .. code-block:: text\n+\n+         > set YOURAPPLICATION_SETTINGS=\\path\\to\\settings.cfg\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:YOURAPPLICATION_SETTINGS = ""\\path\\to\\settings.cfg""\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n \n The configuration files themselves are actual Python files.  Only values\n in uppercase are actually stored in the config object later on.  So make\n@@ -465,17 +499,36 @@ In addition to pointing to configuration files using environment variables, you\n may find it useful (or necessary) to control your configuration values directly\n from the environment.\n \n-Environment variables can be set on Linux or OS X with the export command in\n-the shell before starting the server::\n+Environment variables can be set in the shell before starting the server:\n+\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n+         $ export MAIL_ENABLED=false\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n+         > set MAIL_ENABLED=false\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n \n-    $ export SECRET_KEY=\'5f352379324c22463451387a0aec5d2f\'\n-    $ export MAIL_ENABLED=false\n-    $ python run-app.py\n-     * Running on http://127.0.0.1:5000/\n+   .. group-tab:: Powershell\n \n-On Windows systems use the ``set`` builtin instead::\n+      .. code-block:: text\n \n-    > set SECRET_KEY=\'5f352379324c22463451387a0aec5d2f\'\n+         > $env:SECRET_KEY = ""5f352379324c22463451387a0aec5d2f""\n+         > $env:MAIL_ENABLED = ""false""\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n \n While this approach is straightforward to use, it is important to remember that\n environment variables are strings -- they are not automatically deserialized\n'",1.0,1.0
docs/debugging.rst,docs/debugging.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -44,10 +44,28 @@ To enable the debugger, run the development server with the\n Flask in debug mode, which changes how it handles some errors, and\n enables the debugger and reloader.\n \n-.. code-block:: text\n+.. tabs::\n \n-    $ export FLASK_ENV=development\n-    $ flask run\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n \n ``FLASK_ENV`` can only be set as an environment variable. When running\n from Python code, passing ``debug=True`` enables debug mode, which is\n@@ -79,10 +97,28 @@ which can interfere.\n \n When running from the command line:\n \n-.. code-block:: text\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+         $ flask run --no-debugger --no-reload\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+         > flask run --no-debugger --no-reload\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_ENV=development\n-    $ flask run --no-debugger --no-reload\n+         > $env:FLASK_ENV = ""development""\n+         > flask run --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/installation.rst,docs/installation.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -75,17 +75,23 @@ Create an environment\n \n Create a project folder and a :file:`venv` folder within:\n \n-.. code-block:: sh\n+.. tabs::\n+\n+   .. group-tab:: macOS/Linux\n+\n+      .. code-block:: text\n \n-    $ mkdir myproject\n-    $ cd myproject\n-    $ python3 -m venv venv\n+         $ mkdir myproject\n+         $ cd myproject\n+         $ python3 -m venv venv\n \n-On Windows:\n+   .. group-tab:: Windows\n \n-.. code-block:: bat\n+      .. code-block:: text\n \n-    $ py -3 -m venv venv\n+         > mkdir myproject\n+         > cd myproject\n+         > py -3 -m venv venv\n \n \n .. _install-activate-env:\n@@ -95,15 +101,19 @@ Activate the environment\n \n Before you work on your project, activate the corresponding environment:\n \n-.. code-block:: sh\n+.. tabs::\n+\n+   .. group-tab:: macOS/Linux\n+\n+      .. code-block:: text\n \n-    $ . venv/bin/activate\n+         $ . venv/bin/activate\n \n-On Windows:\n+   .. group-tab:: Windows\n \n-.. code-block:: bat\n+      .. code-block:: text\n \n-    > venv\\Scripts\\activate\n+         > venv\\Scripts\\activate\n \n Your shell prompt will change to show the name of the activated\n environment.\n'",0,0
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -87,16 +87,56 @@ For more information about the design of extensions refer to :doc:`/extensiondev\n Using Applications\n ------------------\n \n-To run such an application, you can use the :command:`flask` command::\n+To run such an application, you can use the :command:`flask` command:\n \n-    $ export FLASK_APP=myapp\n-    $ flask run\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=myapp\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_APP=myapp\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_APP = ""myapp""\n+         > flask run\n \n Flask will automatically detect the factory (``create_app`` or ``make_app``)\n-in ``myapp``. You can also pass arguments to the factory like this::\n+in ``myapp``. You can also pass arguments to the factory like this:\n+\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=""myapp:create_app(\'dev\')""\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_APP=""myapp:create_app(\'dev\')""\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_APP=""myapp:create_app(\'dev\')""\n-    $ flask run\n+         > $env:FLASK_APP = ""myapp:create_app(\'dev\')""\n+         > flask run\n \n Then the ``create_app`` factory in ``myapp`` is called with the string\n ``\'dev\'`` as the argument. See :doc:`/cli` for more detail.\n'",1.0,1.0
docs/patterns/packages.rst,docs/patterns/packages.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -57,15 +57,51 @@ a big problem, just add a new file called :file:`setup.py` next to the inner\n     )\n \n In order to run the application you need to export an environment variable\n-that tells Flask where to find the application instance::\n+that tells Flask where to find the application instance:\n \n-    $ export FLASK_APP=yourapplication\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=yourapplication\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_APP=yourapplication\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n+\n+         > $env:FLASK_APP = ""yourapplication""\n \n If you are outside of the project directory make sure to provide the exact\n path to your application directory. Similarly you can turn on the\n-development features like this::\n+development features like this:\n+\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_ENV=development\n+         > $env:FLASK_ENV = ""development""\n \n In order to install and run the application you need to issue the following\n commands::\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -44,20 +44,31 @@ To run the application, use the :command:`flask` command or\n to tell your terminal the application to work with by exporting the\n ``FLASK_APP`` environment variable:\n \n-.. code-block:: text\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=hello.py\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n \n-    $ export FLASK_APP=hello.py\n-    $ flask run\n-     * Running on http://127.0.0.1:5000/\n+   .. group-tab:: CMD\n \n-If you are on Windows, the environment variable syntax depends on command line\n-interpreter. On Command Prompt::\n+      .. code-block:: text\n \n-    C:\\path\\to\\app>set FLASK_APP=hello.py\n+         > set FLASK_APP=hello.py\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n \n-And on PowerShell::\n+   .. group-tab:: Powershell\n \n-    PS C:\\path\\to\\app> $env:FLASK_APP = ""hello.py""\n+      .. code-block:: text\n+\n+         > $env:FLASK_APP = ""hello.py""\n+         > flask run\n+          * Running on http://127.0.0.1:5000/\n \n This launches a very simple builtin server, which is good enough for\n testing but probably not what you want to use in production. For\n@@ -135,10 +146,28 @@ error occurs during a request.\n To enable all development features, set the ``FLASK_ENV`` environment\n variable to ``development`` before calling ``flask run``.\n \n-.. code-block:: text\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_ENV=development\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_ENV=development\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_ENV=development\n-    $ flask run\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n \n See also:\n \n'",1.2666666666666666,1.2666666666666666
docs/server.rst,docs/server.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -23,11 +23,31 @@ development server. It requires setting the ``FLASK_APP`` environment\n variable to point to your application, and ``FLASK_ENV=development`` to\n fully enable development mode.\n \n-.. code-block:: text\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=hello\n+         $ export FLASK_ENV=development\n+         $ flask run\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_APP=hello\n+         > set FLASK_ENV=development\n+         > flask run\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_APP=hello\n-    $ export FLASK_ENV=development\n-    $ flask run\n+         > $env:FLASK_APP = ""hello""\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n \n This enables the development environment, including the interactive\n debugger and reloader, and then starts the server on\n'",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -48,10 +48,28 @@ Pip will install your project along with its dependencies.\n Since this is a different machine, you need to run ``init-db`` again to\n create the database in the instance folder.\n \n-.. code-block:: none\n+.. tabs::\n+\n+   .. group-tab:: Bash\n+\n+      .. code-block:: text\n+\n+         $ export FLASK_APP=flaskr\n+         $ flask init-db\n+\n+   .. group-tab:: CMD\n+\n+      .. code-block:: text\n+\n+         > set FLASK_APP=flaskr\n+         > flask init-db\n+\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    $ export FLASK_APP=flaskr\n-    $ flask init-db\n+         > $env:FLASK_APP = ""flaskr""\n+         > flask init-db\n \n When Flask detects that it\'s installed (not in editable mode), it uses\n a different directory for the instance folder. You can find it at\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -135,29 +135,31 @@ exception, and restarts the server whenever you make changes to the\n code. You can leave it running and just reload the browser page as you\n follow the tutorial.\n \n-For Linux and Mac:\n+.. tabs::\n \n-.. code-block:: none\n+   .. group-tab:: Bash\n \n-    $ export FLASK_APP=flaskr\n-    $ export FLASK_ENV=development\n-    $ flask run\n+      .. code-block:: text\n \n-For Windows cmd, use ``set`` instead of ``export``:\n+         $ export FLASK_APP=flaskr\n+         $ export FLASK_ENV=development\n+         $ flask run\n \n-.. code-block:: none\n+   .. group-tab:: CMD\n \n-    > set FLASK_APP=flaskr\n-    > set FLASK_ENV=development\n-    > flask run\n+      .. code-block:: text\n \n-For Windows PowerShell, use ``$env:`` instead of ``export``:\n+         > set FLASK_APP=flaskr\n+         > set FLASK_ENV=development\n+         > flask run\n \n-.. code-block:: none\n+   .. group-tab:: Powershell\n+\n+      .. code-block:: text\n \n-    > $env:FLASK_APP = ""flaskr""\n-    > $env:FLASK_ENV = ""development""\n-    > flask run\n+         > $env:FLASK_APP = ""flaskr""\n+         > $env:FLASK_ENV = ""development""\n+         > flask run\n \n You\'ll see output similar to this:\n \n'",0,0
requirements/docs.in,requirements/docs.in,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -3,3 +3,4 @@ packaging\n Sphinx\n sphinx-issues\n sphinxcontrib-log-cabinet\n+sphinx-tabs\n'",0,0
requirements/docs.txt,requirements/docs.txt,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,c5a5d9b30bafcc242c0ae6004d71f7238e002e06,"'Add command switch tabs for Bash, CMD and Powershell with sphinx-tabs (#3714)\n\n* Enable Sphinx extension sphinx-tabs\r\n\r\n* Add command tabs for all export commands\r\n\r\n* Add command tabs for all venv commands\r\n\r\nFix trim spaces'","'@@ -8,9 +8,11 @@ alabaster==0.7.12         # via sphinx\n babel==2.8.0              # via sphinx\n certifi==2020.4.5.1       # via requests\n chardet==3.0.4            # via requests\n+colorama==0.4.3           # via sphinx\n docutils==0.16            # via sphinx\n idna==2.9                 # via requests\n imagesize==1.2.0          # via sphinx\n+importlib-metadata==1.7.0  # via pallets-sphinx-themes\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n@@ -22,7 +24,8 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx-tabs==1.1.13       # via -r requirements/docs.in\n+sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n@@ -31,6 +34,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n urllib3==1.25.9           # via requests\n+zipp==3.1.0               # via importlib-metadata\n \n # The following packages are considered to be unsafe in a requirements file:\n # setuptools\n'",0,0
docs/htmlfaq.rst,docs/htmlfaq.rst,070a0c1c759e686ac03e9cdfca64b116665df6d4,1035efc7d6e49a459ec2dcbfab9526a7347d6f2e,'removing outdated xhtml information (#3802)',"""@@ -183,7 +183,7 @@ and to use.\n     geolocation, and offline applications.\n \n Many other features have been added, as well. A good guide to new features\n-in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.\n+in HTML5 is Mark Pilgrim's book, `Dive Into HTML5`_.\n Not all of them are supported in browsers yet, however, so use caution.\n \n .. _Dive Into HTML5: https://diveintohtml5.info/\n@@ -195,8 +195,7 @@ Currently, the answer is HTML5.  There are very few reasons to use XHTML\n considering the latest developments in Web browsers.  To summarize the\n reasons given above:\n \n--   Internet Explorer (which, sadly, currently leads in market share)\n-    has poor support for XHTML.\n+-   Internet Explorer has poor support for XHTML.\n -   Many JavaScript libraries also do not support XHTML, due to the more\n     complicated namespacing API it requires.\n -   HTML5 adds several new features, including semantic tags and the\n""",0,0
src/flask/helpers.py,src/flask/helpers.py,5d60cce2429e2c7e11e9acc5ea030464bf169f84,070a0c1c759e686ac03e9cdfca64b116665df6d4,'Updating external_url_handler example to Python 3 (#3816)',"'@@ -239,7 +239,7 @@ def url_for(endpoint, **values):\n                 # Re-raise the BuildError, in context of original traceback.\n                 exc_type, exc_value, tb = sys.exc_info()\n                 if exc_value is error:\n-                    raise exc_type, exc_value, tb\n+                    raise exc_type(exc_value).with_traceback(tb)\n                 else:\n                     raise error\n             # url_for will use this result, instead of raising BuildError.\n'",4.21875,4.21875
.github/workflows/tests.yaml,.github/workflows/tests.yaml,76467527d6e44474cbe8982fff4e37f91214c036,5d60cce2429e2c7e11e9acc5ea030464bf169f84,'test Python 3.9',"""@@ -16,15 +16,16 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - {name: Linux, python: '3.8', os: ubuntu-latest, tox: py38}\n-          - {name: Windows, python: '3.8', os: windows-latest, tox: py38}\n-          - {name: Mac, python: '3.8', os: macos-latest, tox: py38}\n+          - {name: Linux, python: '3.9', os: ubuntu-latest, tox: py39}\n+          - {name: Windows, python: '3.9', os: windows-latest, tox: py39}\n+          - {name: Mac, python: '3.9', os: macos-latest, tox: py39}\n+          - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n-          - {name: Version Range, python: '3.8', os: ubuntu-latest, tox: 'devel'}\n-          - {name: Style, python: '3.8', os: ubuntu-latest, tox: style}\n-          - {name: Docs, python: '3.8', os: ubuntu-latest, tox: docs}\n+          - {name: Version Range, python: '3.9', os: ubuntu-latest, tox: 'devel'}\n+          - {name: Style, python: '3.9', os: ubuntu-latest, tox: style}\n+          - {name: Docs, python: '3.9', os: ubuntu-latest, tox: docs}\n     steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-python@v2\n""",0,0
tox.ini,tox.ini,76467527d6e44474cbe8982fff4e37f91214c036,5d60cce2429e2c7e11e9acc5ea030464bf169f84,'test Python 3.9',"'@@ -1,6 +1,6 @@\n [tox]\n envlist =\n-    py{38,37,36,py3}\n+    py{39,38,37,36,py3}\n     py38-devel\n     style\n     docs\n'",0,0
src/flask/wrappers.py,src/flask/wrappers.py,1c6dc15420b21fc325833ab2955375e9736f2e74,76467527d6e44474cbe8982fff4e37f91214c036,'fix response bases order',"'@@ -90,7 +90,7 @@ class Request(RequestBase, JSONMixin):\n             attach_enctype_error_multidict(self)\n \n \n-class Response(ResponseBase, JSONMixin):\n+class Response(JSONMixin, ResponseBase):\n     """"""The response object that is used by default in Flask.  Works like the\n     response object from Werkzeug but is set to have an HTML mimetype by\n     default.  Quite often you don\'t have to create this object yourself because\n'",2.5714285714285716,2.5714285714285716
.github/workflows/tests.yaml,.github/workflows/tests.yaml,2676973cd7d7db2ae83f1ef3034fadad8c5236da,1c6dc15420b21fc325833ab2955375e9736f2e74,"'remove pre-commit job, using pre-commit.ci now'","""@@ -24,7 +24,6 @@ jobs:\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n           - {name: Version Range, python: '3.9', os: ubuntu-latest, tox: 'devel'}\n-          - {name: Style, python: '3.9', os: ubuntu-latest, tox: style}\n           - {name: Docs, python: '3.9', os: ubuntu-latest, tox: docs}\n     steps:\n       - uses: actions/checkout@v2\n""",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,7c20611cdded4176cb4d17e3292137b96feec356,06495e791b59461cb8cf8c0bb3221f7fd4a14da8,'mkstemp returns a file descriptor (#3809)',"'@@ -107,7 +107,7 @@ local development configuration.\n         return app.test_cli_runner()\n \n :func:`tempfile.mkstemp` creates and opens a temporary file, returning\n-the file object and the path to it. The ``DATABASE`` path is\n+the file descriptor and the path to it. The ``DATABASE`` path is\n overridden so it points to this temporary path instead of the instance\n folder. After setting the path, the database tables are created and the\n test data is inserted. After the test is over, the temporary file is\n'",1.0,1.0
tests/test_helpers.py,tests/test_helpers.py,a0e2aca770c756d9f7de53339e2cf9067a52df11,7c20611cdded4176cb4d17e3292137b96feec356,'move json tests to separate file',"'@@ -2,7 +2,6 @@ import datetime\n import io\n import os\n import sys\n-import uuid\n \n import pytest\n from werkzeug.datastructures import Range\n@@ -17,16 +16,6 @@ from flask.helpers import get_debug_flag\n from flask.helpers import get_env\n \n \n-def has_encoding(name):\n-    try:\n-        import codecs\n-\n-        codecs.lookup(name)\n-        return True\n-    except LookupError:\n-        return False\n-\n-\n class FakePath:\n     """"""Fake object to represent a ``PathLike object``.\n \n@@ -41,375 +30,6 @@ class FakePath:\n         return self.path\n \n \n-class FixedOffset(datetime.tzinfo):\n-    """"""Fixed offset in hours east from UTC.\n-\n-    This is a slight adaptation of the ``FixedOffset`` example found in\n-    https://docs.python.org/2.7/library/datetime.html.\n-    """"""\n-\n-    def __init__(self, hours, name):\n-        self.__offset = datetime.timedelta(hours=hours)\n-        self.__name = name\n-\n-    def utcoffset(self, dt):\n-        return self.__offset\n-\n-    def tzname(self, dt):\n-        return self.__name\n-\n-    def dst(self, dt):\n-        return datetime.timedelta()\n-\n-\n-class TestJSON:\n-    @pytest.mark.parametrize(""debug"", (True, False))\n-    def test_bad_request_debug_message(self, app, client, debug):\n-        app.config[""DEBUG""] = debug\n-        app.config[""TRAP_BAD_REQUEST_ERRORS""] = False\n-\n-        @app.route(""/json"", methods=[""POST""])\n-        def post_json():\n-            flask.request.get_json()\n-            return None\n-\n-        rv = client.post(""/json"", data=None, content_type=""application/json"")\n-        assert rv.status_code == 400\n-        contains = b""Failed to decode JSON object"" in rv.data\n-        assert contains == debug\n-\n-    def test_json_bad_requests(self, app, client):\n-        @app.route(""/json"", methods=[""POST""])\n-        def return_json():\n-            return flask.jsonify(foo=str(flask.request.get_json()))\n-\n-        rv = client.post(""/json"", data=""malformed"", content_type=""application/json"")\n-        assert rv.status_code == 400\n-\n-    def test_json_custom_mimetypes(self, app, client):\n-        @app.route(""/json"", methods=[""POST""])\n-        def return_json():\n-            return flask.request.get_json()\n-\n-        rv = client.post(""/json"", data=\'""foo""\', content_type=""application/x+json"")\n-        assert rv.data == b""foo""\n-\n-    @pytest.mark.parametrize(\n-        ""test_value,expected"", [(True, \'""\\\\u2603""\'), (False, \'""\\u2603""\')]\n-    )\n-    def test_json_as_unicode(self, test_value, expected, app, app_ctx):\n-\n-        app.config[""JSON_AS_ASCII""] = test_value\n-        rv = flask.json.dumps(""\\N{SNOWMAN}"")\n-        assert rv == expected\n-\n-    def test_json_dump_to_file(self, app, app_ctx):\n-        test_data = {""name"": ""Flask""}\n-        out = io.StringIO()\n-\n-        flask.json.dump(test_data, out)\n-        out.seek(0)\n-        rv = flask.json.load(out)\n-        assert rv == test_data\n-\n-    @pytest.mark.parametrize(\n-        ""test_value"", [0, -1, 1, 23, 3.14, ""s"", ""longer string"", True, False, None]\n-    )\n-    def test_jsonify_basic_types(self, test_value, app, client):\n-        url = ""/jsonify_basic_types""\n-        app.add_url_rule(url, url, lambda x=test_value: flask.jsonify(x))\n-        rv = client.get(url)\n-        assert rv.mimetype == ""application/json""\n-        assert flask.json.loads(rv.data) == test_value\n-\n-    def test_jsonify_dicts(self, app, client):\n-        d = {\n-            ""a"": 0,\n-            ""b"": 23,\n-            ""c"": 3.14,\n-            ""d"": ""t"",\n-            ""e"": ""Hi"",\n-            ""f"": True,\n-            ""g"": False,\n-            ""h"": [""test list"", 10, False],\n-            ""i"": {""test"": ""dict""},\n-        }\n-\n-        @app.route(""/kw"")\n-        def return_kwargs():\n-            return flask.jsonify(**d)\n-\n-        @app.route(""/dict"")\n-        def return_dict():\n-            return flask.jsonify(d)\n-\n-        for url in ""/kw"", ""/dict"":\n-            rv = client.get(url)\n-            assert rv.mimetype == ""application/json""\n-            assert flask.json.loads(rv.data) == d\n-\n-    def test_jsonify_arrays(self, app, client):\n-        """"""Test jsonify of lists and args unpacking.""""""\n-        a_list = [\n-            0,\n-            42,\n-            3.14,\n-            ""t"",\n-            ""hello"",\n-            True,\n-            False,\n-            [""test list"", 2, False],\n-            {""test"": ""dict""},\n-        ]\n-\n-        @app.route(""/args_unpack"")\n-        def return_args_unpack():\n-            return flask.jsonify(*a_list)\n-\n-        @app.route(""/array"")\n-        def return_array():\n-            return flask.jsonify(a_list)\n-\n-        for url in ""/args_unpack"", ""/array"":\n-            rv = client.get(url)\n-            assert rv.mimetype == ""application/json""\n-            assert flask.json.loads(rv.data) == a_list\n-\n-    def test_jsonify_date_types(self, app, client):\n-        """"""Test jsonify with datetime.date and datetime.datetime types.""""""\n-        test_dates = (\n-            datetime.datetime(1973, 3, 11, 6, 30, 45),\n-            datetime.date(1975, 1, 5),\n-        )\n-\n-        for i, d in enumerate(test_dates):\n-            url = f""/datetest{i}""\n-            app.add_url_rule(url, str(i), lambda val=d: flask.jsonify(x=val))\n-            rv = client.get(url)\n-            assert rv.mimetype == ""application/json""\n-            assert flask.json.loads(rv.data)[""x""] == http_date(d.timetuple())\n-\n-    @pytest.mark.parametrize(""tz"", ((""UTC"", 0), (""PST"", -8), (""KST"", 9)))\n-    def test_jsonify_aware_datetimes(self, tz):\n-        """"""Test if aware datetime.datetime objects are converted into GMT.""""""\n-        tzinfo = FixedOffset(hours=tz[1], name=tz[0])\n-        dt = datetime.datetime(2017, 1, 1, 12, 34, 56, tzinfo=tzinfo)\n-        gmt = FixedOffset(hours=0, name=""GMT"")\n-        expected = dt.astimezone(gmt).strftime(\'""%a, %d %b %Y %H:%M:%S %Z""\')\n-        assert flask.json.JSONEncoder().encode(dt) == expected\n-\n-    def test_jsonify_uuid_types(self, app, client):\n-        """"""Test jsonify with uuid.UUID types""""""\n-\n-        test_uuid = uuid.UUID(bytes=b""\\xDE\\xAD\\xBE\\xEF"" * 4)\n-        url = ""/uuid_test""\n-        app.add_url_rule(url, url, lambda: flask.jsonify(x=test_uuid))\n-\n-        rv = client.get(url)\n-\n-        rv_x = flask.json.loads(rv.data)[""x""]\n-        assert rv_x == str(test_uuid)\n-        rv_uuid = uuid.UUID(rv_x)\n-        assert rv_uuid == test_uuid\n-\n-    def test_json_attr(self, app, client):\n-        @app.route(""/add"", methods=[""POST""])\n-        def add():\n-            json = flask.request.get_json()\n-            return str(json[""a""] + json[""b""])\n-\n-        rv = client.post(\n-            ""/add"",\n-            data=flask.json.dumps({""a"": 1, ""b"": 2}),\n-            content_type=""application/json"",\n-        )\n-        assert rv.data == b""3""\n-\n-    def test_template_escaping(self, app, req_ctx):\n-        render = flask.render_template_string\n-        rv = flask.json.htmlsafe_dumps(""</script>"")\n-        assert rv == \'""\\\\u003c/script\\\\u003e""\'\n-        rv = render(\'{{ ""</script>""|tojson }}\')\n-        assert rv == \'""\\\\u003c/script\\\\u003e""\'\n-        rv = render(\'{{ ""<\\0/script>""|tojson }}\')\n-        assert rv == \'""\\\\u003c\\\\u0000/script\\\\u003e""\'\n-        rv = render(\'{{ ""<!--<script>""|tojson }}\')\n-        assert rv == \'""\\\\u003c!--\\\\u003cscript\\\\u003e""\'\n-        rv = render(\'{{ ""&""|tojson }}\')\n-        assert rv == \'""\\\\u0026""\'\n-        rv = render(\'{{ ""\\\'""|tojson }}\')\n-        assert rv == \'""\\\\u0027""\'\n-        rv = render(\n-            ""<a ng-data=\'{{ data|tojson }}\'></a>"", data={""x"": [""foo"", ""bar"", ""baz\'""]}\n-        )\n-        assert rv == \'<a ng-data=\\\'{""x"": [""foo"", ""bar"", ""baz\\\\u0027""]}\\\'></a>\'\n-\n-    def test_json_customization(self, app, client):\n-        class X:  # noqa: B903, for Python2 compatibility\n-            def __init__(self, val):\n-                self.val = val\n-\n-        class MyEncoder(flask.json.JSONEncoder):\n-            def default(self, o):\n-                if isinstance(o, X):\n-                    return f""<{o.val}>""\n-                return flask.json.JSONEncoder.default(self, o)\n-\n-        class MyDecoder(flask.json.JSONDecoder):\n-            def __init__(self, *args, **kwargs):\n-                kwargs.setdefault(""object_hook"", self.object_hook)\n-                flask.json.JSONDecoder.__init__(self, *args, **kwargs)\n-\n-            def object_hook(self, obj):\n-                if len(obj) == 1 and ""_foo"" in obj:\n-                    return X(obj[""_foo""])\n-                return obj\n-\n-        app.json_encoder = MyEncoder\n-        app.json_decoder = MyDecoder\n-\n-        @app.route(""/"", methods=[""POST""])\n-        def index():\n-            return flask.json.dumps(flask.request.get_json()[""x""])\n-\n-        rv = client.post(\n-            ""/"",\n-            data=flask.json.dumps({""x"": {""_foo"": 42}}),\n-            content_type=""application/json"",\n-        )\n-        assert rv.data == b\'""<42>""\'\n-\n-    def test_blueprint_json_customization(self, app, client):\n-        class X:\n-            __slots__ = (""val"",)\n-\n-            def __init__(self, val):\n-                self.val = val\n-\n-        class MyEncoder(flask.json.JSONEncoder):\n-            def default(self, o):\n-                if isinstance(o, X):\n-                    return f""<{o.val}>""\n-\n-                return flask.json.JSONEncoder.default(self, o)\n-\n-        class MyDecoder(flask.json.JSONDecoder):\n-            def __init__(self, *args, **kwargs):\n-                kwargs.setdefault(""object_hook"", self.object_hook)\n-                flask.json.JSONDecoder.__init__(self, *args, **kwargs)\n-\n-            def object_hook(self, obj):\n-                if len(obj) == 1 and ""_foo"" in obj:\n-                    return X(obj[""_foo""])\n-\n-                return obj\n-\n-        bp = flask.Blueprint(""bp"", __name__)\n-        bp.json_encoder = MyEncoder\n-        bp.json_decoder = MyDecoder\n-\n-        @bp.route(""/bp"", methods=[""POST""])\n-        def index():\n-            return flask.json.dumps(flask.request.get_json()[""x""])\n-\n-        app.register_blueprint(bp)\n-\n-        rv = client.post(\n-            ""/bp"",\n-            data=flask.json.dumps({""x"": {""_foo"": 42}}),\n-            content_type=""application/json"",\n-        )\n-        assert rv.data == b\'""<42>""\'\n-\n-    @pytest.mark.skipif(\n-        not has_encoding(""euc-kr""), reason=""The euc-kr encoding is required.""\n-    )\n-    def test_modified_url_encoding(self, app, client):\n-        class ModifiedRequest(flask.Request):\n-            url_charset = ""euc-kr""\n-\n-        app.request_class = ModifiedRequest\n-        app.url_map.charset = ""euc-kr""\n-\n-        @app.route(""/"")\n-        def index():\n-            return flask.request.args[""foo""]\n-\n-        rv = client.get(""/?foo=정상처리"".encode(""euc-kr""))\n-        assert rv.status_code == 200\n-        assert rv.data == ""정상처리"".encode()\n-\n-    def test_json_key_sorting(self, app, client):\n-        app.debug = True\n-\n-        assert app.config[""JSON_SORT_KEYS""]\n-        d = dict.fromkeys(range(20), ""foo"")\n-\n-        @app.route(""/"")\n-        def index():\n-            return flask.jsonify(values=d)\n-\n-        rv = client.get(""/"")\n-        lines = [x.strip() for x in rv.data.strip().decode(""utf-8"").splitlines()]\n-        sorted_by_str = [\n-            ""{"",\n-            \'""values"": {\',\n-            \'""0"": ""foo"",\',\n-            \'""1"": ""foo"",\',\n-            \'""10"": ""foo"",\',\n-            \'""11"": ""foo"",\',\n-            \'""12"": ""foo"",\',\n-            \'""13"": ""foo"",\',\n-            \'""14"": ""foo"",\',\n-            \'""15"": ""foo"",\',\n-            \'""16"": ""foo"",\',\n-            \'""17"": ""foo"",\',\n-            \'""18"": ""foo"",\',\n-            \'""19"": ""foo"",\',\n-            \'""2"": ""foo"",\',\n-            \'""3"": ""foo"",\',\n-            \'""4"": ""foo"",\',\n-            \'""5"": ""foo"",\',\n-            \'""6"": ""foo"",\',\n-            \'""7"": ""foo"",\',\n-            \'""8"": ""foo"",\',\n-            \'""9"": ""foo""\',\n-            ""}"",\n-            ""}"",\n-        ]\n-        sorted_by_int = [\n-            ""{"",\n-            \'""values"": {\',\n-            \'""0"": ""foo"",\',\n-            \'""1"": ""foo"",\',\n-            \'""2"": ""foo"",\',\n-            \'""3"": ""foo"",\',\n-            \'""4"": ""foo"",\',\n-            \'""5"": ""foo"",\',\n-            \'""6"": ""foo"",\',\n-            \'""7"": ""foo"",\',\n-            \'""8"": ""foo"",\',\n-            \'""9"": ""foo"",\',\n-            \'""10"": ""foo"",\',\n-            \'""11"": ""foo"",\',\n-            \'""12"": ""foo"",\',\n-            \'""13"": ""foo"",\',\n-            \'""14"": ""foo"",\',\n-            \'""15"": ""foo"",\',\n-            \'""16"": ""foo"",\',\n-            \'""17"": ""foo"",\',\n-            \'""18"": ""foo"",\',\n-            \'""19"": ""foo""\',\n-            ""}"",\n-            ""}"",\n-        ]\n-\n-        try:\n-            assert lines == sorted_by_int\n-        except AssertionError:\n-            assert lines == sorted_by_str\n-\n-\n class PyBytesIO:\n     def __init__(self, *args, **kwargs):\n         self._io = io.BytesIO(*args, **kwargs)\n'",1.1666666666666667,1.0833333333333333
tests/test_json.py,tests/test_json.py,6def8a4a489ce1321a44bc1947c5c86620afdb3f,a0e2aca770c756d9f7de53339e2cf9067a52df11,'test json.dumps for object with __html__ method',"'@@ -6,6 +6,7 @@ import pytest\n from werkzeug.http import http_date\n \n import flask\n+from flask import json\n \n \n @pytest.mark.parametrize(""debug"", (True, False))\n@@ -400,3 +401,12 @@ def test_json_key_sorting(app, client):\n         assert lines == sorted_by_int\n     except AssertionError:\n         assert lines == sorted_by_str\n+\n+\n+def test_html_method():\n+    class ObjectWithHTML:\n+        def __html__(self):\n+            return ""<p>test</p>""\n+\n+    result = json.dumps(ObjectWithHTML())\n+    assert result == \'""<p>test</p>""\'\n'",1.2857142857142858,1.2727272727272727
requirements/dev.txt,requirements/dev.txt,65de6ccc0fc54790d84d1124f9f1236e0fc7b7d8,8ad9b41850a2d2d74d7702474d13e06e702256af,'Bump pre-commit from 2.7.1 to 2.8.2 (#3821)\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.7.1 to 2.8.2.\r\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\r\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.7.1...v2.8.2)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -28,9 +28,9 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.3.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.7.1         # via -r requirements/dev.in\n+pre-commit==2.8.2         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n-pygments==2.6.1           # via sphinx\n+pygments==2.6.1           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n pytest==6.1.1             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n@@ -40,7 +40,8 @@ requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinxcontrib-log-cabinet\n+sphinx-tabs==1.3.0        # via -r requirements/docs.in\n+sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,f7e33f240ee595349a46bf4eef95e1d9bdfee3da,65de6ccc0fc54790d84d1124f9f1236e0fc7b7d8,'Bump sphinx-tabs from 1.1.13 to 1.3.0 (#3822)\n\nBumps [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) from 1.1.13 to 1.3.0.\r\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\r\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v1.1.13...v1.3.0)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -8,23 +8,21 @@ alabaster==0.7.12         # via sphinx\n babel==2.8.0              # via sphinx\n certifi==2020.4.5.1       # via requests\n chardet==3.0.4            # via requests\n-colorama==0.4.3           # via sphinx\n docutils==0.16            # via sphinx\n idna==2.9                 # via requests\n imagesize==1.2.0          # via sphinx\n-importlib-metadata==1.7.0  # via pallets-sphinx-themes\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pygments==2.6.1           # via sphinx\n+pygments==2.6.1           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n pytz==2020.1              # via babel\n requests==2.23.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx-tabs==1.1.13       # via -r requirements/docs.in\n+sphinx-tabs==1.3.0        # via -r requirements/docs.in\n sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n@@ -34,7 +32,6 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n urllib3==1.25.9           # via requests\n-zipp==3.1.0               # via importlib-metadata\n \n # The following packages are considered to be unsafe in a requirements file:\n # setuptools\n'",0,0
requirements/dev.txt,requirements/dev.txt,aa0c9493c67a878b4e67dbe620e0d780cf961d56,f7e33f240ee595349a46bf4eef95e1d9bdfee3da,'Bump tox from 3.20.0 to 3.20.1 (#3819)\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.20.0 to 3.20.1.\r\n- [Release notes](https://github.com/tox-dev/tox/releases)\r\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\r\n- [Commits](https://github.com/tox-dev/tox/compare/3.20.0...3.20.1)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -50,7 +50,7 @@ sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n toml==0.10.1              # via pre-commit, pytest, tox\n-tox==3.20.0               # via -r requirements/dev.in\n+tox==3.20.1               # via -r requirements/dev.in\n urllib3==1.25.9           # via requests\n virtualenv==20.0.21       # via pre-commit, tox\n \n'",0,0
requirements/dev.txt,requirements/dev.txt,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,aa0c9493c67a878b4e67dbe620e0d780cf961d56,'Bump pytest from 6.1.1 to 6.1.2 (#3818)\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.1.1 to 6.1.2.\r\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\r\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\r\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.1.1...6.1.2)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -32,7 +32,7 @@ pre-commit==2.8.2         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.6.1           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n-pytest==6.1.1             # via -r requirements/tests.in\n+pytest==6.1.2             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,aa0c9493c67a878b4e67dbe620e0d780cf961d56,'Bump pytest from 6.1.1 to 6.1.2 (#3818)\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.1.1 to 6.1.2.\r\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\r\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\r\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.1.1...6.1.2)\r\n\r\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\r\n\r\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>',"'@@ -12,7 +12,7 @@ packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==6.1.1             # via -r requirements/tests.in\n+pytest==6.1.2             # via -r requirements/tests.in\n python-dotenv==0.14.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n toml==0.10.1              # via pytest\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -1,29 +1,29 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.4.3\n+    rev: v2.7.3\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.3.0\n+    rev: v2.3.6\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/python/black\n-    rev: 19.10b0\n+    rev: 20.8b1\n     hooks:\n       - id: black\n   - repo: https://gitlab.com/pycqa/flake8\n-    rev: 3.8.2\n+    rev: 3.8.4\n     hooks:\n       - id: flake8\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v3.1.0\n+    rev: v3.3.0\n     hooks:\n       - id: check-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
requirements/dev.txt,requirements/dev.txt,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -6,37 +6,37 @@\n #\n alabaster==0.7.12         # via sphinx\n appdirs==1.4.4            # via virtualenv\n-attrs==19.3.0             # via pytest\n+attrs==20.2.0             # via pytest\n babel==2.8.0              # via sphinx\n blinker==1.4              # via -r requirements/tests.in\n-certifi==2020.4.5.1       # via requests\n-cfgv==3.1.0               # via pre-commit\n+certifi==2020.6.20        # via requests\n+cfgv==3.2.0               # via pre-commit\n chardet==3.0.4            # via requests\n click==7.1.2              # via pip-tools\n-distlib==0.3.0            # via virtualenv\n+distlib==0.3.1            # via virtualenv\n docutils==0.16            # via sphinx\n filelock==3.0.12          # via tox, virtualenv\n greenlet==0.4.17          # via -r requirements/tests.in\n-identify==1.4.16          # via pre-commit\n-idna==2.9                 # via requests\n+identify==1.5.6           # via pre-commit\n+idna==2.10                # via requests\n imagesize==1.2.0          # via sphinx\n-iniconfig==1.0.0          # via pytest\n+iniconfig==1.1.1          # via pytest\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n-nodeenv==1.3.5            # via pre-commit\n+nodeenv==1.5.0            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.3.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.8.2         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n-pygments==2.6.1           # via sphinx, sphinx-tabs\n+pygments==2.7.2           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n pytest==6.1.2             # via -r requirements/tests.in\n-python-dotenv==0.14.0     # via -r requirements/tests.in\n+python-dotenv==0.15.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n-requests==2.23.0          # via sphinx\n+requests==2.24.0          # via sphinx\n six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n@@ -49,10 +49,10 @@ sphinxcontrib-jsmath==1.0.1  # via sphinx\n sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n-toml==0.10.1              # via pre-commit, pytest, tox\n+toml==0.10.2              # via pre-commit, pytest, tox\n tox==3.20.1               # via -r requirements/dev.in\n-urllib3==1.25.9           # via requests\n-virtualenv==20.0.21       # via pre-commit, tox\n+urllib3==1.25.11          # via requests\n+virtualenv==20.1.0        # via pre-commit, tox\n \n # The following packages are considered to be unsafe in a requirements file:\n # pip\n'",0,0
requirements/docs.txt,requirements/docs.txt,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -6,19 +6,19 @@\n #\n alabaster==0.7.12         # via sphinx\n babel==2.8.0              # via sphinx\n-certifi==2020.4.5.1       # via requests\n+certifi==2020.6.20        # via requests\n chardet==3.0.4            # via requests\n docutils==0.16            # via sphinx\n-idna==2.9                 # via requests\n+idna==2.10                # via requests\n imagesize==1.2.0          # via sphinx\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pygments==2.6.1           # via sphinx, sphinx-tabs\n+pygments==2.7.2           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n pytz==2020.1              # via babel\n-requests==2.23.0          # via sphinx\n+requests==2.24.0          # via sphinx\n six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n@@ -31,7 +31,7 @@ sphinxcontrib-jsmath==1.0.1  # via sphinx\n sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3  # via sphinx\n sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n-urllib3==1.25.9           # via requests\n+urllib3==1.25.11          # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n # setuptools\n'",0,0
requirements/tests.txt,requirements/tests.txt,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -4,15 +4,15 @@\n #\n #    pip-compile requirements/tests.in\n #\n-attrs==19.3.0             # via pytest\n+attrs==20.2.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n greenlet==0.4.17          # via -r requirements/tests.in\n-iniconfig==1.0.0          # via pytest\n+iniconfig==1.1.1          # via pytest\n packaging==20.4           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n pytest==6.1.2             # via -r requirements/tests.in\n-python-dotenv==0.14.0     # via -r requirements/tests.in\n+python-dotenv==0.15.0     # via -r requirements/tests.in\n six==1.15.0               # via packaging\n-toml==0.10.1              # via pytest\n+toml==0.10.2              # via pytest\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -451,16 +451,14 @@ class Blueprint(Scaffold):\n         return decorator\n \n     def app_url_value_preprocessor(self, f):\n-        """"""Same as :meth:`url_value_preprocessor` but application wide.\n-        """"""\n+        """"""Same as :meth:`url_value_preprocessor` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_value_preprocessors.setdefault(None, []).append(f)\n         )\n         return f\n \n     def app_url_defaults(self, f):\n-        """"""Same as :meth:`url_defaults` but application wide.\n-        """"""\n+        """"""Same as :meth:`url_defaults` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n'",1.7878787878787878,1.7878787878787878
src/flask/scaffold.py,src/flask/scaffold.py,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -32,8 +32,7 @@ def setupmethod(f):\n \n \n class Scaffold(_PackageBoundObject):\n-    """"""A common base for class Flask and class Blueprint.\n-    """"""\n+    """"""A common base for class Flask and class Blueprint.""""""\n \n     #: Skeleton local JSON decoder class to use.\n     #: Set to ``None`` to use the app\'s :class:`~flask.app.Flask.json_encoder`.\n'",1.2380952380952381,1.2380952380952381
tests/test_basic.py,tests/test_basic.py,373f0dd82e68ab7cac7a77344e715dbe68faebd3,3b57c19e3bd6acf729ae40ece710b20f7f5997e7,'update requirements (#3823)',"'@@ -20,7 +20,8 @@ import flask\n \n \n require_cpython_gc = pytest.mark.skipif(\n-    python_implementation() != ""CPython"", reason=""Requires CPython GC behavior"",\n+    python_implementation() != ""CPython"",\n+    reason=""Requires CPython GC behavior"",\n )\n \n \n'",1.0689655172413792,1.0689655172413792
.github/workflows/tests.yaml,.github/workflows/tests.yaml,7a444c5dab97d640282ec8fc4838bef2c128273f,373f0dd82e68ab7cac7a77344e715dbe68faebd3,"""update tests for new werkzeug client (#3827)\n\nFlask's client.open mirrors Werkzeug's for processing an existing\r\nenviron.\r\n\r\nAlways test with latest code for other Pallets projects. This will\r\nbe changed back once the new versions are released.""","""@@ -23,7 +23,6 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n-          - {name: Version Range, python: '3.9', os: ubuntu-latest, tox: 'devel'}\n           - {name: Docs, python: '3.9', os: ubuntu-latest, tox: docs}\n     steps:\n       - uses: actions/checkout@v2\n""",0,0
src/flask/testing.py,src/flask/testing.py,7a444c5dab97d640282ec8fc4838bef2c128273f,373f0dd82e68ab7cac7a77344e715dbe68faebd3,"""update tests for new werkzeug client (#3827)\n\nFlask's client.open mirrors Werkzeug's for processing an existing\r\nenviron.\r\n\r\nAlways test with latest code for other Pallets projects. This will\r\nbe changed back once the new versions are released.""","'@@ -1,9 +1,11 @@\n from contextlib import contextmanager\n+from copy import copy\n \n import werkzeug.test\n from click.testing import CliRunner\n from werkzeug.test import Client\n from werkzeug.urls import url_parse\n+from werkzeug.wrappers import BaseRequest\n \n from . import _request_ctx_stack\n from .cli import ScriptInfo\n@@ -159,39 +161,45 @@ class FlaskClient(Client):\n             headers = resp.get_wsgi_headers(c.request.environ)\n             self.cookie_jar.extract_wsgi(c.request.environ, headers)\n \n-    def open(self, *args, **kwargs):\n-        as_tuple = kwargs.pop(""as_tuple"", False)\n-        buffered = kwargs.pop(""buffered"", False)\n-        follow_redirects = kwargs.pop(""follow_redirects"", False)\n-\n-        if (\n-            not kwargs\n-            and len(args) == 1\n-            and isinstance(args[0], (werkzeug.test.EnvironBuilder, dict))\n-        ):\n-            environ = self.environ_base.copy()\n-\n-            if isinstance(args[0], werkzeug.test.EnvironBuilder):\n-                environ.update(args[0].get_environ())\n-            else:\n-                environ.update(args[0])\n-\n-            environ[""flask._preserve_context""] = self.preserve_context\n-        else:\n-            kwargs.setdefault(""environ_overrides"", {})[\n-                ""flask._preserve_context""\n-            ] = self.preserve_context\n-            kwargs.setdefault(""environ_base"", self.environ_base)\n+    def open(\n+        self, *args, as_tuple=False, buffered=False, follow_redirects=False, **kwargs\n+    ):\n+        # Same logic as super.open, but apply environ_base and preserve_context.\n+        request = None\n+\n+        def copy_environ(other):\n+            return {\n+                **self.environ_base,\n+                **other,\n+                ""flask._preserve_context"": self.preserve_context,\n+            }\n+\n+        if not kwargs and len(args) == 1:\n+            arg = args[0]\n+\n+            if isinstance(arg, werkzeug.test.EnvironBuilder):\n+                builder = copy(arg)\n+                builder.environ_base = copy_environ(builder.environ_base or {})\n+                request = builder.get_request()\n+            elif isinstance(arg, dict):\n+                request = EnvironBuilder.from_environ(\n+                    arg, app=self.application, environ_base=copy_environ({})\n+                ).get_request()\n+            elif isinstance(arg, BaseRequest):\n+                request = copy(arg)\n+                request.environ = copy_environ(request.environ)\n+\n+        if request is None:\n+            kwargs[""environ_base""] = copy_environ(kwargs.get(""environ_base"", {}))\n             builder = EnvironBuilder(self.application, *args, **kwargs)\n \n             try:\n-                environ = builder.get_environ()\n+                request = builder.get_request()\n             finally:\n                 builder.close()\n \n-        return Client.open(\n-            self,\n-            environ,\n+        return super().open(\n+            request,\n             as_tuple=as_tuple,\n             buffered=buffered,\n             follow_redirects=follow_redirects,\n'",3.7777777777777777,3.8
tests/test_json.py,tests/test_json.py,7a444c5dab97d640282ec8fc4838bef2c128273f,373f0dd82e68ab7cac7a77344e715dbe68faebd3,"""update tests for new werkzeug client (#3827)\n\nFlask's client.open mirrors Werkzeug's for processing an existing\r\nenviron.\r\n\r\nAlways test with latest code for other Pallets projects. This will\r\nbe changed back once the new versions are released.""","'@@ -327,9 +327,9 @@ def test_modified_url_encoding(app, client):\n     def index():\n         return flask.request.args[""foo""]\n \n-    rv = client.get(""/?foo=정상처리"".encode(""euc-kr""))\n+    rv = client.get(""/"", query_string={""foo"": ""정상처리""}, charset=""euc-kr"")\n     assert rv.status_code == 200\n-    assert rv.data == ""정상처리"".encode()\n+    assert rv.get_data(as_text=True) == ""정상처리""\n \n \n def test_json_key_sorting(app, client):\n'",1.2727272727272727,1.2727272727272727
tox.ini,tox.ini,7a444c5dab97d640282ec8fc4838bef2c128273f,373f0dd82e68ab7cac7a77344e715dbe68faebd3,"""update tests for new werkzeug client (#3827)\n\nFlask's client.open mirrors Werkzeug's for processing an existing\r\nenviron.\r\n\r\nAlways test with latest code for other Pallets projects. This will\r\nbe changed back once the new versions are released.""","'@@ -1,7 +1,6 @@\n [tox]\n envlist =\n     py{39,38,37,36,py3}\n-    py38-devel\n     style\n     docs\n skip_missing_interpreters = true\n@@ -10,11 +9,11 @@ skip_missing_interpreters = true\n deps =\n     -r requirements/tests.txt\n \n-    devel: https://github.com/pallets/werkzeug/archive/master.tar.gz\n-    devel: https://github.com/pallets/markupsafe/archive/master.tar.gz\n-    devel: https://github.com/pallets/jinja/archive/master.tar.gz\n-    devel: https://github.com/pallets/itsdangerous/archive/master.tar.gz\n-    devel: https://github.com/pallets/click/archive/master.tar.gz\n+    https://github.com/pallets/werkzeug/archive/master.tar.gz\n+    https://github.com/pallets/markupsafe/archive/master.tar.gz\n+    https://github.com/pallets/jinja/archive/master.tar.gz\n+    https://github.com/pallets/itsdangerous/archive/master.tar.gz\n+    https://github.com/pallets/click/archive/master.tar.gz\n \n commands =\n     pip install -q -e examples/tutorial[test]\n'",0,0
CHANGES.rst,CHANGES.rst,22987b68173e9bf56cc450cb7aeb93f5480a2660,7a444c5dab97d640282ec8fc4838bef2c128273f,'include samesite and secure when removing session cookie (#3726)',"'@@ -42,6 +42,8 @@ Unreleased\n     attributes just like ``Flask``, rather than opaque lambda functions.\n     This is intended to improve consistency and maintainability.\n     :issue:`3215`\n+-   Include ``samesite`` and ``secure`` options when removing the\n+    session cookie. :pr:`3726`\n \n \n Version 1.1.x\n'",0,0
src/flask/sessions.py,src/flask/sessions.py,22987b68173e9bf56cc450cb7aeb93f5480a2660,7a444c5dab97d640282ec8fc4838bef2c128273f,'include samesite and secure when removing session cookie (#3726)',"'@@ -351,12 +351,16 @@ class SecureCookieSessionInterface(SessionInterface):\n         name = self.get_cookie_name(app)\n         domain = self.get_cookie_domain(app)\n         path = self.get_cookie_path(app)\n+        secure = self.get_cookie_secure(app)\n+        samesite = self.get_cookie_samesite(app)\n \n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n             if session.modified:\n-                response.delete_cookie(name, domain=domain, path=path)\n+                response.delete_cookie(\n+                    name, domain=domain, path=path, secure=secure, samesite=samesite\n+                )\n \n             return\n \n@@ -368,8 +372,6 @@ class SecureCookieSessionInterface(SessionInterface):\n             return\n \n         httponly = self.get_cookie_httponly(app)\n-        secure = self.get_cookie_secure(app)\n-        samesite = self.get_cookie_samesite(app)\n         expires = self.get_expiration_time(app, session)\n         val = self.get_signing_serializer(app).dumps(dict(session))\n         response.set_cookie(\n'",1.826086956521739,1.826086956521739
tests/test_basic.py,tests/test_basic.py,22987b68173e9bf56cc450cb7aeb93f5480a2660,7a444c5dab97d640282ec8fc4838bef2c128273f,'include samesite and secure when removing session cookie (#3726)',"'@@ -322,6 +322,19 @@ def test_session_using_session_settings(app, client):\n     assert ""httponly"" not in cookie\n     assert ""samesite"" in cookie\n \n+    @app.route(""/clear"")\n+    def clear():\n+        flask.session.pop(""testing"", None)\n+        return ""Goodbye World""\n+\n+    rv = client.get(""/clear"", ""http://www.example.com:8080/test/"")\n+    cookie = rv.headers[""set-cookie""].lower()\n+    assert ""session=;"" in cookie\n+    assert ""domain=.example.com"" in cookie\n+    assert ""path=/"" in cookie\n+    assert ""secure"" in cookie\n+    assert ""samesite"" in cookie\n+\n \n def test_session_using_samesite_attribute(app, client):\n     @app.route(""/"")\n'",1.0689655172413792,1.0687022900763359
docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,577eec198adfb0a69f059e87c53d6ace55c55a77,9d824db41c930126db7bc6af5c54eec670cf086c,'updated doc for mod_wsgi (#3751)\n\nCo-authored-by: Sarthak <sarthak@MacBook.local>',"'@@ -27,7 +27,7 @@ follows:\n \n .. sourcecode:: text\n \n-    $ apt-get install libapache2-mod-wsgi\n+    $ apt-get install libapache2-mod-wsgi-py3\n \n If you are using a yum based distribution (Fedora, OpenSUSE, etc..) you\n can install it as follows:\n@@ -41,7 +41,7 @@ using pkg_add:\n \n .. sourcecode:: text\n \n-    $ pkg install ap22-mod_wsgi2\n+    $ pkg install ap24-py37-mod_wsgi\n \n If you are using pkgsrc you can install `mod_wsgi` by compiling the\n `www/ap2-wsgi` package.\n'",0,0
CHANGES.rst,CHANGES.rst,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -45,6 +45,20 @@ Unreleased\n -   Include ``samesite`` and ``secure`` options when removing the\n     session cookie. :pr:`3726`\n -   Support passing a ``pathlib.Path`` to ``static_folder``. :pr:`3579`\n+-   ``send_file`` and ``send_from_directory`` are wrappers around the\n+    implementations in ``werkzeug.utils``. :pr:`3828`\n+-   Some ``send_file`` parameters have been renamed, the old names are\n+    deprecated. ``attachment_filename`` is renamed to ``download_name``.\n+    ``cache_timeout`` is renamed to ``max_age``. :pr:`3828`\n+-   ``send_file`` passes ``download_name`` even if\n+    ``as_attachment=False`` by using ``Content-Disposition: inline``.\n+    :pr:`3828`\n+-   ``send_file`` sets ``conditional=True`` and ``max_age=None`` by\n+    default. ``Cache-Control`` is set to ``no-cache`` if ``max_age`` is\n+    not set, otherwise ``public``. This tells browsers to validate\n+    conditional requests instead of using a timed cache. :pr:`3828`\n+-   ``helpers.safe_join`` is deprecated. Use\n+    ``werkzeug.utils.safe_join`` instead. :pr:`3828`\n \n \n Version 1.1.2\n'",0,0
docs/config.rst,docs/config.rst,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -265,11 +265,16 @@ The following configuration values are used internally by Flask:\n .. py:data:: SEND_FILE_MAX_AGE_DEFAULT\n \n     When serving files, set the cache control max age to this number of\n-    seconds.  Can either be a :class:`datetime.timedelta` or an ``int``.\n+    seconds. Can be a :class:`datetime.timedelta` or an ``int``.\n     Override this value on a per-file basis using\n-    :meth:`~flask.Flask.get_send_file_max_age` on the application or blueprint.\n+    :meth:`~flask.Flask.get_send_file_max_age` on the application or\n+    blueprint.\n \n-    Default: ``timedelta(hours=12)`` (``43200`` seconds)\n+    If ``None``, ``send_file`` tells the browser to use conditional\n+    requests will be used instead of a timed cache, which is usually\n+    preferable.\n+\n+    Default: ``None``\n \n .. py:data:: SERVER_NAME\n \n'",1.0,1.0
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -63,8 +63,7 @@ the file and redirects the user to the URL for the uploaded file::\n             if file and allowed_file(file.filename):\n                 filename = secure_filename(file.filename)\n                 file.save(os.path.join(app.config[\'UPLOAD_FOLDER\'], filename))\n-                return redirect(url_for(\'uploaded_file\',\n-                                        filename=filename))\n+                return redirect(url_for(\'download_file\', name=filename))\n         return \'\'\'\n         <!doctype html>\n         <title>Upload new File</title>\n@@ -102,31 +101,28 @@ before storing it directly on the filesystem.\n    >>> secure_filename(\'../../../../home/username/.bashrc\')\n    \'home_username_.bashrc\'\n \n-Now one last thing is missing: the serving of the uploaded files. In the\n-:func:`upload_file()` we redirect the user to\n-``url_for(\'uploaded_file\', filename=filename)``, that is, ``/uploads/filename``.\n-So we write the :func:`uploaded_file` function to return the file of that name. As\n-of Flask 0.5 we can use a function that does that for us::\n+We want to be able to serve the uploaded files so they can be downloaded\n+by users. We\'ll define a ``download_file`` view to serve files in the\n+upload folder by name. ``url_for(""download_file"", name=name)`` generates\n+download URLs.\n+\n+.. code-block:: python\n \n     from flask import send_from_directory\n \n-    @app.route(\'/uploads/<filename>\')\n-    def uploaded_file(filename):\n-        return send_from_directory(app.config[\'UPLOAD_FOLDER\'],\n-                                   filename)\n+    @app.route(\'/uploads/<name>\')\n+    def download_file(name):\n+        return send_from_directory(app.config[""UPLOAD_FOLDER""], name)\n \n-Alternatively you can register `uploaded_file` as `build_only` rule and\n-use the :class:`~werkzeug.wsgi.SharedDataMiddleware`.  This also works with\n-older versions of Flask::\n+If you\'re using middleware or the HTTP server to serve files, you can\n+register the ``download_file`` endpoint as ``build_only`` so ``url_for``\n+will work without a view function.\n \n-    from werkzeug.middleware.shared_data import SharedDataMiddleware\n-    app.add_url_rule(\'/uploads/<filename>\', \'uploaded_file\',\n-                     build_only=True)\n-    app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {\n-        \'/uploads\':  app.config[\'UPLOAD_FOLDER\']\n-    })\n+.. code-block:: python\n \n-If you now run the application everything should work as expected.\n+    app.add_url_rule(\n+        ""/uploads/<name>"", endpoint=""download_file"", build_only=True\n+    )\n \n \n Improving Uploads\n'",0,1.0
src/flask/app.py,src/flask/app.py,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -55,9 +55,10 @@ from .wrappers import Response\n \n \n def _make_timedelta(value):\n-    if not isinstance(value, timedelta):\n-        return timedelta(seconds=value)\n-    return value\n+    if value is None or isinstance(value, timedelta):\n+        return value\n+\n+    return timedelta(seconds=value)\n \n \n class Flask(Scaffold):\n@@ -234,13 +235,16 @@ class Flask(Scaffold):\n         ""PERMANENT_SESSION_LIFETIME"", get_converter=_make_timedelta\n     )\n \n-    #: A :class:`~datetime.timedelta` which is used as default cache_timeout\n-    #: for the :func:`send_file` functions. The default is 12 hours.\n+    #: A :class:`~datetime.timedelta` or number of seconds which is used\n+    #: as the default ``max_age`` for :func:`send_file`. The default is\n+    #: ``None``, which tells the browser to use conditional requests\n+    #: instead of a timed cache.\n     #:\n-    #: This attribute can also be configured from the config with the\n-    #: ``SEND_FILE_MAX_AGE_DEFAULT`` configuration key. This configuration\n-    #: variable can also be set with an integer value used as seconds.\n-    #: Defaults to ``timedelta(hours=12)``\n+    #: Configured with the :data:`SEND_FILE_MAX_AGE_DEFAULT`\n+    #: configuration key.\n+    #:\n+    #: .. versionchanged:: 2.0\n+    #:     Defaults to ``None`` instead of 12 hours.\n     send_file_max_age_default = ConfigAttribute(\n         ""SEND_FILE_MAX_AGE_DEFAULT"", get_converter=_make_timedelta\n     )\n@@ -297,7 +301,7 @@ class Flask(Scaffold):\n             ""SESSION_COOKIE_SAMESITE"": None,\n             ""SESSION_REFRESH_EACH_REQUEST"": True,\n             ""MAX_CONTENT_LENGTH"": None,\n-            ""SEND_FILE_MAX_AGE_DEFAULT"": timedelta(hours=12),\n+            ""SEND_FILE_MAX_AGE_DEFAULT"": None,\n             ""TRAP_BAD_REQUEST_ERRORS"": None,\n             ""TRAP_HTTP_EXCEPTIONS"": False,\n             ""EXPLAIN_TEMPLATE_LOADING"": False,\n'",3.015151515151515,3.0303030303030303
src/flask/helpers.py,src/flask/helpers.py,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -1,24 +1,16 @@\n-import io\n-import mimetypes\n import os\n import pkgutil\n-import posixpath\n import socket\n import sys\n-import unicodedata\n+import warnings\n from functools import update_wrapper\n from threading import RLock\n-from time import time\n-from zlib import adler32\n \n+import werkzeug.utils\n from jinja2 import FileSystemLoader\n-from werkzeug.datastructures import Headers\n-from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import NotFound\n-from werkzeug.exceptions import RequestedRangeNotSatisfiable\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n-from werkzeug.wsgi import wrap_file\n \n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n@@ -444,49 +436,116 @@ def get_flashed_messages(with_categories=False, category_filter=()):\n     return flashes\n \n \n+def _prepare_send_file_kwargs(\n+    download_name=None,\n+    attachment_filename=None,\n+    max_age=None,\n+    cache_timeout=None,\n+    **kwargs,\n+):\n+    if attachment_filename is not None:\n+        warnings.warn(\n+            ""The \'attachment_filename\' parameter has been renamed to \'download_name\'.""\n+            "" The old name will be removed in Flask 2.1."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+        download_name = attachment_filename\n+\n+    if cache_timeout is not None:\n+        warnings.warn(\n+            ""The \'cache_timeout\' parameter has been renamed to \'max_age\'. The old name""\n+            "" will be removed in Flask 2.1."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+        max_age = cache_timeout\n+\n+    if max_age is None:\n+        max_age = current_app.get_send_file_max_age\n+\n+    kwargs.update(\n+        environ=request.environ,\n+        download_name=download_name,\n+        max_age=max_age,\n+        use_x_sendfile=current_app.use_x_sendfile,\n+        response_class=current_app.response_class,\n+        _root_path=current_app.root_path,\n+    )\n+    return kwargs\n+\n+\n def send_file(\n-    filename_or_fp,\n+    path_or_file,\n     mimetype=None,\n     as_attachment=False,\n+    download_name=None,\n     attachment_filename=None,\n+    conditional=True,\n     add_etags=True,\n-    cache_timeout=None,\n-    conditional=False,\n     last_modified=None,\n+    max_age=None,\n+    cache_timeout=None,\n ):\n-    """"""Sends the contents of a file to the client.  This will use the\n-    most efficient method available and configured.  By default it will\n-    try to use the WSGI server\'s file_wrapper support.  Alternatively\n-    you can set the application\'s :attr:`~Flask.use_x_sendfile` attribute\n-    to ``True`` to directly emit an ``X-Sendfile`` header.  This however\n-    requires support of the underlying webserver for ``X-Sendfile``.\n-\n-    By default it will try to guess the mimetype for you, but you can\n-    also explicitly provide one.  For extra security you probably want\n-    to send certain files as attachment (HTML for instance).  The mimetype\n-    guessing requires a `filename` or an `attachment_filename` to be\n-    provided.\n-\n-    When passing a file-like object instead of a filename, only binary\n-    mode is supported (``open(filename, ""rb"")``, :class:`~io.BytesIO`,\n-    etc.). Text mode files and :class:`~io.StringIO` will raise a\n-    :exc:`ValueError`.\n-\n-    ETags will also be attached automatically if a `filename` is provided. You\n-    can turn this off by setting `add_etags=False`.\n-\n-    If `conditional=True` and `filename` is provided, this method will try to\n-    upgrade the response stream to support range requests.  This will allow\n-    the request to be answered with partial content response.\n-\n-    Please never pass filenames to this function from user sources;\n-    you should use :func:`send_from_directory` instead.\n+    """"""Send the contents of a file to the client.\n+\n+    The first argument can be a file path or a file-like object. Paths\n+    are preferred in most cases because Werkzeug can manage the file and\n+    get extra information from the path. Passing a file-like object\n+    requires that the file is opened in binary mode, and is mostly\n+    useful when building a file in memory with :class:`io.BytesIO`.\n+\n+    Never pass file paths provided by a user. The path is assumed to be\n+    trusted, so a user could craft a path to access a file you didn\'t\n+    intend. Use :func:`send_from_directory` to safely serve\n+    user-requested paths from within a directory.\n+\n+    If the WSGI server sets a ``file_wrapper`` in ``environ``, it is\n+    used, otherwise Werkzeug\'s built-in wrapper is used. Alternatively,\n+    if the HTTP server supports ``X-Sendfile``, configuring Flask with\n+    ``USE_X_SENDFILE = True`` will tell the server to send the given\n+    path, which is much more efficient than reading it in Python.\n+\n+    :param path_or_file: The path to the file to send, relative to the\n+        current working directory if a relative path is given.\n+        Alternatively, a file-like object opened in binary mode. Make\n+        sure the file pointer is seeked to the start of the data.\n+    :param mimetype: The MIME type to send for the file. If not\n+        provided, it will try to detect it from the file name.\n+    :param as_attachment: Indicate to a browser that it should offer to\n+        save the file instead of displaying it.\n+    :param download_name: The default name browsers will use when saving\n+        the file. Defaults to the passed file name.\n+    :param conditional: Enable conditional and range responses based on\n+        request headers. Requires passing a file path and ``environ``.\n+    :param add_etags: Calculate an ETag for the file. Requires passing a\n+        file path.\n+    :param last_modified: The last modified time to send for the file,\n+        in seconds. If not provided, it will try to detect it from the\n+        file path.\n+    :param max_age: How long the client should cache the file, in\n+        seconds. If set, ``Cache-Control`` will be ``public``, otherwise\n+        it will be ``no-cache`` to prefer conditional caching.\n+\n+    .. versionchanged:: 2.0\n+        ``download_name`` replaces the ``attachment_filename``\n+        parameter. If ``as_attachment=False``, it is passed with\n+        ``Content-Disposition: inline`` instead.\n+\n+    .. versionchanged:: 2.0\n+        ``max_age`` replaces the ``cache_timeout`` parameter.\n+        ``conditional`` is enabled and ``max_age`` is not set by\n+        default.\n \n     .. versionchanged:: 2.0\n         Passing a file-like object that inherits from\n         :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather\n         than sending an empty file.\n \n+    .. versionadded:: 2.0\n+        Moved the implementation to Werkzeug. This is now a wrapper to\n+        pass some Flask-specific arguments.\n+\n     .. versionchanged:: 1.1\n         ``filename`` may be a :class:`~os.PathLike` object.\n \n@@ -498,260 +557,106 @@ def send_file(\n         compatibility with WSGI servers.\n \n     .. versionchanged:: 1.0\n-        UTF-8 filenames, as specified in `RFC 2231`_, are supported.\n-\n-    .. _RFC 2231: https://tools.ietf.org/html/rfc2231#section-4\n+        UTF-8 filenames as specified in :rfc:`2231` are supported.\n \n     .. versionchanged:: 0.12\n-       The filename is no longer automatically inferred from file\n-       objects. If you want to use automatic MIME and etag support, pass\n-       a filename via ``filename_or_fp`` or ``attachment_filename``.\n+        The filename is no longer automatically inferred from file\n+        objects. If you want to use automatic MIME and etag support,\n+        pass a filename via ``filename_or_fp`` or\n+        ``attachment_filename``.\n \n     .. versionchanged:: 0.12\n-       ``attachment_filename`` is preferred over ``filename`` for MIME\n-       detection.\n+        ``attachment_filename`` is preferred over ``filename`` for MIME\n+        detection.\n \n     .. versionchanged:: 0.9\n-       ``cache_timeout`` defaults to\n-       :meth:`Flask.get_send_file_max_age`.\n+        ``cache_timeout`` defaults to\n+        :meth:`Flask.get_send_file_max_age`.\n \n     .. versionchanged:: 0.7\n-       MIME guessing and etag support for file-like objects was\n-       deprecated because it was unreliable. Pass a filename if you are\n-       able to, otherwise attach an etag yourself. This functionality\n-       will be removed in Flask 1.0.\n+        MIME guessing and etag support for file-like objects was\n+        deprecated because it was unreliable. Pass a filename if you are\n+        able to, otherwise attach an etag yourself.\n \n-    .. versionadded:: 0.5\n-       The ``add_etags``, ``cache_timeout`` and ``conditional``\n-       parameters were added. The default behavior is to add etags.\n+    .. versionchanged:: 0.5\n+        The ``add_etags``, ``cache_timeout`` and ``conditional``\n+        parameters were added. The default behavior is to add etags.\n \n     .. versionadded:: 0.2\n-\n-    :param filename_or_fp: The filename of the file to send, relative to\n-        :attr:`~Flask.root_path` if a relative path is specified.\n-        Alternatively, a file-like object opened in binary mode. Make\n-        sure the file pointer is seeked to the start of the data.\n-        ``X-Sendfile`` will only be used with filenames.\n-    :param mimetype: the mimetype of the file if provided. If a file path is\n-                     given, auto detection happens as fallback, otherwise an\n-                     error will be raised.\n-    :param as_attachment: set to ``True`` if you want to send this file with\n-                          a ``Content-Disposition: attachment`` header.\n-    :param attachment_filename: the filename for the attachment if it\n-                                differs from the file\'s filename.\n-    :param add_etags: set to ``False`` to disable attaching of etags.\n-    :param conditional: set to ``True`` to enable conditional responses.\n-\n-    :param cache_timeout: the timeout in seconds for the headers. When ``None``\n-                          (default), this value is set by\n-                          :meth:`~Flask.get_send_file_max_age` of\n-                          :data:`~flask.current_app`.\n-    :param last_modified: set the ``Last-Modified`` header to this value,\n-        a :class:`~datetime.datetime` or timestamp.\n-        If a file was passed, this overrides its mtime.\n     """"""\n-    mtime = None\n-    fsize = None\n-\n-    if hasattr(filename_or_fp, ""__fspath__""):\n-        filename_or_fp = os.fspath(filename_or_fp)\n-\n-    if isinstance(filename_or_fp, str):\n-        filename = filename_or_fp\n-        if not os.path.isabs(filename):\n-            filename = os.path.join(current_app.root_path, filename)\n-        file = None\n-        if attachment_filename is None:\n-            attachment_filename = os.path.basename(filename)\n-    else:\n-        file = filename_or_fp\n-        filename = None\n-\n-    if mimetype is None:\n-        if attachment_filename is not None:\n-            mimetype = (\n-                mimetypes.guess_type(attachment_filename)[0]\n-                or ""application/octet-stream""\n-            )\n-\n-        if mimetype is None:\n-            raise ValueError(\n-                ""Unable to infer MIME-type because no filename is available. ""\n-                ""Please set either `attachment_filename`, pass a filepath to ""\n-                ""`filename_or_fp` or set your own MIME-type via `mimetype`.""\n-            )\n-\n-    headers = Headers()\n-    if as_attachment:\n-        if attachment_filename is None:\n-            raise TypeError(""filename unavailable, required for sending as attachment"")\n-\n-        if not isinstance(attachment_filename, str):\n-            attachment_filename = attachment_filename.decode(""utf-8"")\n-\n-        try:\n-            attachment_filename = attachment_filename.encode(""ascii"")\n-        except UnicodeEncodeError:\n-            quoted = url_quote(attachment_filename, safe="""")\n-            filenames = {\n-                ""filename"": unicodedata.normalize(""NFKD"", attachment_filename).encode(\n-                    ""ascii"", ""ignore""\n-                ),\n-                ""filename*"": f""UTF-8\'\'{quoted}"",\n-            }\n-        else:\n-            filenames = {""filename"": attachment_filename}\n-\n-        headers.add(""Content-Disposition"", ""attachment"", **filenames)\n-\n-    if current_app.use_x_sendfile and filename:\n-        if file is not None:\n-            file.close()\n-\n-        headers[""X-Sendfile""] = filename\n-        fsize = os.path.getsize(filename)\n-        data = None\n-    else:\n-        if file is None:\n-            file = open(filename, ""rb"")\n-            mtime = os.path.getmtime(filename)\n-            fsize = os.path.getsize(filename)\n-        elif isinstance(file, io.BytesIO):\n-            fsize = file.getbuffer().nbytes\n-        elif isinstance(file, io.TextIOBase):\n-            raise ValueError(""Files must be opened in binary mode or use BytesIO."")\n-\n-        data = wrap_file(request.environ, file)\n-\n-    if fsize is not None:\n-        headers[""Content-Length""] = fsize\n-\n-    rv = current_app.response_class(\n-        data, mimetype=mimetype, headers=headers, direct_passthrough=True\n+    return werkzeug.utils.send_file(\n+        **_prepare_send_file_kwargs(\n+            path_or_file=path_or_file,\n+            environ=request.environ,\n+            mimetype=mimetype,\n+            as_attachment=as_attachment,\n+            download_name=download_name,\n+            attachment_filename=attachment_filename,\n+            conditional=conditional,\n+            add_etags=add_etags,\n+            last_modified=last_modified,\n+            max_age=max_age,\n+            cache_timeout=cache_timeout,\n+        )\n     )\n \n-    if last_modified is not None:\n-        rv.last_modified = last_modified\n-    elif mtime is not None:\n-        rv.last_modified = mtime\n-\n-    rv.cache_control.public = True\n-    if cache_timeout is None:\n-        cache_timeout = current_app.get_send_file_max_age(filename)\n-    if cache_timeout is not None:\n-        rv.cache_control.max_age = cache_timeout\n-        rv.expires = int(time() + cache_timeout)\n-\n-    if add_etags and filename is not None:\n-        from warnings import warn\n-\n-        try:\n-            check = (\n-                adler32(\n-                    filename.encode(""utf-8"") if isinstance(filename, str) else filename\n-                )\n-                & 0xFFFFFFFF\n-            )\n-            rv.set_etag(\n-                f""{os.path.getmtime(filename)}-{os.path.getsize(filename)}-{check}""\n-            )\n-        except OSError:\n-            warn(\n-                f""Access {filename} failed, maybe it does not exist, so""\n-                "" ignore etags in headers"",\n-                stacklevel=2,\n-            )\n-\n-    if conditional:\n-        try:\n-            rv = rv.make_conditional(request, accept_ranges=True, complete_length=fsize)\n-        except RequestedRangeNotSatisfiable:\n-            if file is not None:\n-                file.close()\n-            raise\n-        # make sure we don\'t send x-sendfile for servers that\n-        # ignore the 304 status code for x-sendfile.\n-        if rv.status_code == 304:\n-            rv.headers.pop(""x-sendfile"", None)\n-    return rv\n-\n \n def safe_join(directory, *pathnames):\n-    """"""Safely join `directory` and zero or more untrusted `pathnames`\n-    components.\n-\n-    Example usage::\n-\n-        @app.route(\'/wiki/<path:filename>\')\n-        def wiki_page(filename):\n-            filename = safe_join(app.config[\'WIKI_FOLDER\'], filename)\n-            with open(filename, \'rb\') as fd:\n-                content = fd.read()  # Read and process the file content...\n+    """"""Safely join zero or more untrusted path components to a base\n+    directory to avoid escaping the base directory.\n \n-    :param directory: the trusted base directory.\n-    :param pathnames: the untrusted pathnames relative to that directory.\n-    :raises: :class:`~werkzeug.exceptions.NotFound` if one or more passed\n-            paths fall out of its boundaries.\n+    :param directory: The trusted base directory.\n+    :param pathnames: The untrusted path components relative to the\n+        base directory.\n+    :return: A safe path, otherwise ``None``.\n     """"""\n+    warnings.warn(\n+        ""\'flask.helpers.safe_join\' is deprecated and will be removed in""\n+        "" 2.1. Use \'werkzeug.utils.safe_join\' instead."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n+    path = werkzeug.utils.safe_join(directory, *pathnames)\n \n-    parts = [directory]\n-\n-    for filename in pathnames:\n-        if filename != """":\n-            filename = posixpath.normpath(filename)\n+    if path is None:\n+        raise NotFound()\n \n-        if (\n-            any(sep in filename for sep in _os_alt_seps)\n-            or os.path.isabs(filename)\n-            or filename == ""..""\n-            or filename.startswith(""../"")\n-        ):\n-            raise NotFound()\n+    return path\n \n-        parts.append(filename)\n \n-    return posixpath.join(*parts)\n+def send_from_directory(directory, path, **kwargs):\n+    """"""Send a file from within a directory using :func:`send_file`.\n \n+    .. code-block:: python\n \n-def send_from_directory(directory, filename, **options):\n-    """"""Send a file from a given directory with :func:`send_file`.  This\n-    is a secure way to quickly expose static files from an upload folder\n-    or something similar.\n+        @app.route(""/uploads/<path:name>"")\n+        def download_file(name):\n+            return send_from_directory(\n+                app.config[\'UPLOAD_FOLDER\'], name, as_attachment=True\n+            )\n \n-    Example usage::\n+    This is a secure way to serve files from a folder, such as static\n+    files or uploads. Uses :func:`~werkzeug.security.safe_join` to\n+    ensure the path coming from the client is not maliciously crafted to\n+    point outside the specified directory.\n \n-        @app.route(\'/uploads/<path:filename>\')\n-        def download_file(filename):\n-            return send_from_directory(app.config[\'UPLOAD_FOLDER\'],\n-                                       filename, as_attachment=True)\n+    If the final path does not point to an existing regular file,\n+    raises a 404 :exc:`~werkzeug.exceptions.NotFound` error.\n \n-    .. admonition:: Sending files and Performance\n+    :param directory: The directory that ``path`` must be located under.\n+    :param path: The path to the file to send, relative to\n+        ``directory``.\n+    :param kwargs: Arguments to pass to :func:`send_file`.\n \n-       It is strongly recommended to activate either ``X-Sendfile`` support in\n-       your webserver or (if no authentication happens) to tell the webserver\n-       to serve files for the given path on its own without calling into the\n-       web application for improved performance.\n+    .. versionadded:: 2.0\n+        Moved the implementation to Werkzeug. This is now a wrapper to\n+        pass some Flask-specific arguments.\n \n     .. versionadded:: 0.5\n-\n-    :param directory: the directory where all the files are stored.\n-    :param filename: the filename relative to that directory to\n-                     download.\n-    :param options: optional keyword arguments that are directly\n-                    forwarded to :func:`send_file`.\n     """"""\n-    filename = os.fspath(filename)\n-    directory = os.fspath(directory)\n-    filename = safe_join(directory, filename)\n-    if not os.path.isabs(filename):\n-        filename = os.path.join(current_app.root_path, filename)\n-    try:\n-        if not os.path.isfile(filename):\n-            raise NotFound()\n-    except (TypeError, ValueError):\n-        raise BadRequest()\n-    options.setdefault(""conditional"", True)\n-    return send_file(filename, **options)\n+    return werkzeug.utils.send_from_directory(\n+        directory, path, **_prepare_send_file_kwargs(**kwargs)\n+    )\n \n \n def get_root_path(import_name):\n@@ -1016,30 +921,25 @@ class _PackageBoundObject:\n             return FileSystemLoader(os.path.join(self.root_path, self.template_folder))\n \n     def get_send_file_max_age(self, filename):\n-        """"""Provides default cache_timeout for the :func:`send_file` functions.\n-\n-        By default, this function returns ``SEND_FILE_MAX_AGE_DEFAULT`` from\n-        the configuration of :data:`~flask.current_app`.\n-\n-        Static file functions such as :func:`send_from_directory` use this\n-        function, and :func:`send_file` calls this function on\n-        :data:`~flask.current_app` when the given cache_timeout is ``None``. If a\n-        cache_timeout is given in :func:`send_file`, that timeout is used;\n-        otherwise, this method is called.\n+        """"""Used by :func:`send_file` to determine the ``max_age`` cache\n+        value for a given file path if it wasn\'t passed.\n \n-        This allows subclasses to change the behavior when sending files based\n-        on the filename.  For example, to set the cache timeout for .js files\n-        to 60 seconds::\n+        By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from\n+        the configuration of :data:`~flask.current_app`. This defaults\n+        to ``None``, which tells the browser to use conditional requests\n+        instead of a timed cache, which is usually preferable.\n \n-            class MyFlask(flask.Flask):\n-                def get_send_file_max_age(self, name):\n-                    if name.lower().endswith(\'.js\'):\n-                        return 60\n-                    return flask.Flask.get_send_file_max_age(self, name)\n+        .. versionchanged:: 2.0\n+            The default configuration is ``None`` instead of 12 hours.\n \n         .. versionadded:: 0.9\n         """"""\n-        return total_seconds(current_app.send_file_max_age_default)\n+        value = current_app.send_file_max_age_default\n+\n+        if value is None:\n+            return None\n+\n+        return total_seconds(value)\n \n     def send_static_file(self, filename):\n         """"""Function used internally to send static files from the static\n@@ -1049,12 +949,11 @@ class _PackageBoundObject:\n         """"""\n         if not self.has_static_folder:\n             raise RuntimeError(""No static folder for this object"")\n-        # Ensure get_send_file_max_age is called in all cases.\n-        # Here, we ensure get_send_file_max_age is called for Blueprints.\n-        cache_timeout = self.get_send_file_max_age(filename)\n-        return send_from_directory(\n-            self.static_folder, filename, cache_timeout=cache_timeout\n-        )\n+\n+        # send_file only knows to call get_send_file_max_age on the app,\n+        # call it here so it works for blueprints too.\n+        max_age = self.get_send_file_max_age(filename)\n+        return send_from_directory(self.static_folder, filename, max_age=max_age)\n \n     def open_resource(self, resource, mode=""rb""):\n         """"""Opens a resource from the application\'s resource folder.  To see\n'",4.21875,3.0303030303030303
tests/test_blueprints.py,tests/test_blueprints.py,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -222,7 +222,7 @@ def test_templates_and_static(test_apps):\n         assert flask.render_template(""nested/nested.txt"") == ""I\'m nested""\n \n \n-def test_default_static_cache_timeout(app):\n+def test_default_static_max_age(app):\n     class MyBlueprint(flask.Blueprint):\n         def get_send_file_max_age(self, filename):\n             return 100\n'",1.0495867768595042,1.0495867768595042
tests/test_helpers.py,tests/test_helpers.py,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -1,15 +1,7 @@\n-import datetime\n import io\n import os\n-import sys\n \n import pytest\n-from werkzeug.datastructures import Range\n-from werkzeug.exceptions import BadRequest\n-from werkzeug.exceptions import NotFound\n-from werkzeug.http import http_date\n-from werkzeug.http import parse_cache_control_header\n-from werkzeug.http import parse_options_header\n \n import flask\n from flask.helpers import get_debug_flag\n@@ -39,278 +31,45 @@ class PyBytesIO:\n \n \n class TestSendfile:\n-    def test_send_file_regular(self, app, req_ctx):\n+    def test_send_file(self, app, req_ctx):\n         rv = flask.send_file(""static/index.html"")\n         assert rv.direct_passthrough\n         assert rv.mimetype == ""text/html""\n-        with app.open_resource(""static/index.html"") as f:\n-            rv.direct_passthrough = False\n-            assert rv.data == f.read()\n-        rv.close()\n-\n-    def test_send_file_xsendfile(self, app, req_ctx):\n-        app.use_x_sendfile = True\n-        rv = flask.send_file(""static/index.html"")\n-        assert rv.direct_passthrough\n-        assert ""x-sendfile"" in rv.headers\n-        assert rv.headers[""x-sendfile""] == os.path.join(\n-            app.root_path, ""static/index.html""\n-        )\n-        assert rv.mimetype == ""text/html""\n-        rv.close()\n-\n-    def test_send_file_last_modified(self, app, client):\n-        last_modified = datetime.datetime(1999, 1, 1)\n-\n-        @app.route(""/"")\n-        def index():\n-            return flask.send_file(\n-                io.BytesIO(b""party like it\'s""),\n-                last_modified=last_modified,\n-                mimetype=""text/plain"",\n-            )\n-\n-        rv = client.get(""/"")\n-        assert rv.last_modified == last_modified\n-\n-    def test_send_file_object_without_mimetype(self, app, req_ctx):\n-        with pytest.raises(ValueError) as excinfo:\n-            flask.send_file(io.BytesIO(b""LOL""))\n-        assert ""Unable to infer MIME-type"" in str(excinfo.value)\n-        assert ""no filename is available"" in str(excinfo.value)\n-\n-        flask.send_file(io.BytesIO(b""LOL""), attachment_filename=""filename"")\n-\n-    @pytest.mark.parametrize(\n-        ""opener"",\n-        [\n-            lambda app: open(os.path.join(app.static_folder, ""index.html""), ""rb""),\n-            lambda app: io.BytesIO(b""Test""),\n-            lambda app: PyBytesIO(b""Test""),\n-        ],\n-    )\n-    @pytest.mark.usefixtures(""req_ctx"")\n-    def test_send_file_object(self, app, opener):\n-        file = opener(app)\n-        app.use_x_sendfile = True\n-        rv = flask.send_file(file, mimetype=""text/plain"")\n-        rv.direct_passthrough = False\n-        assert rv.data\n-        assert rv.mimetype == ""text/plain""\n-        assert ""x-sendfile"" not in rv.headers\n-        rv.close()\n-\n-    @pytest.mark.parametrize(\n-        ""opener"",\n-        [\n-            lambda app: io.StringIO(""Test""),\n-            lambda app: open(os.path.join(app.static_folder, ""index.html"")),\n-        ],\n-    )\n-    @pytest.mark.usefixtures(""req_ctx"")\n-    def test_send_file_text_fails(self, app, opener):\n-        file = opener(app)\n-\n-        with pytest.raises(ValueError):\n-            flask.send_file(file, mimetype=""text/plain"")\n-\n-        file.close()\n \n-    def test_send_file_pathlike(self, app, req_ctx):\n-        rv = flask.send_file(FakePath(""static/index.html""))\n-        assert rv.direct_passthrough\n-        assert rv.mimetype == ""text/html""\n         with app.open_resource(""static/index.html"") as f:\n             rv.direct_passthrough = False\n             assert rv.data == f.read()\n-        rv.close()\n \n-    @pytest.mark.skipif(\n-        not callable(getattr(Range, ""to_content_range_header"", None)),\n-        reason=""not implemented within werkzeug"",\n-    )\n-    def test_send_file_range_request(self, app, client):\n-        @app.route(""/"")\n-        def index():\n-            return flask.send_file(""static/index.html"", conditional=True)\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=4-15""})\n-        assert rv.status_code == 206\n-        with app.open_resource(""static/index.html"") as f:\n-            assert rv.data == f.read()[4:16]\n-        rv.close()\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=4-""})\n-        assert rv.status_code == 206\n-        with app.open_resource(""static/index.html"") as f:\n-            assert rv.data == f.read()[4:]\n         rv.close()\n \n-        rv = client.get(""/"", headers={""Range"": ""bytes=4-1000""})\n-        assert rv.status_code == 206\n-        with app.open_resource(""static/index.html"") as f:\n-            assert rv.data == f.read()[4:]\n-        rv.close()\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=-10""})\n-        assert rv.status_code == 206\n-        with app.open_resource(""static/index.html"") as f:\n-            assert rv.data == f.read()[-10:]\n-        rv.close()\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=1000-""})\n-        assert rv.status_code == 416\n-        rv.close()\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=-""})\n-        assert rv.status_code == 416\n-        rv.close()\n-\n-        rv = client.get(""/"", headers={""Range"": ""somethingsomething""})\n-        assert rv.status_code == 416\n-        rv.close()\n-\n-        last_modified = datetime.datetime.utcfromtimestamp(\n-            os.path.getmtime(os.path.join(app.root_path, ""static/index.html""))\n-        ).replace(microsecond=0)\n-\n-        rv = client.get(\n-            ""/"", headers={""Range"": ""bytes=4-15"", ""If-Range"": http_date(last_modified)}\n-        )\n-        assert rv.status_code == 206\n-        rv.close()\n-\n-        rv = client.get(\n-            ""/"",\n-            headers={\n-                ""Range"": ""bytes=4-15"",\n-                ""If-Range"": http_date(datetime.datetime(1999, 1, 1)),\n-            },\n-        )\n-        assert rv.status_code == 200\n-        rv.close()\n-\n-    def test_send_file_range_request_bytesio(self, app, client):\n-        @app.route(""/"")\n-        def index():\n-            file = io.BytesIO(b""somethingsomething"")\n-            return flask.send_file(\n-                file, attachment_filename=""filename"", conditional=True\n-            )\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=4-15""})\n-        assert rv.status_code == 206\n-        assert rv.data == b""somethingsomething""[4:16]\n-        rv.close()\n-\n-    def test_send_file_range_request_xsendfile_invalid(self, app, client):\n-        # https://github.com/pallets/flask/issues/2526\n-        app.use_x_sendfile = True\n-\n-        @app.route(""/"")\n-        def index():\n-            return flask.send_file(""static/index.html"", conditional=True)\n-\n-        rv = client.get(""/"", headers={""Range"": ""bytes=1000-""})\n-        assert rv.status_code == 416\n-        rv.close()\n-\n-    def test_attachment(self, app, req_ctx):\n-        app = flask.Flask(__name__)\n-        with app.test_request_context():\n-            with open(os.path.join(app.root_path, ""static/index.html""), ""rb"") as f:\n-                rv = flask.send_file(\n-                    f, as_attachment=True, attachment_filename=""index.html""\n-                )\n-                value, options = parse_options_header(rv.headers[""Content-Disposition""])\n-                assert value == ""attachment""\n-                rv.close()\n-\n-        with open(os.path.join(app.root_path, ""static/index.html""), ""rb"") as f:\n-            rv = flask.send_file(\n-                f, as_attachment=True, attachment_filename=""index.html""\n-            )\n-            value, options = parse_options_header(rv.headers[""Content-Disposition""])\n-            assert value == ""attachment""\n-            assert options[""filename""] == ""index.html""\n-            assert ""filename*"" not in rv.headers[""Content-Disposition""]\n-            rv.close()\n-\n-        rv = flask.send_file(""static/index.html"", as_attachment=True)\n-        value, options = parse_options_header(rv.headers[""Content-Disposition""])\n-        assert value == ""attachment""\n-        assert options[""filename""] == ""index.html""\n-        rv.close()\n-\n-        rv = flask.send_file(\n-            io.BytesIO(b""Test""),\n-            as_attachment=True,\n-            attachment_filename=""index.txt"",\n-            add_etags=False,\n-        )\n-        assert rv.mimetype == ""text/plain""\n-        value, options = parse_options_header(rv.headers[""Content-Disposition""])\n-        assert value == ""attachment""\n-        assert options[""filename""] == ""index.txt""\n-        rv.close()\n-\n-    @pytest.mark.usefixtures(""req_ctx"")\n-    @pytest.mark.parametrize(\n-        (""filename"", ""ascii"", ""utf8""),\n-        (\n-            (""index.html"", ""index.html"", False),\n-            (\n-                ""Ñandú／pingüino.txt"",\n-                \'""Nandu/pinguino.txt""\',\n-                ""%C3%91and%C3%BA%EF%BC%8Fping%C3%BCino.txt"",\n-            ),\n-            (""Vögel.txt"", ""Vogel.txt"", ""V%C3%B6gel.txt""),\n-            # "":/"" are not safe in filename* value\n-            (""те:/ст"", \'"":/""\', ""%D1%82%D0%B5%3A%2F%D1%81%D1%82""),\n-        ),\n-    )\n-    def test_attachment_filename_encoding(self, filename, ascii, utf8):\n-        rv = flask.send_file(\n-            ""static/index.html"", as_attachment=True, attachment_filename=filename\n-        )\n-        rv.close()\n-        content_disposition = rv.headers[""Content-Disposition""]\n-        assert f""filename={ascii}"" in content_disposition\n-        if utf8:\n-            assert f""filename*=UTF-8\'\'{utf8}"" in content_disposition\n-        else:\n-            assert ""filename*=UTF-8\'\'"" not in content_disposition\n-\n     def test_static_file(self, app, req_ctx):\n-        # default cache timeout is 12 hours\n+        # Default max_age is None.\n \n         # Test with static file handler.\n         rv = app.send_static_file(""index.html"")\n-        cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-        assert cc.max_age == 12 * 60 * 60\n+        assert rv.cache_control.max_age is None\n         rv.close()\n-        # Test again with direct use of send_file utility.\n+\n+        # Test with direct use of send_file.\n         rv = flask.send_file(""static/index.html"")\n-        cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-        assert cc.max_age == 12 * 60 * 60\n+        assert rv.cache_control.max_age is None\n         rv.close()\n+\n         app.config[""SEND_FILE_MAX_AGE_DEFAULT""] = 3600\n \n         # Test with static file handler.\n         rv = app.send_static_file(""index.html"")\n-        cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-        assert cc.max_age == 3600\n+        assert rv.cache_control.max_age == 3600\n         rv.close()\n-        # Test again with direct use of send_file utility.\n+\n+        # Test with direct use of send_file.\n         rv = flask.send_file(""static/index.html"")\n-        cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-        assert cc.max_age == 3600\n+        assert rv.cache_control.max_age == 3600\n         rv.close()\n \n-        # Test with static file handler.\n+        # Test with pathlib.Path.\n         rv = app.send_static_file(FakePath(""index.html""))\n-        cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-        assert cc.max_age == 3600\n+        assert rv.cache_control.max_age == 3600\n         rv.close()\n \n         class StaticFileApp(flask.Flask):\n@@ -318,16 +77,16 @@ class TestSendfile:\n                 return 10\n \n         app = StaticFileApp(__name__)\n+\n         with app.test_request_context():\n             # Test with static file handler.\n             rv = app.send_static_file(""index.html"")\n-            cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-            assert cc.max_age == 10\n+            assert rv.cache_control.max_age == 10\n             rv.close()\n-            # Test again with direct use of send_file utility.\n+\n+            # Test with direct use of send_file.\n             rv = flask.send_file(""static/index.html"")\n-            cc = parse_cache_control_header(rv.headers[""Cache-Control""])\n-            assert cc.max_age == 10\n+            assert rv.cache_control.max_age == 10\n             rv.close()\n \n     def test_send_from_directory(self, app, req_ctx):\n@@ -339,28 +98,6 @@ class TestSendfile:\n         assert rv.data.strip() == b""Hello Subdomain""\n         rv.close()\n \n-    def test_send_from_directory_pathlike(self, app, req_ctx):\n-        app.root_path = os.path.join(\n-            os.path.dirname(__file__), ""test_apps"", ""subdomaintestmodule""\n-        )\n-        rv = flask.send_from_directory(FakePath(""static""), FakePath(""hello.txt""))\n-        rv.direct_passthrough = False\n-        assert rv.data.strip() == b""Hello Subdomain""\n-        rv.close()\n-\n-    def test_send_from_directory_null_character(self, app, req_ctx):\n-        app.root_path = os.path.join(\n-            os.path.dirname(__file__), ""test_apps"", ""subdomaintestmodule""\n-        )\n-\n-        if sys.version_info >= (3, 8):\n-            exception = NotFound\n-        else:\n-            exception = BadRequest\n-\n-        with pytest.raises(exception):\n-            flask.send_from_directory(""static"", ""bad\\x00"")\n-\n \n class TestUrlFor:\n     def test_url_for_with_anchor(self, app, req_ctx):\n@@ -514,47 +251,6 @@ class TestStreaming:\n         assert rv.data == b""flask""\n \n \n-class TestSafeJoin:\n-    @pytest.mark.parametrize(\n-        ""args, expected"",\n-        (\n-            ((""a/b/c"",), ""a/b/c""),\n-            ((""/"", ""a/"", ""b/"", ""c/""), ""/a/b/c""),\n-            ((""a"", ""b"", ""c""), ""a/b/c""),\n-            ((""/a"", ""b/c""), ""/a/b/c""),\n-            ((""a/b"", ""X/../c""), ""a/b/c""),\n-            ((""/a/b"", ""c/X/..""), ""/a/b/c""),\n-            # If last path is \'\' add a slash\n-            ((""/a/b/c"", """"), ""/a/b/c/""),\n-            # Preserve dot slash\n-            ((""/a/b/c"", ""./""), ""/a/b/c/.""),\n-            ((""a/b/c"", ""X/..""), ""a/b/c/.""),\n-            # Base directory is always considered safe\n-            ((""../"", ""a/b/c""), ""../a/b/c""),\n-            ((""/.."",), ""/..""),\n-        ),\n-    )\n-    def test_safe_join(self, args, expected):\n-        assert flask.safe_join(*args) == expected\n-\n-    @pytest.mark.parametrize(\n-        ""args"",\n-        (\n-            # path.isabs and ``..\'\' checks\n-            (""/a"", ""b"", ""/c""),\n-            (""/a"", ""../b/c""),\n-            (""/a"", "".."", ""b/c""),\n-            # Boundaries violations after path normalization\n-            (""/a"", ""b/../b/../../c""),\n-            (""/a"", ""b"", ""c/../..""),\n-            (""/a"", ""b/../../c""),\n-        ),\n-    )\n-    def test_safe_join_exceptions(self, args):\n-        with pytest.raises(NotFound):\n-            print(flask.safe_join(*args))\n-\n-\n class TestHelpers:\n     @pytest.mark.parametrize(\n         ""debug, expected_flag, expected_default_flag"",\n'",1.0833333333333333,1.0731707317073171
tests/test_regression.py,tests/test_regression.py,dc11cdb4a4627b9f8c79e47e39aa7e1357151896,15a49e72977d7a44ec4f54de7078053fbfb4f3b6,"""move send_file and send_from_directory to Werkzeug\n\nThe implementations were moved to Werkzeug, Flask's functions become\nwrappers around Werkzeug to pass some Flask-specific values.\n\ncache_timeout is renamed to max_age. SEND_FILE_MAX_AGE_DEFAULT,\napp.send_file_max_age_default, and app.get_send_file_max_age defaults\nto None. This tells the browser to use conditional requests rather than\na 12 hour cache.\n\nattachment_filename is renamed to download_name, and is always sent if\na name is known.\n\nDeprecate helpers.safe_join in favor of werkzeug.utils.safe_join.\n\nRemoved most of the send_file tests, they're tested in Werkzeug.\n\nIn the file upload example, renamed the uploaded_file view to\ndownload_file to avoid a common source of confusion.""","'@@ -3,7 +3,6 @@ import platform\n import threading\n \n import pytest\n-from werkzeug.exceptions import NotFound\n \n import flask\n \n@@ -56,13 +55,6 @@ def test_memory_consumption():\n             fire()\n \n \n-def test_safe_join_toplevel_pardir():\n-    from flask.helpers import safe_join\n-\n-    with pytest.raises(NotFound):\n-        safe_join(""/foo"", "".."")\n-\n-\n def test_aborting(app):\n     class Foo(Exception):\n         whatever = 42\n'",1.2,1.2222222222222223
.github/workflows/lock.yaml,.github/workflows/lock.yaml,b2464883ce2cb7fe1b5d48509dd9a3a3ea7aeb01,f325b8b5be07233747c2968af281552437067215,'reduce lock schedule to daily',"""@@ -2,7 +2,7 @@ name: 'Lock threads'\n \n on:\n   schedule:\n-    - cron: '0/10 * * * *'\n+    - cron: '0 0 * * *'\n \n jobs:\n   lock:\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,11798fd01b275b2dbb448c15ecdba0c9a7d973ad,b2464883ce2cb7fe1b5d48509dd9a3a3ea7aeb01,'[pre-commit.ci] pre-commit autoupdate',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.7.3\n+    rev: v2.7.4\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,d6b974f821fe37bb782a80e64174ee3180fc5215,11798fd01b275b2dbb448c15ecdba0c9a7d973ad,'update deprecated set-env ci command (#3835)',"'@@ -44,7 +44,7 @@ jobs:\n           key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n       - name: set full Python version in PY env var\n         # See https://pre-commit.com/#github-actions-example\n-        run: echo ""::set-env name=PY::$(python -VV | sha256sum | cut -d\' \' -f1)""\n+        run: echo ""name=PY::$(python -VV | sha256sum | cut -d\' \' -f1)"" >> $GITHUB_ENV\n       - name: cache pre-commit\n         uses: actions/cache@v2\n         with:\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,0855252f8c07084745fc598579ad40447a26d1f5,d6b974f821fe37bb782a80e64174ee3180fc5215,'Fix ci environment command syntax (#3836)',"'@@ -44,7 +44,7 @@ jobs:\n           key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n       - name: set full Python version in PY env var\n         # See https://pre-commit.com/#github-actions-example\n-        run: echo ""name=PY::$(python -VV | sha256sum | cut -d\' \' -f1)"" >> $GITHUB_ENV\n+        run: echo ""PY=$(python -VV | sha256sum | cut -d\' \' -f1)"" >> $GITHUB_ENV\n       - name: cache pre-commit\n         uses: actions/cache@v2\n         with:\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,cd3a93a9c1aaf8440d366cbebbc852e1033914cd,0855252f8c07084745fc598579ad40447a26d1f5,'[pre-commit.ci] pre-commit autoupdate',"'@@ -11,7 +11,7 @@ repos:\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n-  - repo: https://github.com/python/black\n+  - repo: https://github.com/psf/black\n     rev: 20.8b1\n     hooks:\n       - id: black\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,cab8121d8f94a465c11814010f4453d1bf61008a,28a3eb106c20eb6c3b9064f27f07a2ca89c0a4d7,'[pre-commit.ci] pre-commit autoupdate',"'@@ -23,7 +23,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v3.3.0\n+    rev: v3.4.0\n     hooks:\n       - id: check-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,7d3ae48d57e1f989dfec42e98997ca8b75370c9a,577eec198adfb0a69f059e87c53d6ace55c55a77,'fix explanation of wheel name (#3848)\n\n* fix explanation of wheel name\r\n\r\n* Improve the description of wheel filename format\r\n\r\nCo-authored-by: Grey Li <withlihui@gmail.com>',"'@@ -32,8 +32,8 @@ distribution file.\n     $ python setup.py bdist_wheel\n \n You can find the file in ``dist/flaskr-1.0.0-py3-none-any.whl``. The\n-file name is the name of the project, the version, and some tags about\n-the file can install.\n+file name is in the format of {project name}-{version}-{python tag}\n+-{abi tag}-{platform tag}.\n \n Copy this file to another machine,\n :ref:`set up a new virtualenv <install-create-env>`, then install the\n'",0,0
requirements/dev.txt,requirements/dev.txt,e4c70eff7747abf12726d90f38d3c28006baf087,de0af038627fd4f45bfe61ca9aed36b8e10770d5,'Bump sphinx from 3.2.1 to 3.4.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.2.1 to 3.4.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.2.1...v3.4.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -41,7 +41,7 @@ six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n sphinx-tabs==1.3.0        # via -r requirements/docs.in\n-sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n+sphinx==3.4.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/docs.txt,requirements/docs.txt,e4c70eff7747abf12726d90f38d3c28006baf087,de0af038627fd4f45bfe61ca9aed36b8e10770d5,'Bump sphinx from 3.2.1 to 3.4.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.2.1 to 3.4.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.2.1...v3.4.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -23,7 +23,7 @@ six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n sphinx-tabs==1.3.0        # via -r requirements/docs.in\n-sphinx==3.2.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n+sphinx==3.4.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n sphinxcontrib-applehelp==1.0.2  # via sphinx\n sphinxcontrib-devhelp==1.0.2  # via sphinx\n sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n'",0,0
requirements/dev.txt,requirements/dev.txt,2622739771778f2b901de5ad690ab1028c2a1df0,de0af038627fd4f45bfe61ca9aed36b8e10770d5,'Bump pre-commit from 2.8.2 to 2.9.3\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.8.2 to 2.9.3.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.8.2...v2.9.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -28,7 +28,7 @@ packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes,\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.3.1          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.8.2         # via -r requirements/dev.in\n+pre-commit==2.9.3         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.7.2           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n'",0,0
requirements/dev.txt,requirements/dev.txt,d1a21022e0cf6b7243ce26965a13a0b8fe371f10,27a36f1446a9fb3639da91794b87b333ff3ab83e,'Bump pip-tools from 5.3.1 to 5.5.0\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 5.3.1 to 5.5.0.\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jazzband/pip-tools/compare/5.3.1...5.5.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -26,7 +26,7 @@ markupsafe==1.1.1         # via jinja2\n nodeenv==1.5.0            # via pre-commit\n packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.3.1          # via -r requirements/dev.in\n+pip-tools==5.5.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n pre-commit==2.8.2         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n@@ -37,7 +37,7 @@ python-dotenv==0.15.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n requests==2.24.0          # via sphinx\n-six==1.15.0               # via packaging, pip-tools, tox, virtualenv\n+six==1.15.0               # via packaging, tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n sphinx-tabs==1.3.0        # via -r requirements/docs.in\n'",0,0
requirements/dev.txt,requirements/dev.txt,a7cf23a2343e04e61bb770d373a29e2666c56330,959c64e8ceb76a059aa20cfc048c4b2ff078090a,'Bump packaging from 20.4 to 20.8\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.4 to 20.8.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.4...20.8)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -24,7 +24,7 @@ iniconfig==1.1.1          # via pytest\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n nodeenv==1.5.0            # via pre-commit\n-packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n+packaging==20.8           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pip-tools==5.5.0          # via -r requirements/dev.in\n pluggy==0.13.1            # via pytest, tox\n@@ -37,7 +37,7 @@ python-dotenv==0.15.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n requests==2.24.0          # via sphinx\n-six==1.15.0               # via packaging, tox, virtualenv\n+six==1.15.0               # via tox, virtualenv\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n sphinx-tabs==1.3.0        # via -r requirements/docs.in\n'",0,0
requirements/docs.txt,requirements/docs.txt,a7cf23a2343e04e61bb770d373a29e2666c56330,959c64e8ceb76a059aa20cfc048c4b2ff078090a,'Bump packaging from 20.4 to 20.8\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.4 to 20.8.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.4...20.8)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -13,13 +13,12 @@ idna==2.10                # via requests\n imagesize==1.2.0          # via sphinx\n jinja2==2.11.2            # via sphinx\n markupsafe==1.1.1         # via jinja2\n-packaging==20.4           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n+packaging==20.8           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n pygments==2.7.2           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n pytz==2020.1              # via babel\n requests==2.24.0          # via sphinx\n-six==1.15.0               # via packaging\n snowballstemmer==2.0.0    # via sphinx\n sphinx-issues==1.2.0      # via -r requirements/docs.in\n sphinx-tabs==1.3.0        # via -r requirements/docs.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,a7cf23a2343e04e61bb770d373a29e2666c56330,959c64e8ceb76a059aa20cfc048c4b2ff078090a,'Bump packaging from 20.4 to 20.8\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.4 to 20.8.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.4...20.8)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -8,11 +8,10 @@ attrs==20.2.0             # via pytest\n blinker==1.4              # via -r requirements/tests.in\n greenlet==0.4.17          # via -r requirements/tests.in\n iniconfig==1.1.1          # via pytest\n-packaging==20.4           # via pytest\n+packaging==20.8           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n pytest==6.1.2             # via -r requirements/tests.in\n python-dotenv==0.15.0     # via -r requirements/tests.in\n-six==1.15.0               # via packaging\n toml==0.10.2              # via pytest\n'",0,0
tests/test_basic.py,tests/test_basic.py,eb41e7e417cbf53d19517e356381423cfd256c2f,a7cf23a2343e04e61bb770d373a29e2666c56330,'Silence pytest warnings for exception propagation test',"'@@ -1520,6 +1520,8 @@ def test_server_name_subdomain():\n     assert rv.data == b""subdomain""\n \n \n+@pytest.mark.filterwarnings(""ignore::pytest.PytestUnraisableExceptionWarning"")\n+@pytest.mark.filterwarnings(""ignore::pytest.PytestUnhandledThreadExceptionWarning"")\n def test_exception_propagation(app, client):\n     def apprunner(config_key):\n         @app.route(""/"")\n'",1.0687022900763359,1.0687022900763359
requirements/dev.txt,requirements/dev.txt,da8865bd6425a8f286ffbe73a46437bf4dac8adc,eb41e7e417cbf53d19517e356381423cfd256c2f,'Bump pytest from 6.1.2 to 6.2.1',"'@@ -32,7 +32,7 @@ pre-commit==2.9.3         # via -r requirements/dev.in\n py==1.9.0                 # via pytest, tox\n pygments==2.7.2           # via sphinx, sphinx-tabs\n pyparsing==2.4.7          # via packaging\n-pytest==6.1.2             # via -r requirements/tests.in\n+pytest==6.2.1             # via -r requirements/tests.in\n python-dotenv==0.15.0     # via -r requirements/tests.in\n pytz==2020.1              # via babel\n pyyaml==5.3.1             # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,da8865bd6425a8f286ffbe73a46437bf4dac8adc,eb41e7e417cbf53d19517e356381423cfd256c2f,'Bump pytest from 6.1.2 to 6.2.1',"'@@ -12,6 +12,6 @@ packaging==20.8           # via pytest\n pluggy==0.13.1            # via pytest\n py==1.9.0                 # via pytest\n pyparsing==2.4.7          # via packaging\n-pytest==6.1.2             # via -r requirements/tests.in\n+pytest==6.2.1             # via -r requirements/tests.in\n python-dotenv==0.15.0     # via -r requirements/tests.in\n toml==0.10.2              # via pytest\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,aff21fd8bc4d168caf481de87bb5447adccd18ad,7d3ae48d57e1f989dfec42e98997ca8b75370c9a,"""Document parameter description error\n\nThe loads function has the wrong 'kwargs' parameter description""","'@@ -237,7 +237,7 @@ def loads(s, app=None, **kwargs):\n     :param app: App instance to use to configure the JSON decoder.\n         Uses ``current_app`` if not given, and falls back to the default\n         encoder when not in an app context.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    :param kwargs: Extra arguments passed to :func:`json.loads`.\n \n     .. versionchanged:: 1.0.3\n \n'",4.142857142857143,4.142857142857143
src/flask/json/__init__.py,src/flask/json/__init__.py,2fab8a31ae2639b3eacdd3935d58203b09650f29,7d2ba3e1fc55e8d04308ede674263727c85c86d2,'Fix broken func directives in docstrings',"""@@ -103,7 +103,7 @@ def dumps(obj, app=None, **kwargs):\n     :param obj: Object to serialize to JSON.\n     :param app: Use this app's config instead of the active app context\n         or defaults.\n-    :param kwargs: Extra arguments passed to func:`json.dumps`.\n+    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n \n     .. versionchanged:: 2.0\n         ``encoding`` is deprecated and will be removed in 2.1.\n@@ -139,7 +139,7 @@ def dump(obj, fp, app=None, **kwargs):\n     :param fp: File object to write JSON to.\n     :param app: Use this app's config instead of the active app context\n         or defaults.\n-    :param kwargs: Extra arguments passed to func:`json.dump`.\n+    :param kwargs: Extra arguments passed to :func:`json.dump`.\n \n     .. versionchanged:: 2.0\n         Writing to a binary file, and the ``encoding`` argument, is\n@@ -211,7 +211,7 @@ def load(fp, app=None, **kwargs):\n     :param fp: File object to read JSON from.\n     :param app: Use this app's config instead of the active app context\n         or defaults.\n-    :param kwargs: Extra arguments passed to func:`json.load`.\n+    :param kwargs: Extra arguments passed to :func:`json.load`.\n \n     .. versionchanged:: 2.0\n         ``encoding`` is deprecated and will be removed in 2.1. The file\n""",3.8181818181818183,3.8181818181818183
README.rst,README.rst,54ae1cb0e902aac1bce44e2a315650d395c710b5,2fab8a31ae2639b3eacdd3935d58203b09650f29,'Update the example in README',"'@@ -20,7 +20,7 @@ Install and update using `pip`_:\n \n .. code-block:: text\n \n-    pip install -U Flask\n+    $ pip install -U Flask\n \n \n A Simple Example\n@@ -28,6 +28,7 @@ A Simple Example\n \n .. code-block:: python\n \n+    # save this as app.py\n     from flask import Flask\n \n     app = Flask(__name__)\n@@ -38,9 +39,8 @@ A Simple Example\n \n .. code-block:: text\n \n-    $ env FLASK_APP=hello.py flask run\n-     * Serving Flask app ""hello""\n-     * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+    $ flask run\n+      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n \n \n Contributing\n'",1.0,1.0
docs/blueprints.rst,docs/blueprints.rst,7068d0983a29eb411bcd361ef8b764a8d10684ed,7f206913e1ec078cebaa590f66c6d137d15bdca9,'Clarify json error handling',"""@@ -270,7 +270,7 @@ at the application level using the ``request`` proxy object::\n     @app.errorhandler(405)\n     def _handle_api_error(ex):\n         if request.path.startswith('/api/'):\n-            return jsonify_error(ex)\n+            return jsonify(error=str(ex)), ex.code\n         else:\n             return ex\n \n""",1.0,1.0
docs/api.rst,docs/api.rst,fdba0d2526347786c05c15027e183a5ba4d81114,d887d32f4d0effedb6bf40f3d2ad790036934387,'remove JSONMixin',"'@@ -27,9 +27,9 @@ Incoming Request Data\n ---------------------\n \n .. autoclass:: Request\n-   :members:\n-   :inherited-members:\n-   :exclude-members: json_module\n+    :members:\n+    :inherited-members:\n+    :exclude-members: json_module\n \n .. attribute:: request\n \n@@ -48,20 +48,9 @@ Response Objects\n ----------------\n \n .. autoclass:: flask.Response\n-   :members: set_cookie, max_cookie_size, data, mimetype, is_json, get_json\n-\n-   .. attribute:: headers\n-\n-      A :class:`~werkzeug.datastructures.Headers` object representing the response headers.\n-\n-   .. attribute:: status\n-\n-      A string with a response status.\n-\n-   .. attribute:: status_code\n-\n-      The response status as integer.\n-\n+    :members:\n+    :inherited-members:\n+    :exclude-members: json_module\n \n Sessions\n --------\n'",1.1875,1.1875
src/flask/wrappers.py,src/flask/wrappers.py,fdba0d2526347786c05c15027e183a5ba4d81114,d887d32f4d0effedb6bf40f3d2ad790036934387,'remove JSONMixin',"'@@ -1,23 +1,12 @@\n from werkzeug.exceptions import BadRequest\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n-from werkzeug.wrappers.json import JSONMixin as _JSONMixin\n \n from . import json\n from .globals import current_app\n \n \n-class JSONMixin(_JSONMixin):\n-    json_module = json\n-\n-    def on_json_loading_failed(self, e):\n-        if current_app and current_app.debug:\n-            raise BadRequest(f""Failed to decode JSON object: {e}"")\n-\n-        raise BadRequest()\n-\n-\n-class Request(RequestBase, JSONMixin):\n+class Request(RequestBase):\n     """"""The request object used by default in Flask.  Remembers the\n     matched endpoint and view arguments.\n \n@@ -30,6 +19,8 @@ class Request(RequestBase, JSONMixin):\n     specific ones.\n     """"""\n \n+    json_module = json\n+\n     #: The internal URL rule that matched the request.  This can be\n     #: useful to inspect which methods are allowed for the URL from\n     #: a before/after handler (``request.url_rule.methods``) etc.\n@@ -89,8 +80,14 @@ class Request(RequestBase, JSONMixin):\n \n             attach_enctype_error_multidict(self)\n \n+    def on_json_loading_failed(self, e):\n+        if current_app and current_app.debug:\n+            raise BadRequest(f""Failed to decode JSON object: {e}"")\n \n-class Response(JSONMixin, ResponseBase):\n+        raise BadRequest()\n+\n+\n+class Response(ResponseBase):\n     """"""The response object that is used by default in Flask.  Works like the\n     response object from Werkzeug but is set to have an HTML mimetype by\n     default.  Quite often you don\'t have to create this object yourself because\n@@ -110,8 +107,7 @@ class Response(JSONMixin, ResponseBase):\n \n     default_mimetype = ""text/html""\n \n-    def _get_data_for_json(self, cache):\n-        return self.get_data()\n+    json_module = json\n \n     @property\n     def max_cookie_size(self):\n'",2.5714285714285716,2.8333333333333335
docs/testing.rst,docs/testing.rst,1936ca8a2e1789efd6169a901a8b60ec62ceb578,fdba0d2526347786c05c15027e183a5ba4d81114,'remove BaseRequest and BaseResponse',"""@@ -119,7 +119,7 @@ Notice that our test functions begin with the word `test`; this allows\n By using ``client.get`` we can send an HTTP ``GET`` request to the\n application with the given path.  The return value will be a\n :class:`~flask.Flask.response_class` object. We can now use the\n-:attr:`~werkzeug.wrappers.BaseResponse.data` attribute to inspect\n+:attr:`~werkzeug.wrappers.Response.data` attribute to inspect\n the return value (as string) from the application.\n In this case, we ensure that ``'No entries here so far'``\n is part of the output.\n""",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,1936ca8a2e1789efd6169a901a8b60ec62ceb578,fdba0d2526347786c05c15027e183a5ba4d81114,'remove BaseRequest and BaseResponse',"""@@ -302,7 +302,7 @@ URL when the register view redirects to the login view.\n :attr:`~Response.data` contains the body of the response as bytes. If\n you expect a certain value to render on the page, check that it's in\n ``data``. Bytes must be compared to bytes. If you want to compare text,\n-use :meth:`get_data(as_text=True) <werkzeug.wrappers.BaseResponse.get_data>`\n+use :meth:`get_data(as_text=True) <werkzeug.wrappers.Response.get_data>`\n instead.\n \n ``pytest.mark.parametrize`` tells Pytest to run the same test function\n""",1.0,1.0
src/flask/app.py,src/flask/app.py,1936ca8a2e1789efd6169a901a8b60ec62ceb578,fdba0d2526347786c05c15027e183a5ba4d81114,'remove BaseRequest and BaseResponse',"'@@ -16,7 +16,7 @@ from werkzeug.routing import Map\n from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n-from werkzeug.wrappers import BaseResponse\n+from werkzeug.wrappers import Response as BaseResponse\n \n from . import cli\n from . import json\n'",3.0303030303030303,3.0303030303030303
src/flask/testing.py,src/flask/testing.py,1936ca8a2e1789efd6169a901a8b60ec62ceb578,fdba0d2526347786c05c15027e183a5ba4d81114,'remove BaseRequest and BaseResponse',"'@@ -5,7 +5,7 @@ import werkzeug.test\n from click.testing import CliRunner\n from werkzeug.test import Client\n from werkzeug.urls import url_parse\n-from werkzeug.wrappers import BaseRequest\n+from werkzeug.wrappers import Request as BaseRequest\n \n from . import _request_ctx_stack\n from .cli import ScriptInfo\n'",3.8,3.8
src/flask/wrappers.py,src/flask/wrappers.py,1936ca8a2e1789efd6169a901a8b60ec62ceb578,fdba0d2526347786c05c15027e183a5ba4d81114,'remove BaseRequest and BaseResponse',"'@@ -113,7 +113,7 @@ class Response(ResponseBase):\n     def max_cookie_size(self):\n         """"""Read-only view of the :data:`MAX_COOKIE_SIZE` config key.\n \n-        See :attr:`~werkzeug.wrappers.BaseResponse.max_cookie_size` in\n+        See :attr:`~werkzeug.wrappers.Response.max_cookie_size` in\n         Werkzeug\'s docs.\n         """"""\n         if current_app:\n'",2.8333333333333335,2.8333333333333335
CHANGES.rst,CHANGES.rst,14f56363a4992506f2b3670985fca4f0a29e5176,1936ca8a2e1789efd6169a901a8b60ec62ceb578,'rename send_file add_etags to etag',"'@@ -49,7 +49,8 @@ Unreleased\n     implementations in ``werkzeug.utils``. :pr:`3828`\n -   Some ``send_file`` parameters have been renamed, the old names are\n     deprecated. ``attachment_filename`` is renamed to ``download_name``.\n-    ``cache_timeout`` is renamed to ``max_age``. :pr:`3828`\n+    ``cache_timeout`` is renamed to ``max_age``. ``add_etags`` is\n+    renamed to ``etag``. :pr:`3828, 3883`\n -   ``send_file`` passes ``download_name`` even if\n     ``as_attachment=False`` by using ``Content-Disposition: inline``.\n     :pr:`3828`\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,14f56363a4992506f2b3670985fca4f0a29e5176,1936ca8a2e1789efd6169a901a8b60ec62ceb578,'rename send_file add_etags to etag',"'@@ -439,6 +439,8 @@ def get_flashed_messages(with_categories=False, category_filter=()):\n def _prepare_send_file_kwargs(\n     download_name=None,\n     attachment_filename=None,\n+    etag=None,\n+    add_etags=None,\n     max_age=None,\n     cache_timeout=None,\n     **kwargs,\n@@ -461,12 +463,22 @@ def _prepare_send_file_kwargs(\n         )\n         max_age = cache_timeout\n \n+    if add_etags is not None:\n+        warnings.warn(\n+            ""The \'add_etags\' parameter has been renamed to \'etag\'. The old name will be""\n+            "" removed in Flask 2.1."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+        etag = add_etags\n+\n     if max_age is None:\n         max_age = current_app.get_send_file_max_age\n \n     kwargs.update(\n         environ=request.environ,\n         download_name=download_name,\n+        etag=etag,\n         max_age=max_age,\n         use_x_sendfile=current_app.use_x_sendfile,\n         response_class=current_app.response_class,\n@@ -482,7 +494,8 @@ def send_file(\n     download_name=None,\n     attachment_filename=None,\n     conditional=True,\n-    add_etags=True,\n+    etag=True,\n+    add_etags=None,\n     last_modified=None,\n     max_age=None,\n     cache_timeout=None,\n@@ -518,8 +531,8 @@ def send_file(\n         the file. Defaults to the passed file name.\n     :param conditional: Enable conditional and range responses based on\n         request headers. Requires passing a file path and ``environ``.\n-    :param add_etags: Calculate an ETag for the file. Requires passing a\n-        file path.\n+    :param etag: Calculate an ETag for the file, which requires passing\n+        a file path. Can also be a string to use instead.\n     :param last_modified: The last modified time to send for the file,\n         in seconds. If not provided, it will try to detect it from the\n         file path.\n@@ -537,6 +550,10 @@ def send_file(\n         ``conditional`` is enabled and ``max_age`` is not set by\n         default.\n \n+    .. versionchanged:: 2.0.0\n+        ``etag`` replaces the ``add_etags`` parameter. It can be a\n+        string to use instead of generating one.\n+\n     .. versionchanged:: 2.0\n         Passing a file-like object that inherits from\n         :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather\n@@ -593,6 +610,7 @@ def send_file(\n             download_name=download_name,\n             attachment_filename=attachment_filename,\n             conditional=conditional,\n+            etag=etag,\n             add_etags=add_etags,\n             last_modified=last_modified,\n             max_age=max_age,\n'",3.0303030303030303,3.0606060606060606
src/flask/app.py,src/flask/app.py,eb42655c46f8a598f2e0ead624ba5a65a8a66e90,14f56363a4992506f2b3670985fca4f0a29e5176,'simplify BadRequestKeyError.show_exception',"'@@ -1386,17 +1386,10 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        if isinstance(e, BadRequestKeyError):\n-            if self.debug or self.config[""TRAP_BAD_REQUEST_ERRORS""]:\n-                e.show_exception = True\n-\n-                # Werkzeug < 0.15 doesn\'t add the KeyError to the 400\n-                # message, add it in manually.\n-                # TODO: clean up once Werkzeug >= 0.15.5 is required\n-                if e.args[0] not in e.get_description():\n-                    e.description = f""KeyError: {e.args[0]!r}""\n-            elif not hasattr(BadRequestKeyError, ""show_exception""):\n-                e.args = ()\n+        if isinstance(e, BadRequestKeyError) and (\n+            self.debug or self.config[""TRAP_BAD_REQUEST_ERRORS""]\n+        ):\n+            e.show_exception = True\n \n         if isinstance(e, HTTPException) and not self.trap_http_exception(e):\n             return self.handle_http_exception(e)\n'",3.0303030303030303,3.0
docs/errorhandling.rst,docs/errorhandling.rst,64206c13c2bff0220328845db0995f451cefd3b1,eb42655c46f8a598f2e0ead624ba5a65a8a66e90,'simplify InternalServerError.original_exception',"'@@ -249,25 +249,11 @@ be passed an instance of ``InternalServerError``, not the original\n unhandled error.\n \n The original error is available as ``e.original_exception``.\n-Until Werkzeug 1.0.0, this attribute will only exist during unhandled\n-errors, use ``getattr`` to get access it for compatibility.\n \n-.. code-block:: python\n-\n-    @app.errorhandler(InternalServerError)\n-    def handle_500(e):\n-        original = getattr(e, ""original_exception"", None)\n-\n-        if original is None:\n-            # direct 500 error, such as abort(500)\n-            return render_template(""500.html""), 500\n-\n-        # wrapped unhandled error\n-        return render_template(""500_unhandled.html"", e=original), 500\n-\n-An error handler for ""500 Internal Server Error"" will be passed uncaught exceptions in\n-addition to explicit 500 errors. In debug mode, a handler for ""500 Internal Server Error"" will not be used.\n-Instead, the interactive debugger will be shown.\n+An error handler for ""500 Internal Server Error"" will be passed uncaught\n+exceptions in addition to explicit 500 errors. In debug mode, a handler\n+for ""500 Internal Server Error"" will not be used. Instead, the\n+interactive debugger will be shown.\n \n \n Custom Error Pages\n'",1.6,1.5714285714285714
src/flask/app.py,src/flask/app.py,64206c13c2bff0220328845db0995f451cefd3b1,eb42655c46f8a598f2e0ead624ba5a65a8a66e90,'simplify InternalServerError.original_exception',"'@@ -1447,10 +1447,7 @@ class Flask(Scaffold):\n             raise e\n \n         self.log_exception(exc_info)\n-        server_error = InternalServerError()\n-        # TODO: pass as param when Werkzeug>=1.0.0 is required\n-        # TODO: also remove note about this from docstring and docs\n-        server_error.original_exception = e\n+        server_error = InternalServerError(original_exception=e)\n         handler = self._find_error_handler(server_error)\n \n         if handler is not None:\n'",3.0,3.0
src/flask/__main__.py,src/flask/__main__.py,055cdc2625c0cdf8cea87524f5c6bcf07f7e5005,64206c13c2bff0220328845db0995f451cefd3b1,'click detects program name when run as module',"'@@ -1,3 +1,3 @@\n from .cli import main\n \n-main(as_module=True)\n+main()\n'",0,0
src/flask/cli.py,src/flask/cli.py,055cdc2625c0cdf8cea87524f5c6bcf07f7e5005,64206c13c2bff0220328845db0995f451cefd3b1,'click detects program name when run as module',"'@@ -953,10 +953,10 @@ debug mode.\n )\n \n \n-def main(as_module=False):\n+def main():\n     # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n-    cli.main(args=sys.argv[1:], prog_name=""python -m flask"" if as_module else None)\n+    cli.main(args=sys.argv[1:])\n \n \n if __name__ == ""__main__"":\n-    main(as_module=True)\n+    main()\n'",4.166666666666667,4.138888888888889
src/flask/app.py,src/flask/app.py,81ba6c24efea58dd00c093448fa2e529c0cda507,055cdc2625c0cdf8cea87524f5c6bcf07f7e5005,"""remove Jinja 'autoescape' and 'with' extensions""","'@@ -278,7 +278,7 @@ class Flask(Scaffold):\n     #:     This is a ``dict`` instead of an ``ImmutableDict`` to allow\n     #:     easier configuration.\n     #:\n-    jinja_options = {""extensions"": [""jinja2.ext.autoescape"", ""jinja2.ext.with_""]}\n+    jinja_options = {}\n \n     #: Default configuration parameters.\n     default_config = ImmutableDict(\n'",3.0,3.0
requirements/dev.txt,requirements/dev.txt,78bcf1d8c6e9a63ea818d2febaa56c4878e90db6,9f7ac04aaf008305770b04ec64b671e916994749,'Bump tox from 3.20.1 to 3.21.3\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.20.1 to 3.21.3.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.20.1...3.21.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -4,55 +4,129 @@\n #\n #    pip-compile requirements/dev.in\n #\n-alabaster==0.7.12         # via sphinx\n-appdirs==1.4.4            # via virtualenv\n-attrs==20.2.0             # via pytest\n-babel==2.8.0              # via sphinx\n-blinker==1.4              # via -r requirements/tests.in\n-certifi==2020.6.20        # via requests\n-cfgv==3.2.0               # via pre-commit\n-chardet==3.0.4            # via requests\n-click==7.1.2              # via pip-tools\n-distlib==0.3.1            # via virtualenv\n-docutils==0.16            # via sphinx\n-filelock==3.0.12          # via tox, virtualenv\n-greenlet==0.4.17          # via -r requirements/tests.in\n-identify==1.5.6           # via pre-commit\n-idna==2.10                # via requests\n-imagesize==1.2.0          # via sphinx\n-iniconfig==1.1.1          # via pytest\n-jinja2==2.11.2            # via sphinx\n-markupsafe==1.1.1         # via jinja2\n-nodeenv==1.5.0            # via pre-commit\n-packaging==20.8           # via -r requirements/docs.in, pallets-sphinx-themes, pytest, sphinx, tox\n-pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pip-tools==5.5.0          # via -r requirements/dev.in\n-pluggy==0.13.1            # via pytest, tox\n-pre-commit==2.9.3         # via -r requirements/dev.in\n-py==1.9.0                 # via pytest, tox\n-pygments==2.7.2           # via sphinx, sphinx-tabs\n-pyparsing==2.4.7          # via packaging\n-pytest==6.2.1             # via -r requirements/tests.in\n-python-dotenv==0.15.0     # via -r requirements/tests.in\n-pytz==2020.1              # via babel\n-pyyaml==5.3.1             # via pre-commit\n-requests==2.24.0          # via sphinx\n-six==1.15.0               # via tox, virtualenv\n-snowballstemmer==2.0.0    # via sphinx\n-sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx-tabs==1.3.0        # via -r requirements/docs.in\n-sphinx==3.4.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n-sphinxcontrib-applehelp==1.0.2  # via sphinx\n-sphinxcontrib-devhelp==1.0.2  # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n-sphinxcontrib-jsmath==1.0.1  # via sphinx\n-sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n-sphinxcontrib-qthelp==1.0.3  # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n-toml==0.10.2              # via pre-commit, pytest, tox\n-tox==3.20.1               # via -r requirements/dev.in\n-urllib3==1.25.11          # via requests\n-virtualenv==20.1.0        # via pre-commit, tox\n+alabaster==0.7.12\n+    # via sphinx\n+appdirs==1.4.4\n+    # via virtualenv\n+attrs==20.2.0\n+    # via pytest\n+babel==2.8.0\n+    # via sphinx\n+blinker==1.4\n+    # via -r requirements/tests.in\n+certifi==2020.6.20\n+    # via requests\n+cfgv==3.2.0\n+    # via pre-commit\n+chardet==3.0.4\n+    # via requests\n+click==7.1.2\n+    # via pip-tools\n+distlib==0.3.1\n+    # via virtualenv\n+docutils==0.16\n+    # via sphinx\n+filelock==3.0.12\n+    # via\n+    #   tox\n+    #   virtualenv\n+greenlet==0.4.17\n+    # via -r requirements/tests.in\n+identify==1.5.6\n+    # via pre-commit\n+idna==2.10\n+    # via requests\n+imagesize==1.2.0\n+    # via sphinx\n+iniconfig==1.1.1\n+    # via pytest\n+jinja2==2.11.2\n+    # via sphinx\n+markupsafe==1.1.1\n+    # via jinja2\n+nodeenv==1.5.0\n+    # via pre-commit\n+packaging==20.8\n+    # via\n+    #   -r requirements/docs.in\n+    #   pallets-sphinx-themes\n+    #   pytest\n+    #   sphinx\n+    #   tox\n+pallets-sphinx-themes==1.2.3\n+    # via -r requirements/docs.in\n+pip-tools==5.5.0\n+    # via -r requirements/dev.in\n+pluggy==0.13.1\n+    # via\n+    #   pytest\n+    #   tox\n+pre-commit==2.9.3\n+    # via -r requirements/dev.in\n+py==1.9.0\n+    # via\n+    #   pytest\n+    #   tox\n+pygments==2.7.2\n+    # via\n+    #   sphinx\n+    #   sphinx-tabs\n+pyparsing==2.4.7\n+    # via packaging\n+pytest==6.2.1\n+    # via -r requirements/tests.in\n+python-dotenv==0.15.0\n+    # via -r requirements/tests.in\n+pytz==2020.1\n+    # via babel\n+pyyaml==5.3.1\n+    # via pre-commit\n+requests==2.24.0\n+    # via sphinx\n+six==1.15.0\n+    # via\n+    #   tox\n+    #   virtualenv\n+snowballstemmer==2.0.0\n+    # via sphinx\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==1.3.0\n+    # via -r requirements/docs.in\n+sphinx==3.4.1\n+    # via\n+    #   -r requirements/docs.in\n+    #   pallets-sphinx-themes\n+    #   sphinx-issues\n+    #   sphinx-tabs\n+    #   sphinxcontrib-log-cabinet\n+sphinxcontrib-applehelp==1.0.2\n+    # via sphinx\n+sphinxcontrib-devhelp==1.0.2\n+    # via sphinx\n+sphinxcontrib-htmlhelp==1.0.3\n+    # via sphinx\n+sphinxcontrib-jsmath==1.0.1\n+    # via sphinx\n+sphinxcontrib-log-cabinet==1.0.1\n+    # via -r requirements/docs.in\n+sphinxcontrib-qthelp==1.0.3\n+    # via sphinx\n+sphinxcontrib-serializinghtml==1.1.4\n+    # via sphinx\n+toml==0.10.2\n+    # via\n+    #   pre-commit\n+    #   pytest\n+    #   tox\n+tox==3.21.3\n+    # via -r requirements/dev.in\n+urllib3==1.25.11\n+    # via requests\n+virtualenv==20.1.0\n+    # via\n+    #   pre-commit\n+    #   tox\n \n # The following packages are considered to be unsafe in a requirements file:\n # pip\n'",0,0
requirements/dev.txt,requirements/dev.txt,b379bd4a781ed09c8f2d8d0756fb4bed1cc598a8,557e2147dd9c61a4f8ee5cab1d51c1bc355bc5f3,'Bump pre-commit from 2.9.3 to 2.10.0\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.9.3 to 2.10.0.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.9.3...v2.10.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -61,7 +61,7 @@ pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.9.3\n+pre-commit==2.10.0\n     # via -r requirements/dev.in\n py==1.9.0\n     # via\n'",0,0
requirements/dev.txt,requirements/dev.txt,5ecbf1e3337e7622b6508791b6c095cf91b7c544,557e2147dd9c61a4f8ee5cab1d51c1bc355bc5f3,'Bump greenlet from 0.4.17 to 1.0.0\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.17 to 1.0.0.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/CHANGES.rst)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.17...1.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -30,7 +30,7 @@ filelock==3.0.12\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==0.4.17\n+greenlet==1.0.0\n     # via -r requirements/tests.in\n identify==1.5.6\n     # via pre-commit\n'",0,0
requirements/tests.txt,requirements/tests.txt,5ecbf1e3337e7622b6508791b6c095cf91b7c544,557e2147dd9c61a4f8ee5cab1d51c1bc355bc5f3,'Bump greenlet from 0.4.17 to 1.0.0\n\nBumps [greenlet](https://github.com/python-greenlet/greenlet) from 0.4.17 to 1.0.0.\n- [Release notes](https://github.com/python-greenlet/greenlet/releases)\n- [Changelog](https://github.com/python-greenlet/greenlet/blob/master/CHANGES.rst)\n- [Commits](https://github.com/python-greenlet/greenlet/compare/0.4.17...1.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -4,14 +4,25 @@\n #\n #    pip-compile requirements/tests.in\n #\n-attrs==20.2.0             # via pytest\n-blinker==1.4              # via -r requirements/tests.in\n-greenlet==0.4.17          # via -r requirements/tests.in\n-iniconfig==1.1.1          # via pytest\n-packaging==20.8           # via pytest\n-pluggy==0.13.1            # via pytest\n-py==1.9.0                 # via pytest\n-pyparsing==2.4.7          # via packaging\n-pytest==6.2.1             # via -r requirements/tests.in\n-python-dotenv==0.15.0     # via -r requirements/tests.in\n-toml==0.10.2              # via pytest\n+attrs==20.2.0\n+    # via pytest\n+blinker==1.4\n+    # via -r requirements/tests.in\n+greenlet==1.0.0\n+    # via -r requirements/tests.in\n+iniconfig==1.1.1\n+    # via pytest\n+packaging==20.8\n+    # via pytest\n+pluggy==0.13.1\n+    # via pytest\n+py==1.9.0\n+    # via pytest\n+pyparsing==2.4.7\n+    # via packaging\n+pytest==6.2.1\n+    # via -r requirements/tests.in\n+python-dotenv==0.15.0\n+    # via -r requirements/tests.in\n+toml==0.10.2\n+    # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,c52ffa8ae7252a45b14e8cfa53b0fe5988210388,557e2147dd9c61a4f8ee5cab1d51c1bc355bc5f3,'Bump sphinx-tabs from 1.3.0 to 2.0.0\n\nBumps [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) from 1.3.0 to 2.0.0.\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v1.3.0...v2.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -91,7 +91,7 @@ snowballstemmer==2.0.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==1.3.0\n+sphinx-tabs==2.0.0\n     # via -r requirements/docs.in\n sphinx==3.4.1\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,c52ffa8ae7252a45b14e8cfa53b0fe5988210388,557e2147dd9c61a4f8ee5cab1d51c1bc355bc5f3,'Bump sphinx-tabs from 1.3.0 to 2.0.0\n\nBumps [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) from 1.3.0 to 2.0.0.\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v1.3.0...v2.0.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -4,33 +4,70 @@\n #\n #    pip-compile requirements/docs.in\n #\n-alabaster==0.7.12         # via sphinx\n-babel==2.8.0              # via sphinx\n-certifi==2020.6.20        # via requests\n-chardet==3.0.4            # via requests\n-docutils==0.16            # via sphinx\n-idna==2.10                # via requests\n-imagesize==1.2.0          # via sphinx\n-jinja2==2.11.2            # via sphinx\n-markupsafe==1.1.1         # via jinja2\n-packaging==20.8           # via -r requirements/docs.in, pallets-sphinx-themes, sphinx\n-pallets-sphinx-themes==1.2.3  # via -r requirements/docs.in\n-pygments==2.7.2           # via sphinx, sphinx-tabs\n-pyparsing==2.4.7          # via packaging\n-pytz==2020.1              # via babel\n-requests==2.24.0          # via sphinx\n-snowballstemmer==2.0.0    # via sphinx\n-sphinx-issues==1.2.0      # via -r requirements/docs.in\n-sphinx-tabs==1.3.0        # via -r requirements/docs.in\n-sphinx==3.4.1             # via -r requirements/docs.in, pallets-sphinx-themes, sphinx-issues, sphinx-tabs, sphinxcontrib-log-cabinet\n-sphinxcontrib-applehelp==1.0.2  # via sphinx\n-sphinxcontrib-devhelp==1.0.2  # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3  # via sphinx\n-sphinxcontrib-jsmath==1.0.1  # via sphinx\n-sphinxcontrib-log-cabinet==1.0.1  # via -r requirements/docs.in\n-sphinxcontrib-qthelp==1.0.3  # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4  # via sphinx\n-urllib3==1.25.11          # via requests\n+alabaster==0.7.12\n+    # via sphinx\n+babel==2.8.0\n+    # via sphinx\n+certifi==2020.6.20\n+    # via requests\n+chardet==3.0.4\n+    # via requests\n+docutils==0.16\n+    # via sphinx\n+idna==2.10\n+    # via requests\n+imagesize==1.2.0\n+    # via sphinx\n+jinja2==2.11.2\n+    # via sphinx\n+markupsafe==1.1.1\n+    # via jinja2\n+packaging==20.8\n+    # via\n+    #   -r requirements/docs.in\n+    #   pallets-sphinx-themes\n+    #   sphinx\n+pallets-sphinx-themes==1.2.3\n+    # via -r requirements/docs.in\n+pygments==2.7.2\n+    # via\n+    #   sphinx\n+    #   sphinx-tabs\n+pyparsing==2.4.7\n+    # via packaging\n+pytz==2020.1\n+    # via babel\n+requests==2.24.0\n+    # via sphinx\n+snowballstemmer==2.0.0\n+    # via sphinx\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==2.0.0\n+    # via -r requirements/docs.in\n+sphinx==3.4.1\n+    # via\n+    #   -r requirements/docs.in\n+    #   pallets-sphinx-themes\n+    #   sphinx-issues\n+    #   sphinx-tabs\n+    #   sphinxcontrib-log-cabinet\n+sphinxcontrib-applehelp==1.0.2\n+    # via sphinx\n+sphinxcontrib-devhelp==1.0.2\n+    # via sphinx\n+sphinxcontrib-htmlhelp==1.0.3\n+    # via sphinx\n+sphinxcontrib-jsmath==1.0.1\n+    # via sphinx\n+sphinxcontrib-log-cabinet==1.0.1\n+    # via -r requirements/docs.in\n+sphinxcontrib-qthelp==1.0.3\n+    # via sphinx\n+sphinxcontrib-serializinghtml==1.1.4\n+    # via sphinx\n+urllib3==1.25.11\n+    # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n # setuptools\n'",0,0
requirements/dev.txt,requirements/dev.txt,7eebe22cf517702cd26a18ae95e75e83ec587cc5,d1b36ced14f15747554594567f133b8fad28ceac,'Bump sphinx from 3.4.1 to 3.4.3\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.1 to 3.4.3.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.1...v3.4.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -93,7 +93,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==2.0.0\n     # via -r requirements/docs.in\n-sphinx==3.4.1\n+sphinx==3.4.3\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.txt,requirements/docs.txt,7eebe22cf517702cd26a18ae95e75e83ec587cc5,d1b36ced14f15747554594567f133b8fad28ceac,'Bump sphinx from 3.4.1 to 3.4.3\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.1 to 3.4.3.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.1...v3.4.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -45,7 +45,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==2.0.0\n     # via -r requirements/docs.in\n-sphinx==3.4.1\n+sphinx==3.4.3\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/dev.txt,requirements/dev.txt,296bd2f4cc0141db11629d1339359771cc4eba38,d1b36ced14f15747554594567f133b8fad28ceac,'Bump jinja2 from 2.11.2 to 2.11.3\n\nBumps [jinja2](https://github.com/pallets/jinja) from 2.11.2 to 2.11.3.\n- [Release notes](https://github.com/pallets/jinja/releases)\n- [Changelog](https://github.com/pallets/jinja/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pallets/jinja/compare/2.11.2...2.11.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -40,7 +40,7 @@ imagesize==1.2.0\n     # via sphinx\n iniconfig==1.1.1\n     # via pytest\n-jinja2==2.11.2\n+jinja2==2.11.3\n     # via sphinx\n markupsafe==1.1.1\n     # via jinja2\n'",0,0
requirements/docs.txt,requirements/docs.txt,296bd2f4cc0141db11629d1339359771cc4eba38,d1b36ced14f15747554594567f133b8fad28ceac,'Bump jinja2 from 2.11.2 to 2.11.3\n\nBumps [jinja2](https://github.com/pallets/jinja) from 2.11.2 to 2.11.3.\n- [Release notes](https://github.com/pallets/jinja/releases)\n- [Changelog](https://github.com/pallets/jinja/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pallets/jinja/compare/2.11.2...2.11.3)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -18,7 +18,7 @@ idna==2.10\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n-jinja2==2.11.2\n+jinja2==2.11.3\n     # via sphinx\n markupsafe==1.1.1\n     # via jinja2\n'",0,0
requirements/dev.txt,requirements/dev.txt,510268e91415aa2e759436eb148bfd5e12f313e5,096ac67b97f5ca5f3ccd44f45847cf341a3e1c32,'Bump pytest from 6.2.1 to 6.2.2\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.1 to 6.2.2.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.1...6.2.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -73,7 +73,7 @@ pygments==2.7.2\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.1\n+pytest==6.2.2\n     # via -r requirements/tests.in\n python-dotenv==0.15.0\n     # via -r requirements/tests.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,510268e91415aa2e759436eb148bfd5e12f313e5,096ac67b97f5ca5f3ccd44f45847cf341a3e1c32,'Bump pytest from 6.2.1 to 6.2.2\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.1 to 6.2.2.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.1...6.2.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -20,7 +20,7 @@ py==1.9.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.1\n+pytest==6.2.2\n     # via -r requirements/tests.in\n python-dotenv==0.15.0\n     # via -r requirements/tests.in\n'",0,0
requirements/dev.txt,requirements/dev.txt,fb5f04a8c71499391bab37aa4004ecc652724e0d,6c828c3bbae18d10844524046f63fb3a26807dea,'Bump packaging from 20.8 to 20.9\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.8 to 20.9.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.8...20.9)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -46,7 +46,7 @@ markupsafe==1.1.1\n     # via jinja2\n nodeenv==1.5.0\n     # via pre-commit\n-packaging==20.8\n+packaging==20.9\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.txt,requirements/docs.txt,fb5f04a8c71499391bab37aa4004ecc652724e0d,6c828c3bbae18d10844524046f63fb3a26807dea,'Bump packaging from 20.8 to 20.9\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.8 to 20.9.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.8...20.9)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -22,7 +22,7 @@ jinja2==2.11.2\n     # via sphinx\n markupsafe==1.1.1\n     # via jinja2\n-packaging==20.8\n+packaging==20.9\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/tests.txt,requirements/tests.txt,fb5f04a8c71499391bab37aa4004ecc652724e0d,6c828c3bbae18d10844524046f63fb3a26807dea,'Bump packaging from 20.8 to 20.9\n\nBumps [packaging](https://github.com/pypa/packaging) from 20.8 to 20.9.\n- [Release notes](https://github.com/pypa/packaging/releases)\n- [Changelog](https://github.com/pypa/packaging/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pypa/packaging/compare/20.8...20.9)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -12,7 +12,7 @@ greenlet==1.0.0\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n-packaging==20.8\n+packaging==20.9\n     # via pytest\n pluggy==0.13.1\n     # via pytest\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,d55ee5b91759c411d90ebb2046466fb27640d5ff,93261454e6d0bc1c3c7bea5c69a3cbd2846984b6,'[pre-commit.ci] pre-commit autoupdate',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.7.4\n+    rev: v2.9.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n'",0,0
docs/api.rst,docs/api.rst,451c1f87f39253c35360f3e9e004df19e0c74638,6355f121761a79e878d3b96b82d097196341271a,'got_request_exception only sends unhandled exceptions\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -440,18 +440,32 @@ The following signals exist in Flask:\n \n .. data:: got_request_exception\n \n-   This signal is sent when an exception happens during request processing.\n-   It is sent *before* the standard exception handling kicks in and even\n-   in debug mode, where no exception handling happens.  The exception\n-   itself is passed to the subscriber as `exception`.\n+    This signal is sent when an unhandled exception happens during\n+    request processing, including when debugging. The exception is\n+    passed to the subscriber as ``exception``.\n \n-   Example subscriber::\n+    This signal is not sent for\n+    :exc:`~werkzeug.exceptions.HTTPException`, or other exceptions that\n+    have error handlers registered, unless the exception was raised from\n+    an error handler.\n+\n+    This example shows how to do some extra logging if a theoretical\n+    ``SecurityException`` was raised:\n \n-        def log_exception(sender, exception, **extra):\n-            sender.logger.debug(\'Got exception during processing: %s\', exception)\n+    .. code-block:: python\n \n         from flask import got_request_exception\n-        got_request_exception.connect(log_exception, app)\n+\n+        def log_security_exception(sender, exception, **extra):\n+            if not isinstance(exception, SecurityException):\n+                return\n+\n+            security_logger.exception(\n+                f""SecurityException at {request.url!r}"",\n+                exc_info=exception,\n+            )\n+\n+        got_request_exception.connect(log_security_exception, app)\n \n .. data:: request_tearing_down\n \n'",1.1875,1.25
CHANGES.rst,CHANGES.rst,01621485fdad733b0886117d59bea1adac8d4fcc,15f0fc2d24a6e5cc35216b81b360be6ab89a7a4c,'Ensure session_interface.open_session is called after URL matching (#3776)',"'@@ -60,6 +60,9 @@ Unreleased\n     conditional requests instead of using a timed cache. :pr:`3828`\n -   ``helpers.safe_join`` is deprecated. Use\n     ``werkzeug.utils.safe_join`` instead. :pr:`3828`\n+-   The request context does route matching before opening the session.\n+    This could allow a session interface to change behavior based on\n+    ``request.endpoint``. :issue:`3776`\n \n \n Version 1.1.2\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,01621485fdad733b0886117d59bea1adac8d4fcc,15f0fc2d24a6e5cc35216b81b360be6ab89a7a4c,'Ensure session_interface.open_session is called after URL matching (#3776)',"'@@ -361,6 +361,9 @@ class RequestContext:\n \n         _request_ctx_stack.push(self)\n \n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n@@ -372,9 +375,6 @@ class RequestContext:\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n     def pop(self, exc=_sentinel):\n         """"""Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n'",1.9259259259259258,1.9259259259259258
CHANGES.rst,CHANGES.rst,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","""@@ -63,6 +63,7 @@ Unreleased\n -   The request context does route matching before opening the session.\n     This could allow a session interface to change behavior based on\n     ``request.endpoint``. :issue:`3776`\n+-   Use Jinja's implementation of the ``|tojson`` filter. :issue:`3881`\n \n \n Version 1.1.2\n""",0,0
docs/api.rst,docs/api.rst,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","""@@ -250,14 +250,15 @@ for easier customization. By default it handles some extra data types:\n -   :class:`~markupsafe.Markup` (or any object with a ``__html__``\n     method) will call the ``__html__`` method to get a string.\n \n-:func:`~htmlsafe_dumps` is also available as the ``|tojson`` template\n-filter. The filter marks the output with ``|safe`` so it can be used\n-inside ``script`` tags.\n+Jinja's ``|tojson`` filter is configured to use Flask's :func:`dumps`\n+function. The filter marks the output with ``|safe`` automatically. Use\n+the filter to render data inside ``<script>`` tags.\n \n .. sourcecode:: html+jinja\n \n     <script type=text/javascript>\n-        renderChart({{ axis_data|tojson }});\n+        const names = {{ names|tosjon }};\n+        renderChart(names, {{ axis_data|tojson }});\n     </script>\n \n .. autofunction:: jsonify\n""",1.25,1.25
docs/patterns/jquery.rst,docs/patterns/jquery.rst,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","'@@ -60,27 +60,9 @@ like this:\n .. sourcecode:: html+jinja\n \n    <script type=text/javascript>\n-     $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};\n+     $SCRIPT_ROOT = {{ request.script_root|tojson }};\n    </script>\n \n-The ``|safe`` is necessary in Flask before 0.10 so that Jinja does not\n-escape the JSON encoded string with HTML rules.  Usually this would be\n-necessary, but we are inside a ``script`` block here where different rules\n-apply.\n-\n-.. admonition:: Information for Pros\n-\n-   In HTML the ``script`` tag is declared ``CDATA`` which means that entities\n-   will not be parsed.  Everything until ``</script>`` is handled as script.\n-   This also means that there must never be any ``</`` between the script\n-   tags.  ``|tojson`` is kind enough to do the right thing here and\n-   escape slashes for you (``{{ ""</script>""|tojson|safe }}`` is rendered as\n-   ``""<\\/script>""``).\n-\n-   In Flask 0.10 it goes a step further and escapes all HTML tags with\n-   unicode escapes.  This makes it possible for Flask to automatically\n-   mark the result as HTML safe.\n-\n \n JSON View Functions\n -------------------\n'",1.0,1.0
docs/templating.rst,docs/templating.rst,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","""@@ -95,37 +95,6 @@ by default:\n \n       {% from '_helpers.html' import my_macro with context %}\n \n-Standard Filters\n-----------------\n-\n-Flask provides the following Jinja2 filters in addition to the filters provided\n-by Jinja2 itself:\n-\n-.. function:: tojson\n-   :noindex:\n-\n-   This function converts the given object into JSON representation.  This\n-   is for example very helpful if you try to generate JavaScript on the\n-   fly.\n-\n-   .. sourcecode:: html+jinja\n-\n-       <script type=text/javascript>\n-           doSomethingWith({{ user.username|tojson }});\n-       </script>\n-\n-   It is also safe to use the output of `|tojson` in a *single-quoted* HTML\n-   attribute:\n-\n-   .. sourcecode:: html+jinja\n-\n-       <button onclick='doSomethingWith({{ user.username|tojson }})'>\n-           Click me\n-       </button>\n-\n-   Note that in versions of Flask prior to 0.10, if using the output of\n-   ``|tojson`` inside ``script``, make sure to disable escaping with ``|safe``.\n-   In Flask 0.10 and above, this happens automatically.\n \n Controlling Autoescaping\n ------------------------\n""",1.0,1.0
src/flask/app.py,src/flask/app.py,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","'@@ -681,7 +681,7 @@ class Flask(Scaffold):\n             session=session,\n             g=g,\n         )\n-        rv.filters[""tojson""] = json.tojson_filter\n+        rv.policies[""json.dumps_function""] = json.dumps\n         return rv\n \n     def create_global_jinja_loader(self):\n'",3.0,3.0
src/flask/json/__init__.py,src/flask/json/__init__.py,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","'@@ -5,7 +5,7 @@ import warnings\n from datetime import date\n from datetime import datetime\n \n-from markupsafe import Markup\n+from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n from werkzeug.http import http_date\n \n from ..globals import current_app\n@@ -234,30 +234,28 @@ def load(fp, app=None, **kwargs):\n     return _json.load(fp, **kwargs)\n \n \n-_htmlsafe_map = str.maketrans(\n-    {""<"": ""\\\\u003c"", "">"": ""\\\\u003e"", ""&"": ""\\\\u0026"", ""\'"": ""\\\\u0027""}\n-)\n-\n-\n def htmlsafe_dumps(obj, **kwargs):\n-    """"""Serialize an object to a string of JSON, replacing HTML-unsafe\n-    characters with Unicode escapes. Otherwise behaves the same as\n-    :func:`dumps`.\n+    """"""Serialize an object to a string of JSON with :func:`dumps`, then\n+    replace HTML-unsafe characters with Unicode escapes and mark the\n+    result safe with :class:`~markupsafe.Markup`.\n \n-    This is available in templates as the ``|tojson`` filter, which will\n-    also mark the result with ``|safe``.\n+    This is available in templates as the ``|tojson`` filter.\n \n     The returned string is safe to render in HTML documents and\n     ``<script>`` tags. The exception is in HTML attributes that are\n     double quoted; either use single quotes or the ``|forceescape``\n     filter.\n \n+    .. versionchanged:: 2.0\n+        Uses :func:`jinja2.utils.htmlsafe_json_dumps`. The returned\n+        value is marked safe by wrapping in :class:`~markupsafe.Markup`.\n+\n     .. versionchanged:: 0.10\n         Single quotes are escaped, making this safe to use in HTML,\n         ``<script>`` tags, and single-quoted attributes without further\n         escaping.\n     """"""\n-    return dumps(obj, **kwargs).translate(_htmlsafe_map)\n+    return _jinja_htmlsafe_dumps(obj, dumps=dumps, **kwargs)\n \n \n def htmlsafe_dump(obj, fp, **kwargs):\n@@ -335,7 +333,3 @@ def jsonify(*args, **kwargs):\n         f""{dumps(data, indent=indent, separators=separators)}\\n"",\n         mimetype=current_app.config[""JSONIFY_MIMETYPE""],\n     )\n-\n-\n-def tojson_filter(obj, **kwargs):\n-    return Markup(htmlsafe_dumps(obj, **kwargs))\n'",3.8181818181818183,4.1
tests/test_json.py,tests/test_json.py,b473e7c97c7c557e64fb84236c7d346b6ad16736,fdf5d11b515aa2d0937ccc31ef7f20b94d3a8794,"""use Jinja's tojson filter""","'@@ -204,24 +204,17 @@ def test_json_attr(app, client):\n     assert rv.data == b""3""\n \n \n-def test_template_escaping(app, req_ctx):\n-    render = flask.render_template_string\n-    rv = flask.json.htmlsafe_dumps(""</script>"")\n-    assert rv == \'""\\\\u003c/script\\\\u003e""\'\n-    rv = render(\'{{ ""</script>""|tojson }}\')\n-    assert rv == \'""\\\\u003c/script\\\\u003e""\'\n-    rv = render(\'{{ ""<\\0/script>""|tojson }}\')\n-    assert rv == \'""\\\\u003c\\\\u0000/script\\\\u003e""\'\n-    rv = render(\'{{ ""<!--<script>""|tojson }}\')\n-    assert rv == \'""\\\\u003c!--\\\\u003cscript\\\\u003e""\'\n-    rv = render(\'{{ ""&""|tojson }}\')\n-    assert rv == \'""\\\\u0026""\'\n-    rv = render(\'{{ ""\\\'""|tojson }}\')\n-    assert rv == \'""\\\\u0027""\'\n-    rv = render(\n-        ""<a ng-data=\'{{ data|tojson }}\'></a>"", data={""x"": [""foo"", ""bar"", ""baz\'""]}\n+def test_tojson_filter(app, req_ctx):\n+    # The tojson filter is tested in Jinja, this confirms that it\'s\n+    # using Flask\'s dumps.\n+    rv = flask.render_template_string(\n+        ""const data = {{ data|tojson }};"",\n+        data={""name"": ""</script>"", ""time"": datetime.datetime(2021, 2, 1, 7, 15)},\n+    )\n+    assert rv == (\n+        \'const data = {""name"": ""\\\\u003c/script\\\\u003e"",\'\n+        \' ""time"": ""Mon, 01 Feb 2021 07:15:00 GMT""};\'\n     )\n-    assert rv == \'<a ng-data=\\\'{""x"": [""foo"", ""bar"", ""baz\\\\u0027""]}\\\'></a>\'\n \n \n def test_json_customization(app, client):\n'",1.2727272727272727,1.2727272727272727
tests/test_regression.py,tests/test_regression.py,0ee1b0b5d9712b6cf2f22429db98549e1a0c8cb8,192f4ae0b2a4e7d73c0b0472e53e33250175d786,'remove test relying on Werkzeug Local internals',"'@@ -1,59 +1,5 @@\n-import gc\n-import platform\n-import threading\n-\n-import pytest\n-\n import flask\n \n-_gc_lock = threading.Lock()\n-\n-\n-class assert_no_leak:\n-    def __enter__(self):\n-        gc.disable()\n-        _gc_lock.acquire()\n-        loc = flask._request_ctx_stack._local\n-\n-        # Force Python to track this dictionary at all times.\n-        # This is necessary since Python only starts tracking\n-        # dicts if they contain mutable objects.  It\'s a horrible,\n-        # horrible hack but makes this kinda testable.\n-        loc.__storage__[""FOOO""] = [1, 2, 3]\n-\n-        gc.collect()\n-        self.old_objects = len(gc.get_objects())\n-\n-    def __exit__(self, exc_type, exc_value, tb):\n-        gc.collect()\n-        new_objects = len(gc.get_objects())\n-        if new_objects > self.old_objects:\n-            pytest.fail(""Example code leaked"")\n-        _gc_lock.release()\n-        gc.enable()\n-\n-\n-@pytest.mark.skipif(platform.python_implementation() == ""PyPy"", reason=""CPython only"")\n-def test_memory_consumption():\n-    app = flask.Flask(__name__)\n-\n-    @app.route(""/"")\n-    def index():\n-        return flask.render_template(""simple_template.html"", whiskey=42)\n-\n-    def fire():\n-        with app.test_client() as c:\n-            rv = c.get(""/"")\n-            assert rv.status_code == 200\n-            assert rv.data == b""<h1>42</h1>""\n-\n-    # Trigger caches\n-    fire()\n-\n-    with assert_no_leak():\n-        for _x in range(10):\n-            fire()\n-\n \n def test_aborting(app):\n     class Foo(Exception):\n'",1.2222222222222223,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,3fe23bf899d3454eb7e7fd1eb0b7a812497cd365,ff3fb96896ef2814b695c0689009434368ca9ca3,'[pre-commit.ci] pre-commit autoupdate',"'@@ -1,11 +1,11 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.9.0\n+    rev: v2.10.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.3.6\n+    rev: v2.4.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,bfd4dc6d3065b87130b246f377cfc250fecec58b,ee089488ad948dfeac4cddd53ae0f07935ed2ab5,'update test config',"'@@ -42,14 +42,5 @@ jobs:\n         with:\n           path: ${{ steps.pip-cache.outputs.dir }}\n           key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n-      - name: set full Python version in PY env var\n-        # See https://pre-commit.com/#github-actions-example\n-        run: echo ""PY=$(python -VV | sha256sum | cut -d\' \' -f1)"" >> $GITHUB_ENV\n-      - name: cache pre-commit\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.cache/pre-commit\n-          key: pre-commit|${{ env.PY }}|${{ hashFiles(\'.pre-commit-config.yaml\') }}\n-        if: matrix.tox == \'style\'\n       - run: pip install tox\n       - run: tox -e ${{ matrix.tox }}\n'",0,0
tox.ini,tox.ini,bfd4dc6d3065b87130b246f377cfc250fecec58b,ee089488ad948dfeac4cddd53ae0f07935ed2ab5,'update test config',"'@@ -15,11 +15,9 @@ deps =\n     https://github.com/pallets/itsdangerous/archive/master.tar.gz\n     https://github.com/pallets/click/archive/master.tar.gz\n \n-commands =\n-    pip install -q -e examples/tutorial[test]\n-    pip install -q -e examples/javascript[test]\n-\n-    pytest --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n+    examples/tutorial[test]\n+    examples/javascript[test]\n+commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n \n [testenv:style]\n deps = pre-commit\n'",0,0
requirements/dev.txt,requirements/dev.txt,3c00658772983f95016d300a87951da45e8d0701,dbe76bb75d597401d33ef428d79540797e9297b3,'update requirements',"'@@ -8,17 +8,17 @@ alabaster==0.7.12\n     # via sphinx\n appdirs==1.4.4\n     # via virtualenv\n-attrs==20.2.0\n+attrs==20.3.0\n     # via pytest\n-babel==2.8.0\n+babel==2.9.0\n     # via sphinx\n blinker==1.4\n     # via -r requirements/tests.in\n-certifi==2020.6.20\n+certifi==2020.12.5\n     # via requests\n cfgv==3.2.0\n     # via pre-commit\n-chardet==3.0.4\n+chardet==4.0.0\n     # via requests\n click==7.1.2\n     # via pip-tools\n@@ -32,7 +32,7 @@ filelock==3.0.12\n     #   virtualenv\n greenlet==1.0.0\n     # via -r requirements/tests.in\n-identify==1.5.6\n+identify==1.5.13\n     # via pre-commit\n idna==2.10\n     # via requests\n@@ -61,13 +61,13 @@ pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.10.0\n+pre-commit==2.10.1\n     # via -r requirements/dev.in\n-py==1.9.0\n+py==1.10.0\n     # via\n     #   pytest\n     #   tox\n-pygments==2.7.2\n+pygments==2.7.4\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -77,21 +77,21 @@ pytest==6.2.2\n     # via -r requirements/tests.in\n python-dotenv==0.15.0\n     # via -r requirements/tests.in\n-pytz==2020.1\n+pytz==2021.1\n     # via babel\n-pyyaml==5.3.1\n+pyyaml==5.4.1\n     # via pre-commit\n-requests==2.24.0\n+requests==2.25.1\n     # via sphinx\n six==1.15.0\n     # via\n     #   tox\n     #   virtualenv\n-snowballstemmer==2.0.0\n+snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.0.0\n+sphinx-tabs==2.0.1\n     # via -r requirements/docs.in\n sphinx==3.4.3\n     # via\n@@ -119,11 +119,11 @@ toml==0.10.2\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.21.3\n+tox==3.21.4\n     # via -r requirements/dev.in\n-urllib3==1.25.11\n+urllib3==1.26.3\n     # via requests\n-virtualenv==20.1.0\n+virtualenv==20.4.2\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,3c00658772983f95016d300a87951da45e8d0701,dbe76bb75d597401d33ef428d79540797e9297b3,'update requirements',"'@@ -6,11 +6,11 @@\n #\n alabaster==0.7.12\n     # via sphinx\n-babel==2.8.0\n+babel==2.9.0\n     # via sphinx\n-certifi==2020.6.20\n+certifi==2020.12.5\n     # via requests\n-chardet==3.0.4\n+chardet==4.0.0\n     # via requests\n docutils==0.16\n     # via sphinx\n@@ -29,21 +29,21 @@ packaging==20.9\n     #   sphinx\n pallets-sphinx-themes==1.2.3\n     # via -r requirements/docs.in\n-pygments==2.7.2\n+pygments==2.7.4\n     # via\n     #   sphinx\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytz==2020.1\n+pytz==2021.1\n     # via babel\n-requests==2.24.0\n+requests==2.25.1\n     # via sphinx\n-snowballstemmer==2.0.0\n+snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.0.0\n+sphinx-tabs==2.0.1\n     # via -r requirements/docs.in\n sphinx==3.4.3\n     # via\n@@ -66,7 +66,7 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n     # via sphinx\n-urllib3==1.25.11\n+urllib3==1.26.3\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/tests.txt,requirements/tests.txt,3c00658772983f95016d300a87951da45e8d0701,dbe76bb75d597401d33ef428d79540797e9297b3,'update requirements',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile requirements/tests.in\n #\n-attrs==20.2.0\n+attrs==20.3.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n@@ -16,7 +16,7 @@ packaging==20.9\n     # via pytest\n pluggy==0.13.1\n     # via pytest\n-py==1.9.0\n+py==1.10.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,b496d8b7cb72f29dc91d2859829caedae25d62ea,3c00658772983f95016d300a87951da45e8d0701,'update contributing guide',"""@@ -7,19 +7,19 @@ Thank you for considering contributing to Flask!\n Support questions\n -----------------\n \n-Please, don't use the issue tracker for this. The issue tracker is a\n-tool to address bugs and feature requests in Flask itself. Use one of\n-the following resources for questions about using Flask or issues with\n-your own code:\n+Please don't use the issue tracker for this. The issue tracker is a tool\n+to address bugs and feature requests in Flask itself. Use one of the\n+following resources for questions about using Flask or issues with your\n+own code:\n \n -   The ``#get-help`` channel on our Discord chat:\n     https://discord.gg/pallets\n -   The mailing list flask@python.org for long term discussion or larger\n     issues.\n -   Ask on `Stack Overflow`_. Search with Google first using:\n-    ``site:stackoverflow.com python flask {search term, exception message, etc.}``\n+    ``site:stackoverflow.com flask {search term, exception message, etc.}``\n \n-.. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?sort=linked\n+.. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?tab=Frequent\n \n \n Reporting issues\n@@ -33,9 +33,9 @@ Include the following information in your post:\n     your own code.\n -   Describe what actually happened. Include the full traceback if there\n     was an exception.\n--   List your Python, Flask, and Werkzeug versions. If possible, check\n-    if this issue is already fixed in the latest releases or the latest\n-    code in the repository.\n+-   List your Python and Flask versions. If possible, check if this\n+    issue is already fixed in the latest releases or the latest code in\n+    the repository.\n \n .. _minimal reproducible example: https://stackoverflow.com/help/minimal-reproducible-example\n \n@@ -98,7 +98,7 @@ First time setup\n \n     .. tabs::\n \n-       .. group-tab:: macOS/Linux\n+       .. group-tab:: Linux/macOS\n \n           .. code-block:: text\n \n@@ -112,11 +112,12 @@ First time setup\n              > py -3 -m venv env\n              > env\\Scripts\\activate\n \n--   Install Flask in editable mode with development dependencies.\n+-   Install the development dependencies, then install Flask in editable\n+    mode.\n \n     .. code-block:: text\n \n-        $ pip install -e . -r requirements/dev.txt\n+        $ pip install -r requirements/dev.txt && pip install -e .\n \n -   Install the pre-commit hooks.\n \n@@ -125,11 +126,11 @@ First time setup\n         $ pre-commit install\n \n .. _latest version of git: https://git-scm.com/downloads\n-.. _username: https://help.github.com/en/articles/setting-your-username-in-git\n-.. _email: https://help.github.com/en/articles/setting-your-commit-email-address-in-git\n+.. _username: https://docs.github.com/en/github/using-git/setting-your-username-in-git\n+.. _email: https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address\n .. _GitHub account: https://github.com/join\n-.. _Fork: https://github.com/pallets/flask/fork\n-.. _Clone: https://help.github.com/en/articles/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n+.. _Fork: https://github.com/pallets/jinja/fork\n+.. _Clone: https://docs.github.com/en/github/getting-started-with-github/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n \n \n Start coding\n@@ -165,7 +166,7 @@ Start coding\n         $ git push --set-upstream fork your-branch-name\n \n .. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n-.. _create a pull request: https://help.github.com/en/articles/creating-a-pull-request\n+.. _create a pull request: https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request\n \n \n Running the tests\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,8d9501598ff066706c1300a9f6f5193912f2cb4d,adeaf27e767f7bd37996d999eba135d63e890408,'use rtd to build docs for prs\n\nskip code tests when only docs change',"""@@ -4,10 +4,18 @@ on:\n     branches:\n       - master\n       - '*.x'\n+    paths-ignore:\n+      - 'docs/**'\n+      - '*.md'\n+      - '*.rst'\n   pull_request:\n     branches:\n       - master\n       - '*.x'\n+    paths-ignore:\n+      - 'docs/**'\n+      - '*.md'\n+      - '*.rst'\n jobs:\n   tests:\n     name: ${{ matrix.name }}\n@@ -23,7 +31,6 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n-          - {name: Docs, python: '3.9', os: ubuntu-latest, tox: docs}\n     steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-python@v2\n""",0,0
.readthedocs.yaml,.readthedocs.yaml,8d9501598ff066706c1300a9f6f5193912f2cb4d,adeaf27e767f7bd37996d999eba135d63e890408,'use rtd to build docs for prs\n\nskip code tests when only docs change',"'@@ -6,3 +6,4 @@ python:\n       path: .\n sphinx:\n   builder: dirhtml\n+  fail_on_warning: true\n'",0,0
docs/extensiondev.rst,docs/extensiondev.rst,76abbe9062ee6752d94003c9ca72fe2db5caf100,adeaf27e767f7bd37996d999eba135d63e890408,'Remove the mention of Flask-OAuth in the extension dev docs',"'@@ -135,10 +135,7 @@ initialization functions:\n classes:\n \n     Classes work mostly like initialization functions but can later be\n-    used to further change the behavior.  For an example look at how the\n-    `OAuth extension`_ works: there is an `OAuth` object that provides\n-    some helper functions like `OAuth.remote_app` to create a reference to\n-    a remote application that uses OAuth.\n+    used to further change the behavior.\n \n What to use depends on what you have in mind.  For the SQLite 3 extension\n we will use the class-based approach because it will provide users with an\n@@ -330,7 +327,6 @@ ecosystem remain consistent and compatible.\n     supported versions.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n-.. _OAuth extension: https://pythonhosted.org/Flask-OAuth/\n .. _mailinglist: https://mail.python.org/mailman/listinfo/flask\n .. _Discord server: https://discord.gg/pallets\n .. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n'",1.6666666666666667,1.6666666666666667
README.rst,README.rst,3cd615a1d6db7e319c27bca2499ab7390065f090,8d9501598ff066706c1300a9f6f5193912f2cb4d,'update project links',"'@@ -12,6 +12,10 @@ project layout. It is up to the developer to choose the tools and\n libraries they want to use. There are many extensions provided by the\n community that make adding new functionality easy.\n \n+.. _WSGI: https://wsgi.readthedocs.io/\n+.. _Werkzeug: https://werkzeug.palletsprojects.com/\n+.. _Jinja: https://jinja.palletsprojects.com/\n+\n \n Installing\n ----------\n@@ -22,6 +26,8 @@ Install and update using `pip`_:\n \n     $ pip install -U Flask\n \n+.. _pip: https://pip.pypa.io/en/stable/quickstart/\n+\n \n A Simple Example\n ----------------\n@@ -60,21 +66,17 @@ it uses. In order to grow the community of contributors and users, and\n allow the maintainers to devote more time to the projects, `please\n donate today`_.\n \n-.. _please donate today: https://psfmember.org/civicrm/contribute/transact?reset=1&id=20\n+.. _please donate today: https://palletsprojects.com/donate\n \n \n Links\n -----\n \n-* Website: https://palletsprojects.com/p/flask/\n-* Documentation: https://flask.palletsprojects.com/\n-* Releases: https://pypi.org/project/Flask/\n-* Code: https://github.com/pallets/flask\n-* Issue tracker: https://github.com/pallets/flask/issues\n-* Test status: https://dev.azure.com/pallets/flask/_build\n-* Official chat: https://discord.gg/pallets\n-\n-.. _WSGI: https://wsgi.readthedocs.io\n-.. _Werkzeug: https://www.palletsprojects.com/p/werkzeug/\n-.. _Jinja: https://www.palletsprojects.com/p/jinja/\n-.. _pip: https://pip.pypa.io/en/stable/quickstart/\n+-   Documentation: https://flask.palletsprojects.com/\n+-   Changes: https://flask.palletsprojects.com/changes/\n+-   PyPI Releases: https://pypi.org/project/Flask/\n+-   Source Code: https://github.com/pallets/flask/\n+-   Issue Tracker: https://github.com/pallets/flask/issues/\n+-   Website: https://palletsprojects.com/p/flask/\n+-   Twitter: https://twitter.com/PalletsTeam\n+-   Chat: https://discord.gg/pallets\n'",1.0,1.0
docs/conf.py,docs/conf.py,3cd615a1d6db7e319c27bca2499ab7390065f090,8d9501598ff066706c1300a9f6f5193912f2cb4d,'update project links',"'@@ -38,11 +38,13 @@ html_theme = ""flask""\n html_theme_options = {""index_sidebar_logo"": False}\n html_context = {\n     ""project_links"": [\n-        ProjectLink(""Donate to Pallets"", ""https://palletsprojects.com/donate""),\n-        ProjectLink(""Flask Website"", ""https://palletsprojects.com/p/flask/""),\n-        ProjectLink(""PyPI releases"", ""https://pypi.org/project/Flask/""),\n+        ProjectLink(""Donate"", ""https://palletsprojects.com/donate""),\n+        ProjectLink(""PyPI Releases"", ""https://pypi.org/project/Flask/""),\n         ProjectLink(""Source Code"", ""https://github.com/pallets/flask/""),\n         ProjectLink(""Issue Tracker"", ""https://github.com/pallets/flask/issues/""),\n+        ProjectLink(""Website"", ""https://palletsprojects.com/p/flask/""),\n+        ProjectLink(""Twitter"", ""https://twitter.com/PalletsTeam""),\n+        ProjectLink(""Chat"", ""https://discord.gg/pallets""),\n     ]\n }\n html_sidebars = {\n'",3.0,3.0
setup.cfg,setup.cfg,3cd615a1d6db7e319c27bca2499ab7390065f090,8d9501598ff066706c1300a9f6f5193912f2cb4d,'update project links',"'@@ -3,9 +3,13 @@ name = Flask\n # Version needs regex in setup.py.\n url = https://palletsprojects.com/p/flask\n project_urls =\n+    Donate = https://palletsprojects.com/donate\n     Documentation = https://flask.palletsprojects.com/\n-    Code = https://github.com/pallets/flask\n-    Issue tracker = https://github.com/pallets/flask/issues\n+    Changes = https://flask.palletsprojects.com/changes/\n+    Source Code = https://github.com/pallets/flask/\n+    Issue Tracker = https://github.com/pallets/flask/issues/\n+    Twitter = https://twitter.com/PalletsTeam\n+    Chat = https://discord.gg/pallets\n license = BSD-3-Clause\n author = Armin Ronacher\n author_email = armin.ronacher@active-4.com\n'",0,0
MANIFEST.in,MANIFEST.in,9e7d3a6b694b27f997266889ae463e06dd83a189,3cd615a1d6db7e319c27bca2499ab7390065f090,'docs rename changelog to changes',"'@@ -1,6 +1,5 @@\n include CHANGES.rst\n include CONTRIBUTING.rst\n-include LICENSE.rst\n include tox.ini\n include requirements/*.txt\n graft artwork\n'",0,0
setup.cfg,setup.cfg,0c7cbe2d1186f53efcd0da0589a2eaf0382e4d39,9e7d3a6b694b27f997266889ae463e06dd83a189,'move version to setup.cfg',"'@@ -1,6 +1,6 @@\n [metadata]\n name = Flask\n-# Version needs regex in setup.py.\n+version = attr: flask.__version__\n url = https://palletsprojects.com/p/flask\n project_urls =\n     Donate = https://palletsprojects.com/donate\n'",0,0
setup.py,setup.py,0c7cbe2d1186f53efcd0da0589a2eaf0382e4d39,9e7d3a6b694b27f997266889ae463e06dd83a189,'move version to setup.cfg',"'@@ -1,14 +1,8 @@\n-import re\n-\n from setuptools import setup\n \n-with open(""src/flask/__init__.py"", encoding=""utf8"") as f:\n-    version = re.search(r\'__version__ = ""(.*?)""\', f.read()).group(1)\n-\n # Metadata goes in setup.cfg. These are here for GitHub\'s dependency graph.\n setup(\n     name=""Flask"",\n-    version=version,\n     install_requires=[\n         ""Werkzeug>=0.15"",\n         ""Jinja2>=2.10.1"",\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,49b7341a491e01cd6a08238ca63bd46ae53a009f,dcd3b5c8f86c70c34a4487a943300cbf6adce9aa,'update json.dumps for http_date changes',"'@@ -3,7 +3,6 @@ import json as _json\n import uuid\n import warnings\n from datetime import date\n-from datetime import datetime\n \n from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n from werkzeug.http import http_date\n@@ -41,10 +40,8 @@ class JSONEncoder(_json.JSONEncoder):\n         overriding how basic types like ``str`` or ``list`` are\n         serialized, they are handled before this method.\n         """"""\n-        if isinstance(o, datetime):\n-            return http_date(o.utctimetuple())\n         if isinstance(o, date):\n-            return http_date(o.timetuple())\n+            return http_date(o)\n         if isinstance(o, uuid.UUID):\n             return str(o)\n         if dataclasses and dataclasses.is_dataclass(o):\n'",4.1,4.0
tests/test_json.py,tests/test_json.py,49b7341a491e01cd6a08238ca63bd46ae53a009f,dcd3b5c8f86c70c34a4487a943300cbf6adce9aa,'update json.dumps for http_date changes',"'@@ -129,19 +129,16 @@ def test_jsonify_arrays(app, client):\n         assert flask.json.loads(rv.data) == a_list\n \n \n-def test_jsonifytypes(app, client):\n-    """"""Test jsonify with datetime.date and datetime.datetime types.""""""\n-    test_dates = (\n-        datetime.datetime(1973, 3, 11, 6, 30, 45),\n-        datetime.date(1975, 1, 5),\n-    )\n+@pytest.mark.parametrize(\n+    ""value"", [datetime.datetime(1973, 3, 11, 6, 30, 45), datetime.date(1975, 1, 5)]\n+)\n+def test_jsonify_datetime(app, client, value):\n+    @app.route(""/"")\n+    def index():\n+        return flask.jsonify(value=value)\n \n-    for i, d in enumerate(test_dates):\n-        url = f""/datetest{i}""\n-        app.add_url_rule(url, str(i), lambda val=d: flask.jsonify(x=val))\n-        rv = client.get(url)\n-        assert rv.mimetype == ""application/json""\n-        assert flask.json.loads(rv.data)[""x""] == http_date(d.timetuple())\n+    r = client.get()\n+    assert r.json[""value""] == http_date(value)\n \n \n class FixedOffset(datetime.tzinfo):\n'",1.2727272727272727,1.2444444444444445
tests/test_json_tag.py,tests/test_json_tag.py,49b7341a491e01cd6a08238ca63bd46ae53a009f,dcd3b5c8f86c70c34a4487a943300cbf6adce9aa,'update json.dumps for http_date changes',"'@@ -1,4 +1,5 @@\n from datetime import datetime\n+from datetime import timezone\n from uuid import uuid4\n \n import pytest\n@@ -20,7 +21,7 @@ from flask.json.tag import TaggedJSONSerializer\n         b""\\xff"",\n         Markup(""<html>""),\n         uuid4(),\n-        datetime.utcnow().replace(microsecond=0),\n+        datetime.now(tz=timezone.utc).replace(microsecond=0),\n     ),\n )\n def test_dump_load_unchanged(data):\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,6e7869ec49a42c1d7964fb8a62eded25b0321970,4846e25e92638a1db5aa2b41f65eed7585366109,'Bump tox from 3.21.4 to 3.22.0\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.21.4 to 3.22.0.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.21.4...3.22.0)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -119,7 +119,7 @@ toml==0.10.2\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.21.4\n+tox==3.22.0\n     # via -r requirements/dev.in\n urllib3==1.26.3\n     # via requests\n'",0,0
requirements/dev.txt,requirements/dev.txt,1748bb02eb29760796c2e6f59e7c9d77ccaeda2e,4846e25e92638a1db5aa2b41f65eed7585366109,'Bump sphinx from 3.4.3 to 3.5.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.3 to 3.5.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.3...v3.5.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -93,7 +93,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==2.0.1\n     # via -r requirements/docs.in\n-sphinx==3.4.3\n+sphinx==3.5.1\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.txt,requirements/docs.txt,1748bb02eb29760796c2e6f59e7c9d77ccaeda2e,4846e25e92638a1db5aa2b41f65eed7585366109,'Bump sphinx from 3.4.3 to 3.5.1\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.4.3 to 3.5.1.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.4.3...v3.5.1)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -45,7 +45,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==2.0.1\n     # via -r requirements/docs.in\n-sphinx==3.4.3\n+sphinx==3.5.1\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
CHANGES.rst,CHANGES.rst,705e52684a9063889c16a289695a2e4429df6887,82d69cd06c7ff738774c5ab7ef48bc6251f5c014,"'Add syntatic sugar for route registration\n\nThis takes a popular API whereby instead of passing the HTTP method as\nan argument to route it is instead used as the method name i.e.\n\n    @app.route(""/"", methods=[""POST""])\n\nis now writeable as,\n\n    @app.post(""/"")\n\nThis is simply syntatic sugar, it doesn\'t do anything else, but makes\nit slightly easier for users.\n\nI\'ve included all the methods that are relevant and aren\'t auto\ngenerated i.e. not connect, head, options, and trace.'","'@@ -64,6 +64,9 @@ Unreleased\n     This could allow a session interface to change behavior based on\n     ``request.endpoint``. :issue:`3776`\n -   Use Jinja\'s implementation of the ``|tojson`` filter. :issue:`3881`\n+-   Add route decorators for common HTTP methods. For example,\n+    ``@app.post(""/login"")`` is a shortcut for\n+    ``@app.route(""/login"", methods=[""POST""])``. :pr:`3907`\n \n \n Version 1.1.2\n'",0,0
src/flask/scaffold.py,src/flask/scaffold.py,705e52684a9063889c16a289695a2e4429df6887,82d69cd06c7ff738774c5ab7ef48bc6251f5c014,"'Add syntatic sugar for route registration\n\nThis takes a popular API whereby instead of passing the HTTP method as\nan argument to route it is instead used as the method name i.e.\n\n    @app.route(""/"", methods=[""POST""])\n\nis now writeable as,\n\n    @app.post(""/"")\n\nThis is simply syntatic sugar, it doesn\'t do anything else, but makes\nit slightly easier for users.\n\nI\'ve included all the methods that are relevant and aren\'t auto\ngenerated i.e. not connect, head, options, and trace.'","'@@ -146,6 +146,47 @@ class Scaffold(_PackageBoundObject):\n     def _is_setup_finished(self):\n         raise NotImplementedError\n \n+    def _method_route(self, method, rule, options):\n+        if ""methods"" in options:\n+            raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n+\n+        return self.route(rule, methods=[method], **options)\n+\n+    def get(self, rule, **options):\n+        """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return self._method_route(""GET"", rule, options)\n+\n+    def post(self, rule, **options):\n+        """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return self._method_route(""POST"", rule, options)\n+\n+    def put(self, rule, **options):\n+        """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return self._method_route(""PUT"", rule, options)\n+\n+    def delete(self, rule, **options):\n+        """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return self._method_route(""DELETE"", rule, options)\n+\n+    def patch(self, rule, **options):\n+        """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return self._method_route(""PATCH"", rule, options)\n+\n     def route(self, rule, **options):\n         """"""A decorator that is used to register a view function for a\n         given URL rule.  This does the same thing as :meth:`add_url_rule`\n'",1.2380952380952381,1.2222222222222223
tests/test_basic.py,tests/test_basic.py,705e52684a9063889c16a289695a2e4429df6887,82d69cd06c7ff738774c5ab7ef48bc6251f5c014,"'Add syntatic sugar for route registration\n\nThis takes a popular API whereby instead of passing the HTTP method as\nan argument to route it is instead used as the method name i.e.\n\n    @app.route(""/"", methods=[""POST""])\n\nis now writeable as,\n\n    @app.post(""/"")\n\nThis is simply syntatic sugar, it doesn\'t do anything else, but makes\nit slightly easier for users.\n\nI\'ve included all the methods that are relevant and aren\'t auto\ngenerated i.e. not connect, head, options, and trace.'","'@@ -48,6 +48,23 @@ def test_options_on_multiple_rules(app, client):\n     assert sorted(rv.allow) == [""GET"", ""HEAD"", ""OPTIONS"", ""POST"", ""PUT""]\n \n \n+@pytest.mark.parametrize(""method"", [""get"", ""post"", ""put"", ""delete"", ""patch""])\n+def test_method_route(app, client, method):\n+    method_route = getattr(app, method)\n+    client_method = getattr(client, method)\n+\n+    @method_route(""/"")\n+    def hello():\n+        return ""Hello""\n+\n+    assert client_method(""/"").data == b""Hello""\n+\n+\n+def test_method_route_no_methods(app):\n+    with pytest.raises(TypeError):\n+        app.get(""/"", methods=[""GET"", ""POST""])\n+\n+\n def test_provide_automatic_options_attr():\n     app = flask.Flask(__name__)\n \n'",1.0687022900763359,1.0679245283018868
src/flask/app.py,src/flask/app.py,fd62210f583e90764be6e8d9f295f37f33a65e48,5fea7caba29b872e5b2e3511d1c1732d0fe1ba3e,"'Utilise defaultdicts\n\nThis code originates from the Python 2.4 supporting version of Flask,\nwith defaultdicts being added in 2.5. Using defaultdict makes the\nintentional usage clearer, and slightly simplifies the code.'","'@@ -1292,7 +1292,7 @@ class Flask(Scaffold):\n             (request.blueprint, None),\n             (None, None),\n         ):\n-            handler_map = self.error_handler_spec.setdefault(name, {}).get(c)\n+            handler_map = self.error_handler_spec[name][c]\n \n             if not handler_map:\n                 continue\n@@ -1753,10 +1753,10 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        funcs = self.url_default_functions.get(None, ())\n+        funcs = self.url_default_functions[None]\n         if ""."" in endpoint:\n             bp = endpoint.rsplit(""."", 1)[0]\n-            funcs = chain(funcs, self.url_default_functions.get(bp, ()))\n+            funcs = chain(funcs, self.url_default_functions[bp])\n         for func in funcs:\n             func(endpoint, values)\n \n@@ -1794,13 +1794,13 @@ class Flask(Scaffold):\n \n         bp = _request_ctx_stack.top.request.blueprint\n \n-        funcs = self.url_value_preprocessors.get(None, ())\n+        funcs = self.url_value_preprocessors[None]\n         if bp is not None and bp in self.url_value_preprocessors:\n             funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n-        funcs = self.before_request_funcs.get(None, ())\n+        funcs = self.before_request_funcs[None]\n         if bp is not None and bp in self.before_request_funcs:\n             funcs = chain(funcs, self.before_request_funcs[bp])\n         for func in funcs:\n@@ -1857,7 +1857,7 @@ class Flask(Scaffold):\n         """"""\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n-        funcs = reversed(self.teardown_request_funcs.get(None, ()))\n+        funcs = reversed(self.teardown_request_funcs[None])\n         bp = _request_ctx_stack.top.request.blueprint\n         if bp is not None and bp in self.teardown_request_funcs:\n             funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n'",3.0,3.0
src/flask/blueprints.py,src/flask/blueprints.py,fd62210f583e90764be6e8d9f295f37f33a65e48,5fea7caba29b872e5b2e3511d1c1732d0fe1ba3e,"'Utilise defaultdicts\n\nThis code originates from the Python 2.4 supporting version of Flask,\nwith defaultdicts being added in 2.5. Using defaultdict makes the\nintentional usage clearer, and slightly simplifies the code.'","'@@ -251,7 +251,7 @@ class Blueprint(Scaffold):\n             """"""\n             for key, values in self_dict.items():\n                 key = self.name if key is None else f""{self.name}.{key}""\n-                app_dict.setdefault(key, []).extend(values)\n+                app_dict[key].extend(values)\n \n         def merge_dict_nested(self_dict, app_dict):\n             """"""Merges self_dict into app_dict. Replaces None keys with self.name.\n'",1.7878787878787878,1.7878787878787878
src/flask/scaffold.py,src/flask/scaffold.py,fd62210f583e90764be6e8d9f295f37f33a65e48,5fea7caba29b872e5b2e3511d1c1732d0fe1ba3e,"'Utilise defaultdicts\n\nThis code originates from the Python 2.4 supporting version of Flask,\nwith defaultdicts being added in 2.5. Using defaultdict makes the\nintentional usage clearer, and slightly simplifies the code.'","'@@ -1,3 +1,4 @@\n+from collections import defaultdict\n from functools import update_wrapper\n \n from werkzeug.exceptions import default_exceptions\n@@ -86,21 +87,21 @@ class Scaffold(_PackageBoundObject):\n         #:\n         #: To register an error handler, use the :meth:`errorhandler`\n         #: decorator.\n-        self.error_handler_spec = {}\n+        self.error_handler_spec = defaultdict(lambda: defaultdict(dict))\n \n         #: A dictionary with lists of functions that will be called at the\n         #: beginning of each request. The key of the dictionary is the name of\n         #: the blueprint this function is active for, or ``None`` for all\n         #: requests. To register a function, use the :meth:`before_request`\n         #: decorator.\n-        self.before_request_funcs = {}\n+        self.before_request_funcs = defaultdict(list)\n \n         #: A dictionary with lists of functions that should be called after\n         #: each request.  The key of the dictionary is the name of the blueprint\n         #: this function is active for, ``None`` for all requests.  This can for\n         #: example be used to close database connections. To register a function\n         #: here, use the :meth:`after_request` decorator.\n-        self.after_request_funcs = {}\n+        self.after_request_funcs = defaultdict(list)\n \n         #: A dictionary with lists of functions that are called after\n         #: each request, even if an exception has occurred. The key of the\n@@ -112,7 +113,7 @@ class Scaffold(_PackageBoundObject):\n         #: :meth:`teardown_request` decorator.\n         #:\n         #: .. versionadded:: 0.7\n-        self.teardown_request_funcs = {}\n+        self.teardown_request_funcs = defaultdict(list)\n \n         #: A dictionary with list of functions that are called without argument\n         #: to populate the template context.  The key of the dictionary is the\n@@ -120,7 +121,9 @@ class Scaffold(_PackageBoundObject):\n         #: requests.  Each returns a dictionary that the template context is\n         #: updated with.  To register a function here, use the\n         #: :meth:`context_processor` decorator.\n-        self.template_context_processors = {None: [_default_template_ctx_processor]}\n+        self.template_context_processors = defaultdict(\n+            list, {None: [_default_template_ctx_processor]}\n+        )\n \n         #: A dictionary with lists of functions that are called before the\n         #: :attr:`before_request_funcs` functions. The key of the dictionary is\n@@ -129,7 +132,7 @@ class Scaffold(_PackageBoundObject):\n         #: :meth:`url_value_preprocessor`.\n         #:\n         #: .. versionadded:: 0.7\n-        self.url_value_preprocessors = {}\n+        self.url_value_preprocessors = defaultdict(list)\n \n         #: A dictionary with lists of functions that can be used as URL value\n         #: preprocessors.  The key ``None`` here is used for application wide\n@@ -141,7 +144,7 @@ class Scaffold(_PackageBoundObject):\n         #: automatically again that were removed that way.\n         #:\n         #: .. versionadded:: 0.7\n-        self.url_default_functions = {}\n+        self.url_default_functions = defaultdict(list)\n \n     def _is_setup_finished(self):\n         raise NotImplementedError\n@@ -258,7 +261,7 @@ class Scaffold(_PackageBoundObject):\n         non-None value, the value is handled as if it was the return value from\n         the view, and further request handling is stopped.\n         """"""\n-        self.before_request_funcs.setdefault(None, []).append(f)\n+        self.before_request_funcs[None].append(f)\n         return f\n \n     @setupmethod\n@@ -272,7 +275,7 @@ class Scaffold(_PackageBoundObject):\n         As of Flask 0.7 this function might not be executed at the end of the\n         request in case an unhandled exception occurred.\n         """"""\n-        self.after_request_funcs.setdefault(None, []).append(f)\n+        self.after_request_funcs[None].append(f)\n         return f\n \n     @setupmethod\n@@ -311,7 +314,7 @@ class Scaffold(_PackageBoundObject):\n            debugger can still access it.  This behavior can be controlled\n            by the ``PRESERVE_CONTEXT_ON_EXCEPTION`` configuration variable.\n         """"""\n-        self.teardown_request_funcs.setdefault(None, []).append(f)\n+        self.teardown_request_funcs[None].append(f)\n         return f\n \n     @setupmethod\n@@ -334,7 +337,7 @@ class Scaffold(_PackageBoundObject):\n         The function is passed the endpoint name and values dict. The return\n         value is ignored.\n         """"""\n-        self.url_value_preprocessors.setdefault(None, []).append(f)\n+        self.url_value_preprocessors[None].append(f)\n         return f\n \n     @setupmethod\n@@ -343,7 +346,7 @@ class Scaffold(_PackageBoundObject):\n         application.  It\'s called with the endpoint and values and should\n         update the values passed in place.\n         """"""\n-        self.url_default_functions.setdefault(None, []).append(f)\n+        self.url_default_functions[None].append(f)\n         return f\n \n     @setupmethod\n@@ -416,8 +419,7 @@ class Scaffold(_PackageBoundObject):\n                 "" instead.""\n             )\n \n-        handlers = self.error_handler_spec.setdefault(key, {}).setdefault(code, {})\n-        handlers[exc_class] = f\n+        self.error_handler_spec[key][code][exc_class] = f\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n'",1.2222222222222223,1.2222222222222223
src/flask/app.py,src/flask/app.py,83d358d2c43c79b7d7fe5365e079447296c65eaf,fd62210f583e90764be6e8d9f295f37f33a65e48,"""remove _blueprint_order, dicts are ordered\n\nThis code originates from supporting Python 2.4. Dicts are ordered in\nsupported Pythons as of 3.6. An OrderedDict could be used to indicate\nthat order matters, but is not since we don't rely on the implementation\ndifferences.""","'@@ -430,13 +430,13 @@ class Flask(Scaffold):\n         #: .. versionadded:: 0.11\n         self.shell_context_processors = []\n \n-        #: all the attached blueprints in a dictionary by name.  Blueprints\n-        #: can be attached multiple times so this dictionary does not tell\n-        #: you how often they got attached.\n+        #: Maps registered blueprint names to blueprint objects. The\n+        #: dict retains the order the blueprints were registered in.\n+        #: Blueprints can be registered multiple times, this dict does\n+        #: not track how often they were attached.\n         #:\n         #: .. versionadded:: 0.7\n         self.blueprints = {}\n-        self._blueprint_order = []\n \n         #: a place where extensions can store application specific state.  For\n         #: example this is where an extension could store database engines and\n@@ -997,7 +997,6 @@ class Flask(Scaffold):\n             )\n         else:\n             self.blueprints[blueprint.name] = blueprint\n-            self._blueprint_order.append(blueprint)\n             first_registration = True\n \n         blueprint.register(self, options, first_registration)\n@@ -1007,7 +1006,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.11\n         """"""\n-        return iter(self._blueprint_order)\n+        return self.blueprints.values()\n \n     @setupmethod\n     def add_url_rule(\n'",3.0,3.0
src/flask/cli.py,src/flask/cli.py,33145c36991c503aeb1e5870c27b720ec80d5079,6d9d79c70da0104474564dfed510fc74eef1cb85,'Set default encoding to UTF-8 for load_dotenv',"'@@ -619,6 +619,9 @@ def load_dotenv(path=None):\n         Returns ``False`` when python-dotenv is not installed, or when\n         the given path isn\'t a file.\n \n+    .. versionchanged:: 2.0\n+        When loading the env files, set the default encoding to UTF-8.\n+\n     .. versionadded:: 1.0\n     """"""\n     if dotenv is None:\n@@ -636,7 +639,7 @@ def load_dotenv(path=None):\n     # else False\n     if path is not None:\n         if os.path.isfile(path):\n-            return dotenv.load_dotenv(path)\n+            return dotenv.load_dotenv(path, encoding=""utf-8"")\n \n         return False\n \n@@ -651,7 +654,7 @@ def load_dotenv(path=None):\n         if new_dir is None:\n             new_dir = os.path.dirname(path)\n \n-        dotenv.load_dotenv(path)\n+        dotenv.load_dotenv(path, encoding=""utf-8"")\n \n     return new_dir is not None  # at least one file was located and loaded\n \n'",4.138888888888889,4.138888888888889
tests/test_apps/.env,tests/test_apps/.env,33145c36991c503aeb1e5870c27b720ec80d5079,6d9d79c70da0104474564dfed510fc74eef1cb85,'Set default encoding to UTF-8 for load_dotenv',"'@@ -1,3 +1,4 @@\n FOO=env\n SPAM=1\n EGGS=2\n+HAM=火腿\n'",0,0
tests/test_cli.py,tests/test_cli.py,33145c36991c503aeb1e5870c27b720ec80d5079,6d9d79c70da0104474564dfed510fc74eef1cb85,'Set default encoding to UTF-8 for load_dotenv',"'@@ -505,7 +505,7 @@ need_dotenv = pytest.mark.skipif(dotenv is None, reason=""dotenv is not installed\n @need_dotenv\n def test_load_dotenv(monkeypatch):\n     # can\'t use monkeypatch.delitem since the keys don\'t exist yet\n-    for item in (""FOO"", ""BAR"", ""SPAM""):\n+    for item in (""FOO"", ""BAR"", ""SPAM"", ""HAM""):\n         monkeypatch._setitem.append((os.environ, item, notset))\n \n     monkeypatch.setenv(""EGGS"", ""3"")\n@@ -520,7 +520,8 @@ def test_load_dotenv(monkeypatch):\n     assert os.environ[""SPAM""] == ""1""\n     # set manually, files don\'t overwrite\n     assert os.environ[""EGGS""] == ""3""\n-\n+    # test env file encoding\n+    assert os.environ[""HAM""] == ""火腿""\n     # Non existent file should not load\n     assert not load_dotenv(""non-existent-file"")\n \n'",1.046875,1.046875
src/flask/app.py,src/flask/app.py,9f7c602a84faa8371be4ece23e4405282d1283d2,3316604822644889a373018490f2534a1dafd9aa,'move _PackageBoundObject into Scaffold',"'@@ -29,7 +29,6 @@ from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n from .globals import session\n-from .helpers import find_package\n from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_flashed_messages\n@@ -40,6 +39,7 @@ from .json import jsonify\n from .logging import create_logger\n from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n+from .scaffold import find_package\n from .scaffold import Scaffold\n from .scaffold import setupmethod\n from .sessions import SecureCookieSessionInterface\n@@ -2026,6 +2026,3 @@ class Flask(Scaffold):\n         WSGI application. This calls :meth:`wsgi_app` which can be\n         wrapped to applying middleware.""""""\n         return self.wsgi_app(environ, start_response)\n-\n-    def __repr__(self):\n-        return f""<{type(self).__name__} {self.name!r}>""\n'",3.0,3.0307692307692307
src/flask/helpers.py,src/flask/helpers.py,9f7c602a84faa8371be4ece23e4405282d1283d2,3316604822644889a373018490f2534a1dafd9aa,'move _PackageBoundObject into Scaffold',"'@@ -1,13 +1,10 @@\n import os\n-import pkgutil\n import socket\n-import sys\n import warnings\n from functools import update_wrapper\n from threading import RLock\n \n import werkzeug.utils\n-from jinja2 import FileSystemLoader\n from werkzeug.exceptions import NotFound\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n@@ -677,157 +674,6 @@ def send_from_directory(directory, path, **kwargs):\n     )\n \n \n-def get_root_path(import_name):\n-    """"""Returns the path to a package or cwd if that cannot be found.  This\n-    returns the path of a package or the folder that contains a module.\n-\n-    Not to be confused with the package path returned by :func:`find_package`.\n-    """"""\n-    # Module already imported and has a file attribute.  Use that first.\n-    mod = sys.modules.get(import_name)\n-    if mod is not None and hasattr(mod, ""__file__""):\n-        return os.path.dirname(os.path.abspath(mod.__file__))\n-\n-    # Next attempt: check the loader.\n-    loader = pkgutil.get_loader(import_name)\n-\n-    # Loader does not exist or we\'re referring to an unloaded main module\n-    # or a main module without path (interactive sessions), go with the\n-    # current working directory.\n-    if loader is None or import_name == ""__main__"":\n-        return os.getcwd()\n-\n-    if hasattr(loader, ""get_filename""):\n-        filepath = loader.get_filename(import_name)\n-    else:\n-        # Fall back to imports.\n-        __import__(import_name)\n-        mod = sys.modules[import_name]\n-        filepath = getattr(mod, ""__file__"", None)\n-\n-        # If we don\'t have a filepath it might be because we are a\n-        # namespace package.  In this case we pick the root path from the\n-        # first module that is contained in our package.\n-        if filepath is None:\n-            raise RuntimeError(\n-                ""No root path can be found for the provided module""\n-                f"" {import_name!r}. This can happen because the module""\n-                "" came from an import hook that does not provide file""\n-                "" name information or because it\'s a namespace package.""\n-                "" In this case the root path needs to be explicitly""\n-                "" provided.""\n-            )\n-\n-    # filepath is import_name.py for a module, or __init__.py for a package.\n-    return os.path.dirname(os.path.abspath(filepath))\n-\n-\n-def _matching_loader_thinks_module_is_package(loader, mod_name):\n-    """"""Given the loader that loaded a module and the module this function\n-    attempts to figure out if the given module is actually a package.\n-    """"""\n-    cls = type(loader)\n-    # If the loader can tell us if something is a package, we can\n-    # directly ask the loader.\n-    if hasattr(loader, ""is_package""):\n-        return loader.is_package(mod_name)\n-    # importlib\'s namespace loaders do not have this functionality but\n-    # all the modules it loads are packages, so we can take advantage of\n-    # this information.\n-    elif cls.__module__ == ""_frozen_importlib"" and cls.__name__ == ""NamespaceLoader"":\n-        return True\n-    # Otherwise we need to fail with an error that explains what went\n-    # wrong.\n-    raise AttributeError(\n-        f""{cls.__name__}.is_package() method is missing but is required""\n-        "" for PEP 302 import hooks.""\n-    )\n-\n-\n-def _find_package_path(root_mod_name):\n-    """"""Find the path where the module\'s root exists in""""""\n-    import importlib.util\n-\n-    try:\n-        spec = importlib.util.find_spec(root_mod_name)\n-        if spec is None:\n-            raise ValueError(""not found"")\n-    # ImportError: the machinery told us it does not exist\n-    # ValueError:\n-    #    - the module name was invalid\n-    #    - the module name is __main__\n-    #    - *we* raised `ValueError` due to `spec` being `None`\n-    except (ImportError, ValueError):\n-        pass  # handled below\n-    else:\n-        # namespace package\n-        if spec.origin in {""namespace"", None}:\n-            return os.path.dirname(next(iter(spec.submodule_search_locations)))\n-        # a package (with __init__.py)\n-        elif spec.submodule_search_locations:\n-            return os.path.dirname(os.path.dirname(spec.origin))\n-        # just a normal module\n-        else:\n-            return os.path.dirname(spec.origin)\n-\n-    # we were unable to find the `package_path` using PEP 451 loaders\n-    loader = pkgutil.get_loader(root_mod_name)\n-    if loader is None or root_mod_name == ""__main__"":\n-        # import name is not found, or interactive/main module\n-        return os.getcwd()\n-    else:\n-        if hasattr(loader, ""get_filename""):\n-            filename = loader.get_filename(root_mod_name)\n-        elif hasattr(loader, ""archive""):\n-            # zipimporter\'s loader.archive points to the .egg or .zip\n-            # archive filename is dropped in call to dirname below.\n-            filename = loader.archive\n-        else:\n-            # At least one loader is missing both get_filename and archive:\n-            # Google App Engine\'s HardenedModulesHook\n-            #\n-            # Fall back to imports.\n-            __import__(root_mod_name)\n-            filename = sys.modules[root_mod_name].__file__\n-        package_path = os.path.abspath(os.path.dirname(filename))\n-\n-        # In case the root module is a package we need to chop of the\n-        # rightmost part. This needs to go through a helper function\n-        # because of namespace packages.\n-        if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n-            package_path = os.path.dirname(package_path)\n-\n-    return package_path\n-\n-\n-def find_package(import_name):\n-    """"""Finds a package and returns the prefix (or None if the package is\n-    not installed) as well as the folder that contains the package or\n-    module as a tuple.  The package path returned is the module that would\n-    have to be added to the pythonpath in order to make it possible to\n-    import the module.  The prefix is the path below which a UNIX like\n-    folder structure exists (lib, share etc.).\n-    """"""\n-    root_mod_name, _, _ = import_name.partition(""."")\n-    package_path = _find_package_path(root_mod_name)\n-    site_parent, site_folder = os.path.split(package_path)\n-    py_prefix = os.path.abspath(sys.prefix)\n-    if package_path.startswith(py_prefix):\n-        return py_prefix, package_path\n-    elif site_folder.lower() == ""site-packages"":\n-        parent, folder = os.path.split(site_parent)\n-        # Windows like installations\n-        if folder.lower() == ""lib"":\n-            base_dir = parent\n-        # UNIX like installations\n-        elif os.path.basename(parent).lower() == ""lib"":\n-            base_dir = os.path.dirname(parent)\n-        else:\n-            base_dir = site_parent\n-        return base_dir, package_path\n-    return None, package_path\n-\n-\n class locked_cached_property:\n     """"""A decorator that converts a function into a lazy property.  The\n     function wrapped is called the first time to retrieve the result\n@@ -854,155 +700,6 @@ class locked_cached_property:\n             return value\n \n \n-class _PackageBoundObject:\n-    #: The name of the package or module that this app belongs to. Do not\n-    #: change this once it is set by the constructor.\n-    import_name = None\n-\n-    #: Location of the template files to be added to the template lookup.\n-    #: ``None`` if templates should not be added.\n-    template_folder = None\n-\n-    #: Absolute path to the package on the filesystem. Used to look up\n-    #: resources contained in the package.\n-    root_path = None\n-\n-    def __init__(self, import_name, template_folder=None, root_path=None):\n-        self.import_name = import_name\n-        self.template_folder = template_folder\n-\n-        if root_path is None:\n-            root_path = get_root_path(self.import_name)\n-\n-        self.root_path = root_path\n-        self._static_folder = None\n-        self._static_url_path = None\n-\n-        # circular import\n-        from .cli import AppGroup\n-\n-        #: The Click command group for registration of CLI commands\n-        #: on the application and associated blueprints. These commands\n-        #: are accessible via the :command:`flask` command once the\n-        #: application has been discovered and blueprints registered.\n-        self.cli = AppGroup()\n-\n-    @property\n-    def static_folder(self):\n-        """"""The absolute path to the configured static folder.""""""\n-        if self._static_folder is not None:\n-            return os.path.join(self.root_path, self._static_folder)\n-\n-    @static_folder.setter\n-    def static_folder(self, value):\n-        if value is not None:\n-            value = os.fspath(value).rstrip(r""\\/"")\n-        self._static_folder = value\n-\n-    @property\n-    def static_url_path(self):\n-        """"""The URL prefix that the static route will be accessible from.\n-\n-        If it was not configured during init, it is derived from\n-        :attr:`static_folder`.\n-        """"""\n-        if self._static_url_path is not None:\n-            return self._static_url_path\n-\n-        if self.static_folder is not None:\n-            basename = os.path.basename(self.static_folder)\n-            return f""/{basename}"".rstrip(""/"")\n-\n-    @static_url_path.setter\n-    def static_url_path(self, value):\n-        if value is not None:\n-            value = value.rstrip(""/"")\n-\n-        self._static_url_path = value\n-\n-    @property\n-    def has_static_folder(self):\n-        """"""This is ``True`` if the package bound object\'s container has a\n-        folder for static files.\n-\n-        .. versionadded:: 0.5\n-        """"""\n-        return self.static_folder is not None\n-\n-    @locked_cached_property\n-    def jinja_loader(self):\n-        """"""The Jinja loader for this package bound object.\n-\n-        .. versionadded:: 0.5\n-        """"""\n-        if self.template_folder is not None:\n-            return FileSystemLoader(os.path.join(self.root_path, self.template_folder))\n-\n-    def get_send_file_max_age(self, filename):\n-        """"""Used by :func:`send_file` to determine the ``max_age`` cache\n-        value for a given file path if it wasn\'t passed.\n-\n-        By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from\n-        the configuration of :data:`~flask.current_app`. This defaults\n-        to ``None``, which tells the browser to use conditional requests\n-        instead of a timed cache, which is usually preferable.\n-\n-        .. versionchanged:: 2.0\n-            The default configuration is ``None`` instead of 12 hours.\n-\n-        .. versionadded:: 0.9\n-        """"""\n-        value = current_app.send_file_max_age_default\n-\n-        if value is None:\n-            return None\n-\n-        return total_seconds(value)\n-\n-    def send_static_file(self, filename):\n-        """"""Function used internally to send static files from the static\n-        folder to the browser.\n-\n-        .. versionadded:: 0.5\n-        """"""\n-        if not self.has_static_folder:\n-            raise RuntimeError(""No static folder for this object"")\n-\n-        # send_file only knows to call get_send_file_max_age on the app,\n-        # call it here so it works for blueprints too.\n-        max_age = self.get_send_file_max_age(filename)\n-        return send_from_directory(self.static_folder, filename, max_age=max_age)\n-\n-    def open_resource(self, resource, mode=""rb""):\n-        """"""Opens a resource from the application\'s resource folder.  To see\n-        how this works, consider the following folder structure::\n-\n-            /myapplication.py\n-            /schema.sql\n-            /static\n-                /style.css\n-            /templates\n-                /layout.html\n-                /index.html\n-\n-        If you want to open the :file:`schema.sql` file you would do the\n-        following::\n-\n-            with app.open_resource(\'schema.sql\') as f:\n-                contents = f.read()\n-                do_something_with(contents)\n-\n-        :param resource: the name of the resource.  To access resources within\n-                         subfolders use forward slashes as separator.\n-        :param mode: Open file in this mode. Only reading is supported,\n-            valid values are ""r"" (or ""rt"") and ""rb"".\n-        """"""\n-        if mode not in {""r"", ""rt"", ""rb""}:\n-            raise ValueError(""Resources can only be opened for reading"")\n-\n-        return open(os.path.join(self.root_path, resource), mode)\n-\n-\n def total_seconds(td):\n     """"""Returns the total seconds from a timedelta object.\n \n'",3.0606060606060606,2.8947368421052633
src/flask/scaffold.py,src/flask/scaffold.py,9f7c602a84faa8371be4ece23e4405282d1283d2,3316604822644889a373018490f2534a1dafd9aa,'move _PackageBoundObject into Scaffold',"'@@ -1,10 +1,17 @@\n+import os\n+import pkgutil\n+import sys\n from collections import defaultdict\n from functools import update_wrapper\n \n+from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n \n-from .helpers import _PackageBoundObject\n+from .cli import AppGroup\n+from .globals import current_app\n+from .helpers import locked_cached_property\n+from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n \n # a singleton sentinel value for parameter defaults\n@@ -19,21 +26,28 @@ def setupmethod(f):\n     def wrapper_func(self, *args, **kwargs):\n         if self._is_setup_finished():\n             raise AssertionError(\n-                ""A setup function was called after the ""\n-                ""first request was handled.  This usually indicates a bug ""\n-                ""in the application where a module was not imported ""\n-                ""and decorators or other functionality was called too late.\\n""\n-                ""To fix this make sure to import all your view modules, ""\n-                ""database models and everything related at a central place ""\n-                ""before the application starts serving requests.""\n+                ""A setup function was called after the first request ""\n+                ""was handled. This usually indicates a bug in the""\n+                "" application where a module was not imported and""\n+                "" decorators or other functionality was called too""\n+                "" late.\\nTo fix this make sure to import all your view""\n+                "" modules, database models, and everything related at a""\n+                "" central place before the application starts serving""\n+                "" requests.""\n             )\n         return f(self, *args, **kwargs)\n \n     return update_wrapper(wrapper_func, f)\n \n \n-class Scaffold(_PackageBoundObject):\n-    """"""A common base for class Flask and class Blueprint.""""""\n+class Scaffold:\n+    """"""A common base for :class:`~flask.app.Flask` and\n+    :class:`~flask.blueprints.Blueprint`.\n+    """"""\n+\n+    name: str\n+    _static_folder = None\n+    _static_url_path = None\n \n     #: Skeleton local JSON decoder class to use.\n     #: Set to ``None`` to use the app\'s :class:`~flask.app.Flask.json_encoder`.\n@@ -43,18 +57,6 @@ class Scaffold(_PackageBoundObject):\n     #: Set to ``None`` to use the app\'s :class:`~flask.app.Flask.json_decoder`.\n     json_decoder = None\n \n-    #: The name of the package or module that this app belongs to. Do not\n-    #: change this once it is set by the constructor.\n-    import_name = None\n-\n-    #: Location of the template files to be added to the template lookup.\n-    #: ``None`` if templates should not be added.\n-    template_folder = None\n-\n-    #: Absolute path to the package on the filesystem. Used to look up\n-    #: resources contained in the package.\n-    root_path = None\n-\n     def __init__(\n         self,\n         import_name,\n@@ -63,14 +65,31 @@ class Scaffold(_PackageBoundObject):\n         template_folder=None,\n         root_path=None,\n     ):\n-        super().__init__(\n-            import_name=import_name,\n-            template_folder=template_folder,\n-            root_path=root_path,\n-        )\n+        #: The name of the package or module that this object belongs\n+        #: to. Do not change this once it is set by the constructor.\n+        self.import_name = import_name\n+\n         self.static_folder = static_folder\n         self.static_url_path = static_url_path\n \n+        #: The path to the templates folder, relative to\n+        #: :attr:`root_path`, to add to the template loader. ``None`` if\n+        #: templates should not be added.\n+        self.template_folder = template_folder\n+\n+        if root_path is None:\n+            root_path = get_root_path(self.import_name)\n+\n+        #: Absolute path to the package on the filesystem. Used to look\n+        #: up resources contained in the package.\n+        self.root_path = root_path\n+\n+        #: The Click command group for registering CLI commands for this\n+        #: object. The commands are available from the ``flask`` command\n+        #: once the application has been discovered and blueprints have\n+        #: been registered.\n+        self.cli = AppGroup()\n+\n         #: A dictionary of all view functions registered.  The keys will\n         #: be function names which are also used to generate URLs and\n         #: the values are the function objects themselves.\n@@ -146,9 +165,127 @@ class Scaffold(_PackageBoundObject):\n         #: .. versionadded:: 0.7\n         self.url_default_functions = defaultdict(list)\n \n+    def __repr__(self):\n+        return f""<{type(self).__name__} {self.name!r}>""\n+\n     def _is_setup_finished(self):\n         raise NotImplementedError\n \n+    @property\n+    def static_folder(self):\n+        """"""The absolute path to the configured static folder. ``None``\n+        if no static folder is set.\n+        """"""\n+        if self._static_folder is not None:\n+            return os.path.join(self.root_path, self._static_folder)\n+\n+    @static_folder.setter\n+    def static_folder(self, value):\n+        if value is not None:\n+            value = os.fspath(value).rstrip(r""\\/"")\n+\n+        self._static_folder = value\n+\n+    @property\n+    def has_static_folder(self):\n+        """"""``True`` if :attr:`static_folder` is set.\n+\n+        .. versionadded:: 0.5\n+        """"""\n+        return self.static_folder is not None\n+\n+    @property\n+    def static_url_path(self):\n+        """"""The URL prefix that the static route will be accessible from.\n+\n+        If it was not configured during init, it is derived from\n+        :attr:`static_folder`.\n+        """"""\n+        if self._static_url_path is not None:\n+            return self._static_url_path\n+\n+        if self.static_folder is not None:\n+            basename = os.path.basename(self.static_folder)\n+            return f""/{basename}"".rstrip(""/"")\n+\n+    @static_url_path.setter\n+    def static_url_path(self, value):\n+        if value is not None:\n+            value = value.rstrip(""/"")\n+\n+        self._static_url_path = value\n+\n+    def get_send_file_max_age(self, filename):\n+        """"""Used by :func:`send_file` to determine the ``max_age`` cache\n+        value for a given file path if it wasn\'t passed.\n+\n+        By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from\n+        the configuration of :data:`~flask.current_app`. This defaults\n+        to ``None``, which tells the browser to use conditional requests\n+        instead of a timed cache, which is usually preferable.\n+\n+        .. versionchanged:: 2.0\n+            The default configuration is ``None`` instead of 12 hours.\n+\n+        .. versionadded:: 0.9\n+        """"""\n+        value = current_app.send_file_max_age_default\n+\n+        if value is None:\n+            return None\n+\n+        return int(value.total_seconds())\n+\n+    def send_static_file(self, filename):\n+        """"""The view function used to serve files from\n+        :attr:`static_folder`. A route is automatically registered for\n+        this view at :attr:`static_url_path` if :attr:`static_folder` is\n+        set.\n+\n+        .. versionadded:: 0.5\n+        """"""\n+        if not self.has_static_folder:\n+            raise RuntimeError(""\'static_folder\' must be set to serve static_files."")\n+\n+        # send_file only knows to call get_send_file_max_age on the app,\n+        # call it here so it works for blueprints too.\n+        max_age = self.get_send_file_max_age(filename)\n+        return send_from_directory(self.static_folder, filename, max_age=max_age)\n+\n+    @locked_cached_property\n+    def jinja_loader(self):\n+        """"""The Jinja loader for this object\'s templates. By default this\n+        is a class :class:`jinja2.loaders.FileSystemLoader` to\n+        :attr:`template_folder` if it is set.\n+\n+        .. versionadded:: 0.5\n+        """"""\n+        if self.template_folder is not None:\n+            return FileSystemLoader(os.path.join(self.root_path, self.template_folder))\n+\n+    def open_resource(self, resource, mode=""rb""):\n+        """"""Open a resource file relative to :attr:`root_path` for\n+        reading.\n+\n+        For example, if the file ``schema.sql`` is next to the file\n+        ``app.py`` where the ``Flask`` app is defined, it can be opened\n+        with:\n+\n+        .. code-block:: python\n+\n+            with app.open_resource(""schema.sql"") as f:\n+                conn.executescript(f.read())\n+\n+        :param resource: Path to the resource relative to\n+            :attr:`root_path`.\n+        :param mode: Open the file in this mode. Only reading is\n+            supported, valid values are ""r"" (or ""rt"") and ""rb"".\n+        """"""\n+        if mode not in {""r"", ""rt"", ""rb""}:\n+            raise ValueError(""Resources can only be opened for reading."")\n+\n+        return open(os.path.join(self.root_path, resource), mode)\n+\n     def _method_route(self, method, rule, options):\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n@@ -192,27 +329,19 @@ class Scaffold(_PackageBoundObject):\n \n     def route(self, rule, **options):\n         """"""A decorator that is used to register a view function for a\n-        given URL rule.  This does the same thing as :meth:`add_url_rule`\n-        but is intended for decorator usage::\n+        given URL rule. This does the same thing as :meth:`add_url_rule`\n+        but is used as a decorator. See :meth:`add_url_rule` and\n+        :ref:`url-route-registrations` for more information.\n+\n+        .. code-block:: python\n \n-            @app.route(\'/\')\n+            @app.route(""/"")\n             def index():\n-                return \'Hello World\'\n-\n-        For more information refer to :ref:`url-route-registrations`.\n-\n-        :param rule: the URL rule as string\n-        :param endpoint: the endpoint for the registered URL rule.  Flask\n-                         itself assumes the name of the view function as\n-                         endpoint\n-        :param options: the options to be forwarded to the underlying\n-                        :class:`~werkzeug.routing.Rule` object.  A change\n-                        to Werkzeug is handling of method options.  methods\n-                        is a list of methods this rule should be limited\n-                        to (``GET``, ``POST`` etc.).  By default a rule\n-                        just listens for ``GET`` (and implicitly ``HEAD``).\n-                        Starting with Flask 0.6, ``OPTIONS`` is implicitly\n-                        added and handled by the standard request handling.\n+                return ""Hello World""\n+\n+        :param rule: The URL rule as a string.\n+        :param options: The options to be forwarded to the underlying\n+            :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n         def decorator(f):\n@@ -451,3 +580,171 @@ def _endpoint_from_view_func(view_func):\n     """"""\n     assert view_func is not None, ""expected view func if endpoint is not provided.""\n     return view_func.__name__\n+\n+\n+def get_root_path(import_name):\n+    """"""Find the root path of a package, or the path that contains a\n+    module. If it cannot be found, returns the current working\n+    directory.\n+\n+    Not to be confused with the value returned by :func:`find_package`.\n+\n+    :meta private:\n+    """"""\n+    # Module already imported and has a file attribute. Use that first.\n+    mod = sys.modules.get(import_name)\n+\n+    if mod is not None and hasattr(mod, ""__file__""):\n+        return os.path.dirname(os.path.abspath(mod.__file__))\n+\n+    # Next attempt: check the loader.\n+    loader = pkgutil.get_loader(import_name)\n+\n+    # Loader does not exist or we\'re referring to an unloaded main\n+    # module or a main module without path (interactive sessions), go\n+    # with the current working directory.\n+    if loader is None or import_name == ""__main__"":\n+        return os.getcwd()\n+\n+    if hasattr(loader, ""get_filename""):\n+        filepath = loader.get_filename(import_name)\n+    else:\n+        # Fall back to imports.\n+        __import__(import_name)\n+        mod = sys.modules[import_name]\n+        filepath = getattr(mod, ""__file__"", None)\n+\n+        # If we don\'t have a file path it might be because it is a\n+        # namespace package. In this case pick the root path from the\n+        # first module that is contained in the package.\n+        if filepath is None:\n+            raise RuntimeError(\n+                ""No root path can be found for the provided module""\n+                f"" {import_name!r}. This can happen because the module""\n+                "" came from an import hook that does not provide file""\n+                "" name information or because it\'s a namespace package.""\n+                "" In this case the root path needs to be explicitly""\n+                "" provided.""\n+            )\n+\n+    # filepath is import_name.py for a module, or __init__.py for a package.\n+    return os.path.dirname(os.path.abspath(filepath))\n+\n+\n+def _matching_loader_thinks_module_is_package(loader, mod_name):\n+    """"""Attempt to figure out if the given name is a package or a module.\n+\n+    :param: loader: The loader that handled the name.\n+    :param mod_name: The name of the package or module.\n+    """"""\n+    # Use loader.is_package if it\'s available.\n+    if hasattr(loader, ""is_package""):\n+        return loader.is_package(mod_name)\n+\n+    cls = type(loader)\n+\n+    # NamespaceLoader doesn\'t implement is_package, but all names it\n+    # loads must be packages.\n+    if cls.__module__ == ""_frozen_importlib"" and cls.__name__ == ""NamespaceLoader"":\n+        return True\n+\n+    # Otherwise we need to fail with an error that explains what went\n+    # wrong.\n+    raise AttributeError(\n+        f""\'{cls.__name__}.is_package()\' must be implemented for PEP 302""\n+        f"" import hooks.""\n+    )\n+\n+\n+def _find_package_path(root_mod_name):\n+    """"""Find the path that contains the package or module.""""""\n+    try:\n+        spec = importlib.util.find_spec(root_mod_name)\n+\n+        if spec is None:\n+            raise ValueError(""not found"")\n+    # ImportError: the machinery told us it does not exist\n+    # ValueError:\n+    #    - the module name was invalid\n+    #    - the module name is __main__\n+    #    - *we* raised `ValueError` due to `spec` being `None`\n+    except (ImportError, ValueError):\n+        pass  # handled below\n+    else:\n+        # namespace package\n+        if spec.origin in {""namespace"", None}:\n+            return os.path.dirname(next(iter(spec.submodule_search_locations)))\n+        # a package (with __init__.py)\n+        elif spec.submodule_search_locations:\n+            return os.path.dirname(os.path.dirname(spec.origin))\n+        # just a normal module\n+        else:\n+            return os.path.dirname(spec.origin)\n+\n+    # we were unable to find the `package_path` using PEP 451 loaders\n+    loader = pkgutil.get_loader(root_mod_name)\n+\n+    if loader is None or root_mod_name == ""__main__"":\n+        # import name is not found, or interactive/main module\n+        return os.getcwd()\n+\n+    if hasattr(loader, ""get_filename""):\n+        filename = loader.get_filename(root_mod_name)\n+    elif hasattr(loader, ""archive""):\n+        # zipimporter\'s loader.archive points to the .egg or .zip file.\n+        filename = loader.archive\n+    else:\n+        # At least one loader is missing both get_filename and archive:\n+        # Google App Engine\'s HardenedModulesHook, use __file__.\n+        filename = importlib.import_module(root_mod_name).__file__\n+\n+    package_path = os.path.abspath(os.path.dirname(filename))\n+\n+    # If the imported name is a package, filename is currently pointing\n+    # to the root of the package, need to get the current directory.\n+    if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n+        package_path = os.path.dirname(package_path)\n+\n+    return package_path\n+\n+\n+def find_package(import_name):\n+    """"""Find the prefix that a package is installed under, and the path\n+    that it would be imported from.\n+\n+    The prefix is the directory containing the standard directory\n+    hierarchy (lib, bin, etc.). If the package is not installed to the\n+    system (:attr:`sys.prefix`) or a virtualenv (``site-packages``),\n+    ``None`` is returned.\n+\n+    The path is the entry in :attr:`sys.path` that contains the package\n+    for import. If the package is not installed, it\'s assumed that the\n+    package was imported from the current working directory.\n+    """"""\n+    root_mod_name, _, _ = import_name.partition(""."")\n+    package_path = _find_package_path(root_mod_name)\n+    py_prefix = os.path.abspath(sys.prefix)\n+\n+    # installed to the system\n+    if package_path.startswith(py_prefix):\n+        return py_prefix, package_path\n+\n+    site_parent, site_folder = os.path.split(package_path)\n+\n+    # installed to a virtualenv\n+    if site_folder.lower() == ""site-packages"":\n+        parent, folder = os.path.split(site_parent)\n+\n+        # Windows (prefix/lib/site-packages)\n+        if folder.lower() == ""lib"":\n+            return parent, package_path\n+\n+        # Unix (prefix/lib/pythonX.Y/site-packages)\n+        if os.path.basename(parent).lower() == ""lib"":\n+            return os.path.dirname(parent), package_path\n+\n+        # something else (prefix/site-packages)\n+        return site_parent, package_path\n+\n+    # not installed\n+    return None, package_path\n'",1.2222222222222223,1.9268292682926829
src/flask/app.py,src/flask/app.py,7029674775023c076a1dc03367214d178423809a,9f7c602a84faa8371be4ece23e4405282d1283d2,'rewrite Scaffold docs',"'@@ -346,21 +346,6 @@ class Flask(Scaffold):\n     #: .. versionadded:: 0.8\n     session_interface = SecureCookieSessionInterface()\n \n-    # TODO remove the next three attrs when Sphinx :inherited-members: works\n-    # https://github.com/sphinx-doc/sphinx/issues/741\n-\n-    #: The name of the package or module that this app belongs to. Do not\n-    #: change this once it is set by the constructor.\n-    import_name = None\n-\n-    #: Location of the template files to be added to the template lookup.\n-    #: ``None`` if templates should not be added.\n-    template_folder = None\n-\n-    #: Absolute path to the package on the filesystem. Used to look up\n-    #: resources contained in the package.\n-    root_path = None\n-\n     def __init__(\n         self,\n         import_name,\n@@ -1017,58 +1002,6 @@ class Flask(Scaffold):\n         provide_automatic_options=None,\n         **options,\n     ):\n-        """"""Connects a URL rule.  Works exactly like the :meth:`route`\n-        decorator.  If a view_func is provided it will be registered with the\n-        endpoint.\n-\n-        Basically this example::\n-\n-            @app.route(\'/\')\n-            def index():\n-                pass\n-\n-        Is equivalent to the following::\n-\n-            def index():\n-                pass\n-            app.add_url_rule(\'/\', \'index\', index)\n-\n-        If the view_func is not provided you will need to connect the endpoint\n-        to a view function like so::\n-\n-            app.view_functions[\'index\'] = index\n-\n-        Internally :meth:`route` invokes :meth:`add_url_rule` so if you want\n-        to customize the behavior via subclassing you only need to change\n-        this method.\n-\n-        For more information refer to :ref:`url-route-registrations`.\n-\n-        .. versionchanged:: 0.2\n-           `view_func` parameter added.\n-\n-        .. versionchanged:: 0.6\n-           ``OPTIONS`` is added automatically as method.\n-\n-        :param rule: the URL rule as string\n-        :param endpoint: the endpoint for the registered URL rule.  Flask\n-                         itself assumes the name of the view function as\n-                         endpoint\n-        :param view_func: the function to call when serving a request to the\n-                          provided endpoint\n-        :param provide_automatic_options: controls whether the ``OPTIONS``\n-            method should be added automatically. This can also be controlled\n-            by setting the ``view_func.provide_automatic_options = False``\n-            before adding the rule.\n-        :param options: the options to be forwarded to the underlying\n-                        :class:`~werkzeug.routing.Rule` object.  A change\n-                        to Werkzeug is handling of method options.  methods\n-                        is a list of methods this rule should be limited\n-                        to (``GET``, ``POST`` etc.).  By default a rule\n-                        just listens for ``GET`` (and implicitly ``HEAD``).\n-                        Starting with Flask 0.6, ``OPTIONS`` is implicitly\n-                        added and handled by the standard request handling.\n-        """"""\n         if endpoint is None:\n             endpoint = _endpoint_from_view_func(view_func)\n         options[""endpoint""] = endpoint\n@@ -2023,6 +1956,7 @@ class Flask(Scaffold):\n \n     def __call__(self, environ, start_response):\n         """"""The WSGI server calls the Flask application object as the\n-        WSGI application. This calls :meth:`wsgi_app` which can be\n-        wrapped to applying middleware.""""""\n+        WSGI application. This calls :meth:`wsgi_app`, which can be\n+        wrapped to apply middleware.\n+        """"""\n         return self.wsgi_app(environ, start_response)\n'",3.0307692307692307,3.0307692307692307
src/flask/blueprints.py,src/flask/blueprints.py,7029674775023c076a1dc03367214d178423809a,9f7c602a84faa8371be4ece23e4405282d1283d2,'rewrite Scaffold docs',"""@@ -130,28 +130,13 @@ class Blueprint(Scaffold):\n     warn_on_modifications = False\n     _got_registered_once = False\n \n-    #: Blueprint local JSON encoder class to use.\n-    #: Set to ``None`` to use the app's :class:`~flask.app.Flask.json_encoder`.\n+    #: Blueprint local JSON encoder class to use. Set to ``None`` to use\n+    #: the app's :class:`~flask.Flask.json_encoder`.\n     json_encoder = None\n-    #: Blueprint local JSON decoder class to use.\n-    #: Set to ``None`` to use the app's :class:`~flask.app.Flask.json_decoder`.\n+    #: Blueprint local JSON decoder class to use. Set to ``None`` to use\n+    #: the app's :class:`~flask.Flask.json_decoder`.\n     json_decoder = None\n \n-    # TODO remove the next three attrs when Sphinx :inherited-members: works\n-    # https://github.com/sphinx-doc/sphinx/issues/741\n-\n-    #: The name of the package or module that this app belongs to. Do not\n-    #: change this once it is set by the constructor.\n-    import_name = None\n-\n-    #: Location of the template files to be added to the template lookup.\n-    #: ``None`` if templates should not be added.\n-    template_folder = None\n-\n-    #: Absolute path to the package on the filesystem. Used to look up\n-    #: resources contained in the package.\n-    root_path = None\n-\n     def __init__(\n         self,\n         name,\n""",1.7878787878787878,1.7878787878787878
src/flask/scaffold.py,src/flask/scaffold.py,7029674775023c076a1dc03367214d178423809a,9f7c602a84faa8371be4ece23e4405282d1283d2,'rewrite Scaffold docs',"'@@ -1,3 +1,4 @@\n+import importlib.util\n import os\n import pkgutil\n import sys\n@@ -41,26 +42,39 @@ def setupmethod(f):\n \n \n class Scaffold:\n-    """"""A common base for :class:`~flask.app.Flask` and\n+    """"""Common behavior shared between :class:`~flask.Flask` and\n     :class:`~flask.blueprints.Blueprint`.\n+\n+    :param import_name: The import name of the module where this object\n+        is defined. Usually :attr:`__name__` should be used.\n+    :param static_folder: Path to a folder of static files to serve.\n+        If this is set, a static route will be added.\n+    :param static_url_path: URL prefix for the static route.\n+    :param template_folder: Path to a folder containing template files.\n+        for rendering. If this is set, a Jinja loader will be added.\n+    :param root_path: The path that static, template, and resource files\n+        are relative to. Typically not set, it is discovered based on\n+        the ``import_name``.\n+\n+    .. versionadded:: 2.0.0\n     """"""\n \n     name: str\n     _static_folder = None\n     _static_url_path = None\n \n-    #: Skeleton local JSON decoder class to use.\n-    #: Set to ``None`` to use the app\'s :class:`~flask.app.Flask.json_encoder`.\n+    #: JSON encoder class used by :func:`flask.json.dumps`. If a\n+    #: blueprint sets this, it will be used instead of the app\'s value.\n     json_encoder = None\n \n-    #: Skeleton local JSON decoder class to use.\n-    #: Set to ``None`` to use the app\'s :class:`~flask.app.Flask.json_decoder`.\n+    #: JSON decoder class used by :func:`flask.json.loads`. If a\n+    #: blueprint sets this, it will be used instead of the app\'s value.\n     json_decoder = None\n \n     def __init__(\n         self,\n         import_name,\n-        static_folder=""static"",\n+        static_folder=None,\n         static_url_path=None,\n         template_folder=None,\n         root_path=None,\n@@ -90,79 +104,105 @@ class Scaffold:\n         #: been registered.\n         self.cli = AppGroup()\n \n-        #: A dictionary of all view functions registered.  The keys will\n-        #: be function names which are also used to generate URLs and\n-        #: the values are the function objects themselves.\n+        #: A dictionary mapping endpoint names to view functions.\n+        #:\n         #: To register a view function, use the :meth:`route` decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.view_functions = {}\n \n-        #: A dictionary of all registered error handlers.  The key is ``None``\n-        #: for error handlers active on the application, otherwise the key is\n-        #: the name of the blueprint.  Each key points to another dictionary\n-        #: where the key is the status code of the http exception.  The\n-        #: special key ``None`` points to a list of tuples where the first item\n-        #: is the class for the instance check and the second the error handler\n-        #: function.\n+        #: A data structure of registered error handlers, in the format\n+        #: ``{scope: {code: {class: handler}}}```. The ``scope`` key is\n+        #: the name of a blueprint the handlers are active for, or\n+        #: ``None`` for all requests. The ``code`` key is the HTTP\n+        #: status code for ``HTTPException``, or ``None`` for\n+        #: other exceptions. The innermost dictionary maps exception\n+        #: classes to handler functions.\n         #:\n         #: To register an error handler, use the :meth:`errorhandler`\n         #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.error_handler_spec = defaultdict(lambda: defaultdict(dict))\n \n-        #: A dictionary with lists of functions that will be called at the\n-        #: beginning of each request. The key of the dictionary is the name of\n-        #: the blueprint this function is active for, or ``None`` for all\n-        #: requests. To register a function, use the :meth:`before_request`\n+        #: A data structure of functions to call at the beginning of\n+        #: each request, in the format ``{scope: [functions]}``. The\n+        #: ``scope`` key is the name of a blueprint the functions are\n+        #: active for, or ``None`` for all requests.\n+        #:\n+        #: To register a function, use the :meth:`before_request`\n         #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.before_request_funcs = defaultdict(list)\n \n-        #: A dictionary with lists of functions that should be called after\n-        #: each request.  The key of the dictionary is the name of the blueprint\n-        #: this function is active for, ``None`` for all requests.  This can for\n-        #: example be used to close database connections. To register a function\n-        #: here, use the :meth:`after_request` decorator.\n+        #: A data structure of functions to call at the end of each\n+        #: request, in the format ``{scope: [functions]}``. The\n+        #: ``scope`` key is the name of a blueprint the functions are\n+        #: active for, or ``None`` for all requests.\n+        #:\n+        #: To register a function, use the :meth:`after_request`\n+        #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.after_request_funcs = defaultdict(list)\n \n-        #: A dictionary with lists of functions that are called after\n-        #: each request, even if an exception has occurred. The key of the\n-        #: dictionary is the name of the blueprint this function is active for,\n-        #: ``None`` for all requests. These functions are not allowed to modify\n-        #: the request, and their return values are ignored. If an exception\n-        #: occurred while processing the request, it gets passed to each\n-        #: teardown_request function. To register a function here, use the\n-        #: :meth:`teardown_request` decorator.\n+        #: A data structure of functions to call at the end of each\n+        #: request even if an exception is raised, in the format\n+        #: ``{scope: [functions]}``. The ``scope`` key is the name of a\n+        #: blueprint the functions are active for, or ``None`` for all\n+        #: requests.\n         #:\n-        #: .. versionadded:: 0.7\n+        #: To register a function, use the :meth:`teardown_request`\n+        #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.teardown_request_funcs = defaultdict(list)\n \n-        #: A dictionary with list of functions that are called without argument\n-        #: to populate the template context.  The key of the dictionary is the\n-        #: name of the blueprint this function is active for, ``None`` for all\n-        #: requests.  Each returns a dictionary that the template context is\n-        #: updated with.  To register a function here, use the\n-        #: :meth:`context_processor` decorator.\n+        #: A data structure of functions to call to pass extra context\n+        #: values when rendering templates, in the format\n+        #: ``{scope: [functions]}``. The ``scope`` key is the name of a\n+        #: blueprint the functions are active for, or ``None`` for all\n+        #: requests.\n+        #:\n+        #: To register a function, use the :meth:`context_processor`\n+        #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.template_context_processors = defaultdict(\n             list, {None: [_default_template_ctx_processor]}\n         )\n \n-        #: A dictionary with lists of functions that are called before the\n-        #: :attr:`before_request_funcs` functions. The key of the dictionary is\n-        #: the name of the blueprint this function is active for, or ``None``\n-        #: for all requests. To register a function, use\n-        #: :meth:`url_value_preprocessor`.\n+        #: A data structure of functions to call to modify the keyword\n+        #: arguments passed to the view function, in the format\n+        #: ``{scope: [functions]}``. The ``scope`` key is the name of a\n+        #: blueprint the functions are active for, or ``None`` for all\n+        #: requests.\n+        #:\n+        #: To register a function, use the\n+        #: :meth:`url_value_preprocessor` decorator.\n         #:\n-        #: .. versionadded:: 0.7\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.url_value_preprocessors = defaultdict(list)\n \n-        #: A dictionary with lists of functions that can be used as URL value\n-        #: preprocessors.  The key ``None`` here is used for application wide\n-        #: callbacks, otherwise the key is the name of the blueprint.\n-        #: Each of these functions has the chance to modify the dictionary\n-        #: of URL values before they are used as the keyword arguments of the\n-        #: view function.  For each function registered this one should also\n-        #: provide a :meth:`url_defaults` function that adds the parameters\n-        #: automatically again that were removed that way.\n+        #: A data structure of functions to call to modify the keyword\n+        #: arguments when generating URLs, in the format\n+        #: ``{scope: [functions]}``. The ``scope`` key is the name of a\n+        #: blueprint the functions are active for, or ``None`` for all\n+        #: requests.\n         #:\n-        #: .. versionadded:: 0.7\n+        #: To register a function, use the :meth:`url_defaults`\n+        #: decorator.\n+        #:\n+        #: This data structure is internal. It should not be modified\n+        #: directly and its format may change at any time.\n         self.url_default_functions = defaultdict(list)\n \n     def __repr__(self):\n@@ -328,19 +368,26 @@ class Scaffold:\n         return self._method_route(""PATCH"", rule, options)\n \n     def route(self, rule, **options):\n-        """"""A decorator that is used to register a view function for a\n-        given URL rule. This does the same thing as :meth:`add_url_rule`\n-        but is used as a decorator. See :meth:`add_url_rule` and\n-        :ref:`url-route-registrations` for more information.\n+        """"""Decorate a view function to register it with the given URL\n+        rule and options. Calls :meth:`add_url_rule`, which has more\n+        details about the implementation.\n \n         .. code-block:: python\n \n             @app.route(""/"")\n             def index():\n-                return ""Hello World""\n+                return ""Hello, World!""\n+\n+        See :ref:`url-route-registrations`.\n \n-        :param rule: The URL rule as a string.\n-        :param options: The options to be forwarded to the underlying\n+        The endpoint name for the route defaults to the name of the view\n+        function if the ``endpoint`` parameter isn\'t passed.\n+\n+        The ``methods`` parameter defaults to ``[""GET""]``. ``HEAD`` and\n+        ``OPTIONS`` are added automatically.\n+\n+        :param rule: The URL rule string.\n+        :param options: Extra options passed to the\n             :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n@@ -360,17 +407,80 @@ class Scaffold:\n         provide_automatic_options=None,\n         **options,\n     ):\n+        """"""Register a rule for routing incoming requests and building\n+        URLs. The :meth:`route` decorator is a shortcut to call this\n+        with the ``view_func`` argument. These are equivalent:\n+\n+        .. code-block:: python\n+\n+            @app.route(""/"")\n+            def index():\n+                ...\n+\n+        .. code-block:: python\n+\n+            def index():\n+                ...\n+\n+            app.add_url_rule(""/"", view_func=index)\n+\n+        See :ref:`url-route-registrations`.\n+\n+        The endpoint name for the route defaults to the name of the view\n+        function if the ``endpoint`` parameter isn\'t passed. An error\n+        will be raised if a function has already been registered for the\n+        endpoint.\n+\n+        The ``methods`` parameter defaults to ``[""GET""]``. ``HEAD`` is\n+        always added automatically, and ``OPTIONS`` is added\n+        automatically by default.\n+\n+        ``view_func`` does not necessarily need to be passed, but if the\n+        rule should participate in routing an endpoint name must be\n+        associated with a view function at some point with the\n+        :meth:`endpoint` decorator.\n+\n+        .. code-block:: python\n+\n+            app.add_url_rule(""/"", endpoint=""index"")\n+\n+            @app.endpoint(""index"")\n+            def index():\n+                ...\n+\n+        If ``view_func`` has a ``required_methods`` attribute, those\n+        methods are added to the passed and automatic methods. If it\n+        has a ``provide_automatic_methods`` attribute, it is used as the\n+        default if the parameter is not passed.\n+\n+        :param rule: The URL rule string.\n+        :param endpoint: The endpoint name to associate with the rule\n+            and view function. Used when routing and building URLs.\n+            Defaults to ``view_func.__name__``.\n+        :param view_func: The view function to associate with the\n+            endpoint name.\n+        :param provide_automatic_options: Add the ``OPTIONS`` method and\n+            respond to ``OPTIONS`` requests automatically.\n+        :param options: Extra options passed to the\n+            :class:`~werkzeug.routing.Rule` object.\n+        """"""\n         raise NotImplementedError\n \n     def endpoint(self, endpoint):\n-        """"""A decorator to register a function as an endpoint.\n-        Example::\n+        """"""Decorate a view function to register it for the given\n+        endpoint. Used if a rule is added without a ``view_func`` with\n+        :meth:`add_url_rule`.\n \n-            @app.endpoint(\'example.endpoint\')\n+        .. code-block:: python\n+\n+            app.add_url_rule(""/ex"", endpoint=""example"")\n+\n+            @app.endpoint(""example"")\n             def example():\n-                return ""example""\n+                ...\n \n-        :param endpoint: the name of the endpoint\n+        :param endpoint: The endpoint name to associate with the view\n+            function.\n         """"""\n \n         def decorator(f):\n@@ -381,28 +491,38 @@ class Scaffold:\n \n     @setupmethod\n     def before_request(self, f):\n-        """"""Registers a function to run before each request.\n+        """"""Register a function to run before each request.\n+\n+        For example, this can be used to open a database connection, or\n+        to load the logged in user from the session.\n+\n+        .. code-block:: python\n \n-        For example, this can be used to open a database connection, or to load\n-        the logged in user from the session.\n+            @app.before_request\n+            def load_user():\n+                if ""user_id"" in session:\n+                    g.user = db.session.get(session[""user_id""])\n \n-        The function will be called without any arguments. If it returns a\n-        non-None value, the value is handled as if it was the return value from\n-        the view, and further request handling is stopped.\n+        The function will be called without any arguments. If it returns\n+        a non-``None`` value, the value is handled as if it was the\n+        return value from the view, and further request handling is\n+        stopped.\n         """"""\n         self.before_request_funcs[None].append(f)\n         return f\n \n     @setupmethod\n     def after_request(self, f):\n-        """"""Register a function to be run after each request.\n+        """"""Register a function to run after each request to this object.\n \n-        Your function must take one parameter, an instance of\n-        :attr:`response_class` and return a new response object or the\n-        same (see :meth:`process_response`).\n+        The function is called with the response object, and must return\n+        a response object. This allows the functions to modify or\n+        replace the response before it is sent.\n \n-        As of Flask 0.7 this function might not be executed at the end of the\n-        request in case an unhandled exception occurred.\n+        If a function raises an exception, any remaining\n+        ``after_request`` functions will not be called. Therefore, this\n+        should not be used for actions that must execute, such as to\n+        close resources. Use :meth:`teardown_request` for that.\n         """"""\n         self.after_request_funcs[None].append(f)\n         return f\n@@ -426,8 +546,8 @@ class Scaffold:\n         stack of active contexts.  This becomes relevant if you are using\n         such constructs in tests.\n \n-        Generally teardown functions must take every necessary step to avoid\n-        that they will fail.  If they do execute code that might fail they\n+        Teardown functions must avoid raising exceptions, since they . If they\n+        execute code that might fail they\n         will have to surround the execution of these code by try/except\n         statements and log occurring errors.\n \n'",1.9268292682926829,1.9268292682926829
src/flask/app.py,src/flask/app.py,25ab05e6a2ae248ab76002807d47c23952492f17,7029674775023c076a1dc03367214d178423809a,'remove old note about InternalServerError',"'@@ -1350,12 +1350,6 @@ class Flask(Scaffold):\n         always receive the ``InternalServerError``. The original\n         unhandled exception is available as ``e.original_exception``.\n \n-        .. note::\n-            Prior to Werkzeug 1.0.0, ``InternalServerError`` will not\n-            always have an ``original_exception`` attribute. Use\n-            ``getattr(e, ""original_exception"", None)`` to simulate the\n-            behavior for compatibility.\n-\n         .. versionchanged:: 1.1.0\n             Always passes the ``InternalServerError`` instance to the\n             handler, setting ``original_exception`` to the unhandled\n'",3.0307692307692307,3.0307692307692307
src/flask/scaffold.py,src/flask/scaffold.py,ef52e3e4a379b16a8b906ff101c6edae71d80dc9,25ab05e6a2ae248ab76002807d47c23952492f17,'remove redundant _register_error_handler',"'@@ -630,7 +630,7 @@ class Scaffold:\n         """"""\n \n         def decorator(f):\n-            self._register_error_handler(None, code_or_exception, f)\n+            self.register_error_handler(code_or_exception, f)\n             return f\n \n         return decorator\n@@ -643,15 +643,6 @@ class Scaffold:\n \n         .. versionadded:: 0.7\n         """"""\n-        self._register_error_handler(None, code_or_exception, f)\n-\n-    @setupmethod\n-    def _register_error_handler(self, key, code_or_exception, f):\n-        """"""\n-        :type key: None|str\n-        :type code_or_exception: int|T<=Exception\n-        :type f: callable\n-        """"""\n         if isinstance(code_or_exception, HTTPException):  # old broken behavior\n             raise ValueError(\n                 ""Tried to register a handler for an exception instance""\n@@ -668,7 +659,7 @@ class Scaffold:\n                 "" instead.""\n             )\n \n-        self.error_handler_spec[key][code][exc_class] = f\n+        self.error_handler_spec[None][code][exc_class] = f\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n'",1.9268292682926829,1.95
src/flask/blueprints.py,src/flask/blueprints.py,3dfc12e8d82a66c4041783fcaec58a7a24dbe348,ef52e3e4a379b16a8b906ff101c6edae71d80dc9,'only extend on first registration',"'@@ -90,13 +90,6 @@ class Blueprint(Scaffold):\n \n     See :doc:`/blueprints` for more information.\n \n-    .. versionchanged:: 1.1.0\n-        Blueprints have a ``cli`` group to register nested CLI commands.\n-        The ``cli_group`` parameter controls the name of the group under\n-        the ``flask`` command.\n-\n-    .. versionadded:: 0.7\n-\n     :param name: The name of the blueprint. Will be prepended to each\n         endpoint name.\n     :param import_name: The name of the blueprint package, usually\n@@ -121,10 +114,17 @@ class Blueprint(Scaffold):\n         default.\n     :param url_defaults: A dict of default values that blueprint routes\n         will receive by default.\n-    :param root_path: By default, the blueprint will automatically set this\n-        based on ``import_name``. In certain situations this automatic\n-        detection can fail, so the path can be specified manually\n-        instead.\n+    :param root_path: By default, the blueprint will automatically set\n+        this based on ``import_name``. In certain situations this\n+        automatic detection can fail, so the path can be specified\n+        manually instead.\n+\n+    .. versionchanged:: 1.1.0\n+        Blueprints have a ``cli`` group to register nested CLI commands.\n+        The ``cli_group`` parameter controls the name of the group under\n+        the ``flask`` command.\n+\n+    .. versionadded:: 0.7\n     """"""\n \n     warn_on_modifications = False\n@@ -161,8 +161,10 @@ class Blueprint(Scaffold):\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n         self.deferred_functions = []\n+\n         if url_defaults is None:\n             url_defaults = {}\n+\n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n \n@@ -180,9 +182,9 @@ class Blueprint(Scaffold):\n \n             warn(\n                 Warning(\n-                    ""The blueprint was already registered once ""\n-                    ""but is getting modified now.  These changes ""\n-                    ""will not show up.""\n+                    ""The blueprint was already registered once but is""\n+                    "" getting modified now. These changes will not show""\n+                    "" up.""\n                 )\n             )\n         self.deferred_functions.append(func)\n@@ -208,12 +210,13 @@ class Blueprint(Scaffold):\n         return BlueprintSetupState(self, app, options, first_registration)\n \n     def register(self, app, options, first_registration=False):\n-        """"""Called by :meth:`Flask.register_blueprint` to register all views\n-        and callbacks registered on the blueprint with the application. Creates\n-        a :class:`.BlueprintSetupState` and calls each :meth:`record` callback\n-        with it.\n+        """"""Called by :meth:`Flask.register_blueprint` to register all\n+        views and callbacks registered on the blueprint with the\n+        application. Creates a :class:`.BlueprintSetupState` and calls\n+        each :meth:`record` callbackwith it.\n \n-        :param app: The application this blueprint is being registered with.\n+        :param app: The application this blueprint is being registered\n+            with.\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n         :param first_registration: Whether this is the first time this\n@@ -229,44 +232,36 @@ class Blueprint(Scaffold):\n                 endpoint=""static"",\n             )\n \n-        # Merge app and self dictionaries.\n-        def merge_dict_lists(self_dict, app_dict):\n-            """"""Merges self_dict into app_dict. Replaces None keys with self.name.\n-            Values of dict must be lists.\n-            """"""\n-            for key, values in self_dict.items():\n-                key = self.name if key is None else f""{self.name}.{key}""\n-                app_dict[key].extend(values)\n-\n-        def merge_dict_nested(self_dict, app_dict):\n-            """"""Merges self_dict into app_dict. Replaces None keys with self.name.\n-            Values of dict must be dict.\n-            """"""\n-            for key, value in self_dict.items():\n-                key = self.name if key is None else f""{self.name}.{key}""\n-                app_dict[key] = value\n-\n-        app.view_functions.update(self.view_functions)\n-\n-        merge_dict_lists(self.before_request_funcs, app.before_request_funcs)\n-        merge_dict_lists(self.after_request_funcs, app.after_request_funcs)\n-        merge_dict_lists(self.teardown_request_funcs, app.teardown_request_funcs)\n-        merge_dict_lists(self.url_default_functions, app.url_default_functions)\n-        merge_dict_lists(self.url_value_preprocessors, app.url_value_preprocessors)\n-        merge_dict_lists(\n-            self.template_context_processors, app.template_context_processors\n-        )\n+        # Merge blueprint data into parent.\n+        if first_registration:\n+\n+            def extend(bp_dict, parent_dict):\n+                for key, values in bp_dict.items():\n+                    key = self.name if key is None else f""{self.name}.{key}""\n+                    parent_dict[key].extend(values)\n \n-        merge_dict_nested(self.error_handler_spec, app.error_handler_spec)\n+            def update(bp_dict, parent_dict):\n+                for key, value in bp_dict.items():\n+                    key = self.name if key is None else f""{self.name}.{key}""\n+                    parent_dict[key] = value\n+\n+            app.view_functions.update(self.view_functions)\n+            extend(self.before_request_funcs, app.before_request_funcs)\n+            extend(self.after_request_funcs, app.after_request_funcs)\n+            extend(self.teardown_request_funcs, app.teardown_request_funcs)\n+            extend(self.url_default_functions, app.url_default_functions)\n+            extend(self.url_value_preprocessors, app.url_value_preprocessors)\n+            extend(self.template_context_processors, app.template_context_processors)\n+            update(self.error_handler_spec, app.error_handler_spec)\n \n         for deferred in self.deferred_functions:\n             deferred(state)\n \n-        cli_resolved_group = options.get(""cli_group"", self.cli_group)\n-\n         if not self.cli.commands:\n             return\n \n+        cli_resolved_group = options.get(""cli_group"", self.cli_group)\n+\n         if cli_resolved_group is None:\n             app.cli.commands.update(self.cli.commands)\n         elif cli_resolved_group is _sentinel:\n'",1.7878787878787878,1.8181818181818181
.pre-commit-config.yaml,.pre-commit-config.yaml,46d8e90f29d5363239ad02446eaf535c2a6b2308,510c38cc63fd1d88772d6680713c38dd83e277b4,'[pre-commit.ci] pre-commit autoupdate',"'@@ -16,7 +16,7 @@ repos:\n     hooks:\n       - id: black\n   - repo: https://gitlab.com/pycqa/flake8\n-    rev: 3.8.4\n+    rev: 3.9.0\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,6eeaa2e50d2e3ff776085d0b28d58d1db65a0538,444550ab0c2ba8b1e003dee198b5628bc58302ce,'fix a broken link',"""@@ -876,7 +876,7 @@ Hooking in WSGI Middleware\n \n To add WSGI middleware to your Flask application, wrap the application's\n ``wsgi_app`` attribute. For example, to apply Werkzeug's\n-:class:`~werkzeug.middlware.proxy_fix.ProxyFix` middleware for running\n+:class:`~werkzeug.middleware.proxy_fix.ProxyFix` middleware for running\n behind Nginx:\n \n .. code-block:: python\n""",1.2666666666666666,1.2666666666666666
.pre-commit-config.yaml,.pre-commit-config.yaml,06fd6aca27cca6eae7ab00379f5ad9300e339d11,020331522be03389004e012e008ad7db81ef8116,'[pre-commit.ci] pre-commit autoupdate',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.10.0\n+    rev: v2.11.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,70b58c82d9d19932ea3049415a785718e07c830e,ecb3450f19d3d817b4b857bb5831b309131b37e1,'[pre-commit.ci] pre-commit autoupdate',"'@@ -15,7 +15,7 @@ repos:\n     rev: 20.8b1\n     hooks:\n       - id: black\n-  - repo: https://gitlab.com/pycqa/flake8\n+  - repo: https://github.com/PyCQA/flake8\n     rev: 3.9.0\n     hooks:\n       - id: flake8\n'",0,0
CHANGES.rst,CHANGES.rst,6979265fa643ed982d062f38d386c37bbbef0d9b,85b8fab268cda37c18cf77b6de3129da28adeb87,"'Add `async` support\n\nThis allows for async functions to be passed to the Flask class\ninstance, for example as a view function,\n\n    @app.route(""/"")\n    async def index():\n        return ""Async hello""\n\nthis comes with a cost though of poorer performance than using the\nsync equivalent.\n\nasgiref is the standard way to run async code within a sync context,\nand is used in Django making it a safe and sane choice for this.'","'@@ -67,6 +67,8 @@ Unreleased\n -   Add route decorators for common HTTP methods. For example,\n     ``@app.post(""/login"")`` is a shortcut for\n     ``@app.route(""/login"", methods=[""POST""])``. :pr:`3907`\n+-   Support async views, error handlers, before and after request, and\n+    teardown functions. :pr:`3412`\n \n \n Version 1.1.2\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,6979265fa643ed982d062f38d386c37bbbef0d9b,"""Raise a runtime error if run_async is called without real ContextVars\n\nWerkzeug offers a ContextVar replacement for Python < 3.7, however it\ndoesn't work across asyncio tasks, hence it makes sense to error out\nrather than find there are odd bugs.\n\nNote the docs build requires the latest (dev) Werkzeug due to this\nchange (to import ContextVar from werkzeug.local).""","'@@ -7,6 +7,7 @@ from threading import RLock\n \n import werkzeug.utils\n from werkzeug.exceptions import NotFound\n+from werkzeug.local import ContextVar\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n \n@@ -741,6 +742,11 @@ def run_async(func):\n             ""Install Flask with the \'async\' extra in order to use async views.""\n         )\n \n+    if ContextVar.__module__ == ""werkzeug.local"":\n+        raise RuntimeError(\n+            ""async cannot be used with this combination of Python & Greenlet versions""\n+        )\n+\n     @wraps(func)\n     def outer(*args, **kwargs):\n         """"""This function grabs the current context for the inner function.\n'",2.772727272727273,2.8181818181818183
tests/test_async.py,tests/test_async.py,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,6979265fa643ed982d062f38d386c37bbbef0d9b,"""Raise a runtime error if run_async is called without real ContextVars\n\nWerkzeug offers a ContextVar replacement for Python < 3.7, however it\ndoesn't work across asyncio tasks, hence it makes sense to error out\nrather than find there are odd bugs.\n\nNote the docs build requires the latest (dev) Werkzeug due to this\nchange (to import ContextVar from werkzeug.local).""","'@@ -1,10 +1,12 @@\n import asyncio\n+import sys\n \n import pytest\n \n from flask import abort\n from flask import Flask\n from flask import request\n+from flask.helpers import run_async\n \n \n @pytest.fixture(name=""async_app"")\n@@ -23,6 +25,7 @@ def _async_app():\n     return app\n \n \n+@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n def test_async_request_context(async_app):\n     test_client = async_app.test_client()\n     response = test_client.get(""/"")\n@@ -31,3 +34,9 @@ def test_async_request_context(async_app):\n     assert b""POST"" in response.get_data()\n     response = test_client.get(""/error"")\n     assert response.status_code == 412\n+\n+\n+@pytest.mark.skipif(sys.version_info >= (3, 7), reason=""should only raise Python < 3.7"")\n+def test_async_runtime_error():\n+    with pytest.raises(RuntimeError):\n+        run_async(None)\n'",1.0,1.0
tox.ini,tox.ini,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,6979265fa643ed982d062f38d386c37bbbef0d9b,"""Raise a runtime error if run_async is called without real ContextVars\n\nWerkzeug offers a ContextVar replacement for Python < 3.7, however it\ndoesn't work across asyncio tasks, hence it makes sense to error out\nrather than find there are odd bugs.\n\nNote the docs build requires the latest (dev) Werkzeug due to this\nchange (to import ContextVar from werkzeug.local).""","'@@ -25,5 +25,8 @@ skip_install = true\n commands = pre-commit run --all-files --show-diff-on-failure\n \n [testenv:docs]\n-deps = -r requirements/docs.txt\n+deps =\n+    -r requirements/docs.txt\n+\n+    https://github.com/pallets/werkzeug/archive/master.tar.gz\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n'",0,0
requirements/dev.txt,requirements/dev.txt,285a873ce921c1f2c52f15e1f58bcd3eae39596e,85b8fab268cda37c18cf77b6de3129da28adeb87,'[Security] Bump urllib3 from 1.26.3 to 1.26.4\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.3 to 1.26.4. **This update includes a security fix.**\n- [Release notes](https://github.com/urllib3/urllib3/releases)\n- [Changelog](https://github.com/urllib3/urllib3/blob/main/CHANGES.rst)\n- [Commits](https://github.com/urllib3/urllib3/compare/1.26.3...1.26.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -121,7 +121,7 @@ toml==0.10.2\n     #   tox\n tox==3.22.0\n     # via -r requirements/dev.in\n-urllib3==1.26.3\n+urllib3==1.26.4\n     # via requests\n virtualenv==20.4.2\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,285a873ce921c1f2c52f15e1f58bcd3eae39596e,85b8fab268cda37c18cf77b6de3129da28adeb87,'[Security] Bump urllib3 from 1.26.3 to 1.26.4\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.3 to 1.26.4. **This update includes a security fix.**\n- [Release notes](https://github.com/urllib3/urllib3/releases)\n- [Changelog](https://github.com/urllib3/urllib3/blob/main/CHANGES.rst)\n- [Commits](https://github.com/urllib3/urllib3/compare/1.26.3...1.26.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>',"'@@ -66,7 +66,7 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n     # via sphinx\n-urllib3==1.26.3\n+urllib3==1.26.4\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
src/flask/app.py,src/flask/app.py,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,"'Alter ensure_sync implementation to support extensions\n\nThis allows extensions to override the Flask.ensure_sync method and\nhave the change apply to blueprints as well. Without this change it is\npossible for differing blueprints to have differing ensure_sync\napproaches depending on the extension used - which would likely result\nin event-loop blocking issues.\n\nThis also allows blueprints to have a custom ensure_sync, although\nthis is a by product rather than an expected use case.'","'@@ -2,6 +2,7 @@ import os\n import sys\n import weakref\n from datetime import timedelta\n+from inspect import iscoroutinefunction\n from itertools import chain\n from threading import Lock\n \n@@ -34,6 +35,7 @@ from .helpers import get_env\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n from .helpers import locked_cached_property\n+from .helpers import run_async\n from .helpers import url_for\n from .json import jsonify\n from .logging import create_logger\n@@ -1517,6 +1519,19 @@ class Flask(Scaffold):\n         """"""\n         return False\n \n+    def ensure_sync(self, func):\n+        """"""Ensure that the returned function is sync and calls the async func.\n+\n+        .. versionadded:: 2.0\n+\n+        Override if you wish to change how asynchronous functions are\n+        run.\n+        """"""\n+        if iscoroutinefunction(func):\n+            return run_async(func)\n+\n+        return func\n+\n     def make_response(self, rv):\n         """"""Convert the return value from a view function to an instance of\n         :attr:`response_class`.\n'",3.0307692307692307,3.015151515151515
src/flask/blueprints.py,src/flask/blueprints.py,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,"'Alter ensure_sync implementation to support extensions\n\nThis allows extensions to override the Flask.ensure_sync method and\nhave the change apply to blueprints as well. Without this change it is\npossible for differing blueprints to have differing ensure_sync\napproaches depending on the extension used - which would likely result\nin event-loop blocking issues.\n\nThis also allows blueprints to have a custom ensure_sync, although\nthis is a by product rather than an expected use case.'","'@@ -1,3 +1,4 @@\n+from collections import defaultdict\n from functools import update_wrapper\n \n from .scaffold import _endpoint_from_view_func\n@@ -235,24 +236,44 @@ class Blueprint(Scaffold):\n         # Merge blueprint data into parent.\n         if first_registration:\n \n-            def extend(bp_dict, parent_dict):\n+            def extend(bp_dict, parent_dict, ensure_sync=False):\n                 for key, values in bp_dict.items():\n                     key = self.name if key is None else f""{self.name}.{key}""\n+\n+                    if ensure_sync:\n+                        values = [app.ensure_sync(func) for func in values]\n+\n                     parent_dict[key].extend(values)\n \n-            def update(bp_dict, parent_dict):\n-                for key, value in bp_dict.items():\n-                    key = self.name if key is None else f""{self.name}.{key}""\n-                    parent_dict[key] = value\n+            for key, value in self.error_handler_spec.items():\n+                key = self.name if key is None else f""{self.name}.{key}""\n+                value = defaultdict(\n+                    dict,\n+                    {\n+                        code: {\n+                            exc_class: app.ensure_sync(func)\n+                            for exc_class, func in code_values.items()\n+                        }\n+                        for code, code_values in value.items()\n+                    },\n+                )\n+                app.error_handler_spec[key] = value\n \n-            app.view_functions.update(self.view_functions)\n-            extend(self.before_request_funcs, app.before_request_funcs)\n-            extend(self.after_request_funcs, app.after_request_funcs)\n-            extend(self.teardown_request_funcs, app.teardown_request_funcs)\n+            for endpoint, func in self.view_functions.items():\n+                app.view_functions[endpoint] = app.ensure_sync(func)\n+\n+            extend(\n+                self.before_request_funcs, app.before_request_funcs, ensure_sync=True\n+            )\n+            extend(self.after_request_funcs, app.after_request_funcs, ensure_sync=True)\n+            extend(\n+                self.teardown_request_funcs,\n+                app.teardown_request_funcs,\n+                ensure_sync=True,\n+            )\n             extend(self.url_default_functions, app.url_default_functions)\n             extend(self.url_value_preprocessors, app.url_value_preprocessors)\n             extend(self.template_context_processors, app.template_context_processors)\n-            update(self.error_handler_spec, app.error_handler_spec)\n \n         for deferred in self.deferred_functions:\n             deferred(state)\n@@ -380,7 +401,9 @@ class Blueprint(Scaffold):\n         before each request, even if outside of a blueprint.\n         """"""\n         self.record_once(\n-            lambda s: s.app.before_request_funcs.setdefault(None, []).append(f)\n+            lambda s: s.app.before_request_funcs.setdefault(None, []).append(\n+                s.app.ensure_sync(f)\n+            )\n         )\n         return f\n \n@@ -388,7 +411,9 @@ class Blueprint(Scaffold):\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n         """"""\n-        self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n+        self.record_once(\n+            lambda s: s.app.before_first_request_funcs.append(s.app.ensure_sync(f))\n+        )\n         return f\n \n     def after_app_request(self, f):\n@@ -396,7 +421,9 @@ class Blueprint(Scaffold):\n         is executed after each request, even if outside of the blueprint.\n         """"""\n         self.record_once(\n-            lambda s: s.app.after_request_funcs.setdefault(None, []).append(f)\n+            lambda s: s.app.after_request_funcs.setdefault(None, []).append(\n+                s.app.ensure_sync(f)\n+            )\n         )\n         return f\n \n@@ -443,3 +470,14 @@ class Blueprint(Scaffold):\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n         return f\n+\n+    def ensure_sync(self, f):\n+        """"""Ensure the function is synchronous.\n+\n+        Override if you would like custom async to sync behaviour in\n+        this blueprint. Otherwise :meth:`~flask.Flask..ensure_sync` is\n+        used.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        return f\n'",1.8181818181818181,1.9696969696969697
src/flask/helpers.py,src/flask/helpers.py,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,"'Alter ensure_sync implementation to support extensions\n\nThis allows extensions to override the Flask.ensure_sync method and\nhave the change apply to blueprints as well. Without this change it is\npossible for differing blueprints to have differing ensure_sync\napproaches depending on the extension used - which would likely result\nin event-loop blocking issues.\n\nThis also allows blueprints to have a custom ensure_sync, although\nthis is a by product rather than an expected use case.'","'@@ -755,6 +755,7 @@ def run_async(func):\n         ctx module, except it has an async inner.\n         """"""\n         ctx = None\n+\n         if _request_ctx_stack.top is not None:\n             ctx = _request_ctx_stack.top.copy()\n \n'",2.8181818181818183,2.8181818181818183
src/flask/scaffold.py,src/flask/scaffold.py,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,"'Alter ensure_sync implementation to support extensions\n\nThis allows extensions to override the Flask.ensure_sync method and\nhave the change apply to blueprints as well. Without this change it is\npossible for differing blueprints to have differing ensure_sync\napproaches depending on the extension used - which would likely result\nin event-loop blocking issues.\n\nThis also allows blueprints to have a custom ensure_sync, although\nthis is a by product rather than an expected use case.'","'@@ -4,7 +4,6 @@ import pkgutil\n import sys\n from collections import defaultdict\n from functools import update_wrapper\n-from inspect import iscoroutinefunction\n \n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n@@ -13,7 +12,6 @@ from werkzeug.exceptions import HTTPException\n from .cli import AppGroup\n from .globals import current_app\n from .helpers import locked_cached_property\n-from .helpers import run_async\n from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n \n@@ -687,17 +685,7 @@ class Scaffold:\n             return exc_class, None\n \n     def ensure_sync(self, func):\n-        """"""Ensure that the returned function is sync and calls the async func.\n-\n-        .. versionadded:: 2.0\n-\n-        Override if you wish to change how asynchronous functions are\n-        run.\n-        """"""\n-        if iscoroutinefunction(func):\n-            return run_async(func)\n-        else:\n-            return func\n+        raise NotImplementedError()\n \n \n def _endpoint_from_view_func(view_func):\n'",1.951219512195122,1.9268292682926829
tests/test_async.py,tests/test_async.py,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,c6c6408c3fb96245a2e2afc4b754cdf065fdad47,"'Alter ensure_sync implementation to support extensions\n\nThis allows extensions to override the Flask.ensure_sync method and\nhave the change apply to blueprints as well. Without this change it is\npossible for differing blueprints to have differing ensure_sync\napproaches depending on the extension used - which would likely result\nin event-loop blocking issues.\n\nThis also allows blueprints to have a custom ensure_sync, although\nthis is a by product rather than an expected use case.'","'@@ -3,12 +3,20 @@ import sys\n \n import pytest\n \n-from flask import abort\n+from flask import Blueprint\n from flask import Flask\n from flask import request\n from flask.helpers import run_async\n \n \n+class AppError(Exception):\n+    pass\n+\n+\n+class BlueprintError(Exception):\n+    pass\n+\n+\n @pytest.fixture(name=""async_app"")\n def _async_app():\n     app = Flask(__name__)\n@@ -18,24 +26,111 @@ def _async_app():\n         await asyncio.sleep(0)\n         return request.method\n \n+    @app.errorhandler(AppError)\n+    async def handle(_):\n+        return """", 412\n+\n     @app.route(""/error"")\n     async def error():\n-        abort(412)\n+        raise AppError()\n+\n+    blueprint = Blueprint(""bp"", __name__)\n+\n+    @blueprint.route(""/"", methods=[""GET"", ""POST""])\n+    async def bp_index():\n+        await asyncio.sleep(0)\n+        return request.method\n+\n+    @blueprint.errorhandler(BlueprintError)\n+    async def bp_handle(_):\n+        return """", 412\n+\n+    @blueprint.route(""/error"")\n+    async def bp_error():\n+        raise BlueprintError()\n+\n+    app.register_blueprint(blueprint, url_prefix=""/bp"")\n \n     return app\n \n \n @pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n-def test_async_request_context(async_app):\n+@pytest.mark.parametrize(""path"", [""/"", ""/bp/""])\n+def test_async_route(path, async_app):\n     test_client = async_app.test_client()\n-    response = test_client.get(""/"")\n+    response = test_client.get(path)\n     assert b""GET"" in response.get_data()\n-    response = test_client.post(""/"")\n+    response = test_client.post(path)\n     assert b""POST"" in response.get_data()\n-    response = test_client.get(""/error"")\n+\n+\n+@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n+@pytest.mark.parametrize(""path"", [""/error"", ""/bp/error""])\n+def test_async_error_handler(path, async_app):\n+    test_client = async_app.test_client()\n+    response = test_client.get(path)\n     assert response.status_code == 412\n \n \n+@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n+def test_async_before_after_request():\n+    app_first_called = False\n+    app_before_called = False\n+    app_after_called = False\n+    bp_before_called = False\n+    bp_after_called = False\n+\n+    app = Flask(__name__)\n+\n+    @app.route(""/"")\n+    def index():\n+        return """"\n+\n+    @app.before_first_request\n+    async def before_first():\n+        nonlocal app_first_called\n+        app_first_called = True\n+\n+    @app.before_request\n+    async def before():\n+        nonlocal app_before_called\n+        app_before_called = True\n+\n+    @app.after_request\n+    async def after(response):\n+        nonlocal app_after_called\n+        app_after_called = True\n+        return response\n+\n+    blueprint = Blueprint(""bp"", __name__)\n+\n+    @blueprint.route(""/"")\n+    def bp_index():\n+        return """"\n+\n+    @blueprint.before_request\n+    async def bp_before():\n+        nonlocal bp_before_called\n+        bp_before_called = True\n+\n+    @blueprint.after_request\n+    async def bp_after(response):\n+        nonlocal bp_after_called\n+        bp_after_called = True\n+        return response\n+\n+    app.register_blueprint(blueprint, url_prefix=""/bp"")\n+\n+    test_client = app.test_client()\n+    test_client.get(""/"")\n+    assert app_first_called\n+    assert app_before_called\n+    assert app_after_called\n+    test_client.get(""/bp/"")\n+    assert bp_before_called\n+    assert bp_after_called\n+\n+\n @pytest.mark.skipif(sys.version_info >= (3, 7), reason=""should only raise Python < 3.7"")\n def test_async_runtime_error():\n     with pytest.raises(RuntimeError):\n'",1.0,1.0
tests/test_async.py,tests/test_async.py,61fbae866478c19ea5f5c3b9b571a4fad0ba7e5c,00f5a3e55ca3b6dd4e98044ab76f055dc74997ac,"""skip async tests if asgiref isn't installed""","'@@ -8,6 +8,8 @@ from flask import Flask\n from flask import request\n from flask.helpers import run_async\n \n+pytest.importorskip(""asgiref"")\n+\n \n class AppError(Exception):\n     pass\n'",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,08693ae91783bef4f13346d73472b45a40f26c6c,1a79d2d235e11d5c2284c8ecfffb9cd192ac769e,'[pre-commit.ci] pre-commit autoupdate',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.11.0\n+    rev: v2.12.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n'",0,0
src/flask/app.py,src/flask/app.py,6d5ccdefe29292974d0bb8e1d80dcd1a06f28368,5f03ad3004c41f2e0356f0332ea09e67192c5fab,"""Bugfix iscoroutinefunction with Python3.7\n\nSee this Python bug https://bugs.python.org/issue33261. The\niscoroutinefunction doesn't recognise partially wrapped coroutine\nfunctions as coroutine functions - which is problematic as the\ncoroutines will be called as if they are sync, which results in\nun-awaited coroutines.""","'@@ -1,8 +1,9 @@\n+import functools\n+import inspect\n import os\n import sys\n import weakref\n from datetime import timedelta\n-from inspect import iscoroutinefunction\n from itertools import chain\n from threading import Lock\n \n@@ -56,6 +57,20 @@ from .wrappers import Request\n from .wrappers import Response\n \n \n+if sys.version_info >= (3, 8):\n+    iscoroutinefunction = inspect.iscoroutinefunction\n+else:\n+\n+    def iscoroutinefunction(func):\n+        while inspect.ismethod(func):\n+            func = func.__func__\n+\n+        while isinstance(func, functools.partial):\n+            func = func.func\n+\n+        return inspect.iscoroutinefunction(func)\n+\n+\n def _make_timedelta(value):\n     if value is None or isinstance(value, timedelta):\n         return value\n'",3.015151515151515,3.014925373134328
CHANGES.rst,CHANGES.rst,f92e820b4bf357e9792d08ce398802715a63eafe,85dce2c836fe03aefc07b7f4e0aec575e170f1cd,"'Nested blueprints\n\nThis allows blueprints to be nested within blueprints via a new\nBlueprint.register_blueprint method. This should provide a use case\nthat has been desired for the past ~10 years.\n\nThis works by setting the endpoint name to be the blueprint names,\nfrom parent to child delimeted by ""."" and then iterating over the\nblueprint names in reverse order in the app (from most specific to\nmost general). This means that the expectation of nesting a blueprint\nwithin a nested blueprint is met.'","'@@ -69,6 +69,7 @@ Unreleased\n     ``@app.route(""/login"", methods=[""POST""])``. :pr:`3907`\n -   Support async views, error handlers, before and after request, and\n     teardown functions. :pr:`3412`\n+-   Support nesting blueprints. :issue:`593, 1548`, :pr:`3923`\n \n \n Version 1.1.2\n'",0,0
docs/blueprints.rst,docs/blueprints.rst,f92e820b4bf357e9792d08ce398802715a63eafe,85dce2c836fe03aefc07b7f4e0aec575e170f1cd,"'Nested blueprints\n\nThis allows blueprints to be nested within blueprints via a new\nBlueprint.register_blueprint method. This should provide a use case\nthat has been desired for the past ~10 years.\n\nThis works by setting the endpoint name to be the blueprint names,\nfrom parent to child delimeted by ""."" and then iterating over the\nblueprint names in reverse order in the app (from most specific to\nmost general). This means that the expectation of nesting a blueprint\nwithin a nested blueprint is met.'","'@@ -120,6 +120,31 @@ On top of that you can register blueprints multiple times though not every\n blueprint might respond properly to that.  In fact it depends on how the\n blueprint is implemented if it can be mounted more than once.\n \n+Nesting Blueprints\n+------------------\n+\n+It is possible to register a blueprint on another blueprint.\n+\n+.. code-block:: python\n+\n+    parent = Blueprint(""parent"", __name__, url_prefix=""/parent"")\n+    child = Blueprint(""child"", __name__, url_prefix=""/child)\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent)\n+\n+The child blueprint will gain the parent\'s name as a prefix to its\n+name, and child URLs will be prefixed with the parent\'s URL prefix.\n+\n+.. code-block:: python\n+\n+    url_for(\'parent.child.create\')\n+    /parent/child/create\n+\n+Blueprint-specific before request functions, etc. registered with the\n+parent will trigger for the child. If a child does not have an error\n+handler that can handle a given exception, the parent\'s will be tried.\n+\n+\n Blueprint Resources\n -------------------\n \n'",1.0,2.0
src/flask/app.py,src/flask/app.py,f92e820b4bf357e9792d08ce398802715a63eafe,85dce2c836fe03aefc07b7f4e0aec575e170f1cd,"'Nested blueprints\n\nThis allows blueprints to be nested within blueprints via a new\nBlueprint.register_blueprint method. This should provide a use case\nthat has been desired for the past ~10 years.\n\nThis works by setting the endpoint name to be the blueprint names,\nfrom parent to child delimeted by ""."" and then iterating over the\nblueprint names in reverse order in the app (from most specific to\nmost general). This means that the expectation of nesting a blueprint\nwithin a nested blueprint is met.'","'@@ -723,9 +723,9 @@ class Flask(Scaffold):\n         funcs = self.template_context_processors[None]\n         reqctx = _request_ctx_stack.top\n         if reqctx is not None:\n-            bp = reqctx.request.blueprint\n-            if bp is not None and bp in self.template_context_processors:\n-                funcs = chain(funcs, self.template_context_processors[bp])\n+            for bp in self._request_blueprints():\n+                if bp in self.template_context_processors:\n+                    funcs = chain(funcs, self.template_context_processors[bp])\n         orig_ctx = context.copy()\n         for func in funcs:\n             context.update(func())\n@@ -987,21 +987,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        first_registration = False\n-\n-        if blueprint.name in self.blueprints:\n-            assert self.blueprints[blueprint.name] is blueprint, (\n-                ""A name collision occurred between blueprints""\n-                f"" {blueprint!r} and {self.blueprints[blueprint.name]!r}.""\n-                f"" Both share the same name {blueprint.name!r}.""\n-                f"" Blueprints that are created on the fly need unique""\n-                f"" names.""\n-            )\n-        else:\n-            self.blueprints[blueprint.name] = blueprint\n-            first_registration = True\n-\n-        blueprint.register(self, options, first_registration)\n+        blueprint.register(self, options)\n \n     def iter_blueprints(self):\n         """"""Iterates over all blueprints by the order they were registered.\n@@ -1235,22 +1221,18 @@ class Flask(Scaffold):\n         """"""\n         exc_class, code = self._get_exc_class_and_code(type(e))\n \n-        for name, c in (\n-            (request.blueprint, code),\n-            (None, code),\n-            (request.blueprint, None),\n-            (None, None),\n-        ):\n-            handler_map = self.error_handler_spec[name][c]\n+        for c in [code, None]:\n+            for name in chain(self._request_blueprints(), [None]):\n+                handler_map = self.error_handler_spec[name][c]\n \n-            if not handler_map:\n-                continue\n+                if not handler_map:\n+                    continue\n \n-            for cls in exc_class.__mro__:\n-                handler = handler_map.get(cls)\n+                for cls in exc_class.__mro__:\n+                    handler = handler_map.get(cls)\n \n-                if handler is not None:\n-                    return handler\n+                    if handler is not None:\n+                        return handler\n \n     def handle_http_exception(self, e):\n         """"""Handles an HTTP exception.  By default this will invoke the\n@@ -1749,17 +1731,17 @@ class Flask(Scaffold):\n         further request handling is stopped.\n         """"""\n \n-        bp = _request_ctx_stack.top.request.blueprint\n-\n         funcs = self.url_value_preprocessors[None]\n-        if bp is not None and bp in self.url_value_preprocessors:\n-            funcs = chain(funcs, self.url_value_preprocessors[bp])\n+        for bp in self._request_blueprints():\n+            if bp in self.url_value_preprocessors:\n+                funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n         funcs = self.before_request_funcs[None]\n-        if bp is not None and bp in self.before_request_funcs:\n-            funcs = chain(funcs, self.before_request_funcs[bp])\n+        for bp in self._request_blueprints():\n+            if bp in self.before_request_funcs:\n+                funcs = chain(funcs, self.before_request_funcs[bp])\n         for func in funcs:\n             rv = func()\n             if rv is not None:\n@@ -1779,10 +1761,10 @@ class Flask(Scaffold):\n                  instance of :attr:`response_class`.\n         """"""\n         ctx = _request_ctx_stack.top\n-        bp = ctx.request.blueprint\n         funcs = ctx._after_request_functions\n-        if bp is not None and bp in self.after_request_funcs:\n-            funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n+        for bp in self._request_blueprints():\n+            if bp in self.after_request_funcs:\n+                funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n         if None in self.after_request_funcs:\n             funcs = chain(funcs, reversed(self.after_request_funcs[None]))\n         for handler in funcs:\n@@ -1815,9 +1797,9 @@ class Flask(Scaffold):\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n         funcs = reversed(self.teardown_request_funcs[None])\n-        bp = _request_ctx_stack.top.request.blueprint\n-        if bp is not None and bp in self.teardown_request_funcs:\n-            funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n+        for bp in self._request_blueprints():\n+            if bp in self.teardown_request_funcs:\n+                funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n         for func in funcs:\n             func(exc)\n         request_tearing_down.send(self, exc=exc)\n@@ -1985,3 +1967,9 @@ class Flask(Scaffold):\n         wrapped to apply middleware.\n         """"""\n         return self.wsgi_app(environ, start_response)\n+\n+    def _request_blueprints(self):\n+        if _request_ctx_stack.top.request.blueprint is None:\n+            return []\n+        else:\n+            return reversed(_request_ctx_stack.top.request.blueprint.split("".""))\n'",3.014925373134328,3.0
src/flask/blueprints.py,src/flask/blueprints.py,f92e820b4bf357e9792d08ce398802715a63eafe,85dce2c836fe03aefc07b7f4e0aec575e170f1cd,"'Nested blueprints\n\nThis allows blueprints to be nested within blueprints via a new\nBlueprint.register_blueprint method. This should provide a use case\nthat has been desired for the past ~10 years.\n\nThis works by setting the endpoint name to be the blueprint names,\nfrom parent to child delimeted by ""."" and then iterating over the\nblueprint names in reverse order in the app (from most specific to\nmost general). This means that the expectation of nesting a blueprint\nwithin a nested blueprint is met.'","'@@ -45,6 +45,8 @@ class BlueprintSetupState:\n         #: blueprint.\n         self.url_prefix = url_prefix\n \n+        self.name_prefix = self.options.get(""name_prefix"", """")\n+\n         #: A dictionary with URL defaults that is added to each and every\n         #: URL that was defined with the blueprint.\n         self.url_defaults = dict(self.blueprint.url_values_defaults)\n@@ -68,7 +70,7 @@ class BlueprintSetupState:\n             defaults = dict(defaults, **options.pop(""defaults""))\n         self.app.add_url_rule(\n             rule,\n-            f""{self.blueprint.name}.{endpoint}"",\n+            f""{self.name_prefix}{self.blueprint.name}.{endpoint}"",\n             view_func,\n             defaults=defaults,\n             **options,\n@@ -168,6 +170,7 @@ class Blueprint(Scaffold):\n \n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n+        self._blueprints = []\n \n     def _is_setup_finished(self):\n         return self.warn_on_modifications and self._got_registered_once\n@@ -210,7 +213,16 @@ class Blueprint(Scaffold):\n         """"""\n         return BlueprintSetupState(self, app, options, first_registration)\n \n-    def register(self, app, options, first_registration=False):\n+    def register_blueprint(self, blueprint, **options):\n+        """"""Register a :class:`~flask.Blueprint` on this blueprint. Keyword\n+        arguments passed to this method will override the defaults set\n+        on the blueprint.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        self._blueprints.append((blueprint, options))\n+\n+    def register(self, app, options):\n         """"""Called by :meth:`Flask.register_blueprint` to register all\n         views and callbacks registered on the blueprint with the\n         application. Creates a :class:`.BlueprintSetupState` and calls\n@@ -223,6 +235,20 @@ class Blueprint(Scaffold):\n         :param first_registration: Whether this is the first time this\n             blueprint has been registered on the application.\n         """"""\n+        first_registration = False\n+\n+        if self.name in app.blueprints:\n+            assert app.blueprints[self.name] is self, (\n+                ""A name collision occurred between blueprints""\n+                f"" {self!r} and {app.blueprints[self.name]!r}.""\n+                f"" Both share the same name {self.name!r}.""\n+                f"" Blueprints that are created on the fly need unique""\n+                f"" names.""\n+            )\n+        else:\n+            app.blueprints[self.name] = self\n+            first_registration = True\n+\n         self._got_registered_once = True\n         state = self.make_setup_state(app, options, first_registration)\n \n@@ -278,19 +304,28 @@ class Blueprint(Scaffold):\n         for deferred in self.deferred_functions:\n             deferred(state)\n \n-        if not self.cli.commands:\n-            return\n-\n         cli_resolved_group = options.get(""cli_group"", self.cli_group)\n \n-        if cli_resolved_group is None:\n-            app.cli.commands.update(self.cli.commands)\n-        elif cli_resolved_group is _sentinel:\n-            self.cli.name = self.name\n-            app.cli.add_command(self.cli)\n-        else:\n-            self.cli.name = cli_resolved_group\n-            app.cli.add_command(self.cli)\n+        if self.cli.commands:\n+            if cli_resolved_group is None:\n+                app.cli.commands.update(self.cli.commands)\n+            elif cli_resolved_group is _sentinel:\n+                self.cli.name = self.name\n+                app.cli.add_command(self.cli)\n+            else:\n+                self.cli.name = cli_resolved_group\n+                app.cli.add_command(self.cli)\n+\n+        for blueprint, bp_options in self._blueprints:\n+            url_prefix = options.get(""url_prefix"", """")\n+            if ""url_prefix"" in bp_options:\n+                url_prefix = (\n+                    url_prefix.rstrip(""/"") + ""/"" + bp_options[""url_prefix""].lstrip(""/"")\n+                )\n+\n+            bp_options[""url_prefix""] = url_prefix\n+            bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n+            blueprint.register(app, bp_options)\n \n     def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n         """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n'",1.9696969696969697,2.0294117647058822
tests/test_blueprints.py,tests/test_blueprints.py,f92e820b4bf357e9792d08ce398802715a63eafe,85dce2c836fe03aefc07b7f4e0aec575e170f1cd,"'Nested blueprints\n\nThis allows blueprints to be nested within blueprints via a new\nBlueprint.register_blueprint method. This should provide a use case\nthat has been desired for the past ~10 years.\n\nThis works by setting the endpoint name to be the blueprint names,\nfrom parent to child delimeted by ""."" and then iterating over the\nblueprint names in reverse order in the app (from most specific to\nmost general). This means that the expectation of nesting a blueprint\nwithin a nested blueprint is met.'","'@@ -850,3 +850,52 @@ def test_app_url_processors(app, client):\n \n     assert client.get(""/de/"").data == b""/de/about""\n     assert client.get(""/de/about"").data == b""/de/""\n+\n+\n+def test_nested_blueprint(app, client):\n+    parent = flask.Blueprint(""parent"", __name__)\n+    child = flask.Blueprint(""child"", __name__)\n+    grandchild = flask.Blueprint(""grandchild"", __name__)\n+\n+    @parent.errorhandler(403)\n+    def forbidden(e):\n+        return ""Parent no"", 403\n+\n+    @parent.route(""/"")\n+    def parent_index():\n+        return ""Parent yes""\n+\n+    @parent.route(""/no"")\n+    def parent_no():\n+        flask.abort(403)\n+\n+    @child.route(""/"")\n+    def child_index():\n+        return ""Child yes""\n+\n+    @child.route(""/no"")\n+    def child_no():\n+        flask.abort(403)\n+\n+    @grandchild.errorhandler(403)\n+    def grandchild_forbidden(e):\n+        return ""Grandchild no"", 403\n+\n+    @grandchild.route(""/"")\n+    def grandchild_index():\n+        return ""Grandchild yes""\n+\n+    @grandchild.route(""/no"")\n+    def grandchild_no():\n+        flask.abort(403)\n+\n+    child.register_blueprint(grandchild, url_prefix=""/grandchild"")\n+    parent.register_blueprint(child, url_prefix=""/child"")\n+    app.register_blueprint(parent, url_prefix=""/parent"")\n+\n+    assert client.get(""/parent/"").data == b""Parent yes""\n+    assert client.get(""/parent/child/"").data == b""Child yes""\n+    assert client.get(""/parent/child/grandchild/"").data == b""Grandchild yes""\n+    assert client.get(""/parent/no"").data == b""Parent no""\n+    assert client.get(""/parent/child/no"").data == b""Parent no""\n+    assert client.get(""/parent/child/grandchild/no"").data == b""Grandchild no""\n'",1.0495867768595042,1.0461538461538462
CHANGES.rst,CHANGES.rst,32272da9ac6e16fa22d3401b2d995d5bf3db9492,64213fc0214c1044fa2c9e60d0e2683e75d125c0,'shell calls sys.__interativehook__\n\nThis will set up readline tab and history completion by default.',"'@@ -70,6 +70,8 @@ Unreleased\n -   Support async views, error handlers, before and after request, and\n     teardown functions. :pr:`3412`\n -   Support nesting blueprints. :issue:`593, 1548`, :pr:`3923`\n+-   ``flask shell`` sets up tab and history completion like the default\n+    ``python`` shell if ``readline`` is installed. :issue:`3941`\n \n \n Version 1.1.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,32272da9ac6e16fa22d3401b2d995d5bf3db9492,64213fc0214c1044fa2c9e60d0e2683e75d125c0,'shell calls sys.__interativehook__\n\nThis will set up readline tab and history completion by default.',"'@@ -887,6 +887,24 @@ def shell_command():\n \n     ctx.update(app.make_shell_context())\n \n+    # Site, customize, or startup script can set a hook to call when\n+    # entering interactive mode. The default one sets up readline with\n+    # tab and history completion.\n+    interactive_hook = getattr(sys, ""__interactivehook__"", None)\n+\n+    if interactive_hook is not None:\n+        try:\n+            import readline\n+            from rlcompleter import Completer\n+        except ImportError:\n+            pass\n+        else:\n+            # rlcompleter uses __main__.__dict__ by default, which is\n+            # flask.__main__. Use the shell context instead.\n+            readline.set_completer(Completer(ctx).complete)\n+\n+        interactive_hook()\n+\n     code.interact(banner=banner, local=ctx)\n \n \n'",4.138888888888889,4.194444444444445
src/flask/cli.py,src/flask/cli.py,8ab4967703c2f5c500174f46b672d80e32f55d85,16f51ef79989e5d7677e8241a438fe37836a994d,'consistent versions and deprecation messages',"'@@ -98,7 +98,7 @@ def call_factory(script_info, app_factory, args=None, kwargs=None):\n     if ""script_info"" in sig.parameters:\n         warnings.warn(\n             ""The \'script_info\' argument is deprecated and will not be""\n-            "" passed to the app factory function in 2.1."",\n+            "" passed to the app factory function in Flask 2.1."",\n             DeprecationWarning,\n         )\n         kwargs[""script_info""] = script_info\n@@ -110,7 +110,8 @@ def call_factory(script_info, app_factory, args=None, kwargs=None):\n     ):\n         warnings.warn(\n             ""Script info is deprecated and will not be passed as the""\n-            "" single argument to the app factory function in 2.1."",\n+            "" single argument to the app factory function in Flask""\n+            "" 2.1."",\n             DeprecationWarning,\n         )\n         args.append(script_info)\n'",4.194444444444445,4.194444444444445
src/flask/helpers.py,src/flask/helpers.py,8ab4967703c2f5c500174f46b672d80e32f55d85,16f51ef79989e5d7677e8241a438fe37836a994d,'consistent versions and deprecation messages',"'@@ -446,8 +446,9 @@ def _prepare_send_file_kwargs(\n ):\n     if attachment_filename is not None:\n         warnings.warn(\n-            ""The \'attachment_filename\' parameter has been renamed to \'download_name\'.""\n-            "" The old name will be removed in Flask 2.1."",\n+            ""The \'attachment_filename\' parameter has been renamed to""\n+            "" \'download_name\'. The old name will be removed in Flask""\n+            "" 2.1."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -455,8 +456,8 @@ def _prepare_send_file_kwargs(\n \n     if cache_timeout is not None:\n         warnings.warn(\n-            ""The \'cache_timeout\' parameter has been renamed to \'max_age\'. The old name""\n-            "" will be removed in Flask 2.1."",\n+            ""The \'cache_timeout\' parameter has been renamed to""\n+            "" \'max_age\'. The old name will be removed in Flask 2.1."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -464,8 +465,8 @@ def _prepare_send_file_kwargs(\n \n     if add_etags is not None:\n         warnings.warn(\n-            ""The \'add_etags\' parameter has been renamed to \'etag\'. The old name will be""\n-            "" removed in Flask 2.1."",\n+            ""The \'add_etags\' parameter has been renamed to \'etag\'. The""\n+            "" old name will be removed in Flask 2.1."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -549,7 +550,7 @@ def send_file(\n         ``conditional`` is enabled and ``max_age`` is not set by\n         default.\n \n-    .. versionchanged:: 2.0.0\n+    .. versionchanged:: 2.0\n         ``etag`` replaces the ``add_etags`` parameter. It can be a\n         string to use instead of generating one.\n \n@@ -629,7 +630,7 @@ def safe_join(directory, *pathnames):\n     """"""\n     warnings.warn(\n         ""\'flask.helpers.safe_join\' is deprecated and will be removed in""\n-        "" 2.1. Use \'werkzeug.utils.safe_join\' instead."",\n+        "" Flask 2.1. Use \'werkzeug.utils.safe_join\' instead."",\n         DeprecationWarning,\n         stacklevel=2,\n     )\n'",2.8181818181818183,2.8181818181818183
src/flask/json/__init__.py,src/flask/json/__init__.py,8ab4967703c2f5c500174f46b672d80e32f55d85,16f51ef79989e5d7677e8241a438fe37836a994d,'consistent versions and deprecation messages',"'@@ -103,7 +103,7 @@ def dumps(obj, app=None, **kwargs):\n     :param kwargs: Extra arguments passed to :func:`json.dumps`.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in 2.1.\n+        ``encoding`` is deprecated and will be removed in Flask 2.1.\n \n     .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n@@ -115,7 +115,7 @@ def dumps(obj, app=None, **kwargs):\n \n     if encoding is not None:\n         warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in 2.1."",\n+            ""\'encoding\' is deprecated and will be removed in Flask 2.1."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -140,7 +140,7 @@ def dump(obj, fp, app=None, **kwargs):\n \n     .. versionchanged:: 2.0\n         Writing to a binary file, and the ``encoding`` argument, is\n-        deprecated and will be removed in 2.1.\n+        deprecated and will be removed in Flask 2.1.\n     """"""\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n@@ -155,7 +155,7 @@ def dump(obj, fp, app=None, **kwargs):\n     if show_warning:\n         warnings.warn(\n             ""Writing to a binary file, and the \'encoding\' argument, is""\n-            "" deprecated and will be removed in 2.1."",\n+            "" deprecated and will be removed in Flask 2.1."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -175,8 +175,8 @@ def loads(s, app=None, **kwargs):\n     :param kwargs: Extra arguments passed to :func:`json.loads`.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in 2.1. The data\n-        must be a string or UTF-8 bytes.\n+        ``encoding`` is deprecated and will be removed in Flask 2.1. The\n+        data must be a string or UTF-8 bytes.\n \n     .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n@@ -187,8 +187,8 @@ def loads(s, app=None, **kwargs):\n \n     if encoding is not None:\n         warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in 2.1. The""\n-            "" data must be a string or UTF-8 bytes."",\n+            ""\'encoding\' is deprecated and will be removed in Flask 2.1.""\n+            "" The data must be a string or UTF-8 bytes."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -211,16 +211,17 @@ def load(fp, app=None, **kwargs):\n     :param kwargs: Extra arguments passed to :func:`json.load`.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in 2.1. The file\n-        must be text mode, or binary mode with UTF-8 bytes.\n+        ``encoding`` is deprecated and will be removed in Flask 2.1. The\n+        file must be text mode, or binary mode with UTF-8 bytes.\n     """"""\n     _load_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(""encoding"", None)\n \n     if encoding is not None:\n         warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in 2.1. The""\n-            "" file must be text mode, or binary mode with UTF-8 bytes."",\n+            ""\'encoding\' is deprecated and will be removed in Flask 2.1.""\n+            "" The file must be text mode, or binary mode with UTF-8""\n+            "" bytes."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n'",4.0,4.0
src/flask/scaffold.py,src/flask/scaffold.py,8ab4967703c2f5c500174f46b672d80e32f55d85,16f51ef79989e5d7677e8241a438fe37836a994d,'consistent versions and deprecation messages',"'@@ -56,7 +56,7 @@ class Scaffold:\n         are relative to. Typically not set, it is discovered based on\n         the ``import_name``.\n \n-    .. versionadded:: 2.0.0\n+    .. versionadded:: 2.0\n     """"""\n \n     name: str\n'",1.9268292682926829,1.9268292682926829
src/flask/helpers.py,src/flask/helpers.py,5a7a4ab4c5eed63a23762e09b7e6a739375ad0f0,8ab4967703c2f5c500174f46b672d80e32f55d85,'locked_cached_property subclasses cached_property',"'@@ -18,10 +18,6 @@ from .globals import request\n from .globals import session\n from .signals import message_flashed\n \n-# sentinel\n-_missing = object()\n-\n-\n # what separators does this operating system provide that are not a slash?\n # this is used by the send_from_directory function to ensure that nobody is\n # able to access files from outside the filesystem.\n@@ -677,30 +673,33 @@ def send_from_directory(directory, path, **kwargs):\n     )\n \n \n-class locked_cached_property:\n-    """"""A decorator that converts a function into a lazy property.  The\n-    function wrapped is called the first time to retrieve the result\n-    and then that calculated result is used the next time you access\n-    the value.  Works like the one in Werkzeug but has a lock for\n-    thread safety.\n+class locked_cached_property(werkzeug.utils.cached_property):\n+    """"""A :func:`property` that is only evaluated once. Like\n+    :class:`werkzeug.utils.cached_property` except access uses a lock\n+    for thread safety.\n+\n+    .. versionchanged:: 2.0\n+        Inherits from Werkzeug\'s ``cached_property`` (and ``property``).\n     """"""\n \n-    def __init__(self, func, name=None, doc=None):\n-        self.__name__ = name or func.__name__\n-        self.__module__ = func.__module__\n-        self.__doc__ = doc or func.__doc__\n-        self.func = func\n+    def __init__(self, fget, name=None, doc=None):\n+        super().__init__(fget, name=name, doc=doc)\n         self.lock = RLock()\n \n     def __get__(self, obj, type=None):\n         if obj is None:\n             return self\n+\n+        with self.lock:\n+            return super().__get__(obj, type=type)\n+\n+    def __set__(self, obj, value):\n+        with self.lock:\n+            super().__set__(obj, value)\n+\n+    def __delete__(self, obj):\n         with self.lock:\n-            value = obj.__dict__.get(self.__name__, _missing)\n-            if value is _missing:\n-                value = self.func(obj)\n-                obj.__dict__[self.__name__] = value\n-            return value\n+            super().__delete__(obj)\n \n \n def total_seconds(td):\n'",2.8181818181818183,2.5416666666666665
CHANGES.rst,CHANGES.rst,85b430a3669191ee0d092393f98c0dae47218cab,f3ed1322a6d28470c259d6948906acd93bddb78b,'deprecate total_seconds',"'@@ -72,6 +72,8 @@ Unreleased\n -   Support nesting blueprints. :issue:`593, 1548`, :pr:`3923`\n -   ``flask shell`` sets up tab and history completion like the default\n     ``python`` shell if ``readline`` is installed. :issue:`3941`\n+-   ``helpers.total_seconds()`` is deprecated. Use\n+    ``timedelta.total_seconds()`` instead. :pr:`3962`\n \n \n Version 1.1.2\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,85b430a3669191ee0d092393f98c0dae47218cab,f3ed1322a6d28470c259d6948906acd93bddb78b,'deprecate total_seconds',"'@@ -709,7 +709,17 @@ def total_seconds(td):\n \n     :returns: number of seconds\n     :rtype: int\n+\n+    .. deprecated:: 2.0\n+        Will be removed in Flask 2.1. Use\n+        :meth:`timedelta.total_seconds` instead.\n     """"""\n+    warnings.warn(\n+        ""\'total_seconds\' is deprecated and will be removed in Flask""\n+        "" 2.1. Use \'timedelta.total_seconds\' instead."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n     return td.days * 60 * 60 * 24 + td.seconds\n \n \n'",2.5416666666666665,2.5416666666666665
src/flask/sessions.py,src/flask/sessions.py,85b430a3669191ee0d092393f98c0dae47218cab,f3ed1322a6d28470c259d6948906acd93bddb78b,'deprecate total_seconds',"'@@ -8,7 +8,6 @@ from itsdangerous import URLSafeTimedSerializer\n from werkzeug.datastructures import CallbackDict\n \n from .helpers import is_ip\n-from .helpers import total_seconds\n from .json.tag import TaggedJSONSerializer\n \n \n@@ -340,7 +339,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         val = request.cookies.get(self.get_cookie_name(app))\n         if not val:\n             return self.session_class()\n-        max_age = total_seconds(app.permanent_session_lifetime)\n+        max_age = int(app.permanent_session_lifetime.total_seconds())\n         try:\n             data = s.loads(val, max_age=max_age)\n             return self.session_class(data)\n'",1.826086956521739,1.826086956521739
src/flask/helpers.py,src/flask/helpers.py,ec27677f956859fb91c87c4ec7e2766873e67bc0,85b430a3669191ee0d092393f98c0dae47218cab,'remove _os_alt_seps',"'@@ -18,13 +18,6 @@ from .globals import request\n from .globals import session\n from .signals import message_flashed\n \n-# what separators does this operating system provide that are not a slash?\n-# this is used by the send_from_directory function to ensure that nobody is\n-# able to access files from outside the filesystem.\n-_os_alt_seps = list(\n-    sep for sep in [os.path.sep, os.path.altsep] if sep not in (None, ""/"")\n-)\n-\n \n def get_env():\n     """"""Get the environment the app is running in, indicated by the\n'",2.5416666666666665,2.5416666666666665
src/flask/app.py,src/flask/app.py,5c6a0f0c121297362b4c78e4240dd8445b9d9f12,fab26dcbe9215492420d28c47d50167716faaf4f,"'Fix wrapped view function comparison\n\nWrapped functions are not comparable, see\nhttps://bugs.python.org/issue3564, therefore a marker is used to note\nwhen the function has been sync wrapped to allow comparison with the\nwrapped function instead.\n\nThis ensures that multiple route decorators work without raising\nexceptions i.e.,\n\n    @app.route(""/"")\n    @app.route(""/a"")\n    async def index():\n        ...\n\nworks.'","'@@ -1048,6 +1048,8 @@ class Flask(Scaffold):\n         self.url_map.add(rule)\n         if view_func is not None:\n             old_func = self.view_functions.get(endpoint)\n+            if getattr(old_func, ""_flask_sync_wrapper"", False):\n+                old_func = old_func.__wrapped__\n             if old_func is not None and old_func != view_func:\n                 raise AssertionError(\n                     ""View function mapping is overwriting an existing""\n'",3.0,3.014705882352941
src/flask/helpers.py,src/flask/helpers.py,5c6a0f0c121297362b4c78e4240dd8445b9d9f12,fab26dcbe9215492420d28c47d50167716faaf4f,"'Fix wrapped view function comparison\n\nWrapped functions are not comparable, see\nhttps://bugs.python.org/issue3564, therefore a marker is used to note\nwhen the function has been sync wrapped to allow comparison with the\nwrapped function instead.\n\nThis ensures that multiple route decorators work without raising\nexceptions i.e.,\n\n    @app.route(""/"")\n    @app.route(""/a"")\n    async def index():\n        ...\n\nworks.'","'@@ -780,4 +780,5 @@ def run_async(func):\n \n         return async_to_sync(inner)(*args, **kwargs)\n \n+    outer._flask_sync_wrapper = True\n     return outer\n'",2.5416666666666665,2.5416666666666665
tests/test_async.py,tests/test_async.py,5c6a0f0c121297362b4c78e4240dd8445b9d9f12,fab26dcbe9215492420d28c47d50167716faaf4f,"'Fix wrapped view function comparison\n\nWrapped functions are not comparable, see\nhttps://bugs.python.org/issue3564, therefore a marker is used to note\nwhen the function has been sync wrapped to allow comparison with the\nwrapped function instead.\n\nThis ensures that multiple route decorators work without raising\nexceptions i.e.,\n\n    @app.route(""/"")\n    @app.route(""/a"")\n    async def index():\n        ...\n\nworks.'","'@@ -24,6 +24,7 @@ def _async_app():\n     app = Flask(__name__)\n \n     @app.route(""/"", methods=[""GET"", ""POST""])\n+    @app.route(""/home"", methods=[""GET"", ""POST""])\n     async def index():\n         await asyncio.sleep(0)\n         return request.method\n@@ -57,7 +58,7 @@ def _async_app():\n \n \n @pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n-@pytest.mark.parametrize(""path"", [""/"", ""/bp/""])\n+@pytest.mark.parametrize(""path"", [""/"", ""/home"", ""/bp/""])\n def test_async_route(path, async_app):\n     test_client = async_app.test_client()\n     response = test_client.get(path)\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,6f09b4b5ed9cb63aacd57606159c0dae0c015ae0,'update pallets-sphinx-themes',"'@@ -8,6 +8,8 @@ alabaster==0.7.12\n     # via sphinx\n appdirs==1.4.4\n     # via virtualenv\n+asgiref==3.3.4\n+    # via -r requirements/tests.in\n attrs==20.3.0\n     # via pytest\n babel==2.9.0\n@@ -48,12 +50,11 @@ nodeenv==1.5.0\n     # via pre-commit\n packaging==20.9\n     # via\n-    #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==1.2.3\n+pallets-sphinx-themes==2.0.0rc1\n     # via -r requirements/docs.in\n pip-tools==5.5.0\n     # via -r requirements/dev.in\n'",0,0
requirements/docs.in,requirements/docs.in,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,6f09b4b5ed9cb63aacd57606159c0dae0c015ae0,'update pallets-sphinx-themes',"'@@ -1,5 +1,4 @@\n-Pallets-Sphinx-Themes\n-packaging\n+Pallets-Sphinx-Themes >= 2.0.0rc1\n Sphinx\n sphinx-issues\n sphinxcontrib-log-cabinet\n'",0,0
requirements/docs.txt,requirements/docs.txt,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,6f09b4b5ed9cb63aacd57606159c0dae0c015ae0,'update pallets-sphinx-themes',"'@@ -24,10 +24,9 @@ markupsafe==1.1.1\n     # via jinja2\n packaging==20.9\n     # via\n-    #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==1.2.3\n+pallets-sphinx-themes==2.0.0rc1\n     # via -r requirements/docs.in\n pygments==2.7.4\n     # via\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,078a3c3631b43e3c85123d7fc44270be6c05a4db,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,'update requirements',"'@@ -16,7 +16,7 @@ repos:\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 3.9.0\n+    rev: 3.9.1\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
requirements/dev.txt,requirements/dev.txt,078a3c3631b43e3c85123d7fc44270be6c05a4db,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,'update requirements',"'@@ -34,7 +34,7 @@ filelock==3.0.12\n     #   virtualenv\n greenlet==1.0.0\n     # via -r requirements/tests.in\n-identify==1.5.13\n+identify==2.2.3\n     # via pre-commit\n idna==2.10\n     # via requests\n@@ -46,7 +46,7 @@ jinja2==2.11.3\n     # via sphinx\n markupsafe==1.1.1\n     # via jinja2\n-nodeenv==1.5.0\n+nodeenv==1.6.0\n     # via pre-commit\n packaging==20.9\n     # via\n@@ -56,27 +56,29 @@ packaging==20.9\n     #   tox\n pallets-sphinx-themes==2.0.0rc1\n     # via -r requirements/docs.in\n-pip-tools==5.5.0\n+pep517==0.10.0\n+    # via pip-tools\n+pip-tools==6.1.0\n     # via -r requirements/dev.in\n pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.10.1\n+pre-commit==2.12.0\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n     #   pytest\n     #   tox\n-pygments==2.7.4\n+pygments==2.8.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.2\n+pytest==6.2.3\n     # via -r requirements/tests.in\n-python-dotenv==0.15.0\n+python-dotenv==0.17.0\n     # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n@@ -92,9 +94,9 @@ snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.0.1\n+sphinx-tabs==2.1.0\n     # via -r requirements/docs.in\n-sphinx==3.5.1\n+sphinx==3.5.4\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -117,14 +119,15 @@ sphinxcontrib-serializinghtml==1.1.4\n     # via sphinx\n toml==0.10.2\n     # via\n+    #   pep517\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.22.0\n+tox==3.23.0\n     # via -r requirements/dev.in\n urllib3==1.26.4\n     # via requests\n-virtualenv==20.4.2\n+virtualenv==20.4.3\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,078a3c3631b43e3c85123d7fc44270be6c05a4db,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,'update requirements',"'@@ -28,7 +28,7 @@ packaging==20.9\n     #   sphinx\n pallets-sphinx-themes==2.0.0rc1\n     # via -r requirements/docs.in\n-pygments==2.7.4\n+pygments==2.8.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -42,9 +42,9 @@ snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.0.1\n+sphinx-tabs==2.1.0\n     # via -r requirements/docs.in\n-sphinx==3.5.1\n+sphinx==3.5.4\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/tests.txt,requirements/tests.txt,078a3c3631b43e3c85123d7fc44270be6c05a4db,e00a4a4b445b07a10ad79b4bfef78d1f57bb3b66,'update requirements',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile requirements/tests.in\n #\n-asgiref==3.2.10\n+asgiref==3.3.4\n     # via -r requirements/tests.in\n attrs==20.3.0\n     # via pytest\n@@ -22,9 +22,9 @@ py==1.10.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.2\n+pytest==6.2.3\n     # via -r requirements/tests.in\n-python-dotenv==0.15.0\n+python-dotenv==0.17.0\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,afda0ed9f2e8e45b152919573858627a1cc86d3a,078a3c3631b43e3c85123d7fc44270be6c05a4db,'update deprecated pre-commit hook',"'@@ -25,6 +25,6 @@ repos:\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n     rev: v3.4.0\n     hooks:\n-      - id: check-byte-order-marker\n+      - id: fix-byte-order-marker\n       - id: trailing-whitespace\n       - id: end-of-file-fixer\n'",0,0
setup.py,setup.py,07000942dacaeffa84d9db57ea42570fcfb0395e,afda0ed9f2e8e45b152919573858627a1cc86d3a,'update minimum install requirements',"'@@ -4,10 +4,10 @@ from setuptools import setup\n setup(\n     name=""Flask"",\n     install_requires=[\n-        ""Werkzeug>=0.15"",\n-        ""Jinja2>=2.10.1"",\n-        ""itsdangerous>=0.24"",\n-        ""click>=5.1"",\n+        ""Werkzeug>=2.0.0rc4"",\n+        ""Jinja2>=3.0.0rc1"",\n+        ""itsdangerous>=2.0.0rc2"",\n+        ""click>=8.0.0rc1"",\n     ],\n     extras_require={\n         ""async"": [""asgiref>=3.2""],\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,7df5db7b0c78b0588f82f2148b51461f94320b90,07000942dacaeffa84d9db57ea42570fcfb0395e,'release version 2.0.0rc1',"'@@ -43,4 +43,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""2.0.0.dev""\n+__version__ = ""2.0.0rc1""\n'",0,0
docs/async-await.rst,docs/async-await.rst,f74cce164e2065a866bf6d89e53fa5a4b4840cf2,1c3b53c5db3c9c0f7a1f1650b020e6302705395b,"'Update documentation on asyncio background tasks\n\nThis has been an early question from users, so best to explain.'","""@@ -39,6 +39,23 @@ most use cases, but Flask's async support enables writing and using\n code that wasn't possible natively before.\n \n \n+Background tasks\n+----------------\n+\n+Async functions will run in an event loop until they complete, at\n+which stage the event loop will stop. This means any additional\n+spawned tasks that haven't completed when the async function completes\n+will be cancelled. Therefore you cannot spawn background tasks, for\n+example via ``asyncio.create_task``.\n+\n+If you wish to use background tasks it is best to use a task queue to\n+trigger background work, rather than spawn tasks in a view\n+function. With that in mind you can spawn asyncio tasks by serving\n+Flask with a ASGI server and utilising the asgiref WsgiToAsgi adapter\n+as described in :ref:`asgi`. This works as the adapter creates an\n+event loop that runs continually.\n+\n+\n When to use Quart instead\n -------------------------\n \n""",1.0,1.0
docs/deploying/asgi.rst,docs/deploying/asgi.rst,f74cce164e2065a866bf6d89e53fa5a4b4840cf2,1c3b53c5db3c9c0f7a1f1650b020e6302705395b,"'Update documentation on asyncio background tasks\n\nThis has been an early question from users, so best to explain.'","'@@ -1,3 +1,5 @@\n+.. _asgi:\n+\n ASGI\n ====\n \n'",0,0
.github/ISSUE_TEMPLATE/feature-request.md,.github/ISSUE_TEMPLATE/feature-request.md,c791f6312b092678c2a152d0605e49c26831cb05,03db9194d8d229d04e6a37b14bbe2499d23922d5,'Fix typo in issue template',"'@@ -5,7 +5,7 @@ about: Suggest a new feature for Flask\n \n <!--\n Replace this comment with a description of what the feature should do.\n-Include details such as links relevant specs or previous discussions.\n+Include details such as links to relevant specs or previous discussions.\n -->\n \n <!--\n'",0,0
CHANGES.rst,CHANGES.rst,e6e75e55470a0682ee8370e6d68062e515a248b9,c791f6312b092678c2a152d0605e49c26831cb05,'changelog for bumped pallets versions',"'@@ -6,6 +6,9 @@ Version 2.0.0\n Unreleased\n \n -   Drop support for Python 2 and 3.5.\n+-   Bump minimum versions of other Pallets projects: Werkzeug >= 2,\n+    Jinja2 >= 3, MarkupSafe >= 2, ItsDangerous >= 2, Click >= 8. Be sure\n+    to check the change logs for each project.\n -   JSON support no longer uses simplejson. To use another JSON module,\n     override ``app.json_encoder`` and ``json_decoder``. :issue:`3555`\n -   The ``encoding`` option to JSON functions is deprecated. :pr:`3562`\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,f405c6f19e002ae13708cb33f6d48257cc1ea37a,c791f6312b092678c2a152d0605e49c26831cb05,'Initial typing support\n\nThis enables type checking in CI and marks the project as typed.',"""@@ -31,6 +31,7 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n+          - {name: Typing, python: '3.9', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-python@v2\n""",0,0
MANIFEST.in,MANIFEST.in,f405c6f19e002ae13708cb33f6d48257cc1ea37a,c791f6312b092678c2a152d0605e49c26831cb05,'Initial typing support\n\nThis enables type checking in CI and marks the project as typed.',"'@@ -7,4 +7,5 @@ graft docs\n prune docs/_build\n graft examples\n graft tests\n+include src/flask/py.typed\n global-exclude *.pyc\n'",0,0
CHANGES.rst,CHANGES.rst,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -74,6 +74,7 @@ Unreleased\n     ``python`` shell if ``readline`` is installed. :issue:`3941`\n -   ``helpers.total_seconds()`` is deprecated. Use\n     ``timedelta.total_seconds()`` instead. :pr:`3962`\n+-   Add type hinting. :pr:`3973`.\n \n \n Version 1.1.2\n'",0,0
src/flask/app.py,src/flask/app.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,11 +1,14 @@\n import functools\n import inspect\n+import logging\n import os\n import sys\n+import typing as t\n import weakref\n from datetime import timedelta\n from itertools import chain\n from threading import Lock\n+from types import TracebackType\n \n from werkzeug.datastructures import Headers\n from werkzeug.datastructures import ImmutableDict\n@@ -15,6 +18,7 @@ from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n from werkzeug.routing import BuildError\n from werkzeug.routing import Map\n+from werkzeug.routing import MapAdapter\n from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n@@ -53,15 +57,30 @@ from .signals import request_started\n from .signals import request_tearing_down\n from .templating import DispatchingJinjaLoader\n from .templating import Environment\n+from .typing import AfterRequestCallable\n+from .typing import BeforeRequestCallable\n+from .typing import ErrorHandlerCallable\n+from .typing import ResponseReturnValue\n+from .typing import TeardownCallable\n+from .typing import TemplateContextProcessorCallable\n+from .typing import TemplateFilterCallable\n+from .typing import TemplateGlobalCallable\n+from .typing import TemplateTestCallable\n+from .typing import URLDefaultCallable\n+from .typing import URLValuePreprocessorCallable\n from .wrappers import Request\n from .wrappers import Response\n \n+if t.TYPE_CHECKING:\n+    from .blueprints import Blueprint\n+    from .testing import FlaskClient\n+    from .testing import FlaskCliRunner\n \n if sys.version_info >= (3, 8):\n     iscoroutinefunction = inspect.iscoroutinefunction\n else:\n \n-    def iscoroutinefunction(func):\n+    def iscoroutinefunction(func: t.Any) -> bool:\n         while inspect.ismethod(func):\n             func = func.__func__\n \n@@ -71,7 +90,7 @@ else:\n         return inspect.iscoroutinefunction(func)\n \n \n-def _make_timedelta(value):\n+def _make_timedelta(value: t.Optional[timedelta]) -> t.Optional[timedelta]:\n     if value is None or isinstance(value, timedelta):\n         return value\n \n@@ -295,7 +314,7 @@ class Flask(Scaffold):\n     #:     This is a ``dict`` instead of an ``ImmutableDict`` to allow\n     #:     easier configuration.\n     #:\n-    jinja_options = {}\n+    jinja_options: dict = {}\n \n     #: Default configuration parameters.\n     default_config = ImmutableDict(\n@@ -347,7 +366,7 @@ class Flask(Scaffold):\n     #: the test client that is used with when `test_client` is used.\n     #:\n     #: .. versionadded:: 0.7\n-    test_client_class = None\n+    test_client_class: t.Optional[t.Type[""FlaskClient""]] = None\n \n     #: The :class:`~click.testing.CliRunner` subclass, by default\n     #: :class:`~flask.testing.FlaskCliRunner` that is used by\n@@ -355,7 +374,7 @@ class Flask(Scaffold):\n     #: Flask app object as the first argument.\n     #:\n     #: .. versionadded:: 1.0\n-    test_cli_runner_class = None\n+    test_cli_runner_class: t.Optional[t.Type[""FlaskCliRunner""]] = None\n \n     #: the session interface to use.  By default an instance of\n     #: :class:`~flask.sessions.SecureCookieSessionInterface` is used here.\n@@ -365,16 +384,16 @@ class Flask(Scaffold):\n \n     def __init__(\n         self,\n-        import_name,\n-        static_url_path=None,\n-        static_folder=""static"",\n-        static_host=None,\n-        host_matching=False,\n-        subdomain_matching=False,\n-        template_folder=""templates"",\n-        instance_path=None,\n-        instance_relative_config=False,\n-        root_path=None,\n+        import_name: str,\n+        static_url_path: t.Optional[str] = None,\n+        static_folder: t.Optional[str] = ""static"",\n+        static_host: t.Optional[str] = None,\n+        host_matching: bool = False,\n+        subdomain_matching: bool = False,\n+        template_folder: t.Optional[str] = ""templates"",\n+        instance_path: t.Optional[str] = None,\n+        instance_relative_config: bool = False,\n+        root_path: t.Optional[str] = None,\n     ):\n         super().__init__(\n             import_name=import_name,\n@@ -409,14 +428,16 @@ class Flask(Scaffold):\n         #: tried.\n         #:\n         #: .. versionadded:: 0.9\n-        self.url_build_error_handlers = []\n+        self.url_build_error_handlers: t.List[\n+            t.Callable[[Exception, str, dict], str]\n+        ] = []\n \n         #: A list of functions that will be called at the beginning of the\n         #: first request to this instance. To register a function, use the\n         #: :meth:`before_first_request` decorator.\n         #:\n         #: .. versionadded:: 0.8\n-        self.before_first_request_funcs = []\n+        self.before_first_request_funcs: t.List[BeforeRequestCallable] = []\n \n         #: A list of functions that are called when the application context\n         #: is destroyed.  Since the application context is also torn down\n@@ -424,13 +445,13 @@ class Flask(Scaffold):\n         #: from databases.\n         #:\n         #: .. versionadded:: 0.9\n-        self.teardown_appcontext_funcs = []\n+        self.teardown_appcontext_funcs: t.List[TeardownCallable] = []\n \n         #: A list of shell context processor functions that should be run\n         #: when a shell context is created.\n         #:\n         #: .. versionadded:: 0.11\n-        self.shell_context_processors = []\n+        self.shell_context_processors: t.List[t.Callable[[], t.Dict[str, t.Any]]] = []\n \n         #: Maps registered blueprint names to blueprint objects. The\n         #: dict retains the order the blueprints were registered in.\n@@ -438,7 +459,7 @@ class Flask(Scaffold):\n         #: not track how often they were attached.\n         #:\n         #: .. versionadded:: 0.7\n-        self.blueprints = {}\n+        self.blueprints: t.Dict[str, ""Blueprint""] = {}\n \n         #: a place where extensions can store application specific state.  For\n         #: example this is where an extension could store database engines and\n@@ -449,7 +470,7 @@ class Flask(Scaffold):\n         #: ``\'foo\'``.\n         #:\n         #: .. versionadded:: 0.7\n-        self.extensions = {}\n+        self.extensions: dict = {}\n \n         #: The :class:`~werkzeug.routing.Map` for this instance.  You can use\n         #: this to change the routing converters after the class was created\n@@ -492,18 +513,18 @@ class Flask(Scaffold):\n                 f""{self.static_url_path}/<path:filename>"",\n                 endpoint=""static"",\n                 host=static_host,\n-                view_func=lambda **kw: self_ref().send_static_file(**kw),\n+                view_func=lambda **kw: self_ref().send_static_file(**kw),  # type: ignore # noqa: B950\n             )\n \n         # Set the name of the Click group in case someone wants to add\n         # the app\'s commands to another CLI tool.\n         self.cli.name = self.name\n \n-    def _is_setup_finished(self):\n+    def _is_setup_finished(self) -> bool:\n         return self.debug and self._got_first_request\n \n     @locked_cached_property\n-    def name(self):\n+    def name(self) -> str:  # type: ignore\n         """"""The name of the application.  This is usually the import name\n         with the difference that it\'s guessed from the run file if the\n         import name is main.  This name is used as a display name when\n@@ -520,7 +541,7 @@ class Flask(Scaffold):\n         return self.import_name\n \n     @property\n-    def propagate_exceptions(self):\n+    def propagate_exceptions(self) -> bool:\n         """"""Returns the value of the ``PROPAGATE_EXCEPTIONS`` configuration\n         value in case it\'s set, otherwise a sensible default is returned.\n \n@@ -532,7 +553,7 @@ class Flask(Scaffold):\n         return self.testing or self.debug\n \n     @property\n-    def preserve_context_on_exception(self):\n+    def preserve_context_on_exception(self) -> bool:\n         """"""Returns the value of the ``PRESERVE_CONTEXT_ON_EXCEPTION``\n         configuration value in case it\'s set, otherwise a sensible default\n         is returned.\n@@ -545,7 +566,7 @@ class Flask(Scaffold):\n         return self.debug\n \n     @locked_cached_property\n-    def logger(self):\n+    def logger(self) -> logging.Logger:\n         """"""A standard Python :class:`~logging.Logger` for the app, with\n         the same name as :attr:`name`.\n \n@@ -572,7 +593,7 @@ class Flask(Scaffold):\n         return create_logger(self)\n \n     @locked_cached_property\n-    def jinja_env(self):\n+    def jinja_env(self) -> Environment:\n         """"""The Jinja environment used to load templates.\n \n         The environment is created the first time this property is\n@@ -582,7 +603,7 @@ class Flask(Scaffold):\n         return self.create_jinja_environment()\n \n     @property\n-    def got_first_request(self):\n+    def got_first_request(self) -> bool:\n         """"""This attribute is set to ``True`` if the application started\n         handling the first request.\n \n@@ -590,7 +611,7 @@ class Flask(Scaffold):\n         """"""\n         return self._got_first_request\n \n-    def make_config(self, instance_relative=False):\n+    def make_config(self, instance_relative: bool = False) -> Config:\n         """"""Used to create the config attribute by the Flask constructor.\n         The `instance_relative` parameter is passed in from the constructor\n         of Flask (there named `instance_relative_config`) and indicates if\n@@ -607,7 +628,7 @@ class Flask(Scaffold):\n         defaults[""DEBUG""] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n \n-    def auto_find_instance_path(self):\n+    def auto_find_instance_path(self) -> str:\n         """"""Tries to locate the instance path if it was not provided to the\n         constructor of the application class.  It will basically calculate\n         the path to a folder named ``instance`` next to your main file or\n@@ -620,7 +641,7 @@ class Flask(Scaffold):\n             return os.path.join(package_path, ""instance"")\n         return os.path.join(prefix, ""var"", f""{self.name}-instance"")\n \n-    def open_instance_resource(self, resource, mode=""rb""):\n+    def open_instance_resource(self, resource: str, mode: str = ""rb"") -> t.IO[t.AnyStr]:\n         """"""Opens a resource from the application\'s instance folder\n         (:attr:`instance_path`).  Otherwise works like\n         :meth:`open_resource`.  Instance resources can also be opened for\n@@ -633,7 +654,7 @@ class Flask(Scaffold):\n         return open(os.path.join(self.instance_path, resource), mode)\n \n     @property\n-    def templates_auto_reload(self):\n+    def templates_auto_reload(self) -> bool:\n         """"""Reload templates when they are changed. Used by\n         :meth:`create_jinja_environment`.\n \n@@ -648,10 +669,10 @@ class Flask(Scaffold):\n         return rv if rv is not None else self.debug\n \n     @templates_auto_reload.setter\n-    def templates_auto_reload(self, value):\n+    def templates_auto_reload(self, value: bool) -> None:\n         self.config[""TEMPLATES_AUTO_RELOAD""] = value\n \n-    def create_jinja_environment(self):\n+    def create_jinja_environment(self) -> Environment:\n         """"""Create the Jinja environment based on :attr:`jinja_options`\n         and the various Jinja-related methods of the app. Changing\n         :attr:`jinja_options` after this will have no effect. Also adds\n@@ -683,10 +704,10 @@ class Flask(Scaffold):\n             session=session,\n             g=g,\n         )\n-        rv.policies[""json.dumps_function""] = json.dumps\n+        rv.policies[""json.dumps_function""] = json.dumps  # type: ignore\n         return rv\n \n-    def create_global_jinja_loader(self):\n+    def create_global_jinja_loader(self) -> DispatchingJinjaLoader:\n         """"""Creates the loader for the Jinja2 environment.  Can be used to\n         override just the loader and keeping the rest unchanged.  It\'s\n         discouraged to override this function.  Instead one should override\n@@ -699,7 +720,7 @@ class Flask(Scaffold):\n         """"""\n         return DispatchingJinjaLoader(self)\n \n-    def select_jinja_autoescape(self, filename):\n+    def select_jinja_autoescape(self, filename: str) -> bool:\n         """"""Returns ``True`` if autoescaping should be active for the given\n         template name. If no template name is given, returns `True`.\n \n@@ -709,7 +730,7 @@ class Flask(Scaffold):\n             return True\n         return filename.endswith(("".html"", "".htm"", "".xml"", "".xhtml""))\n \n-    def update_template_context(self, context):\n+    def update_template_context(self, context: dict) -> None:\n         """"""Update the template context with some commonly used variables.\n         This injects request, session, config and g into the template\n         context as well as everything template context processors want\n@@ -720,7 +741,9 @@ class Flask(Scaffold):\n         :param context: the context as a dictionary that is updated in place\n                         to add extra variables.\n         """"""\n-        funcs = self.template_context_processors[None]\n+        funcs: t.Iterable[\n+            TemplateContextProcessorCallable\n+        ] = self.template_context_processors[None]\n         reqctx = _request_ctx_stack.top\n         if reqctx is not None:\n             for bp in self._request_blueprints():\n@@ -734,7 +757,7 @@ class Flask(Scaffold):\n         # existing views.\n         context.update(orig_ctx)\n \n-    def make_shell_context(self):\n+    def make_shell_context(self) -> dict:\n         """"""Returns the shell context for an interactive shell for this\n         application.  This runs all the registered shell context\n         processors.\n@@ -758,7 +781,7 @@ class Flask(Scaffold):\n     env = ConfigAttribute(""ENV"")\n \n     @property\n-    def debug(self):\n+    def debug(self) -> bool:\n         """"""Whether debug mode is enabled. When using ``flask run`` to start\n         the development server, an interactive debugger will be shown for\n         unhandled exceptions, and the server will be reloaded when code\n@@ -775,11 +798,18 @@ class Flask(Scaffold):\n         return self.config[""DEBUG""]\n \n     @debug.setter\n-    def debug(self, value):\n+    def debug(self, value: bool) -> None:\n         self.config[""DEBUG""] = value\n         self.jinja_env.auto_reload = self.templates_auto_reload\n \n-    def run(self, host=None, port=None, debug=None, load_dotenv=True, **options):\n+    def run(\n+        self,\n+        host: t.Optional[str] = None,\n+        port: t.Optional[int] = None,\n+        debug: t.Optional[bool] = None,\n+        load_dotenv: bool = True,\n+        **options: t.Any,\n+    ) -> None:\n         """"""Runs the application on a local development server.\n \n         Do not use ``run()`` in a production setting. It is not intended to\n@@ -887,14 +917,14 @@ class Flask(Scaffold):\n         from werkzeug.serving import run_simple\n \n         try:\n-            run_simple(host, port, self, **options)\n+            run_simple(t.cast(str, host), port, self, **options)\n         finally:\n             # reset the first request information if the development server\n             # reset normally.  This makes it possible to restart the server\n             # without reloader and that stuff from an interactive shell.\n             self._got_first_request = False\n \n-    def test_client(self, use_cookies=True, **kwargs):\n+    def test_client(self, use_cookies: bool = True, **kwargs: t.Any) -> ""FlaskClient"":\n         """"""Creates a test client for this application.  For information\n         about unit testing head over to :doc:`/testing`.\n \n@@ -947,10 +977,12 @@ class Flask(Scaffold):\n         """"""\n         cls = self.test_client_class\n         if cls is None:\n-            from .testing import FlaskClient as cls\n-        return cls(self, self.response_class, use_cookies=use_cookies, **kwargs)\n+            from .testing import FlaskClient as cls  # type: ignore\n+        return cls(  # type: ignore\n+            self, self.response_class, use_cookies=use_cookies, **kwargs\n+        )\n \n-    def test_cli_runner(self, **kwargs):\n+    def test_cli_runner(self, **kwargs: t.Any) -> ""FlaskCliRunner"":\n         """"""Create a CLI runner for testing CLI commands.\n         See :ref:`testing-cli`.\n \n@@ -963,12 +995,12 @@ class Flask(Scaffold):\n         cls = self.test_cli_runner_class\n \n         if cls is None:\n-            from .testing import FlaskCliRunner as cls\n+            from .testing import FlaskCliRunner as cls  # type: ignore\n \n-        return cls(self, **kwargs)\n+        return cls(self, **kwargs)  # type: ignore\n \n     @setupmethod\n-    def register_blueprint(self, blueprint, **options):\n+    def register_blueprint(self, blueprint: ""Blueprint"", **options: t.Any) -> None:\n         """"""Register a :class:`~flask.Blueprint` on the application. Keyword\n         arguments passed to this method will override the defaults set on the\n         blueprint.\n@@ -989,7 +1021,7 @@ class Flask(Scaffold):\n         """"""\n         blueprint.register(self, options)\n \n-    def iter_blueprints(self):\n+    def iter_blueprints(self) -> t.ValuesView[""Blueprint""]:\n         """"""Iterates over all blueprints by the order they were registered.\n \n         .. versionadded:: 0.11\n@@ -999,14 +1031,14 @@ class Flask(Scaffold):\n     @setupmethod\n     def add_url_rule(\n         self,\n-        rule,\n-        endpoint=None,\n-        view_func=None,\n-        provide_automatic_options=None,\n-        **options,\n-    ):\n+        rule: str,\n+        endpoint: t.Optional[str] = None,\n+        view_func: t.Optional[t.Callable] = None,\n+        provide_automatic_options: t.Optional[bool] = None,\n+        **options: t.Any,\n+    ) -> None:\n         if endpoint is None:\n-            endpoint = _endpoint_from_view_func(view_func)\n+            endpoint = _endpoint_from_view_func(view_func)  # type: ignore\n         options[""endpoint""] = endpoint\n         methods = options.pop(""methods"", None)\n \n@@ -1043,13 +1075,13 @@ class Flask(Scaffold):\n         methods |= required_methods\n \n         rule = self.url_rule_class(rule, methods=methods, **options)\n-        rule.provide_automatic_options = provide_automatic_options\n+        rule.provide_automatic_options = provide_automatic_options  # type: ignore\n \n         self.url_map.add(rule)\n         if view_func is not None:\n             old_func = self.view_functions.get(endpoint)\n             if getattr(old_func, ""_flask_sync_wrapper"", False):\n-                old_func = old_func.__wrapped__\n+                old_func = old_func.__wrapped__  # type: ignore\n             if old_func is not None and old_func != view_func:\n                 raise AssertionError(\n                     ""View function mapping is overwriting an existing""\n@@ -1058,7 +1090,7 @@ class Flask(Scaffold):\n             self.view_functions[endpoint] = self.ensure_sync(view_func)\n \n     @setupmethod\n-    def template_filter(self, name=None):\n+    def template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n         name will be used. Example::\n@@ -1071,14 +1103,16 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateFilterCallable) -> TemplateFilterCallable:\n             self.add_template_filter(f, name=name)\n             return f\n \n         return decorator\n \n     @setupmethod\n-    def add_template_filter(self, f, name=None):\n+    def add_template_filter(\n+        self, f: TemplateFilterCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template filter.  Works exactly like the\n         :meth:`template_filter` decorator.\n \n@@ -1088,7 +1122,7 @@ class Flask(Scaffold):\n         self.jinja_env.filters[name or f.__name__] = f\n \n     @setupmethod\n-    def template_test(self, name=None):\n+    def template_test(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n         name will be used. Example::\n@@ -1108,14 +1142,16 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateTestCallable) -> TemplateTestCallable:\n             self.add_template_test(f, name=name)\n             return f\n \n         return decorator\n \n     @setupmethod\n-    def add_template_test(self, f, name=None):\n+    def add_template_test(\n+        self, f: TemplateTestCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template test.  Works exactly like the\n         :meth:`template_test` decorator.\n \n@@ -1127,7 +1163,7 @@ class Flask(Scaffold):\n         self.jinja_env.tests[name or f.__name__] = f\n \n     @setupmethod\n-    def template_global(self, name=None):\n+    def template_global(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n         name will be used. Example::\n@@ -1142,14 +1178,16 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateGlobalCallable) -> TemplateGlobalCallable:\n             self.add_template_global(f, name=name)\n             return f\n \n         return decorator\n \n     @setupmethod\n-    def add_template_global(self, f, name=None):\n+    def add_template_global(\n+        self, f: TemplateGlobalCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template global function. Works exactly like the\n         :meth:`template_global` decorator.\n \n@@ -1161,7 +1199,7 @@ class Flask(Scaffold):\n         self.jinja_env.globals[name or f.__name__] = f\n \n     @setupmethod\n-    def before_first_request(self, f):\n+    def before_first_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n         """"""Registers a function to be run before the first request to this\n         instance of the application.\n \n@@ -1174,7 +1212,7 @@ class Flask(Scaffold):\n         return f\n \n     @setupmethod\n-    def teardown_appcontext(self, f):\n+    def teardown_appcontext(self, f: TeardownCallable) -> TeardownCallable:\n         """"""Registers a function to be called when the application context\n         ends.  These functions are typically also called when the request\n         context is popped.\n@@ -1207,7 +1245,7 @@ class Flask(Scaffold):\n         return f\n \n     @setupmethod\n-    def shell_context_processor(self, f):\n+    def shell_context_processor(self, f: t.Callable) -> t.Callable:\n         """"""Registers a shell context processor function.\n \n         .. versionadded:: 0.11\n@@ -1215,7 +1253,7 @@ class Flask(Scaffold):\n         self.shell_context_processors.append(f)\n         return f\n \n-    def _find_error_handler(self, e):\n+    def _find_error_handler(self, e: Exception) -> t.Optional[ErrorHandlerCallable]:\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n         blueprint handler for an exception class, app handler for an exception\n@@ -1235,8 +1273,11 @@ class Flask(Scaffold):\n \n                     if handler is not None:\n                         return handler\n+        return None\n \n-    def handle_http_exception(self, e):\n+    def handle_http_exception(\n+        self, e: HTTPException\n+    ) -> t.Union[HTTPException, ResponseReturnValue]:\n         """"""Handles an HTTP exception.  By default this will invoke the\n         registered error handlers and fall back to returning the\n         exception as response.\n@@ -1269,7 +1310,7 @@ class Flask(Scaffold):\n             return e\n         return handler(e)\n \n-    def trap_http_exception(self, e):\n+    def trap_http_exception(self, e: Exception) -> bool:\n         """"""Checks if an HTTP exception should be trapped or not.  By default\n         this will return ``False`` for all exceptions except for a bad request\n         key error if ``TRAP_BAD_REQUEST_ERRORS`` is set to ``True``.  It\n@@ -1304,7 +1345,9 @@ class Flask(Scaffold):\n \n         return False\n \n-    def handle_user_exception(self, e):\n+    def handle_user_exception(\n+        self, e: Exception\n+    ) -> t.Union[HTTPException, ResponseReturnValue]:\n         """"""This method is called whenever an exception occurs that\n         should be handled. A special case is :class:`~werkzeug\n         .exceptions.HTTPException` which is forwarded to the\n@@ -1334,7 +1377,7 @@ class Flask(Scaffold):\n \n         return handler(e)\n \n-    def handle_exception(self, e):\n+    def handle_exception(self, e: Exception) -> Response:\n         """"""Handle an exception that did not have an error handler\n         associated with it, or that was raised from an error handler.\n         This always causes a 500 ``InternalServerError``.\n@@ -1374,6 +1417,7 @@ class Flask(Scaffold):\n             raise e\n \n         self.log_exception(exc_info)\n+        server_error: t.Union[InternalServerError, ResponseReturnValue]\n         server_error = InternalServerError(original_exception=e)\n         handler = self._find_error_handler(server_error)\n \n@@ -1382,7 +1426,12 @@ class Flask(Scaffold):\n \n         return self.finalize_request(server_error, from_error_handler=True)\n \n-    def log_exception(self, exc_info):\n+    def log_exception(\n+        self,\n+        exc_info: t.Union[\n+            t.Tuple[type, BaseException, TracebackType], t.Tuple[None, None, None]\n+        ],\n+    ) -> None:\n         """"""Logs an exception.  This is called by :meth:`handle_exception`\n         if debugging is disabled and right before the handler is called.\n         The default implementation logs the exception as error on the\n@@ -1394,7 +1443,7 @@ class Flask(Scaffold):\n             f""Exception on {request.path} [{request.method}]"", exc_info=exc_info\n         )\n \n-    def raise_routing_exception(self, request):\n+    def raise_routing_exception(self, request: Request) -> t.NoReturn:\n         """"""Exceptions that are recording during routing are reraised with\n         this method.  During debug we are not reraising redirect requests\n         for non ``GET``, ``HEAD``, or ``OPTIONS`` requests and we\'re raising\n@@ -1407,13 +1456,13 @@ class Flask(Scaffold):\n             or not isinstance(request.routing_exception, RequestRedirect)\n             or request.method in (""GET"", ""HEAD"", ""OPTIONS"")\n         ):\n-            raise request.routing_exception\n+            raise request.routing_exception  # type: ignore\n \n         from .debughelpers import FormDataRoutingRedirect\n \n         raise FormDataRoutingRedirect(request)\n \n-    def dispatch_request(self):\n+    def dispatch_request(self) -> ResponseReturnValue:\n         """"""Does the request dispatching.  Matches the URL and returns the\n         return value of the view or error handler.  This does not have to\n         be a response object.  In order to convert the return value to a\n@@ -1437,7 +1486,7 @@ class Flask(Scaffold):\n         # otherwise dispatch to the handler for that endpoint\n         return self.view_functions[rule.endpoint](**req.view_args)\n \n-    def full_dispatch_request(self):\n+    def full_dispatch_request(self) -> Response:\n         """"""Dispatches the request and on top of that performs request\n         pre and postprocessing as well as HTTP exception catching and\n         error handling.\n@@ -1454,7 +1503,11 @@ class Flask(Scaffold):\n             rv = self.handle_user_exception(e)\n         return self.finalize_request(rv)\n \n-    def finalize_request(self, rv, from_error_handler=False):\n+    def finalize_request(\n+        self,\n+        rv: t.Union[ResponseReturnValue, HTTPException],\n+        from_error_handler: bool = False,\n+    ) -> Response:\n         """"""Given the return value from a view function this finalizes\n         the request by converting it into a response and invoking the\n         postprocessing functions.  This is invoked for both normal\n@@ -1479,7 +1532,7 @@ class Flask(Scaffold):\n             )\n         return response\n \n-    def try_trigger_before_first_request_functions(self):\n+    def try_trigger_before_first_request_functions(self) -> None:\n         """"""Called before each request and will ensure that it triggers\n         the :attr:`before_first_request_funcs` and only exactly once per\n         application instance (which means process usually).\n@@ -1495,7 +1548,7 @@ class Flask(Scaffold):\n                 func()\n             self._got_first_request = True\n \n-    def make_default_options_response(self):\n+    def make_default_options_response(self) -> Response:\n         """"""This method is called to create the default ``OPTIONS`` response.\n         This can be changed through subclassing to change the default\n         behavior of ``OPTIONS`` responses.\n@@ -1508,7 +1561,7 @@ class Flask(Scaffold):\n         rv.allow.update(methods)\n         return rv\n \n-    def should_ignore_error(self, error):\n+    def should_ignore_error(self, error: t.Optional[BaseException]) -> bool:\n         """"""This is called to figure out if an error should be ignored\n         or not as far as the teardown system is concerned.  If this\n         function returns ``True`` then the teardown handlers will not be\n@@ -1518,7 +1571,7 @@ class Flask(Scaffold):\n         """"""\n         return False\n \n-    def ensure_sync(self, func):\n+    def ensure_sync(self, func: t.Callable) -> t.Callable:\n         """"""Ensure that the function is synchronous for WSGI workers.\n         Plain ``def`` functions are returned as-is. ``async def``\n         functions are wrapped to run and wait for the response.\n@@ -1532,7 +1585,7 @@ class Flask(Scaffold):\n \n         return func\n \n-    def make_response(self, rv):\n+    def make_response(self, rv: ResponseReturnValue) -> Response:\n         """"""Convert the return value from a view function to an instance of\n         :attr:`response_class`.\n \n@@ -1620,7 +1673,7 @@ class Flask(Scaffold):\n                 # evaluate a WSGI callable, or coerce a different response\n                 # class to the correct type\n                 try:\n-                    rv = self.response_class.force_type(rv, request.environ)\n+                    rv = self.response_class.force_type(rv, request.environ)  # type: ignore  # noqa: B950\n                 except TypeError as e:\n                     raise TypeError(\n                         f""{e}\\nThe view function did not return a valid""\n@@ -1636,10 +1689,11 @@ class Flask(Scaffold):\n                     f"" callable, but it was a {type(rv).__name__}.""\n                 )\n \n+        rv = t.cast(Response, rv)\n         # prefer the status if it was provided\n         if status is not None:\n             if isinstance(status, (str, bytes, bytearray)):\n-                rv.status = status\n+                rv.status = status  # type: ignore\n             else:\n                 rv.status_code = status\n \n@@ -1649,7 +1703,9 @@ class Flask(Scaffold):\n \n         return rv\n \n-    def create_url_adapter(self, request):\n+    def create_url_adapter(\n+        self, request: t.Optional[Request]\n+    ) -> t.Optional[MapAdapter]:\n         """"""Creates a URL adapter for the given request. The URL adapter\n         is created at a point where the request context is not yet set\n         up so the request is passed explicitly.\n@@ -1687,21 +1743,25 @@ class Flask(Scaffold):\n                 url_scheme=self.config[""PREFERRED_URL_SCHEME""],\n             )\n \n-    def inject_url_defaults(self, endpoint, values):\n+        return None\n+\n+    def inject_url_defaults(self, endpoint: str, values: dict) -> None:\n         """"""Injects the URL defaults for the given endpoint directly into\n         the values dictionary passed.  This is used internally and\n         automatically called on URL building.\n \n         .. versionadded:: 0.7\n         """"""\n-        funcs = self.url_default_functions[None]\n+        funcs: t.Iterable[URLDefaultCallable] = self.url_default_functions[None]\n         if ""."" in endpoint:\n             bp = endpoint.rsplit(""."", 1)[0]\n             funcs = chain(funcs, self.url_default_functions[bp])\n         for func in funcs:\n             func(endpoint, values)\n \n-    def handle_url_build_error(self, error, endpoint, values):\n+    def handle_url_build_error(\n+        self, error: Exception, endpoint: str, values: dict\n+    ) -> str:\n         """"""Handle :class:`~werkzeug.routing.BuildError` on\n         :meth:`url_for`.\n         """"""\n@@ -1722,7 +1782,7 @@ class Flask(Scaffold):\n \n         raise error\n \n-    def preprocess_request(self):\n+    def preprocess_request(self) -> t.Optional[ResponseReturnValue]:\n         """"""Called before the request is dispatched. Calls\n         :attr:`url_value_preprocessors` registered with the app and the\n         current blueprint (if any). Then calls :attr:`before_request_funcs`\n@@ -1733,14 +1793,16 @@ class Flask(Scaffold):\n         further request handling is stopped.\n         """"""\n \n-        funcs = self.url_value_preprocessors[None]\n+        funcs: t.Iterable[URLValuePreprocessorCallable] = self.url_value_preprocessors[\n+            None\n+        ]\n         for bp in self._request_blueprints():\n             if bp in self.url_value_preprocessors:\n                 funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n-        funcs = self.before_request_funcs[None]\n+        funcs: t.Iterable[BeforeRequestCallable] = self.before_request_funcs[None]\n         for bp in self._request_blueprints():\n             if bp in self.before_request_funcs:\n                 funcs = chain(funcs, self.before_request_funcs[bp])\n@@ -1749,7 +1811,9 @@ class Flask(Scaffold):\n             if rv is not None:\n                 return rv\n \n-    def process_response(self, response):\n+        return None\n+\n+    def process_response(self, response: Response) -> Response:\n         """"""Can be overridden in order to modify the response object\n         before it\'s sent to the WSGI server.  By default this will\n         call all the :meth:`after_request` decorated functions.\n@@ -1763,7 +1827,7 @@ class Flask(Scaffold):\n                  instance of :attr:`response_class`.\n         """"""\n         ctx = _request_ctx_stack.top\n-        funcs = ctx._after_request_functions\n+        funcs: t.Iterable[AfterRequestCallable] = ctx._after_request_functions\n         for bp in self._request_blueprints():\n             if bp in self.after_request_funcs:\n                 funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n@@ -1775,7 +1839,9 @@ class Flask(Scaffold):\n             self.session_interface.save_session(self, ctx.session, response)\n         return response\n \n-    def do_teardown_request(self, exc=_sentinel):\n+    def do_teardown_request(\n+        self, exc: t.Optional[BaseException] = _sentinel  # type: ignore\n+    ) -> None:\n         """"""Called after the request is dispatched and the response is\n         returned, right before the request context is popped.\n \n@@ -1798,7 +1864,9 @@ class Flask(Scaffold):\n         """"""\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n-        funcs = reversed(self.teardown_request_funcs[None])\n+        funcs: t.Iterable[TeardownCallable] = reversed(\n+            self.teardown_request_funcs[None]\n+        )\n         for bp in self._request_blueprints():\n             if bp in self.teardown_request_funcs:\n                 funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n@@ -1806,7 +1874,9 @@ class Flask(Scaffold):\n             func(exc)\n         request_tearing_down.send(self, exc=exc)\n \n-    def do_teardown_appcontext(self, exc=_sentinel):\n+    def do_teardown_appcontext(\n+        self, exc: t.Optional[BaseException] = _sentinel  # type: ignore\n+    ) -> None:\n         """"""Called right before the application context is popped.\n \n         When handling a request, the application context is popped\n@@ -1827,7 +1897,7 @@ class Flask(Scaffold):\n             func(exc)\n         appcontext_tearing_down.send(self, exc=exc)\n \n-    def app_context(self):\n+    def app_context(self) -> AppContext:\n         """"""Create an :class:`~flask.ctx.AppContext`. Use as a ``with``\n         block to push the context, which will make :data:`current_app`\n         point at this application.\n@@ -1848,7 +1918,7 @@ class Flask(Scaffold):\n         """"""\n         return AppContext(self)\n \n-    def request_context(self, environ):\n+    def request_context(self, environ: dict) -> RequestContext:\n         """"""Create a :class:`~flask.ctx.RequestContext` representing a\n         WSGI environment. Use a ``with`` block to push the context,\n         which will make :data:`request` point at this request.\n@@ -1864,7 +1934,7 @@ class Flask(Scaffold):\n         """"""\n         return RequestContext(self, environ)\n \n-    def test_request_context(self, *args, **kwargs):\n+    def test_request_context(self, *args: t.Any, **kwargs: t.Any) -> RequestContext:\n         """"""Create a :class:`~flask.ctx.RequestContext` for a WSGI\n         environment created from the given values. This is mostly useful\n         during testing, where you may want to run a function that uses\n@@ -1920,7 +1990,7 @@ class Flask(Scaffold):\n         finally:\n             builder.close()\n \n-    def wsgi_app(self, environ, start_response):\n+    def wsgi_app(self, environ: dict, start_response: t.Callable) -> t.Any:\n         """"""The actual WSGI application. This is not implemented in\n         :meth:`__call__` so that middlewares can be applied without\n         losing a reference to the app object. Instead of doing this::\n@@ -1946,7 +2016,7 @@ class Flask(Scaffold):\n             start the response.\n         """"""\n         ctx = self.request_context(environ)\n-        error = None\n+        error: t.Optional[BaseException] = None\n         try:\n             try:\n                 ctx.push()\n@@ -1963,14 +2033,14 @@ class Flask(Scaffold):\n                 error = None\n             ctx.auto_pop(error)\n \n-    def __call__(self, environ, start_response):\n+    def __call__(self, environ: dict, start_response: t.Callable) -> t.Any:\n         """"""The WSGI server calls the Flask application object as the\n         WSGI application. This calls :meth:`wsgi_app`, which can be\n         wrapped to apply middleware.\n         """"""\n         return self.wsgi_app(environ, start_response)\n \n-    def _request_blueprints(self):\n+    def _request_blueprints(self) -> t.Iterable[str]:\n         if _request_ctx_stack.top.request.blueprint is None:\n             return []\n         else:\n'",3.014705882352941,3.014705882352941
src/flask/blueprints.py,src/flask/blueprints.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,9 +1,25 @@\n+import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n \n from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n from .scaffold import Scaffold\n+from .typing import AfterRequestCallable\n+from .typing import BeforeRequestCallable\n+from .typing import ErrorHandlerCallable\n+from .typing import TeardownCallable\n+from .typing import TemplateContextProcessorCallable\n+from .typing import TemplateFilterCallable\n+from .typing import TemplateGlobalCallable\n+from .typing import TemplateTestCallable\n+from .typing import URLDefaultCallable\n+from .typing import URLValuePreprocessorCallable\n+\n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+\n+DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n \n \n class BlueprintSetupState:\n@@ -13,7 +29,13 @@ class BlueprintSetupState:\n     to all register callback functions.\n     """"""\n \n-    def __init__(self, blueprint, app, options, first_registration):\n+    def __init__(\n+        self,\n+        blueprint: ""Blueprint"",\n+        app: ""Flask"",\n+        options: t.Any,\n+        first_registration: bool,\n+    ) -> None:\n         #: a reference to the current application\n         self.app = app\n \n@@ -52,7 +74,13 @@ class BlueprintSetupState:\n         self.url_defaults = dict(self.blueprint.url_values_defaults)\n         self.url_defaults.update(self.options.get(""url_defaults"", ()))\n \n-    def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n+    def add_url_rule(\n+        self,\n+        rule: str,\n+        endpoint: t.Optional[str] = None,\n+        view_func: t.Optional[t.Callable] = None,\n+        **options: t.Any,\n+    ) -> None:\n         """"""A helper method to register a rule (and optionally a view function)\n         to the application.  The endpoint is automatically prefixed with the\n         blueprint\'s name.\n@@ -64,7 +92,7 @@ class BlueprintSetupState:\n                 rule = self.url_prefix\n         options.setdefault(""subdomain"", self.subdomain)\n         if endpoint is None:\n-            endpoint = _endpoint_from_view_func(view_func)\n+            endpoint = _endpoint_from_view_func(view_func)  # type: ignore\n         defaults = self.url_defaults\n         if ""defaults"" in options:\n             defaults = dict(defaults, **options.pop(""defaults""))\n@@ -142,16 +170,16 @@ class Blueprint(Scaffold):\n \n     def __init__(\n         self,\n-        name,\n-        import_name,\n-        static_folder=None,\n-        static_url_path=None,\n-        template_folder=None,\n-        url_prefix=None,\n-        subdomain=None,\n-        url_defaults=None,\n-        root_path=None,\n-        cli_group=_sentinel,\n+        name: str,\n+        import_name: str,\n+        static_folder: t.Optional[str] = None,\n+        static_url_path: t.Optional[str] = None,\n+        template_folder: t.Optional[str] = None,\n+        url_prefix: t.Optional[str] = None,\n+        subdomain: t.Optional[str] = None,\n+        url_defaults: t.Optional[dict] = None,\n+        root_path: t.Optional[str] = None,\n+        cli_group: t.Optional[str] = _sentinel,  # type: ignore\n     ):\n         super().__init__(\n             import_name=import_name,\n@@ -163,19 +191,19 @@ class Blueprint(Scaffold):\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n-        self.deferred_functions = []\n+        self.deferred_functions: t.List[DeferredSetupFunction] = []\n \n         if url_defaults is None:\n             url_defaults = {}\n \n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n-        self._blueprints = []\n+        self._blueprints: t.List[t.Tuple[""Blueprint"", dict]] = []\n \n-    def _is_setup_finished(self):\n+    def _is_setup_finished(self) -> bool:\n         return self.warn_on_modifications and self._got_registered_once\n \n-    def record(self, func):\n+    def record(self, func: t.Callable) -> None:\n         """"""Registers a function that is called when the blueprint is\n         registered on the application.  This function is called with the\n         state as argument as returned by the :meth:`make_setup_state`\n@@ -193,27 +221,29 @@ class Blueprint(Scaffold):\n             )\n         self.deferred_functions.append(func)\n \n-    def record_once(self, func):\n+    def record_once(self, func: t.Callable) -> None:\n         """"""Works like :meth:`record` but wraps the function in another\n         function that will ensure the function is only called once.  If the\n         blueprint is registered a second time on the application, the\n         function passed is not called.\n         """"""\n \n-        def wrapper(state):\n+        def wrapper(state: BlueprintSetupState) -> None:\n             if state.first_registration:\n                 func(state)\n \n         return self.record(update_wrapper(wrapper, func))\n \n-    def make_setup_state(self, app, options, first_registration=False):\n+    def make_setup_state(\n+        self, app: ""Flask"", options: dict, first_registration: bool = False\n+    ) -> BlueprintSetupState:\n         """"""Creates an instance of :meth:`~flask.blueprints.BlueprintSetupState`\n         object that is later passed to the register callback functions.\n         Subclasses can override this to return a subclass of the setup state.\n         """"""\n         return BlueprintSetupState(self, app, options, first_registration)\n \n-    def register_blueprint(self, blueprint, **options):\n+    def register_blueprint(self, blueprint: ""Blueprint"", **options: t.Any) -> None:\n         """"""Register a :class:`~flask.Blueprint` on this blueprint. Keyword\n         arguments passed to this method will override the defaults set\n         on the blueprint.\n@@ -222,7 +252,7 @@ class Blueprint(Scaffold):\n         """"""\n         self._blueprints.append((blueprint, options))\n \n-    def register(self, app, options):\n+    def register(self, app: ""Flask"", options: dict) -> None:\n         """"""Called by :meth:`Flask.register_blueprint` to register all\n         views and callbacks registered on the blueprint with the\n         application. Creates a :class:`.BlueprintSetupState` and calls\n@@ -327,7 +357,13 @@ class Blueprint(Scaffold):\n             bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n             blueprint.register(app, bp_options)\n \n-    def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n+    def add_url_rule(\n+        self,\n+        rule: str,\n+        endpoint: t.Optional[str] = None,\n+        view_func: t.Optional[t.Callable] = None,\n+        **options: t.Any,\n+    ) -> None:\n         """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n         the :func:`url_for` function is prefixed with the name of the blueprint.\n         """"""\n@@ -339,7 +375,7 @@ class Blueprint(Scaffold):\n             ), ""Blueprint view function name should not contain dots""\n         self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n \n-    def app_template_filter(self, name=None):\n+    def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n \n@@ -347,13 +383,15 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateFilterCallable) -> TemplateFilterCallable:\n             self.add_app_template_filter(f, name=name)\n             return f\n \n         return decorator\n \n-    def add_app_template_filter(self, f, name=None):\n+    def add_app_template_filter(\n+        self, f: TemplateFilterCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.add_template_filter` but for a blueprint.  Works exactly\n         like the :meth:`app_template_filter` decorator.\n@@ -362,12 +400,12 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def register_template(state):\n+        def register_template(state: BlueprintSetupState) -> None:\n             state.app.jinja_env.filters[name or f.__name__] = f\n \n         self.record_once(register_template)\n \n-    def app_template_test(self, name=None):\n+    def app_template_test(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.template_test` but for a blueprint.\n \n@@ -377,13 +415,15 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateTestCallable) -> TemplateTestCallable:\n             self.add_app_template_test(f, name=name)\n             return f\n \n         return decorator\n \n-    def add_app_template_test(self, f, name=None):\n+    def add_app_template_test(\n+        self, f: TemplateTestCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.add_template_test` but for a blueprint.  Works exactly\n         like the :meth:`app_template_test` decorator.\n@@ -394,12 +434,12 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def register_template(state):\n+        def register_template(state: BlueprintSetupState) -> None:\n             state.app.jinja_env.tests[name or f.__name__] = f\n \n         self.record_once(register_template)\n \n-    def app_template_global(self, name=None):\n+    def app_template_global(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.template_global` but for a blueprint.\n \n@@ -409,13 +449,15 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: TemplateGlobalCallable) -> TemplateGlobalCallable:\n             self.add_app_template_global(f, name=name)\n             return f\n \n         return decorator\n \n-    def add_app_template_global(self, f, name=None):\n+    def add_app_template_global(\n+        self, f: TemplateGlobalCallable, name: t.Optional[str] = None\n+    ) -> None:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.add_template_global` but for a blueprint.  Works exactly\n         like the :meth:`app_template_global` decorator.\n@@ -426,12 +468,12 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def register_template(state):\n+        def register_template(state: BlueprintSetupState) -> None:\n             state.app.jinja_env.globals[name or f.__name__] = f\n \n         self.record_once(register_template)\n \n-    def before_app_request(self, f):\n+    def before_app_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n         """"""Like :meth:`Flask.before_request`.  Such a function is executed\n         before each request, even if outside of a blueprint.\n         """"""\n@@ -442,7 +484,9 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def before_app_first_request(self, f):\n+    def before_app_first_request(\n+        self, f: BeforeRequestCallable\n+    ) -> BeforeRequestCallable:\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n         """"""\n@@ -451,7 +495,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def after_app_request(self, f):\n+    def after_app_request(self, f: AfterRequestCallable) -> AfterRequestCallable:\n         """"""Like :meth:`Flask.after_request` but for a blueprint.  Such a function\n         is executed after each request, even if outside of the blueprint.\n         """"""\n@@ -462,7 +506,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def teardown_app_request(self, f):\n+    def teardown_app_request(self, f: TeardownCallable) -> TeardownCallable:\n         """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n         function is executed when tearing down each request, even if outside of\n         the blueprint.\n@@ -472,7 +516,9 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def app_context_processor(self, f):\n+    def app_context_processor(\n+        self, f: TemplateContextProcessorCallable\n+    ) -> TemplateContextProcessorCallable:\n         """"""Like :meth:`Flask.context_processor` but for a blueprint.  Such a\n         function is executed each request, even if outside of the blueprint.\n         """"""\n@@ -481,32 +527,34 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def app_errorhandler(self, code):\n+    def app_errorhandler(self, code: t.Union[t.Type[Exception], int]) -> t.Callable:\n         """"""Like :meth:`Flask.errorhandler` but for a blueprint.  This\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: ErrorHandlerCallable) -> ErrorHandlerCallable:\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n         return decorator\n \n-    def app_url_value_preprocessor(self, f):\n+    def app_url_value_preprocessor(\n+        self, f: URLValuePreprocessorCallable\n+    ) -> URLValuePreprocessorCallable:\n         """"""Same as :meth:`url_value_preprocessor` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_value_preprocessors.setdefault(None, []).append(f)\n         )\n         return f\n \n-    def app_url_defaults(self, f):\n+    def app_url_defaults(self, f: URLDefaultCallable) -> URLDefaultCallable:\n         """"""Same as :meth:`url_defaults` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n         return f\n \n-    def ensure_sync(self, f):\n+    def ensure_sync(self, f: t.Callable) -> t.Callable:\n         """"""Ensure the function is synchronous.\n \n         Override if you would like custom async to sync behaviour in\n'",2.0294117647058822,2.0294117647058822
src/flask/cli.py,src/flask/cli.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -27,7 +27,7 @@ except ImportError:\n try:\n     import ssl\n except ImportError:\n-    ssl = None\n+    ssl = None  # type: ignore\n \n \n class NoAppException(click.UsageError):\n@@ -860,7 +860,7 @@ def run_command(\n \n @click.command(""shell"", short_help=""Run a shell in the app context."")\n @with_appcontext\n-def shell_command():\n+def shell_command() -> None:\n     """"""Run an interactive Python shell in the context of a given\n     Flask application.  The application will populate the default\n     namespace of this shell according to its configuration.\n@@ -877,7 +877,7 @@ def shell_command():\n         f""App: {app.import_name} [{app.env}]\\n""\n         f""Instance: {app.instance_path}""\n     )\n-    ctx = {}\n+    ctx: dict = {}\n \n     # Support the regular Python interpreter startup script if someone\n     # is using it.\n@@ -922,7 +922,7 @@ def shell_command():\n )\n @click.option(""--all-methods"", is_flag=True, help=""Show HEAD and OPTIONS methods."")\n @with_appcontext\n-def routes_command(sort, all_methods):\n+def routes_command(sort: str, all_methods: bool) -> None:\n     """"""Show all registered routes with endpoints and methods.""""""\n \n     rules = list(current_app.url_map.iter_rules())\n@@ -935,9 +935,12 @@ def routes_command(sort, all_methods):\n     if sort in (""endpoint"", ""rule""):\n         rules = sorted(rules, key=attrgetter(sort))\n     elif sort == ""methods"":\n-        rules = sorted(rules, key=lambda rule: sorted(rule.methods))\n+        rules = sorted(rules, key=lambda rule: sorted(rule.methods))  # type: ignore\n \n-    rule_methods = ["", "".join(sorted(rule.methods - ignored_methods)) for rule in rules]\n+    rule_methods = [\n+        "", "".join(sorted(rule.methods - ignored_methods))  # type: ignore\n+        for rule in rules\n+    ]\n \n     headers = (""Endpoint"", ""Methods"", ""Rule"")\n     widths = (\n@@ -975,7 +978,7 @@ debug mode.\n )\n \n \n-def main():\n+def main() -> None:\n     # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n     cli.main(args=sys.argv[1:])\n \n'",4.194444444444445,4.194444444444445
src/flask/config.py,src/flask/config.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,6 +1,7 @@\n import errno\n import os\n import types\n+import typing as t\n \n from werkzeug.utils import import_string\n \n@@ -8,11 +9,11 @@ from werkzeug.utils import import_string\n class ConfigAttribute:\n     """"""Makes an attribute forward to the config""""""\n \n-    def __init__(self, name, get_converter=None):\n+    def __init__(self, name: str, get_converter: t.Optional[t.Callable] = None) -> None:\n         self.__name__ = name\n         self.get_converter = get_converter\n \n-    def __get__(self, obj, type=None):\n+    def __get__(self, obj: t.Any, owner: t.Any = None) -> t.Any:\n         if obj is None:\n             return self\n         rv = obj.config[self.__name__]\n@@ -20,7 +21,7 @@ class ConfigAttribute:\n             rv = self.get_converter(rv)\n         return rv\n \n-    def __set__(self, obj, value):\n+    def __set__(self, obj: t.Any, value: t.Any) -> None:\n         obj.config[self.__name__] = value\n \n \n@@ -68,11 +69,11 @@ class Config(dict):\n     :param defaults: an optional dictionary of default values\n     """"""\n \n-    def __init__(self, root_path, defaults=None):\n+    def __init__(self, root_path: str, defaults: t.Optional[dict] = None) -> None:\n         dict.__init__(self, defaults or {})\n         self.root_path = root_path\n \n-    def from_envvar(self, variable_name, silent=False):\n+    def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n         """"""Loads a configuration from an environment variable pointing to\n         a configuration file.  This is basically just a shortcut with nicer\n         error messages for this line of code::\n@@ -96,7 +97,7 @@ class Config(dict):\n             )\n         return self.from_pyfile(rv, silent=silent)\n \n-    def from_pyfile(self, filename, silent=False):\n+    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n         """"""Updates the values in the config from a Python file.  This function\n         behaves as if the file was imported as module with the\n         :meth:`from_object` function.\n@@ -124,7 +125,7 @@ class Config(dict):\n         self.from_object(d)\n         return True\n \n-    def from_object(self, obj):\n+    def from_object(self, obj: t.Union[object, str]) -> None:\n         """"""Updates the values from the given object.  An object can be of one\n         of the following two types:\n \n@@ -162,7 +163,12 @@ class Config(dict):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n \n-    def from_file(self, filename, load, silent=False):\n+    def from_file(\n+        self,\n+        filename: str,\n+        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n+        silent: bool = False,\n+    ) -> bool:\n         """"""Update the values in the config from a file that is loaded\n         using the ``load`` parameter. The loaded data is passed to the\n         :meth:`from_mapping` method.\n@@ -196,30 +202,26 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n-    def from_mapping(self, *mapping, **kwargs):\n+    def from_mapping(\n+        self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n+    ) -> bool:\n         """"""Updates the config like :meth:`update` ignoring items with non-upper\n         keys.\n \n         .. versionadded:: 0.11\n         """"""\n-        mappings = []\n-        if len(mapping) == 1:\n-            if hasattr(mapping[0], ""items""):\n-                mappings.append(mapping[0].items())\n-            else:\n-                mappings.append(mapping[0])\n-        elif len(mapping) > 1:\n-            raise TypeError(\n-                f""expected at most 1 positional argument, got {len(mapping)}""\n-            )\n-        mappings.append(kwargs.items())\n-        for mapping in mappings:\n-            for (key, value) in mapping:\n-                if key.isupper():\n-                    self[key] = value\n+        mappings: t.Dict[str, t.Any] = {}\n+        if mapping is not None:\n+            mappings.update(mapping)\n+        mappings.update(kwargs)\n+        for key, value in mappings.items():\n+            if key.isupper():\n+                self[key] = value\n         return True\n \n-    def get_namespace(self, namespace, lowercase=True, trim_namespace=True):\n+    def get_namespace(\n+        self, namespace: str, lowercase: bool = True, trim_namespace: bool = True\n+    ) -> t.Dict[str, t.Any]:\n         """"""Returns a dictionary containing a subset of configuration options\n         that match the specified namespace/prefix. Example usage::\n \n@@ -260,5 +262,5 @@ class Config(dict):\n             rv[key] = v\n         return rv\n \n-    def __repr__(self):\n+    def __repr__(self) -> str:\n         return f""<{type(self).__name__} {dict.__repr__(self)}>""\n'",3.1818181818181817,2.909090909090909
src/flask/ctx.py,src/flask/ctx.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,5 +1,7 @@\n import sys\n+import typing as t\n from functools import update_wrapper\n+from types import TracebackType\n \n from werkzeug.exceptions import HTTPException\n \n@@ -7,6 +9,12 @@ from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .signals import appcontext_popped\n from .signals import appcontext_pushed\n+from .typing import AfterRequestCallable\n+\n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+    from .sessions import SessionMixin\n+    from .wrappers import Request\n \n \n # a singleton sentinel value for parameter defaults\n@@ -33,7 +41,7 @@ class _AppCtxGlobals:\n         .. versionadded:: 0.10\n     """"""\n \n-    def get(self, name, default=None):\n+    def get(self, name: str, default: t.Optional[t.Any] = None) -> t.Any:\n         """"""Get an attribute by name, or a default value. Like\n         :meth:`dict.get`.\n \n@@ -44,7 +52,7 @@ class _AppCtxGlobals:\n         """"""\n         return self.__dict__.get(name, default)\n \n-    def pop(self, name, default=_sentinel):\n+    def pop(self, name: str, default: t.Any = _sentinel) -> t.Any:\n         """"""Get and remove an attribute by name. Like :meth:`dict.pop`.\n \n         :param name: Name of attribute to pop.\n@@ -58,7 +66,7 @@ class _AppCtxGlobals:\n         else:\n             return self.__dict__.pop(name, default)\n \n-    def setdefault(self, name, default=None):\n+    def setdefault(self, name: str, default: t.Any = None) -> t.Any:\n         """"""Get the value of an attribute if it is present, otherwise\n         set and return a default value. Like :meth:`dict.setdefault`.\n \n@@ -70,20 +78,20 @@ class _AppCtxGlobals:\n         """"""\n         return self.__dict__.setdefault(name, default)\n \n-    def __contains__(self, item):\n+    def __contains__(self, item: t.Any) -> bool:\n         return item in self.__dict__\n \n-    def __iter__(self):\n+    def __iter__(self) -> t.Iterator:\n         return iter(self.__dict__)\n \n-    def __repr__(self):\n+    def __repr__(self) -> str:\n         top = _app_ctx_stack.top\n         if top is not None:\n             return f""<flask.g of {top.app.name!r}>""\n         return object.__repr__(self)\n \n \n-def after_this_request(f):\n+def after_this_request(f: AfterRequestCallable) -> AfterRequestCallable:\n     """"""Executes a function after this request.  This is useful to modify\n     response objects.  The function is passed the response object and has\n     to return the same or a new one.\n@@ -108,7 +116,7 @@ def after_this_request(f):\n     return f\n \n \n-def copy_current_request_context(f):\n+def copy_current_request_context(f: t.Callable) -> t.Callable:\n     """"""A helper function that decorates a function to retain the current\n     request context.  This is useful when working with greenlets.  The moment\n     the function is decorated a copy of the request context is created and\n@@ -148,7 +156,7 @@ def copy_current_request_context(f):\n     return update_wrapper(wrapper, f)\n \n \n-def has_request_context():\n+def has_request_context() -> bool:\n     """"""If you have code that wants to test if a request context is there or\n     not this function can be used.  For instance, you may want to take advantage\n     of request information if the request object is available, but fail\n@@ -180,7 +188,7 @@ def has_request_context():\n     return _request_ctx_stack.top is not None\n \n \n-def has_app_context():\n+def has_app_context() -> bool:\n     """"""Works like :func:`has_request_context` but for the application\n     context.  You can also just do a boolean check on the\n     :data:`current_app` object instead.\n@@ -199,7 +207,7 @@ class AppContext:\n     context.\n     """"""\n \n-    def __init__(self, app):\n+    def __init__(self, app: ""Flask"") -> None:\n         self.app = app\n         self.url_adapter = app.create_url_adapter(None)\n         self.g = app.app_ctx_globals_class()\n@@ -208,13 +216,13 @@ class AppContext:\n         # but there a basic ""refcount"" is enough to track them.\n         self._refcnt = 0\n \n-    def push(self):\n+    def push(self) -> None:\n         """"""Binds the app context to the current context.""""""\n         self._refcnt += 1\n         _app_ctx_stack.push(self)\n         appcontext_pushed.send(self.app)\n \n-    def pop(self, exc=_sentinel):\n+    def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         """"""Pops the app context.""""""\n         try:\n             self._refcnt -= 1\n@@ -227,11 +235,13 @@ class AppContext:\n         assert rv is self, f""Popped wrong app context.  ({rv!r} instead of {self!r})""\n         appcontext_popped.send(self.app)\n \n-    def __enter__(self):\n+    def __enter__(self) -> ""AppContext"":\n         self.push()\n         return self\n \n-    def __exit__(self, exc_type, exc_value, tb):\n+    def __exit__(\n+        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+    ) -> None:\n         self.pop(exc_value)\n \n \n@@ -265,7 +275,13 @@ class RequestContext:\n     that situation, otherwise your unittests will leak memory.\n     """"""\n \n-    def __init__(self, app, environ, request=None, session=None):\n+    def __init__(\n+        self,\n+        app: ""Flask"",\n+        environ: dict,\n+        request: t.Optional[""Request""] = None,\n+        session: t.Optional[""SessionMixin""] = None,\n+    ) -> None:\n         self.app = app\n         if request is None:\n             request = app.request_class(environ)\n@@ -282,7 +298,7 @@ class RequestContext:\n         # other request contexts.  Now only if the last level is popped we\n         # get rid of them.  Additionally if an application context is missing\n         # one is created implicitly so for each level we add this information\n-        self._implicit_app_ctx_stack = []\n+        self._implicit_app_ctx_stack: t.List[t.Optional[""AppContext""]] = []\n \n         # indicator if the context was preserved.  Next time another context\n         # is pushed the preserved context is popped.\n@@ -295,17 +311,17 @@ class RequestContext:\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n-        self._after_request_functions = []\n+        self._after_request_functions: t.List[AfterRequestCallable] = []\n \n     @property\n-    def g(self):\n+    def g(self) -> AppContext:\n         return _app_ctx_stack.top.g\n \n     @g.setter\n-    def g(self, value):\n+    def g(self, value: AppContext) -> None:\n         _app_ctx_stack.top.g = value\n \n-    def copy(self):\n+    def copy(self) -> ""RequestContext"":\n         """"""Creates a copy of this request context with the same request object.\n         This can be used to move a request context to a different greenlet.\n         Because the actual request object is the same this cannot be used to\n@@ -325,17 +341,17 @@ class RequestContext:\n             session=self.session,\n         )\n \n-    def match_request(self):\n+    def match_request(self) -> None:\n         """"""Can be overridden by a subclass to hook into the matching\n         of the request.\n         """"""\n         try:\n-            result = self.url_adapter.match(return_rule=True)\n-            self.request.url_rule, self.request.view_args = result\n+            result = self.url_adapter.match(return_rule=True)  # type: ignore\n+            self.request.url_rule, self.request.view_args = result  # type: ignore\n         except HTTPException as e:\n             self.request.routing_exception = e\n \n-    def push(self):\n+    def push(self) -> None:\n         """"""Binds the request context to the current context.""""""\n         # If an exception occurs in debug mode or if context preservation is\n         # activated under exception situations exactly one context stays\n@@ -375,7 +391,7 @@ class RequestContext:\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n-    def pop(self, exc=_sentinel):\n+    def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         """"""Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n         :meth:`~flask.Flask.teardown_request` decorator.\n@@ -414,20 +430,22 @@ class RequestContext:\n                 rv is self\n             ), f""Popped wrong request context. ({rv!r} instead of {self!r})""\n \n-    def auto_pop(self, exc):\n+    def auto_pop(self, exc: t.Optional[BaseException]) -> None:\n         if self.request.environ.get(""flask._preserve_context"") or (\n             exc is not None and self.app.preserve_context_on_exception\n         ):\n             self.preserved = True\n-            self._preserved_exc = exc\n+            self._preserved_exc = exc  # type: ignore\n         else:\n             self.pop(exc)\n \n-    def __enter__(self):\n+    def __enter__(self) -> ""RequestContext"":\n         self.push()\n         return self\n \n-    def __exit__(self, exc_type, exc_value, tb):\n+    def __exit__(\n+        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+    ) -> None:\n         # do not pop the request stack if we are in debug mode and an\n         # exception happened.  This will allow the debugger to still\n         # access the request object in the interactive shell.  Furthermore\n@@ -435,7 +453,7 @@ class RequestContext:\n         # See flask.testing for how this works.\n         self.auto_pop(exc_value)\n \n-    def __repr__(self):\n+    def __repr__(self) -> str:\n         return (\n             f""<{type(self).__name__} {self.request.url!r}""\n             f"" [{self.request.method}] of {self.app.name}>""\n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,4 +1,5 @@\n import os\n+import typing as t\n from warnings import warn\n \n from .app import Flask\n@@ -92,7 +93,7 @@ def attach_enctype_error_multidict(request):\n     request.files.__class__ = newcls\n \n \n-def _dump_loader_info(loader):\n+def _dump_loader_info(loader) -> t.Generator:\n     yield f""class: {type(loader).__module__}.{type(loader).__name__}""\n     for key, value in sorted(loader.__dict__.items()):\n         if key.startswith(""_""):\n@@ -109,7 +110,7 @@ def _dump_loader_info(loader):\n         yield f""{key}: {value!r}""\n \n \n-def explain_template_loading_attempts(app, template, attempts):\n+def explain_template_loading_attempts(app: Flask, template, attempts) -> None:\n     """"""This should help developers understand what failed""""""\n     info = [f""Locating template {template!r}:""]\n     total_found = 0\n@@ -157,7 +158,7 @@ def explain_template_loading_attempts(app, template, attempts):\n     app.logger.info(""\\n"".join(info))\n \n \n-def explain_ignored_app_run():\n+def explain_ignored_app_run() -> None:\n     if os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true"":\n         warn(\n             Warning(\n'",4.0,4.0
src/flask/globals.py,src/flask/globals.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,8 +1,14 @@\n+import typing as t\n from functools import partial\n \n from werkzeug.local import LocalProxy\n from werkzeug.local import LocalStack\n \n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+    from .ctx import AppContext\n+    from .sessions import SessionMixin\n+    from .wrappers import Request\n \n _request_ctx_err_msg = """"""\\\n Working outside of request context.\n@@ -45,7 +51,7 @@ def _find_app():\n # context locals\n _request_ctx_stack = LocalStack()\n _app_ctx_stack = LocalStack()\n-current_app = LocalProxy(_find_app)\n-request = LocalProxy(partial(_lookup_req_object, ""request""))\n-session = LocalProxy(partial(_lookup_req_object, ""session""))\n-g = LocalProxy(partial(_lookup_app_object, ""g""))\n+current_app: ""Flask"" = LocalProxy(_find_app)  # type: ignore\n+request: ""Request"" = LocalProxy(partial(_lookup_req_object, ""request""))  # type: ignore\n+session: ""SessionMixin"" = LocalProxy(partial(_lookup_req_object, ""session""))  # type: ignore # noqa: B950\n+g: ""AppContext"" = LocalProxy(partial(_lookup_app_object, ""g""))  # type: ignore\n'",2.0,2.0
src/flask/helpers.py,src/flask/helpers.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,6 +1,8 @@\n import os\n import socket\n+import typing as t\n import warnings\n+from datetime import timedelta\n from functools import update_wrapper\n from functools import wraps\n from threading import RLock\n@@ -18,8 +20,11 @@ from .globals import request\n from .globals import session\n from .signals import message_flashed\n \n+if t.TYPE_CHECKING:\n+    from .wrappers import Response\n \n-def get_env():\n+\n+def get_env() -> str:\n     """"""Get the environment the app is running in, indicated by the\n     :envvar:`FLASK_ENV` environment variable. The default is\n     ``\'production\'``.\n@@ -27,7 +32,7 @@ def get_env():\n     return os.environ.get(""FLASK_ENV"") or ""production""\n \n \n-def get_debug_flag():\n+def get_debug_flag() -> bool:\n     """"""Get whether debug mode should be enabled for the app, indicated\n     by the :envvar:`FLASK_DEBUG` environment variable. The default is\n     ``True`` if :func:`.get_env` returns ``\'development\'``, or ``False``\n@@ -41,7 +46,7 @@ def get_debug_flag():\n     return val.lower() not in (""0"", ""false"", ""no"")\n \n \n-def get_load_dotenv(default=True):\n+def get_load_dotenv(default: bool = True) -> bool:\n     """"""Get whether the user has disabled loading dotenv files by setting\n     :envvar:`FLASK_SKIP_DOTENV`. The default is ``True``, load the\n     files.\n@@ -56,7 +61,9 @@ def get_load_dotenv(default=True):\n     return val.lower() in (""0"", ""false"", ""no"")\n \n \n-def stream_with_context(generator_or_function):\n+def stream_with_context(\n+    generator_or_function: t.Union[t.Generator, t.Callable]\n+) -> t.Generator:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n     memory leaks with badly written WSGI middlewares.  The downside is that if\n@@ -91,16 +98,16 @@ def stream_with_context(generator_or_function):\n     .. versionadded:: 0.9\n     """"""\n     try:\n-        gen = iter(generator_or_function)\n+        gen = iter(generator_or_function)  # type: ignore\n     except TypeError:\n \n-        def decorator(*args, **kwargs):\n-            gen = generator_or_function(*args, **kwargs)\n+        def decorator(*args: t.Any, **kwargs: t.Any) -> t.Any:\n+            gen = generator_or_function(*args, **kwargs)  # type: ignore\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore\n \n-    def generator():\n+    def generator() -> t.Generator:\n         ctx = _request_ctx_stack.top\n         if ctx is None:\n             raise RuntimeError(\n@@ -120,7 +127,7 @@ def stream_with_context(generator_or_function):\n                 yield from gen\n             finally:\n                 if hasattr(gen, ""close""):\n-                    gen.close()\n+                    gen.close()  # type: ignore\n \n     # The trick is to start the generator.  Then the code execution runs until\n     # the first dummy None is yielded at which point the context was already\n@@ -131,7 +138,7 @@ def stream_with_context(generator_or_function):\n     return wrapped_g\n \n \n-def make_response(*args):\n+def make_response(*args: t.Any) -> ""Response"":\n     """"""Sometimes it is necessary to set additional headers in a view.  Because\n     views do not have to return response objects but can return a value that\n     is converted into a response object by Flask itself, it becomes tricky to\n@@ -180,7 +187,7 @@ def make_response(*args):\n     return current_app.make_response(args)\n \n \n-def url_for(endpoint, **values):\n+def url_for(endpoint: str, **values: t.Any) -> str:\n     """"""Generates a URL to the given endpoint with the method provided.\n \n     Variable arguments that are unknown to the target endpoint are appended\n@@ -331,7 +338,7 @@ def url_for(endpoint, **values):\n     return rv\n \n \n-def get_template_attribute(template_name, attribute):\n+def get_template_attribute(template_name: str, attribute: str) -> t.Any:\n     """"""Loads a macro (or variable) a template exports.  This can be used to\n     invoke a macro from within Python code.  If you for example have a\n     template named :file:`_cider.html` with the following contents:\n@@ -353,7 +360,7 @@ def get_template_attribute(template_name, attribute):\n     return getattr(current_app.jinja_env.get_template(template_name).module, attribute)\n \n \n-def flash(message, category=""message""):\n+def flash(message: str, category: str = ""message"") -> None:\n     """"""Flashes a message to the next request.  In order to remove the\n     flashed message from the session and to display it to the user,\n     the template has to call :func:`get_flashed_messages`.\n@@ -379,11 +386,15 @@ def flash(message, category=""message""):\n     flashes.append((category, message))\n     session[""_flashes""] = flashes\n     message_flashed.send(\n-        current_app._get_current_object(), message=message, category=category\n+        current_app._get_current_object(),  # type: ignore\n+        message=message,\n+        category=category,\n     )\n \n \n-def get_flashed_messages(with_categories=False, category_filter=()):\n+def get_flashed_messages(\n+    with_categories: bool = False, category_filter: t.Iterable[str] = ()\n+) -> t.Union[t.List[str], t.List[t.Tuple[str, str]]]:\n     """"""Pulls all flashed messages from the session and returns them.\n     Further calls in the same request to the function will return\n     the same messages.  By default just the messages are returned,\n@@ -608,7 +619,7 @@ def send_file(\n     )\n \n \n-def safe_join(directory, *pathnames):\n+def safe_join(directory: str, *pathnames: str) -> str:\n     """"""Safely join zero or more untrusted path components to a base\n     directory to avoid escaping the base directory.\n \n@@ -631,7 +642,7 @@ def safe_join(directory, *pathnames):\n     return path\n \n \n-def send_from_directory(directory, path, **kwargs):\n+def send_from_directory(directory: str, path: str, **kwargs: t.Any) -> ""Response"":\n     """"""Send a file from within a directory using :func:`send_file`.\n \n     .. code-block:: python\n@@ -661,7 +672,7 @@ def send_from_directory(directory, path, **kwargs):\n \n     .. versionadded:: 0.5\n     """"""\n-    return werkzeug.utils.send_from_directory(\n+    return werkzeug.utils.send_from_directory(  # type: ignore\n         directory, path, **_prepare_send_file_kwargs(**kwargs)\n     )\n \n@@ -675,27 +686,32 @@ class locked_cached_property(werkzeug.utils.cached_property):\n         Inherits from Werkzeug\'s ``cached_property`` (and ``property``).\n     """"""\n \n-    def __init__(self, fget, name=None, doc=None):\n+    def __init__(\n+        self,\n+        fget: t.Callable[[t.Any], t.Any],\n+        name: t.Optional[str] = None,\n+        doc: t.Optional[str] = None,\n+    ) -> None:\n         super().__init__(fget, name=name, doc=doc)\n         self.lock = RLock()\n \n-    def __get__(self, obj, type=None):\n+    def __get__(self, obj: object, type: type = None) -> t.Any:  # type: ignore\n         if obj is None:\n             return self\n \n         with self.lock:\n             return super().__get__(obj, type=type)\n \n-    def __set__(self, obj, value):\n+    def __set__(self, obj: object, value: t.Any) -> None:\n         with self.lock:\n             super().__set__(obj, value)\n \n-    def __delete__(self, obj):\n+    def __delete__(self, obj: object) -> None:\n         with self.lock:\n             super().__delete__(obj)\n \n \n-def total_seconds(td):\n+def total_seconds(td: timedelta) -> int:\n     """"""Returns the total seconds from a timedelta object.\n \n     :param timedelta td: the timedelta to be converted in seconds\n@@ -716,7 +732,7 @@ def total_seconds(td):\n     return td.days * 60 * 60 * 24 + td.seconds\n \n \n-def is_ip(value):\n+def is_ip(value: str) -> bool:\n     """"""Determine if the given string is an IP address.\n \n     :param value: value to check\n@@ -736,7 +752,7 @@ def is_ip(value):\n     return False\n \n \n-def run_async(func):\n+def run_async(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n     """"""Return a sync function that will run the coroutine function *func*.""""""\n     try:\n         from asgiref.sync import async_to_sync\n@@ -752,7 +768,7 @@ def run_async(func):\n         )\n \n     @wraps(func)\n-    def outer(*args, **kwargs):\n+    def outer(*args: t.Any, **kwargs: t.Any) -> t.Any:\n         """"""This function grabs the current context for the inner function.\n \n         This is similar to the copy_current_xxx_context functions in the\n@@ -764,7 +780,7 @@ def run_async(func):\n             ctx = _request_ctx_stack.top.copy()\n \n         @wraps(func)\n-        async def inner(*a, **k):\n+        async def inner(*a: t.Any, **k: t.Any) -> t.Any:\n             """"""This restores the context before awaiting the func.\n \n             This is required as the function must be awaited within the\n@@ -780,5 +796,5 @@ def run_async(func):\n \n         return async_to_sync(inner)(*args, **kwargs)\n \n-    outer._flask_sync_wrapper = True\n+    outer._flask_sync_wrapper = True  # type: ignore\n     return outer\n'",2.5416666666666665,2.5416666666666665
src/flask/json/__init__.py,src/flask/json/__init__.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,20 +1,25 @@\n import io\n import json as _json\n+import typing as t\n import uuid\n import warnings\n from datetime import date\n \n-from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n+from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps  # type: ignore\n from werkzeug.http import http_date\n \n from ..globals import current_app\n from ..globals import request\n \n+if t.TYPE_CHECKING:\n+    from ..app import Flask\n+    from ..wrappers import Response\n+\n try:\n     import dataclasses\n except ImportError:\n     # Python < 3.7\n-    dataclasses = None\n+    dataclasses = None  # type: ignore\n \n \n class JSONEncoder(_json.JSONEncoder):\n@@ -34,7 +39,7 @@ class JSONEncoder(_json.JSONEncoder):\n     :attr:`flask.Blueprint.json_encoder` to override the default.\n     """"""\n \n-    def default(self, o):\n+    def default(self, o: t.Any) -> t.Any:\n         """"""Convert ``o`` to a JSON serializable type. See\n         :meth:`json.JSONEncoder.default`. Python does not support\n         overriding how basic types like ``str`` or ``list`` are\n@@ -48,7 +53,7 @@ class JSONEncoder(_json.JSONEncoder):\n             return dataclasses.asdict(o)\n         if hasattr(o, ""__html__""):\n             return str(o.__html__())\n-        return super().default(self, o)\n+        return super().default(o)\n \n \n class JSONDecoder(_json.JSONDecoder):\n@@ -62,14 +67,19 @@ class JSONDecoder(_json.JSONDecoder):\n     """"""\n \n \n-def _dump_arg_defaults(kwargs, app=None):\n+def _dump_arg_defaults(\n+    kwargs: t.Dict[str, t.Any], app: t.Optional[""Flask""] = None\n+) -> None:\n     """"""Inject default arguments for dump functions.""""""\n     if app is None:\n         app = current_app\n \n     if app:\n-        bp = app.blueprints.get(request.blueprint) if request else None\n-        cls = bp.json_encoder if bp and bp.json_encoder else app.json_encoder\n+        cls = app.json_encoder\n+        bp = app.blueprints.get(request.blueprint) if request else None  # type: ignore\n+        if bp is not None and bp.json_encoder is not None:\n+            cls = bp.json_encoder\n+\n         kwargs.setdefault(""cls"", cls)\n         kwargs.setdefault(""ensure_ascii"", app.config[""JSON_AS_ASCII""])\n         kwargs.setdefault(""sort_keys"", app.config[""JSON_SORT_KEYS""])\n@@ -78,20 +88,25 @@ def _dump_arg_defaults(kwargs, app=None):\n         kwargs.setdefault(""cls"", JSONEncoder)\n \n \n-def _load_arg_defaults(kwargs, app=None):\n+def _load_arg_defaults(\n+    kwargs: t.Dict[str, t.Any], app: t.Optional[""Flask""] = None\n+) -> None:\n     """"""Inject default arguments for load functions.""""""\n     if app is None:\n         app = current_app\n \n     if app:\n-        bp = app.blueprints.get(request.blueprint) if request else None\n-        cls = bp.json_decoder if bp and bp.json_decoder else app.json_decoder\n+        cls = app.json_decoder\n+        bp = app.blueprints.get(request.blueprint) if request else None  # type: ignore\n+        if bp is not None and bp.json_decoder is not None:\n+            cls = bp.json_decoder\n+\n         kwargs.setdefault(""cls"", cls)\n     else:\n         kwargs.setdefault(""cls"", JSONDecoder)\n \n \n-def dumps(obj, app=None, **kwargs):\n+def dumps(obj: t.Any, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> str:\n     """"""Serialize an object to a string of JSON.\n \n     Takes the same arguments as the built-in :func:`json.dumps`, with\n@@ -121,12 +136,14 @@ def dumps(obj, app=None, **kwargs):\n         )\n \n         if isinstance(rv, str):\n-            return rv.encode(encoding)\n+            return rv.encode(encoding)  # type: ignore\n \n     return rv\n \n \n-def dump(obj, fp, app=None, **kwargs):\n+def dump(\n+    obj: t.Any, fp: t.IO[str], app: t.Optional[""Flask""] = None, **kwargs: t.Any\n+) -> None:\n     """"""Serialize an object to JSON written to a file object.\n \n     Takes the same arguments as the built-in :func:`json.dump`, with\n@@ -150,7 +167,7 @@ def dump(obj, fp, app=None, **kwargs):\n         fp.write("""")\n     except TypeError:\n         show_warning = True\n-        fp = io.TextIOWrapper(fp, encoding or ""utf-8"")\n+        fp = io.TextIOWrapper(fp, encoding or ""utf-8"")  # type: ignore\n \n     if show_warning:\n         warnings.warn(\n@@ -163,7 +180,7 @@ def dump(obj, fp, app=None, **kwargs):\n     _json.dump(obj, fp, **kwargs)\n \n \n-def loads(s, app=None, **kwargs):\n+def loads(s: str, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.Any:\n     """"""Deserialize an object from a string of JSON.\n \n     Takes the same arguments as the built-in :func:`json.loads`, with\n@@ -199,7 +216,7 @@ def loads(s, app=None, **kwargs):\n     return _json.loads(s, **kwargs)\n \n \n-def load(fp, app=None, **kwargs):\n+def load(fp: t.IO[str], app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.Any:\n     """"""Deserialize an object from JSON read from a file object.\n \n     Takes the same arguments as the built-in :func:`json.load`, with\n@@ -227,12 +244,12 @@ def load(fp, app=None, **kwargs):\n         )\n \n         if isinstance(fp.read(0), bytes):\n-            fp = io.TextIOWrapper(fp, encoding)\n+            fp = io.TextIOWrapper(fp, encoding)  # type: ignore\n \n     return _json.load(fp, **kwargs)\n \n \n-def htmlsafe_dumps(obj, **kwargs):\n+def htmlsafe_dumps(obj: t.Any, **kwargs: t.Any) -> str:\n     """"""Serialize an object to a string of JSON with :func:`dumps`, then\n     replace HTML-unsafe characters with Unicode escapes and mark the\n     result safe with :class:`~markupsafe.Markup`.\n@@ -256,7 +273,7 @@ def htmlsafe_dumps(obj, **kwargs):\n     return _jinja_htmlsafe_dumps(obj, dumps=dumps, **kwargs)\n \n \n-def htmlsafe_dump(obj, fp, **kwargs):\n+def htmlsafe_dump(obj: t.Any, fp: t.IO[str], **kwargs: t.Any) -> None:\n     """"""Serialize an object to JSON written to a file object, replacing\n     HTML-unsafe characters with Unicode escapes. See\n     :func:`htmlsafe_dumps` and :func:`dumps`.\n@@ -264,7 +281,7 @@ def htmlsafe_dump(obj, fp, **kwargs):\n     fp.write(htmlsafe_dumps(obj, **kwargs))\n \n \n-def jsonify(*args, **kwargs):\n+def jsonify(*args: t.Any, **kwargs: t.Any) -> ""Response"":\n     """"""Serialize data to JSON and wrap it in a :class:`~flask.Response`\n     with the :mimetype:`application/json` mimetype.\n \n'",4.0,4.0
src/flask/json/tag.py,src/flask/json/tag.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -40,6 +40,7 @@ be processed before ``dict``.\n \n     app.session_interface.serializer.register(TagOrderedDict, index=0)\n """"""\n+import typing as t\n from base64 import b64decode\n from base64 import b64encode\n from datetime import datetime\n@@ -60,27 +61,27 @@ class JSONTag:\n \n     #: The tag to mark the serialized object with. If ``None``, this tag is\n     #: only used as an intermediate step during tagging.\n-    key = None\n+    key: t.Optional[str] = None\n \n-    def __init__(self, serializer):\n+    def __init__(self, serializer: ""TaggedJSONSerializer"") -> None:\n         """"""Create a tagger for the given serializer.""""""\n         self.serializer = serializer\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         """"""Check if the given value should be tagged by this tag.""""""\n         raise NotImplementedError\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         """"""Convert the Python object to an object that is a valid JSON type.\n         The tag will be added later.""""""\n         raise NotImplementedError\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         """"""Convert the JSON representation back to the correct type. The tag\n         will already be removed.""""""\n         raise NotImplementedError\n \n-    def tag(self, value):\n+    def tag(self, value: t.Any) -> t.Any:\n         """"""Convert the value to a valid JSON type and add the tag structure\n         around it.""""""\n         return {self.key: self.to_json(value)}\n@@ -96,18 +97,18 @@ class TagDict(JSONTag):\n     __slots__ = ()\n     key = "" di""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return (\n             isinstance(value, dict)\n             and len(value) == 1\n             and next(iter(value)) in self.serializer.tags\n         )\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         key = next(iter(value))\n         return {f""{key}__"": self.serializer.tag(value[key])}\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         key = next(iter(value))\n         return {key[:-2]: value[key]}\n \n@@ -115,10 +116,10 @@ class TagDict(JSONTag):\n class PassDict(JSONTag):\n     __slots__ = ()\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, dict)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         # JSON objects may only have string keys, so don\'t bother tagging the\n         # key here.\n         return {k: self.serializer.tag(v) for k, v in value.items()}\n@@ -130,23 +131,23 @@ class TagTuple(JSONTag):\n     __slots__ = ()\n     key = "" t""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, tuple)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return [self.serializer.tag(item) for item in value]\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         return tuple(value)\n \n \n class PassList(JSONTag):\n     __slots__ = ()\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, list)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return [self.serializer.tag(item) for item in value]\n \n     tag = to_json\n@@ -156,13 +157,13 @@ class TagBytes(JSONTag):\n     __slots__ = ()\n     key = "" b""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, bytes)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return b64encode(value).decode(""ascii"")\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         return b64decode(value)\n \n \n@@ -174,13 +175,13 @@ class TagMarkup(JSONTag):\n     __slots__ = ()\n     key = "" m""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return callable(getattr(value, ""__html__"", None))\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return str(value.__html__())\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         return Markup(value)\n \n \n@@ -188,13 +189,13 @@ class TagUUID(JSONTag):\n     __slots__ = ()\n     key = "" u""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, UUID)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return value.hex\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         return UUID(value)\n \n \n@@ -202,13 +203,13 @@ class TagDateTime(JSONTag):\n     __slots__ = ()\n     key = "" d""\n \n-    def check(self, value):\n+    def check(self, value: t.Any) -> bool:\n         return isinstance(value, datetime)\n \n-    def to_json(self, value):\n+    def to_json(self, value: t.Any) -> t.Any:\n         return http_date(value)\n \n-    def to_python(self, value):\n+    def to_python(self, value: t.Any) -> t.Any:\n         return parse_date(value)\n \n \n@@ -242,14 +243,19 @@ class TaggedJSONSerializer:\n         TagDateTime,\n     ]\n \n-    def __init__(self):\n-        self.tags = {}\n-        self.order = []\n+    def __init__(self) -> None:\n+        self.tags: t.Dict[str, JSONTag] = {}\n+        self.order: t.List[JSONTag] = []\n \n         for cls in self.default_tags:\n             self.register(cls)\n \n-    def register(self, tag_class, force=False, index=None):\n+    def register(\n+        self,\n+        tag_class: t.Type[JSONTag],\n+        force: bool = False,\n+        index: t.Optional[int] = None,\n+    ) -> None:\n         """"""Register a new tag with this serializer.\n \n         :param tag_class: tag class to register. Will be instantiated with this\n@@ -277,7 +283,7 @@ class TaggedJSONSerializer:\n         else:\n             self.order.insert(index, tag)\n \n-    def tag(self, value):\n+    def tag(self, value: t.Any) -> t.Dict[str, t.Any]:\n         """"""Convert a value to a tagged representation if necessary.""""""\n         for tag in self.order:\n             if tag.check(value):\n@@ -285,7 +291,7 @@ class TaggedJSONSerializer:\n \n         return value\n \n-    def untag(self, value):\n+    def untag(self, value: t.Dict[str, t.Any]) -> t.Any:\n         """"""Convert a tagged representation back to the original type.""""""\n         if len(value) != 1:\n             return value\n@@ -297,10 +303,10 @@ class TaggedJSONSerializer:\n \n         return self.tags[key].to_python(value[key])\n \n-    def dumps(self, value):\n+    def dumps(self, value: t.Any) -> str:\n         """"""Tag the value and dump it to a compact JSON string.""""""\n         return dumps(self.tag(value), separators=("","", "":""))\n \n-    def loads(self, value):\n+    def loads(self, value: str) -> t.Any:\n         """"""Load data from a JSON string and deserialized any tagged objects.""""""\n         return loads(value, object_hook=self.untag)\n'",1.4242424242424243,1.4242424242424243
src/flask/logging.py,src/flask/logging.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,13 +1,17 @@\n import logging\n import sys\n+import typing as t\n \n from werkzeug.local import LocalProxy\n \n from .globals import request\n \n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+\n \n @LocalProxy\n-def wsgi_errors_stream():\n+def wsgi_errors_stream() -> t.TextIO:\n     """"""Find the most appropriate error stream for the application. If a request\n     is active, log to ``wsgi.errors``, otherwise use ``sys.stderr``.\n \n@@ -19,7 +23,7 @@ def wsgi_errors_stream():\n     return request.environ[""wsgi.errors""] if request else sys.stderr\n \n \n-def has_level_handler(logger):\n+def has_level_handler(logger: logging.Logger) -> bool:\n     """"""Check if there is a handler in the logging chain that will handle the\n     given logger\'s :meth:`effective level <~logging.Logger.getEffectiveLevel>`.\n     """"""\n@@ -33,20 +37,20 @@ def has_level_handler(logger):\n         if not current.propagate:\n             break\n \n-        current = current.parent\n+        current = current.parent  # type: ignore\n \n     return False\n \n \n #: Log messages to :func:`~flask.logging.wsgi_errors_stream` with the format\n #: ``[%(asctime)s] %(levelname)s in %(module)s: %(message)s``.\n-default_handler = logging.StreamHandler(wsgi_errors_stream)\n+default_handler = logging.StreamHandler(wsgi_errors_stream)  # type: ignore\n default_handler.setFormatter(\n     logging.Formatter(""[%(asctime)s] %(levelname)s in %(module)s: %(message)s"")\n )\n \n \n-def create_logger(app):\n+def create_logger(app: ""Flask"") -> logging.Logger:\n     """"""Get the Flask app\'s logger and configure it if needed.\n \n     The logger name will be the same as\n'",3.6666666666666665,3.6666666666666665
src/flask/scaffold.py,src/flask/scaffold.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -2,8 +2,11 @@ import importlib.util\n import os\n import pkgutil\n import sys\n+import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n+from json import JSONDecoder\n+from json import JSONEncoder\n \n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n@@ -14,17 +17,28 @@ from .globals import current_app\n from .helpers import locked_cached_property\n from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n+from .typing import AfterRequestCallable\n+from .typing import AppOrBlueprintKey\n+from .typing import BeforeRequestCallable\n+from .typing import ErrorHandlerCallable\n+from .typing import TeardownCallable\n+from .typing import TemplateContextProcessorCallable\n+from .typing import URLDefaultCallable\n+from .typing import URLValuePreprocessorCallable\n+\n+if t.TYPE_CHECKING:\n+    from .wrappers import Response\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n \n \n-def setupmethod(f):\n+def setupmethod(f: t.Callable) -> t.Callable:\n     """"""Wraps a method so that it performs a check in debug mode if the\n     first request was already handled.\n     """"""\n \n-    def wrapper_func(self, *args, **kwargs):\n+    def wrapper_func(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n         if self._is_setup_finished():\n             raise AssertionError(\n                 ""A setup function was called after the first request ""\n@@ -60,24 +74,24 @@ class Scaffold:\n     """"""\n \n     name: str\n-    _static_folder = None\n-    _static_url_path = None\n+    _static_folder: t.Optional[str] = None\n+    _static_url_path: t.Optional[str] = None\n \n     #: JSON encoder class used by :func:`flask.json.dumps`. If a\n     #: blueprint sets this, it will be used instead of the app\'s value.\n-    json_encoder = None\n+    json_encoder: t.Optional[t.Type[JSONEncoder]] = None\n \n     #: JSON decoder class used by :func:`flask.json.loads`. If a\n     #: blueprint sets this, it will be used instead of the app\'s value.\n-    json_decoder = None\n+    json_decoder: t.Optional[t.Type[JSONDecoder]] = None\n \n     def __init__(\n         self,\n-        import_name,\n-        static_folder=None,\n-        static_url_path=None,\n-        template_folder=None,\n-        root_path=None,\n+        import_name: str,\n+        static_folder: t.Optional[str] = None,\n+        static_url_path: t.Optional[str] = None,\n+        template_folder: t.Optional[str] = None,\n+        root_path: t.Optional[str] = None,\n     ):\n         #: The name of the package or module that this object belongs\n         #: to. Do not change this once it is set by the constructor.\n@@ -110,7 +124,7 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.view_functions = {}\n+        self.view_functions: t.Dict[str, t.Callable] = {}\n \n         #: A data structure of registered error handlers, in the format\n         #: ``{scope: {code: {class: handler}}}```. The ``scope`` key is\n@@ -125,7 +139,10 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.error_handler_spec = defaultdict(lambda: defaultdict(dict))\n+        self.error_handler_spec: t.Dict[\n+            AppOrBlueprintKey,\n+            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ErrorHandlerCallable]],\n+        ] = defaultdict(lambda: defaultdict(dict))\n \n         #: A data structure of functions to call at the beginning of\n         #: each request, in the format ``{scope: [functions]}``. The\n@@ -137,7 +154,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.before_request_funcs = defaultdict(list)\n+        self.before_request_funcs: t.Dict[\n+            AppOrBlueprintKey, t.List[BeforeRequestCallable]\n+        ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n         #: request, in the format ``{scope: [functions]}``. The\n@@ -149,7 +168,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.after_request_funcs = defaultdict(list)\n+        self.after_request_funcs: t.Dict[\n+            AppOrBlueprintKey, t.List[AfterRequestCallable]\n+        ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n         #: request even if an exception is raised, in the format\n@@ -162,7 +183,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.teardown_request_funcs = defaultdict(list)\n+        self.teardown_request_funcs: t.Dict[\n+            AppOrBlueprintKey, t.List[TeardownCallable]\n+        ] = defaultdict(list)\n \n         #: A data structure of functions to call to pass extra context\n         #: values when rendering templates, in the format\n@@ -175,9 +198,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.template_context_processors = defaultdict(\n-            list, {None: [_default_template_ctx_processor]}\n-        )\n+        self.template_context_processors: t.Dict[\n+            AppOrBlueprintKey, t.List[TemplateContextProcessorCallable]\n+        ] = defaultdict(list, {None: [_default_template_ctx_processor]})\n \n         #: A data structure of functions to call to modify the keyword\n         #: arguments passed to the view function, in the format\n@@ -190,7 +213,10 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.url_value_preprocessors = defaultdict(list)\n+        self.url_value_preprocessors: t.Dict[\n+            AppOrBlueprintKey,\n+            t.List[URLValuePreprocessorCallable],\n+        ] = defaultdict(list)\n \n         #: A data structure of functions to call to modify the keyword\n         #: arguments when generating URLs, in the format\n@@ -203,31 +229,35 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.url_default_functions = defaultdict(list)\n+        self.url_default_functions: t.Dict[\n+            AppOrBlueprintKey, t.List[URLDefaultCallable]\n+        ] = defaultdict(list)\n \n-    def __repr__(self):\n+    def __repr__(self) -> str:\n         return f""<{type(self).__name__} {self.name!r}>""\n \n-    def _is_setup_finished(self):\n+    def _is_setup_finished(self) -> bool:\n         raise NotImplementedError\n \n     @property\n-    def static_folder(self):\n+    def static_folder(self) -> t.Optional[str]:\n         """"""The absolute path to the configured static folder. ``None``\n         if no static folder is set.\n         """"""\n         if self._static_folder is not None:\n             return os.path.join(self.root_path, self._static_folder)\n+        else:\n+            return None\n \n     @static_folder.setter\n-    def static_folder(self, value):\n+    def static_folder(self, value: t.Optional[str]) -> None:\n         if value is not None:\n             value = os.fspath(value).rstrip(r""\\/"")\n \n         self._static_folder = value\n \n     @property\n-    def has_static_folder(self):\n+    def has_static_folder(self) -> bool:\n         """"""``True`` if :attr:`static_folder` is set.\n \n         .. versionadded:: 0.5\n@@ -235,7 +265,7 @@ class Scaffold:\n         return self.static_folder is not None\n \n     @property\n-    def static_url_path(self):\n+    def static_url_path(self) -> t.Optional[str]:\n         """"""The URL prefix that the static route will be accessible from.\n \n         If it was not configured during init, it is derived from\n@@ -248,14 +278,16 @@ class Scaffold:\n             basename = os.path.basename(self.static_folder)\n             return f""/{basename}"".rstrip(""/"")\n \n+        return None\n+\n     @static_url_path.setter\n-    def static_url_path(self, value):\n+    def static_url_path(self, value: t.Optional[str]) -> None:\n         if value is not None:\n             value = value.rstrip(""/"")\n \n         self._static_url_path = value\n \n-    def get_send_file_max_age(self, filename):\n+    def get_send_file_max_age(self, filename: str) -> t.Optional[int]:\n         """"""Used by :func:`send_file` to determine the ``max_age`` cache\n         value for a given file path if it wasn\'t passed.\n \n@@ -276,7 +308,7 @@ class Scaffold:\n \n         return int(value.total_seconds())\n \n-    def send_static_file(self, filename):\n+    def send_static_file(self, filename: str) -> ""Response"":\n         """"""The view function used to serve files from\n         :attr:`static_folder`. A route is automatically registered for\n         this view at :attr:`static_url_path` if :attr:`static_folder` is\n@@ -290,10 +322,12 @@ class Scaffold:\n         # send_file only knows to call get_send_file_max_age on the app,\n         # call it here so it works for blueprints too.\n         max_age = self.get_send_file_max_age(filename)\n-        return send_from_directory(self.static_folder, filename, max_age=max_age)\n+        return send_from_directory(\n+            t.cast(str, self.static_folder), filename, max_age=max_age\n+        )\n \n     @locked_cached_property\n-    def jinja_loader(self):\n+    def jinja_loader(self) -> t.Optional[FileSystemLoader]:\n         """"""The Jinja loader for this object\'s templates. By default this\n         is a class :class:`jinja2.loaders.FileSystemLoader` to\n         :attr:`template_folder` if it is set.\n@@ -302,8 +336,10 @@ class Scaffold:\n         """"""\n         if self.template_folder is not None:\n             return FileSystemLoader(os.path.join(self.root_path, self.template_folder))\n+        else:\n+            return None\n \n-    def open_resource(self, resource, mode=""rb""):\n+    def open_resource(self, resource: str, mode: str = ""rb"") -> t.IO[t.AnyStr]:\n         """"""Open a resource file relative to :attr:`root_path` for\n         reading.\n \n@@ -326,48 +362,48 @@ class Scaffold:\n \n         return open(os.path.join(self.root_path, resource), mode)\n \n-    def _method_route(self, method, rule, options):\n+    def _method_route(self, method: str, rule: str, options: dict) -> t.Callable:\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n \n         return self.route(rule, methods=[method], **options)\n \n-    def get(self, rule, **options):\n+    def get(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""GET"", rule, options)\n \n-    def post(self, rule, **options):\n+    def post(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""POST"", rule, options)\n \n-    def put(self, rule, **options):\n+    def put(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PUT"", rule, options)\n \n-    def delete(self, rule, **options):\n+    def delete(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""DELETE"", rule, options)\n \n-    def patch(self, rule, **options):\n+    def patch(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PATCH"", rule, options)\n \n-    def route(self, rule, **options):\n+    def route(self, rule: str, **options: t.Any) -> t.Callable:\n         """"""Decorate a view function to register it with the given URL\n         rule and options. Calls :meth:`add_url_rule`, which has more\n         details about the implementation.\n@@ -391,7 +427,7 @@ class Scaffold:\n             :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: t.Callable) -> t.Callable:\n             endpoint = options.pop(""endpoint"", None)\n             self.add_url_rule(rule, endpoint, f, **options)\n             return f\n@@ -401,12 +437,12 @@ class Scaffold:\n     @setupmethod\n     def add_url_rule(\n         self,\n-        rule,\n-        endpoint=None,\n-        view_func=None,\n-        provide_automatic_options=None,\n-        **options,\n-    ):\n+        rule: str,\n+        endpoint: t.Optional[str] = None,\n+        view_func: t.Optional[t.Callable] = None,\n+        provide_automatic_options: t.Optional[bool] = None,\n+        **options: t.Any,\n+    ) -> t.Callable:\n         """"""Register a rule for routing incoming requests and building\n         URLs. The :meth:`route` decorator is a shortcut to call this\n         with the ``view_func`` argument. These are equivalent:\n@@ -466,7 +502,7 @@ class Scaffold:\n         """"""\n         raise NotImplementedError\n \n-    def endpoint(self, endpoint):\n+    def endpoint(self, endpoint: str) -> t.Callable:\n         """"""Decorate a view function to register it for the given\n         endpoint. Used if a rule is added without a ``view_func`` with\n         :meth:`add_url_rule`.\n@@ -490,7 +526,7 @@ class Scaffold:\n         return decorator\n \n     @setupmethod\n-    def before_request(self, f):\n+    def before_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n         """"""Register a function to run before each request.\n \n         For example, this can be used to open a database connection, or\n@@ -512,7 +548,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def after_request(self, f):\n+    def after_request(self, f: AfterRequestCallable) -> AfterRequestCallable:\n         """"""Register a function to run after each request to this object.\n \n         The function is called with the response object, and must return\n@@ -528,7 +564,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def teardown_request(self, f):\n+    def teardown_request(self, f: TeardownCallable) -> TeardownCallable:\n         """"""Register a function to be run at the end of each request,\n         regardless of whether there was an exception or not.  These functions\n         are executed when the request context is popped, even if not an\n@@ -567,13 +603,17 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def context_processor(self, f):\n+    def context_processor(\n+        self, f: TemplateContextProcessorCallable\n+    ) -> TemplateContextProcessorCallable:\n         """"""Registers a template context processor function.""""""\n         self.template_context_processors[None].append(f)\n         return f\n \n     @setupmethod\n-    def url_value_preprocessor(self, f):\n+    def url_value_preprocessor(\n+        self, f: URLValuePreprocessorCallable\n+    ) -> URLValuePreprocessorCallable:\n         """"""Register a URL value preprocessor function for all view\n         functions in the application. These functions will be called before the\n         :meth:`before_request` functions.\n@@ -590,7 +630,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def url_defaults(self, f):\n+    def url_defaults(self, f: URLDefaultCallable) -> URLDefaultCallable:\n         """"""Callback function for URL defaults for all view functions of the\n         application.  It\'s called with the endpoint and values and should\n         update the values passed in place.\n@@ -599,7 +639,9 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def errorhandler(self, code_or_exception):\n+    def errorhandler(\n+        self, code_or_exception: t.Union[t.Type[Exception], int]\n+    ) -> t.Callable:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -629,14 +671,18 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: ErrorHandlerCallable) -> ErrorHandlerCallable:\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n         return decorator\n \n     @setupmethod\n-    def register_error_handler(self, code_or_exception, f):\n+    def register_error_handler(\n+        self,\n+        code_or_exception: t.Union[t.Type[Exception], int],\n+        f: ErrorHandlerCallable,\n+    ) -> None:\n         """"""Alternative error attach function to the :meth:`errorhandler`\n         decorator that is more straightforward to use for non decorator\n         usage.\n@@ -662,7 +708,9 @@ class Scaffold:\n         self.error_handler_spec[None][code][exc_class] = self.ensure_sync(f)\n \n     @staticmethod\n-    def _get_exc_class_and_code(exc_class_or_code):\n+    def _get_exc_class_and_code(\n+        exc_class_or_code: t.Union[t.Type[Exception], int]\n+    ) -> t.Tuple[t.Type[Exception], t.Optional[int]]:\n         """"""Get the exception class being handled. For HTTP status codes\n         or ``HTTPException`` subclasses, return both the exception and\n         status code.\n@@ -670,6 +718,7 @@ class Scaffold:\n         :param exc_class_or_code: Any exception class, or an HTTP status\n             code as an integer.\n         """"""\n+        exc_class: t.Type[Exception]\n         if isinstance(exc_class_or_code, int):\n             exc_class = default_exceptions[exc_class_or_code]\n         else:\n@@ -684,11 +733,11 @@ class Scaffold:\n         else:\n             return exc_class, None\n \n-    def ensure_sync(self, func):\n+    def ensure_sync(self, func: t.Callable) -> t.Callable:\n         raise NotImplementedError()\n \n \n-def _endpoint_from_view_func(view_func):\n+def _endpoint_from_view_func(view_func: t.Callable) -> str:\n     """"""Internal helper that returns the default endpoint for a given\n     function.  This always is the function name.\n     """"""\n@@ -696,7 +745,7 @@ def _endpoint_from_view_func(view_func):\n     return view_func.__name__\n \n \n-def get_root_path(import_name):\n+def get_root_path(import_name: str) -> str:\n     """"""Find the root path of a package, or the path that contains a\n     module. If it cannot be found, returns the current working\n     directory.\n@@ -721,7 +770,7 @@ def get_root_path(import_name):\n         return os.getcwd()\n \n     if hasattr(loader, ""get_filename""):\n-        filepath = loader.get_filename(import_name)\n+        filepath = loader.get_filename(import_name)  # type: ignore\n     else:\n         # Fall back to imports.\n         __import__(import_name)\n@@ -822,7 +871,7 @@ def _find_package_path(root_mod_name):\n     return package_path\n \n \n-def find_package(import_name):\n+def find_package(import_name: str):\n     """"""Find the prefix that a package is installed under, and the path\n     that it would be imported from.\n \n'",1.9268292682926829,1.9268292682926829
src/flask/sessions.py,src/flask/sessions.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,4 +1,5 @@\n import hashlib\n+import typing as t\n import warnings\n from collections.abc import MutableMapping\n from datetime import datetime\n@@ -10,17 +11,21 @@ from werkzeug.datastructures import CallbackDict\n from .helpers import is_ip\n from .json.tag import TaggedJSONSerializer\n \n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+    from .wrappers import Request, Response\n+\n \n class SessionMixin(MutableMapping):\n     """"""Expands a basic dictionary with session attributes.""""""\n \n     @property\n-    def permanent(self):\n+    def permanent(self) -> bool:\n         """"""This reflects the ``\'_permanent\'`` key in the dict.""""""\n         return self.get(""_permanent"", False)\n \n     @permanent.setter\n-    def permanent(self, value):\n+    def permanent(self, value: bool) -> None:\n         self[""_permanent""] = bool(value)\n \n     #: Some implementations can detect whether a session is newly\n@@ -61,22 +66,22 @@ class SecureCookieSession(CallbackDict, SessionMixin):\n     #: different users.\n     accessed = False\n \n-    def __init__(self, initial=None):\n-        def on_update(self):\n+    def __init__(self, initial: t.Any = None) -> None:\n+        def on_update(self) -> None:\n             self.modified = True\n             self.accessed = True\n \n         super().__init__(initial, on_update)\n \n-    def __getitem__(self, key):\n+    def __getitem__(self, key: str) -> t.Any:\n         self.accessed = True\n         return super().__getitem__(key)\n \n-    def get(self, key, default=None):\n+    def get(self, key: str, default: t.Any = None) -> t.Any:\n         self.accessed = True\n         return super().get(key, default)\n \n-    def setdefault(self, key, default=None):\n+    def setdefault(self, key: str, default: t.Any = None) -> t.Any:\n         self.accessed = True\n         return super().setdefault(key, default)\n \n@@ -87,14 +92,14 @@ class NullSession(SecureCookieSession):\n     but fail on setting.\n     """"""\n \n-    def _fail(self, *args, **kwargs):\n+    def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n         raise RuntimeError(\n             ""The session is unavailable because no secret ""\n             ""key was set.  Set the secret_key on the ""\n             ""application to something unique and secret.""\n         )\n \n-    __setitem__ = __delitem__ = clear = pop = popitem = update = setdefault = _fail\n+    __setitem__ = __delitem__ = clear = pop = popitem = update = setdefault = _fail  # type: ignore # noqa: B950\n     del _fail\n \n \n@@ -141,7 +146,7 @@ class SessionInterface:\n     #: .. versionadded:: 0.10\n     pickle_based = False\n \n-    def make_null_session(self, app):\n+    def make_null_session(self, app: ""Flask"") -> NullSession:\n         """"""Creates a null session which acts as a replacement object if the\n         real session support could not be loaded due to a configuration\n         error.  This mainly aids the user experience because the job of the\n@@ -153,7 +158,7 @@ class SessionInterface:\n         """"""\n         return self.null_session_class()\n \n-    def is_null_session(self, obj):\n+    def is_null_session(self, obj: object) -> bool:\n         """"""Checks if a given object is a null session.  Null sessions are\n         not asked to be saved.\n \n@@ -162,14 +167,14 @@ class SessionInterface:\n         """"""\n         return isinstance(obj, self.null_session_class)\n \n-    def get_cookie_name(self, app):\n+    def get_cookie_name(self, app: ""Flask"") -> str:\n         """"""Returns the name of the session cookie.\n \n         Uses ``app.session_cookie_name`` which is set to ``SESSION_COOKIE_NAME``\n         """"""\n         return app.session_cookie_name\n \n-    def get_cookie_domain(self, app):\n+    def get_cookie_domain(self, app: ""Flask"") -> t.Optional[str]:\n         """"""Returns the domain that should be set for the session cookie.\n \n         Uses ``SESSION_COOKIE_DOMAIN`` if it is configured, otherwise\n@@ -227,7 +232,7 @@ class SessionInterface:\n         app.config[""SESSION_COOKIE_DOMAIN""] = rv\n         return rv\n \n-    def get_cookie_path(self, app):\n+    def get_cookie_path(self, app: ""Flask"") -> str:\n         """"""Returns the path for which the cookie should be valid.  The\n         default implementation uses the value from the ``SESSION_COOKIE_PATH``\n         config var if it\'s set, and falls back to ``APPLICATION_ROOT`` or\n@@ -235,27 +240,29 @@ class SessionInterface:\n         """"""\n         return app.config[""SESSION_COOKIE_PATH""] or app.config[""APPLICATION_ROOT""]\n \n-    def get_cookie_httponly(self, app):\n+    def get_cookie_httponly(self, app: ""Flask"") -> bool:\n         """"""Returns True if the session cookie should be httponly.  This\n         currently just returns the value of the ``SESSION_COOKIE_HTTPONLY``\n         config var.\n         """"""\n         return app.config[""SESSION_COOKIE_HTTPONLY""]\n \n-    def get_cookie_secure(self, app):\n+    def get_cookie_secure(self, app: ""Flask"") -> bool:\n         """"""Returns True if the cookie should be secure.  This currently\n         just returns the value of the ``SESSION_COOKIE_SECURE`` setting.\n         """"""\n         return app.config[""SESSION_COOKIE_SECURE""]\n \n-    def get_cookie_samesite(self, app):\n+    def get_cookie_samesite(self, app: ""Flask"") -> str:\n         """"""Return ``\'Strict\'`` or ``\'Lax\'`` if the cookie should use the\n         ``SameSite`` attribute. This currently just returns the value of\n         the :data:`SESSION_COOKIE_SAMESITE` setting.\n         """"""\n         return app.config[""SESSION_COOKIE_SAMESITE""]\n \n-    def get_expiration_time(self, app, session):\n+    def get_expiration_time(\n+        self, app: ""Flask"", session: SessionMixin\n+    ) -> t.Optional[datetime]:\n         """"""A helper method that returns an expiration date for the session\n         or ``None`` if the session is linked to the browser session.  The\n         default implementation returns now + the permanent session\n@@ -263,8 +270,9 @@ class SessionInterface:\n         """"""\n         if session.permanent:\n             return datetime.utcnow() + app.permanent_session_lifetime\n+        return None\n \n-    def should_set_cookie(self, app, session):\n+    def should_set_cookie(self, app: ""Flask"", session: SessionMixin) -> bool:\n         """"""Used by session backends to determine if a ``Set-Cookie`` header\n         should be set for this session cookie for this response. If the session\n         has been modified, the cookie is set. If the session is permanent and\n@@ -280,7 +288,9 @@ class SessionInterface:\n             session.permanent and app.config[""SESSION_REFRESH_EACH_REQUEST""]\n         )\n \n-    def open_session(self, app, request):\n+    def open_session(\n+        self, app: ""Flask"", request: ""Request""\n+    ) -> t.Optional[SessionMixin]:\n         """"""This method has to be implemented and must either return ``None``\n         in case the loading failed because of a configuration error or an\n         instance of a session object which implements a dictionary like\n@@ -288,7 +298,9 @@ class SessionInterface:\n         """"""\n         raise NotImplementedError()\n \n-    def save_session(self, app, session, response):\n+    def save_session(\n+        self, app: ""Flask"", session: SessionMixin, response: ""Response""\n+    ) -> None:\n         """"""This is called for actual sessions returned by :meth:`open_session`\n         at the end of the request.  This is still called during a request\n         context so if you absolutely need access to the request you can do\n@@ -319,7 +331,9 @@ class SecureCookieSessionInterface(SessionInterface):\n     serializer = session_json_serializer\n     session_class = SecureCookieSession\n \n-    def get_signing_serializer(self, app):\n+    def get_signing_serializer(\n+        self, app: ""Flask""\n+    ) -> t.Optional[URLSafeTimedSerializer]:\n         if not app.secret_key:\n             return None\n         signer_kwargs = dict(\n@@ -332,7 +346,9 @@ class SecureCookieSessionInterface(SessionInterface):\n             signer_kwargs=signer_kwargs,\n         )\n \n-    def open_session(self, app, request):\n+    def open_session(\n+        self, app: ""Flask"", request: ""Request""\n+    ) -> t.Optional[SecureCookieSession]:\n         s = self.get_signing_serializer(app)\n         if s is None:\n             return None\n@@ -346,7 +362,9 @@ class SecureCookieSessionInterface(SessionInterface):\n         except BadSignature:\n             return self.session_class()\n \n-    def save_session(self, app, session, response):\n+    def save_session(\n+        self, app: ""Flask"", session: SessionMixin, response: ""Response""\n+    ) -> None:\n         name = self.get_cookie_name(app)\n         domain = self.get_cookie_domain(app)\n         path = self.get_cookie_path(app)\n@@ -372,10 +390,10 @@ class SecureCookieSessionInterface(SessionInterface):\n \n         httponly = self.get_cookie_httponly(app)\n         expires = self.get_expiration_time(app, session)\n-        val = self.get_signing_serializer(app).dumps(dict(session))\n+        val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore\n         response.set_cookie(\n             name,\n-            val,\n+            val,  # type: ignore\n             expires=expires,\n             httponly=httponly,\n             domain=domain,\n'",1.826086956521739,1.826086956521739
src/flask/signals.py,src/flask/signals.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,3 +1,5 @@\n+import typing as t\n+\n try:\n     from blinker import Namespace\n \n@@ -5,8 +7,8 @@ try:\n except ImportError:\n     signals_available = False\n \n-    class Namespace:\n-        def signal(self, name, doc=None):\n+    class Namespace:  # type: ignore\n+        def signal(self, name: str, doc: t.Optional[str] = None) -> ""_FakeSignal"":\n             return _FakeSignal(name, doc)\n \n     class _FakeSignal:\n@@ -16,14 +18,14 @@ except ImportError:\n         will just ignore the arguments and do nothing instead.\n         """"""\n \n-        def __init__(self, name, doc=None):\n+        def __init__(self, name: str, doc: t.Optional[str] = None) -> None:\n             self.name = name\n             self.__doc__ = doc\n \n-        def send(self, *args, **kwargs):\n+        def send(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n             pass\n \n-        def _fail(self, *args, **kwargs):\n+        def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n             raise RuntimeError(\n                 ""Signalling support is unavailable because the blinker""\n                 "" library is not installed.""\n'",1.0,1.0
src/flask/templating.py,src/flask/templating.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,5 +1,8 @@\n+import typing as t\n+\n from jinja2 import BaseLoader\n from jinja2 import Environment as BaseEnvironment\n+from jinja2 import Template\n from jinja2 import TemplateNotFound\n \n from .globals import _app_ctx_stack\n@@ -7,8 +10,12 @@ from .globals import _request_ctx_stack\n from .signals import before_render_template\n from .signals import template_rendered\n \n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+    from .scaffold import Scaffold\n+\n \n-def _default_template_ctx_processor():\n+def _default_template_ctx_processor() -> t.Dict[str, t.Any]:\n     """"""Default template context processor.  Injects `request`,\n     `session` and `g`.\n     """"""\n@@ -29,7 +36,7 @@ class Environment(BaseEnvironment):\n     name of the blueprint to referenced templates if necessary.\n     """"""\n \n-    def __init__(self, app, **options):\n+    def __init__(self, app: ""Flask"", **options: t.Any) -> None:\n         if ""loader"" not in options:\n             options[""loader""] = app.create_global_jinja_loader()\n         BaseEnvironment.__init__(self, **options)\n@@ -41,15 +48,19 @@ class DispatchingJinjaLoader(BaseLoader):\n     the blueprint folders.\n     """"""\n \n-    def __init__(self, app):\n+    def __init__(self, app: ""Flask"") -> None:\n         self.app = app\n \n-    def get_source(self, environment, template):\n+    def get_source(\n+        self, environment: Environment, template: str\n+    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n         if self.app.config[""EXPLAIN_TEMPLATE_LOADING""]:\n             return self._get_source_explained(environment, template)\n         return self._get_source_fast(environment, template)\n \n-    def _get_source_explained(self, environment, template):\n+    def _get_source_explained(\n+        self, environment: Environment, template: str\n+    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n         attempts = []\n         trv = None\n \n@@ -70,7 +81,9 @@ class DispatchingJinjaLoader(BaseLoader):\n             return trv\n         raise TemplateNotFound(template)\n \n-    def _get_source_fast(self, environment, template):\n+    def _get_source_fast(\n+        self, environment: Environment, template: str\n+    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n         for _srcobj, loader in self._iter_loaders(template):\n             try:\n                 return loader.get_source(environment, template)\n@@ -78,7 +91,9 @@ class DispatchingJinjaLoader(BaseLoader):\n                 continue\n         raise TemplateNotFound(template)\n \n-    def _iter_loaders(self, template):\n+    def _iter_loaders(\n+        self, template: str\n+    ) -> t.Generator[t.Tuple[""Scaffold"", BaseLoader], None, None]:\n         loader = self.app.jinja_loader\n         if loader is not None:\n             yield self.app, loader\n@@ -88,7 +103,7 @@ class DispatchingJinjaLoader(BaseLoader):\n             if loader is not None:\n                 yield blueprint, loader\n \n-    def list_templates(self):\n+    def list_templates(self) -> t.List[str]:\n         result = set()\n         loader = self.app.jinja_loader\n         if loader is not None:\n@@ -103,7 +118,7 @@ class DispatchingJinjaLoader(BaseLoader):\n         return list(result)\n \n \n-def _render(template, context, app):\n+def _render(template: Template, context: dict, app: ""Flask"") -> str:\n     """"""Renders the template and fires the signal""""""\n \n     before_render_template.send(app, template=template, context=context)\n@@ -112,7 +127,9 @@ def _render(template, context, app):\n     return rv\n \n \n-def render_template(template_name_or_list, **context):\n+def render_template(\n+    template_name_or_list: t.Union[str, t.List[str]], **context: t.Any\n+) -> str:\n     """"""Renders a template from the template folder with the given\n     context.\n \n@@ -131,7 +148,7 @@ def render_template(template_name_or_list, **context):\n     )\n \n \n-def render_template_string(source, **context):\n+def render_template_string(source: str, **context: t.Any) -> str:\n     """"""Renders a template from the given template source string\n     with the given context. Template variables will be autoescaped.\n \n'",2.5454545454545454,2.5454545454545454
src/flask/testing.py,src/flask/testing.py,77237093da25438c88b0a74c374a397d4bf823eb,f405c6f19e002ae13708cb33f6d48257cc1ea37a,'Add initial type hints\n\nThis should make it easier for users to correctly use Flask. The hints\nare from Quart.',"'@@ -1,5 +1,7 @@\n+import typing as t\n from contextlib import contextmanager\n from copy import copy\n+from types import TracebackType\n \n import werkzeug.test\n from click.testing import CliRunner\n@@ -10,6 +12,11 @@ from werkzeug.wrappers import Request as BaseRequest\n from . import _request_ctx_stack\n from .cli import ScriptInfo\n from .json import dumps as json_dumps\n+from .sessions import SessionMixin\n+\n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+    from .wrappers import Response\n \n \n class EnvironBuilder(werkzeug.test.EnvironBuilder):\n@@ -36,14 +43,14 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n \n     def __init__(\n         self,\n-        app,\n-        path=""/"",\n-        base_url=None,\n-        subdomain=None,\n-        url_scheme=None,\n-        *args,\n-        **kwargs,\n-    ):\n+        app: ""Flask"",\n+        path: str = ""/"",\n+        base_url: t.Optional[str] = None,\n+        subdomain: t.Optional[str] = None,\n+        url_scheme: t.Optional[str] = None,\n+        *args: t.Any,\n+        **kwargs: t.Any,\n+    ) -> None:\n         assert not (base_url or subdomain or url_scheme) or (\n             base_url is not None\n         ) != bool(\n@@ -74,7 +81,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         self.app = app\n         super().__init__(path, base_url, *args, **kwargs)\n \n-    def json_dumps(self, obj, **kwargs):\n+    def json_dumps(self, obj: t.Any, **kwargs: t.Any) -> str:  # type: ignore\n         """"""Serialize ``obj`` to a JSON-formatted string.\n \n         The serialization will be configured according to the config associated\n@@ -99,9 +106,10 @@ class FlaskClient(Client):\n     Basic usage is outlined in the :doc:`/testing` chapter.\n     """"""\n \n+    application: ""Flask""\n     preserve_context = False\n \n-    def __init__(self, *args, **kwargs):\n+    def __init__(self, *args: t.Any, **kwargs: t.Any) -> None:\n         super().__init__(*args, **kwargs)\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n@@ -109,7 +117,9 @@ class FlaskClient(Client):\n         }\n \n     @contextmanager\n-    def session_transaction(self, *args, **kwargs):\n+    def session_transaction(\n+        self, *args: t.Any, **kwargs: t.Any\n+    ) -> t.Generator[SessionMixin, None, None]:\n         """"""When used in combination with a ``with`` statement this opens a\n         session transaction.  This can be used to modify the session that\n         the test client uses.  Once the ``with`` block is left the session is\n@@ -161,9 +171,14 @@ class FlaskClient(Client):\n             headers = resp.get_wsgi_headers(c.request.environ)\n             self.cookie_jar.extract_wsgi(c.request.environ, headers)\n \n-    def open(\n-        self, *args, as_tuple=False, buffered=False, follow_redirects=False, **kwargs\n-    ):\n+    def open(  # type: ignore\n+        self,\n+        *args: t.Any,\n+        as_tuple: bool = False,\n+        buffered: bool = False,\n+        follow_redirects: bool = False,\n+        **kwargs: t.Any,\n+    ) -> ""Response"":\n         # Same logic as super.open, but apply environ_base and preserve_context.\n         request = None\n \n@@ -198,20 +213,22 @@ class FlaskClient(Client):\n             finally:\n                 builder.close()\n \n-        return super().open(\n+        return super().open(  # type: ignore\n             request,\n             as_tuple=as_tuple,\n             buffered=buffered,\n             follow_redirects=follow_redirects,\n         )\n \n-    def __enter__(self):\n+    def __enter__(self) -> ""FlaskClient"":\n         if self.preserve_context:\n             raise RuntimeError(""Cannot nest client invocations"")\n         self.preserve_context = True\n         return self\n \n-    def __exit__(self, exc_type, exc_value, tb):\n+    def __exit__(\n+        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+    ) -> None:\n         self.preserve_context = False\n \n         # Normally the request context is preserved until the next\n@@ -233,11 +250,13 @@ class FlaskCliRunner(CliRunner):\n     :meth:`~flask.Flask.test_cli_runner`. See :ref:`testing-cli`.\n     """"""\n \n-    def __init__(self, app, **kwargs):\n+    def __init__(self, app: ""Flask"", **kwargs: t.Any) -> None:\n         self.app = app\n         super().__init__(**kwargs)\n \n-    def invoke(self, cli=None, args=None, **kwargs):\n+    def invoke(  # type: ignore\n+        self, cli: t.Any = None, args: t.Any = None, **kwargs: t.Any\n+    ) -> t.Any:\n         """"""Invokes a CLI command in an isolated environment. See\n         :meth:`CliRunner.invoke <click.testing.CliRunner.invoke>` for\n         full method documentation. See :ref:`testing-cli` for examples.\n'",3.8,3.8
.pre-commit-config.yaml,.pre-commit-config.yaml,b373e7a456f1be4efb6f27c4a21af0dd04260229,e6e75e55470a0682ee8370e6d68062e515a248b9,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.12.0 → v2.13.0](https://github.com/asottile/pyupgrade/compare/v2.12.0...v2.13.0)\n- [github.com/asottile/reorder_python_imports: v2.4.0 → v2.5.0](https://github.com/asottile/reorder_python_imports/compare/v2.4.0...v2.5.0)\n- [github.com/psf/black: 20.8b1 → 21.4b0](https://github.com/psf/black/compare/20.8b1...21.4b0)',"'@@ -1,18 +1,18 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.12.0\n+    rev: v2.13.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.4.0\n+    rev: v2.5.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 20.8b1\n+    rev: 21.4b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,10b0d6b33f7a4414fd3f4474c0deceed2e40117e,1a8549debb914eecc85cf63034093b55792c7e8f,'Move get_root_path back to flask.helpers\n\nMany libraries use it so the move is somewhat disruptive.',"'@@ -1,5 +1,7 @@\n import os\n+import pkgutil\n import socket\n+import sys\n import typing as t\n import warnings\n from datetime import timedelta\n@@ -677,6 +679,55 @@ def send_from_directory(directory: str, path: str, **kwargs: t.Any) -> ""Response\n     )\n \n \n+def get_root_path(import_name: str) -> str:\n+    """"""Find the root path of a package, or the path that contains a\n+    module. If it cannot be found, returns the current working\n+    directory.\n+\n+    Not to be confused with the value returned by :func:`find_package`.\n+\n+    :meta private:\n+    """"""\n+    # Module already imported and has a file attribute. Use that first.\n+    mod = sys.modules.get(import_name)\n+\n+    if mod is not None and hasattr(mod, ""__file__""):\n+        return os.path.dirname(os.path.abspath(mod.__file__))\n+\n+    # Next attempt: check the loader.\n+    loader = pkgutil.get_loader(import_name)\n+\n+    # Loader does not exist or we\'re referring to an unloaded main\n+    # module or a main module without path (interactive sessions), go\n+    # with the current working directory.\n+    if loader is None or import_name == ""__main__"":\n+        return os.getcwd()\n+\n+    if hasattr(loader, ""get_filename""):\n+        filepath = loader.get_filename(import_name)  # type: ignore\n+    else:\n+        # Fall back to imports.\n+        __import__(import_name)\n+        mod = sys.modules[import_name]\n+        filepath = getattr(mod, ""__file__"", None)\n+\n+        # If we don\'t have a file path it might be because it is a\n+        # namespace package. In this case pick the root path from the\n+        # first module that is contained in the package.\n+        if filepath is None:\n+            raise RuntimeError(\n+                ""No root path can be found for the provided module""\n+                f"" {import_name!r}. This can happen because the module""\n+                "" came from an import hook that does not provide file""\n+                "" name information or because it\'s a namespace package.""\n+                "" In this case the root path needs to be explicitly""\n+                "" provided.""\n+            )\n+\n+    # filepath is import_name.py for a module, or __init__.py for a package.\n+    return os.path.dirname(os.path.abspath(filepath))\n+\n+\n class locked_cached_property(werkzeug.utils.cached_property):\n     """"""A :func:`property` that is only evaluated once. Like\n     :class:`werkzeug.utils.cached_property` except access uses a lock\n'",2.5416666666666665,2.72
src/flask/scaffold.py,src/flask/scaffold.py,10b0d6b33f7a4414fd3f4474c0deceed2e40117e,1a8549debb914eecc85cf63034093b55792c7e8f,'Move get_root_path back to flask.helpers\n\nMany libraries use it so the move is somewhat disruptive.',"'@@ -14,6 +14,7 @@ from werkzeug.exceptions import HTTPException\n \n from .cli import AppGroup\n from .globals import current_app\n+from .helpers import get_root_path\n from .helpers import locked_cached_property\n from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n@@ -745,55 +746,6 @@ def _endpoint_from_view_func(view_func: t.Callable) -> str:\n     return view_func.__name__\n \n \n-def get_root_path(import_name: str) -> str:\n-    """"""Find the root path of a package, or the path that contains a\n-    module. If it cannot be found, returns the current working\n-    directory.\n-\n-    Not to be confused with the value returned by :func:`find_package`.\n-\n-    :meta private:\n-    """"""\n-    # Module already imported and has a file attribute. Use that first.\n-    mod = sys.modules.get(import_name)\n-\n-    if mod is not None and hasattr(mod, ""__file__""):\n-        return os.path.dirname(os.path.abspath(mod.__file__))\n-\n-    # Next attempt: check the loader.\n-    loader = pkgutil.get_loader(import_name)\n-\n-    # Loader does not exist or we\'re referring to an unloaded main\n-    # module or a main module without path (interactive sessions), go\n-    # with the current working directory.\n-    if loader is None or import_name == ""__main__"":\n-        return os.getcwd()\n-\n-    if hasattr(loader, ""get_filename""):\n-        filepath = loader.get_filename(import_name)  # type: ignore\n-    else:\n-        # Fall back to imports.\n-        __import__(import_name)\n-        mod = sys.modules[import_name]\n-        filepath = getattr(mod, ""__file__"", None)\n-\n-        # If we don\'t have a file path it might be because it is a\n-        # namespace package. In this case pick the root path from the\n-        # first module that is contained in the package.\n-        if filepath is None:\n-            raise RuntimeError(\n-                ""No root path can be found for the provided module""\n-                f"" {import_name!r}. This can happen because the module""\n-                "" came from an import hook that does not provide file""\n-                "" name information or because it\'s a namespace package.""\n-                "" In this case the root path needs to be explicitly""\n-                "" provided.""\n-            )\n-\n-    # filepath is import_name.py for a module, or __init__.py for a package.\n-    return os.path.dirname(os.path.abspath(filepath))\n-\n-\n def _matching_loader_thinks_module_is_package(loader, mod_name):\n     """"""Attempt to figure out if the given name is a package or a module.\n \n'",1.9268292682926829,1.8
CHANGES.rst,CHANGES.rst,26a6cc0f94dd25390e2b2d7462bb4a414a862b16,1a8549debb914eecc85cf63034093b55792c7e8f,"'Allow using Click 7 with a DeprecationWarning\n\nAs long as popular libraries (e.g. Celery) require click 7, depending\non Click 8 in Flask makes it hard to test the latest version (and its\nother dependencies) in existing applications.'","'@@ -8,7 +8,10 @@ Unreleased\n -   Drop support for Python 2 and 3.5.\n -   Bump minimum versions of other Pallets projects: Werkzeug >= 2,\n     Jinja2 >= 3, MarkupSafe >= 2, ItsDangerous >= 2, Click >= 8. Be sure\n-    to check the change logs for each project.\n+    to check the change logs for each project. For better compatibility\n+    with other applications (e.g. Celery) that still require Click 7,\n+    there is no hard dependency on Click 8 yet, but using Click 7 will\n+    trigger a DeprecationWarning and Flask 2.1 will depend on Click 8.\n -   JSON support no longer uses simplejson. To use another JSON module,\n     override ``app.json_encoder`` and ``json_decoder``. :issue:`3555`\n -   The ``encoding`` option to JSON functions is deprecated. :pr:`3562`\n'",0,0
setup.py,setup.py,26a6cc0f94dd25390e2b2d7462bb4a414a862b16,1a8549debb914eecc85cf63034093b55792c7e8f,"'Allow using Click 7 with a DeprecationWarning\n\nAs long as popular libraries (e.g. Celery) require click 7, depending\non Click 8 in Flask makes it hard to test the latest version (and its\nother dependencies) in existing applications.'","'@@ -7,7 +7,7 @@ setup(\n         ""Werkzeug>=2.0.0rc4"",\n         ""Jinja2>=3.0.0rc1"",\n         ""itsdangerous>=2.0.0rc2"",\n-        ""click>=8.0.0rc1"",\n+        ""click>=7.1.2"",\n     ],\n     extras_require={\n         ""async"": [""asgiref>=3.2""],\n'",0,0
src/flask/cli.py,src/flask/cli.py,26a6cc0f94dd25390e2b2d7462bb4a414a862b16,1a8549debb914eecc85cf63034093b55792c7e8f,"'Allow using Click 7 with a DeprecationWarning\n\nAs long as popular libraries (e.g. Celery) require click 7, depending\non Click 8 in Flask makes it hard to test the latest version (and its\nother dependencies) in existing applications.'","'@@ -979,6 +979,13 @@ debug mode.\n \n \n def main() -> None:\n+    if int(click.__version__[0]) < 8:\n+        warnings.warn(\n+            ""Using the `flask` cli with Click 7 is deprecated and""\n+            "" will not be supported starting with Flask 2.1.""\n+            "" Please upgrade to Click 8 as soon as possible."",\n+            DeprecationWarning,\n+        )\n     # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n     cli.main(args=sys.argv[1:])\n \n'",4.194444444444445,4.222222222222222
tests/test_cli.py,tests/test_cli.py,26a6cc0f94dd25390e2b2d7462bb4a414a862b16,1a8549debb914eecc85cf63034093b55792c7e8f,"'Allow using Click 7 with a DeprecationWarning\n\nAs long as popular libraries (e.g. Celery) require click 7, depending\non Click 8 in Flask makes it hard to test the latest version (and its\nother dependencies) in existing applications.'","'@@ -5,6 +5,7 @@ import ssl\n import sys\n import types\n from functools import partial\n+from unittest.mock import patch\n \n import click\n import pytest\n@@ -21,6 +22,7 @@ from flask.cli import FlaskGroup\n from flask.cli import get_version\n from flask.cli import load_dotenv\n from flask.cli import locate_app\n+from flask.cli import main as cli_main\n from flask.cli import NoAppException\n from flask.cli import prepare_import\n from flask.cli import run_command\n@@ -660,3 +662,11 @@ def test_cli_empty(app):\n \n     result = app.test_cli_runner().invoke(args=[""blue"", ""--help""])\n     assert result.exit_code == 2, f""Unexpected success:\\n\\n{result.output}""\n+\n+\n+def test_click_7_deprecated():\n+    with patch(""flask.cli.cli""):\n+        if int(click.__version__[0]) < 8:\n+            pytest.deprecated_call(cli_main, match="".* Click 7 is deprecated"")\n+        else:\n+            cli_main()\n'",1.046875,1.0615384615384615
tox.ini,tox.ini,26a6cc0f94dd25390e2b2d7462bb4a414a862b16,1a8549debb914eecc85cf63034093b55792c7e8f,"'Allow using Click 7 with a DeprecationWarning\n\nAs long as popular libraries (e.g. Celery) require click 7, depending\non Click 8 in Flask makes it hard to test the latest version (and its\nother dependencies) in existing applications.'","'@@ -1,6 +1,7 @@\n [tox]\n envlist =\n     py{39,38,37,36,py3}\n+    py39-click7\n     style\n     typing\n     docs\n@@ -14,7 +15,9 @@ deps =\n     https://github.com/pallets/markupsafe/archive/master.tar.gz\n     https://github.com/pallets/jinja/archive/master.tar.gz\n     https://github.com/pallets/itsdangerous/archive/master.tar.gz\n-    https://github.com/pallets/click/archive/master.tar.gz\n+\n+    !click7: https://github.com/pallets/click/archive/master.tar.gz\n+    click7: click<8\n \n     examples/tutorial[test]\n     examples/javascript[test]\n'",0,0
CHANGES.rst,CHANGES.rst,9be01564f28ed49cbf55049265bd578c7a7257e1,77db3d5ede84bfdc6973154426973886b979f870,'Update changelog for #3932',"'@@ -76,6 +76,8 @@ Unreleased\n -   Support async views, error handlers, before and after request, and\n     teardown functions. :pr:`3412`\n -   Support nesting blueprints. :issue:`593, 1548`, :pr:`3923`\n+-   Set the default encoding to ""UTF-8"" when loading ``.env`` and\n+    ``.flaskenv`` files to allow to use non-ASCII characters. :issue:`3931`\n -   ``flask shell`` sets up tab and history completion like the default\n     ``python`` shell if ``readline`` is installed. :issue:`3941`\n -   ``helpers.total_seconds()`` is deprecated. Use\n'",0,0
requirements/dev.txt,requirements/dev.txt,36e6ec45a9885fb1a6a22b0eb15b8810a8712418,0d63f1021d3608580f86e82448922922bf6300e5,'Bump pre-commit from 2.12.0 to 2.12.1\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.12.0 to 2.12.1.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.12.0...v2.12.1)\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -64,7 +64,7 @@ pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.12.0\n+pre-commit==2.12.1\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n'",0,0
docs/async-await.rst,docs/async-await.rst,ec044a24e10d2bd3c730f69909cd44639b469fd0,83b2f8f0f15053561c08c93ffe0de4a8a5adf829,'Add tips for using async on Windows on Python 3.8',"'@@ -17,6 +17,12 @@ defined with ``async def`` and use ``await``.\n         data = await async_db_query(...)\n         return jsonify(data)\n \n+.. admonition:: Using ``async`` on Windows on Python 3.8\n+\n+    Python 3.8 has a bug related to asyncio on Windows. If you encounter\n+    something like ``ValueError: set_wakeup_fd only works in main thread``,\n+    please upgrade to Python 3.9.\n+\n \n Performance\n -----------\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,467d2e2a437c73fc8eabdd887efe0453663939c3,0c198dffc34f30883d9056c4e42e9858edd06e96,'Bump python-dotenv from 0.17.0 to 0.17.1\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.17.0 to 0.17.1.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.17.0...v0.17.1)\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -78,7 +78,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.3\n     # via -r requirements/tests.in\n-python-dotenv==0.17.0\n+python-dotenv==0.17.1\n     # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n'",0,0
requirements/tests.txt,requirements/tests.txt,467d2e2a437c73fc8eabdd887efe0453663939c3,0c198dffc34f30883d9056c4e42e9858edd06e96,'Bump python-dotenv from 0.17.0 to 0.17.1\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.17.0 to 0.17.1.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.17.0...v0.17.1)\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -24,7 +24,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.3\n     # via -r requirements/tests.in\n-python-dotenv==0.17.0\n+python-dotenv==0.17.1\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
docs/async-await.rst,docs/async-await.rst,8bfce88e39dd427dc1258a04c6b0cafa9667ff3e,98fbb6a3a722b7e3b6fd7152a15f4f234651a821,'Minor docs fixes. (#3988)',"""@@ -57,7 +57,7 @@ example via ``asyncio.create_task``.\n If you wish to use background tasks it is best to use a task queue to\n trigger background work, rather than spawn tasks in a view\n function. With that in mind you can spawn asyncio tasks by serving\n-Flask with a ASGI server and utilising the asgiref WsgiToAsgi adapter\n+Flask with an ASGI server and utilising the asgiref WsgiToAsgi adapter\n as described in :ref:`asgi`. This works as the adapter creates an\n event loop that runs continually.\n \n@@ -70,7 +70,7 @@ to the way it is implemented. If you have a mainly async codebase it\n would make sense to consider `Quart`_. Quart is a reimplementation of\n Flask based on the `ASGI`_ standard instead of WSGI. This allows it to\n handle many concurrent requests, long running requests, and websockets\n-without requiring individual worker processes or threads.\n+without requiring multiple worker processes or threads.\n \n It has also already been possible to run Flask with Gevent or Eventlet\n to get many of the benefits of async request handling. These libraries\n@@ -86,8 +86,8 @@ to understanding the specific needs of your project.\n Extensions\n ----------\n \n-Existing Flask extensions only expect views to be synchronous. If they\n-provide decorators to add functionality to views, those will probably\n+Flask extensions predating Flask's async support do not expect async views.\n+If they provide decorators to add functionality to views, those will probably\n not work with async views because they will not await the function or be\n awaitable. Other functions they provide will not be awaitable either and\n will probably be blocking if called within an async view.\n""",1.0,1.0
src/flask/helpers.py,src/flask/helpers.py,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,188f4785adc4eddd0b185f33b400c2812915624f,"""Remove context copying from run_async function\n\nThis was required with the previous implementation of Werkzeug's\nlocals which didn't persist across threads. However as the current\nimplementation uses ContextVars which do persist the context copying\nis no longer required.""","'@@ -819,33 +819,8 @@ def run_async(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n         )\n \n     @wraps(func)\n-    def outer(*args: t.Any, **kwargs: t.Any) -> t.Any:\n-        """"""This function grabs the current context for the inner function.\n-\n-        This is similar to the copy_current_xxx_context functions in the\n-        ctx module, except it has an async inner.\n-        """"""\n-        ctx = None\n-\n-        if _request_ctx_stack.top is not None:\n-            ctx = _request_ctx_stack.top.copy()\n-\n-        @wraps(func)\n-        async def inner(*a: t.Any, **k: t.Any) -> t.Any:\n-            """"""This restores the context before awaiting the func.\n-\n-            This is required as the function must be awaited within the\n-            context. Only calling ``func`` (as per the\n-            ``copy_current_xxx_context`` functions) doesn\'t work as the\n-            with block will close before the coroutine is awaited.\n-            """"""\n-            if ctx is not None:\n-                with ctx:\n-                    return await func(*a, **k)\n-            else:\n-                return await func(*a, **k)\n-\n-        return async_to_sync(inner)(*args, **kwargs)\n+    def wrapper(*args: t.Any, **kwargs: t.Any) -> t.Any:\n+        return async_to_sync(func)(*args, **kwargs)\n \n-    outer._flask_sync_wrapper = True  # type: ignore\n-    return outer\n+    wrapper._flask_sync_wrapper = True  # type: ignore\n+    return wrapper\n'",2.72,2.7083333333333335
docs/async-await.rst,docs/async-await.rst,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","""@@ -92,6 +92,21 @@ not work with async views because they will not await the function or be\n awaitable. Other functions they provide will not be awaitable either and\n will probably be blocking if called within an async view.\n \n+Extension authors can support async functions by utilising the\n+:meth:`flask.Flask.ensure_sync` method. For example, if the extension\n+provides a view function decorator add ``ensure_sync`` before calling\n+the decorated function,\n+\n+.. code-block:: python\n+\n+    def extension(func):\n+        @wraps(func)\n+        def wrapper(*args, **kwargs):\n+            ...  # Extension logic\n+            return current_app.ensure_sync(func)(*args, **kwargs)\n+\n+        return wrapper\n+\n Check the changelog of the extension you want to use to see if they've\n implemented async support, or make a feature request or PR to them.\n \n""",1.0,1.0
src/flask/app.py,src/flask/app.py,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","'@@ -35,12 +35,12 @@ from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n from .globals import session\n+from .helpers import async_to_sync\n from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n from .helpers import locked_cached_property\n-from .helpers import run_async\n from .helpers import url_for\n from .json import jsonify\n from .logging import create_logger\n@@ -1080,14 +1080,12 @@ class Flask(Scaffold):\n         self.url_map.add(rule)\n         if view_func is not None:\n             old_func = self.view_functions.get(endpoint)\n-            if getattr(old_func, ""_flask_sync_wrapper"", False):\n-                old_func = old_func.__wrapped__  # type: ignore\n             if old_func is not None and old_func != view_func:\n                 raise AssertionError(\n                     ""View function mapping is overwriting an existing""\n                     f"" endpoint function: {endpoint}""\n                 )\n-            self.view_functions[endpoint] = self.ensure_sync(view_func)\n+            self.view_functions[endpoint] = view_func\n \n     @setupmethod\n     def template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n@@ -1208,7 +1206,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.8\n         """"""\n-        self.before_first_request_funcs.append(self.ensure_sync(f))\n+        self.before_first_request_funcs.append(f)\n         return f\n \n     @setupmethod\n@@ -1241,7 +1239,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.9\n         """"""\n-        self.teardown_appcontext_funcs.append(self.ensure_sync(f))\n+        self.teardown_appcontext_funcs.append(f)\n         return f\n \n     @setupmethod\n@@ -1308,7 +1306,7 @@ class Flask(Scaffold):\n         handler = self._find_error_handler(e)\n         if handler is None:\n             return e\n-        return handler(e)\n+        return self.ensure_sync(handler)(e)\n \n     def trap_http_exception(self, e: Exception) -> bool:\n         """"""Checks if an HTTP exception should be trapped or not.  By default\n@@ -1375,7 +1373,7 @@ class Flask(Scaffold):\n         if handler is None:\n             raise\n \n-        return handler(e)\n+        return self.ensure_sync(handler)(e)\n \n     def handle_exception(self, e: Exception) -> Response:\n         """"""Handle an exception that did not have an error handler\n@@ -1422,7 +1420,7 @@ class Flask(Scaffold):\n         handler = self._find_error_handler(server_error)\n \n         if handler is not None:\n-            server_error = handler(server_error)\n+            server_error = self.ensure_sync(handler)(server_error)\n \n         return self.finalize_request(server_error, from_error_handler=True)\n \n@@ -1484,7 +1482,7 @@ class Flask(Scaffold):\n         ):\n             return self.make_default_options_response()\n         # otherwise dispatch to the handler for that endpoint\n-        return self.view_functions[rule.endpoint](**req.view_args)\n+        return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)\n \n     def full_dispatch_request(self) -> Response:\n         """"""Dispatches the request and on top of that performs request\n@@ -1545,7 +1543,7 @@ class Flask(Scaffold):\n             if self._got_first_request:\n                 return\n             for func in self.before_first_request_funcs:\n-                func()\n+                self.ensure_sync(func)()\n             self._got_first_request = True\n \n     def make_default_options_response(self) -> Response:\n@@ -1581,7 +1579,7 @@ class Flask(Scaffold):\n         .. versionadded:: 2.0\n         """"""\n         if iscoroutinefunction(func):\n-            return run_async(func)\n+            return async_to_sync(func)\n \n         return func\n \n@@ -1807,7 +1805,7 @@ class Flask(Scaffold):\n             if bp in self.before_request_funcs:\n                 funcs = chain(funcs, self.before_request_funcs[bp])\n         for func in funcs:\n-            rv = func()\n+            rv = self.ensure_sync(func)()\n             if rv is not None:\n                 return rv\n \n@@ -1834,7 +1832,7 @@ class Flask(Scaffold):\n         if None in self.after_request_funcs:\n             funcs = chain(funcs, reversed(self.after_request_funcs[None]))\n         for handler in funcs:\n-            response = handler(response)\n+            response = self.ensure_sync(handler)(response)\n         if not self.session_interface.is_null_session(ctx.session):\n             self.session_interface.save_session(self, ctx.session, response)\n         return response\n@@ -1871,7 +1869,7 @@ class Flask(Scaffold):\n             if bp in self.teardown_request_funcs:\n                 funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n         for func in funcs:\n-            func(exc)\n+            self.ensure_sync(func)(exc)\n         request_tearing_down.send(self, exc=exc)\n \n     def do_teardown_appcontext(\n@@ -1894,7 +1892,7 @@ class Flask(Scaffold):\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n         for func in reversed(self.teardown_appcontext_funcs):\n-            func(exc)\n+            self.ensure_sync(func)(exc)\n         appcontext_tearing_down.send(self, exc=exc)\n \n     def app_context(self) -> AppContext:\n'",3.014705882352941,3.0
src/flask/blueprints.py,src/flask/blueprints.py,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","'@@ -292,13 +292,10 @@ class Blueprint(Scaffold):\n         # Merge blueprint data into parent.\n         if first_registration:\n \n-            def extend(bp_dict, parent_dict, ensure_sync=False):\n+            def extend(bp_dict, parent_dict):\n                 for key, values in bp_dict.items():\n                     key = self.name if key is None else f""{self.name}.{key}""\n \n-                    if ensure_sync:\n-                        values = [app.ensure_sync(func) for func in values]\n-\n                     parent_dict[key].extend(values)\n \n             for key, value in self.error_handler_spec.items():\n@@ -307,8 +304,7 @@ class Blueprint(Scaffold):\n                     dict,\n                     {\n                         code: {\n-                            exc_class: app.ensure_sync(func)\n-                            for exc_class, func in code_values.items()\n+                            exc_class: func for exc_class, func in code_values.items()\n                         }\n                         for code, code_values in value.items()\n                     },\n@@ -316,16 +312,13 @@ class Blueprint(Scaffold):\n                 app.error_handler_spec[key] = value\n \n             for endpoint, func in self.view_functions.items():\n-                app.view_functions[endpoint] = app.ensure_sync(func)\n+                app.view_functions[endpoint] = func\n \n-            extend(\n-                self.before_request_funcs, app.before_request_funcs, ensure_sync=True\n-            )\n-            extend(self.after_request_funcs, app.after_request_funcs, ensure_sync=True)\n+            extend(self.before_request_funcs, app.before_request_funcs)\n+            extend(self.after_request_funcs, app.after_request_funcs)\n             extend(\n                 self.teardown_request_funcs,\n                 app.teardown_request_funcs,\n-                ensure_sync=True,\n             )\n             extend(self.url_default_functions, app.url_default_functions)\n             extend(self.url_value_preprocessors, app.url_value_preprocessors)\n@@ -478,9 +471,7 @@ class Blueprint(Scaffold):\n         before each request, even if outside of a blueprint.\n         """"""\n         self.record_once(\n-            lambda s: s.app.before_request_funcs.setdefault(None, []).append(\n-                s.app.ensure_sync(f)\n-            )\n+            lambda s: s.app.before_request_funcs.setdefault(None, []).append(f)\n         )\n         return f\n \n@@ -490,9 +481,7 @@ class Blueprint(Scaffold):\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n         """"""\n-        self.record_once(\n-            lambda s: s.app.before_first_request_funcs.append(s.app.ensure_sync(f))\n-        )\n+        self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n         return f\n \n     def after_app_request(self, f: AfterRequestCallable) -> AfterRequestCallable:\n@@ -500,9 +489,7 @@ class Blueprint(Scaffold):\n         is executed after each request, even if outside of the blueprint.\n         """"""\n         self.record_once(\n-            lambda s: s.app.after_request_funcs.setdefault(None, []).append(\n-                s.app.ensure_sync(f)\n-            )\n+            lambda s: s.app.after_request_funcs.setdefault(None, []).append(f)\n         )\n         return f\n \n@@ -553,14 +540,3 @@ class Blueprint(Scaffold):\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n         return f\n-\n-    def ensure_sync(self, f: t.Callable) -> t.Callable:\n-        """"""Ensure the function is synchronous.\n-\n-        Override if you would like custom async to sync behaviour in\n-        this blueprint. Otherwise the app\'s\n-        :meth:`~flask.Flask.ensure_sync` is used.\n-\n-        .. versionadded:: 2.0\n-        """"""\n-        return f\n'",2.0294117647058822,2.0
src/flask/helpers.py,src/flask/helpers.py,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","'@@ -6,7 +6,6 @@ import typing as t\n import warnings\n from datetime import timedelta\n from functools import update_wrapper\n-from functools import wraps\n from threading import RLock\n \n import werkzeug.utils\n@@ -803,10 +802,15 @@ def is_ip(value: str) -> bool:\n     return False\n \n \n-def run_async(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n-    """"""Return a sync function that will run the coroutine function *func*.""""""\n+def async_to_sync(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n+    """"""Return a sync function that will run the coroutine function *func*.\n+\n+    This can be used as so\n+\n+        result = async_to_async(func)(*args, **kwargs)\n+    """"""\n     try:\n-        from asgiref.sync import async_to_sync\n+        from asgiref.sync import async_to_sync as asgiref_async_to_sync\n     except ImportError:\n         raise RuntimeError(\n             ""Install Flask with the \'async\' extra in order to use async views.""\n@@ -818,9 +822,4 @@ def run_async(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n             ""Async cannot be used with this combination of Python & Greenlet versions.""\n         )\n \n-    @wraps(func)\n-    def wrapper(*args: t.Any, **kwargs: t.Any) -> t.Any:\n-        return async_to_sync(func)(*args, **kwargs)\n-\n-    wrapper._flask_sync_wrapper = True  # type: ignore\n-    return wrapper\n+    return asgiref_async_to_sync(func)\n'",2.7083333333333335,2.782608695652174
src/flask/scaffold.py,src/flask/scaffold.py,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","'@@ -521,7 +521,7 @@ class Scaffold:\n         """"""\n \n         def decorator(f):\n-            self.view_functions[endpoint] = self.ensure_sync(f)\n+            self.view_functions[endpoint] = f\n             return f\n \n         return decorator\n@@ -545,7 +545,7 @@ class Scaffold:\n         return value from the view, and further request handling is\n         stopped.\n         """"""\n-        self.before_request_funcs.setdefault(None, []).append(self.ensure_sync(f))\n+        self.before_request_funcs.setdefault(None, []).append(f)\n         return f\n \n     @setupmethod\n@@ -561,7 +561,7 @@ class Scaffold:\n         should not be used for actions that must execute, such as to\n         close resources. Use :meth:`teardown_request` for that.\n         """"""\n-        self.after_request_funcs.setdefault(None, []).append(self.ensure_sync(f))\n+        self.after_request_funcs.setdefault(None, []).append(f)\n         return f\n \n     @setupmethod\n@@ -600,7 +600,7 @@ class Scaffold:\n            debugger can still access it.  This behavior can be controlled\n            by the ``PRESERVE_CONTEXT_ON_EXCEPTION`` configuration variable.\n         """"""\n-        self.teardown_request_funcs.setdefault(None, []).append(self.ensure_sync(f))\n+        self.teardown_request_funcs.setdefault(None, []).append(f)\n         return f\n \n     @setupmethod\n@@ -706,7 +706,7 @@ class Scaffold:\n                 "" instead.""\n             )\n \n-        self.error_handler_spec[None][code][exc_class] = self.ensure_sync(f)\n+        self.error_handler_spec[None][code][exc_class] = f\n \n     @staticmethod\n     def _get_exc_class_and_code(\n@@ -734,9 +734,6 @@ class Scaffold:\n         else:\n             return exc_class, None\n \n-    def ensure_sync(self, func: t.Callable) -> t.Callable:\n-        raise NotImplementedError()\n-\n \n def _endpoint_from_view_func(view_func: t.Callable) -> str:\n     """"""Internal helper that returns the default endpoint for a given\n'",1.8,1.8205128205128205
tests/test_async.py,tests/test_async.py,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,cb13128cf03b2f1b3c5b48eab518e57e7b5f6516,"""Simplify the async handling code\n\nFirstly `run_sync` was a misleading name as it didn't run anything,\ninstead I think `async_to_sync` is much clearer as it converts a\ncoroutine function to a function. (Name stolen from asgiref).\n\nSecondly trying to run the ensure_sync during registration made the\ncode more complex and brittle, e.g. the _flask_async_wrapper\nusage. This was done to pay any setup costs during registration rather\nthan runtime, however this only saved a iscoroutne check. It allows\nthe weirdness of the Blueprint and Scaffold ensure_sync methods to be\nremoved.\n\nSwitching to runtime ensure_sync usage provides a method for\nextensions to also support async, as now documented.""","'@@ -6,7 +6,7 @@ import pytest\n from flask import Blueprint\n from flask import Flask\n from flask import request\n-from flask.helpers import run_async\n+from flask.helpers import async_to_sync\n \n pytest.importorskip(""asgiref"")\n \n@@ -137,4 +137,4 @@ def test_async_before_after_request():\n @pytest.mark.skipif(sys.version_info >= (3, 7), reason=""should only raise Python < 3.7"")\n def test_async_runtime_error():\n     with pytest.raises(RuntimeError):\n-        run_async(None)\n+        async_to_sync(None)\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,2889da67cb15ac6d5d882781d54014286d9ae010,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,'Remove the async helper method\n\nIt is better to encourage users to utilise the app ensure_sync method\n(or the newely added async_to_sync method) so that any extensions that\nalter these methods take affect throughout the users code.\n\nWith the helper method users code fix parts of their code to the\nasgiref async_to_sync ignoring any extension changes.',"'@@ -16,6 +16,7 @@ from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import BadRequestKeyError\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n+from werkzeug.local import ContextVar\n from werkzeug.routing import BuildError\n from werkzeug.routing import Map\n from werkzeug.routing import MapAdapter\n@@ -35,7 +36,6 @@ from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n from .globals import session\n-from .helpers import async_to_sync\n from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_flashed_messages\n@@ -1579,10 +1579,40 @@ class Flask(Scaffold):\n         .. versionadded:: 2.0\n         """"""\n         if iscoroutinefunction(func):\n-            return async_to_sync(func)\n+            return self.async_to_sync(func)\n \n         return func\n \n+    def async_to_sync(\n+        self, func: t.Callable[..., t.Coroutine]\n+    ) -> t.Callable[..., t.Any]:\n+        """"""Return a sync function that will run the coroutine function.\n+\n+        .. code-block:: python\n+\n+            result = app.async_to_sync(func)(*args, **kwargs)\n+\n+        Override this method to change how the app converts async code\n+        to be synchronously callable.\n+\n+        .. versionadded:: 2.0\n+        """"""\n+        try:\n+            from asgiref.sync import async_to_sync as asgiref_async_to_sync\n+        except ImportError:\n+            raise RuntimeError(\n+                ""Install Flask with the \'async\' extra in order to use async views.""\n+            )\n+\n+        # Check that Werkzeug isn\'t using its fallback ContextVar class.\n+        if ContextVar.__module__ == ""werkzeug.local"":\n+            raise RuntimeError(\n+                ""Async cannot be used with this combination of Python ""\n+                ""and Greenlet versions.""\n+            )\n+\n+        return asgiref_async_to_sync(func)\n+\n     def make_response(self, rv: ResponseReturnValue) -> Response:\n         """"""Convert the return value from a view function to an instance of\n         :attr:`response_class`.\n'",3.0,3.0
src/flask/helpers.py,src/flask/helpers.py,2889da67cb15ac6d5d882781d54014286d9ae010,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,'Remove the async helper method\n\nIt is better to encourage users to utilise the app ensure_sync method\n(or the newely added async_to_sync method) so that any extensions that\nalter these methods take affect throughout the users code.\n\nWith the helper method users code fix parts of their code to the\nasgiref async_to_sync ignoring any extension changes.',"'@@ -10,7 +10,6 @@ from threading import RLock\n \n import werkzeug.utils\n from werkzeug.exceptions import NotFound\n-from werkzeug.local import ContextVar\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n \n@@ -800,26 +799,3 @@ def is_ip(value: str) -> bool:\n             return True\n \n     return False\n-\n-\n-def async_to_sync(func: t.Callable[..., t.Coroutine]) -> t.Callable[..., t.Any]:\n-    """"""Return a sync function that will run the coroutine function *func*.\n-\n-    This can be used as so\n-\n-        result = async_to_async(func)(*args, **kwargs)\n-    """"""\n-    try:\n-        from asgiref.sync import async_to_sync as asgiref_async_to_sync\n-    except ImportError:\n-        raise RuntimeError(\n-            ""Install Flask with the \'async\' extra in order to use async views.""\n-        )\n-\n-    # Check that Werkzeug isn\'t using its fallback ContextVar class.\n-    if ContextVar.__module__ == ""werkzeug.local"":\n-        raise RuntimeError(\n-            ""Async cannot be used with this combination of Python & Greenlet versions.""\n-        )\n-\n-    return asgiref_async_to_sync(func)\n'",2.782608695652174,2.772727272727273
tests/test_async.py,tests/test_async.py,2889da67cb15ac6d5d882781d54014286d9ae010,7f87f3dd93baf45d5f69f02a2dcf4493dfc4a1be,'Remove the async helper method\n\nIt is better to encourage users to utilise the app ensure_sync method\n(or the newely added async_to_sync method) so that any extensions that\nalter these methods take affect throughout the users code.\n\nWith the helper method users code fix parts of their code to the\nasgiref async_to_sync ignoring any extension changes.',"'@@ -6,7 +6,6 @@ import pytest\n from flask import Blueprint\n from flask import Flask\n from flask import request\n-from flask.helpers import async_to_sync\n \n pytest.importorskip(""asgiref"")\n \n@@ -136,5 +135,6 @@ def test_async_before_after_request():\n \n @pytest.mark.skipif(sys.version_info >= (3, 7), reason=""should only raise Python < 3.7"")\n def test_async_runtime_error():\n+    app = Flask(__name__)\n     with pytest.raises(RuntimeError):\n-        async_to_sync(None)\n+        app.async_to_sync(None)\n'",1.0,1.0
src/flask/__init__.py,src/flask/__init__.py,e2b7d1056c6c8f6f26a4b9dfcc5dc4b2ef87f573,47f0e799db8d8e379a1fd9bf48ce3a8b7d5bfe73,'release version 2.0.0rc2',"'@@ -43,4 +43,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""2.0.0rc1""\n+__version__ = ""2.0.0rc2""\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,c93a2d76d5874f2cb175b7e91407dc6c877e0139,d7ac6f5bcf324e7fc588e501b2f18669efd5a12a,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.13.0 → v2.14.0](https://github.com/asottile/pyupgrade/compare/v2.13.0...v2.14.0)\n- [github.com/psf/black: 21.4b0 → 21.4b2](https://github.com/psf/black/compare/21.4b0...21.4b2)',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.13.0\n+    rev: v2.14.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -12,7 +12,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.4b0\n+    rev: 21.4b2\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,95e5843ad51b025098ee33acbf273bafef26a1d8,3c9b85469ef4abda1e996a5ec0e7bef0f1a0b394,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.14.0 → v2.15.0](https://github.com/asottile/pyupgrade/compare/v2.14.0...v2.15.0)\n- [github.com/psf/black: 21.4b2 → 21.5b1](https://github.com/psf/black/compare/21.4b2...21.5b1)\n- [github.com/PyCQA/flake8: 3.9.1 → 3.9.2](https://github.com/PyCQA/flake8/compare/3.9.1...3.9.2)',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.14.0\n+    rev: v2.15.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -12,11 +12,11 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.4b2\n+    rev: 21.5b1\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 3.9.1\n+    rev: 3.9.2\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
docs/conf.py,docs/conf.py,79ac96f1239601eb12f6f69fcb3ce6cb269ac5fb,e1b3a053ba426e5b1aa7bd2af138e03c7f303592,'show type hints in description',"'@@ -20,6 +20,7 @@ extensions = [\n     ""sphinx_issues"",\n     ""sphinx_tabs.tabs"",\n ]\n+autodoc_typehints = ""description""\n intersphinx_mapping = {\n     ""python"": (""https://docs.python.org/3/"", None),\n     ""werkzeug"": (""https://werkzeug.palletsprojects.com/"", None),\n'",3.0,3.0
docs/cli.rst,docs/cli.rst,531671c9c5177f24e79a3062e2dc5d0aa60c29af,2c88e8a0aa7ee724b844cbe48013a1e7314e9049,'Improve the wording of using FLASK_APP',"'@@ -45,13 +45,13 @@ While ``FLASK_APP`` supports a variety of options for specifying your\n application, most use cases should be simple. Here are the typical values:\n \n (nothing)\n-    The file :file:`wsgi.py` is imported, automatically detecting an app\n-    (``app``). This provides an easy way to create an app from a factory with\n-    extra arguments.\n+    The name ""app"" or ""wsgi"" is imported (as a "".py"" file, or package),\n+    automatically detecting an app (``app`` or ``application``) or\n+    factory (``create_app`` or ``make_app``).\n \n ``FLASK_APP=hello``\n-    The name is imported, automatically detecting an app (``app``) or factory\n-    (``create_app``).\n+    The given name is imported, automatically detecting an app (``app``\n+    or ``application``) or factory (``create_app`` or ``make_app``).\n \n ----\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,531671c9c5177f24e79a3062e2dc5d0aa60c29af,2c88e8a0aa7ee724b844cbe48013a1e7314e9049,'Improve the wording of using FLASK_APP',"'@@ -50,7 +50,7 @@ to tell your terminal the application to work with by exporting the\n \n       .. code-block:: text\n \n-         $ export FLASK_APP=hello.py\n+         $ export FLASK_APP=hello\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n@@ -58,7 +58,7 @@ to tell your terminal the application to work with by exporting the\n \n       .. code-block:: text\n \n-         > set FLASK_APP=hello.py\n+         > set FLASK_APP=hello\n          > flask run\n           * Running on http://127.0.0.1:5000/\n \n@@ -66,10 +66,16 @@ to tell your terminal the application to work with by exporting the\n \n       .. code-block:: text\n \n-         > $env:FLASK_APP = ""hello.py""\n+         > $env:FLASK_APP = ""hello""\n          > flask run\n           * Running on http://127.0.0.1:5000/\n \n+.. admonition:: Application Discovery Behavior\n+\n+    As a shortcut, if the file is named ``app.py`` or ``wsgi.py``, you\n+    don\'t have to set the ``FLASK_APP`` environment variable. See\n+    :doc:`/cli` for more details.\n+\n This launches a very simple builtin server, which is good enough for\n testing but probably not what you want to use in production. For\n deployment options see :doc:`deploying/index`.\n'",1.2666666666666666,1.3333333333333333
.pre-commit-config.yaml,.pre-commit-config.yaml,8b72f6abd72b32225299c57c981180df35a89547,2c88e8a0aa7ee724b844cbe48013a1e7314e9049,'update pre-commit monthly',"'@@ -1,3 +1,5 @@\n+ci:\n+  autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n     rev: v2.15.0\n'",0,0
requirements/dev.in,requirements/dev.in,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -1,5 +1,6 @@\n -r docs.in\n -r tests.in\n+-r typing.in\n pip-tools\n pre-commit\n tox\n'",0,0
requirements/dev.txt,requirements/dev.txt,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -10,9 +10,9 @@ appdirs==1.4.4\n     # via virtualenv\n asgiref==3.3.4\n     # via -r requirements/tests.in\n-attrs==20.3.0\n+attrs==21.2.0\n     # via pytest\n-babel==2.9.0\n+babel==2.9.1\n     # via sphinx\n blinker==1.4\n     # via -r requirements/tests.in\n@@ -22,19 +22,21 @@ cfgv==3.2.0\n     # via pre-commit\n chardet==4.0.0\n     # via requests\n-click==7.1.2\n+click==8.0.0\n     # via pip-tools\n distlib==0.3.1\n     # via virtualenv\n docutils==0.16\n-    # via sphinx\n+    # via\n+    #   sphinx\n+    #   sphinx-tabs\n filelock==3.0.12\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.0.0\n+greenlet==1.1.0\n     # via -r requirements/tests.in\n-identify==2.2.3\n+identify==2.2.4\n     # via pre-commit\n idna==2.10\n     # via requests\n@@ -45,7 +47,13 @@ iniconfig==1.1.1\n jinja2==2.11.3\n     # via sphinx\n markupsafe==1.1.1\n-    # via jinja2\n+    # via\n+    #   jinja2\n+    #   sphinx\n+mypy-extensions==0.4.3\n+    # via mypy\n+mypy==0.812\n+    # via -r requirements/typing.in\n nodeenv==1.6.0\n     # via pre-commit\n packaging==20.9\n@@ -54,7 +62,7 @@ packaging==20.9\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.0.0rc1\n+pallets-sphinx-themes==2.0.0\n     # via -r requirements/docs.in\n pep517==0.10.0\n     # via pip-tools\n@@ -70,13 +78,13 @@ py==1.10.0\n     # via\n     #   pytest\n     #   tox\n-pygments==2.8.1\n+pygments==2.9.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.3\n+pytest==6.2.4\n     # via -r requirements/tests.in\n python-dotenv==0.17.1\n     # via -r requirements/tests.in\n@@ -86,7 +94,7 @@ pyyaml==5.4.1\n     # via pre-commit\n requests==2.25.1\n     # via sphinx\n-six==1.15.0\n+six==1.16.0\n     # via\n     #   tox\n     #   virtualenv\n@@ -94,9 +102,9 @@ snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.1.0\n+sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-sphinx==3.5.4\n+sphinx==4.0.1\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -123,11 +131,15 @@ toml==0.10.2\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.23.0\n+tox==3.23.1\n     # via -r requirements/dev.in\n+typed-ast==1.4.3\n+    # via mypy\n+typing-extensions==3.10.0.0\n+    # via mypy\n urllib3==1.26.4\n     # via requests\n-virtualenv==20.4.3\n+virtualenv==20.4.6\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.in,requirements/docs.in,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -1,4 +1,4 @@\n-Pallets-Sphinx-Themes >= 2.0.0rc1\n+Pallets-Sphinx-Themes\n Sphinx\n sphinx-issues\n sphinxcontrib-log-cabinet\n'",0,0
requirements/docs.txt,requirements/docs.txt,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -6,14 +6,16 @@\n #\n alabaster==0.7.12\n     # via sphinx\n-babel==2.9.0\n+babel==2.9.1\n     # via sphinx\n certifi==2020.12.5\n     # via requests\n chardet==4.0.0\n     # via requests\n docutils==0.16\n-    # via sphinx\n+    # via\n+    #   sphinx\n+    #   sphinx-tabs\n idna==2.10\n     # via requests\n imagesize==1.2.0\n@@ -21,14 +23,16 @@ imagesize==1.2.0\n jinja2==2.11.3\n     # via sphinx\n markupsafe==1.1.1\n-    # via jinja2\n+    # via\n+    #   jinja2\n+    #   sphinx\n packaging==20.9\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.0.0rc1\n+pallets-sphinx-themes==2.0.0\n     # via -r requirements/docs.in\n-pygments==2.8.1\n+pygments==2.9.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -42,9 +46,9 @@ snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n-sphinx-tabs==2.1.0\n+sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-sphinx==3.5.4\n+sphinx==4.0.1\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/tests.txt,requirements/tests.txt,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -6,11 +6,11 @@\n #\n asgiref==3.3.4\n     # via -r requirements/tests.in\n-attrs==20.3.0\n+attrs==21.2.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n-greenlet==1.0.0\n+greenlet==1.1.0\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n@@ -22,7 +22,7 @@ py==1.10.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.3\n+pytest==6.2.4\n     # via -r requirements/tests.in\n python-dotenv==0.17.1\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,9c1e7f6cdc6916d268aa9c44d46c06f5769fdcf0,'update requirements',"'@@ -10,5 +10,5 @@ mypy==0.812\n     # via -r requirements/typing.in\n typed-ast==1.4.3\n     # via mypy\n-typing-extensions==3.7.4.3\n+typing-extensions==3.10.0.0\n     # via mypy\n'",0,0
setup.py,setup.py,3a5532b4ed0db5cfd826e7fd2006ede6e873b028,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,'update pallets projects minimum versions',"'@@ -4,9 +4,9 @@ from setuptools import setup\n setup(\n     name=""Flask"",\n     install_requires=[\n-        ""Werkzeug>=2.0.0rc4"",\n-        ""Jinja2>=3.0.0rc1"",\n-        ""itsdangerous>=2.0.0rc2"",\n+        ""Werkzeug>=2.0"",\n+        ""Jinja2>=3.0"",\n+        ""itsdangerous>=2.0"",\n         ""click>=7.1.2"",\n     ],\n     extras_require={\n'",0,0
tox.ini,tox.ini,3a5532b4ed0db5cfd826e7fd2006ede6e873b028,f8f0caf5c6e560b8e7fd322cbfd140c2bf7aa61b,'update pallets projects minimum versions',"'@@ -11,12 +11,6 @@ skip_missing_interpreters = true\n deps =\n     -r requirements/tests.txt\n \n-    https://github.com/pallets/werkzeug/archive/master.tar.gz\n-    https://github.com/pallets/markupsafe/archive/master.tar.gz\n-    https://github.com/pallets/jinja/archive/master.tar.gz\n-    https://github.com/pallets/itsdangerous/archive/master.tar.gz\n-\n-    !click7: https://github.com/pallets/click/archive/master.tar.gz\n     click7: click<8\n \n     examples/tutorial[test]\n@@ -33,8 +27,5 @@ deps = -r requirements/typing.txt\n commands = mypy\n \n [testenv:docs]\n-deps =\n-    -r requirements/docs.txt\n-\n-    https://github.com/pallets/werkzeug/archive/master.tar.gz\n+deps = -r requirements/docs.txt\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n'",0,0
src/flask/app.py,src/flask/app.py,1403d35e2a107e0fc693a09898cf605bb18989ad,3a5532b4ed0db5cfd826e7fd2006ede6e873b028,'update type annotations',"'@@ -704,7 +704,7 @@ class Flask(Scaffold):\n             session=session,\n             g=g,\n         )\n-        rv.policies[""json.dumps_function""] = json.dumps  # type: ignore\n+        rv.policies[""json.dumps_function""] = json.dumps\n         return rv\n \n     def create_global_jinja_loader(self) -> DispatchingJinjaLoader:\n'",3.0,3.0
src/flask/json/__init__.py,src/flask/json/__init__.py,1403d35e2a107e0fc693a09898cf605bb18989ad,3a5532b4ed0db5cfd826e7fd2006ede6e873b028,'update type annotations',"'@@ -5,7 +5,7 @@ import uuid\n import warnings\n from datetime import date\n \n-from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps  # type: ignore\n+from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n from werkzeug.http import http_date\n \n from ..globals import current_app\n'",4.0,4.0
src/flask/templating.py,src/flask/templating.py,1403d35e2a107e0fc693a09898cf605bb18989ad,3a5532b4ed0db5cfd826e7fd2006ede6e873b028,'update type annotations',"'@@ -51,18 +51,21 @@ class DispatchingJinjaLoader(BaseLoader):\n     def __init__(self, app: ""Flask"") -> None:\n         self.app = app\n \n-    def get_source(\n+    def get_source(  # type: ignore\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n+    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n         if self.app.config[""EXPLAIN_TEMPLATE_LOADING""]:\n             return self._get_source_explained(environment, template)\n         return self._get_source_fast(environment, template)\n \n     def _get_source_explained(\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n+    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n         attempts = []\n-        trv = None\n+        rv: t.Optional[t.Tuple[str, t.Optional[str], t.Optional[t.Callable[[], bool]]]]\n+        trv: t.Optional[\n+            t.Tuple[str, t.Optional[str], t.Optional[t.Callable[[], bool]]]\n+        ] = None\n \n         for srcobj, loader in self._iter_loaders(template):\n             try:\n@@ -83,7 +86,7 @@ class DispatchingJinjaLoader(BaseLoader):\n \n     def _get_source_fast(\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Callable]:\n+    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n         for _srcobj, loader in self._iter_loaders(template):\n             try:\n                 return loader.get_source(environment, template)\n'",2.5454545454545454,2.5454545454545454
CHANGES.rst,CHANGES.rst,f8e63d39913f9a7bb887066025724569aa3423a6,1403d35e2a107e0fc693a09898cf605bb18989ad,'release version 2.0.0',"'@@ -3,7 +3,7 @@\n Version 2.0.0\n -------------\n \n-Unreleased\n+Released 2021-05-11\n \n -   Drop support for Python 2 and 3.5.\n -   Bump minimum versions of other Pallets projects: Werkzeug >= 2,\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,f8e63d39913f9a7bb887066025724569aa3423a6,1403d35e2a107e0fc693a09898cf605bb18989ad,'release version 2.0.0',"'@@ -43,4 +43,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""2.0.0rc2""\n+__version__ = ""2.0.0""\n'",0,0
CHANGES.rst,CHANGES.rst,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,2f0c62f5e6e290843f03c1fa70817c7a3c7fd661,'start version 2.0.1.dev0',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.0.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.0.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,2f0c62f5e6e290843f03c1fa70817c7a3c7fd661,'start version 2.0.1.dev0',"'@@ -43,4 +43,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""2.0.0""\n+__version__ = ""2.0.1.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,2846abaefed01f1da0d58ca3a83a2a09bea71e9c,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'start version 2.1.0.dev0',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.1.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.0.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,2846abaefed01f1da0d58ca3a83a2a09bea71e9c,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'start version 2.1.0.dev0',"'@@ -43,4 +43,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""2.0.1.dev0""\n+__version__ = ""2.1.0.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,80a4e62096f4010235823180462b4d6e058d025a,2846abaefed01f1da0d58ca3a83a2a09bea71e9c,'update click minimum version',"'@@ -5,6 +5,8 @@ Version 2.1.0\n \n Unreleased\n \n+-   Update Click dependency to >= 8.0.\n+\n \n Version 2.0.1\n -------------\n'",0,0
setup.py,setup.py,80a4e62096f4010235823180462b4d6e058d025a,2846abaefed01f1da0d58ca3a83a2a09bea71e9c,'update click minimum version',"'@@ -7,7 +7,7 @@ setup(\n         ""Werkzeug>=2.0"",\n         ""Jinja2>=3.0"",\n         ""itsdangerous>=2.0"",\n-        ""click>=7.1.2"",\n+        ""click>=8.0"",\n     ],\n     extras_require={\n         ""async"": [""asgiref>=3.2""],\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,52adf2ec219a0cb9abcfd116ec104c9a362c602a,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'rename default branch in files',"""@@ -2,7 +2,7 @@ name: Tests\n on:\n   push:\n     branches:\n-      - master\n+      - main\n       - '*.x'\n     paths-ignore:\n       - 'docs/**'\n@@ -10,7 +10,7 @@ on:\n       - '*.rst'\n   pull_request:\n     branches:\n-      - master\n+      - main\n       - '*.x'\n     paths-ignore:\n       - 'docs/**'\n""",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,52adf2ec219a0cb9abcfd116ec104c9a362c602a,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'rename default branch in files',"'@@ -143,15 +143,15 @@ Start coding\n     .. code-block:: text\n \n         $ git fetch origin\n-        $ git checkout -b your-branch-name origin/1.1.x\n+        $ git checkout -b your-branch-name origin/2.0.x\n \n     If you\'re submitting a feature addition or change, branch off of the\n-    ""master"" branch.\n+    ""main"" branch.\n \n     .. code-block:: text\n \n         $ git fetch origin\n-        $ git checkout -b your-branch-name origin/master\n+        $ git checkout -b your-branch-name origin/main\n \n -   Using your favorite editor, make your changes,\n     `committing as you go`_.\n'",0,0
README.rst,README.rst,52adf2ec219a0cb9abcfd116ec104c9a362c602a,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'rename default branch in files',"'@@ -55,7 +55,7 @@ Contributing\n For guidance on setting up a development environment and how to make a\n contribution to Flask, see the `contributing guidelines`_.\n \n-.. _contributing guidelines: https://github.com/pallets/flask/blob/master/CONTRIBUTING.rst\n+.. _contributing guidelines: https://github.com/pallets/flask/blob/main/CONTRIBUTING.rst\n \n \n Donate\n'",1.0,1.0
docs/conf.py,docs/conf.py,52adf2ec219a0cb9abcfd116ec104c9a362c602a,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'rename default branch in files',"'@@ -78,7 +78,7 @@ def github_link(name, rawtext, text, lineno, inliner, options=None, content=None\n         words = None\n \n     if packaging.version.parse(release).is_devrelease:\n-        url = f""{base_url}master/{text}""\n+        url = f""{base_url}main/{text}""\n     else:\n         url = f""{base_url}{release}/{text}""\n \n'",3.0,3.0
examples/tutorial/README.rst,examples/tutorial/README.rst,52adf2ec219a0cb9abcfd116ec104c9a362c602a,6fb1101f7075b4ff8197f3ef3b9fecfa41dc34ee,'rename default branch in files',"""@@ -11,7 +11,7 @@ Install\n \n **Be sure to use the same version of the code as the version of the docs\n you're reading.** You probably want the latest tagged version, but the\n-default Git version is the master branch. ::\n+default Git version is the main branch. ::\n \n     # clone the repository\n     $ git clone https://github.com/pallets/flask\n@@ -35,7 +35,7 @@ Install Flaskr::\n \n     $ pip install -e .\n \n-Or if you are using the master branch, install Flask from source before\n+Or if you are using the main branch, install Flask from source before\n installing Flaskr::\n \n     $ pip install -e ../..\n""",0,0
requirements/dev.txt,requirements/dev.txt,2ddbceeaa91b77cd6b837035c5697ac5b94fafab,15b2241b5173833bc0c9cadaaff9a05fd4e064e2,'Install sphinx 4.1-dev from git\n\nOtherwise docs builds are broken due to sphinx-doc/sphinx#9216',"'@@ -44,12 +44,10 @@ imagesize==1.2.0\n     # via sphinx\n iniconfig==1.1.1\n     # via pytest\n-jinja2==2.11.3\n+jinja2==3.0.0\n     # via sphinx\n-markupsafe==1.1.1\n-    # via\n-    #   jinja2\n-    #   sphinx\n+markupsafe==2.0.0\n+    # via jinja2\n mypy-extensions==0.4.3\n     # via mypy\n mypy==0.812\n@@ -104,7 +102,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-sphinx==4.0.1\n+git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.in,requirements/docs.in,2ddbceeaa91b77cd6b837035c5697ac5b94fafab,15b2241b5173833bc0c9cadaaff9a05fd4e064e2,'Install sphinx 4.1-dev from git\n\nOtherwise docs builds are broken due to sphinx-doc/sphinx#9216',"'@@ -1,5 +1,5 @@\n Pallets-Sphinx-Themes\n-Sphinx\n+git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3  # https://github.com/sphinx-doc/sphinx/issues/921\n sphinx-issues\n sphinxcontrib-log-cabinet\n sphinx-tabs\n'",0,0
requirements/docs.txt,requirements/docs.txt,2ddbceeaa91b77cd6b837035c5697ac5b94fafab,15b2241b5173833bc0c9cadaaff9a05fd4e064e2,'Install sphinx 4.1-dev from git\n\nOtherwise docs builds are broken due to sphinx-doc/sphinx#9216',"'@@ -20,12 +20,10 @@ idna==2.10\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n-jinja2==2.11.3\n+jinja2==3.0.0\n     # via sphinx\n-markupsafe==1.1.1\n-    # via\n-    #   jinja2\n-    #   sphinx\n+markupsafe==2.0.0\n+    # via jinja2\n packaging==20.9\n     # via\n     #   pallets-sphinx-themes\n@@ -48,7 +46,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-sphinx==4.0.1\n+git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
docs/blueprints.rst,docs/blueprints.rst,57b19fda540b596cd211ac864362485e09be203b,48325dbfb8a3d38966c62c17ba05882f28070981,'Fix typo in the example of nesting bp docs',"'@@ -127,8 +127,8 @@ It is possible to register a blueprint on another blueprint.\n \n .. code-block:: python\n \n-    parent = Blueprint(""parent"", __name__, url_prefix=""/parent"")\n-    child = Blueprint(""child"", __name__, url_prefix=""/child)\n+    parent = Blueprint(\'parent\', __name__, url_prefix=\'/parent\')\n+    child = Blueprint(\'child\', __name__, url_prefix=\'/child\')\n     parent.register_blueprint(child)\n     app.register_blueprint(parent)\n \n'",2.0,2.0
docs/blueprints.rst,docs/blueprints.rst,d575de5159a6e40944275763c9ada2801214058b,22d82e70b3647ed16c7d959a939daf533377382b,'Fix typo in the example of nesting bp docs',"'@@ -127,8 +127,8 @@ It is possible to register a blueprint on another blueprint.\n \n .. code-block:: python\n \n-    parent = Blueprint(""parent"", __name__, url_prefix=""/parent"")\n-    child = Blueprint(""child"", __name__, url_prefix=""/child)\n+    parent = Blueprint(\'parent\', __name__, url_prefix=\'/parent\')\n+    child = Blueprint(\'child\', __name__, url_prefix=\'/child\')\n     parent.register_blueprint(child)\n     app.register_blueprint(parent)\n \n'",2.0,2.0
docs/deploying/index.rst,docs/deploying/index.rst,2889ea4dd9bfee0d4b63a435c5a8d20337770f9c,57b19fda540b596cd211ac864362485e09be203b,'Added Google Cloud Run as a Hosted option',"'@@ -16,6 +16,7 @@ Hosted options\n \n - `Deploying Flask on Heroku <https://devcenter.heroku.com/articles/getting-started-with-python>`_\n - `Deploying Flask on Google App Engine <https://cloud.google.com/appengine/docs/standard/python3/runtime>`_\n+- `Deploying Flask on Google Cloud Run <https://cloud.google.com/run/docs/quickstarts/build-and-deploy/python>`_\n - `Deploying Flask on AWS Elastic Beanstalk <https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-flask.html>`_\n - `Deploying on Azure (IIS) <https://docs.microsoft.com/en-us/azure/app-service/containers/how-to-configure-python>`_\n - `Deploying on PythonAnywhere <https://help.pythonanywhere.com/pages/Flask/>`_\n'",0,0
CHANGES.rst,CHANGES.rst,fc82dd50e39700b14799df17578e2497b8f0248c,80d9519a9c6f6e84d93432a675326da0a983bd46,'Re-add filename param for send_from_directory\n\nAdd a deprecation warning for the old name',"'@@ -5,6 +5,10 @@ Version 2.0.1\n \n Unreleased\n \n+-   Re-add the ``filename`` parameter in ``send_from_directory``. The\n+    ``filename`` parameter has been renamed to ``path``, the old name\n+    is deprecated. :pr:`4019`\n+\n \n Version 2.0.0\n -------------\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,fc82dd50e39700b14799df17578e2497b8f0248c,80d9519a9c6f6e84d93432a675326da0a983bd46,'Re-add filename param for send_from_directory\n\nAdd a deprecation warning for the old name',"'@@ -642,7 +642,9 @@ def safe_join(directory: str, *pathnames: str) -> str:\n     return path\n \n \n-def send_from_directory(directory: str, path: str, **kwargs: t.Any) -> ""Response"":\n+def send_from_directory(\n+    directory: str, path: str, filename: t.Optional[str] = None, **kwargs: t.Any\n+) -> ""Response"":\n     """"""Send a file from within a directory using :func:`send_file`.\n \n     .. code-block:: python\n@@ -666,12 +668,24 @@ def send_from_directory(directory: str, path: str, **kwargs: t.Any) -> ""Response\n         ``directory``.\n     :param kwargs: Arguments to pass to :func:`send_file`.\n \n+    .. versionchanged:: 2.0\n+        ``path`` replaces the ``filename`` parameter.\n+\n     .. versionadded:: 2.0\n         Moved the implementation to Werkzeug. This is now a wrapper to\n         pass some Flask-specific arguments.\n \n     .. versionadded:: 0.5\n     """"""\n+    if filename is not None:\n+        warnings.warn(\n+            ""The \'filename\' parameter has been renamed to \'path\'. The""\n+            "" old name will be removed in Flask 2.1."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        path = filename\n+\n     return werkzeug.utils.send_from_directory(  # type: ignore\n         directory, path, **_prepare_send_file_kwargs(**kwargs)\n     )\n'",2.772727272727273,2.8181818181818183
CONTRIBUTING.rst,CONTRIBUTING.rst,14921608871f15f8c34d48026473293e225ad608,d906c71e99b0d6004490b4c68d249dade898e9c5,'Fix Fork link',"'@@ -129,7 +129,7 @@ First time setup\n .. _username: https://docs.github.com/en/github/using-git/setting-your-username-in-git\n .. _email: https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address\n .. _GitHub account: https://github.com/join\n-.. _Fork: https://github.com/pallets/jinja/fork\n+.. _Fork: https://github.com/pallets/flask/fork\n .. _Clone: https://docs.github.com/en/github/getting-started-with-github/fork-a-repo#step-2-create-a-local-clone-of-your-fork\n \n \n'",0,0
CHANGES.rst,CHANGES.rst,89475e5d1e3e25ce56c9d9411496528f4a1ba82b,d906c71e99b0d6004490b4c68d249dade898e9c5,'mark top-level names as exported',"'@@ -8,6 +8,8 @@ Unreleased\n -   Re-add the ``filename`` parameter in ``send_from_directory``. The\n     ``filename`` parameter has been renamed to ``path``, the old name\n     is deprecated. :pr:`4019`\n+-   Mark top-level names as exported so type checking understands\n+    imports in user projects. :issue:`4024`\n \n \n Version 2.0.0\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,89475e5d1e3e25ce56c9d9411496528f4a1ba82b,d906c71e99b0d6004490b4c68d249dade898e9c5,'mark top-level names as exported',"'@@ -1,46 +1,46 @@\n from markupsafe import escape\n from markupsafe import Markup\n-from werkzeug.exceptions import abort\n-from werkzeug.utils import redirect\n+from werkzeug.exceptions import abort as abort\n+from werkzeug.utils import redirect as redirect\n \n-from . import json\n-from .app import Flask\n-from .app import Request\n-from .app import Response\n-from .blueprints import Blueprint\n-from .config import Config\n-from .ctx import after_this_request\n-from .ctx import copy_current_request_context\n-from .ctx import has_app_context\n-from .ctx import has_request_context\n-from .globals import _app_ctx_stack\n-from .globals import _request_ctx_stack\n-from .globals import current_app\n-from .globals import g\n-from .globals import request\n-from .globals import session\n-from .helpers import flash\n-from .helpers import get_flashed_messages\n-from .helpers import get_template_attribute\n-from .helpers import make_response\n-from .helpers import safe_join\n-from .helpers import send_file\n-from .helpers import send_from_directory\n-from .helpers import stream_with_context\n-from .helpers import url_for\n-from .json import jsonify\n-from .signals import appcontext_popped\n-from .signals import appcontext_pushed\n-from .signals import appcontext_tearing_down\n-from .signals import before_render_template\n-from .signals import got_request_exception\n-from .signals import message_flashed\n-from .signals import request_finished\n-from .signals import request_started\n-from .signals import request_tearing_down\n-from .signals import signals_available\n-from .signals import template_rendered\n-from .templating import render_template\n-from .templating import render_template_string\n+from . import json as json\n+from .app import Flask as Flask\n+from .app import Request as Request\n+from .app import Response as Response\n+from .blueprints import Blueprint as Blueprint\n+from .config import Config as Config\n+from .ctx import after_this_request as after_this_request\n+from .ctx import copy_current_request_context as copy_current_request_context\n+from .ctx import has_app_context as has_app_context\n+from .ctx import has_request_context as has_request_context\n+from .globals import _app_ctx_stack as _app_ctx_stack\n+from .globals import _request_ctx_stack as _request_ctx_stack\n+from .globals import current_app as current_app\n+from .globals import g as g\n+from .globals import request as request\n+from .globals import session as session\n+from .helpers import flash as flash\n+from .helpers import get_flashed_messages as get_flashed_messages\n+from .helpers import get_template_attribute as get_template_attribute\n+from .helpers import make_response as make_response\n+from .helpers import safe_join as safe_join\n+from .helpers import send_file as send_file\n+from .helpers import send_from_directory as send_from_directory\n+from .helpers import stream_with_context as stream_with_context\n+from .helpers import url_for as url_for\n+from .json import jsonify as jsonify\n+from .signals import appcontext_popped as appcontext_popped\n+from .signals import appcontext_pushed as appcontext_pushed\n+from .signals import appcontext_tearing_down as appcontext_tearing_down\n+from .signals import before_render_template as before_render_template\n+from .signals import got_request_exception as got_request_exception\n+from .signals import message_flashed as message_flashed\n+from .signals import request_finished as request_finished\n+from .signals import request_started as request_started\n+from .signals import request_tearing_down as request_tearing_down\n+from .signals import signals_available as signals_available\n+from .signals import template_rendered as template_rendered\n+from .templating import render_template as render_template\n+from .templating import render_template_string as render_template_string\n \n __version__ = ""2.0.1.dev0""\n'",0,0
src/flask/globals.py,src/flask/globals.py,2baaa8fd8ebdd0f7bf7a24bff4855ef53476c92d,89475e5d1e3e25ce56c9d9411496528f4a1ba82b,'fix annotation for g object',"'@@ -6,7 +6,7 @@ from werkzeug.local import LocalStack\n \n if t.TYPE_CHECKING:\n     from .app import Flask\n-    from .ctx import AppContext\n+    from .ctx import _AppCtxGlobals\n     from .sessions import SessionMixin\n     from .wrappers import Request\n \n@@ -53,5 +53,7 @@ _request_ctx_stack = LocalStack()\n _app_ctx_stack = LocalStack()\n current_app: ""Flask"" = LocalProxy(_find_app)  # type: ignore\n request: ""Request"" = LocalProxy(partial(_lookup_req_object, ""request""))  # type: ignore\n-session: ""SessionMixin"" = LocalProxy(partial(_lookup_req_object, ""session""))  # type: ignore # noqa: B950\n-g: ""AppContext"" = LocalProxy(partial(_lookup_app_object, ""g""))  # type: ignore\n+session: ""SessionMixin"" = LocalProxy(  # type: ignore\n+    partial(_lookup_req_object, ""session"")\n+)\n+g: ""_AppCtxGlobals"" = LocalProxy(partial(_lookup_app_object, ""g""))  # type: ignore\n'",2.0,2.0
CHANGES.rst,CHANGES.rst,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,2baaa8fd8ebdd0f7bf7a24bff4855ef53476c92d,'inform mypy that g has arbitrary attributes',"'@@ -10,6 +10,8 @@ Unreleased\n     is deprecated. :pr:`4019`\n -   Mark top-level names as exported so type checking understands\n     imports in user projects. :issue:`4024`\n+-   Fix type annotation for ``g`` and inform mypy that it is a namespace\n+    object that has arbitrary attributes. :issue:`4020`\n \n \n Version 2.0.0\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,2baaa8fd8ebdd0f7bf7a24bff4855ef53476c92d,'inform mypy that g has arbitrary attributes',"'@@ -41,6 +41,24 @@ class _AppCtxGlobals:\n         .. versionadded:: 0.10\n     """"""\n \n+    # Define attr methods to let mypy know this is a namespace object\n+    # that has arbitrary attributes.\n+\n+    def __getattr__(self, name: str) -> t.Any:\n+        try:\n+            return self.__dict__[name]\n+        except KeyError:\n+            raise AttributeError(name) from None\n+\n+    def __setattr__(self, name: str, value: t.Any) -> None:\n+        self.__dict__[name] = value\n+\n+    def __delattr__(self, name: str) -> None:\n+        try:\n+            del self.__dict__[name]\n+        except KeyError:\n+            raise AttributeError(name) from None\n+\n     def get(self, name: str, default: t.Optional[t.Any] = None) -> t.Any:\n         """"""Get an attribute by name, or a default value. Like\n         :meth:`dict.get`.\n@@ -78,10 +96,10 @@ class _AppCtxGlobals:\n         """"""\n         return self.__dict__.setdefault(name, default)\n \n-    def __contains__(self, item: t.Any) -> bool:\n+    def __contains__(self, item: str) -> bool:\n         return item in self.__dict__\n \n-    def __iter__(self) -> t.Iterator:\n+    def __iter__(self) -> t.Iterator[str]:\n         return iter(self.__dict__)\n \n     def __repr__(self) -> str:\n'",1.9259259259259258,1.9
CHANGES.rst,CHANGES.rst,25884c433f1eddf4537694d4c5f9f78cd9a14955,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,"""fix typing that wasn't available in Python 3.6.0""","""@@ -12,6 +12,7 @@ Unreleased\n     imports in user projects. :issue:`4024`\n -   Fix type annotation for ``g`` and inform mypy that it is a namespace\n     object that has arbitrary attributes. :issue:`4020`\n+-   Fix some types that weren't available in Python 3.6.0. :issue:`4040`\n \n \n Version 2.0.0\n""",0,0
src/flask/app.py,src/flask/app.py,25884c433f1eddf4537694d4c5f9f78cd9a14955,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,"""fix typing that wasn't available in Python 3.6.0""","'@@ -72,6 +72,7 @@ from .wrappers import Request\n from .wrappers import Response\n \n if t.TYPE_CHECKING:\n+    import typing_extensions as te\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n@@ -1441,7 +1442,7 @@ class Flask(Scaffold):\n             f""Exception on {request.path} [{request.method}]"", exc_info=exc_info\n         )\n \n-    def raise_routing_exception(self, request: Request) -> t.NoReturn:\n+    def raise_routing_exception(self, request: Request) -> ""te.NoReturn"":\n         """"""Exceptions that are recording during routing are reraised with\n         this method.  During debug we are not reraising redirect requests\n         for non ``GET``, ``HEAD``, or ``OPTIONS`` requests and we\'re raising\n'",3.0,3.0
src/flask/sessions.py,src/flask/sessions.py,25884c433f1eddf4537694d4c5f9f78cd9a14955,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,"""fix typing that wasn't available in Python 3.6.0""","'@@ -12,6 +12,7 @@ from .helpers import is_ip\n from .json.tag import TaggedJSONSerializer\n \n if t.TYPE_CHECKING:\n+    import typing_extensions as te\n     from .app import Flask\n     from .wrappers import Request, Response\n \n@@ -92,7 +93,7 @@ class NullSession(SecureCookieSession):\n     but fail on setting.\n     """"""\n \n-    def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n+    def _fail(self, *args: t.Any, **kwargs: t.Any) -> ""te.NoReturn"":\n         raise RuntimeError(\n             ""The session is unavailable because no secret ""\n             ""key was set.  Set the secret_key on the ""\n'",1.826086956521739,1.826086956521739
src/flask/wrappers.py,src/flask/wrappers.py,25884c433f1eddf4537694d4c5f9f78cd9a14955,6fe7f45725dd0fc94fb3ce7ab3b3ff477b10401a,"""fix typing that wasn't available in Python 3.6.0""","'@@ -8,6 +8,7 @@ from . import json\n from .globals import current_app\n \n if t.TYPE_CHECKING:\n+    import typing_extensions as te\n     from werkzeug.routing import Rule\n \n \n@@ -91,7 +92,7 @@ class Request(RequestBase):\n \n             attach_enctype_error_multidict(self)\n \n-    def on_json_loading_failed(self, e: Exception) -> t.NoReturn:\n+    def on_json_loading_failed(self, e: Exception) -> ""te.NoReturn"":\n         if current_app and current_app.debug:\n             raise BadRequest(f""Failed to decode JSON object: {e}"")\n \n'",2.8333333333333335,2.8333333333333335
CHANGES.rst,CHANGES.rst,d5aadba4d34f6070377e88429b178ba08eea5349,6414df97562e623221c1ee2072d38e84f87b02d9,'improve type hints for send_file and send_from_directory',"""@@ -13,6 +13,8 @@ Unreleased\n -   Fix type annotation for ``g`` and inform mypy that it is a namespace\n     object that has arbitrary attributes. :issue:`4020`\n -   Fix some types that weren't available in Python 3.6.0. :issue:`4040`\n+-   Improve typing for ``send_file``, ``send_from_directory``, and\n+    ``get_send_file_max_age``. :issue:`4044`, :pr:`4026`\n \n \n Version 2.0.0\n""",0,0
src/flask/helpers.py,src/flask/helpers.py,d5aadba4d34f6070377e88429b178ba08eea5349,6414df97562e623221c1ee2072d38e84f87b02d9,'improve type hints for send_file and send_from_directory',"'@@ -4,6 +4,7 @@ import socket\n import sys\n import typing as t\n import warnings\n+from datetime import datetime\n from datetime import timedelta\n from functools import update_wrapper\n from threading import RLock\n@@ -436,14 +437,16 @@ def get_flashed_messages(\n \n \n def _prepare_send_file_kwargs(\n-    download_name=None,\n-    attachment_filename=None,\n-    etag=None,\n-    add_etags=None,\n-    max_age=None,\n-    cache_timeout=None,\n-    **kwargs,\n-):\n+    download_name: t.Optional[str] = None,\n+    attachment_filename: t.Optional[str] = None,\n+    etag: t.Optional[t.Union[bool, str]] = None,\n+    add_etags: t.Optional[t.Union[bool]] = None,\n+    max_age: t.Optional[\n+        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n+    ] = None,\n+    cache_timeout: t.Optional[int] = None,\n+    **kwargs: t.Any,\n+) -> t.Dict[str, t.Any]:\n     if attachment_filename is not None:\n         warnings.warn(\n             ""The \'attachment_filename\' parameter has been renamed to""\n@@ -482,23 +485,25 @@ def _prepare_send_file_kwargs(\n         max_age=max_age,\n         use_x_sendfile=current_app.use_x_sendfile,\n         response_class=current_app.response_class,\n-        _root_path=current_app.root_path,\n+        _root_path=current_app.root_path,  # type: ignore\n     )\n     return kwargs\n \n \n def send_file(\n-    path_or_file,\n-    mimetype=None,\n-    as_attachment=False,\n-    download_name=None,\n-    attachment_filename=None,\n-    conditional=True,\n-    etag=True,\n-    add_etags=None,\n-    last_modified=None,\n-    max_age=None,\n-    cache_timeout=None,\n+    path_or_file: t.Union[os.PathLike, str, t.BinaryIO],\n+    mimetype: t.Optional[str] = None,\n+    as_attachment: bool = False,\n+    download_name: t.Optional[str] = None,\n+    attachment_filename: t.Optional[str] = None,\n+    conditional: bool = True,\n+    etag: t.Union[bool, str] = True,\n+    add_etags: t.Optional[bool] = None,\n+    last_modified: t.Optional[t.Union[datetime, int, float]] = None,\n+    max_age: t.Optional[\n+        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n+    ] = None,\n+    cache_timeout: t.Optional[int] = None,\n ):\n     """"""Send the contents of a file to the client.\n \n@@ -643,7 +648,10 @@ def safe_join(directory: str, *pathnames: str) -> str:\n \n \n def send_from_directory(\n-    directory: str, path: str, filename: t.Optional[str] = None, **kwargs: t.Any\n+    directory: t.Union[os.PathLike, str],\n+    path: t.Union[os.PathLike, str],\n+    filename: t.Optional[str] = None,\n+    **kwargs: t.Any,\n ) -> ""Response"":\n     """"""Send a file from within a directory using :func:`send_file`.\n \n'",2.8181818181818183,2.8181818181818183
src/flask/scaffold.py,src/flask/scaffold.py,d5aadba4d34f6070377e88429b178ba08eea5349,6414df97562e623221c1ee2072d38e84f87b02d9,'improve type hints for send_file and send_from_directory',"'@@ -288,7 +288,7 @@ class Scaffold:\n \n         self._static_url_path = value\n \n-    def get_send_file_max_age(self, filename: str) -> t.Optional[int]:\n+    def get_send_file_max_age(self, filename: t.Optional[str]) -> t.Optional[int]:\n         """"""Used by :func:`send_file` to determine the ``max_age`` cache\n         value for a given file path if it wasn\'t passed.\n \n'",1.8205128205128205,1.8205128205128205
CHANGES.rst,CHANGES.rst,7c5261407dae61679c268b44c63d73909c3fe652,d8c37f43724cd9fb0870f77877b7c4c7e38a19e0,'blueprint name may not contain a dot',"""@@ -15,6 +15,9 @@ Unreleased\n -   Fix some types that weren't available in Python 3.6.0. :issue:`4040`\n -   Improve typing for ``send_file``, ``send_from_directory``, and\n     ``get_send_file_max_age``. :issue:`4044`, :pr:`4026`\n+-   Show an error when a blueprint name contains a dot. The ``.`` has\n+    special meaning, it is used to separate (nested) blueprint names and\n+    the endpoint name. :issue:`4041`\n \n \n Version 2.0.0\n""",0,0
src/flask/blueprints.py,src/flask/blueprints.py,7c5261407dae61679c268b44c63d73909c3fe652,d8c37f43724cd9fb0870f77877b7c4c7e38a19e0,'blueprint name may not contain a dot',"'@@ -188,6 +188,10 @@ class Blueprint(Scaffold):\n             template_folder=template_folder,\n             root_path=root_path,\n         )\n+\n+        if ""."" in name:\n+            raise ValueError(""\'name\' may not contain a dot \'.\' character."")\n+\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n@@ -360,12 +364,12 @@ class Blueprint(Scaffold):\n         """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n         the :func:`url_for` function is prefixed with the name of the blueprint.\n         """"""\n-        if endpoint:\n-            assert ""."" not in endpoint, ""Blueprint endpoints should not contain dots""\n-        if view_func and hasattr(view_func, ""__name__""):\n-            assert (\n-                ""."" not in view_func.__name__\n-            ), ""Blueprint view function name should not contain dots""\n+        if endpoint and ""."" in endpoint:\n+            raise ValueError(""\'endpoint\' may not contain a dot \'.\' character."")\n+\n+        if view_func and hasattr(view_func, ""__name__"") and ""."" in view_func.__name__:\n+            raise ValueError(""\'view_func\' name may not contain a dot \'.\' character."")\n+\n         self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n \n     def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n'",2.0,2.090909090909091
tests/test_basic.py,tests/test_basic.py,7c5261407dae61679c268b44c63d73909c3fe652,d8c37f43724cd9fb0870f77877b7c4c7e38a19e0,'blueprint name may not contain a dot',"'@@ -1631,7 +1631,7 @@ def test_url_processors(app, client):\n \n \n def test_inject_blueprint_url_defaults(app):\n-    bp = flask.Blueprint(""foo.bar.baz"", __name__, template_folder=""template"")\n+    bp = flask.Blueprint(""foo"", __name__, template_folder=""template"")\n \n     @bp.url_defaults\n     def bp_defaults(endpoint, values):\n@@ -1644,12 +1644,12 @@ def test_inject_blueprint_url_defaults(app):\n     app.register_blueprint(bp)\n \n     values = dict()\n-    app.inject_url_defaults(""foo.bar.baz.view"", values)\n+    app.inject_url_defaults(""foo.view"", values)\n     expected = dict(page=""login"")\n     assert values == expected\n \n     with app.test_request_context(""/somepage""):\n-        url = flask.url_for(""foo.bar.baz.view"")\n+        url = flask.url_for(""foo.view"")\n     expected = ""/login""\n     assert url == expected\n \n'",1.0679245283018868,1.0679245283018868
tests/test_blueprints.py,tests/test_blueprints.py,7c5261407dae61679c268b44c63d73909c3fe652,d8c37f43724cd9fb0870f77877b7c4c7e38a19e0,'blueprint name may not contain a dot',"'@@ -1,5 +1,3 @@\n-import functools\n-\n import pytest\n from jinja2 import TemplateNotFound\n from werkzeug.http import parse_cache_control_header\n@@ -253,28 +251,9 @@ def test_templates_list(test_apps):\n     assert templates == [""admin/index.html"", ""frontend/index.html""]\n \n \n-def test_dotted_names(app, client):\n-    frontend = flask.Blueprint(""myapp.frontend"", __name__)\n-    backend = flask.Blueprint(""myapp.backend"", __name__)\n-\n-    @frontend.route(""/fe"")\n-    def frontend_index():\n-        return flask.url_for(""myapp.backend.backend_index"")\n-\n-    @frontend.route(""/fe2"")\n-    def frontend_page2():\n-        return flask.url_for("".frontend_index"")\n-\n-    @backend.route(""/be"")\n-    def backend_index():\n-        return flask.url_for(""myapp.frontend.frontend_index"")\n-\n-    app.register_blueprint(frontend)\n-    app.register_blueprint(backend)\n-\n-    assert client.get(""/fe"").data.strip() == b""/be""\n-    assert client.get(""/fe2"").data.strip() == b""/fe""\n-    assert client.get(""/be"").data.strip() == b""/fe""\n+def test_dotted_name_not_allowed(app, client):\n+    with pytest.raises(ValueError):\n+        flask.Blueprint(""app.ui"", __name__)\n \n \n def test_dotted_names_from_app(app, client):\n@@ -343,62 +322,19 @@ def test_route_decorator_custom_endpoint(app, client):\n def test_route_decorator_custom_endpoint_with_dots(app, client):\n     bp = flask.Blueprint(""bp"", __name__)\n \n-    @bp.route(""/foo"")\n-    def foo():\n-        return flask.request.endpoint\n-\n-    try:\n-\n-        @bp.route(""/bar"", endpoint=""bar.bar"")\n-        def foo_bar():\n-            return flask.request.endpoint\n-\n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(""expected AssertionError not raised"")\n-\n-    try:\n-\n-        @bp.route(""/bar/123"", endpoint=""bar.123"")\n-        def foo_bar_foo():\n-            return flask.request.endpoint\n-\n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(""expected AssertionError not raised"")\n-\n-    def foo_foo_foo():\n-        pass\n-\n-    pytest.raises(\n-        AssertionError,\n-        lambda: bp.add_url_rule(""/bar/123"", endpoint=""bar.123"", view_func=foo_foo_foo),\n-    )\n-\n-    pytest.raises(\n-        AssertionError, bp.route(""/bar/123"", endpoint=""bar.123""), lambda: None\n-    )\n-\n-    foo_foo_foo.__name__ = ""bar.123""\n+    with pytest.raises(ValueError):\n+        bp.route(""/"", endpoint=""a.b"")(lambda: """")\n \n-    pytest.raises(\n-        AssertionError, lambda: bp.add_url_rule(""/bar/123"", view_func=foo_foo_foo)\n-    )\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(""/"", endpoint=""a.b"")\n \n-    bp.add_url_rule(\n-        ""/bar/456"", endpoint=""foofoofoo"", view_func=functools.partial(foo_foo_foo)\n-    )\n+    def view():\n+        return """"\n \n-    app.register_blueprint(bp, url_prefix=""/py"")\n+    view.__name__ = ""a.b""\n \n-    assert client.get(""/py/foo"").data == b""bp.foo""\n-    # The rule\'s didn\'t actually made it through\n-    rv = client.get(""/py/bar"")\n-    assert rv.status_code == 404\n-    rv = client.get(""/py/bar/123"")\n-    assert rv.status_code == 404\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(""/"", view_func=view)\n \n \n def test_endpoint_decorator(app, client):\n'",1.0461538461538462,1.032258064516129
CHANGES.rst,CHANGES.rst,e93704fbfd5f40e48f8fe9034b6b0fe420d28fb3,08e459e823235eecd86c635653f4bd6d6003c2b3,'fix url_prefix argument when nesting blueprints',"'@@ -18,6 +18,8 @@ Unreleased\n -   Show an error when a blueprint name contains a dot. The ``.`` has\n     special meaning, it is used to separate (nested) blueprint names and\n     the endpoint name. :issue:`4041`\n+-   Combine URL prefixes when nesting blueprints that were created with\n+    a ``url_prefix`` value. :issue:`4037`\n \n \n Version 2.0.0\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,e93704fbfd5f40e48f8fe9034b6b0fe420d28fb3,08e459e823235eecd86c635653f4bd6d6003c2b3,'fix url_prefix argument when nesting blueprints',"'@@ -260,7 +260,7 @@ class Blueprint(Scaffold):\n         """"""Called by :meth:`Flask.register_blueprint` to register all\n         views and callbacks registered on the blueprint with the\n         application. Creates a :class:`.BlueprintSetupState` and calls\n-        each :meth:`record` callbackwith it.\n+        each :meth:`record` callback with it.\n \n         :param app: The application this blueprint is being registered\n             with.\n@@ -344,13 +344,17 @@ class Blueprint(Scaffold):\n                 app.cli.add_command(self.cli)\n \n         for blueprint, bp_options in self._blueprints:\n-            url_prefix = options.get(""url_prefix"", """")\n-            if ""url_prefix"" in bp_options:\n-                url_prefix = (\n-                    url_prefix.rstrip(""/"") + ""/"" + bp_options[""url_prefix""].lstrip(""/"")\n+            bp_options = bp_options.copy()\n+            bp_url_prefix = bp_options.get(""url_prefix"")\n+\n+            if bp_url_prefix is None:\n+                bp_url_prefix = blueprint.url_prefix\n+\n+            if state.url_prefix is not None and bp_url_prefix is not None:\n+                bp_options[""url_prefix""] = (\n+                    state.url_prefix.rstrip(""/"") + ""/"" + bp_url_prefix.lstrip(""/"")\n                 )\n \n-            bp_options[""url_prefix""] = url_prefix\n             bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n             blueprint.register(app, bp_options)\n \n'",2.090909090909091,2.1515151515151514
tests/test_blueprints.py,tests/test_blueprints.py,e93704fbfd5f40e48f8fe9034b6b0fe420d28fb3,08e459e823235eecd86c635653f4bd6d6003c2b3,'fix url_prefix argument when nesting blueprints',"'@@ -835,3 +835,36 @@ def test_nested_blueprint(app, client):\n     assert client.get(""/parent/no"").data == b""Parent no""\n     assert client.get(""/parent/child/no"").data == b""Parent no""\n     assert client.get(""/parent/child/grandchild/no"").data == b""Grandchild no""\n+\n+\n+def test_nested_blueprint_url_prefix(app, client):\n+    parent = flask.Blueprint(""parent"", __name__, url_prefix=""/parent"")\n+    child = flask.Blueprint(""child"", __name__, url_prefix=""/child"")\n+    grandchild = flask.Blueprint(""grandchild"", __name__, url_prefix=""/grandchild"")\n+    apple = flask.Blueprint(""apple"", __name__, url_prefix=""/apple"")\n+\n+    @parent.route(""/"")\n+    def parent_index():\n+        return ""Parent""\n+\n+    @child.route(""/"")\n+    def child_index():\n+        return ""Child""\n+\n+    @grandchild.route(""/"")\n+    def grandchild_index():\n+        return ""Grandchild""\n+\n+    @apple.route(""/"")\n+    def apple_index():\n+        return ""Apple""\n+\n+    child.register_blueprint(grandchild)\n+    child.register_blueprint(apple, url_prefix=""/orange"")  # test overwrite\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent)\n+\n+    assert client.get(""/parent/"").data == b""Parent""\n+    assert client.get(""/parent/child/"").data == b""Child""\n+    assert client.get(""/parent/child/grandchild/"").data == b""Grandchild""\n+    assert client.get(""/parent/child/orange/"").data == b""Apple""\n'",1.032258064516129,1.0310077519379846
CHANGES.rst,CHANGES.rst,6d8b4ce9d037937ef8694067ab5754666240d097,1672c5f565c9bba0269e2c5ef3f2cc7038551641,'set maximum versions of pallets dependencies',"'@@ -2,13 +2,15 @@\n \n \n \n-Version 1.1.x\n+Version 1.1.3\n -------------\n \n-Not yet released.\n+Unreleased\n \n--   Officially support passing a :class:`pathlib.Path` for\n-    ``static_folder`` which stopped working in 1.1.2. :pr:`3579`\n+-   Set maximum versions of Werkzeug, Jinja, Click, and ItsDangerous.\n+    :issue:`4043`\n+-   Re-add support for passing a ``pathlib.Path`` for ``static_folder``.\n+    :pr:`3579`\n \n \n Version 1.1.2\n'",0,0
setup.py,setup.py,6d8b4ce9d037937ef8694067ab5754666240d097,1672c5f565c9bba0269e2c5ef3f2cc7038551641,'set maximum versions of pallets dependencies',"'@@ -53,10 +53,10 @@ setup(\n     include_package_data=True,\n     python_requires="">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"",\n     install_requires=[\n-        ""Werkzeug>=0.15"",\n-        ""Jinja2>=2.10.1"",\n-        ""itsdangerous>=0.24"",\n-        ""click>=5.1"",\n+        ""Werkzeug >= 0.15, < 2.0"",\n+        ""Jinja2 >= 2.10.1, < 3.0"",\n+        ""itsdangerous >= 0.24, < 2.0"",\n+        ""click >= 5.1, < 8.0"",\n     ],\n     extras_require={\n         ""dotenv"": [""python-dotenv""],\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,6d8b4ce9d037937ef8694067ab5754666240d097,1672c5f565c9bba0269e2c5ef3f2cc7038551641,'set maximum versions of pallets dependencies',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.2""\n+__version__ = ""1.1.3.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,661bbcdb90ee82baded66ae0733cb87ea5f464ef,ae647b5750192c7590f176ab4d7e16b44bb50ea6,'release version 1.1.3',"'@@ -5,7 +5,7 @@\n Version 1.1.3\n -------------\n \n-Unreleased\n+Released 2021-05-13\n \n -   Set maximum versions of Werkzeug, Jinja, Click, and ItsDangerous.\n     :issue:`4043`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,661bbcdb90ee82baded66ae0733cb87ea5f464ef,ae647b5750192c7590f176ab4d7e16b44bb50ea6,'release version 1.1.3',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.3.dev0""\n+__version__ = ""1.1.3""\n'",0,0
CHANGES.rst,CHANGES.rst,3ace642ef32eae3fa096bef85a87545eba3f53fc,c04b0de558fe8e1ccb8edb4525d40e725ae9a24d,'Use compat fspath instead of os.fspath\nWhen 7ba35c4 was cherry-picked it introduced the\nusage of os.fspath which is not supported on\nPython <3.6',"'@@ -1,5 +1,12 @@\n .. currentmodule:: flask\n \n+Version 1.1.4\n+-------------\n+\n+Unreleased\n+\n+-   Update ``static_folder`` to use ``_compat.fspath`` instead of\n+    ``os.fspath`` to continue supporting Python <3.6 :issue:`4050`\n \n \n Version 1.1.3\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,3ace642ef32eae3fa096bef85a87545eba3f53fc,c04b0de558fe8e1ccb8edb4525d40e725ae9a24d,'Use compat fspath instead of os.fspath\nWhen 7ba35c4 was cherry-picked it introduced the\nusage of os.fspath which is not supported on\nPython <3.6',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.3""\n+__version__ = ""1.1.4.dev0""\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,3ace642ef32eae3fa096bef85a87545eba3f53fc,c04b0de558fe8e1ccb8edb4525d40e725ae9a24d,'Use compat fspath instead of os.fspath\nWhen 7ba35c4 was cherry-picked it introduced the\nusage of os.fspath which is not supported on\nPython <3.6',"'@@ -1001,7 +1001,7 @@ class _PackageBoundObject(object):\n     @static_folder.setter\n     def static_folder(self, value):\n         if value is not None:\n-            value = os.fspath(value).rstrip(r""\\/"")\n+            value = fspath(value).rstrip(r""\\/"")\n         self._static_folder = value\n \n     @property\n'",4.242424242424242,4.242424242424242
tests/test_basic.py,tests/test_basic.py,3ace642ef32eae3fa096bef85a87545eba3f53fc,c04b0de558fe8e1ccb8edb4525d40e725ae9a24d,'Use compat fspath instead of os.fspath\nWhen 7ba35c4 was cherry-picked it introduced the\nusage of os.fspath which is not supported on\nPython <3.6',"'@@ -1425,7 +1425,6 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 6), reason=""requires Python >= 3.6"")\n def test_static_folder_with_pathlib_path(app):\n     from pathlib import Path\n \n'",1.073076923076923,1.073076923076923
CHANGES.rst,CHANGES.rst,64a5d7a018aadcb5d7d868a782a04d1b599ef89b,5f8d3ea2fcb4a17373653d900b060259fefb11bb,'release version 1.1.4',"'@@ -3,10 +3,10 @@\n Version 1.1.4\n -------------\n \n-Unreleased\n+Released 2021-05-13\n \n -   Update ``static_folder`` to use ``_compat.fspath`` instead of\n-    ``os.fspath`` to continue supporting Python <3.6 :issue:`4050`\n+    ``os.fspath`` to continue supporting Python < 3.6 :issue:`4050`\n \n \n Version 1.1.3\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,64a5d7a018aadcb5d7d868a782a04d1b599ef89b,5f8d3ea2fcb4a17373653d900b060259fefb11bb,'release version 1.1.4',"'@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = ""1.1.4.dev0""\n+__version__ = ""1.1.4""\n'",0,0
CHANGES.rst,CHANGES.rst,a7b02b3a07ae292ce376df2459eae3ffb4c06d52,864875099762fd0209bacbb26985ce2bcd7f2ec0,'converters have access to session',"'@@ -20,6 +20,9 @@ Unreleased\n     the endpoint name. :issue:`4041`\n -   Combine URL prefixes when nesting blueprints that were created with\n     a ``url_prefix`` value. :issue:`4037`\n+-   Roll back a change to the order that URL matching was done. The\n+    URL is again matched after the session is loaded, so the session is\n+    available in custom URL converters. :issue:`4053`\n \n \n Version 2.0.0\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,a7b02b3a07ae292ce376df2459eae3ffb4c06d52,864875099762fd0209bacbb26985ce2bcd7f2ec0,'converters have access to session',"'@@ -395,9 +395,6 @@ class RequestContext:\n \n         _request_ctx_stack.push(self)\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n@@ -409,6 +406,11 @@ class RequestContext:\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n+        # Match the request URL after loading the session, so that the\n+        # session is available in custom URL converters.\n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n     def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         """"""Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n'",1.9,1.9
tests/test_converters.py,tests/test_converters.py,a7b02b3a07ae292ce376df2459eae3ffb4c06d52,864875099762fd0209bacbb26985ce2bcd7f2ec0,'converters have access to session',"'@@ -1,6 +1,7 @@\n from werkzeug.routing import BaseConverter\n \n-from flask import has_request_context\n+from flask import request\n+from flask import session\n from flask import url_for\n \n \n@@ -28,12 +29,13 @@ def test_custom_converters(app, client):\n def test_context_available(app, client):\n     class ContextConverter(BaseConverter):\n         def to_python(self, value):\n-            assert has_request_context()\n+            assert request is not None\n+            assert session is not None\n             return value\n \n     app.url_map.converters[""ctx""] = ContextConverter\n \n-    @app.route(""/<ctx:name>"")\n+    @app.get(""/<ctx:name>"")\n     def index(name):\n         return name\n \n'",1.1428571428571428,1.1428571428571428
tests/test_session_interface.py,tests/test_session_interface.py,a7b02b3a07ae292ce376df2459eae3ffb4c06d52,864875099762fd0209bacbb26985ce2bcd7f2ec0,'converters have access to session',"'@@ -2,21 +2,26 @@ import flask\n from flask.sessions import SessionInterface\n \n \n-def test_open_session_endpoint_not_none():\n-    # Define a session interface that breaks if request.endpoint is None\n+def test_open_session_with_endpoint():\n+    """"""If request.endpoint (or other URL matching behavior) is needed\n+    while loading the session, RequestContext.match_request() can be\n+    called manually.\n+    """"""\n+\n     class MySessionInterface(SessionInterface):\n-        def save_session(self):\n+        def save_session(self, app, session, response):\n             pass\n \n-        def open_session(self, _, request):\n+        def open_session(self, app, request):\n+            flask._request_ctx_stack.top.match_request()\n             assert request.endpoint is not None\n \n-    def index():\n-        return ""Hello World!""\n-\n-    # Confirm a 200 response, indicating that request.endpoint was NOT None\n     app = flask.Flask(__name__)\n-    app.route(""/"")(index)\n     app.session_interface = MySessionInterface()\n-    response = app.test_client().open(""/"")\n+\n+    @app.get(""/"")\n+    def index():\n+        return ""Hello, World!""\n+\n+    response = app.test_client().get(""/"")\n     assert response.status_code == 200\n'",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,9c186ccfe8fa4156123e9252a6e8a9cc68bfecab,6e0fb117171ff3e57cf536952991f9ce01d130a5,'Use escape function in return statement for username and subpath.',"""@@ -246,7 +246,7 @@ of the argument like ``<converter:variable_name>``. ::\n     @app.route('/user/<username>')\n     def show_user_profile(username):\n         # show the user profile for that user\n-        return f'User {username}'\n+        return f'User {escape(username)}'\n \n     @app.route('/post/<int:post_id>')\n     def show_post(post_id):\n@@ -256,7 +256,7 @@ of the argument like ``<converter:variable_name>``. ::\n     @app.route('/path/<path:subpath>')\n     def show_subpath(subpath):\n         # show the subpath after /path/\n-        return f'Subpath {subpath}'\n+        return f'Subpath {escape(subpath)}'\n \n Converter types:\n \n""",1.3333333333333333,1.3333333333333333
src/flask/blueprints.py,src/flask/blueprints.py,6fbdeb80c76b8a698ab366d21ccd786731b17361,f64fff64762c96b4ec1752f9a4e261fdc2ba4e33,'Fix nested blueprint url_prefix\n\nThis fixes the case where the blueprint is registered with a\nurl_prefix but any child blueprints have no prefixes.',"'@@ -354,6 +354,8 @@ class Blueprint(Scaffold):\n                 bp_options[""url_prefix""] = (\n                     state.url_prefix.rstrip(""/"") + ""/"" + bp_url_prefix.lstrip(""/"")\n                 )\n+            else:\n+                bp_options[""url_prefix""] = state.url_prefix\n \n             bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n             blueprint.register(app, bp_options)\n'",2.1515151515151514,2.1515151515151514
tests/test_blueprints.py,tests/test_blueprints.py,6fbdeb80c76b8a698ab366d21ccd786731b17361,f64fff64762c96b4ec1752f9a4e261fdc2ba4e33,'Fix nested blueprint url_prefix\n\nThis fixes the case where the blueprint is registered with a\nurl_prefix but any child blueprints have no prefixes.',"'@@ -868,3 +868,17 @@ def test_nested_blueprint_url_prefix(app, client):\n     assert client.get(""/parent/child/"").data == b""Child""\n     assert client.get(""/parent/child/grandchild/"").data == b""Grandchild""\n     assert client.get(""/parent/child/orange/"").data == b""Apple""\n+\n+\n+def test_nested_blueprint_url_prefix_only_parent_prefix(app, client):\n+    parent = flask.Blueprint(""parent"", __name__)\n+    child = flask.Blueprint(""child"", __name__)\n+\n+    @child.route(""/child-endpoint"")\n+    def child_index():\n+        return ""Child""\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, url_prefix=""/parent"")\n+\n+    assert client.get(""/parent/child-endpoint"").data == b""Child""\n'",1.0310077519379846,1.0305343511450382
tests/test_cli.py,tests/test_cli.py,1b5f21e015e2c4f36fcdb34a09ce93787d59e181,1c3052377b18055cbfbbbdd297dd19a5c43c55a6,'Add pathlib in cli tests',"'@@ -5,6 +5,7 @@ import ssl\n import sys\n import types\n from functools import partial\n+from pathlib import Path\n from unittest.mock import patch\n \n import click\n@@ -29,8 +30,8 @@ from flask.cli import run_command\n from flask.cli import ScriptInfo\n from flask.cli import with_appcontext\n \n-cwd = os.getcwd()\n-test_path = os.path.abspath(os.path.join(os.path.dirname(__file__), ""test_apps""))\n+cwd = Path.cwd()\n+test_path = (Path(__file__) / "".."" / ""test_apps"").resolve()\n \n \n @pytest.fixture\n@@ -152,29 +153,25 @@ def test_find_best_app(test_apps):\n     (\n         (""test"", cwd, ""test""),\n         (""test.py"", cwd, ""test""),\n-        (""a/test"", os.path.join(cwd, ""a""), ""test""),\n+        (""a/test"", cwd / ""a"", ""test""),\n         (""test/__init__.py"", cwd, ""test""),\n         (""test/__init__"", cwd, ""test""),\n         # nested package\n         (\n-            os.path.join(test_path, ""cliapp"", ""inner1"", ""__init__""),\n+            test_path / ""cliapp"" / ""inner1"" / ""__init__"",\n             test_path,\n             ""cliapp.inner1"",\n         ),\n         (\n-            os.path.join(test_path, ""cliapp"", ""inner1"", ""inner2""),\n+            test_path / ""cliapp"" / ""inner1"" / ""inner2"",\n             test_path,\n             ""cliapp.inner1.inner2"",\n         ),\n         # dotted name\n         (""test.a.b"", cwd, ""test.a.b""),\n-        (os.path.join(test_path, ""cliapp.app""), test_path, ""cliapp.app""),\n+        (test_path / ""cliapp.app"", test_path, ""cliapp.app""),\n         # not a Python file, will be caught during import\n-        (\n-            os.path.join(test_path, ""cliapp"", ""message.txt""),\n-            test_path,\n-            ""cliapp.message.txt"",\n-        ),\n+        (test_path / ""cliapp"" / ""message.txt"", test_path, ""cliapp.message.txt""),\n     ),\n )\n def test_prepare_import(request, value, path, result):\n@@ -193,7 +190,7 @@ def test_prepare_import(request, value, path, result):\n     request.addfinalizer(reset_path)\n \n     assert prepare_import(value) == result\n-    assert sys.path[0] == path\n+    assert sys.path[0] == str(path)\n \n \n @pytest.mark.parametrize(\n@@ -278,9 +275,8 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert obj.load_app() is app\n \n     # import app with module\'s absolute path\n-    cli_app_path = os.path.abspath(\n-        os.path.join(os.path.dirname(__file__), ""test_apps"", ""cliapp"", ""app.py"")\n-    )\n+    cli_app_path = str(test_path / ""cliapp"" / ""app.py"")\n+\n     obj = ScriptInfo(app_import_path=cli_app_path)\n     app = obj.load_app()\n     assert app.name == ""testapp""\n@@ -302,19 +298,13 @@ def test_scriptinfo(test_apps, monkeypatch):\n     pytest.raises(NoAppException, obj.load_app)\n \n     # import app from wsgi.py in current directory\n-    monkeypatch.chdir(\n-        os.path.abspath(\n-            os.path.join(os.path.dirname(__file__), ""test_apps"", ""helloworld"")\n-        )\n-    )\n+    monkeypatch.chdir(test_path / ""helloworld"")\n     obj = ScriptInfo()\n     app = obj.load_app()\n     assert app.name == ""hello""\n \n     # import app from app.py in current directory\n-    monkeypatch.chdir(\n-        os.path.abspath(os.path.join(os.path.dirname(__file__), ""test_apps"", ""cliapp""))\n-    )\n+    monkeypatch.chdir(test_path / ""cliapp"")\n     obj = ScriptInfo()\n     app = obj.load_app()\n     assert app.name == ""testapp""\n@@ -513,7 +503,7 @@ def test_load_dotenv(monkeypatch):\n     monkeypatch.setenv(""EGGS"", ""3"")\n     monkeypatch.chdir(test_path)\n     assert load_dotenv()\n-    assert os.getcwd() == test_path\n+    assert Path.cwd() == test_path\n     # .flaskenv doesn\'t overwrite .env\n     assert os.environ[""FOO""] == ""env""\n     # set only in .flaskenv\n@@ -533,9 +523,8 @@ def test_dotenv_path(monkeypatch):\n     for item in (""FOO"", ""BAR"", ""EGGS""):\n         monkeypatch._setitem.append((os.environ, item, notset))\n \n-    cwd = os.getcwd()\n-    load_dotenv(os.path.join(test_path, "".flaskenv""))\n-    assert os.getcwd() == cwd\n+    load_dotenv(test_path / "".flaskenv"")\n+    assert Path.cwd() == cwd\n     assert ""FOO"" in os.environ\n \n \n'",1.0615384615384615,1.0615384615384615
src/flask/typing.py,src/flask/typing.py,afc907fd0d4a4e96398829d75ded9711a3046070,19b905eeef7e47841318ec9e455c9369770f22e2,'use _typeshed.wsgi instead of wsgiref.types',"'@@ -2,8 +2,8 @@ import typing as t\n \n \n if t.TYPE_CHECKING:\n+    from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n-    from wsgiref.types import WSGIApplication  # noqa: F401\n     from .wrappers import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n'",0,0
CHANGES.rst,CHANGES.rst,10425fb9b13d977128f18c1051fb93edc9aee2de,b5518e23f5b85ba6e069a8151ed42209947f3849,'re-add deprecated Config.from_json method',"'@@ -23,6 +23,8 @@ Unreleased\n -   Roll back a change to the order that URL matching was done. The\n     URL is again matched after the session is loaded, so the session is\n     available in custom URL converters. :issue:`4053`\n+-   Re-add deprecated ``Config.from_json``, which was accidentally\n+    removed early. :issue:`4078`\n \n \n Version 2.0.0\n'",0,0
src/flask/config.py,src/flask/config.py,10425fb9b13d977128f18c1051fb93edc9aee2de,b5518e23f5b85ba6e069a8151ed42209947f3849,'re-add deprecated Config.from_json method',"'@@ -202,6 +202,31 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n+    def from_json(self, filename: str, silent: bool = False) -> bool:\n+        """"""Update the values in the config from a JSON file. The loaded\n+        data is passed to the :meth:`from_mapping` method.\n+\n+        :param filename: The path to the JSON file. This can be an\n+            absolute path or relative to the config root path.\n+        :param silent: Ignore the file if it doesn\'t exist.\n+\n+        .. deprecated:: 2.0.0\n+            Will be removed in Flask 2.1. Use :meth:`from_file` instead.\n+            This was removed early in 2.0.0, was added back in 2.0.1.\n+\n+        .. versionadded:: 0.11\n+        """"""\n+        import warnings\n+        from . import json\n+\n+        warnings.warn(\n+            ""\'from_json\' is deprecated and will be removed in Flask""\n+            "" 2.1. Use \'from_file(path, json.load)\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self.from_file(filename, json.load, silent=silent)\n+\n     def from_mapping(\n         self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n     ) -> bool:\n'",2.909090909090909,2.75
docs/conf.py,docs/conf.py,cfda27089932a102953da73fdab17cf9814334e4,69e6d59ac8dd5ba6a5242acafa5b50c7b56c84d1,'update pallets-sphinx-themes',"'@@ -49,10 +49,10 @@ html_context = {\n     ]\n }\n html_sidebars = {\n-    ""index"": [""project.html"", ""localtoc.html"", ""searchbox.html""],\n-    ""**"": [""localtoc.html"", ""relations.html"", ""searchbox.html""],\n+    ""index"": [""project.html"", ""localtoc.html"", ""searchbox.html"", ""ethicalads.html""],\n+    ""**"": [""localtoc.html"", ""relations.html"", ""searchbox.html"", ""ethicalads.html""],\n }\n-singlehtml_sidebars = {""index"": [""project.html"", ""localtoc.html""]}\n+singlehtml_sidebars = {""index"": [""project.html"", ""localtoc.html"", ""ethicalads.html""]}\n html_static_path = [""_static""]\n html_favicon = ""_static/flask-icon.png""\n html_logo = ""_static/flask-icon.png""\n'",3.0,3.0
requirements/dev.txt,requirements/dev.txt,cfda27089932a102953da73fdab17cf9814334e4,69e6d59ac8dd5ba6a5242acafa5b50c7b56c84d1,'update pallets-sphinx-themes',"'@@ -60,7 +60,7 @@ packaging==20.9\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.0.0\n+pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n pep517==0.10.0\n     # via pip-tools\n'",0,0
requirements/docs.txt,requirements/docs.txt,cfda27089932a102953da73fdab17cf9814334e4,69e6d59ac8dd5ba6a5242acafa5b50c7b56c84d1,'update pallets-sphinx-themes',"'@@ -28,7 +28,7 @@ packaging==20.9\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.0.0\n+pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n pygments==2.9.0\n     # via\n'",0,0
requirements/dev.txt,requirements/dev.txt,9889ca8bcabbb1b1290ca4403b0242e01bae4c47,cfda27089932a102953da73fdab17cf9814334e4,'update pallets and sphinx requirements',"'@@ -18,11 +18,11 @@ blinker==1.4\n     # via -r requirements/tests.in\n certifi==2020.12.5\n     # via requests\n-cfgv==3.2.0\n+cfgv==3.3.0\n     # via pre-commit\n chardet==4.0.0\n     # via requests\n-click==8.0.0\n+click==8.0.1\n     # via pip-tools\n distlib==0.3.1\n     # via virtualenv\n@@ -44,9 +44,9 @@ imagesize==1.2.0\n     # via sphinx\n iniconfig==1.1.1\n     # via pytest\n-jinja2==3.0.0\n+jinja2==3.0.1\n     # via sphinx\n-markupsafe==2.0.0\n+markupsafe==2.0.1\n     # via jinja2\n mypy-extensions==0.4.3\n     # via mypy\n@@ -102,7 +102,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3\n+sphinx==4.0.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.in,requirements/docs.in,9889ca8bcabbb1b1290ca4403b0242e01bae4c47,cfda27089932a102953da73fdab17cf9814334e4,'update pallets and sphinx requirements',"'@@ -1,5 +1,5 @@\n Pallets-Sphinx-Themes\n-git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3  # https://github.com/sphinx-doc/sphinx/issues/921\n+Sphinx\n sphinx-issues\n sphinxcontrib-log-cabinet\n sphinx-tabs\n'",0,0
requirements/docs.txt,requirements/docs.txt,9889ca8bcabbb1b1290ca4403b0242e01bae4c47,cfda27089932a102953da73fdab17cf9814334e4,'update pallets and sphinx requirements',"'@@ -20,9 +20,9 @@ idna==2.10\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n-jinja2==3.0.0\n+jinja2==3.0.1\n     # via sphinx\n-markupsafe==2.0.0\n+markupsafe==2.0.1\n     # via jinja2\n packaging==20.9\n     # via\n@@ -46,7 +46,7 @@ sphinx-issues==1.2.0\n     # via -r requirements/docs.in\n sphinx-tabs==3.0.0\n     # via -r requirements/docs.in\n-git+https://github.com/sphinx-doc/sphinx.git@96dbe5e3\n+sphinx==4.0.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,0d594b8c0f13c70507aa61a7666c844c5e2aeda0,0cfce9a0ec62795091af6f548cf3ca45f0dac448,'Add update pip and setuptools section (#4061)\n\n* Add update pip and setuptools section\r\n\r\n* Simplify the command to upgrade pip\r\n\r\nCo-authored-by: Grey Li <withlihui@gmail.com>',"'@@ -112,6 +112,12 @@ First time setup\n              > py -3 -m venv env\n              > env\\Scripts\\activate\n \n+-   Upgrade pip and setuptools.\n+\n+    .. code-block:: text\n+\n+        $ python -m pip install --upgrade pip setuptools\n+\n -   Install the development dependencies, then install Flask in editable\n     mode.\n \n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,bf982718cf30615f2dd17fa71fe17d565ebb1d3e,0d594b8c0f13c70507aa61a7666c844c5e2aeda0,"'Make add_url_rule() signature consistent\n\nThis caused a mypy error when I was making another typing improvement,\nso I am fixing it before committing my other changes.'","'@@ -365,6 +365,7 @@ class Blueprint(Scaffold):\n         rule: str,\n         endpoint: t.Optional[str] = None,\n         view_func: t.Optional[t.Callable] = None,\n+        provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n         """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n@@ -376,7 +377,15 @@ class Blueprint(Scaffold):\n         if view_func and hasattr(view_func, ""__name__"") and ""."" in view_func.__name__:\n             raise ValueError(""\'view_func\' name may not contain a dot \'.\' character."")\n \n-        self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n+        self.record(\n+            lambda s: s.add_url_rule(\n+                rule,\n+                endpoint,\n+                view_func,\n+                provide_automatic_options=provide_automatic_options,\n+                **options,\n+            )\n+        )\n \n     def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n         """"""Register a custom template filter, available application wide.  Like\n'",2.1515151515151514,2.1515151515151514
src/flask/scaffold.py,src/flask/scaffold.py,bf982718cf30615f2dd17fa71fe17d565ebb1d3e,0d594b8c0f13c70507aa61a7666c844c5e2aeda0,"'Make add_url_rule() signature consistent\n\nThis caused a mypy error when I was making another typing improvement,\nso I am fixing it before committing my other changes.'","'@@ -443,7 +443,7 @@ class Scaffold:\n         view_func: t.Optional[t.Callable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n-    ) -> t.Callable:\n+    ) -> None:\n         """"""Register a rule for routing incoming requests and building\n         URLs. The :meth:`route` decorator is a shortcut to call this\n         with the ``view_func`` argument. These are equivalent:\n'",1.8205128205128205,1.8205128205128205
src/flask/scaffold.py,src/flask/scaffold.py,8796b2a784bc45fcc6865cd80b2cba0601448727,bf982718cf30615f2dd17fa71fe17d565ebb1d3e,'Use TypeVar for setupmethod()\n\nTypeVar is needed to preserve function signatures. The type cast for\nupdate_wrapper is needed because wapper_func can not use the full\nsignature that f does.',"'@@ -33,8 +33,10 @@ if t.TYPE_CHECKING:\n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n \n+F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n \n-def setupmethod(f: t.Callable) -> t.Callable:\n+\n+def setupmethod(f: F) -> F:\n     """"""Wraps a method so that it performs a check in debug mode if the\n     first request was already handled.\n     """"""\n@@ -53,7 +55,7 @@ def setupmethod(f: t.Callable) -> t.Callable:\n             )\n         return f(self, *args, **kwargs)\n \n-    return update_wrapper(wrapper_func, f)\n+    return t.cast(F, update_wrapper(wrapper_func, f))\n \n \n class Scaffold:\n'",1.8205128205128205,1.8205128205128205
src/flask/app.py,src/flask/app.py,10a36cb60e10594aa5dbf3c5aba6abbd5f6fcd70,8796b2a784bc45fcc6865cd80b2cba0601448727,'Improve decorator factory type signatures\n\nThese changes are required to preserve the type signatures of the\ncreated decorators.',"'@@ -1089,7 +1089,9 @@ class Flask(Scaffold):\n             self.view_functions[endpoint] = view_func\n \n     @setupmethod\n-    def template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_filter(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n         """"""A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n         name will be used. Example::\n@@ -1121,7 +1123,9 @@ class Flask(Scaffold):\n         self.jinja_env.filters[name or f.__name__] = f\n \n     @setupmethod\n-    def template_test(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_test(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n         """"""A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n         name will be used. Example::\n@@ -1162,7 +1166,9 @@ class Flask(Scaffold):\n         self.jinja_env.tests[name or f.__name__] = f\n \n     @setupmethod\n-    def template_global(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_global(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n         """"""A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n         name will be used. Example::\n'",3.0,3.0
src/flask/blueprints.py,src/flask/blueprints.py,10a36cb60e10594aa5dbf3c5aba6abbd5f6fcd70,8796b2a784bc45fcc6865cd80b2cba0601448727,'Improve decorator factory type signatures\n\nThese changes are required to preserve the type signatures of the\ncreated decorators.',"'@@ -387,7 +387,9 @@ class Blueprint(Scaffold):\n             )\n         )\n \n-    def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_filter(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n \n@@ -417,7 +419,9 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n-    def app_template_test(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_test(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.template_test` but for a blueprint.\n \n@@ -451,7 +455,9 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n-    def app_template_global(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_global(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.template_global` but for a blueprint.\n \n'",2.1515151515151514,2.1515151515151514
src/flask/scaffold.py,src/flask/scaffold.py,10a36cb60e10594aa5dbf3c5aba6abbd5f6fcd70,8796b2a784bc45fcc6865cd80b2cba0601448727,'Improve decorator factory type signatures\n\nThese changes are required to preserve the type signatures of the\ncreated decorators.',"'@@ -644,7 +644,7 @@ class Scaffold:\n     @setupmethod\n     def errorhandler(\n         self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable:\n+    ) -> t.Callable[[ErrorHandlerCallable], ErrorHandlerCallable]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n'",1.8205128205128205,1.8205128205128205
CHANGES.rst,CHANGES.rst,a82cc31af847de7250cd489f6080802ce3f5236e,10a36cb60e10594aa5dbf3c5aba6abbd5f6fcd70,'Update CHANGES.rst',"'@@ -25,6 +25,8 @@ Unreleased\n     available in custom URL converters. :issue:`4053`\n -   Re-add deprecated ``Config.from_json``, which was accidentally\n     removed early. :issue:`4078`\n+-   Improve typing for some functions using ``Callable`` in their type\n+    signatures, focusing on decorator factories. :issue:`4060`\n \n \n Version 2.0.0\n'",0,0
.gitignore,.gitignore,36872e7bd45162dc78e789f45e026932a4687434,a82cc31af847de7250cd489f6080802ce3f5236e,'Add venv and .venv to .gitignore',"'@@ -4,6 +4,8 @@\n *.pyc\n *.pyo\n env/\n+venv/\n+.venv/\n env*\n dist/\n build/\n'",0,0
docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,a541c2ac8b05c2b23e11bd8540088fce1abc2373,a82cc31af847de7250cd489f6080802ce3f5236e,'Fix view decorators docs',"'@@ -142,7 +142,7 @@ Here is the code for that decorator::\n             def decorated_function(*args, **kwargs):\n                 template_name = template\n                 if template_name is None:\n-                    template_name = f""\'{request.endpoint.replace(\'.\', \'/\')}.html\'""\n+                    template_name = f""{request.endpoint.replace(\'.\', \'/\')}.html""\n                 ctx = f(*args, **kwargs)\n                 if ctx is None:\n                     ctx = {}\n'",1.3846153846153846,1.3846153846153846
src/flask/blueprints.py,src/flask/blueprints.py,99afbb277d25d3b052e00b9a8da216054d51d62a,a541c2ac8b05c2b23e11bd8540088fce1abc2373,"'Fix blueprint nested url_prefix\n\nThis ensures that the url_prefix is correctly applied, no matter if\nset during the registration override or when constructing the\nblueprint.'","'@@ -354,7 +354,9 @@ class Blueprint(Scaffold):\n                 bp_options[""url_prefix""] = (\n                     state.url_prefix.rstrip(""/"") + ""/"" + bp_url_prefix.lstrip(""/"")\n                 )\n-            else:\n+            elif bp_url_prefix is not None:\n+                bp_options[""url_prefix""] = bp_url_prefix\n+            elif state.url_prefix is not None:\n                 bp_options[""url_prefix""] = state.url_prefix\n \n             bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n'",2.1515151515151514,2.212121212121212
tests/test_blueprints.py,tests/test_blueprints.py,99afbb277d25d3b052e00b9a8da216054d51d62a,a541c2ac8b05c2b23e11bd8540088fce1abc2373,"'Fix blueprint nested url_prefix\n\nThis ensures that the url_prefix is correctly applied, no matter if\nset during the registration override or when constructing the\nblueprint.'","'@@ -837,48 +837,32 @@ def test_nested_blueprint(app, client):\n     assert client.get(""/parent/child/grandchild/no"").data == b""Grandchild no""\n \n \n-def test_nested_blueprint_url_prefix(app, client):\n-    parent = flask.Blueprint(""parent"", __name__, url_prefix=""/parent"")\n-    child = flask.Blueprint(""child"", __name__, url_prefix=""/child"")\n-    grandchild = flask.Blueprint(""grandchild"", __name__, url_prefix=""/grandchild"")\n-    apple = flask.Blueprint(""apple"", __name__, url_prefix=""/apple"")\n-\n-    @parent.route(""/"")\n-    def parent_index():\n-        return ""Parent""\n+@pytest.mark.parametrize(\n+    ""parent_init, child_init, parent_registration, child_registration"",\n+    [\n+        (""/parent"", ""/child"", None, None),\n+        (""/parent"", None, None, ""/child""),\n+        (None, None, ""/parent"", ""/child""),\n+        (""/other"", ""/something"", ""/parent"", ""/child""),\n+    ],\n+)\n+def test_nesting_url_prefixes(\n+    parent_init,\n+    child_init,\n+    parent_registration,\n+    child_registration,\n+    app,\n+    client,\n+) -> None:\n+    parent = flask.Blueprint(""parent"", __name__, url_prefix=parent_init)\n+    child = flask.Blueprint(""child"", __name__, url_prefix=child_init)\n \n     @child.route(""/"")\n-    def child_index():\n-        return ""Child""\n-\n-    @grandchild.route(""/"")\n-    def grandchild_index():\n-        return ""Grandchild""\n-\n-    @apple.route(""/"")\n-    def apple_index():\n-        return ""Apple""\n-\n-    child.register_blueprint(grandchild)\n-    child.register_blueprint(apple, url_prefix=""/orange"")  # test overwrite\n-    parent.register_blueprint(child)\n-    app.register_blueprint(parent)\n-\n-    assert client.get(""/parent/"").data == b""Parent""\n-    assert client.get(""/parent/child/"").data == b""Child""\n-    assert client.get(""/parent/child/grandchild/"").data == b""Grandchild""\n-    assert client.get(""/parent/child/orange/"").data == b""Apple""\n-\n-\n-def test_nested_blueprint_url_prefix_only_parent_prefix(app, client):\n-    parent = flask.Blueprint(""parent"", __name__)\n-    child = flask.Blueprint(""child"", __name__)\n-\n-    @child.route(""/child-endpoint"")\n-    def child_index():\n-        return ""Child""\n+    def index():\n+        return ""index""\n \n-    parent.register_blueprint(child)\n-    app.register_blueprint(parent, url_prefix=""/parent"")\n+    parent.register_blueprint(child, url_prefix=child_registration)\n+    app.register_blueprint(parent, url_prefix=parent_registration)\n \n-    assert client.get(""/parent/child-endpoint"").data == b""Child""\n+    response = client.get(""/parent/child/"")\n+    assert response.status_code == 200\n'",1.0305343511450382,1.0317460317460319
src/flask/app.py,src/flask/app.py,141fde1d8ec8663b4be98777750d2f58c6fe44ad,99afbb277d25d3b052e00b9a8da216054d51d62a,"""Bugfix blueprint naming\n\nFollowing discussions for Flask we've decided to name blueprints based\non how they are registered. This allows for two different blueprints\nto have the same self-name as long as they are registered in different\nnested positions. This helps users choose better blueprint names.""","'@@ -747,7 +747,7 @@ class Flask(Scaffold):\n         ] = self.template_context_processors[None]\n         reqctx = _request_ctx_stack.top\n         if reqctx is not None:\n-            for bp in self._request_blueprints():\n+            for bp in request.blueprints:\n                 if bp in self.template_context_processors:\n                     funcs = chain(funcs, self.template_context_processors[bp])\n         orig_ctx = context.copy()\n@@ -1267,7 +1267,7 @@ class Flask(Scaffold):\n         exc_class, code = self._get_exc_class_and_code(type(e))\n \n         for c in [code, None]:\n-            for name in chain(self._request_blueprints(), [None]):\n+            for name in chain(request.blueprints, [None]):\n                 handler_map = self.error_handler_spec[name][c]\n \n                 if not handler_map:\n@@ -1788,9 +1788,16 @@ class Flask(Scaffold):\n         .. versionadded:: 0.7\n         """"""\n         funcs: t.Iterable[URLDefaultCallable] = self.url_default_functions[None]\n+\n         if ""."" in endpoint:\n-            bp = endpoint.rsplit(""."", 1)[0]\n-            funcs = chain(funcs, self.url_default_functions[bp])\n+            bps: t.List[str] = [endpoint.rsplit(""."", 1)[0]]\n+\n+            while ""."" in bps[-1]:\n+                bps.append(bps[-1].rpartition(""."")[0])\n+\n+            for bp in bps:\n+                funcs = chain(funcs, self.url_default_functions[bp])\n+\n         for func in funcs:\n             func(endpoint, values)\n \n@@ -1831,14 +1838,14 @@ class Flask(Scaffold):\n         funcs: t.Iterable[URLValuePreprocessorCallable] = self.url_value_preprocessors[\n             None\n         ]\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.url_value_preprocessors:\n                 funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n         funcs: t.Iterable[BeforeRequestCallable] = self.before_request_funcs[None]\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.before_request_funcs:\n                 funcs = chain(funcs, self.before_request_funcs[bp])\n         for func in funcs:\n@@ -1863,7 +1870,7 @@ class Flask(Scaffold):\n         """"""\n         ctx = _request_ctx_stack.top\n         funcs: t.Iterable[AfterRequestCallable] = ctx._after_request_functions\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.after_request_funcs:\n                 funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n         if None in self.after_request_funcs:\n@@ -1902,7 +1909,7 @@ class Flask(Scaffold):\n         funcs: t.Iterable[TeardownCallable] = reversed(\n             self.teardown_request_funcs[None]\n         )\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.teardown_request_funcs:\n                 funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n         for func in funcs:\n@@ -2074,9 +2081,3 @@ class Flask(Scaffold):\n         wrapped to apply middleware.\n         """"""\n         return self.wsgi_app(environ, start_response)\n-\n-    def _request_blueprints(self) -> t.Iterable[str]:\n-        if _request_ctx_stack.top.request.blueprint is None:\n-            return []\n-        else:\n-            return reversed(_request_ctx_stack.top.request.blueprint.split("".""))\n'",3.0,3.0441176470588234
src/flask/blueprints.py,src/flask/blueprints.py,141fde1d8ec8663b4be98777750d2f58c6fe44ad,99afbb277d25d3b052e00b9a8da216054d51d62a,"""Bugfix blueprint naming\n\nFollowing discussions for Flask we've decided to name blueprints based\non how they are registered. This allows for two different blueprints\nto have the same self-name as long as they are registered in different\nnested positions. This helps users choose better blueprint names.""","'@@ -98,7 +98,7 @@ class BlueprintSetupState:\n             defaults = dict(defaults, **options.pop(""defaults""))\n         self.app.add_url_rule(\n             rule,\n-            f""{self.name_prefix}{self.blueprint.name}.{endpoint}"",\n+            f""{self.name_prefix}.{self.blueprint.name}.{endpoint}"".lstrip("".""),\n             view_func,\n             defaults=defaults,\n             **options,\n@@ -266,23 +266,24 @@ class Blueprint(Scaffold):\n             with.\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n-        :param first_registration: Whether this is the first time this\n-            blueprint has been registered on the application.\n         """"""\n-        first_registration = False\n-\n-        if self.name in app.blueprints:\n-            assert app.blueprints[self.name] is self, (\n-                ""A name collision occurred between blueprints""\n-                f"" {self!r} and {app.blueprints[self.name]!r}.""\n-                f"" Both share the same name {self.name!r}.""\n-                f"" Blueprints that are created on the fly need unique""\n-                f"" names.""\n+        first_registration = True\n+\n+        for blueprint in app.blueprints.values():\n+            if blueprint is self:\n+                first_registration = False\n+\n+        name_prefix = options.get(""name_prefix"", """")\n+        name = f""{name_prefix}.{self.name}"".lstrip(""."")\n+\n+        if name in app.blueprints and app.blueprints[name] is not self:\n+            raise ValueError(\n+                f""Blueprint name \'{self.name}\' ""\n+                f""is already registered by {app.blueprints[self.name]}. ""\n+                ""Blueprints must have unique names.""\n             )\n-        else:\n-            app.blueprints[self.name] = self\n-            first_registration = True\n \n+        app.blueprints[name] = self\n         self._got_registered_once = True\n         state = self.make_setup_state(app, options, first_registration)\n \n@@ -298,12 +299,11 @@ class Blueprint(Scaffold):\n \n             def extend(bp_dict, parent_dict):\n                 for key, values in bp_dict.items():\n-                    key = self.name if key is None else f""{self.name}.{key}""\n-\n+                    key = name if key is None else f""{name}.{key}""\n                     parent_dict[key].extend(values)\n \n             for key, value in self.error_handler_spec.items():\n-                key = self.name if key is None else f""{self.name}.{key}""\n+                key = name if key is None else f""{name}.{key}""\n                 value = defaultdict(\n                     dict,\n                     {\n@@ -337,7 +337,7 @@ class Blueprint(Scaffold):\n             if cli_resolved_group is None:\n                 app.cli.commands.update(self.cli.commands)\n             elif cli_resolved_group is _sentinel:\n-                self.cli.name = self.name\n+                self.cli.name = name\n                 app.cli.add_command(self.cli)\n             else:\n                 self.cli.name = cli_resolved_group\n@@ -359,7 +359,7 @@ class Blueprint(Scaffold):\n             elif state.url_prefix is not None:\n                 bp_options[""url_prefix""] = state.url_prefix\n \n-            bp_options[""name_prefix""] = options.get(""name_prefix"", """") + self.name + "".""\n+            bp_options[""name_prefix""] = name\n             blueprint.register(app, bp_options)\n \n     def add_url_rule(\n'",2.212121212121212,2.303030303030303
src/flask/wrappers.py,src/flask/wrappers.py,141fde1d8ec8663b4be98777750d2f58c6fe44ad,99afbb277d25d3b052e00b9a8da216054d51d62a,"""Bugfix blueprint naming\n\nFollowing discussions for Flask we've decided to name blueprints based\non how they are registered. This allows for two different blueprints\nto have the same self-name as long as they are registered in different\nnested positions. This helps users choose better blueprint names.""","'@@ -1,6 +1,7 @@\n import typing as t\n \n from werkzeug.exceptions import BadRequest\n+from werkzeug.utils import cached_property\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n \n@@ -77,6 +78,21 @@ class Request(RequestBase):\n         else:\n             return None\n \n+    @cached_property\n+    def blueprints(self) -> t.List[str]:\n+        """"""The names of the current blueprint upwards through parent\n+        blueprints.\n+        """"""\n+        if self.blueprint is None:\n+            return []\n+\n+        bps: t.List[str] = [self.blueprint]\n+\n+        while ""."" in bps[-1]:\n+            bps.append(bps[-1].rpartition(""."")[0])\n+\n+        return bps\n+\n     def _load_form_data(self) -> None:\n         RequestBase._load_form_data(self)\n \n'",2.8333333333333335,2.857142857142857
src/flask/blueprints.py,src/flask/blueprints.py,c2920e2bd98cdb3dcccc2868c25b695d4780c620,141fde1d8ec8663b4be98777750d2f58c6fe44ad,"'Bugfix allow blueprints to be registered with a different name\n\nThis allows the same blueprint to be registered multiple times at the\nsame level, but with differing url_prefixes and names.'","'@@ -274,7 +274,8 @@ class Blueprint(Scaffold):\n                 first_registration = False\n \n         name_prefix = options.get(""name_prefix"", """")\n-        name = f""{name_prefix}.{self.name}"".lstrip(""."")\n+        self_name = options.get(""name"", self.name)\n+        name = f""{name_prefix}.{self_name}"".lstrip(""."")\n \n         if name in app.blueprints and app.blueprints[name] is not self:\n             raise ValueError(\n'",2.303030303030303,2.303030303030303
tests/test_blueprints.py,tests/test_blueprints.py,c2920e2bd98cdb3dcccc2868c25b695d4780c620,141fde1d8ec8663b4be98777750d2f58c6fe44ad,"'Bugfix allow blueprints to be registered with a different name\n\nThis allows the same blueprint to be registered multiple times at the\nsame level, but with differing url_prefixes and names.'","'@@ -866,3 +866,16 @@ def test_nesting_url_prefixes(\n \n     response = client.get(""/parent/child/"")\n     assert response.status_code == 200\n+\n+\n+def test_unique_blueprint_names(app, client) -> None:\n+    bp = flask.Blueprint(""bp"", __name__)\n+    bp2 = flask.Blueprint(""bp"", __name__)\n+\n+    app.register_blueprint(bp)\n+    app.register_blueprint(bp)  # same name, same object, no error\n+\n+    with pytest.raises(ValueError):\n+        app.register_blueprint(bp2)  # same name, different object\n+\n+    app.register_blueprint(bp2, name=""alt"")  # different name\n'",1.0317460317460319,1.031496062992126
src/flask/app.py,src/flask/app.py,67b0b7e30d2304f628e966896748032022ac0257,c2920e2bd98cdb3dcccc2868c25b695d4780c620,'cache blueprint path calculation',"'@@ -36,6 +36,7 @@ from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n from .globals import session\n+from .helpers import _split_blueprint_path\n from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_flashed_messages\n@@ -1790,13 +1791,11 @@ class Flask(Scaffold):\n         funcs: t.Iterable[URLDefaultCallable] = self.url_default_functions[None]\n \n         if ""."" in endpoint:\n-            bps: t.List[str] = [endpoint.rsplit(""."", 1)[0]]\n-\n-            while ""."" in bps[-1]:\n-                bps.append(bps[-1].rpartition(""."")[0])\n-\n-            for bp in bps:\n-                funcs = chain(funcs, self.url_default_functions[bp])\n+            # This is called by url_for, which can be called outside a\n+            # request, can\'t use request.blueprints.\n+            bps = _split_blueprint_path(endpoint.rpartition(""."")[0])\n+            bp_funcs = chain.from_iterable(self.url_default_functions[bp] for bp in bps)\n+            funcs = chain(funcs, bp_funcs)\n \n         for func in funcs:\n             func(endpoint, values)\n'",3.0441176470588234,3.0294117647058822
src/flask/helpers.py,src/flask/helpers.py,67b0b7e30d2304f628e966896748032022ac0257,c2920e2bd98cdb3dcccc2868c25b695d4780c620,'cache blueprint path calculation',"'@@ -6,6 +6,7 @@ import typing as t\n import warnings\n from datetime import datetime\n from datetime import timedelta\n+from functools import lru_cache\n from functools import update_wrapper\n from threading import RLock\n \n@@ -821,3 +822,13 @@ def is_ip(value: str) -> bool:\n             return True\n \n     return False\n+\n+\n+@lru_cache(maxsize=None)\n+def _split_blueprint_path(name: str) -> t.List[str]:\n+    out: t.List[str] = [name]\n+\n+    if ""."" in name:\n+        out.extend(_split_blueprint_path(name.rpartition(""."")[0]))\n+\n+    return out\n'",2.8181818181818183,2.782608695652174
src/flask/wrappers.py,src/flask/wrappers.py,67b0b7e30d2304f628e966896748032022ac0257,c2920e2bd98cdb3dcccc2868c25b695d4780c620,'cache blueprint path calculation',"'@@ -1,12 +1,12 @@\n import typing as t\n \n from werkzeug.exceptions import BadRequest\n-from werkzeug.utils import cached_property\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n \n from . import json\n from .globals import current_app\n+from .helpers import _split_blueprint_path\n \n if t.TYPE_CHECKING:\n     import typing_extensions as te\n@@ -60,38 +60,54 @@ class Request(RequestBase):\n \n     @property\n     def endpoint(self) -> t.Optional[str]:\n-        """"""The endpoint that matched the request.  This in combination with\n-        :attr:`view_args` can be used to reconstruct the same or a\n-        modified URL.  If an exception happened when matching, this will\n-        be ``None``.\n+        """"""The endpoint that matched the request URL.\n+\n+        This will be ``None`` if matching failed or has not been\n+        performed yet.\n+\n+        This in combination with :attr:`view_args` can be used to\n+        reconstruct the same URL or a modified URL.\n         """"""\n         if self.url_rule is not None:\n             return self.url_rule.endpoint\n-        else:\n-            return None\n+\n+        return None\n \n     @property\n     def blueprint(self) -> t.Optional[str]:\n-        """"""The name of the current blueprint""""""\n-        if self.url_rule and ""."" in self.url_rule.endpoint:\n-            return self.url_rule.endpoint.rsplit(""."", 1)[0]\n-        else:\n-            return None\n+        """"""The registered name of the current blueprint.\n \n-    @cached_property\n-    def blueprints(self) -> t.List[str]:\n-        """"""The names of the current blueprint upwards through parent\n-        blueprints.\n+        This will be ``None`` if the endpoint is not part of a\n+        blueprint, or if URL matching failed or has not been performed\n+        yet.\n+\n+        This does not necessarily match the name the blueprint was\n+        created with. It may have been nested, or registered with a\n+        different name.\n         """"""\n-        if self.blueprint is None:\n-            return []\n+        endpoint = self.endpoint\n+\n+        if endpoint is not None and ""."" in endpoint:\n+            return endpoint.rpartition(""."")[0]\n+\n+        return None\n \n-        bps: t.List[str] = [self.blueprint]\n+    @property\n+    def blueprints(self) -> t.List[str]:\n+        """"""The registered names of the current blueprint upwards through\n+        parent blueprints.\n \n-        while ""."" in bps[-1]:\n-            bps.append(bps[-1].rpartition(""."")[0])\n+        This will be an empty list if there is no current blueprint, or\n+        if URL matching failed.\n+\n+        .. versionadded:: 2.0.1\n+        """"""\n+        name = self.blueprint\n+\n+        if name is None:\n+            return []\n \n-        return bps\n+        return _split_blueprint_path(name)\n \n     def _load_form_data(self) -> None:\n         RequestBase._load_form_data(self)\n'",2.857142857142857,2.7142857142857144
CHANGES.rst,CHANGES.rst,63b306743fccdd52079034e82cbbeee182a4361d,67b0b7e30d2304f628e966896748032022ac0257,'changelog for blueprint registered name',"'@@ -27,6 +27,13 @@ Unreleased\n     removed early. :issue:`4078`\n -   Improve typing for some functions using ``Callable`` in their type\n     signatures, focusing on decorator factories. :issue:`4060`\n+-   Nested blueprints are registered with their dotted name. This allows\n+    different blueprints with the same name to be nested at different\n+    locations. :issue:`4069`\n+-   ``register_blueprint`` takes a ``name`` option to change the\n+    (pre-dotted) name the blueprint is registered with. This allows the\n+    same blueprint to be registered multiple times with unique names for\n+    ``url_for``. :issue:`1091`\n \n \n Version 2.0.0\n'",0,0
src/flask/app.py,src/flask/app.py,63b306743fccdd52079034e82cbbeee182a4361d,67b0b7e30d2304f628e966896748032022ac0257,'changelog for blueprint registered name',"'@@ -1019,6 +1019,12 @@ class Flask(Scaffold):\n             :class:`~flask.blueprints.BlueprintSetupState`. They can be\n             accessed in :meth:`~flask.Blueprint.record` callbacks.\n \n+        .. versionchanged:: 2.0.1\n+            The ``name`` option can be used to change the (pre-dotted)\n+            name the blueprint is registered with. This allows the same\n+            blueprint to be registered multiple times with unique names\n+            for ``url_for``.\n+\n         .. versionadded:: 0.7\n         """"""\n         blueprint.register(self, options)\n'",3.0294117647058822,3.0294117647058822
src/flask/blueprints.py,src/flask/blueprints.py,63b306743fccdd52079034e82cbbeee182a4361d,67b0b7e30d2304f628e966896748032022ac0257,'changelog for blueprint registered name',"'@@ -252,6 +252,12 @@ class Blueprint(Scaffold):\n         arguments passed to this method will override the defaults set\n         on the blueprint.\n \n+        .. versionchanged:: 2.0.1\n+            The ``name`` option can be used to change the (pre-dotted)\n+            name the blueprint is registered with. This allows the same\n+            blueprint to be registered multiple times with unique names\n+            for ``url_for``.\n+\n         .. versionadded:: 2.0\n         """"""\n         self._blueprints.append((blueprint, options))\n@@ -266,6 +272,17 @@ class Blueprint(Scaffold):\n             with.\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n+\n+        .. versionchanged:: 2.0.1\n+            Nested blueprints are registered with their dotted name.\n+            This allows different blueprints with the same name to be\n+            nested at different locations.\n+\n+        .. versionchanged:: 2.0.1\n+            The ``name`` option can be used to change the (pre-dotted)\n+            name the blueprint is registered with. This allows the same\n+            blueprint to be registered multiple times with unique names\n+            for ``url_for``.\n         """"""\n         first_registration = True\n \n'",2.303030303030303,2.303030303030303
CHANGES.rst,CHANGES.rst,9409be6e34e153bfdb0aac2c9eb7f60110109172,63b306743fccdd52079034e82cbbeee182a4361d,'warn when registering same blueprint with same name',"'@@ -33,7 +33,8 @@ Unreleased\n -   ``register_blueprint`` takes a ``name`` option to change the\n     (pre-dotted) name the blueprint is registered with. This allows the\n     same blueprint to be registered multiple times with unique names for\n-    ``url_for``. :issue:`1091`\n+    ``url_for``. Registering the same blueprint with the same name\n+    multiple times is deprecated. :issue:`1091`\n \n \n Version 2.0.0\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,9409be6e34e153bfdb0aac2c9eb7f60110109172,63b306743fccdd52079034e82cbbeee182a4361d,'warn when registering same blueprint with same name',"'@@ -283,23 +283,35 @@ class Blueprint(Scaffold):\n             name the blueprint is registered with. This allows the same\n             blueprint to be registered multiple times with unique names\n             for ``url_for``.\n-        """"""\n-        first_registration = True\n-\n-        for blueprint in app.blueprints.values():\n-            if blueprint is self:\n-                first_registration = False\n \n+        .. versionchanged:: 2.0.1\n+            Registering the same blueprint with the same name multiple\n+            times is deprecated and will become an error in Flask 2.1.\n+        """"""\n+        first_registration = not any(bp is self for bp in app.blueprints.values())\n         name_prefix = options.get(""name_prefix"", """")\n         self_name = options.get(""name"", self.name)\n         name = f""{name_prefix}.{self_name}"".lstrip(""."")\n \n-        if name in app.blueprints and app.blueprints[name] is not self:\n-            raise ValueError(\n-                f""Blueprint name \'{self.name}\' ""\n-                f""is already registered by {app.blueprints[self.name]}. ""\n-                ""Blueprints must have unique names.""\n-            )\n+        if name in app.blueprints:\n+            existing_at = f"" \'{name}\'"" if self_name != name else """"\n+\n+            if app.blueprints[name] is not self:\n+                raise ValueError(\n+                    f""The name \'{self_name}\' is already registered for""\n+                    f"" a different blueprint{existing_at}. Use \'name=\'""\n+                    "" to provide a unique name.""\n+                )\n+            else:\n+                import warnings\n+\n+                warnings.warn(\n+                    f""The name \'{self_name}\' is already registered for""\n+                    f"" this blueprint{existing_at}. Use \'name=\' to""\n+                    "" provide a unique name. This will become an error""\n+                    "" in Flask 2.1."",\n+                    stacklevel=4,\n+                )\n \n         app.blueprints[name] = self\n         self._got_registered_once = True\n'",2.303030303030303,2.303030303030303
tests/test_blueprints.py,tests/test_blueprints.py,9409be6e34e153bfdb0aac2c9eb7f60110109172,63b306743fccdd52079034e82cbbeee182a4361d,'warn when registering same blueprint with same name',"'@@ -140,7 +140,7 @@ def test_blueprint_url_defaults(app, client):\n         return str(bar)\n \n     app.register_blueprint(bp, url_prefix=""/1"", url_defaults={""bar"": 23})\n-    app.register_blueprint(bp, url_prefix=""/2"", url_defaults={""bar"": 19})\n+    app.register_blueprint(bp, name=""test2"", url_prefix=""/2"", url_defaults={""bar"": 19})\n \n     assert client.get(""/1/foo"").data == b""23/42""\n     assert client.get(""/2/foo"").data == b""19/42""\n@@ -873,9 +873,13 @@ def test_unique_blueprint_names(app, client) -> None:\n     bp2 = flask.Blueprint(""bp"", __name__)\n \n     app.register_blueprint(bp)\n-    app.register_blueprint(bp)  # same name, same object, no error\n+\n+    with pytest.warns(UserWarning):\n+        app.register_blueprint(bp)  # same bp, same name, warning\n+\n+    app.register_blueprint(bp, name=""again"")  # same bp, different name, ok\n \n     with pytest.raises(ValueError):\n-        app.register_blueprint(bp2)  # same name, different object\n+        app.register_blueprint(bp2)  # different bp, same name, error\n \n-    app.register_blueprint(bp2, name=""alt"")  # different name\n+    app.register_blueprint(bp2, name=""alt"")  # different bp, different name, ok\n'",1.031496062992126,1.031496062992126
src/flask/blueprints.py,src/flask/blueprints.py,714b0a467acab54091d8aeb73403d808abfbcf5b,9409be6e34e153bfdb0aac2c9eb7f60110109172,"""Fix blueprint self registration\n\nBy raising a ValueError if attempted. I don't see a use case that\nmakes this worth supporting.""","'@@ -260,6 +260,8 @@ class Blueprint(Scaffold):\n \n         .. versionadded:: 2.0\n         """"""\n+        if blueprint is self:\n+            raise ValueError(""Cannot register a blueprint on itself"")\n         self._blueprints.append((blueprint, options))\n \n     def register(self, app: ""Flask"", options: dict) -> None:\n'",2.303030303030303,2.3333333333333335
tests/test_blueprints.py,tests/test_blueprints.py,714b0a467acab54091d8aeb73403d808abfbcf5b,9409be6e34e153bfdb0aac2c9eb7f60110109172,"""Fix blueprint self registration\n\nBy raising a ValueError if attempted. I don't see a use case that\nmakes this worth supporting.""","'@@ -883,3 +883,9 @@ def test_unique_blueprint_names(app, client) -> None:\n         app.register_blueprint(bp2)  # different bp, same name, error\n \n     app.register_blueprint(bp2, name=""alt"")  # different bp, different name, ok\n+\n+\n+def test_self_registration(app, client) -> None:\n+    bp = flask.Blueprint(""bp"", __name__)\n+    with pytest.raises(ValueError):\n+        bp.register_blueprint(bp)\n'",1.031496062992126,1.03125
src/flask/blueprints.py,src/flask/blueprints.py,3257b7574e7f010686a617197e0fb4596986f7f7,714b0a467acab54091d8aeb73403d808abfbcf5b,"'Fix blueprint renaming\n\nThis ensures that if a blueprint is renamed at the time of\nregistration that name is used when constructing endpoints, as\nexpected.'","'@@ -67,6 +67,7 @@ class BlueprintSetupState:\n         #: blueprint.\n         self.url_prefix = url_prefix\n \n+        self.name = self.options.get(""name"", blueprint.name)\n         self.name_prefix = self.options.get(""name_prefix"", """")\n \n         #: A dictionary with URL defaults that is added to each and every\n@@ -96,9 +97,10 @@ class BlueprintSetupState:\n         defaults = self.url_defaults\n         if ""defaults"" in options:\n             defaults = dict(defaults, **options.pop(""defaults""))\n+\n         self.app.add_url_rule(\n             rule,\n-            f""{self.name_prefix}.{self.blueprint.name}.{endpoint}"".lstrip("".""),\n+            f""{self.name_prefix}.{self.name}.{endpoint}"".lstrip("".""),\n             view_func,\n             defaults=defaults,\n             **options,\n'",2.3333333333333335,2.3333333333333335
tests/test_blueprints.py,tests/test_blueprints.py,3257b7574e7f010686a617197e0fb4596986f7f7,714b0a467acab54091d8aeb73403d808abfbcf5b,"'Fix blueprint renaming\n\nThis ensures that if a blueprint is renamed at the time of\nregistration that name is used when constructing endpoints, as\nexpected.'","'@@ -889,3 +889,25 @@ def test_self_registration(app, client) -> None:\n     bp = flask.Blueprint(""bp"", __name__)\n     with pytest.raises(ValueError):\n         bp.register_blueprint(bp)\n+\n+\n+def test_blueprint_renaming(app, client) -> None:\n+    bp = flask.Blueprint(""bp"", __name__)\n+    bp2 = flask.Blueprint(""bp2"", __name__)\n+\n+    @bp.get(""/"")\n+    def index():\n+        return flask.request.endpoint\n+\n+    @bp2.get(""/"")\n+    def index2():\n+        return flask.request.endpoint\n+\n+    bp.register_blueprint(bp2, url_prefix=""/a"", name=""sub"")\n+    app.register_blueprint(bp, url_prefix=""/a"")\n+    app.register_blueprint(bp, url_prefix=""/b"", name=""alt"")\n+\n+    assert client.get(""/a/"").data == b""bp.index""\n+    assert client.get(""/b/"").data == b""alt.index""\n+    assert client.get(""/a/a/"").data == b""bp.sub.index2""\n+    assert client.get(""/b/a/"").data == b""alt.sub.index2""\n'",1.03125,1.0305343511450382
CHANGES.rst,CHANGES.rst,7ab934f6bc2380a322c77d92c0b6cfd10b7de991,6b1c4e9769cbe72d6f5665a8081a98e5a671a8d8,'improve typing for `stream_with_context`',"'@@ -35,6 +35,7 @@ Unreleased\n     same blueprint to be registered multiple times with unique names for\n     ``url_for``. Registering the same blueprint with the same name\n     multiple times is deprecated. :issue:`1091`\n+-   Improve typing for ``stream_with_context``. :issue:`4052`\n \n \n Version 2.0.0\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,7ab934f6bc2380a322c77d92c0b6cfd10b7de991,6b1c4e9769cbe72d6f5665a8081a98e5a671a8d8,'improve typing for `stream_with_context`',"'@@ -64,8 +64,10 @@ def get_load_dotenv(default: bool = True) -> bool:\n \n \n def stream_with_context(\n-    generator_or_function: t.Union[t.Generator, t.Callable]\n-) -> t.Generator:\n+    generator_or_function: t.Union[\n+        t.Iterator[t.AnyStr], t.Callable[..., t.Iterator[t.AnyStr]]\n+    ]\n+) -> t.Iterator[t.AnyStr]:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n     memory leaks with badly written WSGI middlewares.  The downside is that if\n'",2.782608695652174,2.782608695652174
CHANGES.rst,CHANGES.rst,fe2d744b530283094dd0a2ffa4a9d86f1029b2cd,9f606a8cbb8755eaa4664ce7a4f892204f140410,'release version 2.0.1',"'@@ -3,7 +3,7 @@\n Version 2.0.1\n -------------\n \n-Unreleased\n+Released 2021-05-21\n \n -   Re-add the ``filename`` parameter in ``send_from_directory``. The\n     ``filename`` parameter has been renamed to ``path``, the old name\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,fe2d744b530283094dd0a2ffa4a9d86f1029b2cd,9f606a8cbb8755eaa4664ce7a4f892204f140410,'release version 2.0.1',"'@@ -43,4 +43,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.0.1.dev0""\n+__version__ = ""2.0.1""\n'",0,0
CHANGES.rst,CHANGES.rst,e22021d531499af87f65d75f1e37e6329e7385ed,bc90801c2ada42d3cf112a3b5701bfdbb8b6211c,'start version 2.0.2.dev0',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.0.2\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.0.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,e22021d531499af87f65d75f1e37e6329e7385ed,bc90801c2ada42d3cf112a3b5701bfdbb8b6211c,'start version 2.0.2.dev0',"'@@ -43,4 +43,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.0.1""\n+__version__ = ""2.0.2.dev0""\n'",0,0
docs/tutorial/index.rst,docs/tutorial/index.rst,aa6fbf2f5a6265dd0ecaaca03e646c3c2a8f58d2,e22021d531499af87f65d75f1e37e6329e7385ed,'Fix typo in docs/tutorial/index.rst',"""@@ -55,7 +55,7 @@ this structure and take full advantage of Flask's flexibility.\n .. image:: flaskr_edit.png\n     :align: center\n     :class: screenshot\n-    :alt: screenshot of login page\n+    :alt: screenshot of edit page\n \n :gh:`The tutorial project is available as an example in the Flask\n repository <examples/tutorial>`, if you want to compare your project\n""",0,0
CHANGES.rst,CHANGES.rst,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,d81aa70106877b38673275e4539ab1f3232c4fea,'improve typing for `teardown_request`',"'@@ -5,6 +5,8 @@ Version 2.0.2\n \n Unreleased\n \n+-  Fix type annotation for ``teardown_request``. :issue:`4093`\n+\n \n Version 2.0.1\n -------------\n'",0,0
src/flask/typing.py,src/flask/typing.py,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,d81aa70106877b38673275e4539ab1f3232c4fea,'improve typing for `teardown_request`',"'@@ -37,7 +37,7 @@ AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints a\n AfterRequestCallable = t.Callable[[""Response""], ""Response""]\n BeforeRequestCallable = t.Callable[[], None]\n ErrorHandlerCallable = t.Callable[[Exception], ResponseReturnValue]\n-TeardownCallable = t.Callable[[t.Optional[BaseException]], ""Response""]\n+TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n TemplateFilterCallable = t.Callable[[t.Any], str]\n TemplateGlobalCallable = t.Callable[[], t.Any]\n'",0,0
CHANGES.rst,CHANGES.rst,a960236117442bec67f89c30dfa014e05483da5a,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,'Fix type annotation for `before_request` and `before_app_request` decorators',"'@@ -5,7 +5,9 @@ Version 2.0.2\n \n Unreleased\n \n--  Fix type annotation for ``teardown_request``. :issue:`4093`\n+-   Fix type annotation for ``teardown_request``. :issue:`4093`\n+-   Fix type annotation for ``before_request`` and ``before_app_request``\n+    decorators. :issue:`4104`\n \n \n Version 2.0.1\n'",0,0
src/flask/app.py,src/flask/app.py,a960236117442bec67f89c30dfa014e05483da5a,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,'Fix type annotation for `before_request` and `before_app_request` decorators',"'@@ -59,6 +59,7 @@ from .signals import request_tearing_down\n from .templating import DispatchingJinjaLoader\n from .templating import Environment\n from .typing import AfterRequestCallable\n+from .typing import BeforeFirstRequestCallable\n from .typing import BeforeRequestCallable\n from .typing import ErrorHandlerCallable\n from .typing import ResponseReturnValue\n@@ -439,7 +440,7 @@ class Flask(Scaffold):\n         #: :meth:`before_first_request` decorator.\n         #:\n         #: .. versionadded:: 0.8\n-        self.before_first_request_funcs: t.List[BeforeRequestCallable] = []\n+        self.before_first_request_funcs: t.List[BeforeFirstRequestCallable] = []\n \n         #: A list of functions that are called when the application context\n         #: is destroyed.  Since the application context is also torn down\n@@ -1211,7 +1212,9 @@ class Flask(Scaffold):\n         self.jinja_env.globals[name or f.__name__] = f\n \n     @setupmethod\n-    def before_first_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n+    def before_first_request(\n+        self, f: BeforeFirstRequestCallable\n+    ) -> BeforeFirstRequestCallable:\n         """"""Registers a function to be run before the first request to this\n         instance of the application.\n \n'",3.0294117647058822,3.0294117647058822
src/flask/blueprints.py,src/flask/blueprints.py,a960236117442bec67f89c30dfa014e05483da5a,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,'Fix type annotation for `before_request` and `before_app_request` decorators',"'@@ -6,6 +6,7 @@ from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n from .scaffold import Scaffold\n from .typing import AfterRequestCallable\n+from .typing import BeforeFirstRequestCallable\n from .typing import BeforeRequestCallable\n from .typing import ErrorHandlerCallable\n from .typing import TeardownCallable\n@@ -537,8 +538,8 @@ class Blueprint(Scaffold):\n         return f\n \n     def before_app_first_request(\n-        self, f: BeforeRequestCallable\n-    ) -> BeforeRequestCallable:\n+        self, f: BeforeFirstRequestCallable\n+    ) -> BeforeFirstRequestCallable:\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n         """"""\n'",2.3333333333333335,2.3333333333333335
src/flask/typing.py,src/flask/typing.py,a960236117442bec67f89c30dfa014e05483da5a,f7adb2c813c5c10dcab5bc81ee173a6f9fbd406a,'Fix type annotation for `before_request` and `before_app_request` decorators',"'@@ -35,7 +35,8 @@ ResponseReturnValue = t.Union[\n \n AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints are named\n AfterRequestCallable = t.Callable[[""Response""], ""Response""]\n-BeforeRequestCallable = t.Callable[[], None]\n+BeforeFirstRequestCallable = t.Callable[[], None]\n+BeforeRequestCallable = t.Callable[[], t.Optional[ResponseReturnValue]]\n ErrorHandlerCallable = t.Callable[[Exception], ResponseReturnValue]\n TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n'",0,0
CHANGES.rst,CHANGES.rst,8e589daaf2cec6a10262b8ff88801127f2fa14fd,a960236117442bec67f89c30dfa014e05483da5a,'Fix typing of jinja decorators (#4109)',"'@@ -8,6 +8,8 @@ Unreleased\n -   Fix type annotation for ``teardown_request``. :issue:`4093`\n -   Fix type annotation for ``before_request`` and ``before_app_request``\n     decorators. :issue:`4104`\n+-   Fixed the issue where typing requires template global\n+    decorators to accept functions with no arguments. :issue:`4098`\n \n \n Version 2.0.1\n'",0,0
src/flask/typing.py,src/flask/typing.py,8e589daaf2cec6a10262b8ff88801127f2fa14fd,a960236117442bec67f89c30dfa014e05483da5a,'Fix typing of jinja decorators (#4109)',"'@@ -40,8 +40,8 @@ BeforeRequestCallable = t.Callable[[], t.Optional[ResponseReturnValue]]\n ErrorHandlerCallable = t.Callable[[Exception], ResponseReturnValue]\n TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n-TemplateFilterCallable = t.Callable[[t.Any], str]\n-TemplateGlobalCallable = t.Callable[[], t.Any]\n-TemplateTestCallable = t.Callable[[t.Any], bool]\n+TemplateFilterCallable = t.Callable[..., t.Any]\n+TemplateGlobalCallable = t.Callable[..., t.Any]\n+TemplateTestCallable = t.Callable[..., bool]\n URLDefaultCallable = t.Callable[[str, dict], None]\n URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n'",0,0
docs/async-await.rst,docs/async-await.rst,0ce270d1f3615f222226fb316e505a60c1e3baab,8e589daaf2cec6a10262b8ff88801127f2fa14fd,'Update doc about minimal Python version for async support',"'@@ -7,7 +7,8 @@ Using ``async`` and ``await``\n \n Routes, error handlers, before request, after request, and teardown\n functions can all be coroutine functions if Flask is installed with the\n-``async`` extra (``pip install flask[async]``). This allows views to be\n+``async`` extra (``pip install flask[async]``). It requires Python 3.7+\n+where ``contextvars.ContextVar`` is available. This allows views to be\n defined with ``async def`` and use ``await``.\n \n .. code-block:: python\n'",1.0,1.0
docs/installation.rst,docs/installation.rst,0ce270d1f3615f222226fb316e505a60c1e3baab,8e589daaf2cec6a10262b8ff88801127f2fa14fd,'Update doc about minimal Python version for async support',"'@@ -8,6 +8,8 @@ Python Version\n We recommend using the latest version of Python. Flask supports Python\n 3.6 and newer.\n \n+``async`` support in Flask requires Python 3.7+ for ``contextvars.ContextVar``.\n+\n \n Dependencies\n ------------\n'",0,0
requirements/dev.txt,requirements/dev.txt,5d0104f67e6e465e5416803062ed53add1e8d333,6f5870a791a91b726272413c5e2c563a6b2a9c2f,'Bump pre-commit from 2.12.1 to 2.13.0\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.12.1 to 2.13.0.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.12.1...v2.13.0)\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -70,7 +70,7 @@ pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.12.1\n+pre-commit==2.13.0\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n'",0,0
src/flask/app.py,src/flask/app.py,491ea32803cb05fb8fc4dfb81ec6c96f94529eb0,0ce270d1f3615f222226fb316e505a60c1e3baab,'Optimize loop in Flask._find_error_handler()',"'@@ -1276,7 +1276,7 @@ class Flask(Scaffold):\n         """"""\n         exc_class, code = self._get_exc_class_and_code(type(e))\n \n-        for c in [code, None]:\n+        for c in [code, None] if code is not None else [None]:\n             for name in chain(request.blueprints, [None]):\n                 handler_map = self.error_handler_spec[name][c]\n \n'",3.0294117647058822,3.0441176470588234
CHANGES.rst,CHANGES.rst,270eb2df2a1606383f50ff079a32240966b43fbc,491ea32803cb05fb8fc4dfb81ec6c96f94529eb0,'Support View and MethodView instances with async handlers',"'@@ -10,6 +10,7 @@ Unreleased\n     decorators. :issue:`4104`\n -   Fixed the issue where typing requires template global\n     decorators to accept functions with no arguments. :issue:`4098`\n+-   Support View and MethodView instances with async handlers. :issue:`4112`\n \n \n Version 2.0.1\n'",0,0
docs/async-await.rst,docs/async-await.rst,270eb2df2a1606383f50ff079a32240966b43fbc,491ea32803cb05fb8fc4dfb81ec6c96f94529eb0,'Support View and MethodView instances with async handlers',"'@@ -18,6 +18,12 @@ defined with ``async def`` and use ``await``.\n         data = await async_db_query(...)\n         return jsonify(data)\n \n+Pluggable class-based views also support handlers that are implemented as\n+coroutines. This applies to the :meth:`~flask.views.View.dispatch_request`\n+method in views that inherit from the :class:`flask.views.View` class, as\n+well as all the HTTP method handlers in views that inherit from the\n+:class:`flask.views.MethodView` class.\n+\n .. admonition:: Using ``async`` on Windows on Python 3.8\n \n     Python 3.8 has a bug related to asyncio on Windows. If you encounter\n'",1.0,1.0
src/flask/views.py,src/flask/views.py,270eb2df2a1606383f50ff079a32240966b43fbc,491ea32803cb05fb8fc4dfb81ec6c96f94529eb0,'Support View and MethodView instances with async handlers',"'@@ -1,5 +1,6 @@\n import typing as t\n \n+from .globals import current_app\n from .globals import request\n from .typing import ResponseReturnValue\n \n@@ -80,7 +81,7 @@ class View:\n \n         def view(*args: t.Any, **kwargs: t.Any) -> ResponseReturnValue:\n             self = view.view_class(*class_args, **class_kwargs)  # type: ignore\n-            return self.dispatch_request(*args, **kwargs)\n+            return current_app.ensure_sync(self.dispatch_request)(*args, **kwargs)\n \n         if cls.decorators:\n             view.__name__ = name\n@@ -154,4 +155,4 @@ class MethodView(View, metaclass=MethodViewType):\n             meth = getattr(self, ""get"", None)\n \n         assert meth is not None, f""Unimplemented method {request.method!r}""\n-        return meth(*args, **kwargs)\n+        return current_app.ensure_sync(meth)(*args, **kwargs)\n'",3.0,3.0
tests/test_async.py,tests/test_async.py,270eb2df2a1606383f50ff079a32240966b43fbc,491ea32803cb05fb8fc4dfb81ec6c96f94529eb0,'Support View and MethodView instances with async handlers',"'@@ -6,6 +6,8 @@ import pytest\n from flask import Blueprint\n from flask import Flask\n from flask import request\n+from flask.views import MethodView\n+from flask.views import View\n \n pytest.importorskip(""asgiref"")\n \n@@ -18,6 +20,24 @@ class BlueprintError(Exception):\n     pass\n \n \n+class AsyncView(View):\n+    methods = [""GET"", ""POST""]\n+\n+    async def dispatch_request(self):\n+        await asyncio.sleep(0)\n+        return request.method\n+\n+\n+class AsyncMethodView(MethodView):\n+    async def get(self):\n+        await asyncio.sleep(0)\n+        return \'GET\'\n+\n+    async def post(self):\n+        await asyncio.sleep(0)\n+        return \'POST\'\n+\n+\n @pytest.fixture(name=""async_app"")\n def _async_app():\n     app = Flask(__name__)\n@@ -53,11 +73,14 @@ def _async_app():\n \n     app.register_blueprint(blueprint, url_prefix=""/bp"")\n \n+    app.add_url_rule(\'/view\', view_func=AsyncView.as_view(\'view\'))\n+    app.add_url_rule(\'/methodview\', view_func=AsyncMethodView.as_view(\'methodview\'))\n+\n     return app\n \n \n @pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n-@pytest.mark.parametrize(""path"", [""/"", ""/home"", ""/bp/""])\n+@pytest.mark.parametrize(""path"", [""/"", ""/home"", ""/bp/"", ""/view"", ""/methodview""])\n def test_async_route(path, async_app):\n     test_client = async_app.test_client()\n     response = test_client.get(path)\n'",1.0,1.0
tests/test_async.py,tests/test_async.py,5205cd4ea979f6c322e4e6a256a72e7808592818,270eb2df2a1606383f50ff079a32240966b43fbc,"'[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci'","'@@ -31,11 +31,11 @@ class AsyncView(View):\n class AsyncMethodView(MethodView):\n     async def get(self):\n         await asyncio.sleep(0)\n-        return \'GET\'\n+        return ""GET""\n \n     async def post(self):\n         await asyncio.sleep(0)\n-        return \'POST\'\n+        return ""POST""\n \n \n @pytest.fixture(name=""async_app"")\n@@ -73,8 +73,8 @@ def _async_app():\n \n     app.register_blueprint(blueprint, url_prefix=""/bp"")\n \n-    app.add_url_rule(\'/view\', view_func=AsyncView.as_view(\'view\'))\n-    app.add_url_rule(\'/methodview\', view_func=AsyncMethodView.as_view(\'methodview\'))\n+    app.add_url_rule(""/view"", view_func=AsyncView.as_view(""view""))\n+    app.add_url_rule(""/methodview"", view_func=AsyncMethodView.as_view(""methodview""))\n \n     return app\n \n'",1.0,1.0
CHANGES.rst,CHANGES.rst,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,5205cd4ea979f6c322e4e6a256a72e7808592818,'improve typing for `app.errorhandler` decorator',"'@@ -11,6 +11,7 @@ Unreleased\n -   Fixed the issue where typing requires template global\n     decorators to accept functions with no arguments. :issue:`4098`\n -   Support View and MethodView instances with async handlers. :issue:`4112`\n+-   Enhance typing of ``app.errorhandler`` decorator. :issue:`4095`\n \n \n Version 2.0.1\n'",0,0
src/flask/app.py,src/flask/app.py,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,5205cd4ea979f6c322e4e6a256a72e7808592818,'improve typing for `app.errorhandler` decorator',"'@@ -61,7 +61,6 @@ from .templating import Environment\n from .typing import AfterRequestCallable\n from .typing import BeforeFirstRequestCallable\n from .typing import BeforeRequestCallable\n-from .typing import ErrorHandlerCallable\n from .typing import ResponseReturnValue\n from .typing import TeardownCallable\n from .typing import TemplateContextProcessorCallable\n@@ -78,6 +77,7 @@ if t.TYPE_CHECKING:\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n+    from .typing import ErrorHandlerCallable\n \n if sys.version_info >= (3, 8):\n     iscoroutinefunction = inspect.iscoroutinefunction\n@@ -1268,7 +1268,9 @@ class Flask(Scaffold):\n         self.shell_context_processors.append(f)\n         return f\n \n-    def _find_error_handler(self, e: Exception) -> t.Optional[ErrorHandlerCallable]:\n+    def _find_error_handler(\n+        self, e: Exception\n+    ) -> t.Optional[""ErrorHandlerCallable[Exception]""]:\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n         blueprint handler for an exception class, app handler for an exception\n'",3.0441176470588234,3.0441176470588234
src/flask/blueprints.py,src/flask/blueprints.py,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,5205cd4ea979f6c322e4e6a256a72e7808592818,'improve typing for `app.errorhandler` decorator',"'@@ -8,7 +8,6 @@ from .scaffold import Scaffold\n from .typing import AfterRequestCallable\n from .typing import BeforeFirstRequestCallable\n from .typing import BeforeRequestCallable\n-from .typing import ErrorHandlerCallable\n from .typing import TeardownCallable\n from .typing import TemplateContextProcessorCallable\n from .typing import TemplateFilterCallable\n@@ -19,6 +18,7 @@ from .typing import URLValuePreprocessorCallable\n \n if t.TYPE_CHECKING:\n     from .app import Flask\n+    from .typing import ErrorHandlerCallable\n \n DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n \n@@ -581,7 +581,9 @@ class Blueprint(Scaffold):\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(f: ErrorHandlerCallable) -> ErrorHandlerCallable:\n+        def decorator(\n+            f: ""ErrorHandlerCallable[Exception]"",\n+        ) -> ""ErrorHandlerCallable[Exception]"":\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n'",2.3333333333333335,2.3333333333333335
src/flask/scaffold.py,src/flask/scaffold.py,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,5205cd4ea979f6c322e4e6a256a72e7808592818,'improve typing for `app.errorhandler` decorator',"'@@ -21,7 +21,7 @@ from .templating import _default_template_ctx_processor\n from .typing import AfterRequestCallable\n from .typing import AppOrBlueprintKey\n from .typing import BeforeRequestCallable\n-from .typing import ErrorHandlerCallable\n+from .typing import GenericException\n from .typing import TeardownCallable\n from .typing import TemplateContextProcessorCallable\n from .typing import URLDefaultCallable\n@@ -29,6 +29,7 @@ from .typing import URLValuePreprocessorCallable\n \n if t.TYPE_CHECKING:\n     from .wrappers import Response\n+    from .typing import ErrorHandlerCallable\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n@@ -144,7 +145,10 @@ class Scaffold:\n         #: directly and its format may change at any time.\n         self.error_handler_spec: t.Dict[\n             AppOrBlueprintKey,\n-            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ErrorHandlerCallable]],\n+            t.Dict[\n+                t.Optional[int],\n+                t.Dict[t.Type[Exception], ""ErrorHandlerCallable[Exception]""],\n+            ],\n         ] = defaultdict(lambda: defaultdict(dict))\n \n         #: A data structure of functions to call at the beginning of\n@@ -643,8 +647,11 @@ class Scaffold:\n \n     @setupmethod\n     def errorhandler(\n-        self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable[[ErrorHandlerCallable], ErrorHandlerCallable]:\n+        self, code_or_exception: t.Union[t.Type[GenericException], int]\n+    ) -> t.Callable[\n+        [""ErrorHandlerCallable[GenericException]""],\n+        ""ErrorHandlerCallable[GenericException]"",\n+    ]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -674,7 +681,9 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(f: ErrorHandlerCallable) -> ErrorHandlerCallable:\n+        def decorator(\n+            f: ""ErrorHandlerCallable[GenericException]"",\n+        ) -> ""ErrorHandlerCallable[GenericException]"":\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n@@ -683,8 +692,8 @@ class Scaffold:\n     @setupmethod\n     def register_error_handler(\n         self,\n-        code_or_exception: t.Union[t.Type[Exception], int],\n-        f: ErrorHandlerCallable,\n+        code_or_exception: t.Union[t.Type[GenericException], int],\n+        f: ""ErrorHandlerCallable[GenericException]"",\n     ) -> None:\n         """"""Alternative error attach function to the :meth:`errorhandler`\n         decorator that is more straightforward to use for non decorator\n@@ -708,7 +717,9 @@ class Scaffold:\n                 "" instead.""\n             )\n \n-        self.error_handler_spec[None][code][exc_class] = f\n+        self.error_handler_spec[None][code][exc_class] = t.cast(\n+            ""ErrorHandlerCallable[Exception]"", f\n+        )\n \n     @staticmethod\n     def _get_exc_class_and_code(\n'",1.8205128205128205,1.8205128205128205
src/flask/typing.py,src/flask/typing.py,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,5205cd4ea979f6c322e4e6a256a72e7808592818,'improve typing for `app.errorhandler` decorator',"'@@ -33,11 +33,12 @@ ResponseReturnValue = t.Union[\n     ""WSGIApplication"",\n ]\n \n+GenericException = t.TypeVar(""GenericException"", bound=Exception, contravariant=True)\n+\n AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints are named\n AfterRequestCallable = t.Callable[[""Response""], ""Response""]\n BeforeFirstRequestCallable = t.Callable[[], None]\n BeforeRequestCallable = t.Callable[[], t.Optional[ResponseReturnValue]]\n-ErrorHandlerCallable = t.Callable[[Exception], ResponseReturnValue]\n TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n TemplateFilterCallable = t.Callable[..., t.Any]\n@@ -45,3 +46,11 @@ TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n URLDefaultCallable = t.Callable[[str, dict], None]\n URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n+\n+\n+if t.TYPE_CHECKING:\n+    import typing_extensions as te\n+\n+    class ErrorHandlerCallable(te.Protocol[GenericException]):\n+        def __call__(self, error: GenericException) -> ResponseReturnValue:\n+            ...\n'",0,1.0
requirements/dev.txt,requirements/dev.txt,1b10e085d821e37b7f7162307046649a721e5587,cd0086bc4b6fc4720b921b85eb9050c681ca601b,'Bump urllib3 from 1.26.4 to 1.26.5 in /requirements\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.4 to 1.26.5.\n- [Release notes](https://github.com/urllib3/urllib3/releases)\n- [Changelog](https://github.com/urllib3/urllib3/blob/main/CHANGES.rst)\n- [Commits](https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5)\n\n---\nupdated-dependencies:\n- dependency-name: urllib3\n  dependency-type: indirect\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -9,13 +9,13 @@ alabaster==0.7.12\n appdirs==1.4.4\n     # via virtualenv\n asgiref==3.3.4\n-    # via -r requirements/tests.in\n+    # via -r tests.in\n attrs==21.2.0\n     # via pytest\n babel==2.9.1\n     # via sphinx\n blinker==1.4\n-    # via -r requirements/tests.in\n+    # via -r tests.in\n certifi==2020.12.5\n     # via requests\n cfgv==3.3.0\n@@ -35,7 +35,7 @@ filelock==3.0.12\n     #   tox\n     #   virtualenv\n greenlet==1.1.0\n-    # via -r requirements/tests.in\n+    # via -r tests.in\n identify==2.2.4\n     # via pre-commit\n idna==2.10\n@@ -51,7 +51,7 @@ markupsafe==2.0.1\n mypy-extensions==0.4.3\n     # via mypy\n mypy==0.812\n-    # via -r requirements/typing.in\n+    # via -r typing.in\n nodeenv==1.6.0\n     # via pre-commit\n packaging==20.9\n@@ -61,17 +61,17 @@ packaging==20.9\n     #   sphinx\n     #   tox\n pallets-sphinx-themes==2.0.1\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n pep517==0.10.0\n     # via pip-tools\n pip-tools==6.1.0\n-    # via -r requirements/dev.in\n+    # via -r dev.in\n pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n pre-commit==2.13.0\n-    # via -r requirements/dev.in\n+    # via -r dev.in\n py==1.10.0\n     # via\n     #   pytest\n@@ -83,9 +83,9 @@ pygments==2.9.0\n pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n-    # via -r requirements/tests.in\n+    # via -r tests.in\n python-dotenv==0.17.1\n-    # via -r requirements/tests.in\n+    # via -r tests.in\n pytz==2021.1\n     # via babel\n pyyaml==5.4.1\n@@ -99,12 +99,12 @@ six==1.16.0\n snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinx-tabs==3.0.0\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinx==4.0.2\n     # via\n-    #   -r requirements/docs.in\n+    #   -r docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n@@ -118,7 +118,7 @@ sphinxcontrib-htmlhelp==1.0.3\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n@@ -130,12 +130,12 @@ toml==0.10.2\n     #   pytest\n     #   tox\n tox==3.23.1\n-    # via -r requirements/dev.in\n+    # via -r dev.in\n typed-ast==1.4.3\n     # via mypy\n typing-extensions==3.10.0.0\n     # via mypy\n-urllib3==1.26.4\n+urllib3==1.26.5\n     # via requests\n virtualenv==20.4.6\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,1b10e085d821e37b7f7162307046649a721e5587,cd0086bc4b6fc4720b921b85eb9050c681ca601b,'Bump urllib3 from 1.26.4 to 1.26.5 in /requirements\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.4 to 1.26.5.\n- [Release notes](https://github.com/urllib3/urllib3/releases)\n- [Changelog](https://github.com/urllib3/urllib3/blob/main/CHANGES.rst)\n- [Commits](https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5)\n\n---\nupdated-dependencies:\n- dependency-name: urllib3\n  dependency-type: indirect\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -29,7 +29,7 @@ packaging==20.9\n     #   pallets-sphinx-themes\n     #   sphinx\n pallets-sphinx-themes==2.0.1\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n pygments==2.9.0\n     # via\n     #   sphinx\n@@ -43,12 +43,12 @@ requests==2.25.1\n snowballstemmer==2.1.0\n     # via sphinx\n sphinx-issues==1.2.0\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinx-tabs==3.0.0\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinx==4.0.2\n     # via\n-    #   -r requirements/docs.in\n+    #   -r docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n@@ -62,12 +62,12 @@ sphinxcontrib-htmlhelp==1.0.3\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n-    # via -r requirements/docs.in\n+    # via -r docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n     # via sphinx\n-urllib3==1.26.4\n+urllib3==1.26.5\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
CHANGES.rst,CHANGES.rst,63893a427bd022d192febadad0b31ae06fa80776,6a4e7e948d7e5bd5b2b76c1b7f1a0392644bee1e,'Improve the changelog entry\n\nThe fix to the teardown_request also applies to all teardown_*\nmethods.',"'@@ -5,7 +5,7 @@ Version 2.0.2\n \n Unreleased\n \n--   Fix type annotation for ``teardown_request``. :issue:`4093`\n+-   Fix type annotation for ``teardown_*`` methods. :issue:`4093`\n -   Fix type annotation for ``before_request`` and ``before_app_request``\n     decorators. :issue:`4104`\n -   Fixed the issue where typing requires template global\n'",0,0
docs/patterns/celery.rst,docs/patterns/celery.rst,92bed6619459da93f79e85ec674b24cb6fa322f6,63893a427bd022d192febadad0b31ae06fa80776,'Update celery.rst\n\nsmall typo',"""@@ -64,7 +64,7 @@ An example task\n \n Let's write a task that adds two numbers together and returns the result. We\n configure Celery's broker and backend to use Redis, create a ``celery``\n-application using the factor from above, and then use it to define the task. ::\n+application using the factory from above, and then use it to define the task. ::\n \n     from flask import Flask\n \n""",1.0,1.0
CONTRIBUTING.rst,CONTRIBUTING.rst,34027d8d876c140f84e18d6b56c0aecc5481874c,399b851ed78ed985a222822114a01961c087f8fd,'Improve the contributing guide',"'@@ -12,14 +12,16 @@ to address bugs and feature requests in Flask itself. Use one of the\n following resources for questions about using Flask or issues with your\n own code:\n \n--   The ``#get-help`` channel on our Discord chat:\n+-   The ``#questions`` channel on our Discord chat:\n     https://discord.gg/pallets\n -   The mailing list flask@python.org for long term discussion or larger\n     issues.\n -   Ask on `Stack Overflow`_. Search with Google first using:\n     ``site:stackoverflow.com flask {search term, exception message, etc.}``\n+-   Ask on our `GitHub Discussions`_.\n \n .. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?tab=Frequent\n+.. _GitHub Discussions: https://github.com/pallets/flask/discussions\n \n \n Reporting issues\n@@ -92,7 +94,7 @@ First time setup\n \n     .. code-block:: text\n \n-        git remote add fork https://github.com/{username}/flask\n+        $ git remote add fork https://github.com/{username}/flask\n \n -   Create a virtualenv.\n \n'",0,0
CHANGES.rst,CHANGES.rst,a44c7228600044f530856a33c7da147c528644ff,399b851ed78ed985a222822114a01961c087f8fd,"'Fix registering a blueprint twice with differing names\n\nPreviously the blueprint recorded aspects (before request, after\nrequest etc) would only be added to the app if it was the first\nregistration of the blueprint instance. However only the record-once\naspects (app-before requests, app-after request) should be added once\non registration of the instance, whereas everything else should be\nadded on every unique name registration. This ensures that these\ntrigger under the new name as well as the old.'","'@@ -12,6 +12,7 @@ Unreleased\n     decorators to accept functions with no arguments. :issue:`4098`\n -   Support View and MethodView instances with async handlers. :issue:`4112`\n -   Enhance typing of ``app.errorhandler`` decorator. :issue:`4095`\n+-   Fix registering a blueprint twice with differing names. :issue:`4124`\n \n \n Version 2.0.1\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,a44c7228600044f530856a33c7da147c528644ff,399b851ed78ed985a222822114a01961c087f8fd,"'Fix registering a blueprint twice with differing names\n\nPreviously the blueprint recorded aspects (before request, after\nrequest etc) would only be added to the app if it was the first\nregistration of the blueprint instance. However only the record-once\naspects (app-before requests, app-after request) should be added once\non registration of the instance, whereas everything else should be\nadded on every unique name registration. This ensures that these\ntrigger under the new name as well as the old.'","'@@ -293,7 +293,6 @@ class Blueprint(Scaffold):\n             Registering the same blueprint with the same name multiple\n             times is deprecated and will become an error in Flask 2.1.\n         """"""\n-        first_registration = not any(bp is self for bp in app.blueprints.values())\n         name_prefix = options.get(""name_prefix"", """")\n         self_name = options.get(""name"", self.name)\n         name = f""{name_prefix}.{self_name}"".lstrip(""."")\n@@ -318,9 +317,12 @@ class Blueprint(Scaffold):\n                     stacklevel=4,\n                 )\n \n+        first_bp_registration = not any(bp is self for bp in app.blueprints.values())\n+        first_name_registration = name not in app.blueprints\n+\n         app.blueprints[name] = self\n         self._got_registered_once = True\n-        state = self.make_setup_state(app, options, first_registration)\n+        state = self.make_setup_state(app, options, first_bp_registration)\n \n         if self.has_static_folder:\n             state.add_url_rule(\n@@ -330,7 +332,7 @@ class Blueprint(Scaffold):\n             )\n \n         # Merge blueprint data into parent.\n-        if first_registration:\n+        if first_bp_registration or first_name_registration:\n \n             def extend(bp_dict, parent_dict):\n                 for key, values in bp_dict.items():\n'",2.3333333333333335,2.3636363636363638
tests/test_blueprints.py,tests/test_blueprints.py,a44c7228600044f530856a33c7da147c528644ff,399b851ed78ed985a222822114a01961c087f8fd,"'Fix registering a blueprint twice with differing names\n\nPreviously the blueprint recorded aspects (before request, after\nrequest etc) would only be added to the app if it was the first\nregistration of the blueprint instance. However only the record-once\naspects (app-before requests, app-after request) should be added once\non registration of the instance, whereas everything else should be\nadded on every unique name registration. This ensures that these\ntrigger under the new name as well as the old.'","'@@ -899,6 +899,14 @@ def test_blueprint_renaming(app, client) -> None:\n     def index():\n         return flask.request.endpoint\n \n+    @bp.get(""/error"")\n+    def error():\n+        flask.abort(403)\n+\n+    @bp.errorhandler(403)\n+    def forbidden(_: Exception):\n+        return ""Error"", 403\n+\n     @bp2.get(""/"")\n     def index2():\n         return flask.request.endpoint\n@@ -911,3 +919,5 @@ def test_blueprint_renaming(app, client) -> None:\n     assert client.get(""/b/"").data == b""alt.index""\n     assert client.get(""/a/a/"").data == b""bp.sub.index2""\n     assert client.get(""/b/a/"").data == b""alt.sub.index2""\n+    assert client.get(""/a/error"").data == b""Error""\n+    assert client.get(""/b/error"").data == b""Error""\n'",1.0305343511450382,1.0300751879699248
docs/quickstart.rst,docs/quickstart.rst,f353d126d199071c7933e2f62409e5532333bec5,f8ca80ce8912cc5b9e6379e26cac34121207f4de,'Update docs of rendering templates (#4153)\n\n* Update docs of rendering templates\n\n* Improve the grammar\n\nCo-authored-by: Grey Li <withlihui@gmail.com>',"'@@ -444,9 +444,9 @@ Here is an example template:\n       <h1>Hello, World!</h1>\n     {% endif %}\n \n-Inside templates you also have access to the :class:`~flask.request`,\n-:class:`~flask.session` and :class:`~flask.g` [#]_ objects\n-as well as the :func:`~flask.get_flashed_messages` function.\n+Inside templates you also have access to the :data:`~flask.Flask.config`,\n+:class:`~flask.request`, :class:`~flask.session` and :class:`~flask.g` [#]_ objects\n+as well as the :func:`~flask.url_for` and :func:`~flask.get_flashed_messages` functions.\n \n Templates are especially useful if inheritance is used.  If you want to\n know how that works, see :doc:`patterns/templateinheritance`. Basically\n'",1.3333333333333333,1.3333333333333333
docs/templating.rst,docs/templating.rst,5fa7d2efe757e028a734d3dc56e9f13bb812a92a,f353d126d199071c7933e2f62409e5532333bec5,'Update templating.rst',"'@@ -37,7 +37,7 @@ by default:\n .. data:: config\n    :noindex:\n \n-   The current configuration object (:data:`flask.config`)\n+   The current configuration object (:data:`flask.Flask.config`)\n \n    .. versionadded:: 0.6\n \n'",1.0,1.0
docs/testing.rst,docs/testing.rst,7b696e076a8ebf22e8ad096b7278051d475c88be,f353d126d199071c7933e2f62409e5532333bec5,'Update testing.rst',"""@@ -48,20 +48,21 @@ the application for testing and initializes a new database::\n     import pytest\n \n     from flaskr import create_app\n+    from flaskr.db import init_db\n \n \n     @pytest.fixture\n     def client():\n-        db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()\n-        flaskr.app.config['TESTING'] = True\n+        db_fd, db_path = tempfile.mkstemp()\n+        app = create_app({'TESTING': True, 'DATABASE': db_path})\n \n-        with flaskr.app.test_client() as client:\n-            with flaskr.app.app_context():\n-                flaskr.init_db()\n+        with app.test_client() as client:\n+            with app.app_context():\n+                init_db()\n             yield client\n \n         os.close(db_fd)\n-        os.unlink(flaskr.app.config['DATABASE'])\n+        os.unlink(db_path)\n \n This client fixture will be called by each individual test.  It gives us a\n simple interface to the application, where we can trigger test requests to the\n""",0,0
docs/testing.rst,docs/testing.rst,35eb582bf3ddbe995681363167eb3233f539ef8b,d426b58e5748239c3403502acfd73aa6f382c64a,'Change flask.xxx to plain version in testing docs',"""@@ -225,13 +225,13 @@ temporarily.  With this you can access the :class:`~flask.request`,\n :class:`~flask.g` and :class:`~flask.session` objects like in view\n functions.  Here is a full example that demonstrates this approach::\n \n-    import flask\n+    from flask import Flask, request\n \n-    app = flask.Flask(__name__)\n+    app = Flask(__name__)\n \n     with app.test_request_context('/?name=Peter'):\n-        assert flask.request.path == '/'\n-        assert flask.request.args['name'] == 'Peter'\n+        assert request.path == '/'\n+        assert request.args['name'] == 'Peter'\n \n All the other objects that are context bound can be used in the same\n way.\n@@ -248,7 +248,7 @@ the test request context leaves the ``with`` block.  If you do want the\n :meth:`~flask.Flask.before_request` functions to be called as well, you\n need to call :meth:`~flask.Flask.preprocess_request` yourself::\n \n-    app = flask.Flask(__name__)\n+    app = Flask(__name__)\n \n     with app.test_request_context('/?name=Peter'):\n         app.preprocess_request()\n@@ -261,7 +261,7 @@ If you want to call the :meth:`~flask.Flask.after_request` functions you\n need to call into :meth:`~flask.Flask.process_response` which however\n requires that you pass it a response object::\n \n-    app = flask.Flask(__name__)\n+    app = Flask(__name__)\n \n     with app.test_request_context('/?name=Peter'):\n         resp = Response('...')\n@@ -330,7 +330,7 @@ context around for a little longer so that additional introspection can\n happen.  With Flask 0.4 this is possible by using the\n :meth:`~flask.Flask.test_client` with a ``with`` block::\n \n-    app = flask.Flask(__name__)\n+    app = Flask(__name__)\n \n     with app.test_client() as c:\n         rv = c.get('/?tequila=42')\n@@ -354,7 +354,7 @@ keep the context around and access :data:`flask.session`::\n \n     with app.test_client() as c:\n         rv = c.get('/')\n-        assert flask.session['foo'] == 42\n+        assert session['foo'] == 42\n \n This however does not make it possible to also modify the session or to\n access the session before a request was fired.  Starting with Flask 0.8 we\n""",0,0
docs/views.rst,docs/views.rst,c224832acccbb9b16485c7adeb7714c71fce1ea8,49cbb77528f6b806c69af55a37affd33d7dc8143,'Fix typo in docs/views.rst',"""@@ -113,8 +113,8 @@ Method Based Dispatching\n \n For RESTful APIs it's especially helpful to execute a different function\n for each HTTP method.  With the :class:`flask.views.MethodView` you can\n-easily do that.  Each HTTP method maps to a function with the same name\n-(just in lowercase)::\n+easily do that.  Each HTTP method maps to a method of the class with the\n+same name (just in lowercase)::\n \n     from flask.views import MethodView\n \n""",1.2,1.2
requirements/dev.txt,requirements/dev.txt,6fe9235f866fdc9a76cc086bea1512b6825713e8,ba6db2e30783f81673bb8a6b5218f7bb8efa8f27,'Bump sphinx-tabs from 3.0.0 to 3.1.0\n\nBumps [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) from 3.0.0 to 3.1.0.\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.0.0...v3.1.0)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -9,13 +9,13 @@ alabaster==0.7.12\n appdirs==1.4.4\n     # via virtualenv\n asgiref==3.3.4\n-    # via -r tests.in\n+    # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n babel==2.9.1\n     # via sphinx\n blinker==1.4\n-    # via -r tests.in\n+    # via -r requirements/tests.in\n certifi==2020.12.5\n     # via requests\n cfgv==3.3.0\n@@ -35,7 +35,7 @@ filelock==3.0.12\n     #   tox\n     #   virtualenv\n greenlet==1.1.0\n-    # via -r tests.in\n+    # via -r requirements/tests.in\n identify==2.2.4\n     # via pre-commit\n idna==2.10\n@@ -48,10 +48,10 @@ jinja2==3.0.1\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n+mypy==0.812\n+    # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n-mypy==0.812\n-    # via -r typing.in\n nodeenv==1.6.0\n     # via pre-commit\n packaging==20.9\n@@ -61,17 +61,17 @@ packaging==20.9\n     #   sphinx\n     #   tox\n pallets-sphinx-themes==2.0.1\n-    # via -r docs.in\n+    # via -r requirements/docs.in\n pep517==0.10.0\n     # via pip-tools\n pip-tools==6.1.0\n-    # via -r dev.in\n+    # via -r requirements/dev.in\n pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n pre-commit==2.13.0\n-    # via -r dev.in\n+    # via -r requirements/dev.in\n py==1.10.0\n     # via\n     #   pytest\n@@ -83,9 +83,9 @@ pygments==2.9.0\n pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n-    # via -r tests.in\n+    # via -r requirements/tests.in\n python-dotenv==0.17.1\n-    # via -r tests.in\n+    # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n pyyaml==5.4.1\n@@ -98,17 +98,17 @@ six==1.16.0\n     #   virtualenv\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx-issues==1.2.0\n-    # via -r docs.in\n-sphinx-tabs==3.0.0\n-    # via -r docs.in\n sphinx==4.0.2\n     # via\n-    #   -r docs.in\n+    #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==3.1.0\n+    # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n@@ -118,7 +118,7 @@ sphinxcontrib-htmlhelp==1.0.3\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n-    # via -r docs.in\n+    # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n@@ -130,7 +130,7 @@ toml==0.10.2\n     #   pytest\n     #   tox\n tox==3.23.1\n-    # via -r dev.in\n+    # via -r requirements/dev.in\n typed-ast==1.4.3\n     # via mypy\n typing-extensions==3.10.0.0\n'",0,0
requirements/docs.txt,requirements/docs.txt,6fe9235f866fdc9a76cc086bea1512b6825713e8,ba6db2e30783f81673bb8a6b5218f7bb8efa8f27,'Bump sphinx-tabs from 3.0.0 to 3.1.0\n\nBumps [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) from 3.0.0 to 3.1.0.\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.0.0...v3.1.0)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -29,7 +29,7 @@ packaging==20.9\n     #   pallets-sphinx-themes\n     #   sphinx\n pallets-sphinx-themes==2.0.1\n-    # via -r docs.in\n+    # via -r requirements/docs.in\n pygments==2.9.0\n     # via\n     #   sphinx\n@@ -42,17 +42,17 @@ requests==2.25.1\n     # via sphinx\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx-issues==1.2.0\n-    # via -r docs.in\n-sphinx-tabs==3.0.0\n-    # via -r docs.in\n sphinx==4.0.2\n     # via\n-    #   -r docs.in\n+    #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==3.1.0\n+    # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n@@ -62,7 +62,7 @@ sphinxcontrib-htmlhelp==1.0.3\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n-    # via -r docs.in\n+    # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.4\n'",0,0
requirements/dev.txt,requirements/dev.txt,d0f19f790520293c2c40207d492695e582347b1a,01e804a6e1207410042edddf4c6b8d75b5fe4b63,'Bump asgiref from 3.3.4 to 3.4.0\n\nBumps [asgiref](https://github.com/django/asgiref) from 3.3.4 to 3.4.0.\n- [Release notes](https://github.com/django/asgiref/releases)\n- [Changelog](https://github.com/django/asgiref/blob/main/CHANGELOG.txt)\n- [Commits](https://github.com/django/asgiref/commits)\n\n---\nupdated-dependencies:\n- dependency-name: asgiref\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,7 +8,7 @@ alabaster==0.7.12\n     # via sphinx\n appdirs==1.4.4\n     # via virtualenv\n-asgiref==3.3.4\n+asgiref==3.4.0\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n'",0,0
requirements/tests.txt,requirements/tests.txt,d0f19f790520293c2c40207d492695e582347b1a,01e804a6e1207410042edddf4c6b8d75b5fe4b63,'Bump asgiref from 3.3.4 to 3.4.0\n\nBumps [asgiref](https://github.com/django/asgiref) from 3.3.4 to 3.4.0.\n- [Release notes](https://github.com/django/asgiref/releases)\n- [Changelog](https://github.com/django/asgiref/blob/main/CHANGELOG.txt)\n- [Commits](https://github.com/django/asgiref/commits)\n\n---\nupdated-dependencies:\n- dependency-name: asgiref\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile requirements/tests.in\n #\n-asgiref==3.3.4\n+asgiref==3.4.0\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,ae53c32048dbef4ce1aaf9ecb86925e507118a38,e145f9c6ecc27f771db1b202518f6aa5e7ae7762,'Bump pip-tools from 6.1.0 to 6.2.0\n\nBumps [pip-tools](https://github.com/jazzband/pip-tools) from 6.1.0 to 6.2.0.\n- [Release notes](https://github.com/jazzband/pip-tools/releases)\n- [Changelog](https://github.com/jazzband/pip-tools/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/jazzband/pip-tools/compare/6.1.0...6.2.0)\n\n---\nupdated-dependencies:\n- dependency-name: pip-tools\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -64,7 +64,7 @@ pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n pep517==0.10.0\n     # via pip-tools\n-pip-tools==6.1.0\n+pip-tools==6.2.0\n     # via -r requirements/dev.in\n pluggy==0.13.1\n     # via\n@@ -141,6 +141,8 @@ virtualenv==20.4.6\n     # via\n     #   pre-commit\n     #   tox\n+wheel==0.36.2\n+    # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n # pip\n'",0,0
requirements/dev.txt,requirements/dev.txt,c9796f85c787b5d01417a50ba25354be3b620afc,e145f9c6ecc27f771db1b202518f6aa5e7ae7762,'Bump python-dotenv from 0.17.1 to 0.18.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.17.1 to 0.18.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.17.1...v0.18.0)\n\n---\nupdated-dependencies:\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -84,7 +84,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.17.1\n+python-dotenv==0.18.0\n     # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n'",0,0
requirements/tests.txt,requirements/tests.txt,c9796f85c787b5d01417a50ba25354be3b620afc,e145f9c6ecc27f771db1b202518f6aa5e7ae7762,'Bump python-dotenv from 0.17.1 to 0.18.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.17.1 to 0.18.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.17.1...v0.18.0)\n\n---\nupdated-dependencies:\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -24,7 +24,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.17.1\n+python-dotenv==0.18.0\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,72078148c017e2e3e6d6b6716aa8f9f16e0bf2f5,e145f9c6ecc27f771db1b202518f6aa5e7ae7762,'Bump mypy from 0.812 to 0.910\n\nBumps [mypy](https://github.com/python/mypy) from 0.812 to 0.910.\n- [Release notes](https://github.com/python/mypy/releases)\n- [Commits](https://github.com/python/mypy/compare/v0.812...v0.910)\n\n---\nupdated-dependencies:\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -48,7 +48,7 @@ jinja2==3.0.1\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-mypy==0.812\n+mypy==0.910\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -125,14 +125,13 @@ sphinxcontrib-serializinghtml==1.1.4\n     # via sphinx\n toml==0.10.2\n     # via\n+    #   mypy\n     #   pep517\n     #   pre-commit\n     #   pytest\n     #   tox\n tox==3.23.1\n     # via -r requirements/dev.in\n-typed-ast==1.4.3\n-    # via mypy\n typing-extensions==3.10.0.0\n     # via mypy\n urllib3==1.26.5\n'",0,0
requirements/typing.txt,requirements/typing.txt,72078148c017e2e3e6d6b6716aa8f9f16e0bf2f5,e145f9c6ecc27f771db1b202518f6aa5e7ae7762,'Bump mypy from 0.812 to 0.910\n\nBumps [mypy](https://github.com/python/mypy) from 0.812 to 0.910.\n- [Release notes](https://github.com/python/mypy/releases)\n- [Commits](https://github.com/python/mypy/compare/v0.812...v0.910)\n\n---\nupdated-dependencies:\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -4,11 +4,11 @@\n #\n #    pip-compile requirements/typing.in\n #\n+mypy==0.910\n+    # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n-mypy==0.812\n-    # via -r requirements/typing.in\n-typed-ast==1.4.3\n+toml==0.10.2\n     # via mypy\n typing-extensions==3.10.0.0\n     # via mypy\n'",0,0
setup.cfg,setup.cfg,9fa8b0f7ad64c0cb3729978f88b5ebdc296ba750,72078148c017e2e3e6d6b6716aa8f9f16e0bf2f5,'Fix typing import issues',"'@@ -112,3 +112,6 @@ ignore_missing_imports = True\n \n [mypy-dotenv.*]\n ignore_missing_imports = True\n+\n+[mypy-cryptography.*]\n+ignore_missing_imports = True\n'",0,0
tox.ini,tox.ini,9fa8b0f7ad64c0cb3729978f88b5ebdc296ba750,72078148c017e2e3e6d6b6716aa8f9f16e0bf2f5,'Fix typing import issues',"'@@ -24,7 +24,7 @@ commands = pre-commit run --all-files --show-diff-on-failure\n \n [testenv:typing]\n deps = -r requirements/typing.txt\n-commands = mypy\n+commands = mypy --install-types --non-interactive\n \n [testenv:docs]\n deps = -r requirements/docs.txt\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,f9ccca97e476a9ffc1fcdf081f9f083a119c5ce2,28507154fa5fa6f4ec32b3e7d205a9a6fc8cf8de,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.15.0 → v2.20.0](https://github.com/asottile/pyupgrade/compare/v2.15.0...v2.20.0)\n- [github.com/psf/black: 21.5b1 → 21.6b0](https://github.com/psf/black/compare/21.5b1...21.6b0)\n- [github.com/pre-commit/pre-commit-hooks: v3.4.0 → v4.0.1](https://github.com/pre-commit/pre-commit-hooks/compare/v3.4.0...v4.0.1)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.15.0\n+    rev: v2.20.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -14,7 +14,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.5b1\n+    rev: 21.6b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n@@ -25,7 +25,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v3.4.0\n+    rev: v4.0.1\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
src/flask/app.py,src/flask/app.py,6e1b72096d5ae1e2cc4d8592ff8271b62548d9cf,7023145f797573b2386de90bd81ac67eced93b47,'Fix typo in docs',"'@@ -1306,7 +1306,7 @@ class Flask(Scaffold):\n \n         .. versionchanged:: 1.0\n             Exceptions are looked up by code *and* by MRO, so\n-            ``HTTPExcpetion`` subclasses can be handled with a catch-all\n+            ``HTTPException`` subclasses can be handled with a catch-all\n             handler for the base ``HTTPException``.\n \n         .. versionadded:: 0.3\n'",3.0441176470588234,3.0441176470588234
docs/api.rst,docs/api.rst,922e91b278c19bee1154ea32a7c0c99f87d4d9b6,6e1b72096d5ae1e2cc4d8592ff8271b62548d9cf,'Omit the type attribute of script tag',"'@@ -256,7 +256,7 @@ the filter to render data inside ``<script>`` tags.\n \n .. sourcecode:: html+jinja\n \n-    <script type=text/javascript>\n+    <script>\n         const names = {{ names|tosjon }};\n         renderChart(names, {{ axis_data|tojson }});\n     </script>\n'",1.25,1.25
docs/patterns/jquery.rst,docs/patterns/jquery.rst,29c09a92c45bc0120331dd22f7079f9161d72ab7,922e91b278c19bee1154ea32a7c0c99f87d4d9b6,'Omit the type attribute of script tag',"'@@ -23,8 +23,7 @@ to add a script statement to the bottom of your ``<body>`` to load jQuery:\n \n .. sourcecode:: html\n \n-   <script type=text/javascript src=""{{\n-     url_for(\'static\', filename=\'jquery.js\') }}""></script>\n+   <script src=""{{ url_for(\'static\', filename=\'jquery.js\') }}""></script>\n \n Another method is using Google\'s `AJAX Libraries API\n <https://developers.google.com/speed/libraries/>`_ to load jQuery:\n@@ -59,7 +58,7 @@ like this:\n \n .. sourcecode:: html+jinja\n \n-   <script type=text/javascript>\n+   <script>\n      $SCRIPT_ROOT = {{ request.script_root|tojson }};\n    </script>\n \n@@ -109,7 +108,7 @@ usually a better idea to have that in a separate script file:\n \n .. sourcecode:: html\n \n-    <script type=text/javascript>\n+    <script>\n       $(function() {\n         $(\'a#calculate\').bind(\'click\', function() {\n           $.getJSON($SCRIPT_ROOT + \'/_add_numbers\', {\n'",1.0,1.0
docs/deploying/asgi.rst,docs/deploying/asgi.rst,85c35bd6155e14f5c0829a88533d13321408bda5,6e1b72096d5ae1e2cc4d8592ff8271b62548d9cf,'Fix link in ASGI docs (#4191)\n\n* Fix link in ASGI docs\r\n\r\n* Improve the wording of ASGI docs\r\n\r\nCo-authored-by: Grey Li <withlihui@gmail.com>',"""@@ -5,7 +5,7 @@ ASGI\n \n If you'd like to use an ASGI server you will need to utilise WSGI to\n ASGI middleware. The asgiref\n-[WsgiToAsgi](https://github.com/django/asgiref#wsgi-to-asgi-adapter)\n+`WsgiToAsgi <https://github.com/django/asgiref#wsgi-to-asgi-adapter>`_\n adapter is recommended as it integrates with the event loop used for\n Flask's :ref:`async_await` support. You can use the adapter by\n wrapping the Flask app,\n@@ -21,7 +21,7 @@ wrapping the Flask app,\n \n     asgi_app = WsgiToAsgi(app)\n \n-and then serving the ``asgi_app`` with the asgi server, e.g. using\n+and then serving the ``asgi_app`` with the ASGI server, e.g. using\n `Hypercorn <https://gitlab.com/pgjones/hypercorn>`_,\n \n .. sourcecode:: text\n""",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,3127c304ecbc54387792c9ddff3c266645b67b8a,85c35bd6155e14f5c0829a88533d13321408bda5,'Small SQL formatting fix',"'@@ -270,7 +270,7 @@ messages.\n \n         with app.app_context():\n             assert get_db().execute(\n-                ""select * from user where username = \'a\'"",\n+                ""SELECT * FROM user WHERE username = \'a\'"",\n             ).fetchone() is not None\n \n \n'",1.0,1.0
examples/tutorial/tests/test_auth.py,examples/tutorial/tests/test_auth.py,3127c304ecbc54387792c9ddff3c266645b67b8a,85c35bd6155e14f5c0829a88533d13321408bda5,'Small SQL formatting fix',"'@@ -16,7 +16,7 @@ def test_register(client, app):\n     # test that the user was inserted into the database\n     with app.app_context():\n         assert (\n-            get_db().execute(""select * from user where username = \'a\'"").fetchone()\n+            get_db().execute(""SELECT * FROM user WHERE username = \'a\'"").fetchone()\n             is not None\n         )\n \n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,bb3217b35017f269e3ce411bf070904e3858d307,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump tox from 3.23.1 to 3.24.1\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.23.1 to 3.24.1.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.23.1...3.24.1)\n\n---\nupdated-dependencies:\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -130,7 +130,7 @@ toml==0.10.2\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.23.1\n+tox==3.24.1\n     # via -r requirements/dev.in\n typing-extensions==3.10.0.0\n     # via mypy\n'",0,0
requirements/dev.txt,requirements/dev.txt,7a3b8bbb897991a791ce51a870866648577054b9,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump sphinx from 4.0.2 to 4.1.2\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.0.2 to 4.1.2.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.0.2...v4.1.2)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -98,7 +98,7 @@ six==1.16.0\n     #   virtualenv\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx==4.0.2\n+sphinx==4.1.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -113,7 +113,7 @@ sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3\n+sphinxcontrib-htmlhelp==2.0.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n@@ -121,7 +121,7 @@ sphinxcontrib-log-cabinet==1.0.1\n     # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4\n+sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n toml==0.10.2\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,7a3b8bbb897991a791ce51a870866648577054b9,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump sphinx from 4.0.2 to 4.1.2\n\nBumps [sphinx](https://github.com/sphinx-doc/sphinx) from 4.0.2 to 4.1.2.\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v4.0.2...v4.1.2)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -42,7 +42,7 @@ requests==2.25.1\n     # via sphinx\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx==4.0.2\n+sphinx==4.1.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -57,7 +57,7 @@ sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3\n+sphinxcontrib-htmlhelp==2.0.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n@@ -65,7 +65,7 @@ sphinxcontrib-log-cabinet==1.0.1\n     # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4\n+sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n urllib3==1.26.5\n     # via requests\n'",0,0
requirements/dev.txt,requirements/dev.txt,3e507a70cafd5bab0acd570ee8ca06d46063b543,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump python-dotenv from 0.18.0 to 0.19.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.18.0 to 0.19.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.18.0...v0.19.0)\n\n---\nupdated-dependencies:\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -84,7 +84,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.18.0\n+python-dotenv==0.19.0\n     # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n'",0,0
requirements/tests.txt,requirements/tests.txt,3e507a70cafd5bab0acd570ee8ca06d46063b543,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump python-dotenv from 0.18.0 to 0.19.0\n\nBumps [python-dotenv](https://github.com/theskumar/python-dotenv) from 0.18.0 to 0.19.0.\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v0.18.0...v0.19.0)\n\n---\nupdated-dependencies:\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -24,7 +24,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.18.0\n+python-dotenv==0.19.0\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
requirements/dev.txt,requirements/dev.txt,c0f583fdc1f9153020e05321f4444a2e2d541c2d,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump asgiref from 3.4.0 to 3.4.1\n\nBumps [asgiref](https://github.com/django/asgiref) from 3.4.0 to 3.4.1.\n- [Release notes](https://github.com/django/asgiref/releases)\n- [Changelog](https://github.com/django/asgiref/blob/main/CHANGELOG.txt)\n- [Commits](https://github.com/django/asgiref/commits/3.4.1)\n\n---\nupdated-dependencies:\n- dependency-name: asgiref\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,7 +8,7 @@ alabaster==0.7.12\n     # via sphinx\n appdirs==1.4.4\n     # via virtualenv\n-asgiref==3.4.0\n+asgiref==3.4.1\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n'",0,0
requirements/tests.txt,requirements/tests.txt,c0f583fdc1f9153020e05321f4444a2e2d541c2d,7a73171edc3bcffef96ef6367977ab3ae9af9350,'Bump asgiref from 3.4.0 to 3.4.1\n\nBumps [asgiref](https://github.com/django/asgiref) from 3.4.0 to 3.4.1.\n- [Release notes](https://github.com/django/asgiref/releases)\n- [Changelog](https://github.com/django/asgiref/blob/main/CHANGELOG.txt)\n- [Commits](https://github.com/django/asgiref/commits/3.4.1)\n\n---\nupdated-dependencies:\n- dependency-name: asgiref\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile requirements/tests.in\n #\n-asgiref==3.4.0\n+asgiref==3.4.1\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,f2b1dc45bd0baf5a5302893bc068e37b4c4d4575,e248e09399b21b0d21d3c8005a30c4dc4d430faa,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.20.0 → v2.23.1](https://github.com/asottile/pyupgrade/compare/v2.20.0...v2.23.1)\n- [github.com/asottile/reorder_python_imports: v2.5.0 → v2.6.0](https://github.com/asottile/reorder_python_imports/compare/v2.5.0...v2.6.0)\n- [github.com/psf/black: 21.6b0 → 21.7b0](https://github.com/psf/black/compare/21.6b0...21.7b0)',"'@@ -2,19 +2,19 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.20.0\n+    rev: v2.23.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.5.0\n+    rev: v2.6.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.6b0\n+    rev: 21.7b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,858cc9cace5c13941495d8a789668523e1ae87c7,e7b16b5ef2b22e2f4e76dc1be5747e21196fcbc5,"'Wrong variable name use\n\nFile upload section upload_file function in  file request parameter variable name is ""file"". but file save method in secure_filename function in use ""f.filename"".'","'@@ -626,7 +626,7 @@ Werkzeug provides for you::\n     def upload_file():\n         if request.method == \'POST\':\n             file = request.files[\'the_file\']\n-            file.save(f""/var/www/uploads/{secure_filename(f.filename)}"")\n+            file.save(f""/var/www/uploads/{secure_filename(file.filename)}"")\n         ...\n \n For some better examples, see :doc:`patterns/fileuploads`.\n'",1.3333333333333333,1.3333333333333333
src/flask/config.py,src/flask/config.py,e18ed45c8863ac645f3ce17a155034b8384e726f,a0afb6f37558261acb914b3c6afd04d918016cfb,'document return value for config loading methods',"'@@ -83,7 +83,7 @@ class Config(dict):\n         :param variable_name: name of the environment variable\n         :param silent: set to ``True`` if you want silent failure for missing\n                        files.\n-        :return: bool. ``True`` if able to load config, ``False`` otherwise.\n+        :return: ``True`` if the file was loaded successfully.\n         """"""\n         rv = os.environ.get(variable_name)\n         if not rv:\n@@ -107,6 +107,7 @@ class Config(dict):\n                          root path.\n         :param silent: set to ``True`` if you want silent failure for missing\n                        files.\n+        :return: ``True`` if the file was loaded successfully.\n \n         .. versionadded:: 0.7\n            `silent` parameter.\n@@ -185,6 +186,7 @@ class Config(dict):\n         :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn\'t exist.\n+        :return: ``True`` if the file was loaded successfully.\n \n         .. versionadded:: 2.0\n         """"""\n@@ -209,6 +211,7 @@ class Config(dict):\n         :param filename: The path to the JSON file. This can be an\n             absolute path or relative to the config root path.\n         :param silent: Ignore the file if it doesn\'t exist.\n+        :return: ``True`` if the file was loaded successfully.\n \n         .. deprecated:: 2.0.0\n             Will be removed in Flask 2.1. Use :meth:`from_file` instead.\n@@ -232,6 +235,7 @@ class Config(dict):\n     ) -> bool:\n         """"""Updates the config like :meth:`update` ignoring items with non-upper\n         keys.\n+        :return: Always returns ``True``.\n \n         .. versionadded:: 0.11\n         """"""\n'",2.75,2.75
docs/tutorial/views.rst,docs/tutorial/views.rst,51196575479e34c3ea43612e1eb770db3aa5d114,50b7dcbab343c93bb6738bbf116a177e72b1d9ec,'safer check for existing user in tutorial\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -91,18 +91,18 @@ write templates to generate the HTML form.\n                 error = \'Username is required.\'\n             elif not password:\n                 error = \'Password is required.\'\n-            elif db.execute(\n-                \'SELECT id FROM user WHERE username = ?\', (username,)\n-            ).fetchone() is not None:\n-                error = f""User {username} is already registered.""\n \n             if error is None:\n-                db.execute(\n-                    \'INSERT INTO user (username, password) VALUES (?, ?)\',\n-                    (username, generate_password_hash(password))\n-                )\n-                db.commit()\n-                return redirect(url_for(\'auth.login\'))\n+                try:\n+                    db.execute(\n+                        ""INSERT INTO user (username, password) VALUES (?, ?)"",\n+                        (username, generate_password_hash(password)),\n+                    )\n+                    db.commit()\n+                except db.IntegrityError:\n+                    error = f""User {username} is already registered.""\n+                else:\n+                    return redirect(url_for(""auth.login""))\n \n             flash(error)\n \n@@ -125,26 +125,25 @@ Here\'s what the ``register`` view function is doing:\n \n #.  Validate that ``username`` and ``password`` are not empty.\n \n-#.  Validate that ``username`` is not already registered by querying the\n-    database and checking if a result is returned.\n-    :meth:`db.execute <sqlite3.Connection.execute>` takes a SQL query\n-    with ``?`` placeholders for any user input, and a tuple of values\n-    to replace the placeholders with. The database library will take\n-    care of escaping the values so you are not vulnerable to a\n-    *SQL injection attack*.\n+#.  If validation succeeds, insert the new user data into the database.\n \n-    :meth:`~sqlite3.Cursor.fetchone` returns one row from the query.\n-    If the query returned no results, it returns ``None``. Later,\n-    :meth:`~sqlite3.Cursor.fetchall` is used, which returns a list of\n-    all results.\n+    -   :meth:`db.execute <sqlite3.Connection.execute>` takes a SQL\n+        query with ``?`` placeholders for any user input, and a tuple of\n+        values to replace the placeholders with. The database library\n+        will take care of escaping the values so you are not vulnerable\n+        to a *SQL injection attack*.\n \n-#.  If validation succeeds, insert the new user data into the database.\n-    For security, passwords should never be stored in the database\n-    directly. Instead,\n-    :func:`~werkzeug.security.generate_password_hash` is used to\n-    securely hash the password, and that hash is stored. Since this\n-    query modifies data, :meth:`db.commit() <sqlite3.Connection.commit>`\n-    needs to be called afterwards to save the changes.\n+    -   For security, passwords should never be stored in the database\n+        directly. Instead,\n+        :func:`~werkzeug.security.generate_password_hash` is used to\n+        securely hash the password, and that hash is stored. Since this\n+        query modifies data,\n+        :meth:`db.commit() <sqlite3.Connection.commit>` needs to be\n+        called afterwards to save the changes.\n+\n+    -   An :exc:`sqlite3.IntegrityError` will occur if the username\n+        already exists, which should be shown to the user as another\n+        validation error.\n \n #.  After storing the user, they are redirected to the login page.\n     :func:`url_for` generates the URL for the login view based on its\n@@ -200,6 +199,11 @@ There are a few differences from the ``register`` view:\n \n #.  The user is queried first and stored in a variable for later use.\n \n+    :meth:`~sqlite3.Cursor.fetchone` returns one row from the query.\n+    If the query returned no results, it returns ``None``. Later,\n+    :meth:`~sqlite3.Cursor.fetchall` will be used, which returns a list\n+    of all results.\n+\n #.  :func:`~werkzeug.security.check_password_hash` hashes the submitted\n     password in the same way as the stored hash and securely compares\n     them. If they match, the password is valid.\n'",1.5,1.5
examples/tutorial/flaskr/auth.py,examples/tutorial/flaskr/auth.py,51196575479e34c3ea43612e1eb770db3aa5d114,50b7dcbab343c93bb6738bbf116a177e72b1d9ec,'safer check for existing user in tutorial\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -60,21 +60,21 @@ def register():\n             error = ""Username is required.""\n         elif not password:\n             error = ""Password is required.""\n-        elif (\n-            db.execute(""SELECT id FROM user WHERE username = ?"", (username,)).fetchone()\n-            is not None\n-        ):\n-            error = f""User {username} is already registered.""\n \n         if error is None:\n-            # the name is available, store it in the database and go to\n-            # the login page\n-            db.execute(\n-                ""INSERT INTO user (username, password) VALUES (?, ?)"",\n-                (username, generate_password_hash(password)),\n-            )\n-            db.commit()\n-            return redirect(url_for(""auth.login""))\n+            try:\n+                db.execute(\n+                    ""INSERT INTO user (username, password) VALUES (?, ?)"",\n+                    (username, generate_password_hash(password)),\n+                )\n+                db.commit()\n+            except db.IntegrityError:\n+                # The username was already taken, which caused the\n+                # commit to fail. Show a validation error.\n+                error = f""User {username} is already registered.""\n+            else:\n+                # Success, go to the login page.\n+                return redirect(url_for(""auth.login""))\n \n         flash(error)\n \n'",2.8333333333333335,2.8333333333333335
CHANGES.rst,CHANGES.rst,9a2adfba4d4310b005c222fcdfb85e96e3e6661d,187f6ce4096222119b8490d7e3c671e4e41f64b6,'static_folder can be a pathlib.Path',"'@@ -13,6 +13,8 @@ Unreleased\n -   Support View and MethodView instances with async handlers. :issue:`4112`\n -   Enhance typing of ``app.errorhandler`` decorator. :issue:`4095`\n -   Fix registering a blueprint twice with differing names. :issue:`4124`\n+-   Fix the type of ``static_folder`` to accept ``pathlib.Path``.\n+    :issue:`4150`\n \n \n Version 2.0.1\n'",0,0
src/flask/app.py,src/flask/app.py,9a2adfba4d4310b005c222fcdfb85e96e3e6661d,187f6ce4096222119b8490d7e3c671e4e41f64b6,'static_folder can be a pathlib.Path',"'@@ -389,7 +389,7 @@ class Flask(Scaffold):\n         self,\n         import_name: str,\n         static_url_path: t.Optional[str] = None,\n-        static_folder: t.Optional[str] = ""static"",\n+        static_folder: t.Optional[t.Union[str, os.PathLike]] = ""static"",\n         static_host: t.Optional[str] = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n'",3.0441176470588234,3.0441176470588234
src/flask/blueprints.py,src/flask/blueprints.py,9a2adfba4d4310b005c222fcdfb85e96e3e6661d,187f6ce4096222119b8490d7e3c671e4e41f64b6,'static_folder can be a pathlib.Path',"'@@ -1,3 +1,4 @@\n+import os\n import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n@@ -175,7 +176,7 @@ class Blueprint(Scaffold):\n         self,\n         name: str,\n         import_name: str,\n-        static_folder: t.Optional[str] = None,\n+        static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n         template_folder: t.Optional[str] = None,\n         url_prefix: t.Optional[str] = None,\n'",2.3636363636363638,2.3636363636363638
src/flask/scaffold.py,src/flask/scaffold.py,9a2adfba4d4310b005c222fcdfb85e96e3e6661d,187f6ce4096222119b8490d7e3c671e4e41f64b6,'static_folder can be a pathlib.Path',"'@@ -92,7 +92,7 @@ class Scaffold:\n     def __init__(\n         self,\n         import_name: str,\n-        static_folder: t.Optional[str] = None,\n+        static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n         template_folder: t.Optional[str] = None,\n         root_path: t.Optional[str] = None,\n@@ -101,7 +101,7 @@ class Scaffold:\n         #: to. Do not change this once it is set by the constructor.\n         self.import_name = import_name\n \n-        self.static_folder = static_folder\n+        self.static_folder = static_folder  # type: ignore\n         self.static_url_path = static_url_path\n \n         #: The path to the templates folder, relative to\n@@ -257,7 +257,7 @@ class Scaffold:\n             return None\n \n     @static_folder.setter\n-    def static_folder(self, value: t.Optional[str]) -> None:\n+    def static_folder(self, value: t.Optional[t.Union[str, os.PathLike]]) -> None:\n         if value is not None:\n             value = os.fspath(value).rstrip(r""\\/"")\n \n'",1.8205128205128205,1.8205128205128205
CHANGES.rst,CHANGES.rst,892ae955093cc3b7925230ff7bc346a6afb14f5d,06cf349bb8b69d9946c3a6a64d32eb552cc7c28b,'jsonify encodes decimal to str',"'@@ -15,6 +15,8 @@ Unreleased\n -   Fix registering a blueprint twice with differing names. :issue:`4124`\n -   Fix the type of ``static_folder`` to accept ``pathlib.Path``.\n     :issue:`4150`\n+-   ``jsonify`` handles ``decimal.Decimal`` by encoding to ``str``.\n+    :issue:`4157`\n \n \n Version 2.0.1\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,892ae955093cc3b7925230ff7bc346a6afb14f5d,06cf349bb8b69d9946c3a6a64d32eb552cc7c28b,'jsonify encodes decimal to str',"'@@ -1,3 +1,4 @@\n+import decimal\n import io\n import json as _json\n import typing as t\n@@ -47,7 +48,7 @@ class JSONEncoder(_json.JSONEncoder):\n         """"""\n         if isinstance(o, date):\n             return http_date(o)\n-        if isinstance(o, uuid.UUID):\n+        if isinstance(o, (decimal.Decimal, uuid.UUID)):\n             return str(o)\n         if dataclasses and dataclasses.is_dataclass(o):\n             return dataclasses.asdict(o)\n@@ -117,6 +118,9 @@ def dumps(obj: t.Any, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> str:\n         or defaults.\n     :param kwargs: Extra arguments passed to :func:`json.dumps`.\n \n+    .. versionchanged:: 2.0.2\n+        :class:`decimal.Decimal` is supported by converting to a string.\n+\n     .. versionchanged:: 2.0\n         ``encoding`` is deprecated and will be removed in Flask 2.1.\n \n@@ -324,6 +328,9 @@ def jsonify(*args: t.Any, **kwargs: t.Any) -> ""Response"":\n     debug mode or if :data:`JSONIFY_PRETTYPRINT_REGULAR` is ``True``,\n     the output will be formatted to be easier to read.\n \n+    .. versionchanged:: 2.0.2\n+        :class:`decimal.Decimal` is supported by converting to a string.\n+\n     .. versionchanged:: 0.11\n         Added support for serializing top-level arrays. This introduces\n         a security risk in ancient browsers. See :ref:`security-json`.\n'",4.0,4.0
tests/test_json.py,tests/test_json.py,892ae955093cc3b7925230ff7bc346a6afb14f5d,06cf349bb8b69d9946c3a6a64d32eb552cc7c28b,'jsonify encodes decimal to str',"'@@ -1,4 +1,5 @@\n import datetime\n+import decimal\n import io\n import uuid\n \n@@ -187,6 +188,11 @@ def test_jsonify_uuid_types(app, client):\n     assert rv_uuid == test_uuid\n \n \n+def test_json_decimal():\n+    rv = flask.json.dumps(decimal.Decimal(""0.003""))\n+    assert rv == \'""0.003""\'\n+\n+\n def test_json_attr(app, client):\n     @app.route(""/add"", methods=[""POST""])\n     def add():\n'",1.2444444444444445,1.2391304347826086
CHANGES.rst,CHANGES.rst,aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a,66d9d4fa8d07dd50e4cb3036a9ae5f92c4693b84,'correctly handle raising deferred errors in cli lazy loading',"'@@ -17,6 +17,8 @@ Unreleased\n     :issue:`4150`\n -   ``jsonify`` handles ``decimal.Decimal`` by encoding to ``str``.\n     :issue:`4157`\n+-   Correctly handle raising deferred errors in CLI lazy loading.\n+    :issue:`4096`\n \n \n Version 2.0.1\n'",0,0
src/flask/cli.py,src/flask/cli.py,aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a,66d9d4fa8d07dd50e4cb3036a9ae5f92c4693b84,'correctly handle raising deferred errors in cli lazy loading',"'@@ -312,7 +312,7 @@ class DispatchingApp:\n         self.loader = loader\n         self._app = None\n         self._lock = Lock()\n-        self._bg_loading_exc_info = None\n+        self._bg_loading_exc = None\n \n         if use_eager_loading is None:\n             use_eager_loading = os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true""\n@@ -328,23 +328,24 @@ class DispatchingApp:\n             with self._lock:\n                 try:\n                     self._load_unlocked()\n-                except Exception:\n-                    self._bg_loading_exc_info = sys.exc_info()\n+                except Exception as e:\n+                    self._bg_loading_exc = e\n \n         t = Thread(target=_load_app, args=())\n         t.start()\n \n     def _flush_bg_loading_exception(self):\n         __traceback_hide__ = True  # noqa: F841\n-        exc_info = self._bg_loading_exc_info\n-        if exc_info is not None:\n-            self._bg_loading_exc_info = None\n-            raise exc_info\n+        exc = self._bg_loading_exc\n+\n+        if exc is not None:\n+            self._bg_loading_exc = None\n+            raise exc\n \n     def _load_unlocked(self):\n         __traceback_hide__ = True  # noqa: F841\n         self._app = rv = self.loader()\n-        self._bg_loading_exc_info = None\n+        self._bg_loading_exc = None\n         return rv\n \n     def __call__(self, environ, start_response):\n'",4.222222222222222,4.222222222222222
tests/test_cli.py,tests/test_cli.py,aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a,66d9d4fa8d07dd50e4cb3036a9ae5f92c4693b84,'correctly handle raising deferred errors in cli lazy loading',"'@@ -17,6 +17,7 @@ from flask import Blueprint\n from flask import current_app\n from flask import Flask\n from flask.cli import AppGroup\n+from flask.cli import DispatchingApp\n from flask.cli import dotenv\n from flask.cli import find_best_app\n from flask.cli import FlaskGroup\n@@ -659,3 +660,7 @@ def test_click_7_deprecated():\n             pytest.deprecated_call(cli_main, match="".* Click 7 is deprecated"")\n         else:\n             cli_main()\n+\n+\n+def test_load_in_background():\n+    pytest.raises(Exception, DispatchingApp, ""appname123"")\n'",1.0615384615384615,1.0606060606060606
tests/test_cli.py,tests/test_cli.py,2305b056c3a3161c92ea61e6fceb67262766bc40,aa6dd09c2cab5eb15a45d73b5ade24b7b4131c5a,'add test for lazy loading error',"'@@ -311,6 +311,23 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert app.name == ""testapp""\n \n \n+def test_lazy_load_error(monkeypatch):\n+    """"""When using lazy loading, the correct exception should be\n+    re-raised.\n+    """"""\n+\n+    class BadExc(Exception):\n+        pass\n+\n+    def bad_load():\n+        raise BadExc\n+\n+    lazy = DispatchingApp(bad_load, use_eager_loading=False)\n+\n+    with pytest.raises(BadExc):\n+        lazy._flush_bg_loading_exception()\n+\n+\n def test_with_appcontext(runner):\n     @click.command()\n     @with_appcontext\n@@ -660,7 +677,3 @@ def test_click_7_deprecated():\n             pytest.deprecated_call(cli_main, match="".* Click 7 is deprecated"")\n         else:\n             cli_main()\n-\n-\n-def test_load_in_background():\n-    pytest.raises(Exception, DispatchingApp, ""appname123"")\n'",1.0606060606060606,1.0597014925373134
CHANGES.rst,CHANGES.rst,9f0da9b770abfe3376ca0bbb09c535b42071feeb,c3f923d0e0aba3ed5b6013c5d022021e4ae059cf,'cli loader handles kwargs in app factory',"'@@ -19,6 +19,8 @@ Unreleased\n     :issue:`4157`\n -   Correctly handle raising deferred errors in CLI lazy loading.\n     :issue:`4096`\n+-   The CLI loader handles ``**kwargs`` in a ``create_app`` function.\n+    :issue:`4170`\n \n \n Version 2.0.1\n'",0,0
src/flask/cli.py,src/flask/cli.py,9f0da9b770abfe3376ca0bbb09c535b42071feeb,c3f923d0e0aba3ed5b6013c5d022021e4ae059cf,'cli loader handles kwargs in app factory',"'@@ -103,18 +103,21 @@ def call_factory(script_info, app_factory, args=None, kwargs=None):\n         )\n         kwargs[""script_info""] = script_info\n \n-    if (\n-        not args\n-        and len(sig.parameters) == 1\n-        and next(iter(sig.parameters.values())).default is inspect.Parameter.empty\n-    ):\n-        warnings.warn(\n-            ""Script info is deprecated and will not be passed as the""\n-            "" single argument to the app factory function in Flask""\n-            "" 2.1."",\n-            DeprecationWarning,\n-        )\n-        args.append(script_info)\n+    if not args and len(sig.parameters) == 1:\n+        first_parameter = next(iter(sig.parameters.values()))\n+\n+        if (\n+            first_parameter.default is inspect.Parameter.empty\n+            # **kwargs is reported as an empty default, ignore it\n+            and first_parameter.kind is not inspect.Parameter.VAR_KEYWORD\n+        ):\n+            warnings.warn(\n+                ""Script info is deprecated and will not be passed as the""\n+                "" single argument to the app factory function in Flask""\n+                "" 2.1."",\n+                DeprecationWarning,\n+            )\n+            args.append(script_info)\n \n     return app_factory(*args, **kwargs)\n \n'",4.222222222222222,4.25
tests/test_cli.py,tests/test_cli.py,9f0da9b770abfe3376ca0bbb09c535b42071feeb,c3f923d0e0aba3ed5b6013c5d022021e4ae059cf,'cli loader handles kwargs in app factory',"'@@ -74,6 +74,15 @@ def test_find_best_app(test_apps):\n     assert isinstance(app, Flask)\n     assert app.name == ""appname""\n \n+    class Module:\n+        @staticmethod\n+        def create_app(**kwargs):\n+            return Flask(""appname"")\n+\n+    app = find_best_app(script_info, Module)\n+    assert isinstance(app, Flask)\n+    assert app.name == ""appname""\n+\n     class Module:\n         @staticmethod\n         def create_app(foo):\n'",1.0597014925373134,1.0588235294117647
README.rst,README.rst,9830fd8a806d677a279ed60bf3fa33ebb5691a5f,ef3a82a2820082f7d9f2ca963c9dff7eb1ea9687,'update pip link',"'@@ -26,7 +26,7 @@ Install and update using `pip`_:\n \n     $ pip install -U Flask\n \n-.. _pip: https://pip.pypa.io/en/stable/quickstart/\n+.. _pip: https://pip.pypa.io/en/stable/getting-started/\n \n \n A Simple Example\n'",1.0,1.0
requirements/dev.txt,requirements/dev.txt,d9133e9369eb03886dc1a847c4b96d826ebbf398,9c91bb3ce2965174bca5ae080a62912f964ebcd6,'update requirements',"'@@ -1,30 +1,30 @@\n #\n-# This file is autogenerated by pip-compile\n+# This file is autogenerated by pip-compile with python 3.9\n # To update, run:\n #\n #    pip-compile requirements/dev.in\n #\n alabaster==0.7.12\n     # via sphinx\n-appdirs==1.4.4\n-    # via virtualenv\n-asgiref==3.3.4\n+asgiref==3.4.1\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n babel==2.9.1\n     # via sphinx\n+backports.entry-points-selectable==1.1.0\n+    # via virtualenv\n blinker==1.4\n     # via -r requirements/tests.in\n-certifi==2020.12.5\n+certifi==2021.5.30\n     # via requests\n cfgv==3.3.0\n     # via pre-commit\n-chardet==4.0.0\n+charset-normalizer==2.0.4\n     # via requests\n click==8.0.1\n     # via pip-tools\n-distlib==0.3.1\n+distlib==0.3.2\n     # via virtualenv\n docutils==0.16\n     # via\n@@ -34,11 +34,11 @@ filelock==3.0.12\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.1.0\n+greenlet==1.1.1\n     # via -r requirements/tests.in\n-identify==2.2.4\n+identify==2.2.13\n     # via pre-commit\n-idna==2.10\n+idna==3.2\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n@@ -48,13 +48,13 @@ jinja2==3.0.1\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n+mypy==0.910\n+    # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n-mypy==0.812\n-    # via -r requirements/typing.in\n nodeenv==1.6.0\n     # via pre-commit\n-packaging==20.9\n+packaging==21.0\n     # via\n     #   pallets-sphinx-themes\n     #   pytest\n@@ -62,15 +62,17 @@ packaging==20.9\n     #   tox\n pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n-pep517==0.10.0\n+pep517==0.11.0\n     # via pip-tools\n-pip-tools==6.1.0\n+pip-tools==6.2.0\n     # via -r requirements/dev.in\n+platformdirs==2.2.0\n+    # via virtualenv\n pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.12.1\n+pre-commit==2.14.0\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n@@ -84,13 +86,13 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.17.1\n+python-dotenv==0.19.0\n     # via -r requirements/tests.in\n pytz==2021.1\n     # via babel\n pyyaml==5.4.1\n     # via pre-commit\n-requests==2.25.1\n+requests==2.26.0\n     # via sphinx\n six==1.16.0\n     # via\n@@ -98,22 +100,22 @@ six==1.16.0\n     #   virtualenv\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx-issues==1.2.0\n-    # via -r requirements/docs.in\n-sphinx-tabs==3.0.0\n-    # via -r requirements/docs.in\n-sphinx==4.0.2\n+sphinx==4.1.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==3.2.0\n+    # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3\n+sphinxcontrib-htmlhelp==2.0.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n@@ -121,26 +123,28 @@ sphinxcontrib-log-cabinet==1.0.1\n     # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4\n+sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n toml==0.10.2\n     # via\n-    #   pep517\n+    #   mypy\n     #   pre-commit\n     #   pytest\n     #   tox\n-tox==3.23.1\n+tomli==1.2.1\n+    # via pep517\n+tox==3.24.1\n     # via -r requirements/dev.in\n-typed-ast==1.4.3\n-    # via mypy\n typing-extensions==3.10.0.0\n     # via mypy\n-urllib3==1.26.4\n+urllib3==1.26.6\n     # via requests\n-virtualenv==20.4.6\n+virtualenv==20.7.1\n     # via\n     #   pre-commit\n     #   tox\n+wheel==0.37.0\n+    # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n # pip\n'",0,0
requirements/docs.txt,requirements/docs.txt,d9133e9369eb03886dc1a847c4b96d826ebbf398,9c91bb3ce2965174bca5ae080a62912f964ebcd6,'update requirements',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile\n+# This file is autogenerated by pip-compile with python 3.9\n # To update, run:\n #\n #    pip-compile requirements/docs.in\n@@ -8,15 +8,15 @@ alabaster==0.7.12\n     # via sphinx\n babel==2.9.1\n     # via sphinx\n-certifi==2020.12.5\n+certifi==2021.5.30\n     # via requests\n-chardet==4.0.0\n+charset-normalizer==2.0.4\n     # via requests\n docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==2.10\n+idna==3.2\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n@@ -24,7 +24,7 @@ jinja2==3.0.1\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-packaging==20.9\n+packaging==21.0\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n@@ -38,26 +38,26 @@ pyparsing==2.4.7\n     # via packaging\n pytz==2021.1\n     # via babel\n-requests==2.25.1\n+requests==2.26.0\n     # via sphinx\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx-issues==1.2.0\n-    # via -r requirements/docs.in\n-sphinx-tabs==3.0.0\n-    # via -r requirements/docs.in\n-sphinx==4.0.2\n+sphinx==4.1.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n+sphinx-issues==1.2.0\n+    # via -r requirements/docs.in\n+sphinx-tabs==3.2.0\n+    # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==1.0.3\n+sphinxcontrib-htmlhelp==2.0.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n@@ -65,9 +65,9 @@ sphinxcontrib-log-cabinet==1.0.1\n     # via -r requirements/docs.in\n sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.4\n+sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.4\n+urllib3==1.26.6\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/tests.txt,requirements/tests.txt,d9133e9369eb03886dc1a847c4b96d826ebbf398,9c91bb3ce2965174bca5ae080a62912f964ebcd6,'update requirements',"'@@ -1,20 +1,20 @@\n #\n-# This file is autogenerated by pip-compile\n+# This file is autogenerated by pip-compile with python 3.9\n # To update, run:\n #\n #    pip-compile requirements/tests.in\n #\n-asgiref==3.3.4\n+asgiref==3.4.1\n     # via -r requirements/tests.in\n attrs==21.2.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n-greenlet==1.1.0\n+greenlet==1.1.1\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n-packaging==20.9\n+packaging==21.0\n     # via pytest\n pluggy==0.13.1\n     # via pytest\n@@ -24,7 +24,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.4\n     # via -r requirements/tests.in\n-python-dotenv==0.17.1\n+python-dotenv==0.19.0\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,d9133e9369eb03886dc1a847c4b96d826ebbf398,9c91bb3ce2965174bca5ae080a62912f964ebcd6,'update requirements',"'@@ -1,14 +1,14 @@\n #\n-# This file is autogenerated by pip-compile\n+# This file is autogenerated by pip-compile with python 3.9\n # To update, run:\n #\n #    pip-compile requirements/typing.in\n #\n+mypy==0.910\n+    # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n-mypy==0.812\n-    # via -r requirements/typing.in\n-typed-ast==1.4.3\n+toml==0.10.2\n     # via mypy\n typing-extensions==3.10.0.0\n     # via mypy\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,78e82a3ef74e433ac4e0bda521877cbb60bc77ba,d9133e9369eb03886dc1a847c4b96d826ebbf398,'update pre-commit hooks',"'@@ -2,19 +2,19 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.15.0\n+    rev: v2.23.3\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.5.0\n+    rev: v2.6.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.5b1\n+    rev: 21.7b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n@@ -25,7 +25,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v3.4.0\n+    rev: v4.0.1\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
requirements/dev.txt,requirements/dev.txt,31ce7d61cd184f377203dca8081becde1a50c730,78e82a3ef74e433ac4e0bda521877cbb60bc77ba,'add type stub packages',"'@@ -18,12 +18,16 @@ blinker==1.4\n     # via -r requirements/tests.in\n certifi==2021.5.30\n     # via requests\n+cffi==1.14.6\n+    # via cryptography\n cfgv==3.3.0\n     # via pre-commit\n charset-normalizer==2.0.4\n     # via requests\n click==8.0.1\n     # via pip-tools\n+cryptography==3.4.7\n+    # via -r requirements/typing.in\n distlib==0.3.2\n     # via virtualenv\n docutils==0.16\n@@ -78,6 +82,8 @@ py==1.10.0\n     # via\n     #   pytest\n     #   tox\n+pycparser==2.20\n+    # via cffi\n pygments==2.9.0\n     # via\n     #   sphinx\n@@ -135,6 +141,10 @@ tomli==1.2.1\n     # via pep517\n tox==3.24.1\n     # via -r requirements/dev.in\n+types-dataclasses==0.1.7\n+    # via -r requirements/typing.in\n+types-setuptools==57.0.2\n+    # via -r requirements/typing.in\n typing-extensions==3.10.0.0\n     # via mypy\n urllib3==1.26.6\n'",0,0
requirements/typing.in,requirements/typing.in,31ce7d61cd184f377203dca8081becde1a50c730,78e82a3ef74e433ac4e0bda521877cbb60bc77ba,'add type stub packages',"'@@ -1 +1,4 @@\n mypy\n+types-dataclasses\n+types-setuptools\n+cryptography\n'",0,0
requirements/typing.txt,requirements/typing.txt,31ce7d61cd184f377203dca8081becde1a50c730,78e82a3ef74e433ac4e0bda521877cbb60bc77ba,'add type stub packages',"'@@ -4,11 +4,21 @@\n #\n #    pip-compile requirements/typing.in\n #\n+cffi==1.14.6\n+    # via cryptography\n+cryptography==3.4.7\n+    # via -r requirements/typing.in\n mypy==0.910\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n+pycparser==2.20\n+    # via cffi\n toml==0.10.2\n     # via mypy\n+types-dataclasses==0.1.7\n+    # via -r requirements/typing.in\n+types-setuptools==57.0.2\n+    # via -r requirements/typing.in\n typing-extensions==3.10.0.0\n     # via mypy\n'",0,0
tox.ini,tox.ini,d4b540eb7d1f1b18ed516a0dd4e7d1ac5e537f38,13c0eef54c53be6c9c5c78626004b6a63ec09cc3,'install type stubs from requirements',"'@@ -24,7 +24,7 @@ commands = pre-commit run --all-files --show-diff-on-failure\n \n [testenv:typing]\n deps = -r requirements/typing.txt\n-commands = mypy --install-types --non-interactive\n+commands = mypy\n \n [testenv:docs]\n deps = -r requirements/docs.txt\n'",0,0
requirements/dev.txt,requirements/dev.txt,ae5ad9e1ae7307b21d301c446addcacc536f80a5,482073718863d0e47b211bd3adbc4e28fd1b643c,'add type stub packages',"'@@ -141,6 +141,8 @@ tomli==1.2.1\n     # via pep517\n tox==3.24.1\n     # via -r requirements/dev.in\n+types-contextvars==0.1.4\n+    # via -r requirements/typing.in\n types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n types-setuptools==57.0.2\n'",0,0
requirements/typing.in,requirements/typing.in,ae5ad9e1ae7307b21d301c446addcacc536f80a5,482073718863d0e47b211bd3adbc4e28fd1b643c,'add type stub packages',"'@@ -1,4 +1,5 @@\n mypy\n+types-contextvars\n types-dataclasses\n types-setuptools\n cryptography\n'",0,0
requirements/typing.txt,requirements/typing.txt,ae5ad9e1ae7307b21d301c446addcacc536f80a5,482073718863d0e47b211bd3adbc4e28fd1b643c,'add type stub packages',"'@@ -16,6 +16,8 @@ pycparser==2.20\n     # via cffi\n toml==0.10.2\n     # via mypy\n+types-contextvars==0.1.4\n+    # via -r requirements/typing.in\n types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n types-setuptools==57.0.2\n'",0,0
docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,84aa8706c0cdf28fe5de1b9170a8b686699fb0e5,ae5ad9e1ae7307b21d301c446addcacc536f80a5,'Remove the mention of Flask-Uploads in uploading docs',"'@@ -175,9 +175,8 @@ are JavaScript libraries like jQuery_ that have form plugins to ease the\n construction of progress bar.\n \n Because the common pattern for file uploads exists almost unchanged in all\n-applications dealing with uploads, there is also a Flask extension called\n-`Flask-Uploads`_ that implements a full fledged upload mechanism that\n-allows controlling which file extensions are allowed to be uploaded.\n+applications dealing with uploads, there are also some Flask extensions that\n+implement a full fledged upload mechanism that allows controlling which\n+file extensions are allowed to be uploaded.\n \n .. _jQuery: https://jquery.com/\n-.. _Flask-Uploads: https://flask-uploads.readthedocs.io/en/latest/\n'",1.0,1.0
docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,fafc132dcb0597b40ae836d737e24a24035dc756,3261a9451aba86853e2d89e51722380558fb6e27,'Update cherokee links in docs/deploying (#4249)',"'@@ -234,5 +234,5 @@ python path.  Common problems are:\n \n .. _nginx: https://nginx.org/\n .. _lighttpd: https://www.lighttpd.net/\n-.. _cherokee: http://cherokee-project.com/\n+.. _cherokee: https://cherokee-project.com/\n .. _flup: https://pypi.org/project/flup/\n'",1.0,1.0
docs/deploying/uwsgi.rst,docs/deploying/uwsgi.rst,fafc132dcb0597b40ae836d737e24a24035dc756,3261a9451aba86853e2d89e51722380558fb6e27,'Update cherokee links in docs/deploying (#4249)',"'@@ -67,5 +67,5 @@ to have it in the URL root its a bit simpler::\n \n .. _nginx: https://nginx.org/\n .. _lighttpd: https://www.lighttpd.net/\n-.. _cherokee: http://cherokee-project.com/\n+.. _cherokee: https://cherokee-project.com/\n .. _uwsgi: https://uwsgi-docs.readthedocs.io/en/latest/\n'",0,0
requirements/dev.txt,requirements/dev.txt,b5bdcb460215b6234292eb6c0bd63abee5d5f64f,53eef278efd59222be406ff5be737f48c92f8313,'Bump cryptography from 3.4.7 to 3.4.8\n\nBumps [cryptography](https://github.com/pyca/cryptography) from 3.4.7 to 3.4.8.\n- [Release notes](https://github.com/pyca/cryptography/releases)\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/3.4.7...3.4.8)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -26,7 +26,7 @@ charset-normalizer==2.0.4\n     # via requests\n click==8.0.1\n     # via pip-tools\n-cryptography==3.4.7\n+cryptography==3.4.8\n     # via -r requirements/typing.in\n distlib==0.3.2\n     # via virtualenv\n'",0,0
requirements/typing.txt,requirements/typing.txt,b5bdcb460215b6234292eb6c0bd63abee5d5f64f,53eef278efd59222be406ff5be737f48c92f8313,'Bump cryptography from 3.4.7 to 3.4.8\n\nBumps [cryptography](https://github.com/pyca/cryptography) from 3.4.7 to 3.4.8.\n- [Release notes](https://github.com/pyca/cryptography/releases)\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/3.4.7...3.4.8)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -6,7 +6,7 @@\n #\n cffi==1.14.6\n     # via cryptography\n-cryptography==3.4.7\n+cryptography==3.4.8\n     # via -r requirements/typing.in\n mypy==0.910\n     # via -r requirements/typing.in\n'",0,0
requirements/dev.txt,requirements/dev.txt,f6e4e8ab9d44cb916e71976d48671a70ca59a692,53eef278efd59222be406ff5be737f48c92f8313,'Bump pre-commit from 2.14.0 to 2.14.1\n\nBumps [pre-commit](https://github.com/pre-commit/pre-commit) from 2.14.0 to 2.14.1.\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v2.14.0...v2.14.1)\n\n---\nupdated-dependencies:\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -76,7 +76,7 @@ pluggy==0.13.1\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.14.0\n+pre-commit==2.14.1\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n'",0,0
requirements/dev.txt,requirements/dev.txt,6d32d342336f528934829ed7a034a29af66c2822,53eef278efd59222be406ff5be737f48c92f8313,'Bump tox from 3.24.1 to 3.24.3\n\nBumps [tox](https://github.com/tox-dev/tox) from 3.24.1 to 3.24.3.\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/3.24.1...3.24.3)\n\n---\nupdated-dependencies:\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -139,7 +139,7 @@ toml==0.10.2\n     #   tox\n tomli==1.2.1\n     # via pep517\n-tox==3.24.1\n+tox==3.24.3\n     # via -r requirements/dev.in\n types-contextvars==0.1.4\n     # via -r requirements/typing.in\n'",0,0
requirements/dev.txt,requirements/dev.txt,c58ff55e19f4098998d8af0bbe9e91235da58025,048709c8e7d4d3916193bd2c735ee93c073ab686,'Bump pytest from 6.2.4 to 6.2.5\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.4 to 6.2.5.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.4...6.2.5)\n\n---\nupdated-dependencies:\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -90,7 +90,7 @@ pygments==2.9.0\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.4\n+pytest==6.2.5\n     # via -r requirements/tests.in\n python-dotenv==0.19.0\n     # via -r requirements/tests.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,c58ff55e19f4098998d8af0bbe9e91235da58025,048709c8e7d4d3916193bd2c735ee93c073ab686,'Bump pytest from 6.2.4 to 6.2.5\n\nBumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.4 to 6.2.5.\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.4...6.2.5)\n\n---\nupdated-dependencies:\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -22,7 +22,7 @@ py==1.10.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.4\n+pytest==6.2.5\n     # via -r requirements/tests.in\n python-dotenv==0.19.0\n     # via -r requirements/tests.in\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,4a37b627aef7019d3da84fd0a62fd8581ede6543,d01d26e5210e3ee4cbbdef12f05c886e08e92852,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.23.3 → v2.25.0](https://github.com/asottile/pyupgrade/compare/v2.23.3...v2.25.0)\n- [github.com/psf/black: 21.7b0 → 21.8b0](https://github.com/psf/black/compare/21.7b0...21.8b0)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.23.3\n+    rev: v2.25.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -14,7 +14,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.7b0\n+    rev: 21.8b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
docs/deploying/uwsgi.rst,docs/deploying/uwsgi.rst,e1dce5c39ac093915a34bac99c37402245fd52f4,fafc132dcb0597b40ae836d737e24a24035dc756,'Fix typo in docs (#4261)',"'@@ -37,7 +37,7 @@ If your application is accessible at root level, you can use a\n single ``/`` instead of ``/yourapplication``. ``myapp`` refers to the name of\n the file of your flask application (without extension) or the module which\n provides ``app``. ``app`` is the callable inside of your application (usually\n-the line reads ``app = Flask(__name__)``.\n+the line reads ``app = Flask(__name__)``).\n \n If you want to deploy your flask application inside of a virtual environment,\n you need to also add ``--virtualenv /path/to/virtual/environment``. You might\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,7c7b583603f85b3253b6d531d7f8e8d29060ddc7,e1dce5c39ac093915a34bac99c37402245fd52f4,'update pre-commit hooks',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.23.3\n+    rev: v2.25.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -14,7 +14,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.7b0\n+    rev: 21.8b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,313a70da6ef4b265f9334f909d946b2d9bbae701,7c7b583603f85b3253b6d531d7f8e8d29060ddc7,'update requirements',"'@@ -20,13 +20,13 @@ certifi==2021.5.30\n     # via requests\n cffi==1.14.6\n     # via cryptography\n-cfgv==3.3.0\n+cfgv==3.3.1\n     # via pre-commit\n charset-normalizer==2.0.4\n     # via requests\n click==8.0.1\n     # via pip-tools\n-cryptography==3.4.7\n+cryptography==3.4.8\n     # via -r requirements/typing.in\n distlib==0.3.2\n     # via virtualenv\n@@ -70,13 +70,13 @@ pep517==0.11.0\n     # via pip-tools\n pip-tools==6.2.0\n     # via -r requirements/dev.in\n-platformdirs==2.2.0\n+platformdirs==2.3.0\n     # via virtualenv\n-pluggy==0.13.1\n+pluggy==1.0.0\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.14.0\n+pre-commit==2.15.0\n     # via -r requirements/dev.in\n py==1.10.0\n     # via\n@@ -84,13 +84,13 @@ py==1.10.0\n     #   tox\n pycparser==2.20\n     # via cffi\n-pygments==2.9.0\n+pygments==2.10.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.4\n+pytest==6.2.5\n     # via -r requirements/tests.in\n python-dotenv==0.19.0\n     # via -r requirements/tests.in\n@@ -139,7 +139,7 @@ toml==0.10.2\n     #   tox\n tomli==1.2.1\n     # via pep517\n-tox==3.24.1\n+tox==3.24.3\n     # via -r requirements/dev.in\n types-contextvars==0.1.4\n     # via -r requirements/typing.in\n@@ -147,11 +147,11 @@ types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n types-setuptools==57.0.2\n     # via -r requirements/typing.in\n-typing-extensions==3.10.0.0\n+typing-extensions==3.10.0.2\n     # via mypy\n urllib3==1.26.6\n     # via requests\n-virtualenv==20.7.1\n+virtualenv==20.7.2\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,313a70da6ef4b265f9334f909d946b2d9bbae701,7c7b583603f85b3253b6d531d7f8e8d29060ddc7,'update requirements',"'@@ -30,7 +30,7 @@ packaging==21.0\n     #   sphinx\n pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n-pygments==2.9.0\n+pygments==2.10.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n'",0,0
requirements/tests.txt,requirements/tests.txt,313a70da6ef4b265f9334f909d946b2d9bbae701,7c7b583603f85b3253b6d531d7f8e8d29060ddc7,'update requirements',"'@@ -16,13 +16,13 @@ iniconfig==1.1.1\n     # via pytest\n packaging==21.0\n     # via pytest\n-pluggy==0.13.1\n+pluggy==1.0.0\n     # via pytest\n py==1.10.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n-pytest==6.2.4\n+pytest==6.2.5\n     # via -r requirements/tests.in\n python-dotenv==0.19.0\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,313a70da6ef4b265f9334f909d946b2d9bbae701,7c7b583603f85b3253b6d531d7f8e8d29060ddc7,'update requirements',"'@@ -6,7 +6,7 @@\n #\n cffi==1.14.6\n     # via cryptography\n-cryptography==3.4.7\n+cryptography==3.4.8\n     # via -r requirements/typing.in\n mypy==0.910\n     # via -r requirements/typing.in\n@@ -22,5 +22,5 @@ types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n types-setuptools==57.0.2\n     # via -r requirements/typing.in\n-typing-extensions==3.10.0.0\n+typing-extensions==3.10.0.2\n     # via mypy\n'",0,0
docs/debugging.rst,docs/debugging.rst,9d9108fe25600c566643f902255d74ff68d88967,313a70da6ef4b265f9334f909d946b2d9bbae701,'fix: typo docs/debugging.rst:72\n\ndocs/debugging.rst:72: controled ==> controlled',"'@@ -69,7 +69,7 @@ enables the debugger and reloader.\n \n ``FLASK_ENV`` can only be set as an environment variable. When running\n from Python code, passing ``debug=True`` enables debug mode, which is\n-mostly equivalent. Debug mode can be controled separately from\n+mostly equivalent. Debug mode can be controlled separately from\n ``FLASK_ENV`` with the ``FLASK_DEBUG`` environment variable as well.\n \n .. code-block:: python\n'",0,0
src/flask/scaffold.py,src/flask/scaffold.py,aa1d34dc51fc63dabc46f388822ba73b15d3ef97,24aab7a08d0b3f40d9fc9e49706854ef8be7a05f,'Fix grammatical error (#4268)\n\n* Fix grammatical error\n\n* Update scaffold.py\n\n* Update scaffold.py',"'@@ -589,10 +589,10 @@ class Scaffold:\n         stack of active contexts.  This becomes relevant if you are using\n         such constructs in tests.\n \n-        Teardown functions must avoid raising exceptions, since they . If they\n-        execute code that might fail they\n-        will have to surround the execution of these code by try/except\n-        statements and log occurring errors.\n+        Teardown functions must avoid raising exceptions. If\n+        they execute code that might fail they\n+        will have to surround the execution of that code with try/except\n+        statements and log any errors.\n \n         When a teardown function was called because of an exception it will\n         be passed an error object.\n'",1.8205128205128205,1.8205128205128205
src/flask/app.py,src/flask/app.py,6a4bf9eec13e035cf10ecc16e462049b4c967e41,ca0033c11a1c325944b1c6abf4e18e8831326d27,'use exception chaining\n\nfixes flake8-bugbear B904',"'@@ -1621,7 +1621,7 @@ class Flask(Scaffold):\n         except ImportError:\n             raise RuntimeError(\n                 ""Install Flask with the \'async\' extra in order to use async views.""\n-            )\n+            ) from None\n \n         # Check that Werkzeug isn\'t using its fallback ContextVar class.\n         if ContextVar.__module__ == ""werkzeug.local"":\n@@ -1727,7 +1727,7 @@ class Flask(Scaffold):\n                         "" response. The return type must be a string,""\n                         "" dict, tuple, Response instance, or WSGI""\n                         f"" callable, but it was a {type(rv).__name__}.""\n-                    ).with_traceback(sys.exc_info()[2])\n+                    ).with_traceback(sys.exc_info()[2]) from None\n             else:\n                 raise TypeError(\n                     ""The view function did not return a valid""\n'",3.0441176470588234,3.0441176470588234
src/flask/cli.py,src/flask/cli.py,6a4bf9eec13e035cf10ecc16e462049b4c967e41,ca0033c11a1c325944b1c6abf4e18e8831326d27,'use exception chaining\n\nfixes flake8-bugbear B904',"'@@ -69,15 +69,16 @@ def find_best_app(script_info, module):\n \n                 if isinstance(app, Flask):\n                     return app\n-            except TypeError:\n+            except TypeError as e:\n                 if not _called_with_wrong_args(app_factory):\n                     raise\n+\n                 raise NoAppException(\n                     f""Detected factory {attr_name!r} in module {module.__name__!r},""\n                     "" but could not call it without arguments. Use""\n                     f"" \\""FLASK_APP=\'{module.__name__}:{attr_name}(args)\'\\""""\n                     "" to specify arguments.""\n-                )\n+                ) from e\n \n     raise NoAppException(\n         ""Failed to find Flask application or factory in module""\n@@ -161,7 +162,7 @@ def find_app_by_string(script_info, module, app_name):\n     except SyntaxError:\n         raise NoAppException(\n             f""Failed to parse {app_name!r} as an attribute name or function call.""\n-        )\n+        ) from None\n \n     if isinstance(expr, ast.Name):\n         name = expr.id\n@@ -184,7 +185,7 @@ def find_app_by_string(script_info, module, app_name):\n             # message with the full expression instead.\n             raise NoAppException(\n                 f""Failed to parse arguments as literal values: {app_name!r}.""\n-            )\n+            ) from None\n     else:\n         raise NoAppException(\n             f""Failed to parse {app_name!r} as an attribute name or function call.""\n@@ -192,17 +193,17 @@ def find_app_by_string(script_info, module, app_name):\n \n     try:\n         attr = getattr(module, name)\n-    except AttributeError:\n+    except AttributeError as e:\n         raise NoAppException(\n             f""Failed to find attribute {name!r} in {module.__name__!r}.""\n-        )\n+        ) from e\n \n     # If the attribute is a function, call it with any args and kwargs\n     # to get the real application.\n     if inspect.isfunction(attr):\n         try:\n             app = call_factory(script_info, attr, args, kwargs)\n-        except TypeError:\n+        except TypeError as e:\n             if not _called_with_wrong_args(attr):\n                 raise\n \n@@ -210,7 +211,7 @@ def find_app_by_string(script_info, module, app_name):\n                 f""The factory {app_name!r} in module""\n                 f"" {module.__name__!r} could not be called with the""\n                 "" specified arguments.""\n-            )\n+            ) from e\n     else:\n         app = attr\n \n@@ -257,16 +258,15 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n \n     try:\n         __import__(module_name)\n-    except ImportError:\n+    except ImportError as e:\n         # Reraise the ImportError if it occurred within the imported module.\n         # Determine this by checking whether the trace has a depth > 1.\n         if sys.exc_info()[2].tb_next:\n             raise NoAppException(\n-                f""While importing {module_name!r}, an ImportError was""\n-                f"" raised:\\n\\n{traceback.format_exc()}""\n-            )\n+                f""While importing {module_name!r}, an ImportError was raised.""\n+            ) from e\n         elif raise_if_not_found:\n-            raise NoAppException(f""Could not import {module_name!r}."")\n+            raise NoAppException(f""Could not import {module_name!r}."") from e\n         else:\n             return\n \n@@ -725,7 +725,7 @@ class CertParamType(click.ParamType):\n                         ""Using ad-hoc certificates requires the cryptography library."",\n                         ctx,\n                         param,\n-                    )\n+                    ) from None\n \n                 return value\n \n'",4.25,4.25
src/flask/debughelpers.py,src/flask/debughelpers.py,6a4bf9eec13e035cf10ecc16e462049b4c967e41,ca0033c11a1c325944b1c6abf4e18e8831326d27,'use exception chaining\n\nfixes flake8-bugbear B904',"'@@ -83,10 +83,11 @@ def attach_enctype_error_multidict(request):\n         def __getitem__(self, key):\n             try:\n                 return oldcls.__getitem__(self, key)\n-            except KeyError:\n+            except KeyError as e:\n                 if key not in request.form:\n                     raise\n-                raise DebugFilesKeyError(request, key)\n+\n+                raise DebugFilesKeyError(request, key) from e\n \n     newcls.__name__ = oldcls.__name__\n     newcls.__module__ = oldcls.__module__\n'",4.0,4.0
src/flask/scaffold.py,src/flask/scaffold.py,6a4bf9eec13e035cf10ecc16e462049b4c967e41,ca0033c11a1c325944b1c6abf4e18e8831326d27,'use exception chaining\n\nfixes flake8-bugbear B904',"'@@ -715,7 +715,7 @@ class Scaffold:\n                 f""\'{code_or_exception}\' is not a recognized HTTP error""\n                 "" code. Use a subclass of HTTPException with that code""\n                 "" instead.""\n-            )\n+            ) from None\n \n         self.error_handler_spec[None][code][exc_class] = t.cast(\n             ""ErrorHandlerCallable[Exception]"", f\n'",1.8205128205128205,1.8205128205128205
src/flask/signals.py,src/flask/signals.py,6a4bf9eec13e035cf10ecc16e462049b4c967e41,ca0033c11a1c325944b1c6abf4e18e8831326d27,'use exception chaining\n\nfixes flake8-bugbear B904',"'@@ -29,7 +29,7 @@ except ImportError:\n             raise RuntimeError(\n                 ""Signalling support is unavailable because the blinker""\n                 "" library is not installed.""\n-            )\n+            ) from None\n \n         connect = connect_via = connected_to = temporarily_connected_to = _fail\n         disconnect = _fail\n'",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,42a6da2da38af65a0f097bb88e3e2bee8f137222,34ff7d73a76ddbd1a6bafc7842589dd532c950f4,'update requirements',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.25.0\n+    rev: v2.29.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -14,7 +14,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.8b0\n+    rev: 21.9b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,42a6da2da38af65a0f097bb88e3e2bee8f137222,34ff7d73a76ddbd1a6bafc7842589dd532c950f4,'update requirements',"'@@ -22,25 +22,25 @@ cffi==1.14.6\n     # via cryptography\n cfgv==3.3.1\n     # via pre-commit\n-charset-normalizer==2.0.4\n+charset-normalizer==2.0.6\n     # via requests\n click==8.0.1\n     # via pip-tools\n-cryptography==3.4.8\n+cryptography==35.0.0\n     # via -r requirements/typing.in\n-distlib==0.3.2\n+distlib==0.3.3\n     # via virtualenv\n docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.0.12\n+filelock==3.2.0\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.1.1\n+greenlet==1.1.2\n     # via -r requirements/tests.in\n-identify==2.2.13\n+identify==2.2.15\n     # via pre-commit\n idna==3.2\n     # via requests\n@@ -68,9 +68,9 @@ pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n pep517==0.11.0\n     # via pip-tools\n-pip-tools==6.2.0\n+pip-tools==6.3.0\n     # via -r requirements/dev.in\n-platformdirs==2.3.0\n+platformdirs==2.4.0\n     # via virtualenv\n pluggy==1.0.0\n     # via\n@@ -106,7 +106,7 @@ six==1.16.0\n     #   virtualenv\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx==4.1.2\n+sphinx==4.2.0\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -139,19 +139,19 @@ toml==0.10.2\n     #   tox\n tomli==1.2.1\n     # via pep517\n-tox==3.24.3\n+tox==3.24.4\n     # via -r requirements/dev.in\n types-contextvars==0.1.4\n     # via -r requirements/typing.in\n types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n-types-setuptools==57.0.2\n+types-setuptools==57.4.0\n     # via -r requirements/typing.in\n typing-extensions==3.10.0.2\n     # via mypy\n-urllib3==1.26.6\n+urllib3==1.26.7\n     # via requests\n-virtualenv==20.7.2\n+virtualenv==20.8.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,42a6da2da38af65a0f097bb88e3e2bee8f137222,34ff7d73a76ddbd1a6bafc7842589dd532c950f4,'update requirements',"'@@ -10,7 +10,7 @@ babel==2.9.1\n     # via sphinx\n certifi==2021.5.30\n     # via requests\n-charset-normalizer==2.0.4\n+charset-normalizer==2.0.6\n     # via requests\n docutils==0.16\n     # via\n@@ -42,7 +42,7 @@ requests==2.26.0\n     # via sphinx\n snowballstemmer==2.1.0\n     # via sphinx\n-sphinx==4.1.2\n+sphinx==4.2.0\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -67,7 +67,7 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.6\n+urllib3==1.26.7\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/tests.txt,requirements/tests.txt,42a6da2da38af65a0f097bb88e3e2bee8f137222,34ff7d73a76ddbd1a6bafc7842589dd532c950f4,'update requirements',"'@@ -10,7 +10,7 @@ attrs==21.2.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n-greenlet==1.1.1\n+greenlet==1.1.2\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,42a6da2da38af65a0f097bb88e3e2bee8f137222,34ff7d73a76ddbd1a6bafc7842589dd532c950f4,'update requirements',"'@@ -6,7 +6,7 @@\n #\n cffi==1.14.6\n     # via cryptography\n-cryptography==3.4.8\n+cryptography==35.0.0\n     # via -r requirements/typing.in\n mypy==0.910\n     # via -r requirements/typing.in\n@@ -20,7 +20,7 @@ types-contextvars==0.1.4\n     # via -r requirements/typing.in\n types-dataclasses==0.1.7\n     # via -r requirements/typing.in\n-types-setuptools==57.0.2\n+types-setuptools==57.4.0\n     # via -r requirements/typing.in\n typing-extensions==3.10.0.2\n     # via mypy\n'",0,0
docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,3a78f501e9eadd9225a00194aefc54dbdca1df74,3b83d0c75b3cc473260d2ca43c36bd2fd57b1abf,'Fix broken link to Flask-WTF',"'@@ -19,7 +19,7 @@ forms.\n    fun.  You can get it from `PyPI\n    <https://pypi.org/project/Flask-WTF/>`_.\n \n-.. _Flask-WTF: https://flask-wtf.readthedocs.io/en/stable/\n+.. _Flask-WTF: https://flask-wtf.readthedocs.io/\n \n The Forms\n ---------\n'",3.0,3.0
src/flask/app.py,src/flask/app.py,22933a8cb424ffd65f2bec5bbfdbfa7e42105470,56c8bddf6b3daea411dde9917a3cc47edcc5a61e,'fix docs for Flask.test_client_class',"'@@ -366,7 +366,8 @@ class Flask(Scaffold):\n     #: .. versionadded:: 1.1.0\n     url_map_class = Map\n \n-    #: the test client that is used with when `test_client` is used.\n+    #: The :meth:`test_client` method creates an instance of this test\n+    #: client class. Defaults to :class:`~flask.testing.FlaskClient`.\n     #:\n     #: .. versionadded:: 0.7\n     test_client_class: t.Optional[t.Type[""FlaskClient""]] = None\n'",3.0441176470588234,3.0441176470588234
docs/appcontext.rst,docs/appcontext.rst,1a40d9b9761b304150c3b82c656dbb0e425e8e2e,b4094b35ef76e471bccf22c459104547f61f1a46,'fix grammar in links to app and request context',"'@@ -8,7 +8,7 @@ a request, CLI command, or other activity. Rather than passing the\n application around to each function, the :data:`current_app` and\n :data:`g` proxies are accessed instead.\n \n-This is similar to the :doc:`/reqcontext`, which keeps track of\n+This is similar to :doc:`/reqcontext`, which keeps track of\n request-level data during a request. A corresponding application context\n is pushed when a request context is pushed.\n \n'",1.6666666666666667,1.6666666666666667
docs/reqcontext.rst,docs/reqcontext.rst,1a40d9b9761b304150c3b82c656dbb0e425e8e2e,b4094b35ef76e471bccf22c459104547f61f1a46,'fix grammar in links to app and request context',"'@@ -8,7 +8,7 @@ request. Rather than passing the request object to each function that\n runs during a request, the :data:`request` and :data:`session` proxies\n are accessed instead.\n \n-This is similar to the :doc:`/appcontext`, which keeps track of the\n+This is similar to :doc:`/appcontext`, which keeps track of the\n application-level data independent of a request. A corresponding\n application context is pushed when a request context is pushed.\n \n@@ -33,8 +33,8 @@ Lifetime of the Context\n -----------------------\n \n When a Flask application begins handling a request, it pushes a request\n-context, which also pushes an :doc:`/appcontext`. When the request ends\n-it pops the request context then the application context.\n+context, which also pushes an :doc:`app context </appcontext>`. When the\n+request ends it pops the request context then the application context.\n \n The context is unique to each thread (or other worker type).\n :data:`request` cannot be passed to another thread, the other thread\n'",0,0
docs/shell.rst,docs/shell.rst,1a40d9b9761b304150c3b82c656dbb0e425e8e2e,b4094b35ef76e471bccf22c459104547f61f1a46,'fix grammar in links to app and request context',"""@@ -21,8 +21,7 @@ that these functions are not only there for interactive shell usage, but\n also for unit testing and other situations that require a faked request\n context.\n \n-Generally it's recommended that you read the :doc:`reqcontext`\n-chapter of the documentation first.\n+Generally it's recommended that you read :doc:`reqcontext` first.\n \n Command Line Interface\n ----------------------\n""",0,0
artwork/LICENSE.rst,artwork/LICENSE.rst,76858515944121ae3faf699f85ab2c4b7806d3d1,f8c881b887bf97930700f79fc91a729b018959d0,'fix list numbering',"'@@ -10,7 +10,7 @@ following conditions are met:\n 1.  Redistributions of source code must retain the above copyright\n     notice and this list of conditions.\n \n-3.  Neither the name of the copyright holder nor the names of its\n+2.  Neither the name of the copyright holder nor the names of its\n     contributors may be used to endorse or promote products derived from\n     this software without specific prior written permission.\n \n'",0,0
CHANGES.rst,CHANGES.rst,166a2a6207027bff07fdfc5590ce04f9b37e9e8f,4346498c85848c53843b810537b83a8f6124c9d3,"'Fix callback order for nested blueprints\n\nHandlers registered via url_value_preprocessor, before_request,\ncontext_processor, and url_defaults are called in downward order: First\non the app and last on the current blueprint.\n\nHandlers registered via after_request and teardown_request are called\nin upward order: First on the current blueprint and last on the app.'","'@@ -21,6 +21,9 @@ Unreleased\n     :issue:`4096`\n -   The CLI loader handles ``**kwargs`` in a ``create_app`` function.\n     :issue:`4170`\n+-   Fix the order of ``before_request`` and other callbacks that trigger\n+    before the view returns. They are called from the app down to the\n+    closest nested blueprint. :issue:`4229`\n \n \n Version 2.0.1\n'",0,0
src/flask/app.py,src/flask/app.py,166a2a6207027bff07fdfc5590ce04f9b37e9e8f,4346498c85848c53843b810537b83a8f6124c9d3,"'Fix callback order for nested blueprints\n\nHandlers registered via url_value_preprocessor, before_request,\ncontext_processor, and url_defaults are called in downward order: First\non the app and last on the current blueprint.\n\nHandlers registered via after_request and teardown_request are called\nin upward order: First on the current blueprint and last on the app.'","'@@ -745,12 +745,12 @@ class Flask(Scaffold):\n         :param context: the context as a dictionary that is updated in place\n                         to add extra variables.\n         """"""\n-        funcs: t.Iterable[\n-            TemplateContextProcessorCallable\n-        ] = self.template_context_processors[None]\n+        funcs: t.Iterable[TemplateContextProcessorCallable] = []\n+        if None in self.template_context_processors:\n+            funcs = chain(funcs, self.template_context_processors[None])\n         reqctx = _request_ctx_stack.top\n         if reqctx is not None:\n-            for bp in request.blueprints:\n+            for bp in reversed(request.blueprints):\n                 if bp in self.template_context_processors:\n                     funcs = chain(funcs, self.template_context_processors[bp])\n         orig_ctx = context.copy()\n@@ -1806,7 +1806,9 @@ class Flask(Scaffold):\n             # This is called by url_for, which can be called outside a\n             # request, can\'t use request.blueprints.\n             bps = _split_blueprint_path(endpoint.rpartition(""."")[0])\n-            bp_funcs = chain.from_iterable(self.url_default_functions[bp] for bp in bps)\n+            bp_funcs = chain.from_iterable(\n+                self.url_default_functions[bp] for bp in reversed(bps)\n+            )\n             funcs = chain(funcs, bp_funcs)\n \n         for func in funcs:\n@@ -1846,19 +1848,17 @@ class Flask(Scaffold):\n         further request handling is stopped.\n         """"""\n \n-        funcs: t.Iterable[URLValuePreprocessorCallable] = self.url_value_preprocessors[\n-            None\n-        ]\n-        for bp in request.blueprints:\n-            if bp in self.url_value_preprocessors:\n-                funcs = chain(funcs, self.url_value_preprocessors[bp])\n+        funcs: t.Iterable[URLValuePreprocessorCallable] = []\n+        for name in chain([None], reversed(request.blueprints)):\n+            if name in self.url_value_preprocessors:\n+                funcs = chain(funcs, self.url_value_preprocessors[name])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n-        funcs: t.Iterable[BeforeRequestCallable] = self.before_request_funcs[None]\n-        for bp in request.blueprints:\n-            if bp in self.before_request_funcs:\n-                funcs = chain(funcs, self.before_request_funcs[bp])\n+        funcs: t.Iterable[BeforeRequestCallable] = []\n+        for name in chain([None], reversed(request.blueprints)):\n+            if name in self.before_request_funcs:\n+                funcs = chain(funcs, self.before_request_funcs[name])\n         for func in funcs:\n             rv = self.ensure_sync(func)()\n             if rv is not None:\n@@ -1881,11 +1881,9 @@ class Flask(Scaffold):\n         """"""\n         ctx = _request_ctx_stack.top\n         funcs: t.Iterable[AfterRequestCallable] = ctx._after_request_functions\n-        for bp in request.blueprints:\n-            if bp in self.after_request_funcs:\n-                funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n-        if None in self.after_request_funcs:\n-            funcs = chain(funcs, reversed(self.after_request_funcs[None]))\n+        for name in chain(request.blueprints, [None]):\n+            if name in self.after_request_funcs:\n+                funcs = chain(funcs, reversed(self.after_request_funcs[name]))\n         for handler in funcs:\n             response = self.ensure_sync(handler)(response)\n         if not self.session_interface.is_null_session(ctx.session):\n@@ -1917,12 +1915,10 @@ class Flask(Scaffold):\n         """"""\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n-        funcs: t.Iterable[TeardownCallable] = reversed(\n-            self.teardown_request_funcs[None]\n-        )\n-        for bp in request.blueprints:\n-            if bp in self.teardown_request_funcs:\n-                funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n+        funcs: t.Iterable[TeardownCallable] = []\n+        for name in chain(request.blueprints, [None]):\n+            if name in self.teardown_request_funcs:\n+                funcs = chain(funcs, reversed(self.teardown_request_funcs[name]))\n         for func in funcs:\n             self.ensure_sync(func)(exc)\n         request_tearing_down.send(self, exc=exc)\n'",3.0441176470588234,3.0441176470588234
tests/test_blueprints.py,tests/test_blueprints.py,166a2a6207027bff07fdfc5590ce04f9b37e9e8f,4346498c85848c53843b810537b83a8f6124c9d3,"'Fix callback order for nested blueprints\n\nHandlers registered via url_value_preprocessor, before_request,\ncontext_processor, and url_defaults are called in downward order: First\non the app and last on the current blueprint.\n\nHandlers registered via after_request and teardown_request are called\nin upward order: First on the current blueprint and last on the app.'","'@@ -837,6 +837,86 @@ def test_nested_blueprint(app, client):\n     assert client.get(""/parent/child/grandchild/no"").data == b""Grandchild no""\n \n \n+def test_nested_callback_order(app, client):\n+    parent = flask.Blueprint(""parent"", __name__)\n+    child = flask.Blueprint(""child"", __name__)\n+\n+    @app.before_request\n+    def app_before1():\n+        flask.g.setdefault(""seen"", []).append(""app_1"")\n+\n+    @app.teardown_request\n+    def app_teardown1(e=None):\n+        assert flask.g.seen.pop() == ""app_1""\n+\n+    @app.before_request\n+    def app_before2():\n+        flask.g.setdefault(""seen"", []).append(""app_2"")\n+\n+    @app.teardown_request\n+    def app_teardown2(e=None):\n+        assert flask.g.seen.pop() == ""app_2""\n+\n+    @app.context_processor\n+    def app_ctx():\n+        return dict(key=""app"")\n+\n+    @parent.before_request\n+    def parent_before1():\n+        flask.g.setdefault(""seen"", []).append(""parent_1"")\n+\n+    @parent.teardown_request\n+    def parent_teardown1(e=None):\n+        assert flask.g.seen.pop() == ""parent_1""\n+\n+    @parent.before_request\n+    def parent_before2():\n+        flask.g.setdefault(""seen"", []).append(""parent_2"")\n+\n+    @parent.teardown_request\n+    def parent_teardown2(e=None):\n+        assert flask.g.seen.pop() == ""parent_2""\n+\n+    @parent.context_processor\n+    def parent_ctx():\n+        return dict(key=""parent"")\n+\n+    @child.before_request\n+    def child_before1():\n+        flask.g.setdefault(""seen"", []).append(""child_1"")\n+\n+    @child.teardown_request\n+    def child_teardown1(e=None):\n+        assert flask.g.seen.pop() == ""child_1""\n+\n+    @child.before_request\n+    def child_before2():\n+        flask.g.setdefault(""seen"", []).append(""child_2"")\n+\n+    @child.teardown_request\n+    def child_teardown2(e=None):\n+        assert flask.g.seen.pop() == ""child_2""\n+\n+    @child.context_processor\n+    def child_ctx():\n+        return dict(key=""child"")\n+\n+    @child.route(""/a"")\n+    def a():\n+        return "", "".join(flask.g.seen)\n+\n+    @child.route(""/b"")\n+    def b():\n+        return flask.render_template_string(""{{ key }}"")\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent)\n+    assert (\n+        client.get(""/a"").data == b""app_1, app_2, parent_1, parent_2, child_1, child_2""\n+    )\n+    assert client.get(""/b"").data == b""child""\n+\n+\n @pytest.mark.parametrize(\n     ""parent_init, child_init, parent_registration, child_registration"",\n     [\n'",1.0300751879699248,1.0264900662251655
src/flask/app.py,src/flask/app.py,3f6cdbd8b35f2b887dddbdac5ef6461833b6dd3b,166a2a6207027bff07fdfc5590ce04f9b37e9e8f,'use similar code for all callback-applying methods\n\navoid building nested chain iterables\navoid triggering defaultdict when looking up registries\napply functions as they are looked up',"'@@ -58,17 +58,12 @@ from .signals import request_started\n from .signals import request_tearing_down\n from .templating import DispatchingJinjaLoader\n from .templating import Environment\n-from .typing import AfterRequestCallable\n from .typing import BeforeFirstRequestCallable\n-from .typing import BeforeRequestCallable\n from .typing import ResponseReturnValue\n from .typing import TeardownCallable\n-from .typing import TemplateContextProcessorCallable\n from .typing import TemplateFilterCallable\n from .typing import TemplateGlobalCallable\n from .typing import TemplateTestCallable\n-from .typing import URLDefaultCallable\n-from .typing import URLValuePreprocessorCallable\n from .wrappers import Request\n from .wrappers import Response\n \n@@ -745,20 +740,21 @@ class Flask(Scaffold):\n         :param context: the context as a dictionary that is updated in place\n                         to add extra variables.\n         """"""\n-        funcs: t.Iterable[TemplateContextProcessorCallable] = []\n-        if None in self.template_context_processors:\n-            funcs = chain(funcs, self.template_context_processors[None])\n-        reqctx = _request_ctx_stack.top\n-        if reqctx is not None:\n-            for bp in reversed(request.blueprints):\n-                if bp in self.template_context_processors:\n-                    funcs = chain(funcs, self.template_context_processors[bp])\n+        names: t.Iterable[t.Optional[str]] = (None,)\n+\n+        # A template may be rendered outside a request context.\n+        if request:\n+            names = chain(names, reversed(request.blueprints))\n+\n+        # The values passed to render_template take precedence. Keep a\n+        # copy to re-apply after all context functions.\n         orig_ctx = context.copy()\n-        for func in funcs:\n-            context.update(func())\n-        # make sure the original values win.  This makes it possible to\n-        # easier add new variables in context processors without breaking\n-        # existing views.\n+\n+        for name in names:\n+            if name in self.template_context_processors:\n+                for func in self.template_context_processors[name]:\n+                    context.update(func())\n+\n         context.update(orig_ctx)\n \n     def make_shell_context(self) -> dict:\n@@ -1278,9 +1274,10 @@ class Flask(Scaffold):\n         class, or ``None`` if a suitable handler is not found.\n         """"""\n         exc_class, code = self._get_exc_class_and_code(type(e))\n+        names = (*request.blueprints, None)\n \n-        for c in [code, None] if code is not None else [None]:\n-            for name in chain(request.blueprints, [None]):\n+        for c in (code, None) if code is not None else (None,):\n+            for name in names:\n                 handler_map = self.error_handler_spec[name][c]\n \n                 if not handler_map:\n@@ -1800,19 +1797,19 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        funcs: t.Iterable[URLDefaultCallable] = self.url_default_functions[None]\n+        names: t.Iterable[t.Optional[str]] = (None,)\n \n+        # url_for may be called outside a request context, parse the\n+        # passed endpoint instead of using request.blueprints.\n         if ""."" in endpoint:\n-            # This is called by url_for, which can be called outside a\n-            # request, can\'t use request.blueprints.\n-            bps = _split_blueprint_path(endpoint.rpartition(""."")[0])\n-            bp_funcs = chain.from_iterable(\n-                self.url_default_functions[bp] for bp in reversed(bps)\n+            names = chain(\n+                names, reversed(_split_blueprint_path(endpoint.rpartition(""."")[0]))\n             )\n-            funcs = chain(funcs, bp_funcs)\n \n-        for func in funcs:\n-            func(endpoint, values)\n+        for name in names:\n+            if name in self.url_default_functions:\n+                for func in self.url_default_functions[name]:\n+                    func(endpoint, values)\n \n     def handle_url_build_error(\n         self, error: Exception, endpoint: str, values: dict\n@@ -1847,22 +1844,20 @@ class Flask(Scaffold):\n         value is handled as if it was the return value from the view, and\n         further request handling is stopped.\n         """"""\n+        names = (None, *reversed(request.blueprints))\n \n-        funcs: t.Iterable[URLValuePreprocessorCallable] = []\n-        for name in chain([None], reversed(request.blueprints)):\n+        for name in names:\n             if name in self.url_value_preprocessors:\n-                funcs = chain(funcs, self.url_value_preprocessors[name])\n-        for func in funcs:\n-            func(request.endpoint, request.view_args)\n+                for url_func in self.url_value_preprocessors[name]:\n+                    url_func(request.endpoint, request.view_args)\n \n-        funcs: t.Iterable[BeforeRequestCallable] = []\n-        for name in chain([None], reversed(request.blueprints)):\n+        for name in names:\n             if name in self.before_request_funcs:\n-                funcs = chain(funcs, self.before_request_funcs[name])\n-        for func in funcs:\n-            rv = self.ensure_sync(func)()\n-            if rv is not None:\n-                return rv\n+                for before_func in self.before_request_funcs[name]:\n+                    rv = self.ensure_sync(before_func)()\n+\n+                    if rv is not None:\n+                        return rv\n \n         return None\n \n@@ -1880,14 +1875,18 @@ class Flask(Scaffold):\n                  instance of :attr:`response_class`.\n         """"""\n         ctx = _request_ctx_stack.top\n-        funcs: t.Iterable[AfterRequestCallable] = ctx._after_request_functions\n-        for name in chain(request.blueprints, [None]):\n+\n+        for func in ctx._after_request_functions:\n+            response = self.ensure_sync(func)(response)\n+\n+        for name in chain(request.blueprints, (None,)):\n             if name in self.after_request_funcs:\n-                funcs = chain(funcs, reversed(self.after_request_funcs[name]))\n-        for handler in funcs:\n-            response = self.ensure_sync(handler)(response)\n+                for func in reversed(self.after_request_funcs[name]):\n+                    response = self.ensure_sync(func)(response)\n+\n         if not self.session_interface.is_null_session(ctx.session):\n             self.session_interface.save_session(self, ctx.session, response)\n+\n         return response\n \n     def do_teardown_request(\n@@ -1915,12 +1914,12 @@ class Flask(Scaffold):\n         """"""\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n-        funcs: t.Iterable[TeardownCallable] = []\n-        for name in chain(request.blueprints, [None]):\n+\n+        for name in chain(request.blueprints, (None,)):\n             if name in self.teardown_request_funcs:\n-                funcs = chain(funcs, reversed(self.teardown_request_funcs[name]))\n-        for func in funcs:\n-            self.ensure_sync(func)(exc)\n+                for func in reversed(self.teardown_request_funcs[name]):\n+                    self.ensure_sync(func)(exc)\n+\n         request_tearing_down.send(self, exc=exc)\n \n     def do_teardown_appcontext(\n@@ -1942,8 +1941,10 @@ class Flask(Scaffold):\n         """"""\n         if exc is _sentinel:\n             exc = sys.exc_info()[1]\n+\n         for func in reversed(self.teardown_appcontext_funcs):\n             self.ensure_sync(func)(exc)\n+\n         appcontext_tearing_down.send(self, exc=exc)\n \n     def app_context(self) -> AppContext:\n'",3.0441176470588234,3.0588235294117645
CHANGES.rst,CHANGES.rst,174fe4453a1a52069d31c9ff4e24f3ef4aa6913e,6d637f0fdb0e18b2722ab2b19b79a5c954d22637,'release version 2.0.2',"'@@ -3,7 +3,7 @@\n Version 2.0.2\n -------------\n \n-Unreleased\n+Released 2021-10-04\n \n -   Fix type annotation for ``teardown_*`` methods. :issue:`4093`\n -   Fix type annotation for ``before_request`` and ``before_app_request``\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,174fe4453a1a52069d31c9ff4e24f3ef4aa6913e,6d637f0fdb0e18b2722ab2b19b79a5c954d22637,'release version 2.0.2',"'@@ -43,4 +43,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.0.2.dev0""\n+__version__ = ""2.0.2""\n'",0,0
tests/test_cli.py,tests/test_cli.py,6d65595a3c0a02d098c36f7d337e053e07975316,6f7762538bffe3ce9d03508ecab230bfff3e3dcd,'try to address flakiness of lazy loading test',"'@@ -334,7 +334,9 @@ def test_lazy_load_error(monkeypatch):\n     lazy = DispatchingApp(bad_load, use_eager_loading=False)\n \n     with pytest.raises(BadExc):\n-        lazy._flush_bg_loading_exception()\n+        # reduce flakiness by waiting for the internal loading lock\n+        with lazy._lock:\n+            lazy._flush_bg_loading_exception()\n \n \n def test_with_appcontext(runner):\n'",1.0588235294117647,1.0588235294117647
tests/test_cli.py,tests/test_cli.py,b2b60450f7b9fae08bbd22f771f7b973aee6a135,5a1c5eb5c040506fcb99eb10558c12b6e9f6c027,'allow lazy loading test to fail on pypy',"'@@ -1,6 +1,7 @@\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n import os\n+import platform\n import ssl\n import sys\n import types\n@@ -320,6 +321,7 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert app.name == ""testapp""\n \n \n+@pytest.mark.xfail(platform.python_implementation() == ""PyPy"", reason=""flaky on pypy"")\n def test_lazy_load_error(monkeypatch):\n     """"""When using lazy loading, the correct exception should be\n     re-raised.\n'",1.0588235294117647,1.0588235294117647
docs/config.rst,docs/config.rst,58a08a1d7326b9ef744c0f41b9e8c5505dd3d924,8ddf80c3eaec171429b6ebd014e3a0af1f14e58f,'use secrets instead of os.urandom',"'@@ -38,7 +38,7 @@ method::\n \n     app.config.update(\n         TESTING=True,\n-        SECRET_KEY=b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+        SECRET_KEY=\'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n     )\n \n \n@@ -180,8 +180,8 @@ The following configuration values are used internally by Flask:\n     application. It should be a long random ``bytes`` or ``str``. For\n     example, copy the output of this to your config::\n \n-        $ python -c \'import os; print(os.urandom(16))\'\n-        b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+        $ python -c \'import secrets; print(secrets.token_hex()))\'\n+        \'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n \n     **Do not reveal the secret key when posting questions or committing code.**\n \n@@ -468,7 +468,7 @@ sure to use uppercase letters for your config keys.\n Here is an example of a configuration file::\n \n     # Example configuration\n-    SECRET_KEY = b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+    SECRET_KEY = \'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n \n Make sure to load the configuration very early on, so that extensions have\n the ability to access the configuration when starting up.  There are other\n'",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,58a08a1d7326b9ef744c0f41b9e8c5505dd3d924,8ddf80c3eaec171429b6ebd014e3a0af1f14e58f,'use secrets instead of os.urandom',"'@@ -847,8 +847,8 @@ sessions work::\n     generator. Use the following command to quickly generate a value for\n     :attr:`Flask.secret_key` (or :data:`SECRET_KEY`)::\n \n-        $ python -c \'import os; print(os.urandom(16))\'\n-        b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+        $ python -c \'import secrets; print(secrets.token_hex())\'\n+        \'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n \n A note on cookie-based sessions: Flask will take the values you put into the\n session object and serialize them into a cookie.  If you are finding some\n'",1.3333333333333333,1.3333333333333333
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,58a08a1d7326b9ef744c0f41b9e8c5505dd3d924,8ddf80c3eaec171429b6ebd014e3a0af1f14e58f,'use secrets instead of os.urandom',"'@@ -88,9 +88,9 @@ You can use the following command to output a random secret key:\n \n .. code-block:: none\n \n-    $ python -c \'import os; print(os.urandom(16))\'\n+    $ python -c \'import secrets; print(secrets.token_hex())\'\n \n-    b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+    \'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n \n Create the ``config.py`` file in the instance folder, which the factory\n will read from if it exists. Copy the generated value into it.\n@@ -98,7 +98,7 @@ will read from if it exists. Copy the generated value into it.\n .. code-block:: python\n     :caption: ``venv/var/flaskr-instance/config.py``\n \n-    SECRET_KEY = b\'_5#y2L""F4Q8z\\n\\xec]/\'\n+    SECRET_KEY = \'192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf\'\n \n You can also set any other necessary configuration here, although\n ``SECRET_KEY`` is the only one needed for Flaskr.\n'",0,0
docs/patterns/sqlite3.rst,docs/patterns/sqlite3.rst,21def4e05c0efd7286bf120fb748b5605cdd0d6b,c5ed6c5e77cdf05740e9beb97ab7841abdb8f703,'Fixes old print statement in some documentation pages',"""@@ -113,16 +113,16 @@ raw cursor and connection objects.\n Here is how you can use it::\n \n     for user in query_db('select * from users'):\n-        print user['username'], 'has the id', user['user_id']\n+        print(user['username'], 'has the id', user['user_id'])\n \n Or if you just want a single result::\n \n     user = query_db('select * from users where username = ?',\n                     [the_username], one=True)\n     if user is None:\n-        print 'No such user'\n+        print('No such user')\n     else:\n-        print the_username, 'has the id', user['user_id']\n+        print(the_username, 'has the id', user['user_id'])\n \n To pass variable parts to the SQL statement, use a question mark in the\n statement and pass in the arguments as a list.  Never directly add them to\n""",2.0,2.0
docs/signals.rst,docs/signals.rst,21def4e05c0efd7286bf120fb748b5605cdd0d6b,c5ed6c5e77cdf05740e9beb97ab7841abdb8f703,'Fixes old print statement in some documentation pages',"""@@ -177,7 +177,7 @@ With Blinker 1.1 you can also easily subscribe to signals by using the new\n \n     @template_rendered.connect_via(app)\n     def when_template_rendered(sender, template, context, **extra):\n-        print f'Template {template.name} is rendered with {context}'\n+        print(f'Template {template.name} is rendered with {context}')\n \n Core Signals\n ------------\n""",1.3333333333333333,1.3333333333333333
docs/config.rst,docs/config.rst,225ff3ea6c260e17a15a896d272eaba259777ba3,ded812b0cd7c9cc71346c43ebadaccd6140f4c5f,'Fix example `SECRET_KEY` generation code\n\nRemoves the extra `)` in: `print(secrets.token_hex())`',"""@@ -180,7 +180,7 @@ The following configuration values are used internally by Flask:\n     application. It should be a long random ``bytes`` or ``str``. For\n     example, copy the output of this to your config::\n \n-        $ python -c 'import secrets; print(secrets.token_hex()))'\n+        $ python -c 'import secrets; print(secrets.token_hex())'\n         '192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf'\n \n     **Do not reveal the secret key when posting questions or committing code.**\n""",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,860431f7e0a212fbdb5de61164f5b8a8d288de7d,225ff3ea6c260e17a15a896d272eaba259777ba3,'update requirements',"'@@ -14,11 +14,11 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.9b0\n+    rev: 21.10b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 3.9.2\n+    rev: 4.0.1\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
requirements/dev.txt,requirements/dev.txt,860431f7e0a212fbdb5de61164f5b8a8d288de7d,225ff3ea6c260e17a15a896d272eaba259777ba3,'update requirements',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with python 3.9\n+# This file is autogenerated by pip-compile with python 3.10\n # To update, run:\n #\n #    pip-compile requirements/dev.in\n@@ -16,15 +16,15 @@ backports.entry-points-selectable==1.1.0\n     # via virtualenv\n blinker==1.4\n     # via -r requirements/tests.in\n-certifi==2021.5.30\n+certifi==2021.10.8\n     # via requests\n-cffi==1.14.6\n+cffi==1.15.0\n     # via cryptography\n cfgv==3.3.1\n     # via pre-commit\n-charset-normalizer==2.0.6\n+charset-normalizer==2.0.7\n     # via requests\n-click==8.0.1\n+click==8.0.3\n     # via pip-tools\n cryptography==35.0.0\n     # via -r requirements/typing.in\n@@ -34,21 +34,21 @@ docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.2.0\n+filelock==3.3.2\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2\n     # via -r requirements/tests.in\n-identify==2.2.15\n+identify==2.3.3\n     # via pre-commit\n-idna==3.2\n+idna==3.3\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n iniconfig==1.1.1\n     # via pytest\n-jinja2==3.0.1\n+jinja2==3.0.2\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n@@ -58,7 +58,7 @@ mypy-extensions==0.4.3\n     # via mypy\n nodeenv==1.6.0\n     # via pre-commit\n-packaging==21.0\n+packaging==21.2\n     # via\n     #   pallets-sphinx-themes\n     #   pytest\n@@ -66,9 +66,9 @@ packaging==21.0\n     #   tox\n pallets-sphinx-themes==2.0.1\n     # via -r requirements/docs.in\n-pep517==0.11.0\n+pep517==0.12.0\n     # via pip-tools\n-pip-tools==6.3.0\n+pip-tools==6.4.0\n     # via -r requirements/dev.in\n platformdirs==2.4.0\n     # via virtualenv\n@@ -92,11 +92,11 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.5\n     # via -r requirements/tests.in\n-python-dotenv==0.19.0\n+python-dotenv==0.19.1\n     # via -r requirements/tests.in\n-pytz==2021.1\n+pytz==2021.3\n     # via babel\n-pyyaml==5.4.1\n+pyyaml==6.0\n     # via pre-commit\n requests==2.26.0\n     # via sphinx\n@@ -137,21 +137,21 @@ toml==0.10.2\n     #   pre-commit\n     #   pytest\n     #   tox\n-tomli==1.2.1\n+tomli==1.2.2\n     # via pep517\n tox==3.24.4\n     # via -r requirements/dev.in\n-types-contextvars==0.1.4\n+types-contextvars==2.4.0\n     # via -r requirements/typing.in\n-types-dataclasses==0.1.7\n+types-dataclasses==0.6.1\n     # via -r requirements/typing.in\n-types-setuptools==57.4.0\n+types-setuptools==57.4.2\n     # via -r requirements/typing.in\n typing-extensions==3.10.0.2\n     # via mypy\n urllib3==1.26.7\n     # via requests\n-virtualenv==20.8.1\n+virtualenv==20.10.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,860431f7e0a212fbdb5de61164f5b8a8d288de7d,225ff3ea6c260e17a15a896d272eaba259777ba3,'update requirements',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with python 3.9\n+# This file is autogenerated by pip-compile with python 3.10\n # To update, run:\n #\n #    pip-compile requirements/docs.in\n@@ -8,23 +8,23 @@ alabaster==0.7.12\n     # via sphinx\n babel==2.9.1\n     # via sphinx\n-certifi==2021.5.30\n+certifi==2021.10.8\n     # via requests\n-charset-normalizer==2.0.6\n+charset-normalizer==2.0.7\n     # via requests\n docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==3.2\n+idna==3.3\n     # via requests\n imagesize==1.2.0\n     # via sphinx\n-jinja2==3.0.1\n+jinja2==3.0.2\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-packaging==21.0\n+packaging==21.2\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n@@ -36,7 +36,7 @@ pygments==2.10.0\n     #   sphinx-tabs\n pyparsing==2.4.7\n     # via packaging\n-pytz==2021.1\n+pytz==2021.3\n     # via babel\n requests==2.26.0\n     # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,860431f7e0a212fbdb5de61164f5b8a8d288de7d,225ff3ea6c260e17a15a896d272eaba259777ba3,'update requirements',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with python 3.9\n+# This file is autogenerated by pip-compile with python 3.10\n # To update, run:\n #\n #    pip-compile requirements/tests.in\n@@ -14,7 +14,7 @@ greenlet==1.1.2\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n-packaging==21.0\n+packaging==21.2\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n@@ -24,7 +24,7 @@ pyparsing==2.4.7\n     # via packaging\n pytest==6.2.5\n     # via -r requirements/tests.in\n-python-dotenv==0.19.0\n+python-dotenv==0.19.1\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,860431f7e0a212fbdb5de61164f5b8a8d288de7d,225ff3ea6c260e17a15a896d272eaba259777ba3,'update requirements',"'@@ -1,10 +1,10 @@\n #\n-# This file is autogenerated by pip-compile with python 3.9\n+# This file is autogenerated by pip-compile with python 3.10\n # To update, run:\n #\n #    pip-compile requirements/typing.in\n #\n-cffi==1.14.6\n+cffi==1.15.0\n     # via cryptography\n cryptography==35.0.0\n     # via -r requirements/typing.in\n@@ -16,11 +16,11 @@ pycparser==2.20\n     # via cffi\n toml==0.10.2\n     # via mypy\n-types-contextvars==0.1.4\n+types-contextvars==2.4.0\n     # via -r requirements/typing.in\n-types-dataclasses==0.1.7\n+types-dataclasses==0.6.1\n     # via -r requirements/typing.in\n-types-setuptools==57.4.0\n+types-setuptools==57.4.2\n     # via -r requirements/typing.in\n typing-extensions==3.10.0.2\n     # via mypy\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,1f40c77f1d9ad65911eb6716525de6aa302eda4c,303a1e6c411318a3e812ac65311c44aa332c00b2,'test Python 3.10 and 3.11',"""@@ -24,14 +24,16 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - {name: Linux, python: '3.9', os: ubuntu-latest, tox: py39}\n-          - {name: Windows, python: '3.9', os: windows-latest, tox: py39}\n-          - {name: Mac, python: '3.9', os: macos-latest, tox: py39}\n+          - {name: Linux, python: '3.10', os: ubuntu-latest, tox: py310}\n+          - {name: Windows, python: '3.10', os: windows-latest, tox: py310}\n+          - {name: Mac, python: '3.10', os: macos-latest, tox: py310}\n+          - {name: '3.11-dev', python: '3.11-dev', os: ubuntu-latest, tox: py311}\n+          - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n-          - {name: 'PyPy', python: pypy3, os: ubuntu-latest, tox: pypy3}\n-          - {name: Typing, python: '3.9', os: ubuntu-latest, tox: typing}\n+          - {name: 'PyPy', python: 'pypy-3.7', os: ubuntu-latest, tox: pypy37}\n+          - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-python@v2\n""",0,0
requirements/dev.txt,requirements/dev.txt,1f40c77f1d9ad65911eb6716525de6aa302eda4c,303a1e6c411318a3e812ac65311c44aa332c00b2,'test Python 3.10 and 3.11',"'@@ -78,7 +78,7 @@ pluggy==1.0.0\n     #   tox\n pre-commit==2.15.0\n     # via -r requirements/dev.in\n-py==1.10.0\n+py==1.11.0\n     # via\n     #   pytest\n     #   tox\n'",0,0
requirements/tests.txt,requirements/tests.txt,1f40c77f1d9ad65911eb6716525de6aa302eda4c,303a1e6c411318a3e812ac65311c44aa332c00b2,'test Python 3.10 and 3.11',"'@@ -18,7 +18,7 @@ packaging==21.2\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-py==1.10.0\n+py==1.11.0\n     # via pytest\n pyparsing==2.4.7\n     # via packaging\n'",0,0
tox.ini,tox.ini,1f40c77f1d9ad65911eb6716525de6aa302eda4c,303a1e6c411318a3e812ac65311c44aa332c00b2,'test Python 3.10 and 3.11',"'@@ -1,6 +1,6 @@\n [tox]\n envlist =\n-    py{39,38,37,36,py3}\n+    py3{11,10,9,8,7,6},pypy37\n     py39-click7\n     style\n     typing\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,a2e79eefc9e13c48e5c44f1eb0c1d69b55bbf79a,7a5aa570c09cb573b440c089d73a5f1e9cfcf179,'Correct the actual unescaped character\n\n`&raquo;` should be unescaped to `»` after `striptags`.\r\n\r\nRef: https://flask.palletsprojects.com/en/2.0.x/api/#flask.Markup.striptags',"""@@ -468,7 +468,7 @@ Here is a basic introduction to how the :class:`~markupsafe.Markup` class works:\n     >>> Markup.escape('<blink>hacker</blink>')\n     Markup('&lt;blink&gt;hacker&lt;/blink&gt;')\n     >>> Markup('<em>Marked up</em> &raquo; HTML').striptags()\n-    'Marked up \\xbb HTML'\n+    'Marked up » HTML'\n \n .. versionchanged:: 0.5\n \n""",1.3333333333333333,1.3333333333333333
.github/workflows/tests.yaml,.github/workflows/tests.yaml,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"""@@ -31,7 +31,6 @@ jobs:\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n-          - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: 'pypy-3.7', os: ubuntu-latest, tox: pypy37}\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n""",0,0
docs/cli.rst,docs/cli.rst,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -112,10 +112,9 @@ shell with the :func:`shell <cli.shell_command>` command. An application\n context will be active, and the app instance will be imported. ::\n \n     $ flask shell\n-    Python 3.6.2 (default, Jul 20 2017, 03:52:27)\n-    [GCC 7.1.1 20170630] on linux\n-    App: example\n-    Instance: /home/user/Projects/hello/instance\n+    Python 3.10.0 (default, Oct 27 2021, 06:59:51) [GCC 11.1.0] on linux\n+    App: example [production]\n+    Instance: /home/david/Projects/pallets/flask/instance\n     >>>\n \n Use :meth:`~Flask.shell_context_processor` to add other automatic imports.\n'",0,0
docs/extensiondev.rst,docs/extensiondev.rst,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -322,9 +322,9 @@ ecosystem remain consistent and compatible.\n     `Official Pallets Themes`_. A link to the documentation or project\n     website must be in the PyPI metadata or the readme.\n 7.  For maximum compatibility, the extension should support the same\n-    versions of Python that Flask supports. 3.6+ is recommended as of\n-    2020. Use ``python_requires="">= 3.6""`` in ``setup.py`` to indicate\n-    supported versions.\n+    versions of Python that Flask supports. 3.7+ is recommended as of\n+    December 2021. Use ``python_requires="">= 3.7""`` in ``setup.py`` to\n+    indicate supported versions.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _mailinglist: https://mail.python.org/mailman/listinfo/flask\n'",1.6666666666666667,1.6666666666666667
docs/installation.rst,docs/installation.rst,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -6,9 +6,7 @@ Python Version\n --------------\n \n We recommend using the latest version of Python. Flask supports Python\n-3.6 and newer.\n-\n-``async`` support in Flask requires Python 3.7+ for ``contextvars.ContextVar``.\n+3.7 and newer.\n \n \n Dependencies\n'",0,0
setup.cfg,setup.cfg,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"""@@ -35,7 +35,7 @@ classifiers =\n packages = find:\n package_dir = = src\n include_package_data = true\n-python_requires = >= 3.6\n+python_requires = >= 3.7\n # Dependencies are in setup.py for GitHub's dependency graph.\n \n [options.packages.find]\n@@ -88,7 +88,7 @@ per-file-ignores =\n \n [mypy]\n files = src/flask\n-python_version = 3.6\n+python_version = 3.7\n allow_redefinition = True\n disallow_subclassing_any = True\n # disallow_untyped_calls = True\n""",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -1,3 +1,4 @@\n+import dataclasses\n import decimal\n import io\n import json as _json\n@@ -16,12 +17,6 @@ if t.TYPE_CHECKING:\n     from ..app import Flask\n     from ..wrappers import Response\n \n-try:\n-    import dataclasses\n-except ImportError:\n-    # Python < 3.7\n-    dataclasses = None  # type: ignore\n-\n \n class JSONEncoder(_json.JSONEncoder):\n     """"""The default JSON encoder. Handles extra types compared to the\n'",4.0,4.0
tests/test_async.py,tests/test_async.py,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -1,5 +1,4 @@\n import asyncio\n-import sys\n \n import pytest\n \n@@ -79,7 +78,6 @@ def _async_app():\n     return app\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n @pytest.mark.parametrize(""path"", [""/"", ""/home"", ""/bp/"", ""/view"", ""/methodview""])\n def test_async_route(path, async_app):\n     test_client = async_app.test_client()\n@@ -89,7 +87,6 @@ def test_async_route(path, async_app):\n     assert b""POST"" in response.get_data()\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n @pytest.mark.parametrize(""path"", [""/error"", ""/bp/error""])\n def test_async_error_handler(path, async_app):\n     test_client = async_app.test_client()\n@@ -97,7 +94,6 @@ def test_async_error_handler(path, async_app):\n     assert response.status_code == 412\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n def test_async_before_after_request():\n     app_first_called = False\n     app_before_called = False\n@@ -154,10 +150,3 @@ def test_async_before_after_request():\n     test_client.get(""/bp/"")\n     assert bp_before_called\n     assert bp_after_called\n-\n-\n-@pytest.mark.skipif(sys.version_info >= (3, 7), reason=""should only raise Python < 3.7"")\n-def test_async_runtime_error():\n-    app = Flask(__name__)\n-    with pytest.raises(RuntimeError):\n-        app.async_to_sync(None)\n'",1.0,1.0
tests/test_basic.py,tests/test_basic.py,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -1,6 +1,5 @@\n import gc\n import re\n-import sys\n import time\n import uuid\n import weakref\n@@ -1323,7 +1322,6 @@ def test_jsonify_mimetype(app, req_ctx):\n     assert rv.mimetype == ""application/vnd.api+json""\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 7), reason=""requires Python >= 3.7"")\n def test_json_dump_dataclass(app, req_ctx):\n     from dataclasses import make_dataclass\n \n'",1.0679245283018868,1.0679245283018868
tox.ini,tox.ini,e609dddd604bd8c808145973d91dcb8bb56a9906,3c36d043e578e9e5d5653893103105d1e201ea03,'drop Python 3.6',"'@@ -1,6 +1,6 @@\n [tox]\n envlist =\n-    py3{11,10,9,8,7,6},pypy37\n+    py3{11,10,9,8,7},pypy3{8,7}\n     py39-click7\n     style\n     typing\n'",0,0
docs/async-await.rst,docs/async-await.rst,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -7,8 +7,7 @@ Using ``async`` and ``await``\n \n Routes, error handlers, before request, after request, and teardown\n functions can all be coroutine functions if Flask is installed with the\n-``async`` extra (``pip install flask[async]``). It requires Python 3.7+\n-where ``contextvars.ContextVar`` is available. This allows views to be\n+``async`` extra (``pip install flask[async]``). This allows views to be\n defined with ``async def`` and use ``await``.\n \n .. code-block:: python\n@@ -30,6 +29,12 @@ well as all the HTTP method handlers in views that inherit from the\n     something like ``ValueError: set_wakeup_fd only works in main thread``,\n     please upgrade to Python 3.9.\n \n+.. admonition:: Using ``async`` with greenlet\n+\n+    When using gevent or eventlet to serve an application or patch the\n+    runtime, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\n+    required.\n+\n \n Performance\n -----------\n'",1.0,1.0
docs/installation.rst,docs/installation.rst,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -49,6 +49,18 @@ use them if you install them.\n .. _watchdog: https://pythonhosted.org/watchdog/\n \n \n+greenlet\n+~~~~~~~~\n+\n+You may choose to use gevent or eventlet with your application. In this\n+case, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\n+required.\n+\n+These are not minimum supported versions, they only indicate the first\n+versions that added necessary features. You should use the latest\n+versions of each.\n+\n+\n Virtual environments\n --------------------\n \n'",0,0
requirements/dev.txt,requirements/dev.txt,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -38,7 +38,7 @@ filelock==3.3.2\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.1.2\n+greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n identify==2.3.3\n     # via pre-commit\n'",0,0
requirements/tests.in,requirements/tests.in,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -1,5 +1,5 @@\n pytest\n asgiref\n blinker\n-greenlet\n+greenlet ; python_version < ""3.11""\n python-dotenv\n'",0,0
requirements/tests.txt,requirements/tests.txt,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -10,7 +10,7 @@ attrs==21.2.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n-greenlet==1.1.2\n+greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n'",0,0
src/flask/app.py,src/flask/app.py,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,e609dddd604bd8c808145973d91dcb8bb56a9906,'remove ContextVar compat',"'@@ -16,7 +16,6 @@ from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import BadRequestKeyError\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n-from werkzeug.local import ContextVar\n from werkzeug.routing import BuildError\n from werkzeug.routing import Map\n from werkzeug.routing import MapAdapter\n@@ -1621,13 +1620,6 @@ class Flask(Scaffold):\n                 ""Install Flask with the \'async\' extra in order to use async views.""\n             ) from None\n \n-        # Check that Werkzeug isn\'t using its fallback ContextVar class.\n-        if ContextVar.__module__ == ""werkzeug.local"":\n-            raise RuntimeError(\n-                ""Async cannot be used with this combination of Python ""\n-                ""and Greenlet versions.""\n-            )\n-\n         return asgiref_async_to_sync(func)\n \n     def make_response(self, rv: ResponseReturnValue) -> Response:\n'",3.0588235294117645,3.0441176470588234
docs/deploying/wsgi-standalone.rst,docs/deploying/wsgi-standalone.rst,df806c80359461fda0354460a46645d619e00942,1b552d0b0163e1c1ae3d4895438a9ce2b2bc098e,'update docs about gevent/eventlet/greenlet',"'@@ -1,67 +1,171 @@\n-Standalone WSGI Containers\n-==========================\n+Standalone WSGI Servers\n+=======================\n+\n+Most WSGI servers also provide HTTP servers, so they can run a WSGI\n+application and make it available externally.\n+\n+It may still be a good idea to run the server behind a dedicated HTTP\n+server such as Apache or Nginx. See :ref:`deploying-proxy-setups` if you\n+run into issues with that.\n \n-There are popular servers written in Python that contain WSGI applications and\n-serve HTTP.  These servers stand alone when they run; you can proxy to them\n-from your web server.  Note the section on :ref:`deploying-proxy-setups` if you\n-run into issues.\n \n Gunicorn\n --------\n \n-`Gunicorn`_ \'Green Unicorn\' is a WSGI HTTP Server for UNIX. It\'s a pre-fork\n-worker model ported from Ruby\'s Unicorn project. It supports both `eventlet`_\n-and `greenlet`_. Running a Flask application on this server is quite simple::\n+`Gunicorn`_ is a WSGI and HTTP server for UNIX. To run a Flask\n+application, tell Gunicorn how to import your Flask app object.\n+\n+.. code-block:: text\n+\n+    $ gunicorn -w 4 -b 0.0.0.0:5000 your_project:app\n+\n+The ``-w 4`` option uses 4 workers to handle 4 requests at once. The\n+``-b 0.0.0.0:5000`` serves the application on all interfaces on port\n+5000.\n+\n+Gunicorn provides many options for configuring the server, either\n+through a configuration file or with command line options. Use\n+``gunicorn --help`` or see the docs for more information.\n+\n+The command expects the name of your module or package to import and\n+the application instance within the module. If you use the application\n+factory pattern, you can pass a call to that.\n+\n+.. code-block:: text\n+\n+    $ gunicorn -w 4 -b 0.0.0.0:5000 ""myproject:create_app()""\n+\n+\n+Async with Gevent or Eventlet\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The default sync worker is appropriate for many use cases. If you need\n+asynchronous support, Gunicorn provides workers using either `gevent`_\n+or `eventlet`_. This is not the same as Python\'s ``async/await``, or the\n+ASGI server spec.\n \n-    $ gunicorn myproject:app\n+When using either gevent or eventlet, greenlet>=1.0 is required,\n+otherwise context locals such as ``request`` will not work as expected.\n+When using PyPy, PyPy>=7.3.7 is required.\n \n-`Gunicorn`_ provides many command-line options -- see ``gunicorn -h``.\n-For example, to run a Flask application with 4 worker processes (``-w\n-4``) binding to localhost port 4000 (``-b 127.0.0.1:4000``)::\n+To use gevent:\n \n-    $ gunicorn -w 4 -b 127.0.0.1:4000 myproject:app\n+.. code-block:: text\n \n-The ``gunicorn`` command expects the names of your application module or\n-package and the application instance within the module. If you use the\n-application factory pattern, you can pass a call to that::\n+    $ gunicorn -k gevent -b 0.0.0.0:5000 your_project:app\n+\n+To use eventlet:\n+\n+.. code-block:: text\n+\n+    $ gunicorn -k eventlet -b 0.0.0.0:5000 your_project:app\n \n-    $ gunicorn ""myproject:create_app()""\n \n .. _Gunicorn: https://gunicorn.org/\n+.. _gevent: http://www.gevent.org/\n .. _eventlet: https://eventlet.net/\n+.. _greenlet: https://greenlet.readthedocs.io/en/latest/\n \n \n uWSGI\n---------\n+-----\n+\n+`uWSGI`_ is a fast application server written in C. It is very\n+configurable, which makes it more complicated to setup than Gunicorn.\n+It also provides many other utilities for writing robust web\n+applications. To run a Flask application, tell Gunicorn how to import\n+your Flask app object.\n+\n+.. code-block:: text\n+\n+    $ uwsgi --master -p 4 --http 0.0.0.0:5000 -w your_project:app\n+\n+The ``-p 4`` option uses 4 workers to handle 4 requests at once. The\n+``--http 0.0.0.0:5000`` serves the application on all interfaces on port\n+5000.\n+\n+uWSGI has optimized integration with Nginx and Apache instead of using\n+a standard HTTP proxy. See :doc:`configuring uWSGI and Nginx <uwsgi>`.\n+\n \n-`uWSGI`_ is a fast application server written in C. It is very configurable\n-which makes it more complicated to setup than gunicorn.\n+Async with Gevent\n+~~~~~~~~~~~~~~~~~\n \n-Running `uWSGI HTTP Router`_::\n+The default sync worker is appropriate for many use cases. If you need\n+asynchronous support, uWSGI provides workers using `gevent`_. It also\n+supports other async modes, see the docs for more information. This is\n+not the same as Python\'s ``async/await``, or the ASGI server spec.\n \n-    $ uwsgi --http 127.0.0.1:5000 --module myproject:app\n+When using gevent, greenlet>=1.0 is required, otherwise context locals\n+such as ``request`` will not work as expected. When using PyPy,\n+PyPy>=7.3.7 is required.\n \n-For a more optimized setup, see :doc:`configuring uWSGI and NGINX <uwsgi>`.\n+.. code-block:: text\n+\n+    $ uwsgi --master --gevent 100 --http 0.0.0.0:5000 -w your_project:app\n \n .. _uWSGI: https://uwsgi-docs.readthedocs.io/en/latest/\n-.. _uWSGI HTTP Router: https://uwsgi-docs.readthedocs.io/en/latest/HTTP.html#the-uwsgi-http-https-router\n+\n \n Gevent\n--------\n+------\n+\n+Prefer using `Gunicorn`_ with Gevent workers rather than using Gevent\n+directly. Gunicorn provides a much more configurable and\n+production-tested server. See the section on Gunicorn above.\n+\n+`Gevent`_ allows writing asynchronous, coroutine-based code that looks\n+like standard synchronous Python. It uses `greenlet`_ to enable task\n+switching without writing ``async/await`` or using ``asyncio``.\n+\n+It provides a WSGI server that can handle many connections at once\n+instead of one per worker process.\n+\n+`Eventlet`_, described below, is another library that does the same\n+thing. Certain dependencies you have, or other consideration, may affect\n+which of the two you choose to use\n \n-`Gevent`_ is a coroutine-based Python networking library that uses\n-`greenlet`_ to provide a high-level synchronous API on top of `libev`_\n-event loop::\n+To use gevent to serve your application, import its ``WSGIServer`` and\n+use it to run your ``app``.\n+\n+.. code-block:: python\n \n     from gevent.pywsgi import WSGIServer\n-    from yourapplication import app\n+    from your_project import app\n \n-    http_server = WSGIServer((\'\', 5000), app)\n+    http_server = WSGIServer(("""", 5000), app)\n     http_server.serve_forever()\n \n-.. _Gevent: http://www.gevent.org/\n-.. _greenlet: https://greenlet.readthedocs.io/en/latest/\n-.. _libev: http://software.schmorp.de/pkg/libev.html\n+\n+Eventlet\n+--------\n+\n+Prefer using `Gunicorn`_ with Eventlet workers rather than using\n+Eventlet directly. Gunicorn provides a much more configurable and\n+production-tested server. See the section on Gunicorn above.\n+\n+`Eventlet`_ allows writing asynchronous, coroutine-based code that looks\n+like standard synchronous Python. It uses `greenlet`_ to enable task\n+switching without writing ``async/await`` or using ``asyncio``.\n+\n+It provides a WSGI server that can handle many connections at once\n+instead of one per worker process.\n+\n+`Gevent`_, described above, is another library that does the same\n+thing. Certain dependencies you have, or other consideration, may affect\n+which of the two you choose to use\n+\n+To use eventlet to serve your application, import its ``wsgi.server``\n+and use it to run your ``app``.\n+\n+.. code-block:: python\n+\n+    import eventlet\n+    from eventlet import wsgi\n+    from your_project import app\n+\n+    wsgi.server(eventlet.listen(("""", 5000), app)\n+\n \n Twisted Web\n -----------\n@@ -69,7 +173,9 @@ Twisted Web\n `Twisted Web`_ is the web server shipped with `Twisted`_, a mature,\n non-blocking event-driven networking library. Twisted Web comes with a\n standard WSGI container which can be controlled from the command line using\n-the ``twistd`` utility::\n+the ``twistd`` utility:\n+\n+.. code-block:: text\n \n     $ twistd web --wsgi myproject.app\n \n@@ -79,13 +185,16 @@ This example will run a Flask application called ``app`` from a module named\n Twisted Web supports many flags and options, and the ``twistd`` utility does\n as well; see ``twistd -h`` and ``twistd web -h`` for more information. For\n example, to run a Twisted Web server in the foreground, on port 8080, with an\n-application from ``myproject``::\n+application from ``myproject``:\n+\n+.. code-block:: text\n \n     $ twistd -n web --port tcp:8080 --wsgi myproject.app\n \n .. _Twisted: https://twistedmatrix.com/trac/\n .. _Twisted Web: https://twistedmatrix.com/trac/wiki/TwistedWeb\n \n+\n .. _deploying-proxy-setups:\n \n Proxy Setups\n'",0,0
CHANGES.rst,CHANGES.rst,e21e003f62b57c35e1832c0bf14e9cd27f4e5bea,ea93a52d7d94ba093bbce4680c622cc4fc9771d8,'remove deprecated script_info factory arg',"'@@ -5,7 +5,11 @@ Version 2.1.0\n \n Unreleased\n \n--   Update Click dependency to >= 8.0.\n+-   Drop support for Python 3.6. :pr:`4335`\n+-   Update Click dependency to >= 8.0. :pr:`4008`\n+-   Remove previously deprecated code. :pr:`4337`\n+\n+    -   The CLI does not pass ``script_info`` to app factory functions.\n \n \n Version 2.0.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,e21e003f62b57c35e1832c0bf14e9cd27f4e5bea,ea93a52d7d94ba093bbce4680c622cc4fc9771d8,'remove deprecated script_info factory arg',"'@@ -5,7 +5,6 @@ import platform\n import re\n import sys\n import traceback\n-import warnings\n from functools import update_wrapper\n from operator import attrgetter\n from threading import Lock\n@@ -34,7 +33,7 @@ class NoAppException(click.UsageError):\n     """"""Raised if an application cannot be found or loaded.""""""\n \n \n-def find_best_app(script_info, module):\n+def find_best_app(module):\n     """"""Given a module instance this tries to find the best possible\n     application in the module or raises an exception.\n     """"""\n@@ -65,7 +64,7 @@ def find_best_app(script_info, module):\n \n         if inspect.isfunction(app_factory):\n             try:\n-                app = call_factory(script_info, app_factory)\n+                app = app_factory()\n \n                 if isinstance(app, Flask):\n                     return app\n@@ -87,42 +86,6 @@ def find_best_app(script_info, module):\n     )\n \n \n-def call_factory(script_info, app_factory, args=None, kwargs=None):\n-    """"""Takes an app factory, a ``script_info` object and  optionally a tuple\n-    of arguments. Checks for the existence of a script_info argument and calls\n-    the app_factory depending on that and the arguments provided.\n-    """"""\n-    sig = inspect.signature(app_factory)\n-    args = [] if args is None else args\n-    kwargs = {} if kwargs is None else kwargs\n-\n-    if ""script_info"" in sig.parameters:\n-        warnings.warn(\n-            ""The \'script_info\' argument is deprecated and will not be""\n-            "" passed to the app factory function in Flask 2.1."",\n-            DeprecationWarning,\n-        )\n-        kwargs[""script_info""] = script_info\n-\n-    if not args and len(sig.parameters) == 1:\n-        first_parameter = next(iter(sig.parameters.values()))\n-\n-        if (\n-            first_parameter.default is inspect.Parameter.empty\n-            # **kwargs is reported as an empty default, ignore it\n-            and first_parameter.kind is not inspect.Parameter.VAR_KEYWORD\n-        ):\n-            warnings.warn(\n-                ""Script info is deprecated and will not be passed as the""\n-                "" single argument to the app factory function in Flask""\n-                "" 2.1."",\n-                DeprecationWarning,\n-            )\n-            args.append(script_info)\n-\n-    return app_factory(*args, **kwargs)\n-\n-\n def _called_with_wrong_args(f):\n     """"""Check whether calling a function raised a ``TypeError`` because\n     the call failed or because something in the factory raised the\n@@ -149,7 +112,7 @@ def _called_with_wrong_args(f):\n         del tb\n \n \n-def find_app_by_string(script_info, module, app_name):\n+def find_app_by_string(module, app_name):\n     """"""Check if the given string is a variable name or a function. Call\n     a function to get the app instance, or return the variable directly.\n     """"""\n@@ -166,7 +129,8 @@ def find_app_by_string(script_info, module, app_name):\n \n     if isinstance(expr, ast.Name):\n         name = expr.id\n-        args = kwargs = None\n+        args = []\n+        kwargs = {}\n     elif isinstance(expr, ast.Call):\n         # Ensure the function name is an attribute name only.\n         if not isinstance(expr.func, ast.Name):\n@@ -202,7 +166,7 @@ def find_app_by_string(script_info, module, app_name):\n     # to get the real application.\n     if inspect.isfunction(attr):\n         try:\n-            app = call_factory(script_info, attr, args, kwargs)\n+            app = attr(*args, **kwargs)\n         except TypeError as e:\n             if not _called_with_wrong_args(attr):\n                 raise\n@@ -253,7 +217,7 @@ def prepare_import(path):\n     return ""."".join(module_name[::-1])\n \n \n-def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n+def locate_app(module_name, app_name, raise_if_not_found=True):\n     __traceback_hide__ = True  # noqa: F841\n \n     try:\n@@ -273,9 +237,9 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n     module = sys.modules[module_name]\n \n     if app_name is None:\n-        return find_best_app(script_info, module)\n+        return find_best_app(module)\n     else:\n-        return find_app_by_string(script_info, module, app_name)\n+        return find_app_by_string(module, app_name)\n \n \n def get_version(ctx, param, value):\n@@ -396,18 +360,18 @@ class ScriptInfo:\n             return self._loaded_app\n \n         if self.create_app is not None:\n-            app = call_factory(self, self.create_app)\n+            app = self.create_app()\n         else:\n             if self.app_import_path:\n                 path, name = (\n                     re.split(r"":(?![\\\\/])"", self.app_import_path, 1) + [None]\n                 )[:2]\n                 import_name = prepare_import(path)\n-                app = locate_app(self, import_name, name)\n+                app = locate_app(import_name, name)\n             else:\n                 for path in (""wsgi.py"", ""app.py""):\n                     import_name = prepare_import(path)\n-                    app = locate_app(self, import_name, None, raise_if_not_found=False)\n+                    app = locate_app(import_name, None, raise_if_not_found=False)\n \n                     if app:\n                         break\n@@ -983,15 +947,7 @@ debug mode.\n \n \n def main() -> None:\n-    if int(click.__version__[0]) < 8:\n-        warnings.warn(\n-            ""Using the `flask` cli with Click 7 is deprecated and""\n-            "" will not be supported starting with Flask 2.1.""\n-            "" Please upgrade to Click 8 as soon as possible."",\n-            DeprecationWarning,\n-        )\n-    # TODO omit sys.argv once https://github.com/pallets/click/issues/536 is fixed\n-    cli.main(args=sys.argv[1:])\n+    cli.main()\n \n \n if __name__ == ""__main__"":\n'",4.25,4.114285714285714
tests/test_cli.py,tests/test_cli.py,e21e003f62b57c35e1832c0bf14e9cd27f4e5bea,ea93a52d7d94ba093bbce4680c622cc4fc9771d8,'remove deprecated script_info factory arg',"'@@ -49,29 +49,27 @@ def test_cli_name(test_apps):\n \n \n def test_find_best_app(test_apps):\n-    script_info = ScriptInfo()\n-\n     class Module:\n         app = Flask(""appname"")\n \n-    assert find_best_app(script_info, Module) == Module.app\n+    assert find_best_app(Module) == Module.app\n \n     class Module:\n         application = Flask(""appname"")\n \n-    assert find_best_app(script_info, Module) == Module.application\n+    assert find_best_app(Module) == Module.application\n \n     class Module:\n         myapp = Flask(""appname"")\n \n-    assert find_best_app(script_info, Module) == Module.myapp\n+    assert find_best_app(Module) == Module.myapp\n \n     class Module:\n         @staticmethod\n         def create_app():\n             return Flask(""appname"")\n \n-    app = find_best_app(script_info, Module)\n+    app = find_best_app(Module)\n     assert isinstance(app, Flask)\n     assert app.name == ""appname""\n \n@@ -80,29 +78,7 @@ def test_find_best_app(test_apps):\n         def create_app(**kwargs):\n             return Flask(""appname"")\n \n-    app = find_best_app(script_info, Module)\n-    assert isinstance(app, Flask)\n-    assert app.name == ""appname""\n-\n-    class Module:\n-        @staticmethod\n-        def create_app(foo):\n-            return Flask(""appname"")\n-\n-    with pytest.deprecated_call(match=""Script info""):\n-        app = find_best_app(script_info, Module)\n-\n-    assert isinstance(app, Flask)\n-    assert app.name == ""appname""\n-\n-    class Module:\n-        @staticmethod\n-        def create_app(foo=None, script_info=None):\n-            return Flask(""appname"")\n-\n-    with pytest.deprecated_call(match=""script_info""):\n-        app = find_best_app(script_info, Module)\n-\n+    app = find_best_app(Module)\n     assert isinstance(app, Flask)\n     assert app.name == ""appname""\n \n@@ -111,7 +87,7 @@ def test_find_best_app(test_apps):\n         def make_app():\n             return Flask(""appname"")\n \n-    app = find_best_app(script_info, Module)\n+    app = find_best_app(Module)\n     assert isinstance(app, Flask)\n     assert app.name == ""appname""\n \n@@ -122,7 +98,7 @@ def test_find_best_app(test_apps):\n         def create_app():\n             return Flask(""appname2"")\n \n-    assert find_best_app(script_info, Module) == Module.myapp\n+    assert find_best_app(Module) == Module.myapp\n \n     class Module:\n         myapp = Flask(""appname1"")\n@@ -131,32 +107,32 @@ def test_find_best_app(test_apps):\n         def create_app():\n             return Flask(""appname2"")\n \n-    assert find_best_app(script_info, Module) == Module.myapp\n+    assert find_best_app(Module) == Module.myapp\n \n     class Module:\n         pass\n \n-    pytest.raises(NoAppException, find_best_app, script_info, Module)\n+    pytest.raises(NoAppException, find_best_app, Module)\n \n     class Module:\n         myapp1 = Flask(""appname1"")\n         myapp2 = Flask(""appname2"")\n \n-    pytest.raises(NoAppException, find_best_app, script_info, Module)\n+    pytest.raises(NoAppException, find_best_app, Module)\n \n     class Module:\n         @staticmethod\n         def create_app(foo, bar):\n             return Flask(""appname2"")\n \n-    pytest.raises(NoAppException, find_best_app, script_info, Module)\n+    pytest.raises(NoAppException, find_best_app, Module)\n \n     class Module:\n         @staticmethod\n         def create_app():\n             raise TypeError(""bad bad factory!"")\n \n-    pytest.raises(TypeError, find_best_app, script_info, Module)\n+    pytest.raises(TypeError, find_best_app, Module)\n \n \n @pytest.mark.parametrize(\n@@ -220,8 +196,7 @@ def test_prepare_import(request, value, path, result):\n     ),\n )\n def test_locate_app(test_apps, iname, aname, result):\n-    info = ScriptInfo()\n-    assert locate_app(info, iname, aname).name == result\n+    assert locate_app(iname, aname).name == result\n \n \n @pytest.mark.parametrize(\n@@ -243,20 +218,17 @@ def test_locate_app(test_apps, iname, aname, result):\n     ),\n )\n def test_locate_app_raises(test_apps, iname, aname):\n-    info = ScriptInfo()\n-\n     with pytest.raises(NoAppException):\n-        locate_app(info, iname, aname)\n+        locate_app(iname, aname)\n \n \n def test_locate_app_suppress_raise(test_apps):\n-    info = ScriptInfo()\n-    app = locate_app(info, ""notanapp.py"", None, raise_if_not_found=False)\n+    app = locate_app(""notanapp.py"", None, raise_if_not_found=False)\n     assert app is None\n \n     # only direct import error is suppressed\n     with pytest.raises(NoAppException):\n-        locate_app(info, ""cliapp.importerrorapp"", None, raise_if_not_found=False)\n+        locate_app(""cliapp.importerrorapp"", None, raise_if_not_found=False)\n \n \n def test_get_version(test_apps, capsys):\n'",1.0588235294117647,1.0606060606060606
CHANGES.rst,CHANGES.rst,2bd7aed1a4e257b00df4282b96e7e96edc4567f6,e21e003f62b57c35e1832c0bf14e9cd27f4e5bea,'remove deprecated config.from_json',"'@@ -10,6 +10,8 @@ Unreleased\n -   Remove previously deprecated code. :pr:`4337`\n \n     -   The CLI does not pass ``script_info`` to app factory functions.\n+    -   ``config.from_json`` is replaced by\n+        ``config.from_file(name, load=json.load)``.\n \n \n Version 2.0.2\n'",0,0
src/flask/config.py,src/flask/config.py,2bd7aed1a4e257b00df4282b96e7e96edc4567f6,e21e003f62b57c35e1832c0bf14e9cd27f4e5bea,'remove deprecated config.from_json',"'@@ -176,6 +176,9 @@ class Config(dict):\n \n         .. code-block:: python\n \n+            import json\n+            app.config.from_file(""config.json"", load=json.load)\n+\n             import toml\n             app.config.from_file(""config.toml"", load=toml.load)\n \n@@ -204,32 +207,6 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n-    def from_json(self, filename: str, silent: bool = False) -> bool:\n-        """"""Update the values in the config from a JSON file. The loaded\n-        data is passed to the :meth:`from_mapping` method.\n-\n-        :param filename: The path to the JSON file. This can be an\n-            absolute path or relative to the config root path.\n-        :param silent: Ignore the file if it doesn\'t exist.\n-        :return: ``True`` if the file was loaded successfully.\n-\n-        .. deprecated:: 2.0.0\n-            Will be removed in Flask 2.1. Use :meth:`from_file` instead.\n-            This was removed early in 2.0.0, was added back in 2.0.1.\n-\n-        .. versionadded:: 0.11\n-        """"""\n-        import warnings\n-        from . import json\n-\n-        warnings.warn(\n-            ""\'from_json\' is deprecated and will be removed in Flask""\n-            "" 2.1. Use \'from_file(path, json.load)\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self.from_file(filename, json.load, silent=silent)\n-\n     def from_mapping(\n         self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n     ) -> bool:\n'",2.75,2.909090909090909
CHANGES.rst,CHANGES.rst,218534a9f20c98600e7c41321edb4063a8e158ca,2bd7aed1a4e257b00df4282b96e7e96edc4567f6,'remove deprecated json encoding parameter',"'@@ -12,6 +12,7 @@ Unreleased\n     -   The CLI does not pass ``script_info`` to app factory functions.\n     -   ``config.from_json`` is replaced by\n         ``config.from_file(name, load=json.load)``.\n+    -   ``json`` functions no longer take an ``encoding`` parameter.\n \n \n Version 2.0.2\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,218534a9f20c98600e7c41321edb4063a8e158ca,2bd7aed1a4e257b00df4282b96e7e96edc4567f6,'remove deprecated json encoding parameter',"'@@ -1,10 +1,8 @@\n import dataclasses\n import decimal\n-import io\n import json as _json\n import typing as t\n import uuid\n-import warnings\n from datetime import date\n \n from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n@@ -124,20 +122,7 @@ def dumps(obj: t.Any, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> str:\n         context for configuration.\n     """"""\n     _dump_arg_defaults(kwargs, app=app)\n-    encoding = kwargs.pop(""encoding"", None)\n-    rv = _json.dumps(obj, **kwargs)\n-\n-    if encoding is not None:\n-        warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in Flask 2.1."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n-        if isinstance(rv, str):\n-            return rv.encode(encoding)  # type: ignore\n-\n-    return rv\n+    return _json.dumps(obj, **kwargs)\n \n \n def dump(\n@@ -159,23 +144,6 @@ def dump(\n         deprecated and will be removed in Flask 2.1.\n     """"""\n     _dump_arg_defaults(kwargs, app=app)\n-    encoding = kwargs.pop(""encoding"", None)\n-    show_warning = encoding is not None\n-\n-    try:\n-        fp.write("""")\n-    except TypeError:\n-        show_warning = True\n-        fp = io.TextIOWrapper(fp, encoding or ""utf-8"")  # type: ignore\n-\n-    if show_warning:\n-        warnings.warn(\n-            ""Writing to a binary file, and the \'encoding\' argument, is""\n-            "" deprecated and will be removed in Flask 2.1."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n     _json.dump(obj, fp, **kwargs)\n \n \n@@ -199,19 +167,6 @@ def loads(s: str, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.Any:\n         context for configuration.\n     """"""\n     _load_arg_defaults(kwargs, app=app)\n-    encoding = kwargs.pop(""encoding"", None)\n-\n-    if encoding is not None:\n-        warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in Flask 2.1.""\n-            "" The data must be a string or UTF-8 bytes."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n-        if isinstance(s, bytes):\n-            s = s.decode(encoding)\n-\n     return _json.loads(s, **kwargs)\n \n \n@@ -231,20 +186,6 @@ def load(fp: t.IO[str], app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.A\n         file must be text mode, or binary mode with UTF-8 bytes.\n     """"""\n     _load_arg_defaults(kwargs, app=app)\n-    encoding = kwargs.pop(""encoding"", None)\n-\n-    if encoding is not None:\n-        warnings.warn(\n-            ""\'encoding\' is deprecated and will be removed in Flask 2.1.""\n-            "" The file must be text mode, or binary mode with UTF-8""\n-            "" bytes."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n-        if isinstance(fp.read(0), bytes):\n-            fp = io.TextIOWrapper(fp, encoding)  # type: ignore\n-\n     return _json.load(fp, **kwargs)\n \n \n'",4.0,3.1
CHANGES.rst,CHANGES.rst,b7501776a12c15e64b6cdac1e3b903a00df7d285,218534a9f20c98600e7c41321edb4063a8e158ca,'remove deprecated safe_join',"'@@ -13,6 +13,8 @@ Unreleased\n     -   ``config.from_json`` is replaced by\n         ``config.from_file(name, load=json.load)``.\n     -   ``json`` functions no longer take an ``encoding`` parameter.\n+    -   ``safe_join`` is removed, use ``werkzeug.utils.safe_join``\n+        instead.\n \n \n Version 2.0.2\n'",0,0
docs/api.rst,docs/api.rst,b7501776a12c15e64b6cdac1e3b903a00df7d285,218534a9f20c98600e7c41321edb4063a8e158ca,'remove deprecated safe_join',"'@@ -218,8 +218,6 @@ Useful Functions and Classes\n \n .. autofunction:: send_from_directory\n \n-.. autofunction:: safe_join\n-\n .. autofunction:: escape\n \n .. autoclass:: Markup\n'",1.25,1.25
src/flask/__init__.py,src/flask/__init__.py,b7501776a12c15e64b6cdac1e3b903a00df7d285,218534a9f20c98600e7c41321edb4063a8e158ca,'remove deprecated safe_join',"'@@ -23,7 +23,6 @@ from .helpers import flash as flash\n from .helpers import get_flashed_messages as get_flashed_messages\n from .helpers import get_template_attribute as get_template_attribute\n from .helpers import make_response as make_response\n-from .helpers import safe_join as safe_join\n from .helpers import send_file as send_file\n from .helpers import send_from_directory as send_from_directory\n from .helpers import stream_with_context as stream_with_context\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,b7501776a12c15e64b6cdac1e3b903a00df7d285,218534a9f20c98600e7c41321edb4063a8e158ca,'remove deprecated safe_join',"'@@ -11,7 +11,6 @@ from functools import update_wrapper\n from threading import RLock\n \n import werkzeug.utils\n-from werkzeug.exceptions import NotFound\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n \n@@ -627,29 +626,6 @@ def send_file(\n     )\n \n \n-def safe_join(directory: str, *pathnames: str) -> str:\n-    """"""Safely join zero or more untrusted path components to a base\n-    directory to avoid escaping the base directory.\n-\n-    :param directory: The trusted base directory.\n-    :param pathnames: The untrusted path components relative to the\n-        base directory.\n-    :return: A safe path, otherwise ``None``.\n-    """"""\n-    warnings.warn(\n-        ""\'flask.helpers.safe_join\' is deprecated and will be removed in""\n-        "" Flask 2.1. Use \'werkzeug.utils.safe_join\' instead."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-    path = werkzeug.utils.safe_join(directory, *pathnames)\n-\n-    if path is None:\n-        raise NotFound()\n-\n-    return path\n-\n-\n def send_from_directory(\n     directory: t.Union[os.PathLike, str],\n     path: t.Union[os.PathLike, str],\n'",2.782608695652174,2.8181818181818183
CHANGES.rst,CHANGES.rst,f8cdc78ce10f32a46390799e7ac16d231fb35803,b7501776a12c15e64b6cdac1e3b903a00df7d285,'remove deprecated total_seconds',"'@@ -15,6 +15,8 @@ Unreleased\n     -   ``json`` functions no longer take an ``encoding`` parameter.\n     -   ``safe_join`` is removed, use ``werkzeug.utils.safe_join``\n         instead.\n+    -   ``total_seconds`` is removed, use ``timedelta.total_seconds``\n+        instead.\n \n \n Version 2.0.2\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,f8cdc78ce10f32a46390799e7ac16d231fb35803,b7501776a12c15e64b6cdac1e3b903a00df7d285,'remove deprecated total_seconds',"'@@ -5,7 +5,6 @@ import sys\n import typing as t\n import warnings\n from datetime import datetime\n-from datetime import timedelta\n from functools import lru_cache\n from functools import update_wrapper\n from threading import RLock\n@@ -761,27 +760,6 @@ class locked_cached_property(werkzeug.utils.cached_property):\n             super().__delete__(obj)\n \n \n-def total_seconds(td: timedelta) -> int:\n-    """"""Returns the total seconds from a timedelta object.\n-\n-    :param timedelta td: the timedelta to be converted in seconds\n-\n-    :returns: number of seconds\n-    :rtype: int\n-\n-    .. deprecated:: 2.0\n-        Will be removed in Flask 2.1. Use\n-        :meth:`timedelta.total_seconds` instead.\n-    """"""\n-    warnings.warn(\n-        ""\'total_seconds\' is deprecated and will be removed in Flask""\n-        "" 2.1. Use \'timedelta.total_seconds\' instead."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-    return td.days * 60 * 60 * 24 + td.seconds\n-\n-\n def is_ip(value: str) -> bool:\n     """"""Determine if the given string is an IP address.\n \n'",2.8181818181818183,2.9047619047619047
CHANGES.rst,CHANGES.rst,48f2afbf900560af061d50c73e4d3f9422ce4dbe,f8cdc78ce10f32a46390799e7ac16d231fb35803,'same blueprint cannot be registered with same name',"'@@ -17,6 +17,8 @@ Unreleased\n         instead.\n     -   ``total_seconds`` is removed, use ``timedelta.total_seconds``\n         instead.\n+    -   The same blueprint cannot be registered with the same name. Use\n+        ``name=`` when registering to specify a unique name.\n \n \n Version 2.0.2\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,48f2afbf900560af061d50c73e4d3f9422ce4dbe,f8cdc78ce10f32a46390799e7ac16d231fb35803,'same blueprint cannot be registered with same name',"'@@ -299,24 +299,14 @@ class Blueprint(Scaffold):\n         name = f""{name_prefix}.{self_name}"".lstrip(""."")\n \n         if name in app.blueprints:\n+            bp_desc = ""this"" if app.blueprints[name] is self else ""a different""\n             existing_at = f"" \'{name}\'"" if self_name != name else """"\n \n-            if app.blueprints[name] is not self:\n-                raise ValueError(\n-                    f""The name \'{self_name}\' is already registered for""\n-                    f"" a different blueprint{existing_at}. Use \'name=\'""\n-                    "" to provide a unique name.""\n-                )\n-            else:\n-                import warnings\n-\n-                warnings.warn(\n-                    f""The name \'{self_name}\' is already registered for""\n-                    f"" this blueprint{existing_at}. Use \'name=\' to""\n-                    "" provide a unique name. This will become an error""\n-                    "" in Flask 2.1."",\n-                    stacklevel=4,\n-                )\n+            raise ValueError(\n+                f""The name \'{self_name}\' is already registered for""\n+                f"" {bp_desc} blueprint{existing_at}. Use \'name=\' to""\n+                f"" provide a unique name.""\n+            )\n \n         first_bp_registration = not any(bp is self for bp in app.blueprints.values())\n         first_name_registration = name not in app.blueprints\n'",2.3636363636363638,2.3636363636363638
tests/test_blueprints.py,tests/test_blueprints.py,48f2afbf900560af061d50c73e4d3f9422ce4dbe,f8cdc78ce10f32a46390799e7ac16d231fb35803,'same blueprint cannot be registered with same name',"'@@ -954,8 +954,8 @@ def test_unique_blueprint_names(app, client) -> None:\n \n     app.register_blueprint(bp)\n \n-    with pytest.warns(UserWarning):\n-        app.register_blueprint(bp)  # same bp, same name, warning\n+    with pytest.raises(ValueError):\n+        app.register_blueprint(bp)  # same bp, same name, error\n \n     app.register_blueprint(bp, name=""again"")  # same bp, different name, ok\n \n'",1.0264900662251655,1.0264900662251655
CHANGES.rst,CHANGES.rst,15a3e82823c894185771486510027a65295bcf94,48f2afbf900560af061d50c73e4d3f9422ce4dbe,'extend deprecation for renamed send_file params',"'@@ -20,6 +20,15 @@ Unreleased\n     -   The same blueprint cannot be registered with the same name. Use\n         ``name=`` when registering to specify a unique name.\n \n+-   Some parameters in ``send_file`` and ``send_from_directory`` were\n+    renamed in 2.0. The deprecation period for the old names is extended\n+    to 2.2. Be sure to test with deprecation warnings visible.\n+\n+    -   ``attachment_filename`` is renamed to ``download_name``.\n+    -   ``cache_timeout`` is renamed to ``max_age``.\n+    -   ``add_etags`` is renamed to ``etag``.\n+    -   ``filename`` is renamed to ``path``.\n+\n \n Version 2.0.2\n -------------\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,15a3e82823c894185771486510027a65295bcf94,48f2afbf900560af061d50c73e4d3f9422ce4dbe,'extend deprecation for renamed send_file params',"'@@ -452,7 +452,7 @@ def _prepare_send_file_kwargs(\n         warnings.warn(\n             ""The \'attachment_filename\' parameter has been renamed to""\n             "" \'download_name\'. The old name will be removed in Flask""\n-            "" 2.1."",\n+            "" 2.2."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -461,7 +461,7 @@ def _prepare_send_file_kwargs(\n     if cache_timeout is not None:\n         warnings.warn(\n             ""The \'cache_timeout\' parameter has been renamed to""\n-            "" \'max_age\'. The old name will be removed in Flask 2.1."",\n+            "" \'max_age\'. The old name will be removed in Flask 2.2."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -470,7 +470,7 @@ def _prepare_send_file_kwargs(\n     if add_etags is not None:\n         warnings.warn(\n             ""The \'add_etags\' parameter has been renamed to \'etag\'. The""\n-            "" old name will be removed in Flask 2.1."",\n+            "" old name will be removed in Flask 2.2."",\n             DeprecationWarning,\n             stacklevel=3,\n         )\n@@ -666,7 +666,7 @@ def send_from_directory(\n     if filename is not None:\n         warnings.warn(\n             ""The \'filename\' parameter has been renamed to \'path\'. The""\n-            "" old name will be removed in Flask 2.1."",\n+            "" old name will be removed in Flask 2.2."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n'",2.9047619047619047,2.9047619047619047
tox.ini,tox.ini,7860c1de87400ab8e43a2b4dada7d8b8f0eb51ab,7620cb70dbcbf71bca651e6f2eef3cbb05999272,'remove click 7 tox env',"'@@ -1,7 +1,6 @@\n [tox]\n envlist =\n     py3{11,10,9,8,7},pypy3{8,7}\n-    py39-click7\n     style\n     typing\n     docs\n@@ -11,8 +10,6 @@ skip_missing_interpreters = true\n deps =\n     -r requirements/tests.txt\n \n-    click7: click<8\n-\n     examples/tutorial[test]\n     examples/javascript[test]\n commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,4e8787b915dec0f6861292b2fccba640c632a46e,86009452fb764a76966d07c9b5bdc6077b301668,'test min/dev versions of pallets deps',"""@@ -33,6 +33,8 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: '3.6', python: '3.6', os: ubuntu-latest, tox: py36}\n           - {name: 'PyPy', python: 'pypy-3.7', os: ubuntu-latest, tox: pypy37}\n+          - {name: 'Pallets Minimum Versions', python: '3.10', os: ubuntu-latest, tox: py-min}\n+          - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py-dev}\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v2\n""",0,0
requirements/dev.txt,requirements/dev.txt,a2258dd05d60b0d4fb4fef1d63dfe0ce489fd240,4e8787b915dec0f6861292b2fccba640c632a46e,'exclude greenlet tests on python 3.11',"'@@ -38,7 +38,7 @@ filelock==3.3.2\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.1.2\n+greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n identify==2.3.3\n     # via pre-commit\n'",0,0
requirements/tests.in,requirements/tests.in,a2258dd05d60b0d4fb4fef1d63dfe0ce489fd240,4e8787b915dec0f6861292b2fccba640c632a46e,'exclude greenlet tests on python 3.11',"'@@ -1,5 +1,5 @@\n pytest\n asgiref\n blinker\n-greenlet\n+greenlet ; python_version < ""3.11""\n python-dotenv\n'",0,0
requirements/tests.txt,requirements/tests.txt,a2258dd05d60b0d4fb4fef1d63dfe0ce489fd240,4e8787b915dec0f6861292b2fccba640c632a46e,'exclude greenlet tests on python 3.11',"'@@ -10,7 +10,7 @@ attrs==21.2.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n-greenlet==1.1.2\n+greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n'",0,0
CHANGES.rst,CHANGES.rst,564bb27efa8638c40e1dcfdccda5832ba42e9929,a2258dd05d60b0d4fb4fef1d63dfe0ce489fd240,'deprecate as_tuple',"""@@ -1,5 +1,16 @@\n .. currentmodule:: flask\n \n+Version 2.0.3\n+-------------\n+\n+Unreleased\n+\n+-   The test client's ``as_tuple`` parameter is deprecated and will be\n+    removed in Werkzeug 2.1. It is now also deprecated in Flask, to be\n+    removed in Flask 2.1, while remaining compatible with both in\n+    2.0.x. Use ``response.request.environ`` instead. :pr:`4341`\n+\n+\n Version 2.0.2\n -------------\n \n""",0,0
src/flask/testing.py,src/flask/testing.py,564bb27efa8638c40e1dcfdccda5832ba42e9929,a2258dd05d60b0d4fb4fef1d63dfe0ce489fd240,'deprecate as_tuple',"'@@ -9,14 +9,15 @@ from werkzeug.test import Client\n from werkzeug.urls import url_parse\n from werkzeug.wrappers import Request as BaseRequest\n \n-from . import _request_ctx_stack\n from .cli import ScriptInfo\n+from .globals import _request_ctx_stack\n from .json import dumps as json_dumps\n from .sessions import SessionMixin\n \n if t.TYPE_CHECKING:\n+    from werkzeug.test import TestResponse\n+\n     from .app import Flask\n-    from .wrappers import Response\n \n \n class EnvironBuilder(werkzeug.test.EnvironBuilder):\n@@ -171,14 +172,15 @@ class FlaskClient(Client):\n             headers = resp.get_wsgi_headers(c.request.environ)\n             self.cookie_jar.extract_wsgi(c.request.environ, headers)\n \n-    def open(  # type: ignore\n+    def open(\n         self,\n         *args: t.Any,\n-        as_tuple: bool = False,\n         buffered: bool = False,\n         follow_redirects: bool = False,\n         **kwargs: t.Any,\n-    ) -> ""Response"":\n+    ) -> ""TestResponse"":\n+        as_tuple = kwargs.pop(""as_tuple"", None)\n+\n         # Same logic as super.open, but apply environ_base and preserve_context.\n         request = None\n \n@@ -213,12 +215,28 @@ class FlaskClient(Client):\n             finally:\n                 builder.close()\n \n-        return super().open(  # type: ignore\n-            request,\n-            as_tuple=as_tuple,\n-            buffered=buffered,\n-            follow_redirects=follow_redirects,\n-        )\n+        if as_tuple is not None:\n+            import warnings\n+\n+            warnings.warn(\n+                ""\'as_tuple\' is deprecated and will be removed in""\n+                "" Werkzeug 2.1 and Flask 2.1. Use""\n+                "" \'response.request.environ\' instead."",\n+                DeprecationWarning,\n+                stacklevel=3,\n+            )\n+            return super().open(\n+                request,\n+                as_tuple=as_tuple,\n+                buffered=buffered,\n+                follow_redirects=follow_redirects,\n+            )\n+        else:\n+            return super().open(\n+                request,\n+                buffered=buffered,\n+                follow_redirects=follow_redirects,\n+            )\n \n     def __enter__(self) -> ""FlaskClient"":\n         if self.preserve_context:\n@@ -272,7 +290,7 @@ class FlaskCliRunner(CliRunner):\n         :return: a :class:`~click.testing.Result` object.\n         """"""\n         if cli is None:\n-            cli = self.app.cli\n+            cli = self.app.cli  # type: ignore\n \n         if ""obj"" not in kwargs:\n             kwargs[""obj""] = ScriptInfo(create_app=lambda: self.app)\n'",3.8,3.9
CHANGES.rst,CHANGES.rst,46b39e2698697408c6f8f8693e526cd1bb085684,372066983fb206d4871a4a98c8db8b3953ce4394,'fix errorhandler type check',"'@@ -9,6 +9,7 @@ Unreleased\n     removed in Werkzeug 2.1. It is now also deprecated in Flask, to be\n     removed in Flask 2.1, while remaining compatible with both in\n     2.0.x. Use ``response.request.environ`` instead. :pr:`4341`\n+-   Fix type annotation for ``errorhandler`` decorator. :issue:`4295`\n \n \n Version 2.0.2\n'",0,0
src/flask/typing.py,src/flask/typing.py,46b39e2698697408c6f8f8693e526cd1bb085684,372066983fb206d4871a4a98c8db8b3953ce4394,'fix errorhandler type check',"'@@ -46,11 +46,4 @@ TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n URLDefaultCallable = t.Callable[[str, dict], None]\n URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n-\n-\n-if t.TYPE_CHECKING:\n-    import typing_extensions as te\n-\n-    class ErrorHandlerCallable(te.Protocol[GenericException]):\n-        def __call__(self, error: GenericException) -> ResponseReturnValue:\n-            ...\n+ErrorHandlerCallable = t.Callable[[GenericException], ResponseReturnValue]\n'",1.0,0
CHANGES.rst,CHANGES.rst,e679a85b80df354f8632f8ab3e40135f16f5e6d0,b831e8507c8849899ea3b30eb4b6af19de2bf06a,'made ImportError verbose in cli.py',"'@@ -10,6 +10,8 @@ Unreleased\n     removed in Flask 2.1, while remaining compatible with both in\n     2.0.x. Use ``response.request.environ`` instead. :pr:`4341`\n -   Fix type annotation for ``errorhandler`` decorator. :issue:`4295`\n+-   Revert a change to the CLI that caused it to hide ``ImportError``\n+    tracebacks when importing the application. :issue:`4307`\n \n \n Version 2.0.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,e679a85b80df354f8632f8ab3e40135f16f5e6d0,b831e8507c8849899ea3b30eb4b6af19de2bf06a,'made ImportError verbose in cli.py',"'@@ -258,15 +258,16 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n \n     try:\n         __import__(module_name)\n-    except ImportError as e:\n+    except ImportError:\n         # Reraise the ImportError if it occurred within the imported module.\n         # Determine this by checking whether the trace has a depth > 1.\n         if sys.exc_info()[2].tb_next:\n             raise NoAppException(\n-                f""While importing {module_name!r}, an ImportError was raised.""\n-            ) from e\n+                f""While importing {module_name!r}, an ImportError was""\n+                f"" raised:\\n\\n{traceback.format_exc()}""\n+            ) from None\n         elif raise_if_not_found:\n-            raise NoAppException(f""Could not import {module_name!r}."") from e\n+            raise NoAppException(f""Could not import {module_name!r}."") from None\n         else:\n             return\n \n'",4.25,4.25
src/flask/sessions.py,src/flask/sessions.py,282d8621dd4bdc3ee74e0d67b180e03f5f23899f,c8bf420483469ad9aa11f617188637445daf80ea,'document session lifetime and possible concurrency issues\n\nCo-authored-by: Evgeny Prigorodov <eprigorodov@gmail.com>',"'@@ -131,6 +131,13 @@ class SessionInterface:\n         app = Flask(__name__)\n         app.session_interface = MySessionInterface()\n \n+    Multiple requests with the same session may be sent and handled\n+    concurrently. When implementing a new session interface, consider\n+    whether reads or writes to the backing store must be synchronized.\n+    There is no guarantee on the order in which the session for each\n+    request is opened or saved, it will occur in the order that requests\n+    begin and end processing.\n+\n     .. versionadded:: 0.8\n     """"""\n \n@@ -292,20 +299,25 @@ class SessionInterface:\n     def open_session(\n         self, app: ""Flask"", request: ""Request""\n     ) -> t.Optional[SessionMixin]:\n-        """"""This method has to be implemented and must either return ``None``\n-        in case the loading failed because of a configuration error or an\n-        instance of a session object which implements a dictionary like\n-        interface + the methods and attributes on :class:`SessionMixin`.\n+        """"""This is called at the beginning of each request, after\n+        pushing the request context, before matching the URL.\n+\n+        This must return an object which implements a dictionary-like\n+        interface as well as the :class:`SessionMixin` interface.\n+\n+        This will return ``None`` to indicate that loading failed in\n+        some way that is not immediately an error. The request\n+        context will fall back to using :meth:`make_null_session`\n+        in this case.\n         """"""\n         raise NotImplementedError()\n \n     def save_session(\n         self, app: ""Flask"", session: SessionMixin, response: ""Response""\n     ) -> None:\n-        """"""This is called for actual sessions returned by :meth:`open_session`\n-        at the end of the request.  This is still called during a request\n-        context so if you absolutely need access to the request you can do\n-        that.\n+        """"""This is called at the end of each request, after generating\n+        a response, before removing the request context. It is skipped\n+        if :meth:`is_null_session` returns ``True``.\n         """"""\n         raise NotImplementedError()\n \n'",1.826086956521739,1.826086956521739
CHANGES.rst,CHANGES.rst,47e4bd5059fbe1e7f39b56f52c821ba0b39ded1c,6b0c8cdac1fb9bbec88de3a514907c19e372c72a,'copy_current_request_context can decorate async functions',"'@@ -29,6 +29,9 @@ Unreleased\n     -   ``add_etags`` is renamed to ``etag``.\n     -   ``filename`` is renamed to ``path``.\n \n+-   ``copy_current_request_context`` can decorate async functions.\n+    :pr:`4303`\n+\n \n Version 2.0.3\n -------------\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,47e4bd5059fbe1e7f39b56f52c821ba0b39ded1c,6b0c8cdac1fb9bbec88de3a514907c19e372c72a,'copy_current_request_context can decorate async functions',"'@@ -169,7 +169,7 @@ def copy_current_request_context(f: t.Callable) -> t.Callable:\n \n     def wrapper(*args, **kwargs):\n         with reqctx:\n-            return f(*args, **kwargs)\n+            return reqctx.app.ensure_sync(f)(*args, **kwargs)\n \n     return update_wrapper(wrapper, f)\n \n'",1.9,1.9
CHANGES.rst,CHANGES.rst,c8ddb948f6af35998f99521627396c0ea7fa62c1,04c6a85518c600fc34705dee30dd17c188ef1aaa,'deprecate RequestContext.g',"'@@ -29,6 +29,8 @@ Unreleased\n     -   ``add_etags`` is renamed to ``etag``.\n     -   ``filename`` is renamed to ``path``.\n \n+-   The ``RequestContext.g`` property is deprecated. Use ``g`` directly\n+    or ``AppContext.g`` instead. :issue:`3898`\n -   ``copy_current_request_context`` can decorate async functions.\n     :pr:`4303`\n \n'",0,0
src/flask/ctx.py,src/flask/ctx.py,c8ddb948f6af35998f99521627396c0ea7fa62c1,04c6a85518c600fc34705dee30dd17c188ef1aaa,'deprecate RequestContext.g',"'@@ -332,11 +332,29 @@ class RequestContext:\n         self._after_request_functions: t.List[AfterRequestCallable] = []\n \n     @property\n-    def g(self) -> AppContext:\n+    def g(self) -> _AppCtxGlobals:\n+        import warnings\n+\n+        warnings.warn(\n+            ""Accessing \'g\' on the request context is deprecated and""\n+            "" will be removed in Flask 2.2. Access `g` directly or from""\n+            ""the application context instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         return _app_ctx_stack.top.g\n \n     @g.setter\n-    def g(self, value: AppContext) -> None:\n+    def g(self, value: _AppCtxGlobals) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""Setting \'g\' on the request context is deprecated and""\n+            "" will be removed in Flask 2.2. Set it on the application""\n+            "" context instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         _app_ctx_stack.top.g = value\n \n     def copy(self) -> ""RequestContext"":\n'",1.9,1.9
docs/tutorial/layout.rst,docs/tutorial/layout.rst,9fe21310bb3ccac70c4de8a7bc48d1dd69611ece,d086a512d7c07fc68e328b2c8b628937dbd309a2,'replace nbsp characters',"'@@ -57,29 +57,29 @@ By the end, your project layout will look like this:\n \n     /home/user/Projects/flask-tutorial\n     ├── flaskr/\n-    │\xa0\xa0 ├── __init__.py\n-    │\xa0\xa0 ├── db.py\n-    │\xa0\xa0 ├── schema.sql\n-    │\xa0\xa0 ├── auth.py\n-    │\xa0\xa0 ├── blog.py\n-    │\xa0\xa0 ├── templates/\n-    │\xa0\xa0 │   ├── base.html\n-    │\xa0\xa0 │   ├── auth/\n-    │\xa0\xa0 │   │\xa0\xa0 ├── login.html\n-    │\xa0\xa0 │   │\xa0\xa0 └── register.html\n-    │\xa0\xa0 │   └── blog/\n-    │\xa0\xa0 │       ├── create.html\n-    │\xa0\xa0 │       ├── index.html\n-    │\xa0\xa0 │       └── update.html\n-    │\xa0\xa0 └── static/\n-    │\xa0\xa0  \xa0\xa0 └── style.css\n+    │   ├── __init__.py\n+    │   ├── db.py\n+    │   ├── schema.sql\n+    │   ├── auth.py\n+    │   ├── blog.py\n+    │   ├── templates/\n+    │   │   ├── base.html\n+    │   │   ├── auth/\n+    │   │   │   ├── login.html\n+    │   │   │   └── register.html\n+    │   │   └── blog/\n+    │   │       ├── create.html\n+    │   │       ├── index.html\n+    │   │       └── update.html\n+    │   └── static/\n+    │       └── style.css\n     ├── tests/\n-    │\xa0\xa0 ├── conftest.py\n-    │ \xa0 ├── data.sql\n-    │\xa0\xa0 ├── test_factory.py\n-    │\xa0\xa0 ├── test_db.py\n-    │\xa0  ├── test_auth.py\n-    │\xa0  └── test_blog.py\n+    │   ├── conftest.py\n+    │   ├── data.sql\n+    │   ├── test_factory.py\n+    │   ├── test_db.py\n+    │   ├── test_auth.py\n+    │   └── test_blog.py\n     ├── venv/\n     ├── setup.py\n     └── MANIFEST.in\n'",0,0
docs/cli.rst,docs/cli.rst,2e10fc24a13f16e6fb07edc61c8398f74ace2492,9fe21310bb3ccac70c4de8a7bc48d1dd69611ece,'document address already in use error',"""@@ -103,6 +103,11 @@ replaces the :meth:`Flask.run` method in most cases. ::\n     is provided for convenience, but is not designed to be particularly secure,\n     stable, or efficient. See :doc:`/deploying/index` for how to run in production.\n \n+If another program is already using port 5000, you'll see\n+``OSError: [Errno 98]`` or ``OSError: [WinError 10013]`` when the\n+server tries to start. See :ref:`address-already-in-use` for how to\n+handle that.\n+\n \n Open a Shell\n ------------\n""",0,1.0
docs/quickstart.rst,docs/quickstart.rst,2e10fc24a13f16e6fb07edc61c8398f74ace2492,9fe21310bb3ccac70c4de8a7bc48d1dd69611ece,'document address already in use error',"""@@ -83,6 +83,11 @@ deployment options see :doc:`deploying/index`.\n Now head over to http://127.0.0.1:5000/, and you should see your hello\n world greeting.\n \n+If another program is already using port 5000, you'll see\n+``OSError: [Errno 98]`` or ``OSError: [WinError 10013]`` when the\n+server tries to start. See :ref:`address-already-in-use` for how to\n+handle that.\n+\n .. _public-server:\n \n .. admonition:: Externally Visible Server\n""",1.3333333333333333,1.2666666666666666
docs/server.rst,docs/server.rst,2e10fc24a13f16e6fb07edc61c8398f74ace2492,9fe21310bb3ccac70c4de8a7bc48d1dd69611ece,'document address already in use error',"'@@ -64,6 +64,47 @@ and using the CLI.\n     above.\n \n \n+.. _address-already-in-use:\n+\n+Address already in use\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+If another program is already using port 5000, you\'ll see an ``OSError``\n+when the server tries to start. It may have one of the following\n+messages:\n+\n+-   ``OSError: [Errno 98] Address already in use``\n+-   ``OSError: [WinError 10013] An attempt was made to access a socket\n+    in a way forbidden by its access permissions``\n+\n+Either identify and stop the other program, or use\n+``flask run --port 5001`` to pick a different port.\n+\n+You can use ``netstat`` to identify what process id is using a port,\n+then use other operating system tools stop that process. The following\n+example shows that process id 6847 is using port 5000.\n+\n+.. tabs::\n+\n+    .. group-tab:: Linux/Mac\n+\n+        .. code-block:: text\n+\n+            $ netstat -nlp | grep 5000\n+            tcp 0 0 127.0.0.1:5000 0.0.0.0:* LISTEN 6847/python\n+\n+    .. group-tab:: Windows\n+\n+        .. code-block:: text\n+\n+            > netstat -ano | findstr 5000\n+            TCP 127.0.0.1:5000 0.0.0.0:0 LISTENING 6847\n+\n+MacOS Monterey and later automatically starts a service that uses port\n+5000. To disable the service, got to System Preferences, Sharing, and\n+disable ""AirPlay Receiver"".\n+\n+\n Lazy or Eager Loading\n ~~~~~~~~~~~~~~~~~~~~~\n \n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,2e10fc24a13f16e6fb07edc61c8398f74ace2492,9fe21310bb3ccac70c4de8a7bc48d1dd69611ece,'document address already in use error',"'@@ -177,4 +177,9 @@ Visit http://127.0.0.1:5000/hello in a browser and you should see the\n ""Hello, World!"" message. Congratulations, you\'re now running your Flask\n web application!\n \n+If another program is already using port 5000, you\'ll see\n+``OSError: [Errno 98]`` or ``OSError: [WinError 10013]`` when the\n+server tries to start. See :ref:`address-already-in-use` for how to\n+handle that.\n+\n Continue to :doc:`database`.\n'",0,0
docs/server.rst,docs/server.rst,f16524ea1de682db50ee18a91b5204a834995b2e,776bf09fdf1e617d86103bbfb40efbe2682c41a3,'fix typo',"'@@ -101,7 +101,7 @@ example shows that process id 6847 is using port 5000.\n             TCP 127.0.0.1:5000 0.0.0.0:0 LISTENING 6847\n \n MacOS Monterey and later automatically starts a service that uses port\n-5000. To disable the service, got to System Preferences, Sharing, and\n+5000. To disable the service, go to System Preferences, Sharing, and\n disable ""AirPlay Receiver"".\n \n \n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.29.0\n+    rev: v2.29.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -14,7 +14,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.10b0\n+    rev: 21.12b0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -12,7 +12,7 @@ attrs==21.2.0\n     # via pytest\n babel==2.9.1\n     # via sphinx\n-backports.entry-points-selectable==1.1.0\n+backports.entry-points-selectable==1.1.1\n     # via virtualenv\n blinker==1.4\n     # via -r requirements/tests.in\n@@ -22,49 +22,49 @@ cffi==1.15.0\n     # via cryptography\n cfgv==3.3.1\n     # via pre-commit\n-charset-normalizer==2.0.7\n+charset-normalizer==2.0.9\n     # via requests\n click==8.0.3\n     # via pip-tools\n-cryptography==35.0.0\n+cryptography==36.0.1\n     # via -r requirements/typing.in\n-distlib==0.3.3\n+distlib==0.3.4\n     # via virtualenv\n docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.3.2\n+filelock==3.4.0\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.3.3\n+identify==2.4.0\n     # via pre-commit\n idna==3.3\n     # via requests\n-imagesize==1.2.0\n+imagesize==1.3.0\n     # via sphinx\n iniconfig==1.1.1\n     # via pytest\n-jinja2==3.0.2\n+jinja2==3.0.3\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-mypy==0.910\n+mypy==0.930\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n nodeenv==1.6.0\n     # via pre-commit\n-packaging==21.2\n+packaging==21.3\n     # via\n     #   pallets-sphinx-themes\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.0.1\n+pallets-sphinx-themes==2.0.2\n     # via -r requirements/docs.in\n pep517==0.12.0\n     # via pip-tools\n@@ -76,23 +76,23 @@ pluggy==1.0.0\n     # via\n     #   pytest\n     #   tox\n-pre-commit==2.15.0\n+pre-commit==2.16.0\n     # via -r requirements/dev.in\n py==1.11.0\n     # via\n     #   pytest\n     #   tox\n-pycparser==2.20\n+pycparser==2.21\n     # via cffi\n pygments==2.10.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==2.4.7\n+pyparsing==3.0.6\n     # via packaging\n pytest==6.2.5\n     # via -r requirements/tests.in\n-python-dotenv==0.19.1\n+python-dotenv==0.19.2\n     # via -r requirements/tests.in\n pytz==2021.3\n     # via babel\n@@ -104,9 +104,9 @@ six==1.16.0\n     # via\n     #   tox\n     #   virtualenv\n-snowballstemmer==2.1.0\n+snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==4.2.0\n+sphinx==4.3.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -133,21 +133,22 @@ sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n toml==0.10.2\n     # via\n-    #   mypy\n     #   pre-commit\n     #   pytest\n     #   tox\n-tomli==1.2.2\n-    # via pep517\n+tomli==2.0.0\n+    # via\n+    #   mypy\n+    #   pep517\n tox==3.24.4\n     # via -r requirements/dev.in\n types-contextvars==2.4.0\n     # via -r requirements/typing.in\n types-dataclasses==0.6.1\n     # via -r requirements/typing.in\n-types-setuptools==57.4.2\n+types-setuptools==57.4.4\n     # via -r requirements/typing.in\n-typing-extensions==3.10.0.2\n+typing-extensions==4.0.1\n     # via mypy\n urllib3==1.26.7\n     # via requests\n@@ -155,7 +156,7 @@ virtualenv==20.10.0\n     # via\n     #   pre-commit\n     #   tox\n-wheel==0.37.0\n+wheel==0.37.1\n     # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/docs.txt,requirements/docs.txt,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -10,7 +10,7 @@ babel==2.9.1\n     # via sphinx\n certifi==2021.10.8\n     # via requests\n-charset-normalizer==2.0.7\n+charset-normalizer==2.0.9\n     # via requests\n docutils==0.16\n     # via\n@@ -18,31 +18,31 @@ docutils==0.16\n     #   sphinx-tabs\n idna==3.3\n     # via requests\n-imagesize==1.2.0\n+imagesize==1.3.0\n     # via sphinx\n-jinja2==3.0.2\n+jinja2==3.0.3\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-packaging==21.2\n+packaging==21.3\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.0.1\n+pallets-sphinx-themes==2.0.2\n     # via -r requirements/docs.in\n pygments==2.10.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==2.4.7\n+pyparsing==3.0.6\n     # via packaging\n pytz==2021.3\n     # via babel\n requests==2.26.0\n     # via sphinx\n-snowballstemmer==2.1.0\n+snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==4.2.0\n+sphinx==4.3.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/tests.txt,requirements/tests.txt,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -14,17 +14,17 @@ greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n-packaging==21.2\n+packaging==21.3\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n py==1.11.0\n     # via pytest\n-pyparsing==2.4.7\n+pyparsing==3.0.6\n     # via packaging\n pytest==6.2.5\n     # via -r requirements/tests.in\n-python-dotenv==0.19.1\n+python-dotenv==0.19.2\n     # via -r requirements/tests.in\n toml==0.10.2\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -6,21 +6,21 @@\n #\n cffi==1.15.0\n     # via cryptography\n-cryptography==35.0.0\n+cryptography==36.0.1\n     # via -r requirements/typing.in\n-mypy==0.910\n+mypy==0.930\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n-pycparser==2.20\n+pycparser==2.21\n     # via cffi\n-toml==0.10.2\n+tomli==2.0.0\n     # via mypy\n types-contextvars==2.4.0\n     # via -r requirements/typing.in\n types-dataclasses==0.6.1\n     # via -r requirements/typing.in\n-types-setuptools==57.4.2\n+types-setuptools==57.4.4\n     # via -r requirements/typing.in\n-typing-extensions==3.10.0.2\n+typing-extensions==4.0.1\n     # via mypy\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,9d36623db1e9535eae7243a807079a54897efcc9,624ed4de72e144ceeb422c8bae1cafffd7edcc73,'update requirements',"'@@ -714,7 +714,7 @@ def get_root_path(import_name: str) -> str:\n     # Module already imported and has a file attribute. Use that first.\n     mod = sys.modules.get(import_name)\n \n-    if mod is not None and hasattr(mod, ""__file__""):\n+    if mod is not None and hasattr(mod, ""__file__"") and mod.__file__ is not None:\n         return os.path.dirname(os.path.abspath(mod.__file__))\n \n     # Next attempt: check the loader.\n'",2.782608695652174,2.8260869565217392
.github/dependabot.yml,.github/dependabot.yml,c627b5e77310e67bc6a7e789f8ec5ea368f1c88c,edac7e3a560d93ac9f13bf162e677413b03a27e1,'updates go to maintenance branch',"'@@ -1,8 +1,12 @@\n version: 2\n updates:\n-- package-ecosystem: pip\n-  directory: ""/""\n+- package-ecosystem: ""pip""\n+  directory: ""/requirements""\n+  target-branch: ""2.0.x""\n+  versioning-strategy: ""lockfile-only""\n   schedule:\n-    interval: monthly\n-    time: ""08:00""\n+    interval: ""monthly""\n+    day: ""monday""\n+    time: ""16:00""\n+    timezone: ""UTC""\n   open-pull-requests-limit: 99\n'",0,0
.github/dependabot.yml,.github/dependabot.yml,2952e6a323e085d1547461b89184e2239090fe1a,c627b5e77310e67bc6a7e789f8ec5ea368f1c88c,'update github actions',"'@@ -10,3 +10,10 @@ updates:\n     time: ""16:00""\n     timezone: ""UTC""\n   open-pull-requests-limit: 99\n+- package-ecosystem: ""github-actions""\n+  directory: ""/""\n+  schedule:\n+    interval: ""monthly""\n+    day: ""monday""\n+    time: ""16:00""\n+    timezone: ""UTC""\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,a65683a65cbbe176ef6e061812618a507a071106,2952e6a323e085d1547461b89184e2239090fe1a,'Bump dessant/lock-threads from 2 to 3\n\nBumps [dessant/lock-threads](https://github.com/dessant/lock-threads) from 2 to 3.\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/v2...v3)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,7 +8,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@v2\n+      - uses: dessant/lock-threads@v3\n         with:\n           github-token: ${{ github.token }}\n           issue-lock-inactive-days: 14\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,79b3cecc3db0ca8efe2ba1eb43b7d7572811cdfc,2952e6a323e085d1547461b89184e2239090fe1a,'updates go to maintenance branch',"'@@ -1,4 +1,5 @@\n ci:\n+  autoupdate_branch: ""2.0.x""\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,9e00becf3a7a710ab06379f8d7aee1547a4dd332,a65683a65cbbe176ef6e061812618a507a071106,'update option names for v3',"'@@ -11,5 +11,5 @@ jobs:\n       - uses: dessant/lock-threads@v3\n         with:\n           github-token: ${{ github.token }}\n-          issue-lock-inactive-days: 14\n-          pr-lock-inactive-days: 14\n+          issue-inactive-days: 14\n+          pr-inactive-days: 14\n'",0,0
CHANGES.rst,CHANGES.rst,a841cfabb58d3c1ac1d11b09353f458e759a63c2,c5ca175004f1a153aff914eb14404973be05fb9b,"""Only use a custom JSONDecoder if needed\n\nThe default JSONDecoder adds no extra functionality to `json.loads`, but using a custom class in the function call you off of an optimized fast path in pypy (it adds some overhead in cpython, but I think it's minimal). This change sticks with the default loading behaviour unless the user has specifically opted in to customising it.\n\nCo-authored-by: David Lord <davidism@gmail.com>""","'@@ -12,6 +12,9 @@ Unreleased\n -   Fix type annotation for ``errorhandler`` decorator. :issue:`4295`\n -   Revert a change to the CLI that caused it to hide ``ImportError``\n     tracebacks when importing the application. :issue:`4307`\n+-   ``app.json_encoder`` and ``json_decoder`` are only passed to\n+    ``dumps`` and ``loads`` if they have custom behavior. This improves\n+    performance, mainly on PyPy. :issue:`4349`\n \n \n Version 2.0.2\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,a841cfabb58d3c1ac1d11b09353f458e759a63c2,c5ca175004f1a153aff914eb14404973be05fb9b,"""Only use a custom JSONDecoder if needed\n\nThe default JSONDecoder adds no extra functionality to `json.loads`, but using a custom class in the function call you off of an optimized fast path in pypy (it adds some overhead in cpython, but I think it's minimal). This change sticks with the default loading behaviour unless the user has specifically opted in to customising it.\n\nCo-authored-by: David Lord <davidism@gmail.com>""","'@@ -81,6 +81,11 @@ def _dump_arg_defaults(\n         if bp is not None and bp.json_encoder is not None:\n             cls = bp.json_encoder\n \n+        # Only set a custom encoder if it has custom behavior. This is\n+        # faster on PyPy.\n+        if cls is not _json.JSONEncoder:\n+            kwargs.setdefault(""cls"", cls)\n+\n         kwargs.setdefault(""cls"", cls)\n         kwargs.setdefault(""ensure_ascii"", app.config[""JSON_AS_ASCII""])\n         kwargs.setdefault(""sort_keys"", app.config[""JSON_SORT_KEYS""])\n@@ -102,9 +107,10 @@ def _load_arg_defaults(\n         if bp is not None and bp.json_decoder is not None:\n             cls = bp.json_decoder\n \n-        kwargs.setdefault(""cls"", cls)\n-    else:\n-        kwargs.setdefault(""cls"", JSONDecoder)\n+        # Only set a custom decoder if it has custom behavior. This is\n+        # faster on PyPy.\n+        if cls not in {JSONDecoder, _json.JSONDecoder}:\n+            kwargs.setdefault(""cls"", cls)\n \n \n def dumps(obj: t.Any, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> str:\n'",4.0,4.2
CHANGES.rst,CHANGES.rst,633449a36c959d25577799eb3da76005a803d5cd,7b0c82dfdc867641dd6e1b200f735bffd66e4c12,'fix error message',"'@@ -15,6 +15,8 @@ Unreleased\n -   ``app.json_encoder`` and ``json_decoder`` are only passed to\n     ``dumps`` and ``loads`` if they have custom behavior. This improves\n     performance, mainly on PyPy. :issue:`4349`\n+-   Fix error message for ``after_this_request`` when it used outside\n+    request context. :issue:`4333`\n \n \n Version 2.0.2\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,633449a36c959d25577799eb3da76005a803d5cd,7b0c82dfdc867641dd6e1b200f735bffd66e4c12,'fix error message',"'@@ -130,7 +130,15 @@ def after_this_request(f: AfterRequestCallable) -> AfterRequestCallable:\n \n     .. versionadded:: 0.9\n     """"""\n-    _request_ctx_stack.top._after_request_functions.append(f)\n+    top = _request_ctx_stack.top\n+    if top is None:\n+        raise RuntimeError(\n+            ""This decorator can only be used at local scopes ""\n+            ""when a request context is on the stack. For instance within ""\n+            ""view functions.""\n+        )\n+    top._after_request_functions.append(f)\n+\n     return f\n \n \n'",1.9,1.9333333333333333
CHANGES.rst,CHANGES.rst,b1a00ebc4c6f15055ddf15ecb17243a089f52a60,633449a36c959d25577799eb3da76005a803d5cd,'update error message for after_this_request and copy_current_request_context',"'@@ -15,7 +15,7 @@ Unreleased\n -   ``app.json_encoder`` and ``json_decoder`` are only passed to\n     ``dumps`` and ``loads`` if they have custom behavior. This improves\n     performance, mainly on PyPy. :issue:`4349`\n--   Fix error message for ``after_this_request`` when it used outside\n+-   Clearer error message when ``after_this_request`` is used outside a\n     request context. :issue:`4333`\n \n \n'",0,0
src/flask/ctx.py,src/flask/ctx.py,b1a00ebc4c6f15055ddf15ecb17243a089f52a60,633449a36c959d25577799eb3da76005a803d5cd,'update error message for after_this_request and copy_current_request_context',"'@@ -131,14 +131,14 @@ def after_this_request(f: AfterRequestCallable) -> AfterRequestCallable:\n     .. versionadded:: 0.9\n     """"""\n     top = _request_ctx_stack.top\n+\n     if top is None:\n         raise RuntimeError(\n-            ""This decorator can only be used at local scopes ""\n-            ""when a request context is on the stack. For instance within ""\n-            ""view functions.""\n+            ""This decorator can only be used when a request context is""\n+            "" active, such as within a view function.""\n         )\n-    top._after_request_functions.append(f)\n \n+    top._after_request_functions.append(f)\n     return f\n \n \n@@ -167,12 +167,13 @@ def copy_current_request_context(f: t.Callable) -> t.Callable:\n     .. versionadded:: 0.10\n     """"""\n     top = _request_ctx_stack.top\n+\n     if top is None:\n         raise RuntimeError(\n-            ""This decorator can only be used at local scopes ""\n-            ""when a request context is on the stack.  For instance within ""\n-            ""view functions.""\n+            ""This decorator can only be used when a request context is""\n+            "" active, such as within a view function.""\n         )\n+\n     reqctx = top.copy()\n \n     def wrapper(*args, **kwargs):\n'",1.9333333333333333,1.9333333333333333
docs/server.rst,docs/server.rst,0122a4f34f2d4f68fc64ca14532f2fbaed5c302f,6389c07530fe53f64e4c8de8dfdfceb4f088d197,'Fix the command for checking port on macOS in server docs',"'@@ -80,27 +80,34 @@ messages:\n Either identify and stop the other program, or use\n ``flask run --port 5001`` to pick a different port.\n \n-You can use ``netstat`` to identify what process id is using a port,\n-then use other operating system tools stop that process. The following\n-example shows that process id 6847 is using port 5000.\n+You can use ``netstat`` or ``lsof`` to identify what process id is using\n+a port, then use other operating system tools stop that process. The\n+following example shows that process id 6847 is using port 5000.\n \n .. tabs::\n \n-    .. group-tab:: Linux/Mac\n+    .. tab:: ``netstat`` (Linux)\n \n         .. code-block:: text\n \n             $ netstat -nlp | grep 5000\n             tcp 0 0 127.0.0.1:5000 0.0.0.0:* LISTEN 6847/python\n \n-    .. group-tab:: Windows\n+    .. tab:: ``lsof`` (macOS / Linux)\n+\n+        .. code-block:: text\n+\n+            $ lsof -P -i :5000\n+            Python 6847 IPv4 TCP localhost:5000 (LISTEN)\n+\n+    .. tab:: ``netstat`` (Windows)\n \n         .. code-block:: text\n \n             > netstat -ano | findstr 5000\n             TCP 127.0.0.1:5000 0.0.0.0:0 LISTENING 6847\n \n-MacOS Monterey and later automatically starts a service that uses port\n+macOS Monterey and later automatically starts a service that uses port\n 5000. To disable the service, go to System Preferences, Sharing, and\n disable ""AirPlay Receiver"".\n \n'",0,0
.readthedocs.yaml,.readthedocs.yaml,93a7f08bbca37de2ef73cc21ebfcb6e446087616,9504de9dd00a7c94f37eb5225588cfb952a37d7f,'pin os and python version in rtd build',"'@@ -1,4 +1,8 @@\n version: 2\n+build:\n+  os: ubuntu-20.04\n+  tools:\n+    python: 3.10\n python:\n   install:\n     - requirements: requirements/docs.txt\n'",0,0
.readthedocs.yaml,.readthedocs.yaml,1a1c7ea61860ad97a998b24532f0a89a5aee7914,990a95fbcaaeafdc4bedc793352deb999f2b6be4,'pin os and python version in rtd build\n\n(cherry picked from commit 93a7f08bbca37de2ef73cc21ebfcb6e446087616)',"'@@ -1,4 +1,8 @@\n version: 2\n+build:\n+  os: ubuntu-20.04\n+  tools:\n+    python: 3.10\n python:\n   install:\n     - requirements: requirements/docs.txt\n'",0,0
.readthedocs.yaml,.readthedocs.yaml,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,1a1c7ea61860ad97a998b24532f0a89a5aee7914,'pin os and python version in rtd build',"'@@ -2,7 +2,7 @@ version: 2\n build:\n   os: ubuntu-20.04\n   tools:\n-    python: 3.10\n+    python: ""3.10""\n python:\n   install:\n     - requirements: requirements/docs.txt\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,a025ee3f25044145a38e650aaf097f32bc5b2e83,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,'update requirements',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.29.1\n+    rev: v2.31.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -25,7 +25,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.0.1\n+    rev: v4.1.0\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
requirements/dev.txt,requirements/dev.txt,a025ee3f25044145a38e650aaf097f32bc5b2e83,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,'update requirements',"'@@ -8,12 +8,10 @@ alabaster==0.7.12\n     # via sphinx\n asgiref==3.4.1\n     # via -r requirements/tests.in\n-attrs==21.2.0\n+attrs==21.4.0\n     # via pytest\n babel==2.9.1\n     # via sphinx\n-backports.entry-points-selectable==1.1.1\n-    # via virtualenv\n blinker==1.4\n     # via -r requirements/tests.in\n certifi==2021.10.8\n@@ -22,7 +20,7 @@ cffi==1.15.0\n     # via cryptography\n cfgv==3.3.1\n     # via pre-commit\n-charset-normalizer==2.0.9\n+charset-normalizer==2.0.10\n     # via requests\n click==8.0.3\n     # via pip-tools\n@@ -34,13 +32,13 @@ docutils==0.16\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.4.0\n+filelock==3.4.2\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.4.0\n+identify==2.4.3\n     # via pre-commit\n idna==3.3\n     # via requests\n@@ -52,7 +50,7 @@ jinja2==3.0.3\n     # via sphinx\n markupsafe==2.0.1\n     # via jinja2\n-mypy==0.930\n+mypy==0.931\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -70,7 +68,7 @@ pep517==0.12.0\n     # via pip-tools\n pip-tools==6.4.0\n     # via -r requirements/dev.in\n-platformdirs==2.4.0\n+platformdirs==2.4.1\n     # via virtualenv\n pluggy==1.0.0\n     # via\n@@ -84,7 +82,7 @@ py==1.11.0\n     #   tox\n pycparser==2.21\n     # via cffi\n-pygments==2.10.0\n+pygments==2.11.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -98,7 +96,7 @@ pytz==2021.3\n     # via babel\n pyyaml==6.0\n     # via pre-commit\n-requests==2.26.0\n+requests==2.27.1\n     # via sphinx\n six==1.16.0\n     # via\n@@ -113,7 +111,7 @@ sphinx==4.3.2\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-issues==1.2.0\n+sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n sphinx-tabs==3.2.0\n     # via -r requirements/docs.in\n@@ -140,19 +138,19 @@ tomli==2.0.0\n     # via\n     #   mypy\n     #   pep517\n-tox==3.24.4\n+tox==3.24.5\n     # via -r requirements/dev.in\n-types-contextvars==2.4.0\n+types-contextvars==2.4.1\n     # via -r requirements/typing.in\n-types-dataclasses==0.6.1\n+types-dataclasses==0.6.4\n     # via -r requirements/typing.in\n-types-setuptools==57.4.4\n+types-setuptools==57.4.7\n     # via -r requirements/typing.in\n typing-extensions==4.0.1\n     # via mypy\n-urllib3==1.26.7\n+urllib3==1.26.8\n     # via requests\n-virtualenv==20.10.0\n+virtualenv==20.13.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,a025ee3f25044145a38e650aaf097f32bc5b2e83,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,'update requirements',"'@@ -10,7 +10,7 @@ babel==2.9.1\n     # via sphinx\n certifi==2021.10.8\n     # via requests\n-charset-normalizer==2.0.9\n+charset-normalizer==2.0.10\n     # via requests\n docutils==0.16\n     # via\n@@ -30,7 +30,7 @@ packaging==21.3\n     #   sphinx\n pallets-sphinx-themes==2.0.2\n     # via -r requirements/docs.in\n-pygments==2.10.0\n+pygments==2.11.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -38,7 +38,7 @@ pyparsing==3.0.6\n     # via packaging\n pytz==2021.3\n     # via babel\n-requests==2.26.0\n+requests==2.27.1\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n@@ -49,7 +49,7 @@ sphinx==4.3.2\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-issues==1.2.0\n+sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n sphinx-tabs==3.2.0\n     # via -r requirements/docs.in\n@@ -67,7 +67,7 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.7\n+urllib3==1.26.8\n     # via requests\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/tests.txt,requirements/tests.txt,a025ee3f25044145a38e650aaf097f32bc5b2e83,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,'update requirements',"'@@ -6,7 +6,7 @@\n #\n asgiref==3.4.1\n     # via -r requirements/tests.in\n-attrs==21.2.0\n+attrs==21.4.0\n     # via pytest\n blinker==1.4\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,a025ee3f25044145a38e650aaf097f32bc5b2e83,9e50ad55ae6c3938c2ffd0cad89942c12fca865c,'update requirements',"'@@ -8,7 +8,7 @@ cffi==1.15.0\n     # via cryptography\n cryptography==36.0.1\n     # via -r requirements/typing.in\n-mypy==0.930\n+mypy==0.931\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -16,11 +16,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.0\n     # via mypy\n-types-contextvars==2.4.0\n+types-contextvars==2.4.1\n     # via -r requirements/typing.in\n-types-dataclasses==0.6.1\n+types-dataclasses==0.6.4\n     # via -r requirements/typing.in\n-types-setuptools==57.4.4\n+types-setuptools==57.4.7\n     # via -r requirements/typing.in\n typing-extensions==4.0.1\n     # via mypy\n'",0,0
.github/dependabot.yml,.github/dependabot.yml,66f2ac669610accd76395a98b623a21b1f15a9c8,a025ee3f25044145a38e650aaf097f32bc5b2e83,'update tool config',"'@@ -1,8 +1,19 @@\n version: 2\n updates:\n-- package-ecosystem: pip\n-  directory: ""/""\n+- package-ecosystem: ""pip""\n+  directory: ""/requirements""\n+  target-branch: ""2.0.x""\n+  versioning-strategy: ""lockfile-only""\n   schedule:\n-    interval: monthly\n-    time: ""08:00""\n+    interval: ""monthly""\n+    day: ""monday""\n+    time: ""16:00""\n+    timezone: ""UTC""\n   open-pull-requests-limit: 99\n+- package-ecosystem: ""github-actions""\n+  directory: ""/""\n+  schedule:\n+    interval: ""monthly""\n+    day: ""monday""\n+    time: ""16:00""\n+    timezone: ""UTC""\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,66f2ac669610accd76395a98b623a21b1f15a9c8,a025ee3f25044145a38e650aaf097f32bc5b2e83,'update tool config',"'@@ -8,8 +8,8 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@v2\n+      - uses: dessant/lock-threads@v3\n         with:\n           github-token: ${{ github.token }}\n-          issue-lock-inactive-days: 14\n-          pr-lock-inactive-days: 14\n+          issue-inactive-days: 14\n+          pr-inactive-days: 14\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,66f2ac669610accd76395a98b623a21b1f15a9c8,a025ee3f25044145a38e650aaf097f32bc5b2e83,'update tool config',"'@@ -1,4 +1,5 @@\n ci:\n+  autoupdate_branch: ""2.0.x""\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n'",0,0
setup.cfg,setup.cfg,66f2ac669610accd76395a98b623a21b1f15a9c8,a025ee3f25044145a38e650aaf097f32bc5b2e83,'update tool config',"""@@ -34,7 +34,7 @@ classifiers =\n [options]\n packages = find:\n package_dir = = src\n-include_package_data = true\n+include_package_data = True\n python_requires = >= 3.6\n # Dependencies are in setup.py for GitHub's dependency graph.\n \n@@ -67,7 +67,7 @@ source =\n # F = flake8 pyflakes\n # W = pycodestyle warnings\n # B9 = bugbear opinions\n-# ISC = implicit-str-concat\n+# ISC = implicit str concat\n select = B, E, F, W, B9, ISC\n ignore =\n     # slice notation whitespace, invalid\n@@ -83,12 +83,13 @@ ignore =\n # up to 88 allowed by bugbear B950\n max-line-length = 80\n per-file-ignores =\n-    # __init__ module exports names\n+    # __init__ exports names\n     src/flask/__init__.py: F401\n \n [mypy]\n files = src/flask\n python_version = 3.6\n+show_error_codes = True\n allow_redefinition = True\n disallow_subclassing_any = True\n # disallow_untyped_calls = True\n""",0,0
docs/cli.rst,docs/cli.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -27,6 +27,13 @@ environment variable is used to specify how to load the application.\n          $ export FLASK_APP=hello\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP hello\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -157,6 +164,20 @@ reloader.\n           * Debugger is active!\n           * Debugger PIN: 223-456-919\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+         $ flask run\n+          * Serving Flask app ""hello""\n+          * Environment: development\n+          * Debug mode: on\n+          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+          * Restarting with inotify reloader\n+          * Debugger is active!\n+          * Debugger PIN: 223-456-919\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -208,6 +229,17 @@ separated with ``:``, or ``;`` on Windows.\n            * Running on http://127.0.0.1:8000/\n            * Detected change in \'/path/to/file1\', reloading\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+          $ flask run --extra-files file1:dirA/file2:dirB/\n+          # or\n+          $ set -x FLASK_RUN_EXTRA_FILES file1 dirA/file2 dirB/\n+          $ flask run\n+           * Running on http://127.0.0.1:8000/\n+           * Detected change in \'/path/to/file1\', reloading\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -288,6 +320,14 @@ command, instead of ``flask run --port 8000``:\n          $ flask run\n           * Running on http://127.0.0.1:8000/\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_RUN_PORT 8000\n+         $ flask run\n+          * Running on http://127.0.0.1:8000/\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -335,6 +375,13 @@ configure as expected.\n          $ export FLASK_SKIP_DOTENV=1\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_SKIP_DOTENV 1\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -365,6 +412,12 @@ script. Activating the virtualenv will set the variables.\n \n           $ export FLASK_APP=hello\n \n+   .. group-tab:: Fish\n+\n+      Fish, :file:`venv/bin/activate.fish`::\n+\n+          $ set -x FLASK_APP hello\n+\n    .. group-tab:: CMD\n \n       Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::\n'",1.0,1.0
docs/config.rst,docs/config.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -76,6 +76,13 @@ set :envvar:`FLASK_ENV`:\n          $ export FLASK_ENV=development\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -445,6 +452,14 @@ in the shell before starting the server:\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x YOURAPPLICATION_SETTINGS /path/to/settings.cfg\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -517,6 +532,15 @@ Environment variables can be set in the shell before starting the server:\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x SECRET_KEY ""5f352379324c22463451387a0aec5d2f""\n+         $ set -x MAIL_ENABLED false\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",1.0,1.0
docs/debugging.rst,docs/debugging.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -53,6 +53,13 @@ enables the debugger and reloader.\n          $ export FLASK_ENV=development\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -106,6 +113,13 @@ When running from the command line:\n          $ export FLASK_ENV=development\n          $ flask run --no-debugger --no-reload\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+         $ flask run --no-debugger --no-reload\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",0,0
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -98,6 +98,13 @@ To run such an application, you can use the :command:`flask` command:\n          $ export FLASK_APP=myapp\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP myapp\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -124,6 +131,13 @@ in ``myapp``. You can also pass arguments to the factory like this:\n          $ export FLASK_APP=""myapp:create_app(\'dev\')""\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP ""myapp:create_app(\'dev\')""\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",1.0,1.0
docs/patterns/packages.rst,docs/patterns/packages.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -67,6 +67,12 @@ that tells Flask where to find the application instance:\n \n          $ export FLASK_APP=yourapplication\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP yourapplication\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -91,6 +97,12 @@ development features like this:\n \n          $ export FLASK_ENV=development\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -54,6 +54,14 @@ to tell your terminal the application to work with by exporting the\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP hello\n+         $ flask run\n+          * Running on http://127.0.0.1:5000/\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n@@ -166,6 +174,13 @@ variable to ``development`` before calling ``flask run``.\n          $ export FLASK_ENV=development\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_ENV development\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",1.2666666666666666,1.2666666666666666
docs/server.rst,docs/server.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -33,6 +33,14 @@ fully enable development mode.\n          $ export FLASK_ENV=development\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP hello\n+         $ export FLASK_ENV=development\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -57,6 +57,13 @@ create the database in the instance folder.\n          $ export FLASK_APP=flaskr\n          $ flask init-db\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP flaskr\n+         $ flask init-db\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,afe77feef351c2752bb9d4a93b65e11215633e06,66f2ac669610accd76395a98b623a21b1f15a9c8,'Adding Fish commands to docs',"'@@ -145,6 +145,14 @@ follow the tutorial.\n          $ export FLASK_ENV=development\n          $ flask run\n \n+   .. group-tab:: Fish\n+\n+      .. code-block:: text\n+\n+         $ set -x FLASK_APP flaskr\n+         $ set -x FLASK_ENV development\n+         $ flask run\n+\n    .. group-tab:: CMD\n \n       .. code-block:: text\n'",0,0
docs/security.rst,docs/security.rst,08ad8aabfea88c1c3367c1c1ba6b97aa40faf18c,981a94df68b3e35c2541a8ba19c361e88299e3ee,'Remove X-XSS-Protection suggestion',"""@@ -173,18 +173,6 @@ invisibly to clicks on your page's elements. This is also known as\n \n - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\n \n-X-XSS-Protection\n-~~~~~~~~~~~~~~~~\n-\n-The browser will try to prevent reflected XSS attacks by not loading the page\n-if the request contains something that looks like JavaScript and the response\n-contains the same data. ::\n-\n-    response.headers['X-XSS-Protection'] = '1; mode=block'\n-\n-- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection\n-\n-\n .. _security-cookie:\n \n Set-Cookie options\n""",1.0,1.0
CHANGES.rst,CHANGES.rst,aab064fee164aa9f0ee35ba3065b031655888ce5,d03df1fff396052d55bedbfc10cbe41a98caad14,'remove deprecated as_tuple parameter from test_client',"""@@ -19,6 +19,8 @@ Unreleased\n         instead.\n     -   The same blueprint cannot be registered with the same name. Use\n         ``name=`` when registering to specify a unique name.\n+    -   The test client's ``as_tuple`` parameter is removed. Use\n+        ``response.request.environ`` instead. :pr:`4417`\n \n -   Some parameters in ``send_file`` and ``send_from_directory`` were\n     renamed in 2.0. The deprecation period for the old names is extended\n""",0,0
src/flask/testing.py,src/flask/testing.py,aab064fee164aa9f0ee35ba3065b031655888ce5,d03df1fff396052d55bedbfc10cbe41a98caad14,'remove deprecated as_tuple parameter from test_client',"'@@ -179,8 +179,6 @@ class FlaskClient(Client):\n         follow_redirects: bool = False,\n         **kwargs: t.Any,\n     ) -> ""TestResponse"":\n-        as_tuple = kwargs.pop(""as_tuple"", None)\n-\n         # Same logic as super.open, but apply environ_base and preserve_context.\n         request = None\n \n@@ -215,28 +213,11 @@ class FlaskClient(Client):\n             finally:\n                 builder.close()\n \n-        if as_tuple is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""\'as_tuple\' is deprecated and will be removed in""\n-                "" Werkzeug 2.1 and Flask 2.1. Use""\n-                "" \'response.request.environ\' instead."",\n-                DeprecationWarning,\n-                stacklevel=3,\n-            )\n-            return super().open(\n-                request,\n-                as_tuple=as_tuple,\n-                buffered=buffered,\n-                follow_redirects=follow_redirects,\n-            )\n-        else:\n-            return super().open(\n-                request,\n-                buffered=buffered,\n-                follow_redirects=follow_redirects,\n-            )\n+        return super().open(\n+            request,\n+            buffered=buffered,\n+            follow_redirects=follow_redirects,\n+        )\n \n     def __enter__(self) -> ""FlaskClient"":\n         if self.preserve_context:\n'",3.9,3.8
CHANGES.rst,CHANGES.rst,751d85f3de3f726446bb12e4ddfae885a6645ba1,fdac8a5404e3e3a316568107a293f134707c75bb,'cli: use importlib.metadata instead of pkg_resources',"'@@ -35,6 +35,8 @@ Unreleased\n     or ``AppContext.g`` instead. :issue:`3898`\n -   ``copy_current_request_context`` can decorate async functions.\n     :pr:`4303`\n+-   Replace the previously undocumented ``setuptools`` dependency in the CLI\n+    with ``importlib.metadata``. :issue:`4419`\n \n \n Version 2.0.3\n'",0,0
setup.py,setup.py,751d85f3de3f726446bb12e4ddfae885a6645ba1,fdac8a5404e3e3a316568107a293f134707c75bb,'cli: use importlib.metadata instead of pkg_resources',"'@@ -8,6 +8,7 @@ setup(\n         ""Jinja2 >= 3.0"",\n         ""itsdangerous >= 2.0"",\n         ""click >= 8.0"",\n+        ""importlib-metadata; python_version < \'3.10\'"",\n     ],\n     extras_require={\n         ""async"": [""asgiref >= 3.2""],\n'",0,0
src/flask/cli.py,src/flask/cli.py,751d85f3de3f726446bb12e4ddfae885a6645ba1,fdac8a5404e3e3a316568107a293f134707c75bb,'cli: use importlib.metadata instead of pkg_resources',"'@@ -28,6 +28,16 @@ try:\n except ImportError:\n     ssl = None  # type: ignore\n \n+if sys.version_info >= (3, 10):\n+    from importlib import metadata\n+else:\n+    # Use a backport on Python < 3.10.\n+    #\n+    # We technically have importlib.metadata on 3.8+,\n+    # but the API changed in 3.10, so use the backport\n+    # for consistency.\n+    import importlib_metadata as metadata  # type: ignore\n+\n \n class NoAppException(click.UsageError):\n     """"""Raised if an application cannot be found or loaded.""""""\n@@ -494,14 +504,10 @@ class FlaskGroup(AppGroup):\n     def _load_plugin_commands(self):\n         if self._loaded_plugin_commands:\n             return\n-        try:\n-            import pkg_resources\n-        except ImportError:\n-            self._loaded_plugin_commands = True\n-            return\n \n-        for ep in pkg_resources.iter_entry_points(""flask.commands""):\n+        for ep in metadata.entry_points(group=""flask.commands""):\n             self.add_command(ep.load(), ep.name)\n+\n         self._loaded_plugin_commands = True\n \n     def get_command(self, ctx, name):\n'",4.114285714285714,4.085714285714285
src/flask/templating.py,src/flask/templating.py,9a134da31bafc12d31f75474a4b354c80545b9b5,fdac8a5404e3e3a316568107a293f134707c75bb,'Match typing declaration with implementation.',"'@@ -131,7 +131,8 @@ def _render(template: Template, context: dict, app: ""Flask"") -> str:\n \n \n def render_template(\n-    template_name_or_list: t.Union[str, t.List[str]], **context: t.Any\n+    template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n+    **context: t.Any\n ) -> str:\n     """"""Renders a template from the template folder with the given\n     context.\n'",2.5454545454545454,2.5454545454545454
.pre-commit-config.yaml,.pre-commit-config.yaml,436c7afc83845ce18d2a8e1bda8f4f48917584a2,de4b2807d3269e780b77e73e05dfa27121994f40,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/reorder_python_imports: v2.6.0 → v2.7.1](https://github.com/asottile/reorder_python_imports/compare/v2.6.0...v2.7.1)\n- [github.com/psf/black: 21.12b0 → 22.1.0](https://github.com/psf/black/compare/21.12b0...22.1.0)',"'@@ -8,14 +8,14 @@ repos:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.6.0\n+    rev: v2.7.1\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 21.12b0\n+    rev: 22.1.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
CHANGES.rst,CHANGES.rst,694eb84f414436fc88f2ef757aea8ed8360500f3,17c46b2ddd8b5111369cdc68d5e0e46e9aa46ade,'reword changelog for importlib.resources',"'@@ -35,8 +35,8 @@ Unreleased\n     or ``AppContext.g`` instead. :issue:`3898`\n -   ``copy_current_request_context`` can decorate async functions.\n     :pr:`4303`\n--   Replace the previously undocumented ``setuptools`` dependency in the CLI\n-    with ``importlib.metadata``. :issue:`4419`\n+-   The CLI uses ``importlib.metadata`` instead of ``setuptools`` to\n+    load command entry points. :issue:`4419`\n \n \n Version 2.0.3\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -25,6 +25,10 @@ repos:\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n+  - repo: https://github.com/peterdemin/pip-compile-multi\n+    rev: v2.4.3\n+    hooks:\n+      - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n     rev: v4.1.0\n     hooks:\n'",0,0
requirements/dev.in,requirements/dev.in,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,6 +1,6 @@\n -r docs.in\n -r tests.in\n -r typing.in\n-pip-tools\n+pip-compile-multi\n pre-commit\n tox\n'",0,0
requirements/dev.txt,requirements/dev.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,156 +1,52 @@\n+# SHA1:54b5b77ec8c7a0064ffa93b2fd16cb0130ba177c\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/dev.in\n+#    pip-compile-multi\n #\n-alabaster==0.7.12\n-    # via sphinx\n-asgiref==3.4.1\n-    # via -r requirements/tests.in\n-attrs==21.4.0\n-    # via pytest\n-babel==2.9.1\n-    # via sphinx\n-blinker==1.4\n-    # via -r requirements/tests.in\n-certifi==2021.10.8\n-    # via requests\n-cffi==1.15.0\n-    # via cryptography\n+-r docs.txt\n+-r tests.txt\n+-r typing.txt\n cfgv==3.3.1\n     # via pre-commit\n-charset-normalizer==2.0.10\n-    # via requests\n click==8.0.3\n-    # via pip-tools\n-cryptography==36.0.1\n-    # via -r requirements/typing.in\n+    # via\n+    #   pip-compile-multi\n+    #   pip-tools\n distlib==0.3.4\n     # via virtualenv\n-docutils==0.16\n-    # via\n-    #   sphinx\n-    #   sphinx-tabs\n filelock==3.4.2\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.4.3\n+identify==2.4.8\n     # via pre-commit\n-idna==3.3\n-    # via requests\n-imagesize==1.3.0\n-    # via sphinx\n-iniconfig==1.1.1\n-    # via pytest\n-jinja2==3.0.3\n-    # via sphinx\n-markupsafe==2.0.1\n-    # via jinja2\n-mypy==0.931\n-    # via -r requirements/typing.in\n-mypy-extensions==0.4.3\n-    # via mypy\n nodeenv==1.6.0\n     # via pre-commit\n-packaging==21.3\n-    # via\n-    #   pallets-sphinx-themes\n-    #   pytest\n-    #   sphinx\n-    #   tox\n-pallets-sphinx-themes==2.0.2\n-    # via -r requirements/docs.in\n pep517==0.12.0\n     # via pip-tools\n-pip-tools==6.4.0\n+pip-compile-multi==2.4.3\n     # via -r requirements/dev.in\n+pip-tools==6.5.1\n+    # via pip-compile-multi\n platformdirs==2.4.1\n     # via virtualenv\n-pluggy==1.0.0\n-    # via\n-    #   pytest\n-    #   tox\n-pre-commit==2.16.0\n+pre-commit==2.17.0\n     # via -r requirements/dev.in\n-py==1.11.0\n-    # via\n-    #   pytest\n-    #   tox\n-pycparser==2.21\n-    # via cffi\n-pygments==2.11.2\n-    # via\n-    #   sphinx\n-    #   sphinx-tabs\n-pyparsing==3.0.6\n-    # via packaging\n-pytest==6.2.5\n-    # via -r requirements/tests.in\n-python-dotenv==0.19.2\n-    # via -r requirements/tests.in\n-pytz==2021.3\n-    # via babel\n pyyaml==6.0\n     # via pre-commit\n-requests==2.27.1\n-    # via sphinx\n six==1.16.0\n     # via\n     #   tox\n     #   virtualenv\n-snowballstemmer==2.2.0\n-    # via sphinx\n-sphinx==4.3.2\n-    # via\n-    #   -r requirements/docs.in\n-    #   pallets-sphinx-themes\n-    #   sphinx-issues\n-    #   sphinx-tabs\n-    #   sphinxcontrib-log-cabinet\n-sphinx-issues==3.0.1\n-    # via -r requirements/docs.in\n-sphinx-tabs==3.2.0\n-    # via -r requirements/docs.in\n-sphinxcontrib-applehelp==1.0.2\n-    # via sphinx\n-sphinxcontrib-devhelp==1.0.2\n-    # via sphinx\n-sphinxcontrib-htmlhelp==2.0.0\n-    # via sphinx\n-sphinxcontrib-jsmath==1.0.1\n-    # via sphinx\n-sphinxcontrib-log-cabinet==1.0.1\n-    # via -r requirements/docs.in\n-sphinxcontrib-qthelp==1.0.3\n-    # via sphinx\n-sphinxcontrib-serializinghtml==1.1.5\n-    # via sphinx\n-toml==0.10.2\n-    # via\n-    #   pre-commit\n-    #   pytest\n-    #   tox\n-tomli==2.0.0\n-    # via\n-    #   mypy\n-    #   pep517\n+toposort==1.7\n+    # via pip-compile-multi\n tox==3.24.5\n     # via -r requirements/dev.in\n-types-contextvars==2.4.1\n-    # via -r requirements/typing.in\n-types-dataclasses==0.6.4\n-    # via -r requirements/typing.in\n-types-setuptools==57.4.7\n-    # via -r requirements/typing.in\n-typing-extensions==4.0.1\n-    # via mypy\n-urllib3==1.26.8\n-    # via requests\n-virtualenv==20.13.0\n+virtualenv==20.13.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,8 +1,9 @@\n+# SHA1:34fd4ca6516e97c7348e6facdd9c4ebb68209d1c\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/docs.in\n+#    pip-compile-multi\n #\n alabaster==0.7.12\n     # via sphinx\n@@ -10,7 +11,7 @@ babel==2.9.1\n     # via sphinx\n certifi==2021.10.8\n     # via requests\n-charset-normalizer==2.0.10\n+charset-normalizer==2.0.11\n     # via requests\n docutils==0.16\n     # via\n@@ -34,7 +35,7 @@ pygments==2.11.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==3.0.6\n+pyparsing==3.0.7\n     # via packaging\n pytz==2021.3\n     # via babel\n@@ -42,7 +43,7 @@ requests==2.27.1\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==4.3.2\n+sphinx==4.4.0\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -69,6 +70,3 @@ sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n urllib3==1.26.8\n     # via requests\n-\n-# The following packages are considered to be unsafe in a requirements file:\n-# setuptools\n'",0,0
requirements/tests-pallets-dev.txt,requirements/tests-pallets-dev.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,8 +1,9 @@\n+# SHA1:692b640e7f835e536628f76de0afff1296524122\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/tests-pallets-dev.in\n+#    pip-compile-multi\n #\n click @ https://github.com/pallets/click/archive/refs/heads/main.tar.gz\n     # via -r requirements/tests-pallets-dev.in\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,8 +1,9 @@\n+# SHA1:4de7d9e6254a945fd97ec10880dd23b6cd43b70d\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/tests-pallets-min.in\n+#    pip-compile-multi\n #\n click==8.0.0\n     # via -r requirements/tests-pallets-min.in\n'",0,0
requirements/tests.in,requirements/tests.in,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,5 +1,5 @@\n-pytest\n-asgiref\n+pytest<7\n+asgiref<3.5\n blinker\n greenlet ; python_version < ""3.11""\n python-dotenv\n'",0,0
requirements/tests.txt,requirements/tests.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,8 +1,9 @@\n+# SHA1:39a475af80093ba5deaee28d9ac0851afb91b6a9\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/tests.in\n+#    pip-compile-multi\n #\n asgiref==3.4.1\n     # via -r requirements/tests.in\n@@ -20,7 +21,7 @@ pluggy==1.0.0\n     # via pytest\n py==1.11.0\n     # via pytest\n-pyparsing==3.0.6\n+pyparsing==3.0.7\n     # via packaging\n pytest==6.2.5\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,528db86f8555a8404bf2db72fa4275449a3cd6b4,'use pip-compile-multi for requirements',"'@@ -1,8 +1,9 @@\n+# SHA1:7cc3f64d4e78db89d81680ac81503d5ac35d31a9\n #\n-# This file is autogenerated by pip-compile with python 3.10\n+# This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n-#    pip-compile requirements/typing.in\n+#    pip-compile-multi\n #\n cffi==1.15.0\n     # via cryptography\n@@ -14,13 +15,13 @@ mypy-extensions==0.4.3\n     # via mypy\n pycparser==2.21\n     # via cffi\n-tomli==2.0.0\n+tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.1\n+types-contextvars==2.4.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.4\n     # via -r requirements/typing.in\n-types-setuptools==57.4.7\n+types-setuptools==57.4.9\n     # via -r requirements/typing.in\n typing-extensions==4.0.1\n     # via mypy\n'",0,0
tests/test_basic.py,tests/test_basic.py,426a1e25b77e760b4f54bf94aee3e3617850569f,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,'fix pytest 7 warnings',"'@@ -3,6 +3,7 @@ import re\n import sys\n import time\n import uuid\n+import warnings\n import weakref\n from datetime import datetime\n from platform import python_implementation\n@@ -1527,8 +1528,11 @@ def test_server_name_subdomain():\n     rv = client.get(""/"", ""https://dev.local"")\n     assert rv.data == b""default""\n \n-    # suppress Werkzeug 1.0 warning about name mismatch\n-    with pytest.warns(None):\n+    # suppress Werkzeug 0.15 warning about name mismatch\n+    with warnings.catch_warnings():\n+        warnings.filterwarnings(\n+            ""ignore"", ""Current server name"", UserWarning, ""flask.app""\n+        )\n         rv = client.get(""/"", ""http://foo.localhost"")\n         assert rv.status_code == 404\n \n@@ -1895,7 +1899,10 @@ def test_subdomain_matching_other_name(matching):\n         return """", 204\n \n     # suppress Werkzeug 0.15 warning about name mismatch\n-    with pytest.warns(None):\n+    with warnings.catch_warnings():\n+        warnings.filterwarnings(\n+            ""ignore"", ""Current server name"", UserWarning, ""flask.app""\n+        )\n         # ip address can\'t match name\n         rv = client.get(""/"", ""http://127.0.0.1:3000/"")\n         assert rv.status_code == 404 if matching else 204\n'",1.0679245283018868,1.0679245283018868
tests/test_reqctx.py,tests/test_reqctx.py,426a1e25b77e760b4f54bf94aee3e3617850569f,6f7d99ce4b7dc2bad52683e64fec7008dd0b580f,'fix pytest 7 warnings',"'@@ -1,3 +1,5 @@\n+import warnings\n+\n import pytest\n \n import flask\n@@ -81,7 +83,10 @@ def test_proper_test_request_context(app):\n         )\n \n     # suppress Werkzeug 0.15 warning about name mismatch\n-    with pytest.warns(None):\n+    with warnings.catch_warnings():\n+        warnings.filterwarnings(\n+            ""ignore"", ""Current server name"", UserWarning, ""flask.app""\n+        )\n         with app.test_request_context(\n             ""/"", environ_overrides={""HTTP_HOST"": ""localhost""}\n         ):\n'",1.1142857142857143,1.1142857142857143
.github/workflows/tests.yaml,.github/workflows/tests.yaml,925674761e9893dae96d8c2ff226a4cf47a21ba8,426a1e25b77e760b4f54bf94aee3e3617850569f,'cache pip with setup-python action',"'@@ -41,18 +41,12 @@ jobs:\n       - uses: actions/setup-python@v2\n         with:\n           python-version: ${{ matrix.python }}\n+          cache: \'pip\'\n+          cache-dependency-path: \'requirements/*.txt\'\n       - name: update pip\n         run: |\n           pip install -U wheel\n           pip install -U setuptools\n           python -m pip install -U pip\n-      - name: get pip cache dir\n-        id: pip-cache\n-        run: echo ""::set-output name=dir::$(pip cache dir)""\n-      - name: cache pip\n-        uses: actions/cache@v2\n-        with:\n-          path: ${{ steps.pip-cache.outputs.dir }}\n-          key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles(\'setup.py\') }}|${{ hashFiles(\'requirements/*.txt\') }}\n       - run: pip install tox\n       - run: tox -e ${{ matrix.tox }}\n'",0,0
.github/dependabot.yml,.github/dependabot.yml,1fd86547193a1ed39bb0cabb927fc1a719ce3009,925674761e9893dae96d8c2ff226a4cf47a21ba8,"'stop using dependabot for python, too noisy'","'@@ -1,15 +1,5 @@\n version: 2\n updates:\n-- package-ecosystem: ""pip""\n-  directory: ""/requirements""\n-  target-branch: ""2.0.x""\n-  versioning-strategy: ""lockfile-only""\n-  schedule:\n-    interval: ""monthly""\n-    day: ""monday""\n-    time: ""16:00""\n-    timezone: ""UTC""\n-  open-pull-requests-limit: 99\n - package-ecosystem: ""github-actions""\n   directory: ""/""\n   schedule:\n'",0,0
requirements/dev.txt,requirements/dev.txt,7c5f17a55e8cd233db17f4944a482cc497a6e7c6,e37e87140e29b4ae5bc4024bd0305541e0ed9457,'update requirements',"'@@ -42,6 +42,10 @@ six==1.16.0\n     # via\n     #   tox\n     #   virtualenv\n+toml==0.10.2\n+    # via\n+    #   pre-commit\n+    #   tox\n toposort==1.7\n     # via pip-compile-multi\n tox==3.24.5\n'",0,0
requirements/tests.in,requirements/tests.in,7c5f17a55e8cd233db17f4944a482cc497a6e7c6,e37e87140e29b4ae5bc4024bd0305541e0ed9457,'update requirements',"'@@ -1,5 +1,5 @@\n-pytest<7\n-asgiref<3.5\n+pytest\n+asgiref\n blinker\n greenlet ; python_version < ""3.11""\n python-dotenv\n'",0,0
requirements/tests.txt,requirements/tests.txt,7c5f17a55e8cd233db17f4944a482cc497a6e7c6,e37e87140e29b4ae5bc4024bd0305541e0ed9457,'update requirements',"'@@ -1,11 +1,11 @@\n-# SHA1:39a475af80093ba5deaee28d9ac0851afb91b6a9\n+# SHA1:69cf1e101a60350e9933c6f1f3b129bd9ed1ea7c\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n #    pip-compile-multi\n #\n-asgiref==3.4.1\n+asgiref==3.5.0\n     # via -r requirements/tests.in\n attrs==21.4.0\n     # via pytest\n@@ -23,9 +23,9 @@ py==1.11.0\n     # via pytest\n pyparsing==3.0.7\n     # via packaging\n-pytest==6.2.5\n+pytest==7.0.0\n     # via -r requirements/tests.in\n python-dotenv==0.19.2\n     # via -r requirements/tests.in\n-toml==0.10.2\n+tomli==2.0.1\n     # via pytest\n'",0,0
CHANGES.rst,CHANGES.rst,1be65b1b699b0512e3b38e3e05d42d083cfd12f1,7c5f17a55e8cd233db17f4944a482cc497a6e7c6,'overriding FlaskClient.open works with redirects',"'@@ -37,6 +37,8 @@ Unreleased\n     :pr:`4303`\n -   The CLI uses ``importlib.metadata`` instead of ``setuptools`` to\n     load command entry points. :issue:`4419`\n+-   Overriding ``FlaskClient.open`` will not cause an error on redirect.\n+    :issue:`3396`\n \n \n Version 2.0.3\n'",0,0
src/flask/testing.py,src/flask/testing.py,1be65b1b699b0512e3b38e3e05d42d083cfd12f1,7c5f17a55e8cd233db17f4944a482cc497a6e7c6,'overriding FlaskClient.open works with redirects',"'@@ -172,6 +172,22 @@ class FlaskClient(Client):\n             headers = resp.get_wsgi_headers(c.request.environ)\n             self.cookie_jar.extract_wsgi(c.request.environ, headers)\n \n+    def _copy_environ(self, other):\n+        return {\n+            **self.environ_base,\n+            **other,\n+            ""flask._preserve_context"": self.preserve_context,\n+        }\n+\n+    def _request_from_builder_args(self, args, kwargs):\n+        kwargs[""environ_base""] = self._copy_environ(kwargs.get(""environ_base"", {}))\n+        builder = EnvironBuilder(self.application, *args, **kwargs)\n+\n+        try:\n+            return builder.get_request()\n+        finally:\n+            builder.close()\n+\n     def open(\n         self,\n         *args: t.Any,\n@@ -179,39 +195,24 @@ class FlaskClient(Client):\n         follow_redirects: bool = False,\n         **kwargs: t.Any,\n     ) -> ""TestResponse"":\n-        # Same logic as super.open, but apply environ_base and preserve_context.\n-        request = None\n-\n-        def copy_environ(other):\n-            return {\n-                **self.environ_base,\n-                **other,\n-                ""flask._preserve_context"": self.preserve_context,\n-            }\n-\n-        if not kwargs and len(args) == 1:\n-            arg = args[0]\n-\n-            if isinstance(arg, werkzeug.test.EnvironBuilder):\n-                builder = copy(arg)\n-                builder.environ_base = copy_environ(builder.environ_base or {})\n+        if args and isinstance(\n+            args[0], (werkzeug.test.EnvironBuilder, dict, BaseRequest)\n+        ):\n+            if isinstance(args[0], werkzeug.test.EnvironBuilder):\n+                builder = copy(args[0])\n+                builder.environ_base = self._copy_environ(builder.environ_base or {})\n                 request = builder.get_request()\n-            elif isinstance(arg, dict):\n+            elif isinstance(args[0], dict):\n                 request = EnvironBuilder.from_environ(\n-                    arg, app=self.application, environ_base=copy_environ({})\n+                    args[0], app=self.application, environ_base=self._copy_environ({})\n                 ).get_request()\n-            elif isinstance(arg, BaseRequest):\n-                request = copy(arg)\n-                request.environ = copy_environ(request.environ)\n-\n-        if request is None:\n-            kwargs[""environ_base""] = copy_environ(kwargs.get(""environ_base"", {}))\n-            builder = EnvironBuilder(self.application, *args, **kwargs)\n-\n-            try:\n-                request = builder.get_request()\n-            finally:\n-                builder.close()\n+            else:\n+                # isinstance(args[0], BaseRequest)\n+                request = copy(args[0])\n+                request.environ = self._copy_environ(request.environ)\n+        else:\n+            # request is None\n+            request = self._request_from_builder_args(args, kwargs)\n \n         return super().open(\n             request,\n'",3.8,3.3636363636363638
CHANGES.rst,CHANGES.rst,beae1249f7e580779ae18d2d831f7ec51e5aff98,e06dad62f6b49dff935f241114b3590774e2786a,'add `exclude-patterns` option to `flask run`',"'@@ -39,6 +39,9 @@ Unreleased\n     load command entry points. :issue:`4419`\n -   Overriding ``FlaskClient.open`` will not cause an error on redirect.\n     :issue:`3396`\n+-   Add an ``--exclude-patterns`` option to the ``flask run`` CLI\n+    command to specify patterns that will be ignored by the reloader.\n+    :issue:`4188`\n \n \n Version 2.0.3\n'",0,0
docs/cli.rst,docs/cli.rst,beae1249f7e580779ae18d2d831f7ec51e5aff98,e06dad62f6b49dff935f241114b3590774e2786a,'add `exclude-patterns` option to `flask run`',"""@@ -262,6 +262,15 @@ separated with ``:``, or ``;`` on Windows.\n            * Detected change in '/path/to/file1', reloading\n \n \n+Ignore files with the Reloader\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The reloader can also ignore files using :mod:`fnmatch` patterns with\n+the ``--exclude-patterns`` option, or the ``FLASK_RUN_EXCLUDE_PATTERNS``\n+environment variable. Multiple patterns are separated with ``:``, or\n+``;`` on Windows.\n+\n+\n Debug Mode\n ----------\n \n""",1.0,1.0
src/flask/cli.py,src/flask/cli.py,beae1249f7e580779ae18d2d831f7ec51e5aff98,e06dad62f6b49dff935f241114b3590774e2786a,'add `exclude-patterns` option to `flask run`',"'@@ -796,9 +796,28 @@ class SeparatedPathType(click.Path):\n         f"" are separated by {os.path.pathsep!r}.""\n     ),\n )\n+@click.option(\n+    ""--exclude-patterns"",\n+    default=None,\n+    type=SeparatedPathType(),\n+    help=(\n+        ""Files matching these fnmatch patterns will not trigger a reload""\n+        "" on change. Multiple patterns are separated by""\n+        f"" {os.path.pathsep!r}.""\n+    ),\n+)\n @pass_script_info\n def run_command(\n-    info, host, port, reload, debugger, eager_loading, with_threads, cert, extra_files\n+    info,\n+    host,\n+    port,\n+    reload,\n+    debugger,\n+    eager_loading,\n+    with_threads,\n+    cert,\n+    extra_files,\n+    exclude_patterns,\n ):\n     """"""Run a local development server.\n \n@@ -830,6 +849,7 @@ def run_command(\n         threaded=with_threads,\n         ssl_context=cert,\n         extra_files=extra_files,\n+        exclude_patterns=exclude_patterns,\n     )\n \n \n'",4.085714285714285,4.085714285714285
docs/api.rst,docs/api.rst,761d7e165244709221888827cec764d8f3a3d21a,d6496c8e290adfded887e72083817de2693cdbe2,'rewrite testing docs',"'@@ -168,9 +168,9 @@ thing, like it does for :class:`request` and :class:`session`.\n     :attr:`Flask.app_ctx_globals_class`, which defaults to\n     :class:`ctx._AppCtxGlobals`.\n \n-    This is a good place to store resources during a request. During\n-    testing, you can use the :ref:`faking-resources` pattern to\n-    pre-configure such resources.\n+    This is a good place to store resources during a request. For\n+    example, a ``before_request`` function could load a user object from\n+    a session id, then set ``g.user`` to be used in the view function.\n \n     This is a proxy. See :ref:`notes-on-proxies` for more information.\n \n'",1.25,1.25
docs/testing.rst,docs/testing.rst,761d7e165244709221888827cec764d8f3a3d21a,d6496c8e290adfded887e72083817de2693cdbe2,'rewrite testing docs',"'@@ -1,463 +1,319 @@\n Testing Flask Applications\n ==========================\n \n-   **Something that is untested is broken.**\n+Flask provides utilities for testing an application. This documentation\n+goes over techniques for working with different parts of the application\n+in tests.\n \n-The origin of this quote is unknown and while it is not entirely correct, it\n-is also not far from the truth.  Untested applications make it hard to\n-improve existing code and developers of untested applications tend to\n-become pretty paranoid.  If an application has automated tests, you can\n-safely make changes and instantly know if anything breaks.\n+We will use the `pytest`_ framework to set up and run our tests.\n \n-Flask provides a way to test your application by exposing the Werkzeug\n-test :class:`~werkzeug.test.Client` and handling the context locals for you.\n-You can then use that with your favourite testing solution.\n-\n-In this documentation we will use the `pytest`_ package as the base\n-framework for our tests. You can install it with ``pip``, like so::\n+.. code-block:: text\n \n     $ pip install pytest\n \n .. _pytest: https://docs.pytest.org/\n \n-The Application\n----------------\n-\n-First, we need an application to test; we will use the application from\n-the :doc:`tutorial/index`. If you don\'t have that application yet, get\n-the source code from :gh:`the examples <examples/tutorial>`.\n-\n-So that we can import the module ``flaskr`` correctly, we need to run\n-``pip install -e .`` in the folder ``tutorial``.\n-\n-The Testing Skeleton\n---------------------\n-\n-We begin by adding a tests directory under the application root.  Then\n-create a Python file to store our tests (:file:`test_flaskr.py`). When we\n-format the filename like ``test_*.py``, it will be auto-discoverable by\n-pytest.\n-\n-Next, we create a `pytest fixture`_ called\n-:func:`client` that configures\n-the application for testing and initializes a new database::\n-\n-    import os\n-    import tempfile\n-\n-    import pytest\n-\n-    from flaskr import create_app\n-    from flaskr.db import init_db\n-\n-\n-    @pytest.fixture\n-    def client():\n-        db_fd, db_path = tempfile.mkstemp()\n-        app = create_app({\'TESTING\': True, \'DATABASE\': db_path})\n-\n-        with app.test_client() as client:\n-            with app.app_context():\n-                init_db()\n-            yield client\n-\n-        os.close(db_fd)\n-        os.unlink(db_path)\n-\n-This client fixture will be called by each individual test.  It gives us a\n-simple interface to the application, where we can trigger test requests to the\n-application.  The client will also keep track of cookies for us.\n-\n-During setup, the ``TESTING`` config flag is activated.  What\n-this does is disable error catching during request handling, so that\n-you get better error reports when performing test requests against the\n-application.\n-\n-Because SQLite3 is filesystem-based, we can easily use the\n-:mod:`tempfile` module to create a temporary database and initialize it.\n-The :func:`~tempfile.mkstemp` function does two things for us: it returns a\n-low-level file handle and a random file name, the latter we use as\n-database name.  We just have to keep the `db_fd` around so that we can use\n-the :func:`os.close` function to close the file.\n-\n-To delete the database after the test, the fixture closes the file and removes\n-it from the filesystem.\n-\n-If we now run the test suite, we should see the following output::\n-\n-    $ pytest\n-\n-    ================ test session starts ================\n-    rootdir: ./flask/examples/flaskr, inifile: setup.cfg\n-    collected 0 items\n-\n-    =========== no tests ran in 0.07 seconds ============\n-\n-Even though it did not run any actual tests, we already know that our\n-``flaskr`` application is syntactically valid, otherwise the import\n-would have died with an exception.\n-\n-.. _pytest fixture:\n-   https://docs.pytest.org/en/latest/fixture.html\n-\n-The First Test\n---------------\n-\n-Now it\'s time to start testing the functionality of the application.\n-Let\'s check that the application shows ""No entries here so far"" if we\n-access the root of the application (``/``).  To do this, we add a new\n-test function to :file:`test_flaskr.py`, like this::\n-\n-    def test_empty_db(client):\n-        """"""Start with a blank database.""""""\n-\n-        rv = client.get(\'/\')\n-        assert b\'No entries here so far\' in rv.data\n+The :doc:`tutorial </tutorial/index>` goes over how to write tests for\n+100% coverage of the sample Flaskr blog application. See\n+:doc:`the tutorial on tests </tutorial/tests>` for a detailed\n+explanation of specific tests for an application.\n \n-Notice that our test functions begin with the word `test`; this allows\n-`pytest`_ to automatically identify the function as a test to run.\n \n-By using ``client.get`` we can send an HTTP ``GET`` request to the\n-application with the given path.  The return value will be a\n-:class:`~flask.Flask.response_class` object. We can now use the\n-:attr:`~werkzeug.wrappers.Response.data` attribute to inspect\n-the return value (as string) from the application.\n-In this case, we ensure that ``\'No entries here so far\'``\n-is part of the output.\n-\n-Run it again and you should see one passing test::\n-\n-    $ pytest -v\n-\n-    ================ test session starts ================\n-    rootdir: ./flask/examples/flaskr, inifile: setup.cfg\n-    collected 1 items\n-\n-    tests/test_flaskr.py::test_empty_db PASSED\n-\n-    ============= 1 passed in 0.10 seconds ==============\n-\n-Logging In and Out\n-------------------\n-\n-The majority of the functionality of our application is only available for\n-the administrative user, so we need a way to log our test client in and out\n-of the application.  To do this, we fire some requests to the login and logout\n-pages with the required form data (username and password).  And because the\n-login and logout pages redirect, we tell the client to `follow_redirects`.\n-\n-Add the following two functions to your :file:`test_flaskr.py` file::\n-\n-    def login(client, username, password):\n-        return client.post(\'/login\', data=dict(\n-            username=username,\n-            password=password\n-        ), follow_redirects=True)\n-\n-\n-    def logout(client):\n-        return client.get(\'/logout\', follow_redirects=True)\n-\n-Now we can easily test that logging in and out works and that it fails with\n-invalid credentials.  Add this new test function::\n+Identifying Tests\n+-----------------\n \n-    def test_login_logout(client):\n-        """"""Make sure login and logout works.""""""\n+Tests are typically located in the ``tests`` folder. Tests are functions\n+that start with ``test_``, in Python modules that start with ``test_``.\n+Tests can also be further grouped in classes that start with ``Test``.\n \n-        username = flaskr.app.config[""USERNAME""]\n-        password = flaskr.app.config[""PASSWORD""]\n+It can be difficult to know what to test. Generally, try to test the\n+code that you write, not the code of libraries that you use, since they\n+are already tested. Try to extract complex behaviors as separate\n+functions to test individually.\n \n-        rv = login(client, username, password)\n-        assert b\'You were logged in\' in rv.data\n \n-        rv = logout(client)\n-        assert b\'You were logged out\' in rv.data\n+Fixtures\n+--------\n \n-        rv = login(client, f""{username}x"", password)\n-        assert b\'Invalid username\' in rv.data\n+Pytest *fixtures* allow writing pieces of code that are reusable across\n+tests. A simple fixture returns a value, but a fixture can also do\n+setup, yield a value, then do teardown. Fixtures for the application,\n+test client, and CLI runner are shown below, they can be placed in\n+``tests/conftest.py``.\n \n-        rv = login(client, username, f\'{password}x\')\n-        assert b\'Invalid password\' in rv.data\n+If you\'re using an\n+:doc:`application factory </patterns/appfactories>`, define an ``app``\n+fixture to create and configure an app instance. You can add code before\n+and after the ``yield`` to set up and tear down other resources, such as\n+creating and clearing a database.\n \n-Test Adding Messages\n---------------------\n+If you\'re not using a factory, you already have an app object you can\n+import and configure directly. You can still use an ``app`` fixture to\n+set up and tear down resources.\n \n-We should also test that adding messages works.  Add a new test function\n-like this::\n+.. code-block:: python\n \n-    def test_messages(client):\n-        """"""Test that messages work.""""""\n+    import pytest\n+    from my_project import create_app\n \n-        login(client, flaskr.app.config[\'USERNAME\'], flaskr.app.config[\'PASSWORD\'])\n-        rv = client.post(\'/add\', data=dict(\n-            title=\'<Hello>\',\n-            text=\'<strong>HTML</strong> allowed here\'\n-        ), follow_redirects=True)\n-        assert b\'No entries here so far\' not in rv.data\n-        assert b\'&lt;Hello&gt;\' in rv.data\n-        assert b\'<strong>HTML</strong> allowed here\' in rv.data\n+    @pytest.fixture()\n+    def app():\n+        app = create_app()\n+        app.config.update({\n+            ""TESTING"": True,\n+        })\n \n-Here we check that HTML is allowed in the text but not in the title,\n-which is the intended behavior.\n+        # other setup can go here\n \n-Running that should now give us three passing tests::\n+        yield app\n \n-    $ pytest -v\n+        # clean up / reset resources here\n \n-    ================ test session starts ================\n-    rootdir: ./flask/examples/flaskr, inifile: setup.cfg\n-    collected 3 items\n \n-    tests/test_flaskr.py::test_empty_db PASSED\n-    tests/test_flaskr.py::test_login_logout PASSED\n-    tests/test_flaskr.py::test_messages PASSED\n+    @pytest.fixture()\n+    def client(app):\n+        return app.test_client()\n \n-    ============= 3 passed in 0.23 seconds ==============\n \n+    @pytest.fixture()\n+    def runner(app):\n+        return app.test_cli_runner()\n \n-Other Testing Tricks\n---------------------\n \n-Besides using the test client as shown above, there is also the\n-:meth:`~flask.Flask.test_request_context` method that can be used\n-in combination with the ``with`` statement to activate a request context\n-temporarily.  With this you can access the :class:`~flask.request`,\n-:class:`~flask.g` and :class:`~flask.session` objects like in view\n-functions.  Here is a full example that demonstrates this approach::\n+Sending Requests with the Test Client\n+-------------------------------------\n \n-    from flask import Flask, request\n+The test client makes requests to the application without running a live\n+server. Flask\'s client extends\n+:doc:`Werkzeug\'s client <werkzeug:test>`, see those docs for additional\n+information.\n \n-    app = Flask(__name__)\n+The ``client`` has methods that match the common HTTP request methods,\n+such as ``client.get()`` and ``client.post()``. They take many arguments\n+for building the request; you can find the full documentation in\n+:class:`~werkzeug.test.EnvironBuilder`. Typically you\'ll use ``path``,\n+``query``, ``headers``, and ``data`` or ``json``.\n \n-    with app.test_request_context(\'/?name=Peter\'):\n-        assert request.path == \'/\'\n-        assert request.args[\'name\'] == \'Peter\'\n+To make a request, call the method the request should use with the path\n+to the route to test. A :class:`~werkzeug.test.TestResponse` is returned\n+to examine the response data. It has all the usual properties of a\n+response object. You\'ll usually look at ``response.data``, which is the\n+bytes returned by the view. If you want to use text, Werkzeug 2.1\n+provides ``response.text``, or use ``response.get_data(as_text=True)``.\n \n-All the other objects that are context bound can be used in the same\n-way.\n+.. code-block:: python\n \n-If you want to test your application with different configurations and\n-there does not seem to be a good way to do that, consider switching to\n-application factories (see :doc:`patterns/appfactories`).\n+    def test_request_example(client):\n+        response = client.get(""/posts"")\n+        assert b""<h2>Hello, World!</h2>"" in response.data\n \n-Note however that if you are using a test request context, the\n-:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`\n-functions are not called automatically.  However\n-:meth:`~flask.Flask.teardown_request` functions are indeed executed when\n-the test request context leaves the ``with`` block.  If you do want the\n-:meth:`~flask.Flask.before_request` functions to be called as well, you\n-need to call :meth:`~flask.Flask.preprocess_request` yourself::\n \n-    app = Flask(__name__)\n+Pass a dict ``query={""key"": ""value"", ...}`` to set arguments in the\n+query string (after the ``?`` in the URL). Pass a dict ``headers={}``\n+to set request headers.\n \n-    with app.test_request_context(\'/?name=Peter\'):\n-        app.preprocess_request()\n-        ...\n+To send a request body in a POST or PUT request, pass a value to\n+``data``. If raw bytes are passed, that exact body is used. Usually,\n+you\'ll pass a dict to set form data.\n \n-This can be necessary to open database connections or something similar\n-depending on how your application was designed.\n \n-If you want to call the :meth:`~flask.Flask.after_request` functions you\n-need to call into :meth:`~flask.Flask.process_response` which however\n-requires that you pass it a response object::\n+Form Data\n+~~~~~~~~~\n \n-    app = Flask(__name__)\n+To send form data, pass a dict to ``data``. The ``Content-Type`` header\n+will be set to ``multipart/form-data`` or\n+``application/x-www-form-urlencoded`` automatically.\n \n-    with app.test_request_context(\'/?name=Peter\'):\n-        resp = Response(\'...\')\n-        resp = app.process_response(resp)\n-        ...\n+If a value is a file object opened for reading bytes (``""rb""`` mode), it\n+will be treated as an uploaded file. To change the detected filename and\n+content type, pass a ``(file, filename, content_type)`` tuple. File\n+objects will be closed after making the request, so they do not need to\n+use the usual ``with open() as f:`` pattern.\n \n-This in general is less useful because at that point you can directly\n-start using the test client.\n+It can be useful to store files in a ``tests/resources`` folder, then\n+use ``pathlib.Path`` to get files relative to the current test file.\n \n-.. _faking-resources:\n+.. code-block:: python\n \n-Faking Resources and Context\n-----------------------------\n+    from pathlib import Path\n \n-.. versionadded:: 0.10\n+    # get the resources folder in the tests folder\n+    resources = Path(__file__).parent / ""resources""\n \n-A very common pattern is to store user authorization information and\n-database connections on the application context or the :attr:`flask.g`\n-object.  The general pattern for this is to put the object on there on\n-first usage and then to remove it on a teardown.  Imagine for instance\n-this code to get the current user::\n+    def test_edit_user(client):\n+        response = client.post(""/user/2/edit"", data={\n+            name=""Flask"",\n+            theme=""dark"",\n+            picture=(resources / ""picture.png"").open(""rb""),\n+        })\n+        assert response.status_code == 200\n \n-    def get_user():\n-        user = getattr(g, \'user\', None)\n-        if user is None:\n-            user = fetch_current_user_from_database()\n-            g.user = user\n-        return user\n \n-For a test it would be nice to override this user from the outside without\n-having to change some code.  This can be accomplished with\n-hooking the :data:`flask.appcontext_pushed` signal::\n+JSON Data\n+~~~~~~~~~\n \n-    from contextlib import contextmanager\n-    from flask import appcontext_pushed, g\n+To send JSON data, pass an object to ``json``. The ``Content-Type``\n+header will be set to ``application/json`` automatically.\n \n-    @contextmanager\n-    def user_set(app, user):\n-        def handler(sender, **kwargs):\n-            g.user = user\n-        with appcontext_pushed.connected_to(handler, app):\n-            yield\n+Similarly, if the response contains JSON data, the ``response.json``\n+attribute will contain the deserialized object.\n \n-And then to use it::\n+.. code-block:: python\n \n-    from flask import json, jsonify\n+    def test_json_data(client):\n+        response = client.post(""/graphql"", json={\n+            ""query"": """"""\n+                query User($id: String!) {\n+                    user(id: $id) {\n+                        name\n+                        theme\n+                        picture_url\n+                    }\n+                }\n+            """""",\n+            variables={""id"": 2},\n+        })\n+        assert response.json[""data""][""user""][""name""] == ""Flask""\n \n-    @app.route(\'/users/me\')\n-    def users_me():\n-        return jsonify(username=g.user.username)\n \n-    with user_set(app, my_user):\n-        with app.test_client() as c:\n-            resp = c.get(\'/users/me\')\n-            data = json.loads(resp.data)\n-            assert data[\'username\'] == my_user.username\n+Following Redirects\n+-------------------\n \n+By default, the client does not make additional requests if the response\n+is a redirect. By passing ``follow_redirects=True`` to a request method,\n+the client will continue to make requests until a non-redirect response\n+is returned.\n \n-Keeping the Context Around\n---------------------------\n+:attr:`TestResponse.history <werkzeug.test.TestResponse.history>` is\n+a tuple of the responses that led up to the final response. Each\n+response has a :attr:`~werkzeug.test.TestResponse.request` attribute\n+which records the request that produced that response.\n \n-.. versionadded:: 0.4\n+.. code-block:: python\n \n-Sometimes it is helpful to trigger a regular request but still keep the\n-context around for a little longer so that additional introspection can\n-happen.  With Flask 0.4 this is possible by using the\n-:meth:`~flask.Flask.test_client` with a ``with`` block::\n+    def test_logout_redirect(client):\n+        response = client.get(""/logout"")\n+        # Check that there was one redirect response.\n+        assert len(response.history) == 1\n+        # Check that the second request was to the index page.\n+        assert response.request.path == ""/index""\n \n-    app = Flask(__name__)\n \n-    with app.test_client() as c:\n-        rv = c.get(\'/?tequila=42\')\n-        assert request.args[\'tequila\'] == \'42\'\n+Accessing and Modifying the Session\n+-----------------------------------\n \n-If you were to use just the :meth:`~flask.Flask.test_client` without\n-the ``with`` block, the ``assert`` would fail with an error because `request`\n-is no longer available (because you are trying to use it\n-outside of the actual request).\n+To access Flask\'s context variables, mainly\n+:data:`~flask.session`, use the client in a ``with`` statement.\n+The app and request context will remain active *after* making a request,\n+until the ``with`` block ends.\n \n+.. code-block:: python\n \n-Accessing and Modifying Sessions\n---------------------------------\n+    from flask import session\n \n-.. versionadded:: 0.8\n+    def test_access_session(client):\n+        with client:\n+            client.post(""/auth/login"", data={""username"": ""flask""})\n+            # session is still accessible\n+            assert session[""user_id""] == 1\n \n-Sometimes it can be very helpful to access or modify the sessions from the\n-test client.  Generally there are two ways for this.  If you just want to\n-ensure that a session has certain keys set to certain values you can just\n-keep the context around and access :data:`flask.session`::\n+        # session is no longer accessible\n \n-    with app.test_client() as c:\n-        rv = c.get(\'/\')\n-        assert session[\'foo\'] == 42\n+If you want to access or set a value in the session *before* making a\n+request, use the client\'s\n+:meth:`~flask.testing.FlaskClient.session_transaction` method in a\n+``with`` statement. It returns a session object, and will save the\n+session once the block ends.\n \n-This however does not make it possible to also modify the session or to\n-access the session before a request was fired.  Starting with Flask 0.8 we\n-provide a so called “session transaction” which simulates the appropriate\n-calls to open a session in the context of the test client and to modify\n-it. At the end of the transaction the session is stored and ready to be\n-used by the test client. This works independently of the session backend used::\n+.. code-block:: python\n \n-    with app.test_client() as c:\n-        with c.session_transaction() as sess:\n-            sess[\'a_key\'] = \'a value\'\n+    from flask import session\n \n-        # once this is reached the session was stored and ready to be used by the client\n-        c.get(...)\n+    def test_modify_session(client):\n+        with client.session_transaction() as session:\n+            # set a user id without going through the login route\n+            session[""user_id""] = 1\n \n-Note that in this case you have to use the ``sess`` object instead of the\n-:data:`flask.session` proxy.  The object however itself will provide the\n-same interface.\n+        # session is saved now\n \n+        response = client.get(""/users/me"")\n+        assert response.json[""username""] == ""flask""\n \n-Testing JSON APIs\n------------------\n \n-.. versionadded:: 1.0\n+.. _testing-cli:\n \n-Flask has great support for JSON, and is a popular choice for building JSON\n-APIs. Making requests with JSON data and examining JSON data in responses is\n-very convenient::\n+Running Commands with the CLI Runner\n+------------------------------------\n \n-    from flask import request, jsonify\n+Flask provides :meth:`~flask.Flask.test_cli_runner` to create a\n+:class:`~flask.testing.FlaskCliRunner`, which runs CLI commands in\n+isolation and captures the output in a :class:`~click.testing.Result`\n+object. Flask\'s runner extends :doc:`Click\'s runner <click:testing>`,\n+see those docs for additional information.\n \n-    @app.route(\'/api/auth\')\n-    def auth():\n-        json_data = request.get_json()\n-        email = json_data[\'email\']\n-        password = json_data[\'password\']\n-        return jsonify(token=generate_token(email, password))\n+Use the runner\'s :meth:`~flask.testing.FlaskCliRunner.invoke` method to\n+call commands in the same way they would be called with the ``flask``\n+command from the command line.\n \n-    with app.test_client() as c:\n-        rv = c.post(\'/api/auth\', json={\n-            \'email\': \'flask@example.com\', \'password\': \'secret\'\n-        })\n-        json_data = rv.get_json()\n-        assert verify_token(email, json_data[\'token\'])\n+.. code-block:: python\n \n-Passing the ``json`` argument in the test client methods sets the request data\n-to the JSON-serialized object and sets the content type to\n-``application/json``. You can get the JSON data from the request or response\n-with ``get_json``.\n+    import click\n \n+    @app.cli.command(""hello"")\n+    @click.option(""--name"", default=""World"")\n+    def hello_command(name):\n+        click.echo(f""Hello, {name}!"")\n \n-.. _testing-cli:\n+    def test_hello_command(runner):\n+        result = runner.invoke([""hello""])\n+        assert ""World"" in result.output\n \n-Testing CLI Commands\n---------------------\n+        result = runner.invoke([""hello"", ""--name"", ""Flask""])\n+        assert ""Flask"" in result.output\n \n-Click comes with `utilities for testing`_ your CLI commands. A\n-:class:`~click.testing.CliRunner` runs commands in isolation and\n-captures the output in a :class:`~click.testing.Result` object.\n \n-Flask provides :meth:`~flask.Flask.test_cli_runner` to create a\n-:class:`~flask.testing.FlaskCliRunner` that passes the Flask app to the\n-CLI automatically. Use its :meth:`~flask.testing.FlaskCliRunner.invoke`\n-method to call commands in the same way they would be called from the\n-command line. ::\n+Tests that depend on an Active Context\n+--------------------------------------\n \n-    import click\n+You may have functions that are called from views or commands, that\n+expect an active :doc:`application context </appcontext>` or\n+:doc:`request context  </reqcontext>` because they access ``request``,\n+``session``, or ``current_app``. Rather than testing them by making a\n+request or invoking the command, you can create and activate a context\n+directly.\n \n-    @app.cli.command(\'hello\')\n-    @click.option(\'--name\', default=\'World\')\n-    def hello_command(name):\n-        click.echo(f\'Hello, {name}!\')\n+Use ``with app.app_context()`` to push an application context. For\n+example, database extensions usually require an active app context to\n+make queries.\n \n-    def test_hello():\n-        runner = app.test_cli_runner()\n+.. code-block:: python\n \n-        # invoke the command directly\n-        result = runner.invoke(hello_command, [\'--name\', \'Flask\'])\n-        assert \'Hello, Flask\' in result.output\n+    def test_db_post_model(app):\n+        with app.app_context():\n+            post = db.session.query(Post).get(1)\n \n-        # or by name\n-        result = runner.invoke(args=[\'hello\'])\n-        assert \'World\' in result.output\n+Use ``with app.test_request_context()`` to push a request context. It\n+takes the same arguments as the test client\'s request methods.\n \n-In the example above, invoking the command by name is useful because it\n-verifies that the command was correctly registered with the app.\n+.. code-block:: python\n \n-If you want to test how your command parses parameters, without running\n-the command, use its :meth:`~click.BaseCommand.make_context` method.\n-This is useful for testing complex validation rules and custom types. ::\n+    def test_validate_user_edit(app):\n+        with app.test_request_context(\n+            ""/user/2/edit"", method=""POST"", data={""name"": """"}\n+        ):\n+            # call a function that accesses `request`\n+            messages = validate_edit_user()\n \n-    def upper(ctx, param, value):\n-        if value is not None:\n-            return value.upper()\n+        assert messages[""name""][0] == ""Name cannot be empty.""\n \n-    @app.cli.command(\'hello\')\n-    @click.option(\'--name\', default=\'World\', callback=upper)\n-    def hello_command(name):\n-        click.echo(f\'Hello, {name}!\')\n+Creating a test request context doesn\'t run any of the Flask dispatching\n+code, so ``before_request`` functions are not called. If you need to\n+call these, usually it\'s better to make a full request instead. However,\n+it\'s possible to call them manually.\n \n-    def test_hello_params():\n-        context = hello_command.make_context(\'hello\', [\'--name\', \'flask\'])\n-        assert context.params[\'name\'] == \'FLASK\'\n+.. code-block:: python\n \n-.. _click: https://click.palletsprojects.com/\n-.. _utilities for testing: https://click.palletsprojects.com/testing/\n+    def test_auth_token(app):\n+        with app.test_request_context(""/user/2/edit"", headers={""X-Auth-Token"": ""1""}):\n+            app.preprocess_request()\n+            assert g.user.name == ""Flask""\n'",0,1.0
CHANGES.rst,CHANGES.rst,702d973b1f55326526d764e3668900383ad8f4ef,c15f74cea6ff2ab09881fea4118709ecda11972c,'release version 2.0.3',"""@@ -3,7 +3,7 @@\n Version 2.0.3\n -------------\n \n-Unreleased\n+Released 2022-02-14\n \n -   The test client's ``as_tuple`` parameter is deprecated and will be\n     removed in Werkzeug 2.1. It is now also deprecated in Flask, to be\n""",0,0
src/flask/__init__.py,src/flask/__init__.py,702d973b1f55326526d764e3668900383ad8f4ef,c15f74cea6ff2ab09881fea4118709ecda11972c,'release version 2.0.3',"'@@ -43,4 +43,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.0.2""\n+__version__ = ""2.0.3""\n'",0,0
src/flask/app.py,src/flask/app.py,6f79cb8a23467aa01f94f6ad53790f468ba77c76,b6a8ccd2cf65939401fe4ccb6b550d2b19423b06,'Fix typing on `app.session_interface`',"'@@ -50,6 +50,7 @@ from .scaffold import find_package\n from .scaffold import Scaffold\n from .scaffold import setupmethod\n from .sessions import SecureCookieSessionInterface\n+from .sessions import SessionInterface\n from .signals import appcontext_tearing_down\n from .signals import got_request_exception\n from .signals import request_finished\n@@ -378,7 +379,7 @@ class Flask(Scaffold):\n     #: :class:`~flask.sessions.SecureCookieSessionInterface` is used here.\n     #:\n     #: .. versionadded:: 0.8\n-    session_interface = SecureCookieSessionInterface()\n+    session_interface: SessionInterface = SecureCookieSessionInterface()\n \n     def __init__(\n         self,\n'",3.0441176470588234,3.0441176470588234
.pre-commit-config.yaml,.pre-commit-config.yaml,ad13dbc826a23d3ce53e50944a15b1e2bc168abd,ef557b3ff2602b9956a2f3ac02c6e134c529fccc,'pin setuptools for reorder_python_imports',"'@@ -14,6 +14,7 @@ repos:\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n+        additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n     rev: 22.1.0\n     hooks:\n'",0,0
CHANGES.rst,CHANGES.rst,aa13521d42bfdb66bb0d89005cbe54a84eaa4fda,3897a518014931a82c77a353e1e9c2248529b856,'lazy loading preserves click context',"'@@ -42,6 +42,9 @@ Unreleased\n -   Add an ``--exclude-patterns`` option to the ``flask run`` CLI\n     command to specify patterns that will be ignored by the reloader.\n     :issue:`4188`\n+-   When using lazy loading (the default with the debugger), the Click\n+    context from the ``flask run`` command remains available in the\n+    loader thread. :issue:`4460`\n \n \n Version 2.0.3\n'",0,0
src/flask/cli.py,src/flask/cli.py,aa13521d42bfdb66bb0d89005cbe54a84eaa4fda,3897a518014931a82c77a353e1e9c2248529b856,'lazy loading preserves click context',"'@@ -301,9 +301,17 @@ class DispatchingApp:\n             self._load_in_background()\n \n     def _load_in_background(self):\n+        # Store the Click context and push it in the loader thread so\n+        # script_info is still available.\n+        ctx = click.get_current_context(silent=True)\n+\n         def _load_app():\n             __traceback_hide__ = True  # noqa: F841\n+\n             with self._lock:\n+                if ctx is not None:\n+                    click.globals.push_context(ctx)\n+\n                 try:\n                     self._load_unlocked()\n                 except Exception as e:\n'",4.085714285714285,4.114285714285714
.github/workflows/tests.yaml,.github/workflows/tests.yaml,7dc26a1f4188f6cb410fb1335cc933cc8f3c9943,4843590c4a7f2225fd18bd10963139a6f29a2a59,'Bump actions/setup-python from 2 to 3\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 2 to 3.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/v2...v3)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v2\n-      - uses: actions/setup-python@v2\n+      - uses: actions/setup-python@v3\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
src/flask/scaffold.py,src/flask/scaffold.py,af34b8c9e7adbf0b060738fee12f04c1e46a98fd,8122973f8a04976bd7f9104eee5d8d36c0d02038,'Add better types for app decorators',"'@@ -369,48 +369,53 @@ class Scaffold:\n \n         return open(os.path.join(self.root_path, resource), mode)\n \n-    def _method_route(self, method: str, rule: str, options: dict) -> t.Callable:\n+    def _method_route(\n+        self,\n+        method: str,\n+        rule: str,\n+        options: dict,\n+    ) -> t.Callable[[F], F]:\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n \n         return self.route(rule, methods=[method], **options)\n \n-    def get(self, rule: str, **options: t.Any) -> t.Callable:\n+    def get(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""GET"", rule, options)\n \n-    def post(self, rule: str, **options: t.Any) -> t.Callable:\n+    def post(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""POST"", rule, options)\n \n-    def put(self, rule: str, **options: t.Any) -> t.Callable:\n+    def put(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PUT"", rule, options)\n \n-    def delete(self, rule: str, **options: t.Any) -> t.Callable:\n+    def delete(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""DELETE"", rule, options)\n \n-    def patch(self, rule: str, **options: t.Any) -> t.Callable:\n+    def patch(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PATCH"", rule, options)\n \n-    def route(self, rule: str, **options: t.Any) -> t.Callable:\n+    def route(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Decorate a view function to register it with the given URL\n         rule and options. Calls :meth:`add_url_rule`, which has more\n         details about the implementation.\n@@ -434,7 +439,7 @@ class Scaffold:\n             :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n-        def decorator(f: t.Callable) -> t.Callable:\n+        def decorator(f: F) -> F:\n             endpoint = options.pop(""endpoint"", None)\n             self.add_url_rule(rule, endpoint, f, **options)\n             return f\n'",1.8205128205128205,1.8205128205128205
CHANGES.rst,CHANGES.rst,b707bf443afe856b77e09b7a41592f10d46e02df,b655a9db30d8e78d2fe1044d6301a432f214a16b,'Preserve HttpOnly flag when deleting session cookie\n\nfixes #4485',"'@@ -45,6 +45,8 @@ Unreleased\n -   When using lazy loading (the default with the debugger), the Click\n     context from the ``flask run`` command remains available in the\n     loader thread. :issue:`4460`\n+-   Deleting the session cookie uses the ``httponly`` flag.\n+    :issue:`4485`\n \n \n Version 2.0.3\n'",0,0
src/flask/sessions.py,src/flask/sessions.py,b707bf443afe856b77e09b7a41592f10d46e02df,b655a9db30d8e78d2fe1044d6301a432f214a16b,'Preserve HttpOnly flag when deleting session cookie\n\nfixes #4485',"'@@ -383,13 +383,19 @@ class SecureCookieSessionInterface(SessionInterface):\n         path = self.get_cookie_path(app)\n         secure = self.get_cookie_secure(app)\n         samesite = self.get_cookie_samesite(app)\n+        httponly = self.get_cookie_httponly(app)\n \n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n             if session.modified:\n                 response.delete_cookie(\n-                    name, domain=domain, path=path, secure=secure, samesite=samesite\n+                    name,\n+                    domain=domain,\n+                    path=path,\n+                    secure=secure,\n+                    samesite=samesite,\n+                    httponly=httponly,\n                 )\n \n             return\n@@ -401,7 +407,6 @@ class SecureCookieSessionInterface(SessionInterface):\n         if not self.should_set_cookie(app, session):\n             return\n \n-        httponly = self.get_cookie_httponly(app)\n         expires = self.get_expiration_time(app, session)\n         val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore\n         response.set_cookie(\n'",1.826086956521739,1.826086956521739
CHANGES.rst,CHANGES.rst,88863288225d5ee13a79c463f2a39391b6a52c61,0ef1e65f6ab0da680d171d49e1a56a2b0ecee05d,'relax errorhandler function arg type',"'@@ -47,6 +47,9 @@ Unreleased\n     loader thread. :issue:`4460`\n -   Deleting the session cookie uses the ``httponly`` flag.\n     :issue:`4485`\n+-   Relax typing for ``errorhandler`` to allow the user to use more\n+    precise types and decorate the same function multiple times.\n+    :issue:`4095, 4295, 4297`\n \n \n Version 2.0.3\n'",0,0
src/flask/app.py,src/flask/app.py,88863288225d5ee13a79c463f2a39391b6a52c61,0ef1e65f6ab0da680d171d49e1a56a2b0ecee05d,'relax errorhandler function arg type',"'@@ -1265,9 +1265,7 @@ class Flask(Scaffold):\n         self.shell_context_processors.append(f)\n         return f\n \n-    def _find_error_handler(\n-        self, e: Exception\n-    ) -> t.Optional[""ErrorHandlerCallable[Exception]""]:\n+    def _find_error_handler(self, e: Exception) -> t.Optional[""ErrorHandlerCallable""]:\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n         blueprint handler for an exception class, app handler for an exception\n'",3.0441176470588234,3.0441176470588234
src/flask/blueprints.py,src/flask/blueprints.py,88863288225d5ee13a79c463f2a39391b6a52c61,0ef1e65f6ab0da680d171d49e1a56a2b0ecee05d,'relax errorhandler function arg type',"'@@ -574,9 +574,7 @@ class Blueprint(Scaffold):\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(\n-            f: ""ErrorHandlerCallable[Exception]"",\n-        ) -> ""ErrorHandlerCallable[Exception]"":\n+        def decorator(f: ""ErrorHandlerCallable"") -> ""ErrorHandlerCallable"":\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n'",2.3636363636363638,2.3636363636363638
src/flask/scaffold.py,src/flask/scaffold.py,88863288225d5ee13a79c463f2a39391b6a52c61,0ef1e65f6ab0da680d171d49e1a56a2b0ecee05d,'relax errorhandler function arg type',"'@@ -21,7 +21,6 @@ from .templating import _default_template_ctx_processor\n from .typing import AfterRequestCallable\n from .typing import AppOrBlueprintKey\n from .typing import BeforeRequestCallable\n-from .typing import GenericException\n from .typing import TeardownCallable\n from .typing import TemplateContextProcessorCallable\n from .typing import URLDefaultCallable\n@@ -145,10 +144,7 @@ class Scaffold:\n         #: directly and its format may change at any time.\n         self.error_handler_spec: t.Dict[\n             AppOrBlueprintKey,\n-            t.Dict[\n-                t.Optional[int],\n-                t.Dict[t.Type[Exception], ""ErrorHandlerCallable[Exception]""],\n-            ],\n+            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ""ErrorHandlerCallable""]],\n         ] = defaultdict(lambda: defaultdict(dict))\n \n         #: A data structure of functions to call at the beginning of\n@@ -652,11 +648,8 @@ class Scaffold:\n \n     @setupmethod\n     def errorhandler(\n-        self, code_or_exception: t.Union[t.Type[GenericException], int]\n-    ) -> t.Callable[\n-        [""ErrorHandlerCallable[GenericException]""],\n-        ""ErrorHandlerCallable[GenericException]"",\n-    ]:\n+        self, code_or_exception: t.Union[t.Type[Exception], int]\n+    ) -> t.Callable[[""ErrorHandlerCallable""], ""ErrorHandlerCallable""]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -686,9 +679,7 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(\n-            f: ""ErrorHandlerCallable[GenericException]"",\n-        ) -> ""ErrorHandlerCallable[GenericException]"":\n+        def decorator(f: ""ErrorHandlerCallable"") -> ""ErrorHandlerCallable"":\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n@@ -697,8 +688,8 @@ class Scaffold:\n     @setupmethod\n     def register_error_handler(\n         self,\n-        code_or_exception: t.Union[t.Type[GenericException], int],\n-        f: ""ErrorHandlerCallable[GenericException]"",\n+        code_or_exception: t.Union[t.Type[Exception], int],\n+        f: ""ErrorHandlerCallable"",\n     ) -> None:\n         """"""Alternative error attach function to the :meth:`errorhandler`\n         decorator that is more straightforward to use for non decorator\n@@ -722,9 +713,7 @@ class Scaffold:\n                 "" instead.""\n             ) from None\n \n-        self.error_handler_spec[None][code][exc_class] = t.cast(\n-            ""ErrorHandlerCallable[Exception]"", f\n-        )\n+        self.error_handler_spec[None][code][exc_class] = f\n \n     @staticmethod\n     def _get_exc_class_and_code(\n'",1.8205128205128205,1.8205128205128205
src/flask/typing.py,src/flask/typing.py,88863288225d5ee13a79c463f2a39391b6a52c61,0ef1e65f6ab0da680d171d49e1a56a2b0ecee05d,'relax errorhandler function arg type',"'@@ -33,8 +33,6 @@ ResponseReturnValue = t.Union[\n     ""WSGIApplication"",\n ]\n \n-GenericException = t.TypeVar(""GenericException"", bound=Exception, contravariant=True)\n-\n AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints are named\n AfterRequestCallable = t.Callable[[""Response""], ""Response""]\n BeforeFirstRequestCallable = t.Callable[[], None]\n@@ -46,4 +44,10 @@ TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n URLDefaultCallable = t.Callable[[str, dict], None]\n URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n-ErrorHandlerCallable = t.Callable[[GenericException], ResponseReturnValue]\n+# This should take Exception, but that either breaks typing the argument\n+# with a specific exception, or decorating multiple times with different\n+# exceptions (and using a union type on the argument).\n+# https://github.com/pallets/flask/issues/4095\n+# https://github.com/pallets/flask/issues/4295\n+# https://github.com/pallets/flask/issues/4297\n+ErrorHandlerCallable = t.Callable[[t.Any], ResponseReturnValue]\n'",0,0
src/flask/app.py,src/flask/app.py,190dd4df86874495f56bb088fbd0cb1d9f0e77a0,88863288225d5ee13a79c463f2a39391b6a52c61,"""don't use AnyStr for ResponseValue type""","'@@ -1672,13 +1672,13 @@ class Flask(Scaffold):\n \n             # a 3-tuple is unpacked directly\n             if len_rv == 3:\n-                rv, status, headers = rv\n+                rv, status, headers = rv  # type: ignore[misc]\n             # decide if a 2-tuple has status or headers\n             elif len_rv == 2:\n                 if isinstance(rv[1], (Headers, dict, tuple, list)):\n                     rv, headers = rv\n                 else:\n-                    rv, status = rv\n+                    rv, status = rv  # type: ignore[misc]\n             # other sized tuples are not allowed\n             else:\n                 raise TypeError(\n@@ -1701,7 +1701,11 @@ class Flask(Scaffold):\n                 # let the response class set the status and headers instead of\n                 # waiting to do it manually, so that the class can handle any\n                 # special logic\n-                rv = self.response_class(rv, status=status, headers=headers)\n+                rv = self.response_class(\n+                    rv,\n+                    status=status,\n+                    headers=headers,  # type: ignore[arg-type]\n+                )\n                 status = headers = None\n             elif isinstance(rv, dict):\n                 rv = jsonify(rv)\n@@ -1729,13 +1733,13 @@ class Flask(Scaffold):\n         # prefer the status if it was provided\n         if status is not None:\n             if isinstance(status, (str, bytes, bytearray)):\n-                rv.status = status  # type: ignore\n+                rv.status = status\n             else:\n                 rv.status_code = status\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)\n+            rv.headers.update(headers)  # type: ignore[arg-type]\n \n         return rv\n \n'",3.0441176470588234,3.0441176470588234
src/flask/helpers.py,src/flask/helpers.py,190dd4df86874495f56bb088fbd0cb1d9f0e77a0,88863288225d5ee13a79c463f2a39391b6a52c61,"""don't use AnyStr for ResponseValue type""","'@@ -186,7 +186,7 @@ def make_response(*args: t.Any) -> ""Response"":\n         return current_app.response_class()\n     if len(args) == 1:\n         args = args[0]\n-    return current_app.make_response(args)\n+    return current_app.make_response(args)  # type: ignore\n \n \n def url_for(endpoint: str, **values: t.Any) -> str:\n'",2.9523809523809526,2.9523809523809526
src/flask/typing.py,src/flask/typing.py,190dd4df86874495f56bb088fbd0cb1d9f0e77a0,88863288225d5ee13a79c463f2a39391b6a52c61,"""don't use AnyStr for ResponseValue type""","'@@ -4,14 +4,16 @@ import typing as t\n if t.TYPE_CHECKING:\n     from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n-    from .wrappers import Response  # noqa: F401\n+    from werkzeug.wrappers.response import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n ResponseValue = t.Union[\n     ""Response"",\n-    t.AnyStr,\n+    str,\n+    bytes,\n     t.Dict[str, t.Any],  # any jsonify-able dict\n-    t.Generator[t.AnyStr, None, None],\n+    t.Iterator[str],\n+    t.Iterator[bytes],\n ]\n StatusCode = int\n \n'",0,0
CHANGES.rst,CHANGES.rst,faaa5594b2406260c3e4197fa6e80c3d19b6ab23,cb7cd1e79b280d3fd80978ca82ae52881525a476,'accurate type for __exit__',"'@@ -50,6 +50,8 @@ Unreleased\n -   Relax typing for ``errorhandler`` to allow the user to use more\n     precise types and decorate the same function multiple times.\n     :issue:`4095, 4295, 4297`\n+-   Fix typing for ``__exit__`` methods for better compatibility with\n+    ``ExitStack``. :issue:`4474`\n \n \n Version 2.0.3\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,faaa5594b2406260c3e4197fa6e80c3d19b6ab23,cb7cd1e79b280d3fd80978ca82ae52881525a476,'accurate type for __exit__',"'@@ -267,7 +267,10 @@ class AppContext:\n         return self\n \n     def __exit__(\n-        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+        self,\n+        exc_type: t.Optional[type],\n+        exc_value: t.Optional[BaseException],\n+        tb: t.Optional[TracebackType],\n     ) -> None:\n         self.pop(exc_value)\n \n@@ -491,7 +494,10 @@ class RequestContext:\n         return self\n \n     def __exit__(\n-        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+        self,\n+        exc_type: t.Optional[type],\n+        exc_value: t.Optional[BaseException],\n+        tb: t.Optional[TracebackType],\n     ) -> None:\n         # do not pop the request stack if we are in debug mode and an\n         # exception happened.  This will allow the debugger to still\n'",1.9333333333333333,1.9333333333333333
src/flask/testing.py,src/flask/testing.py,faaa5594b2406260c3e4197fa6e80c3d19b6ab23,cb7cd1e79b280d3fd80978ca82ae52881525a476,'accurate type for __exit__',"'@@ -227,7 +227,10 @@ class FlaskClient(Client):\n         return self\n \n     def __exit__(\n-        self, exc_type: type, exc_value: BaseException, tb: TracebackType\n+        self,\n+        exc_type: t.Optional[type],\n+        exc_value: t.Optional[BaseException],\n+        tb: t.Optional[TracebackType],\n     ) -> None:\n         self.preserve_context = False\n \n'",3.3636363636363638,3.3636363636363638
docs/errorhandling.rst,docs/errorhandling.rst,d80f41f57dbae28c784fde0fc829807cc2ab4a76,7abcf57f544e3bd29c4f22a10907f976f7e056ea,'Update errorhandling.rst',"'@@ -151,7 +151,7 @@ If a route receives an unallowed request method, a ""405 Method Not Allowed""\n subclasses of :class:`~werkzeug.exceptions.HTTPException` and are provided by\n default in Flask.\n \n-Flask gives you to the ability to raise any HTTP exception registered by\n+Flask gives you the ability to raise any HTTP exception registered by\n Werkzeug. However, the default HTTP exceptions return simple exception\n pages. You might want to show custom error pages to the user when an error occurs.\n This can be done by registering error handlers.\n'",1.5714285714285714,1.5714285714285714
src/flask/app.py,src/flask/app.py,c9a1f7ad6545c9cc27c41c385f1d4cd9c7cf1a98,cb7cd1e79b280d3fd80978ca82ae52881525a476,"""don't intercept 307/308 routing redirects\n\nThese don't change the request body, so the debug error is no longer relevant.""","'@@ -1457,17 +1457,26 @@ class Flask(Scaffold):\n         )\n \n     def raise_routing_exception(self, request: Request) -> ""te.NoReturn"":\n-        """"""Exceptions that are recording during routing are reraised with\n-        this method.  During debug we are not reraising redirect requests\n-        for non ``GET``, ``HEAD``, or ``OPTIONS`` requests and we\'re raising\n-        a different error instead to help debug situations.\n+        """"""Intercept routing exceptions and possibly do something else.\n \n+        In debug mode, intercept a routing redirect and replace it with\n+        an error if the body will be discarded.\n+\n+        With modern Werkzeug this shouldn\'t occur, since it now uses a\n+        308 status which tells the browser to resend the method and\n+        body.\n+\n+        .. versionchanged:: 2.1\n+            Don\'t intercept 307 and 308 redirects.\n+\n+        :meta private:\n         :internal:\n         """"""\n         if (\n             not self.debug\n             or not isinstance(request.routing_exception, RequestRedirect)\n-            or request.method in (""GET"", ""HEAD"", ""OPTIONS"")\n+            or request.routing_exception.code in {307, 308}\n+            or request.method in {""GET"", ""HEAD"", ""OPTIONS""}\n         ):\n             raise request.routing_exception  # type: ignore\n \n'",3.0441176470588234,3.0588235294117645
src/flask/debughelpers.py,src/flask/debughelpers.py,c9a1f7ad6545c9cc27c41c385f1d4cd9c7cf1a98,cb7cd1e79b280d3fd80978ca82ae52881525a476,"""don't intercept 307/308 routing redirects\n\nThese don't change the request body, so the debug error is no longer relevant.""","'@@ -41,35 +41,33 @@ class DebugFilesKeyError(KeyError, AssertionError):\n \n \n class FormDataRoutingRedirect(AssertionError):\n-    """"""This exception is raised by Flask in debug mode if it detects a\n-    redirect caused by the routing system when the request method is not\n-    GET, HEAD or OPTIONS.  Reasoning: form data will be dropped.\n+    """"""This exception is raised in debug mode if a routing redirect\n+    would cause the browser to drop the method or body. This happens\n+    when method is not GET, HEAD or OPTIONS and the status code is not\n+    307 or 308.\n     """"""\n \n     def __init__(self, request):\n         exc = request.routing_exception\n         buf = [\n-            f""A request was sent to this URL ({request.url}) but a""\n-            "" redirect was issued automatically by the routing system""\n-            f"" to {exc.new_url!r}.""\n+            f""A request was sent to \'{request.url}\', but routing issued""\n+            f"" a redirect to the canonical URL \'{exc.new_url}\'.""\n         ]\n \n-        # In case just a slash was appended we can be extra helpful\n-        if f""{request.base_url}/"" == exc.new_url.split(""?"")[0]:\n+        if f""{request.base_url}/"" == exc.new_url.partition(""?"")[0]:\n             buf.append(\n-                ""  The URL was defined with a trailing slash so Flask""\n-                "" will automatically redirect to the URL with the""\n-                "" trailing slash if it was accessed without one.""\n+                "" The URL was defined with a trailing slash. Flask""\n+                "" will redirect to the URL with a trailing slash if it""\n+                "" was accessed without one.""\n             )\n \n         buf.append(\n-            ""  Make sure to directly send your""\n-            f"" {request.method}-request to this URL since we can\'t make""\n-            "" browsers or HTTP clients redirect with form data reliably""\n-            "" or without user interaction.""\n+            "" Send requests to the canonical URL, or use 307 or 308 for""\n+            "" routing redirects. Otherwise, browsers will drop form""\n+            "" data.\\n\\n""\n+            ""This exception is only raised in debug mode.""\n         )\n-        buf.append(""\\n\\nNote: this exception is only raised in debug mode"")\n-        AssertionError.__init__(self, """".join(buf).encode(""utf-8""))\n+        super().__init__("""".join(buf))\n \n \n def attach_enctype_error_multidict(request):\n'",4.0,4.0
tests/test_basic.py,tests/test_basic.py,c9a1f7ad6545c9cc27c41c385f1d4cd9c7cf1a98,cb7cd1e79b280d3fd80978ca82ae52881525a476,"""don't intercept 307/308 routing redirects\n\nThese don't change the request body, so the debug error is no longer relevant.""","'@@ -15,6 +15,7 @@ from werkzeug.exceptions import Forbidden\n from werkzeug.exceptions import NotFound\n from werkzeug.http import parse_date\n from werkzeug.routing import BuildError\n+from werkzeug.routing import RequestRedirect\n \n import flask\n \n@@ -1724,28 +1725,29 @@ def test_before_first_request_functions_concurrent(app, client):\n     assert app.got_first_request\n \n \n-def test_routing_redirect_debugging(app, client):\n-    app.debug = True\n-\n+def test_routing_redirect_debugging(monkeypatch, app, client):\n     @app.route(""/foo/"", methods=[""GET"", ""POST""])\n     def foo():\n         return ""success""\n \n-    with client:\n-        with pytest.raises(AssertionError) as e:\n-            client.post(""/foo"", data={})\n-        assert ""http://localhost/foo/"" in str(e.value)\n-        assert ""Make sure to directly send your POST-request to this URL"" in str(\n-            e.value\n-        )\n+    app.debug = False\n+    rv = client.post(""/foo"", data={}, follow_redirects=True)\n+    assert rv.data == b""success""\n \n-        rv = client.get(""/foo"", data={}, follow_redirects=True)\n-        assert rv.data == b""success""\n+    app.debug = True\n \n-    app.debug = False\n     with client:\n         rv = client.post(""/foo"", data={}, follow_redirects=True)\n         assert rv.data == b""success""\n+        rv = client.get(""/foo"", data={}, follow_redirects=True)\n+        assert rv.data == b""success""\n+\n+    monkeypatch.setattr(RequestRedirect, ""code"", 301)\n+\n+    with client, pytest.raises(AssertionError) as e:\n+        client.post(""/foo"", data={})\n+\n+    assert ""canonical URL \'http://localhost/foo/\'"" in str(e.value)\n \n \n def test_route_decorator_custom_endpoint(app, client):\n'",1.0679245283018868,1.0679245283018868
src/flask/debughelpers.py,src/flask/debughelpers.py,0a300d007d3a5ef902e0b3c91f6189267fbed182,c9a1f7ad6545c9cc27c41c385f1d4cd9c7cf1a98,'better replacement of original form KeyError',"'@@ -71,21 +71,25 @@ class FormDataRoutingRedirect(AssertionError):\n \n \n def attach_enctype_error_multidict(request):\n-    """"""Since Flask 0.8 we\'re monkeypatching the files object in case a\n-    request is detected that does not use multipart form data but the files\n-    object is accessed.\n+    """"""Patch ``request.files.__getitem__`` to raise a descriptive error\n+    about ``enctype=multipart/form-data``.\n+\n+    :param request: The request to patch.\n+    :meta private:\n     """"""\n     oldcls = request.files.__class__\n \n     class newcls(oldcls):\n         def __getitem__(self, key):\n             try:\n-                return oldcls.__getitem__(self, key)\n+                return super().__getitem__(key)\n             except KeyError as e:\n                 if key not in request.form:\n                     raise\n \n-                raise DebugFilesKeyError(request, key) from e\n+                raise DebugFilesKeyError(request, key).with_traceback(\n+                    e.__traceback__\n+                ) from None\n \n     newcls.__name__ = oldcls.__name__\n     newcls.__module__ = oldcls.__module__\n'",4.0,4.0
src/flask/wrappers.py,src/flask/wrappers.py,0a300d007d3a5ef902e0b3c91f6189267fbed182,c9a1f7ad6545c9cc27c41c385f1d4cd9c7cf1a98,'better replacement of original form KeyError',"""@@ -110,7 +110,7 @@ class Request(RequestBase):\n         return _split_blueprint_path(name)\n \n     def _load_form_data(self) -> None:\n-        RequestBase._load_form_data(self)\n+        super()._load_form_data()\n \n         # In debug mode we're replacing the files multidict with an ad-hoc\n         # subclass that raises a different error for key errors.\n""",2.7142857142857144,2.7142857142857144
src/flask/wrappers.py,src/flask/wrappers.py,6578b493c8c8d5d9b4135cb964dbbc43318cfb12,0a300d007d3a5ef902e0b3c91f6189267fbed182,'better override for json BadRequest error',"'@@ -9,7 +9,6 @@ from .globals import current_app\n from .helpers import _split_blueprint_path\n \n if t.TYPE_CHECKING:\n-    import typing_extensions as te\n     from werkzeug.routing import Rule\n \n \n@@ -124,11 +123,14 @@ class Request(RequestBase):\n \n             attach_enctype_error_multidict(self)\n \n-    def on_json_loading_failed(self, e: Exception) -> ""te.NoReturn"":\n-        if current_app and current_app.debug:\n-            raise BadRequest(f""Failed to decode JSON object: {e}"")\n+    def on_json_loading_failed(self, e: ValueError) -> t.Any:\n+        try:\n+            return super().on_json_loading_failed(e)\n+        except BadRequest as e:\n+            if current_app and current_app.debug:\n+                raise\n \n-        raise BadRequest()\n+            raise BadRequest() from e\n \n \n class Response(ResponseBase):\n'",2.7142857142857144,2.857142857142857
CHANGES.rst,CHANGES.rst,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -52,6 +52,9 @@ Unreleased\n     :issue:`4095, 4295, 4297`\n -   Fix typing for ``__exit__`` methods for better compatibility with\n     ``ExitStack``. :issue:`4474`\n+-   From Werkzeug, for redirect responses the ``Location`` header URL\n+    will remain relative, and exclude the scheme and domain, by default.\n+    :pr:`4496`\n \n \n Version 2.0.3\n'",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -266,7 +266,7 @@ messages.\n         response = client.post(\n             \'/auth/register\', data={\'username\': \'a\', \'password\': \'a\'}\n         )\n-        assert \'http://localhost/auth/login\' == response.headers[\'Location\']\n+        assert response.headers[""Location""] == ""/auth/login""\n \n         with app.app_context():\n             assert get_db().execute(\n@@ -319,7 +319,7 @@ The tests for the ``login`` view are very similar to those for\n     def test_login(client, auth):\n         assert client.get(\'/auth/login\').status_code == 200\n         response = auth.login()\n-        assert response.headers[\'Location\'] == \'http://localhost/\'\n+        assert response.headers[""Location""] == ""/""\n \n         with client:\n             client.get(\'/\')\n@@ -404,7 +404,7 @@ is returned. If a ``post`` with the given ``id`` doesn\'t exist,\n     ))\n     def test_login_required(client, path):\n         response = client.post(path)\n-        assert response.headers[\'Location\'] == \'http://localhost/auth/login\'\n+        assert response.headers[""Location""] == ""/auth/login""\n \n \n     def test_author_required(app, client, auth):\n@@ -479,7 +479,7 @@ no longer exist in the database.\n     def test_delete(client, auth, app):\n         auth.login()\n         response = client.post(\'/1/delete\')\n-        assert response.headers[\'Location\'] == \'http://localhost/\'\n+        assert response.headers[""Location""] == ""/""\n \n         with app.app_context():\n             db = get_db()\n'",1.0,1.0
examples/tutorial/tests/test_auth.py,examples/tutorial/tests/test_auth.py,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -11,7 +11,7 @@ def test_register(client, app):\n \n     # test that successful registration redirects to the login page\n     response = client.post(""/auth/register"", data={""username"": ""a"", ""password"": ""a""})\n-    assert ""http://localhost/auth/login"" == response.headers[""Location""]\n+    assert response.headers[""Location""] == ""/auth/login""\n \n     # test that the user was inserted into the database\n     with app.app_context():\n@@ -42,7 +42,7 @@ def test_login(client, auth):\n \n     # test that successful login redirects to the index page\n     response = auth.login()\n-    assert response.headers[""Location""] == ""http://localhost/""\n+    assert response.headers[""Location""] == ""/""\n \n     # login request set the user_id in the session\n     # check that the user is loaded from the session\n'",1.0,1.0
examples/tutorial/tests/test_blog.py,examples/tutorial/tests/test_blog.py,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -19,7 +19,7 @@ def test_index(client, auth):\n @pytest.mark.parametrize(""path"", (""/create"", ""/1/update"", ""/1/delete""))\n def test_login_required(client, path):\n     response = client.post(path)\n-    assert response.headers[""Location""] == ""http://localhost/auth/login""\n+    assert response.headers[""Location""] == ""/auth/login""\n \n \n def test_author_required(app, client, auth):\n@@ -75,7 +75,7 @@ def test_create_update_validate(client, auth, path):\n def test_delete(client, auth, app):\n     auth.login()\n     response = client.post(""/1/delete"")\n-    assert response.headers[""Location""] == ""http://localhost/""\n+    assert response.headers[""Location""] == ""/""\n \n     with app.app_context():\n         db = get_db()\n'",1.0,1.0
src/flask/wrappers.py,src/flask/wrappers.py,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -155,6 +155,8 @@ class Response(ResponseBase):\n \n     json_module = json\n \n+    autocorrect_location_header = False\n+\n     @property\n     def max_cookie_size(self) -> int:  # type: ignore\n         """"""Read-only view of the :data:`MAX_COOKIE_SIZE` config key.\n'",2.857142857142857,2.857142857142857
tests/test_regression.py,tests/test_regression.py,81c7ff7f8db09b5d609a09722785f70ec6f7af68,ce7b884b73621b59ba184aa89b67d5c5780f50eb,'update tests for relative redirects',"'@@ -19,6 +19,12 @@ def test_aborting(app):\n \n     with app.test_client() as c:\n         rv = c.get(""/"")\n-        assert rv.headers[""Location""] == ""http://localhost/test""\n+        location_parts = rv.headers[""Location""].rpartition(""/"")\n+\n+        if location_parts[0]:\n+            # For older Werkzeug that used absolute redirects.\n+            assert location_parts[0] == ""http://localhost""\n+\n+        assert location_parts[2] == ""test""\n         rv = c.get(""/test"")\n         assert rv.data == b""42""\n'",1.0,1.25
docs/config.rst,docs/config.rst,08a283af5efc999d4f1e29275317a5c0c05c6f7b,425a62686f094de236a5a9eb1d6885de4730efa5,"""Allow loading of environment variables into the config\n\nThis new method will pick out any environment variables with a certain\nprefix and place them into the config named without the prefix. This\nmakes it easy to use environment variables to configure the app as is\nnow more popular than when Flask started.\n\nThe prefix should ensure that the environment isn't polluted and the\nconfig isn't polluted by environment variables.\n\nI've followed the dynaconf convention of trying to parse the\nenvironment variable and then falling back to the raw value if parsing\nfails.""","'@@ -515,9 +515,11 @@ Or from a JSON file:\n Configuring from Environment Variables\n --------------------------------------\n \n-In addition to pointing to configuration files using environment variables, you\n-may find it useful (or necessary) to control your configuration values directly\n-from the environment.\n+In addition to pointing to configuration files using environment\n+variables, you may find it useful (or necessary) to control your\n+configuration values directly from the environment. Flask can be\n+instructed to load all environment variables starting with a specific\n+prefix into the config using :meth:`~flask.Config.from_prefixed_env`.\n \n Environment variables can be set in the shell before starting the server:\n \n@@ -527,8 +529,8 @@ Environment variables can be set in the shell before starting the server:\n \n       .. code-block:: text\n \n-         $ export SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n-         $ export MAIL_ENABLED=false\n+         $ export FLASK_SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n+         $ export FLASK_MAIL_ENABLED=false\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n@@ -536,8 +538,8 @@ Environment variables can be set in the shell before starting the server:\n \n       .. code-block:: text\n \n-         $ set -x SECRET_KEY ""5f352379324c22463451387a0aec5d2f""\n-         $ set -x MAIL_ENABLED false\n+         $ set -x FLASK_SECRET_KEY ""5f352379324c22463451387a0aec5d2f""\n+         $ set -x FLASK_MAIL_ENABLED false\n          $ flask run\n           * Running on http://127.0.0.1:5000/\n \n@@ -545,8 +547,8 @@ Environment variables can be set in the shell before starting the server:\n \n       .. code-block:: text\n \n-         > set SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n-         > set MAIL_ENABLED=false\n+         > set FLASK_SECRET_KEY=""5f352379324c22463451387a0aec5d2f""\n+         > set FLASK_MAIL_ENABLED=false\n          > flask run\n           * Running on http://127.0.0.1:5000/\n \n@@ -554,27 +556,26 @@ Environment variables can be set in the shell before starting the server:\n \n       .. code-block:: text\n \n-         > $env:SECRET_KEY = ""5f352379324c22463451387a0aec5d2f""\n-         > $env:MAIL_ENABLED = ""false""\n+         > $env:FLASK_SECRET_KEY = ""5f352379324c22463451387a0aec5d2f""\n+         > $env:FLASK_MAIL_ENABLED = ""false""\n          > flask run\n           * Running on http://127.0.0.1:5000/\n \n-While this approach is straightforward to use, it is important to remember that\n-environment variables are strings -- they are not automatically deserialized\n-into Python types.\n+The variables can then be loaded and accessed via the config with a\n+key equal to the environment variable name without the prefix i.e.\n \n-Here is an example of a configuration file that uses environment variables::\n-\n-    import os\n-\n-    _mail_enabled = os.environ.get(""MAIL_ENABLED"", default=""true"")\n-    MAIL_ENABLED = _mail_enabled.lower() in {""1"", ""t"", ""true""}\n+.. code-block:: python\n \n-    SECRET_KEY = os.environ.get(""SECRET_KEY"")\n+    app.config.from_prefixed_env()\n+    app.config[""SECRET_KEY""]  # Is ""5f352379324c22463451387a0aec5d2f""\n \n-    if not SECRET_KEY:\n-        raise ValueError(""No SECRET_KEY set for Flask application"")\n+The prefix is ``FLASK_`` by default, however it is an configurable via\n+the ``prefix`` argument of :meth:`~flask.Config.from_prefixed_env`.\n \n+Whilst the value of any environment variable is a string, it will be\n+parsed before being placed into the flask config. By default the\n+parsing is done by json.loads, however this is configurable via the\n+``loads`` argument of :meth:`~flask.Config.from_prefixed_env`.\n \n Notice that any value besides an empty string will be interpreted as a boolean\n ``True`` value in Python, which requires care if an environment explicitly sets\n'",1.0,1.0
src/flask/config.py,src/flask/config.py,08a283af5efc999d4f1e29275317a5c0c05c6f7b,425a62686f094de236a5a9eb1d6885de4730efa5,"""Allow loading of environment variables into the config\n\nThis new method will pick out any environment variables with a certain\nprefix and place them into the config named without the prefix. This\nmakes it easy to use environment variables to configure the app as is\nnow more popular than when Flask started.\n\nThe prefix should ensure that the environment isn't polluted and the\nconfig isn't polluted by environment variables.\n\nI've followed the dynaconf convention of trying to parse the\nenvironment variable and then falling back to the raw value if parsing\nfails.""","'@@ -1,4 +1,5 @@\n import errno\n+import json\n import os\n import types\n import typing as t\n@@ -6,6 +7,13 @@ import typing as t\n from werkzeug.utils import import_string\n \n \n+def _json_loads(raw: t.Union[str, bytes]) -> t.Any:\n+    try:\n+        return json.loads(raw)\n+    except json.JSONDecodeError:\n+        return raw\n+\n+\n class ConfigAttribute:\n     """"""Makes an attribute forward to the config""""""\n \n@@ -97,6 +105,44 @@ class Config(dict):\n             )\n         return self.from_pyfile(rv, silent=silent)\n \n+    def from_prefixed_env(\n+        self,\n+        prefix: str = ""FLASK_"",\n+        *,\n+        loads: t.Callable[[t.Union[str, bytes]], t.Any] = _json_loads,\n+    ) -> bool:\n+        """"""Updates the config from environment variables with the prefix.\n+\n+        Calling this method will result in every environment variable\n+        starting with **prefix** being placed into the configuration\n+        without the **prefix**. The prefix is configurable as an\n+        argument. Note that this method updates the existing config.\n+\n+        For example if there is an environment variable\n+        ``FLASK_SECRET_KEY`` with value ``secretly`` and the prefix is\n+        ``FLASK_`` the config will contain the key ``SECRET_KEY`` with\n+        the value ``secretly`` after calling this method.\n+\n+        The value of the environment variable will be passed to the\n+        **loads** parameter before being placed into the config. By\n+        default **loads** utilises the stdlib json.loads to parse the\n+        value, falling back to the value itself on parsing error.\n+\n+        :param loads: A callable that takes a str (or bytes) returns\n+            the parsed value.\n+        :return: Always returns ``True``.\n+\n+        .. versionadded:: 2.1.0\n+\n+        """"""\n+        mapping = {}\n+        for raw_key, value in os.environ.items():\n+            if raw_key.startswith(prefix):\n+                key = raw_key[len(prefix) :]  # Use removeprefix with Python 3.9\n+                mapping[key] = loads(value)\n+\n+        return self.from_mapping(mapping)\n+\n     def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n         """"""Updates the values in the config from a Python file.  This function\n         behaves as if the file was imported as module with the\n'",2.909090909090909,2.8461538461538463
tests/test_config.py,tests/test_config.py,08a283af5efc999d4f1e29275317a5c0c05c6f7b,425a62686f094de236a5a9eb1d6885de4730efa5,"""Allow loading of environment variables into the config\n\nThis new method will pick out any environment variables with a certain\nprefix and place them into the config named without the prefix. This\nmakes it easy to use environment variables to configure the app as is\nnow more popular than when Flask started.\n\nThe prefix should ensure that the environment isn't polluted and the\nconfig isn't polluted by environment variables.\n\nI've followed the dynaconf convention of trying to parse the\nenvironment variable and then falling back to the raw value if parsing\nfails.""","'@@ -38,6 +38,30 @@ def test_config_from_file():\n     common_object_test(app)\n \n \n+def test_config_from_prefixed_env(monkeypatch):\n+    app = flask.Flask(__name__)\n+    monkeypatch.setenv(""FLASK_A"", ""A value"")\n+    monkeypatch.setenv(""FLASK_B"", ""true"")\n+    monkeypatch.setenv(""FLASK_C"", ""1"")\n+    monkeypatch.setenv(""FLASK_D"", ""1.2"")\n+    monkeypatch.setenv(""NOT_FLASK_A"", ""Another value"")\n+    app.config.from_prefixed_env()\n+    assert app.config[""A""] == ""A value""\n+    assert app.config[""B""] is True\n+    assert app.config[""C""] == 1\n+    assert app.config[""D""] == 1.2\n+    assert ""Another value"" not in app.config.items()\n+\n+\n+def test_config_from_custom_prefixed_env(monkeypatch):\n+    app = flask.Flask(__name__)\n+    monkeypatch.setenv(""FLASK_A"", ""A value"")\n+    monkeypatch.setenv(""NOT_FLASK_A"", ""Another value"")\n+    app.config.from_prefixed_env(""NOT_FLASK_"")\n+    assert app.config[""A""] == ""Another value""\n+    assert ""A value"" not in app.config.items()\n+\n+\n def test_config_from_mapping():\n     app = flask.Flask(__name__)\n     app.config.from_mapping({""SECRET_KEY"": ""config"", ""TEST_KEY"": ""foo""})\n'",1.0,1.0
CHANGES.rst,CHANGES.rst,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,08a283af5efc999d4f1e29275317a5c0c05c6f7b,"'more from_prefixed_env features\n\n* support nested dict access with ""__"" separator\n* don\'t specify separator in prefix\n* catch exceptions for any loads function'","'@@ -55,6 +55,10 @@ Unreleased\n -   From Werkzeug, for redirect responses the ``Location`` header URL\n     will remain relative, and exclude the scheme and domain, by default.\n     :pr:`4496`\n+-   Add ``Config.from_prefixed_env()`` to load config values from\n+    environment variables that start with ``FLASK_`` or another prefix.\n+    This parses values as JSON by default, and allows setting keys in\n+    nested dicts. :pr:`4479`\n \n \n Version 2.0.3\n'",0,0
docs/config.rst,docs/config.rst,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,08a283af5efc999d4f1e29275317a5c0c05c6f7b,"'more from_prefixed_env features\n\n* support nested dict access with ""__"" separator\n* don\'t specify separator in prefix\n* catch exceptions for any loads function'","'@@ -521,7 +521,8 @@ configuration values directly from the environment. Flask can be\n instructed to load all environment variables starting with a specific\n prefix into the config using :meth:`~flask.Config.from_prefixed_env`.\n \n-Environment variables can be set in the shell before starting the server:\n+Environment variables can be set in the shell before starting the\n+server:\n \n .. tabs::\n \n@@ -561,30 +562,43 @@ Environment variables can be set in the shell before starting the server:\n          > flask run\n           * Running on http://127.0.0.1:5000/\n \n-The variables can then be loaded and accessed via the config with a\n-key equal to the environment variable name without the prefix i.e.\n+The variables can then be loaded and accessed via the config with a key\n+equal to the environment variable name without the prefix i.e.\n \n .. code-block:: python\n \n     app.config.from_prefixed_env()\n     app.config[""SECRET_KEY""]  # Is ""5f352379324c22463451387a0aec5d2f""\n \n-The prefix is ``FLASK_`` by default, however it is an configurable via\n-the ``prefix`` argument of :meth:`~flask.Config.from_prefixed_env`.\n+The prefix is ``FLASK_`` by default. This is configurable via the\n+``prefix`` argument of :meth:`~flask.Config.from_prefixed_env`.\n \n-Whilst the value of any environment variable is a string, it will be\n-parsed before being placed into the flask config. By default the\n-parsing is done by json.loads, however this is configurable via the\n-``loads`` argument of :meth:`~flask.Config.from_prefixed_env`.\n+Values will be parsed to attempt to convert them to a more specific type\n+than strings. By default :func:`json.loads` is used, so any valid JSON\n+value is possible, including lists and dicts. This is configurable via\n+the ``loads`` argument of :meth:`~flask.Config.from_prefixed_env`.\n \n-Notice that any value besides an empty string will be interpreted as a boolean\n-``True`` value in Python, which requires care if an environment explicitly sets\n-values intended to be ``False``.\n+When adding a boolean value with the default JSON parsing, only ""true""\n+and ""false"", lowercase, are valid values. Keep in mind that any\n+non-empty string is considered ``True`` by Python.\n \n-Make sure to load the configuration very early on, so that extensions have the\n-ability to access the configuration when starting up.  There are other methods\n-on the config object as well to load from individual files.  For a complete\n-reference, read the :class:`~flask.Config` class documentation.\n+It is possible to set keys in nested dictionaries by separating the\n+keys with double underscore (``__``). Any intermediate keys that don\'t\n+exist on the parent dict will be initialized to an empty dict.\n+\n+.. code-block:: text\n+\n+    $ export FLASK_MYAPI__credentials__username=user123\n+\n+.. code-block:: python\n+\n+    app.config[""MYAPI""][""credentials""][""username""]  # Is ""user123""\n+\n+For even more config loading features, including merging, try a\n+dedicated library such as Dynaconf_, which includes integration with\n+Flask.\n+\n+.. _Dynaconf: https://www.dynaconf.com/\n \n \n Configuration Best Practices\n@@ -604,6 +618,10 @@ that experience:\n     limit yourself to request-only accesses to the configuration you can\n     reconfigure the object later on as needed.\n \n+3.  Make sure to load the configuration very early on, so that\n+    extensions can access the configuration when calling ``init_app``.\n+\n+\n .. _config-dev-prod:\n \n Development / Production\n'",1.0,1.0
src/flask/config.py,src/flask/config.py,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,08a283af5efc999d4f1e29275317a5c0c05c6f7b,"'more from_prefixed_env features\n\n* support nested dict access with ""__"" separator\n* don\'t specify separator in prefix\n* catch exceptions for any loads function'","'@@ -78,7 +78,7 @@ class Config(dict):\n     """"""\n \n     def __init__(self, root_path: str, defaults: t.Optional[dict] = None) -> None:\n-        dict.__init__(self, defaults or {})\n+        super().__init__(defaults or {})\n         self.root_path = root_path\n \n     def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n@@ -106,42 +106,68 @@ class Config(dict):\n         return self.from_pyfile(rv, silent=silent)\n \n     def from_prefixed_env(\n-        self,\n-        prefix: str = ""FLASK_"",\n-        *,\n-        loads: t.Callable[[t.Union[str, bytes]], t.Any] = _json_loads,\n+        self, prefix: str = ""FLASK"", *, loads: t.Callable[[str], t.Any] = json.loads\n     ) -> bool:\n-        """"""Updates the config from environment variables with the prefix.\n-\n-        Calling this method will result in every environment variable\n-        starting with **prefix** being placed into the configuration\n-        without the **prefix**. The prefix is configurable as an\n-        argument. Note that this method updates the existing config.\n+        """"""Load any environment variables that start with ``FLASK_``,\n+        dropping the prefix from the env key for the config key. Values\n+        are passed through a loading function to attempt to convert them\n+        to more specific types than strings.\n \n-        For example if there is an environment variable\n-        ``FLASK_SECRET_KEY`` with value ``secretly`` and the prefix is\n-        ``FLASK_`` the config will contain the key ``SECRET_KEY`` with\n-        the value ``secretly`` after calling this method.\n+        Keys are loaded in :func:`sorted` order.\n \n-        The value of the environment variable will be passed to the\n-        **loads** parameter before being placed into the config. By\n-        default **loads** utilises the stdlib json.loads to parse the\n-        value, falling back to the value itself on parsing error.\n+        The default loading function attempts to parse values as any\n+        valid JSON type, including dicts and lists.\n \n-        :param loads: A callable that takes a str (or bytes) returns\n-            the parsed value.\n-        :return: Always returns ``True``.\n+        Specific items in nested dicts can be set by separating the\n+        keys with double underscores (``__``). If an intermediate key\n+        doesn\'t exist, it will be initialized to an empty dict.\n \n-        .. versionadded:: 2.1.0\n+        :param prefix: Load env vars that start with this prefix,\n+            separated with an underscore (``_``).\n+        :param loads: Pass each string value to this function and use\n+            the returned value as the config value. If any error is\n+            raised it is ignored and the value remains a string. The\n+            default is :func:`json.loads`.\n \n+        .. versionadded:: 2.1\n         """"""\n-        mapping = {}\n-        for raw_key, value in os.environ.items():\n-            if raw_key.startswith(prefix):\n-                key = raw_key[len(prefix) :]  # Use removeprefix with Python 3.9\n-                mapping[key] = loads(value)\n+        prefix = f""{prefix}_""\n+        len_prefix = len(prefix)\n+\n+        for key in sorted(os.environ):\n+            if not key.startswith(prefix):\n+                continue\n+\n+            value = os.environ[key]\n+\n+            try:\n+                value = loads(value)\n+            except Exception:\n+                # Keep the value as a string if loading failed.\n+                pass\n+\n+            # Change to key.removeprefix(prefix) on Python >= 3.9.\n+            key = key[len_prefix:]\n \n-        return self.from_mapping(mapping)\n+            if ""__"" not in key:\n+                # A non-nested key, set directly.\n+                self[key] = value\n+                continue\n+\n+            # Traverse nested dictionaries with keys separated by ""__"".\n+            current = self\n+            *parts, tail = key.split(""__"")\n+\n+            for part in parts:\n+                # If an intermediate dict does not exist, create it.\n+                if part not in current:\n+                    current[part] = {}\n+\n+                current = current[part]\n+\n+            current[tail] = value\n+\n+        return True\n \n     def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n         """"""Updates the values in the config from a Python file.  This function\n'",2.8461538461538463,3.1538461538461537
tests/test_config.py,tests/test_config.py,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,08a283af5efc999d4f1e29275317a5c0c05c6f7b,"'more from_prefixed_env features\n\n* support nested dict access with ""__"" separator\n* don\'t specify separator in prefix\n* catch exceptions for any loads function'","'@@ -38,28 +38,54 @@ def test_config_from_file():\n     common_object_test(app)\n \n \n-def test_config_from_prefixed_env(monkeypatch):\n+def test_from_prefixed_env(monkeypatch):\n+    monkeypatch.setenv(""FLASK_STRING"", ""value"")\n+    monkeypatch.setenv(""FLASK_BOOL"", ""true"")\n+    monkeypatch.setenv(""FLASK_INT"", ""1"")\n+    monkeypatch.setenv(""FLASK_FLOAT"", ""1.2"")\n+    monkeypatch.setenv(""FLASK_LIST"", ""[1, 2]"")\n+    monkeypatch.setenv(""FLASK_DICT"", \'{""k"": ""v""}\')\n+    monkeypatch.setenv(""NOT_FLASK_OTHER"", ""other"")\n+\n     app = flask.Flask(__name__)\n-    monkeypatch.setenv(""FLASK_A"", ""A value"")\n-    monkeypatch.setenv(""FLASK_B"", ""true"")\n-    monkeypatch.setenv(""FLASK_C"", ""1"")\n-    monkeypatch.setenv(""FLASK_D"", ""1.2"")\n-    monkeypatch.setenv(""NOT_FLASK_A"", ""Another value"")\n     app.config.from_prefixed_env()\n-    assert app.config[""A""] == ""A value""\n-    assert app.config[""B""] is True\n-    assert app.config[""C""] == 1\n-    assert app.config[""D""] == 1.2\n-    assert ""Another value"" not in app.config.items()\n \n+    assert app.config[""STRING""] == ""value""\n+    assert app.config[""BOOL""] is True\n+    assert app.config[""INT""] == 1\n+    assert app.config[""FLOAT""] == 1.2\n+    assert app.config[""LIST""] == [1, 2]\n+    assert app.config[""DICT""] == {""k"": ""v""}\n+    assert ""OTHER"" not in app.config\n+\n+\n+def test_from_prefixed_env_custom_prefix(monkeypatch):\n+    monkeypatch.setenv(""FLASK_A"", ""a"")\n+    monkeypatch.setenv(""NOT_FLASK_A"", ""b"")\n+\n+    app = flask.Flask(__name__)\n+    app.config.from_prefixed_env(""NOT_FLASK"")\n+\n+    assert app.config[""A""] == ""b""\n+\n+\n+def test_from_prefixed_env_nested(monkeypatch):\n+    monkeypatch.setenv(""FLASK_EXIST__ok"", ""other"")\n+    monkeypatch.setenv(""FLASK_EXIST__inner__ik"", ""2"")\n+    monkeypatch.setenv(""FLASK_EXIST__new__more"", \'{""k"": false}\')\n+    monkeypatch.setenv(""FLASK_NEW__K"", ""v"")\n \n-def test_config_from_custom_prefixed_env(monkeypatch):\n     app = flask.Flask(__name__)\n-    monkeypatch.setenv(""FLASK_A"", ""A value"")\n-    monkeypatch.setenv(""NOT_FLASK_A"", ""Another value"")\n-    app.config.from_prefixed_env(""NOT_FLASK_"")\n-    assert app.config[""A""] == ""Another value""\n-    assert ""A value"" not in app.config.items()\n+    app.config[""EXIST""] = {""ok"": ""value"", ""flag"": True, ""inner"": {""ik"": 1}}\n+    app.config.from_prefixed_env()\n+\n+    assert app.config[""EXIST""] == {\n+        ""ok"": ""other"",\n+        ""flag"": True,\n+        ""inner"": {""ik"": 2},\n+        ""new"": {""more"": {""k"": False}},\n+    }\n+    assert app.config[""NEW""] == {""K"": ""v""}\n \n \n def test_config_from_mapping():\n'",1.0,1.0
docs/config.rst,docs/config.rst,e75d575361841404e0b1f89c19dc7de6b325cc67,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,'windows env vars are uppercase',"'@@ -594,9 +594,12 @@ exist on the parent dict will be initialized to an empty dict.\n \n     app.config[""MYAPI""][""credentials""][""username""]  # Is ""user123""\n \n-For even more config loading features, including merging, try a\n-dedicated library such as Dynaconf_, which includes integration with\n-Flask.\n+On Windows, environment variable keys are always uppercase, therefore\n+the above example would end up as ``MYAPI__CREDENTIALS__USERNAME``.\n+\n+For even more config loading features, including merging and\n+case-insensitive Windows support, try a dedicated library such as\n+Dynaconf_, which includes integration with Flask.\n \n .. _Dynaconf: https://www.dynaconf.com/\n \n'",1.0,1.0
tests/test_config.py,tests/test_config.py,e75d575361841404e0b1f89c19dc7de6b325cc67,4eb5e9455b2a8f15f3dc5065a47f8e43ac47e539,'windows env vars are uppercase',"'@@ -79,12 +79,24 @@ def test_from_prefixed_env_nested(monkeypatch):\n     app.config[""EXIST""] = {""ok"": ""value"", ""flag"": True, ""inner"": {""ik"": 1}}\n     app.config.from_prefixed_env()\n \n-    assert app.config[""EXIST""] == {\n-        ""ok"": ""other"",\n-        ""flag"": True,\n-        ""inner"": {""ik"": 2},\n-        ""new"": {""more"": {""k"": False}},\n-    }\n+    if os.name != ""nt"":\n+        assert app.config[""EXIST""] == {\n+            ""ok"": ""other"",\n+            ""flag"": True,\n+            ""inner"": {""ik"": 2},\n+            ""new"": {""more"": {""k"": False}},\n+        }\n+    else:\n+        # Windows env var keys are always uppercase.\n+        assert app.config[""EXIST""] == {\n+            ""ok"": ""value"",\n+            ""OK"": ""other"",\n+            ""flag"": True,\n+            ""inner"": {""ik"": 1},\n+            ""INNER"": {""IK"": 2},\n+            ""NEW"": {""MORE"": {""k"": False}},\n+        }\n+\n     assert app.config[""NEW""] == {""K"": ""v""}\n \n \n'",1.0,1.0555555555555556
src/flask/config.py,src/flask/config.py,41aaaf7fa07f28ef15fd1d343142e96440889a8b,2f5a2ab82ee17f5e14b8ecf0a4b3b07ceafeee98,'clean up unused function from prefixed_env pr',"'@@ -7,13 +7,6 @@ import typing as t\n from werkzeug.utils import import_string\n \n \n-def _json_loads(raw: t.Union[str, bytes]) -> t.Any:\n-    try:\n-        return json.loads(raw)\n-    except json.JSONDecodeError:\n-        return raw\n-\n-\n class ConfigAttribute:\n     """"""Makes an attribute forward to the config""""""\n \n'",3.1538461538461537,3.25
src/flask/wrappers.py,src/flask/wrappers.py,cd4ab005a92ff996e9104c92017fe1e6daeccd46,41aaaf7fa07f28ef15fd1d343142e96440889a8b,'fix typing',"'@@ -123,7 +123,7 @@ class Request(RequestBase):\n \n             attach_enctype_error_multidict(self)\n \n-    def on_json_loading_failed(self, e: ValueError) -> t.Any:\n+    def on_json_loading_failed(self, e: t.Optional[ValueError]) -> t.Any:\n         try:\n             return super().on_json_loading_failed(e)\n         except BadRequest as e:\n'",2.857142857142857,2.857142857142857
tox.ini,tox.ini,f5ed54b0318815e4500e72a56173c3b14a532a41,cd4ab005a92ff996e9104c92017fe1e6daeccd46,'ignore examples tests\n\ncausing an unexpected failure in CI',"'@@ -14,9 +14,10 @@ deps =\n     min: -r requirements/tests-pallets-min.txt\n     dev: -r requirements/tests-pallets-dev.txt\n \n-    examples/tutorial[test]\n-    examples/javascript[test]\n-commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n+#    examples/tutorial[test]\n+#    examples/javascript[test]\n+# commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs:tests examples}\n+commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs:tests}\n \n [testenv:style]\n deps = pre-commit\n'",0,0
CHANGES.rst,CHANGES.rst,7d264d7dc5b3e057319d43ef0897709f4c78f1ef,f5ed54b0318815e4500e72a56173c3b14a532a41,'release version 2.1.0',"'@@ -3,7 +3,7 @@\n Version 2.1.0\n -------------\n \n-Unreleased\n+Released 2022-03-28\n \n -   Drop support for Python 3.6. :pr:`4335`\n -   Update Click dependency to >= 8.0. :pr:`4008`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,7d264d7dc5b3e057319d43ef0897709f4c78f1ef,f5ed54b0318815e4500e72a56173c3b14a532a41,'release version 2.1.0',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.0.dev0""\n+__version__ = ""2.1.0""\n'",0,0
CHANGES.rst,CHANGES.rst,b109b092a95036de875246f05cdc377a2c7faab8,65b0eef303dfec6b7baa66ff34253e0285e1c3bf,'start version 2.2.0',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.2.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.1.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,b109b092a95036de875246f05cdc377a2c7faab8,65b0eef303dfec6b7baa66ff34253e0285e1c3bf,'start version 2.2.0',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.0""\n+__version__ = ""2.2.0.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,5589915b383a6f53e92f3822c982cce3c4083456,65b0eef303dfec6b7baa66ff34253e0285e1c3bf,'start version 2.1.1',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.1.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.1.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,5589915b383a6f53e92f3822c982cce3c4083456,65b0eef303dfec6b7baa66ff34253e0285e1c3bf,'start version 2.1.1',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.0""\n+__version__ = ""2.1.1.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,d023d943715f193e78413280e10d101f39501748,5589915b383a6f53e92f3822c982cce3c4083456,'set importlib_metadata minimum version',"'@@ -5,6 +5,9 @@ Version 2.1.1\n \n Unreleased\n \n+-   Set the minimum required version of importlib_metadata to 3.6.0,\n+    which is required on Python < 3.10. :issue:`4502`\n+\n \n Version 2.1.0\n -------------\n'",0,0
setup.py,setup.py,d023d943715f193e78413280e10d101f39501748,5589915b383a6f53e92f3822c982cce3c4083456,'set importlib_metadata minimum version',"'@@ -8,7 +8,7 @@ setup(\n         ""Jinja2 >= 3.0"",\n         ""itsdangerous >= 2.0"",\n         ""click >= 8.0"",\n-        ""importlib-metadata; python_version < \'3.10\'"",\n+        ""importlib-metadata >= 3.6.0; python_version < \'3.10\'"",\n     ],\n     extras_require={\n         ""async"": [""asgiref >= 3.2""],\n'",0,0
CHANGES.rst,CHANGES.rst,c419931f555c80b07b518944fc7004f6cb75b8e1,c3d0880e72dfda76734bfddadf20cfee94b148c2,'release version 2.1.1',"'@@ -3,7 +3,7 @@\n Version 2.1.1\n -------------\n \n-Unreleased\n+Released on 2022-03-30\n \n -   Set the minimum required version of importlib_metadata to 3.6.0,\n     which is required on Python < 3.10. :issue:`4502`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,c6f297719e43380011e76ad6d070b7a27d4d1dce,a8f4ee1b66cfede1e596aef089850fad073e1775,'release version 2.1.1',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.1.dev0""\n+__version__ = ""2.1.1""\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,9f4f559f5946306b190a0195baf2700851a9eb36,45fc77d9266cd8101b2ab1e0487053db27b57ec2,'Bump actions/checkout from 2 to 3\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 2 to 3.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/v2...v3)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -36,7 +36,7 @@ jobs:\n           - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py-dev}\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: actions/checkout@v3\n       - uses: actions/setup-python@v3\n         with:\n           python-version: ${{ matrix.python }}\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,26555a85f188e5557897b08c8421706084843088,188bd17ff1f3e1d9c9ddd015c8765280e95ffb83,'update requirements',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.31.0\n+    rev: v2.31.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v2.7.1\n+    rev: v3.0.1\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n@@ -16,7 +16,7 @@ repos:\n         args: [""--application-directories"", ""src""]\n         additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n-    rev: 22.1.0\n+    rev: 22.3.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n@@ -27,7 +27,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.4.3\n+    rev: v2.4.4\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
requirements/dev.txt,requirements/dev.txt,26555a85f188e5557897b08c8421706084843088,188bd17ff1f3e1d9c9ddd015c8765280e95ffb83,'update requirements',"'@@ -10,29 +10,29 @@\n -r typing.txt\n cfgv==3.3.1\n     # via pre-commit\n-click==8.0.3\n+click==8.1.2\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n distlib==0.3.4\n     # via virtualenv\n-filelock==3.4.2\n+filelock==3.6.0\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.4.8\n+identify==2.4.12\n     # via pre-commit\n nodeenv==1.6.0\n     # via pre-commit\n pep517==0.12.0\n     # via pip-tools\n-pip-compile-multi==2.4.3\n+pip-compile-multi==2.4.4\n     # via -r requirements/dev.in\n pip-tools==6.5.1\n     # via pip-compile-multi\n-platformdirs==2.4.1\n+platformdirs==2.5.1\n     # via virtualenv\n pre-commit==2.17.0\n     # via -r requirements/dev.in\n@@ -50,7 +50,7 @@ toposort==1.7\n     # via pip-compile-multi\n tox==3.24.5\n     # via -r requirements/dev.in\n-virtualenv==20.13.1\n+virtualenv==20.14.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,26555a85f188e5557897b08c8421706084843088,188bd17ff1f3e1d9c9ddd015c8765280e95ffb83,'update requirements',"'@@ -11,9 +11,9 @@ babel==2.9.1\n     # via sphinx\n certifi==2021.10.8\n     # via requests\n-charset-normalizer==2.0.11\n+charset-normalizer==2.0.12\n     # via requests\n-docutils==0.16\n+docutils==0.17.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -21,9 +21,9 @@ idna==3.3\n     # via requests\n imagesize==1.3.0\n     # via sphinx\n-jinja2==3.0.3\n+jinja2==3.1.1\n     # via sphinx\n-markupsafe==2.0.1\n+markupsafe==2.1.1\n     # via jinja2\n packaging==21.3\n     # via\n@@ -37,13 +37,13 @@ pygments==2.11.2\n     #   sphinx-tabs\n pyparsing==3.0.7\n     # via packaging\n-pytz==2021.3\n+pytz==2022.1\n     # via babel\n requests==2.27.1\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==4.4.0\n+sphinx==4.5.0\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -52,7 +52,7 @@ sphinx==4.4.0\n     #   sphinxcontrib-log-cabinet\n sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n-sphinx-tabs==3.2.0\n+sphinx-tabs==3.3.1\n     # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.2\n     # via sphinx\n@@ -68,5 +68,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.8\n+urllib3==1.26.9\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,26555a85f188e5557897b08c8421706084843088,188bd17ff1f3e1d9c9ddd015c8765280e95ffb83,'update requirements',"'@@ -23,9 +23,9 @@ py==1.11.0\n     # via pytest\n pyparsing==3.0.7\n     # via packaging\n-pytest==7.0.0\n+pytest==7.1.1\n     # via -r requirements/tests.in\n-python-dotenv==0.19.2\n+python-dotenv==0.20.0\n     # via -r requirements/tests.in\n tomli==2.0.1\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,26555a85f188e5557897b08c8421706084843088,188bd17ff1f3e1d9c9ddd015c8765280e95ffb83,'update requirements',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.0\n     # via cryptography\n-cryptography==36.0.1\n+cryptography==36.0.2\n     # via -r requirements/typing.in\n-mypy==0.931\n+mypy==0.942\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -17,11 +17,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.2\n+types-contextvars==2.4.4\n     # via -r requirements/typing.in\n types-dataclasses==0.6.4\n     # via -r requirements/typing.in\n-types-setuptools==57.4.9\n+types-setuptools==57.4.11\n     # via -r requirements/typing.in\n-typing-extensions==4.0.1\n+typing-extensions==4.1.1\n     # via mypy\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,50bf3bba7354275bbfe3f8a4fc9ce1fec3b71404,0d4e71bfe127707ce8a3ede976a637db1cee74b0,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.31.0 → v2.31.1](https://github.com/asottile/pyupgrade/compare/v2.31.0...v2.31.1)\n- [github.com/asottile/reorder_python_imports: v2.7.1 → v3.0.1](https://github.com/asottile/reorder_python_imports/compare/v2.7.1...v3.0.1)\n- [github.com/psf/black: 22.1.0 → 22.3.0](https://github.com/psf/black/compare/22.1.0...22.3.0)\n- [github.com/peterdemin/pip-compile-multi: v2.4.3 → v2.4.5](https://github.com/peterdemin/pip-compile-multi/compare/v2.4.3...v2.4.5)',"'@@ -27,7 +27,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.4.4\n+    rev: v2.4.5\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,56414782ca6c109f4c7c9d26418bf444468316db,50bf3bba7354275bbfe3f8a4fc9ce1fec3b71404,'pre-commit update branch',"'@@ -1,5 +1,5 @@\n ci:\n-  autoupdate_branch: ""2.0.x""\n+  autoupdate_branch: ""2.1.x""\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,e3c014f9aa566c83efd482ce1cd0e5e25cdb6cf2,b9729a08796eebc57ed658c9c05ea8b6374fc2c2,"'docs ""Returning API Errors as JSON"" return correct status code'","'@@ -489,7 +489,7 @@ This is a simple example:\n \n     @app.errorhandler(InvalidAPIUsage)\n     def invalid_api_usage(e):\n-        return jsonify(e.to_dict())\n+        return jsonify(e.to_dict()), e.status_code\n \n     # an API app route for getting user information\n     # a correct request might be /api/user?user_id=420\n'",1.5714285714285714,1.5714285714285714
docs/testing.rst,docs/testing.rst,19d7a0ef78f1f8a05f7be5f0e8d2192fd1d5e5e8,5c0b9a6af334dcbb2814f4e004be2b2c8a389363,'docs pass cli args as kwarg to test runner',"'@@ -265,10 +265,10 @@ command from the command line.\n         click.echo(f""Hello, {name}!"")\n \n     def test_hello_command(runner):\n-        result = runner.invoke([""hello""])\n+        result = runner.invoke(args=""hello"")\n         assert ""World"" in result.output\n \n-        result = runner.invoke([""hello"", ""--name"", ""Flask""])\n+        result = runner.invoke(args=[""hello"", ""--name"", ""Flask""])\n         assert ""Flask"" in result.output\n \n \n'",1.0,1.0
tests/test_cli.py,tests/test_cli.py,411dbb37e2e37943b6282365049c2a8cee4ac9e6,5334e28f6e107e1b021bc9655e9a308c80826593,'remove old test',"'@@ -7,7 +7,6 @@ import sys\n import types\n from functools import partial\n from pathlib import Path\n-from unittest.mock import patch\n \n import click\n import pytest\n@@ -25,7 +24,6 @@ from flask.cli import FlaskGroup\n from flask.cli import get_version\n from flask.cli import load_dotenv\n from flask.cli import locate_app\n-from flask.cli import main as cli_main\n from flask.cli import NoAppException\n from flask.cli import prepare_import\n from flask.cli import run_command\n@@ -654,11 +652,3 @@ def test_cli_empty(app):\n \n     result = app.test_cli_runner().invoke(args=[""blue"", ""--help""])\n     assert result.exit_code == 2, f""Unexpected success:\\n\\n{result.output}""\n-\n-\n-def test_click_7_deprecated():\n-    with patch(""flask.cli.cli""):\n-        if int(click.__version__[0]) < 8:\n-            pytest.deprecated_call(cli_main, match="".* Click 7 is deprecated"")\n-        else:\n-            cli_main()\n'",1.0606060606060606,1.0461538461538462
docs/testing.rst,docs/testing.rst,4dd14ed039aaab5edb50758edeaf0aacab3d1e5b,411dbb37e2e37943b6282365049c2a8cee4ac9e6,'Syntax error in testing.rst',"'@@ -142,9 +142,9 @@ use ``pathlib.Path`` to get files relative to the current test file.\n \n     def test_edit_user(client):\n         response = client.post(""/user/2/edit"", data={\n-            name=""Flask"",\n-            theme=""dark"",\n-            picture=(resources / ""picture.png"").open(""rb""),\n+            ""name"": ""Flask"",\n+            ""theme"": ""dark"",\n+            ""picture"": (resources / ""picture.png"").open(""rb""),\n         })\n         assert response.status_code == 200\n \n'",1.0,1.0
CHANGES.rst,CHANGES.rst,69f71b4d94006678a2463f76a4504208d195c367,2b8b47817a981b97a233420b5214f6ff9e771c35,'start version 2.1.2',"'@@ -1,5 +1,11 @@\n .. currentmodule:: flask\n \n+Version 2.1.2\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.1.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,69f71b4d94006678a2463f76a4504208d195c367,2b8b47817a981b97a233420b5214f6ff9e771c35,'start version 2.1.2',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.1""\n+__version__ = ""2.1.2.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,eede1a3685e21deaeb6686e9de9b76a73b6a510c,69f71b4d94006678a2463f76a4504208d195c367,'fix annotation for json.loads',"'@@ -5,6 +5,9 @@ Version 2.1.2\n \n Unreleased\n \n+-   Fix type annotation for ``json.loads``, it accepts str or bytes.\n+    :issue:`4519`\n+\n \n Version 2.1.1\n -------------\n'",0,0
src/flask/json/__init__.py,src/flask/json/__init__.py,eede1a3685e21deaeb6686e9de9b76a73b6a510c,69f71b4d94006678a2463f76a4504208d195c367,'fix annotation for json.loads',"'@@ -153,7 +153,11 @@ def dump(\n     _json.dump(obj, fp, **kwargs)\n \n \n-def loads(s: str, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.Any:\n+def loads(\n+    s: t.Union[str, bytes],\n+    app: t.Optional[""Flask""] = None,\n+    **kwargs: t.Any,\n+) -> t.Any:\n     """"""Deserialize an object from a string of JSON.\n \n     Takes the same arguments as the built-in :func:`json.loads`, with\n'",3.3,3.3
CHANGES.rst,CHANGES.rst,5050a18a0057df4cda6f6b00483d12d29cb59239,dba2be9311d2abfd1b973c6bb578f416ee771fda,'evaluate --cert before --key',"'@@ -7,6 +7,8 @@ Unreleased\n \n -   Fix type annotation for ``json.loads``, it accepts str or bytes.\n     :issue:`4519`\n+-   The ``--cert`` and ``--key`` options on ``flask run`` can be given\n+    in either order. :issue:`4459`\n \n \n Version 2.1.1\n'",0,0
src/flask/cli.py,src/flask/cli.py,5050a18a0057df4cda6f6b00483d12d29cb59239,dba2be9311d2abfd1b973c6bb578f416ee771fda,'evaluate --cert before --key',"'@@ -763,7 +763,10 @@ class SeparatedPathType(click.Path):\n @click.option(""--host"", ""-h"", default=""127.0.0.1"", help=""The interface to bind to."")\n @click.option(""--port"", ""-p"", default=5000, help=""The port to bind to."")\n @click.option(\n-    ""--cert"", type=CertParamType(), help=""Specify a certificate file to use HTTPS.""\n+    ""--cert"",\n+    type=CertParamType(),\n+    help=""Specify a certificate file to use HTTPS."",\n+    is_eager=True,\n )\n @click.option(\n     ""--key"",\n'",4.114285714285714,4.114285714285714
tests/test_cli.py,tests/test_cli.py,5050a18a0057df4cda6f6b00483d12d29cb59239,dba2be9311d2abfd1b973c6bb578f416ee771fda,'evaluate --cert before --key',"'@@ -553,9 +553,14 @@ def test_run_cert_path():\n     with pytest.raises(click.BadParameter):\n         run_command.make_context(""run"", [""--key"", __file__])\n \n+    # cert specified first\n     ctx = run_command.make_context(""run"", [""--cert"", __file__, ""--key"", __file__])\n     assert ctx.params[""cert""] == (__file__, __file__)\n \n+    # key specified first\n+    ctx = run_command.make_context(""run"", [""--key"", __file__, ""--cert"", __file__])\n+    assert ctx.params[""cert""] == (__file__, __file__)\n+\n \n def test_run_cert_adhoc(monkeypatch):\n     monkeypatch.setitem(sys.modules, ""cryptography"", None)\n'",1.0461538461538462,1.0461538461538462
.pre-commit-config.yaml,.pre-commit-config.yaml,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,2ec11930951d91dfa9cf02ad80a7da33b9b919b6,'update requirements',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.31.1\n+    rev: v2.32.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n@@ -31,7 +31,7 @@ repos:\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.1.0\n+    rev: v4.2.0\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
requirements/dev.txt,requirements/dev.txt,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,2ec11930951d91dfa9cf02ad80a7da33b9b919b6,'update requirements',"'@@ -28,13 +28,13 @@ nodeenv==1.6.0\n     # via pre-commit\n pep517==0.12.0\n     # via pip-tools\n-pip-compile-multi==2.4.4\n+pip-compile-multi==2.4.5\n     # via -r requirements/dev.in\n-pip-tools==6.5.1\n+pip-tools==6.6.0\n     # via pip-compile-multi\n-platformdirs==2.5.1\n+platformdirs==2.5.2\n     # via virtualenv\n-pre-commit==2.17.0\n+pre-commit==2.18.1\n     # via -r requirements/dev.in\n pyyaml==6.0\n     # via pre-commit\n@@ -48,9 +48,9 @@ toml==0.10.2\n     #   tox\n toposort==1.7\n     # via pip-compile-multi\n-tox==3.24.5\n+tox==3.25.0\n     # via -r requirements/dev.in\n-virtualenv==20.14.0\n+virtualenv==20.14.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,2ec11930951d91dfa9cf02ad80a7da33b9b919b6,'update requirements',"'@@ -7,7 +7,7 @@\n #\n alabaster==0.7.12\n     # via sphinx\n-babel==2.9.1\n+babel==2.10.1\n     # via sphinx\n certifi==2021.10.8\n     # via requests\n@@ -31,11 +31,11 @@ packaging==21.3\n     #   sphinx\n pallets-sphinx-themes==2.0.2\n     # via -r requirements/docs.in\n-pygments==2.11.2\n+pygments==2.12.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==3.0.7\n+pyparsing==3.0.8\n     # via packaging\n pytz==2022.1\n     # via babel\n'",0,0
requirements/tests.txt,requirements/tests.txt,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,2ec11930951d91dfa9cf02ad80a7da33b9b919b6,'update requirements',"'@@ -21,9 +21,9 @@ pluggy==1.0.0\n     # via pytest\n py==1.11.0\n     # via pytest\n-pyparsing==3.0.7\n+pyparsing==3.0.8\n     # via packaging\n-pytest==7.1.1\n+pytest==7.1.2\n     # via -r requirements/tests.in\n python-dotenv==0.20.0\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,2ec11930951d91dfa9cf02ad80a7da33b9b919b6,'update requirements',"'@@ -17,11 +17,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.4\n+types-contextvars==2.4.5\n     # via -r requirements/typing.in\n-types-dataclasses==0.6.4\n+types-dataclasses==0.6.5\n     # via -r requirements/typing.in\n-types-setuptools==57.4.11\n+types-setuptools==57.4.14\n     # via -r requirements/typing.in\n-typing-extensions==4.1.1\n+typing-extensions==4.2.0\n     # via mypy\n'",0,0
docs/deploying/wsgi-standalone.rst,docs/deploying/wsgi-standalone.rst,3fd24c1f6fa2b3a5b68fb87b0fc3453a352340e5,c395b13f9e9a691c6b23c68d5687ff052b7ada7e,'Fix copy/paste error in wsgi-standalone.rst',"'@@ -73,7 +73,7 @@ uWSGI\n `uWSGI`_ is a fast application server written in C. It is very\n configurable, which makes it more complicated to setup than Gunicorn.\n It also provides many other utilities for writing robust web\n-applications. To run a Flask application, tell Gunicorn how to import\n+applications. To run a Flask application, tell uWSGI how to import\n your Flask app object.\n \n .. code-block:: text\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,ff6290d4c75d4d295a0ba28f2f0c417f7374eb0c,'update requirements',"'@@ -8,7 +8,7 @@ repos:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.0.1\n+    rev: v3.1.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n'",0,0
requirements/dev.txt,requirements/dev.txt,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,ff6290d4c75d4d295a0ba28f2f0c417f7374eb0c,'update requirements',"'@@ -22,7 +22,7 @@ filelock==3.6.0\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.4.12\n+identify==2.5.0\n     # via pre-commit\n nodeenv==1.6.0\n     # via pre-commit\n'",0,0
requirements/typing.txt,requirements/typing.txt,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,ff6290d4c75d4d295a0ba28f2f0c417f7374eb0c,'update requirements',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.0\n     # via cryptography\n-cryptography==36.0.2\n+cryptography==37.0.1\n     # via -r requirements/typing.in\n-mypy==0.942\n+mypy==0.950\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n'",0,0
tests/test_appctx.py,tests/test_appctx.py,ef6c2b9e4aee74098a1208b42ce432d7c82fc0d3,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,'clean up pytest.raises tests',"'@@ -120,7 +120,7 @@ def test_app_tearing_down_with_unhandled_exception(app, client):\n     def index():\n         raise Exception(""dummy"")\n \n-    with pytest.raises(Exception):\n+    with pytest.raises(Exception, match=""dummy""):\n         with app.app_context():\n             client.get(""/"")\n \n'",1.103448275862069,1.103448275862069
tests/test_basic.py,tests/test_basic.py,ef6c2b9e4aee74098a1208b42ce432d7c82fc0d3,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,'clean up pytest.raises tests',"'@@ -150,10 +150,7 @@ def test_request_dispatching(app, client):\n \n def test_disallow_string_for_allowed_methods(app):\n     with pytest.raises(TypeError):\n-\n-        @app.route(""/"", methods=""GET POST"")\n-        def index():\n-            return ""Hey""\n+        app.add_url_rule(""/"", methods=""GET POST"", endpoint=""test"")\n \n \n def test_url_mapping(app, client):\n@@ -937,8 +934,9 @@ def test_baseexception_error_handling(app, client):\n     def broken_func():\n         raise KeyboardInterrupt()\n \n-    with pytest.raises(KeyboardInterrupt):\n-        client.get(""/"")\n+    with client:\n+        with pytest.raises(KeyboardInterrupt):\n+            client.get(""/"")\n \n         ctx = flask._request_ctx_stack.top\n         assert ctx.preserved\n@@ -1243,20 +1241,25 @@ def test_response_type_errors():\n \n     with pytest.raises(TypeError) as e:\n         c.get(""/none"")\n-        assert ""returned None"" in str(e.value)\n-        assert ""from_none"" in str(e.value)\n+\n+    assert ""returned None"" in str(e.value)\n+    assert ""from_none"" in str(e.value)\n \n     with pytest.raises(TypeError) as e:\n         c.get(""/small_tuple"")\n-        assert ""tuple must have the form"" in str(e.value)\n \n-    pytest.raises(TypeError, c.get, ""/large_tuple"")\n+    assert ""tuple must have the form"" in str(e.value)\n+\n+    with pytest.raises(TypeError):\n+        c.get(""/large_tuple"")\n \n     with pytest.raises(TypeError) as e:\n         c.get(""/bad_type"")\n-        assert ""it was a bool"" in str(e.value)\n \n-    pytest.raises(TypeError, c.get, ""/bad_wsgi"")\n+    assert ""it was a bool"" in str(e.value)\n+\n+    with pytest.raises(TypeError):\n+        c.get(""/bad_wsgi"")\n \n \n def test_make_response(app, req_ctx):\n@@ -1674,11 +1677,9 @@ def test_debug_mode_complains_after_first_request(app, client):\n \n     assert not app.got_first_request\n     assert client.get(""/"").data == b""Awesome""\n-    with pytest.raises(AssertionError) as e:\n \n-        @app.route(""/foo"")\n-        def broken():\n-            return ""Meh""\n+    with pytest.raises(AssertionError) as e:\n+        app.add_url_rule(""/foo"", endpoint=""late"")\n \n     assert ""A setup function was called"" in str(e.value)\n \n'",1.0679245283018868,1.0684410646387832
tests/test_cli.py,tests/test_cli.py,ef6c2b9e4aee74098a1208b42ce432d7c82fc0d3,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,'clean up pytest.raises tests',"'@@ -305,9 +305,9 @@ def test_lazy_load_error(monkeypatch):\n \n     lazy = DispatchingApp(bad_load, use_eager_loading=False)\n \n-    with pytest.raises(BadExc):\n-        # reduce flakiness by waiting for the internal loading lock\n-        with lazy._lock:\n+    # reduce flakiness by waiting for the internal loading lock\n+    with lazy._lock:\n+        with pytest.raises(BadExc):\n             lazy._flush_bg_loading_exception()\n \n \n'",1.0461538461538462,1.0461538461538462
tests/test_config.py,tests/test_config.py,ef6c2b9e4aee74098a1208b42ce432d7c82fc0d3,ef7d01f0a03be512b22d2a28b5a4229fdc87ea9a,'clean up pytest.raises tests',"'@@ -133,9 +133,11 @@ def test_config_from_class():\n def test_config_from_envvar(monkeypatch):\n     monkeypatch.setattr(""os.environ"", {})\n     app = flask.Flask(__name__)\n+\n     with pytest.raises(RuntimeError) as e:\n         app.config.from_envvar(""FOO_SETTINGS"")\n-        assert ""\'FOO_SETTINGS\' is not set"" in str(e.value)\n+\n+    assert ""\'FOO_SETTINGS\' is not set"" in str(e.value)\n     assert not app.config.from_envvar(""FOO_SETTINGS"", silent=True)\n \n     monkeypatch.setattr(\n@@ -147,8 +149,8 @@ def test_config_from_envvar(monkeypatch):\n \n def test_config_from_envvar_missing(monkeypatch):\n     monkeypatch.setattr(""os.environ"", {""FOO_SETTINGS"": ""missing.cfg""})\n+    app = flask.Flask(__name__)\n     with pytest.raises(IOError) as e:\n-        app = flask.Flask(__name__)\n         app.config.from_envvar(""FOO_SETTINGS"")\n     msg = str(e.value)\n     assert msg.startswith(\n'",1.0555555555555556,1.0555555555555556
CHANGES.rst,CHANGES.rst,7b28a9057d6925ae408ef73a9f28e9906d9300b3,a0bb10b8d299c446559b6f95dd599230edc457ac,'release version 2.1.2',"'@@ -3,7 +3,7 @@\n Version 2.1.2\n -------------\n \n-Unreleased\n+Released 2022-04-28\n \n -   Fix type annotation for ``json.loads``, it accepts str or bytes.\n     :issue:`4519`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,7b28a9057d6925ae408ef73a9f28e9906d9300b3,a0bb10b8d299c446559b6f95dd599230edc457ac,'release version 2.1.2',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.2.dev0""\n+__version__ = ""2.1.2""\n'",0,0
src/flask/cli.py,src/flask/cli.py,8ddbad9ccdc176b9d57a4aff0076c1c58c455318,50374e3cfe815acd24fd390c861561a0dd17bfbb,'Fix linting error.\n\nSuppress mypy.\n\nSuppress mypy error.\n\nSuppress mypy error.',"'@@ -9,6 +9,8 @@ from functools import update_wrapper\n from operator import attrgetter\n from threading import Lock\n from threading import Thread\n+from typing import Any\n+from typing import TYPE_CHECKING\n \n import click\n from werkzeug.utils import import_string\n@@ -36,7 +38,12 @@ else:\n     # We technically have importlib.metadata on 3.8+,\n     # but the API changed in 3.10, so use the backport\n     # for consistency.\n-    import importlib_metadata as metadata  # type: ignore\n+    if TYPE_CHECKING:\n+        metadata: Any\n+    else:\n+        # we do this to avoid a version dependent mypy error\n+        # because importlib_metadata is not installed in python3.10+\n+        import importlib_metadata as metadata\n \n \n class NoAppException(click.UsageError):\n'",4.114285714285714,4.114285714285714
CONTRIBUTING.rst,CONTRIBUTING.rst,9158d3b0b8c282e6d8580b76fb5098002d4ec0d4,a0aa8de6bc0d6da74707cb4d0c89bfc99e20c98f,'remove tab directive',"'@@ -98,21 +98,20 @@ First time setup\n \n -   Create a virtualenv.\n \n-    .. tabs::\n \n-       .. group-tab:: Linux/macOS\n+    - Linux/macOS\n \n-          .. code-block:: text\n+      .. code-block:: text\n \n-             $ python3 -m venv env\n-             $ . env/bin/activate\n+         $ python3 -m venv env\n+         $ . env/bin/activate\n \n-       .. group-tab:: Windows\n+    - Windows\n \n-          .. code-block:: text\n+      .. code-block:: text\n \n-             > py -3 -m venv env\n-             > env\\Scripts\\activate\n+         > py -3 -m venv env\n+         > env\\Scripts\\activate\n \n -   Upgrade pip and setuptools.\n \n'",0,0
CHANGES.rst,CHANGES.rst,1e5dd430223369d13ea94ffffe22bca53a98e730,f976d5bb88216e921a96998f767df31d7039e4ef,'refactor error checks in register_error_handler\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -5,6 +5,9 @@ Version 2.2.0\n \n Unreleased\n \n+-   Refactor ``register_error_handler`` to consolidate error checking.\n+    Rewrite some error messages to be more consistent. :issue:`4559`\n+\n \n Version 2.1.2\n -------------\n'",0,0
src/flask/scaffold.py,src/flask/scaffold.py,1e5dd430223369d13ea94ffffe22bca53a98e730,f976d5bb88216e921a96998f767df31d7039e4ef,'refactor error checks in register_error_handler\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -697,22 +697,7 @@ class Scaffold:\n \n         .. versionadded:: 0.7\n         """"""\n-        if isinstance(code_or_exception, HTTPException):  # old broken behavior\n-            raise ValueError(\n-                ""Tried to register a handler for an exception instance""\n-                f"" {code_or_exception!r}. Handlers can only be""\n-                "" registered for exception classes or HTTP error codes.""\n-            )\n-\n-        try:\n-            exc_class, code = self._get_exc_class_and_code(code_or_exception)\n-        except KeyError:\n-            raise KeyError(\n-                f""\'{code_or_exception}\' is not a recognized HTTP error""\n-                "" code. Use a subclass of HTTPException with that code""\n-                "" instead.""\n-            ) from None\n-\n+        exc_class, code = self._get_exc_class_and_code(code_or_exception)\n         self.error_handler_spec[None][code][exc_class] = f\n \n     @staticmethod\n@@ -727,14 +712,32 @@ class Scaffold:\n             code as an integer.\n         """"""\n         exc_class: t.Type[Exception]\n+\n         if isinstance(exc_class_or_code, int):\n-            exc_class = default_exceptions[exc_class_or_code]\n+            try:\n+                exc_class = default_exceptions[exc_class_or_code]\n+            except KeyError:\n+                raise ValueError(\n+                    f""\'{exc_class_or_code}\' is not a recognized HTTP""\n+                    "" error code. Use a subclass of HTTPException with""\n+                    "" that code instead.""\n+                ) from None\n         else:\n             exc_class = exc_class_or_code\n \n-        assert issubclass(\n-            exc_class, Exception\n-        ), ""Custom exceptions must be subclasses of Exception.""\n+        if isinstance(exc_class, Exception):\n+            raise TypeError(\n+                f""{exc_class!r} is an instance, not a class. Handlers""\n+                "" can only be registered for Exception classes or HTTP""\n+                "" error codes.""\n+            )\n+\n+        if not issubclass(exc_class, Exception):\n+            raise ValueError(\n+                f""\'{exc_class.__name__}\' is not a subclass of Exception.""\n+                "" Handlers can only be registered for Exception classes""\n+                "" or HTTP error codes.""\n+            )\n \n         if issubclass(exc_class, HTTPException):\n             return exc_class, exc_class.code\n'",1.8205128205128205,1.8461538461538463
tests/test_basic.py,tests/test_basic.py,1e5dd430223369d13ea94ffffe22bca53a98e730,f976d5bb88216e921a96998f767df31d7039e4ef,'refactor error checks in register_error_handler\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -899,13 +899,6 @@ def test_error_handling(app, client):\n     assert b""forbidden"" == rv.data\n \n \n-def test_error_handler_unknown_code(app):\n-    with pytest.raises(KeyError) as exc_info:\n-        app.register_error_handler(999, lambda e: (""999"", 999))\n-\n-    assert ""Use a subclass"" in exc_info.value.args[0]\n-\n-\n def test_error_handling_processing(app, client):\n     app.testing = False\n \n'",1.0684410646387832,1.0687022900763359
tests/test_user_error_handler.py,tests/test_user_error_handler.py,1e5dd430223369d13ea94ffffe22bca53a98e730,f976d5bb88216e921a96998f767df31d7039e4ef,'refactor error checks in register_error_handler\n\nCo-authored-by: David Lord <davidism@gmail.com>',"'@@ -11,29 +11,35 @@ def test_error_handler_no_match(app, client):\n     class CustomException(Exception):\n         pass\n \n-    class UnacceptableCustomException(BaseException):\n-        pass\n-\n     @app.errorhandler(CustomException)\n     def custom_exception_handler(e):\n         assert isinstance(e, CustomException)\n         return ""custom""\n \n-    with pytest.raises(\n-        AssertionError, match=""Custom exceptions must be subclasses of Exception.""\n-    ):\n-        app.register_error_handler(UnacceptableCustomException, None)\n+    with pytest.raises(TypeError) as exc_info:\n+        app.register_error_handler(CustomException(), None)\n+\n+    assert ""CustomException() is an instance, not a class."" in str(exc_info.value)\n+\n+    with pytest.raises(ValueError) as exc_info:\n+        app.register_error_handler(list, None)\n+\n+    assert ""\'list\' is not a subclass of Exception."" in str(exc_info.value)\n \n     @app.errorhandler(500)\n     def handle_500(e):\n         assert isinstance(e, InternalServerError)\n-        original = getattr(e, ""original_exception"", None)\n \n-        if original is not None:\n-            return f""wrapped {type(original).__name__}""\n+        if e.original_exception is not None:\n+            return f""wrapped {type(e.original_exception).__name__}""\n \n         return ""direct""\n \n+    with pytest.raises(ValueError) as exc_info:\n+        app.register_error_handler(999, None)\n+\n+    assert ""Use a subclass of HTTPException"" in str(exc_info.value)\n+\n     @app.route(""/custom"")\n     def custom_test():\n         raise CustomException()\n'",1.0454545454545454,1.0454545454545454
src/flask/app.py,src/flask/app.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -67,7 +67,7 @@ from .typing import TemplateTestCallable\n from .wrappers import Request\n from .wrappers import Response\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     import typing_extensions as te\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n'",3.0588235294117645,3.0588235294117645
src/flask/blueprints.py,src/flask/blueprints.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -17,7 +17,7 @@ from .typing import TemplateTestCallable\n from .typing import URLDefaultCallable\n from .typing import URLValuePreprocessorCallable\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n     from .typing import ErrorHandlerCallable\n \n'",2.3636363636363638,2.3636363636363638
src/flask/ctx.py,src/flask/ctx.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -11,7 +11,7 @@ from .signals import appcontext_popped\n from .signals import appcontext_pushed\n from .typing import AfterRequestCallable\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n     from .sessions import SessionMixin\n     from .wrappers import Request\n'",1.9333333333333333,1.9333333333333333
src/flask/globals.py,src/flask/globals.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -4,7 +4,7 @@ from functools import partial\n from werkzeug.local import LocalProxy\n from werkzeug.local import LocalStack\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n     from .ctx import _AppCtxGlobals\n     from .sessions import SessionMixin\n'",2.0,2.0
src/flask/helpers.py,src/flask/helpers.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -20,7 +20,7 @@ from .globals import request\n from .globals import session\n from .signals import message_flashed\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .wrappers import Response\n \n \n'",2.9523809523809526,2.9523809523809526
src/flask/json/__init__.py,src/flask/json/__init__.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -11,7 +11,7 @@ from werkzeug.http import http_date\n from ..globals import current_app\n from ..globals import request\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from ..app import Flask\n     from ..wrappers import Response\n \n'",3.3,3.3
src/flask/logging.py,src/flask/logging.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -6,7 +6,7 @@ from werkzeug.local import LocalProxy\n \n from .globals import request\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n \n \n'",3.6666666666666665,3.6666666666666665
src/flask/scaffold.py,src/flask/scaffold.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -26,7 +26,7 @@ from .typing import TemplateContextProcessorCallable\n from .typing import URLDefaultCallable\n from .typing import URLValuePreprocessorCallable\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .wrappers import Response\n     from .typing import ErrorHandlerCallable\n \n'",1.8461538461538463,1.8461538461538463
src/flask/sessions.py,src/flask/sessions.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -11,7 +11,7 @@ from werkzeug.datastructures import CallbackDict\n from .helpers import is_ip\n from .json.tag import TaggedJSONSerializer\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     import typing_extensions as te\n     from .app import Flask\n     from .wrappers import Request, Response\n'",1.826086956521739,1.826086956521739
src/flask/templating.py,src/flask/templating.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -10,7 +10,7 @@ from .globals import _request_ctx_stack\n from .signals import before_render_template\n from .signals import template_rendered\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n     from .scaffold import Scaffold\n \n'",2.5454545454545454,2.5454545454545454
src/flask/testing.py,src/flask/testing.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -14,7 +14,7 @@ from .globals import _request_ctx_stack\n from .json import dumps as json_dumps\n from .sessions import SessionMixin\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.test import TestResponse\n \n     from .app import Flask\n'",3.3636363636363638,3.3636363636363638
src/flask/typing.py,src/flask/typing.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -1,7 +1,7 @@\n import typing as t\n \n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n     from werkzeug.wrappers.response import Response  # noqa: F401\n'",0,0
src/flask/wrappers.py,src/flask/wrappers.py,a74e266474f0981e9fc0d54d5dc430386823e4d7,127df57a06ec7b1a8b698206b1bdefc93248de5a,'skip coverage for TYPE_CHECKING',"'@@ -8,7 +8,7 @@ from . import json\n from .globals import current_app\n from .helpers import _split_blueprint_path\n \n-if t.TYPE_CHECKING:\n+if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.routing import Rule\n \n \n'",2.857142857142857,2.857142857142857
docs/cli.rst,docs/cli.rst,11195f10838d84df0c5ab7158a99bbb94e34fc5a,2482cd4f53985436936b13533c1bcd0b09930768,'remove outdated dotenv docs\n\nThe CLI does not change the working directory when loading a dotenv file.',"'@@ -299,9 +299,7 @@ used for public variables, such as ``FLASK_APP``, while :file:`.env` should not\n be committed to your repository so that it can set private variables.\n \n Directories are scanned upwards from the directory you call ``flask``\n-from to locate the files. The current working directory will be set to the\n-location of the file, with the assumption that that is the top level project\n-directory.\n+from to locate the files.\n \n The files are only loaded by the ``flask`` command or calling\n :meth:`~Flask.run`. If you would like to load these files when running in\n'",1.0,1.0
.gitignore,.gitignore,2381044d04cdb058a526c0e27163b4d891d851ed,b5c1a4f1f0507d41eff84e1083e61ed85a037e47,'remove references to mailing list',"'@@ -11,7 +11,6 @@ dist/\n build/\n *.egg\n *.egg-info/\n-_mailinglist\n .tox/\n .cache/\n .pytest_cache/\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,2381044d04cdb058a526c0e27163b4d891d851ed,b5c1a4f1f0507d41eff84e1083e61ed85a037e47,'remove references to mailing list',"'@@ -14,11 +14,10 @@ own code:\n \n -   The ``#questions`` channel on our Discord chat:\n     https://discord.gg/pallets\n--   The mailing list flask@python.org for long term discussion or larger\n-    issues.\n -   Ask on `Stack Overflow`_. Search with Google first using:\n     ``site:stackoverflow.com flask {search term, exception message, etc.}``\n--   Ask on our `GitHub Discussions`_.\n+-   Ask on our `GitHub Discussions`_ for long term discussion or larger\n+    questions.\n \n .. _Stack Overflow: https://stackoverflow.com/questions/tagged/flask?tab=Frequent\n .. _GitHub Discussions: https://github.com/pallets/flask/discussions\n'",0,0
docs/extensiondev.rst,docs/extensiondev.rst,2381044d04cdb058a526c0e27163b4d891d851ed,b5c1a4f1f0507d41eff84e1083e61ed85a037e47,'remove references to mailing list',"""@@ -271,16 +271,16 @@ Learn from Others\n \n This documentation only touches the bare minimum for extension development.\n If you want to learn more, it's a very good idea to check out existing extensions\n-on the `PyPI`_.  If you feel lost there is still the `mailinglist`_ and the\n-`Discord server`_ to get some ideas for nice looking APIs.  Especially if you do\n+on `PyPI`_.  If you feel lost there is `Discord Chat`_ or\n+`GitHub Discussions`_ to get some ideas for nice looking APIs.  Especially if you do\n something nobody before you did, it might be a very good idea to get some more\n input.  This not only generates useful feedback on what people might want from\n an extension, but also avoids having multiple developers working in isolation\n on pretty much the same problem.\n \n-Remember: good API design is hard, so introduce your project on the\n-mailing list, and let other developers give you a helping hand with\n-designing the API.\n+Remember: good API design is hard, so introduce your project on\n+`Discord Chat`_ or `GitHub Discussions`_, and let other developers give\n+you a helping hand with designing the API.\n \n The best Flask extensions are extensions that share common idioms for the\n API.  And this can only work if collaboration happens early.\n@@ -327,6 +327,6 @@ ecosystem remain consistent and compatible.\n     indicate supported versions.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n-.. _mailinglist: https://mail.python.org/mailman/listinfo/flask\n-.. _Discord server: https://discord.gg/pallets\n+.. _Discord Chat: https://discord.gg/pallets\n+.. _GitHub Discussions: https://github.com/pallets/flask/discussions\n .. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n""",1.6666666666666667,1.6666666666666667
CHANGES.rst,CHANGES.rst,fdab801fbbd9de5adbdb3320ca4a1cb116c892f5,bd56d19b167822a9a23e2e9e2a07ccccc36baa8d,'add redirect method to app',"'@@ -5,6 +5,9 @@ Version 2.2.0\n \n Unreleased\n \n+-   Add an ``app.redirect`` method, which ``flask.redirect`` will call.\n+    This makes it possible for an app to override how redirects work.\n+    :issue:`4569`\n -   Refactor ``register_error_handler`` to consolidate error checking.\n     Rewrite some error messages to be more consistent. :issue:`4559`\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,fdab801fbbd9de5adbdb3320ca4a1cb116c892f5,bd56d19b167822a9a23e2e9e2a07ccccc36baa8d,'add redirect method to app',"'@@ -1,7 +1,6 @@\n from markupsafe import escape\n from markupsafe import Markup\n from werkzeug.exceptions import abort as abort\n-from werkzeug.utils import redirect as redirect\n \n from . import json as json\n from .app import Flask as Flask\n@@ -23,6 +22,7 @@ from .helpers import flash as flash\n from .helpers import get_flashed_messages as get_flashed_messages\n from .helpers import get_template_attribute as get_template_attribute\n from .helpers import make_response as make_response\n+from .helpers import redirect as redirect\n from .helpers import send_file as send_file\n from .helpers import send_from_directory as send_from_directory\n from .helpers import stream_with_context as stream_with_context\n'",0,0
src/flask/app.py,src/flask/app.py,fdab801fbbd9de5adbdb3320ca4a1cb116c892f5,bd56d19b167822a9a23e2e9e2a07ccccc36baa8d,'add redirect method to app',"'@@ -22,6 +22,7 @@ from werkzeug.routing import MapAdapter\n from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n+from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n \n from . import cli\n@@ -1630,6 +1631,16 @@ class Flask(Scaffold):\n \n         return asgiref_async_to_sync(func)\n \n+    def redirect(self, location: str, code: int = 302) -> BaseResponse:\n+        """"""Create a redirect response object.\n+\n+        :param location: the url of the redirect\n+        :param code: http return code\n+\n+        .. versionadded:: 2.2\n+        """"""\n+        return _wz_redirect(location, code=code, Response=self.response_class)\n+\n     def make_response(self, rv: ResponseReturnValue) -> Response:\n         """"""Convert the return value from a view function to an instance of\n         :attr:`response_class`.\n'",3.0588235294117645,3.028985507246377
src/flask/helpers.py,src/flask/helpers.py,fdab801fbbd9de5adbdb3320ca4a1cb116c892f5,bd56d19b167822a9a23e2e9e2a07ccccc36baa8d,'add redirect method to app',"'@@ -12,6 +12,7 @@ from threading import RLock\n import werkzeug.utils\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n+from werkzeug.utils import redirect as _wz_redirect\n \n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n@@ -21,6 +22,7 @@ from .globals import session\n from .signals import message_flashed\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    from werkzeug.wrappers import Response as BaseResponse\n     from .wrappers import Response\n \n \n@@ -340,6 +342,28 @@ def url_for(endpoint: str, **values: t.Any) -> str:\n     return rv\n \n \n+def redirect(\n+    location: str, code: int = 302, Response: t.Optional[t.Type[""BaseResponse""]] = None\n+) -> ""BaseResponse"":\n+    """"""Create a redirect response object.\n+\n+    If :data:`~flask.current_app` is available, it will use\n+    :meth:`~flask.app.Flask.redirect`, otherwise it will use\n+    :func:`werkzeug.utils.redirect`.\n+\n+    :param location: The URL to redirect to.\n+    :param code: The status code for the redirect.\n+    :param Response: The response class to use. Not used when\n+        ``current_app`` is active, which uses ``app.response_class``.\n+\n+    .. versionadded:: 2.2\n+    """"""\n+    if current_app:\n+        return current_app.redirect(location, code=code)\n+\n+    return _wz_redirect(location, code=code, Response=Response)\n+\n+\n def get_template_attribute(template_name: str, attribute: str) -> t.Any:\n     """"""Loads a macro (or variable) a template exports.  This can be used to\n     invoke a macro from within Python code.  If you for example have a\n'",2.9523809523809526,2.909090909090909
tests/test_helpers.py,tests/test_helpers.py,fdab801fbbd9de5adbdb3320ca4a1cb116c892f5,bd56d19b167822a9a23e2e9e2a07ccccc36baa8d,'add redirect method to app',"'@@ -158,6 +158,22 @@ class TestUrlFor:\n         assert flask.url_for(""myview"", _method=""POST"") == ""/myview/create""\n \n \n+def test_redirect_no_app():\n+    response = flask.redirect(""https://localhost"", 307)\n+    assert response.location == ""https://localhost""\n+    assert response.status_code == 307\n+\n+\n+def test_redirect_with_app(app):\n+    def redirect(location, code=302):\n+        raise ValueError\n+\n+    app.redirect = redirect\n+\n+    with app.app_context(), pytest.raises(ValueError):\n+        flask.redirect(""other"")\n+\n+\n class TestNoImports:\n     """"""Test Flasks are created without import.\n \n'",1.0731707317073171,1.0681818181818181
CHANGES.rst,CHANGES.rst,eb5dd9f5ef255c578cbbe13c1cb4dd11389d5519,a25d234cdddf584528dd6af21db736b6faad27af,'add aborter object to app',"'@@ -5,6 +5,10 @@ Version 2.2.0\n \n Unreleased\n \n+-   Add ``aborter_class`` and ``aborter`` attributes to the Flask app\n+    object. ``flask.abort`` will call ``app.aborter``. This makes it\n+    possible for an app to override how aborts work, including custom\n+    status codes. :issue:`4567`\n -   Add an ``app.redirect`` method, which ``flask.redirect`` will call.\n     This makes it possible for an app to override how redirects work.\n     :issue:`4569`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,eb5dd9f5ef255c578cbbe13c1cb4dd11389d5519,a25d234cdddf584528dd6af21db736b6faad27af,'add aborter object to app',"'@@ -1,6 +1,5 @@\n from markupsafe import escape\n from markupsafe import Markup\n-from werkzeug.exceptions import abort as abort\n \n from . import json as json\n from .app import Flask as Flask\n@@ -18,6 +17,7 @@ from .globals import current_app as current_app\n from .globals import g as g\n from .globals import request as request\n from .globals import session as session\n+from .helpers import abort as abort\n from .helpers import flash as flash\n from .helpers import get_flashed_messages as get_flashed_messages\n from .helpers import get_template_attribute as get_template_attribute\n'",0,0
src/flask/app.py,src/flask/app.py,eb5dd9f5ef255c578cbbe13c1cb4dd11389d5519,a25d234cdddf584528dd6af21db736b6faad27af,'add aborter object to app',"'@@ -12,6 +12,7 @@ from types import TracebackType\n \n from werkzeug.datastructures import Headers\n from werkzeug.datastructures import ImmutableDict\n+from werkzeug.exceptions import Aborter\n from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import BadRequestKeyError\n from werkzeug.exceptions import HTTPException\n@@ -201,6 +202,16 @@ class Flask(Scaffold):\n     #: :class:`~flask.Response` for more information.\n     response_class = Response\n \n+    #: The class of the object assigned to :attr:`aborter`, created by\n+    #: :meth:`create_aborter`. That object is called by\n+    #: :func:`flask.abort` to raise HTTP errors, and can be\n+    #: called directly as well.\n+    #:\n+    #: Defaults to :class:`werkzeug.exceptions.Aborter`.\n+    #:\n+    #: .. versionadded:: 2.2\n+    aborter_class = Aborter\n+\n     #: The class that is used for the Jinja environment.\n     #:\n     #: .. versionadded:: 0.11\n@@ -421,6 +432,13 @@ class Flask(Scaffold):\n         #: to load a config from files.\n         self.config = self.make_config(instance_relative_config)\n \n+        #: An instance of :attr:`aborter_class` created by\n+        #: :meth:`make_aborter`. This is called by :func:`flask.abort`\n+        #: to raise HTTP errors, and can be called directly as well.\n+        #:\n+        #: .. versionadded:: 2.2\n+        self.aborter = self.make_aborter()\n+\n         #: A list of functions that are called when :meth:`url_for` raises a\n         #: :exc:`~werkzeug.routing.BuildError`.  Each function registered here\n         #: is called with `error`, `endpoint` and `values`.  If a function\n@@ -628,6 +646,18 @@ class Flask(Scaffold):\n         defaults[""DEBUG""] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n \n+    def make_aborter(self) -> Aborter:\n+        """"""Create the object to assign to :attr:`aborter`. That object\n+        is called by :func:`flask.abort` to raise HTTP errors, and can\n+        be called directly as well.\n+\n+        By default, this creates an instance of :attr:`aborter_class`,\n+        which defaults to :class:`werkzeug.exceptions.Aborter`.\n+\n+        .. versionadded:: 2.2\n+        """"""\n+        return self.aborter_class()\n+\n     def auto_find_instance_path(self) -> str:\n         """"""Tries to locate the instance path if it was not provided to the\n         constructor of the application class.  It will basically calculate\n'",3.028985507246377,3.0
src/flask/helpers.py,src/flask/helpers.py,eb5dd9f5ef255c578cbbe13c1cb4dd11389d5519,a25d234cdddf584528dd6af21db736b6faad27af,'add aborter object to app',"'@@ -10,6 +10,7 @@ from functools import update_wrapper\n from threading import RLock\n \n import werkzeug.utils\n+from werkzeug.exceptions import abort as _wz_abort\n from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n from werkzeug.utils import redirect as _wz_redirect\n@@ -24,6 +25,7 @@ from .signals import message_flashed\n if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.wrappers import Response as BaseResponse\n     from .wrappers import Response\n+    import typing_extensions as te\n \n \n def get_env() -> str:\n@@ -364,6 +366,31 @@ def redirect(\n     return _wz_redirect(location, code=code, Response=Response)\n \n \n+def abort(  # type: ignore[misc]\n+    code: t.Union[int, ""BaseResponse""], *args: t.Any, **kwargs: t.Any\n+) -> ""te.NoReturn"":\n+    """"""Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given\n+    status code.\n+\n+    If :data:`~flask.current_app` is available, it will call its\n+    :attr:`~flask.Flask.aborter` object, otherwise it will use\n+    :func:`werkzeug.exceptions.abort`.\n+\n+    :param code: The status code for the exception, which must be\n+        registered in ``app.aborter``.\n+    :param args: Passed to the exception.\n+    :param kwargs: Passed to the exception.\n+\n+    .. versionadded:: 2.2\n+        Calls ``current_app.aborter`` if available instead of always\n+        using Werkzeug\'s default ``abort``.\n+    """"""\n+    if current_app:\n+        current_app.aborter(code, *args, **kwargs)\n+\n+    _wz_abort(code, *args, **kwargs)\n+\n+\n def get_template_attribute(template_name: str, attribute: str) -> t.Any:\n     """"""Loads a macro (or variable) a template exports.  This can be used to\n     invoke a macro from within Python code.  If you for example have a\n'",2.909090909090909,2.869565217391304
tests/test_helpers.py,tests/test_helpers.py,eb5dd9f5ef255c578cbbe13c1cb4dd11389d5519,a25d234cdddf584528dd6af21db736b6faad27af,'add aborter object to app',"'@@ -2,6 +2,7 @@ import io\n import os\n \n import pytest\n+import werkzeug.exceptions\n \n import flask\n from flask.helpers import get_debug_flag\n@@ -174,6 +175,35 @@ def test_redirect_with_app(app):\n         flask.redirect(""other"")\n \n \n+def test_abort_no_app():\n+    with pytest.raises(werkzeug.exceptions.Unauthorized):\n+        flask.abort(401)\n+\n+    with pytest.raises(LookupError):\n+        flask.abort(900)\n+\n+\n+def test_app_aborter_class():\n+    class MyAborter(werkzeug.exceptions.Aborter):\n+        pass\n+\n+    class MyFlask(flask.Flask):\n+        aborter_class = MyAborter\n+\n+    app = MyFlask(__name__)\n+    assert isinstance(app.aborter, MyAborter)\n+\n+\n+def test_abort_with_app(app):\n+    class My900Error(werkzeug.exceptions.HTTPException):\n+        code = 900\n+\n+    app.aborter.mapping[900] = My900Error\n+\n+    with app.app_context(), pytest.raises(My900Error):\n+        flask.abort(900)\n+\n+\n class TestNoImports:\n     """"""Test Flasks are created without import.\n \n'",1.0681818181818181,1.0638297872340425
CHANGES.rst,CHANGES.rst,fac630379d31baaa1667894c2b5613304285a4bb,5512a6688193758a24ef0b6825217030da9fed21,'update app.redirect docs',"'@@ -5,13 +5,14 @@ Version 2.2.0\n \n Unreleased\n \n--   Add ``aborter_class`` and ``aborter`` attributes to the Flask app\n-    object. ``flask.abort`` will call ``app.aborter``. This makes it\n-    possible for an app to override how aborts work, including custom\n-    status codes. :issue:`4567`\n--   Add an ``app.redirect`` method, which ``flask.redirect`` will call.\n-    This makes it possible for an app to override how redirects work.\n-    :issue:`4569`\n+-   Add new customization points to the ``Flask`` app object for many\n+    previously global behaviors.\n+\n+    -   ``flask.abort`` will call ``app.aborter``.\n+        ``Flask.aborter_class`` and ``Flask.make_aborter`` can be used\n+        to customize this aborter. :issue:`4567`\n+    -   ``flask.redirect`` will call ``app.redirect``. :issue:`4569`\n+\n -   Refactor ``register_error_handler`` to consolidate error checking.\n     Rewrite some error messages to be more consistent. :issue:`4559`\n \n'",0,0
src/flask/app.py,src/flask/app.py,fac630379d31baaa1667894c2b5613304285a4bb,5512a6688193758a24ef0b6825217030da9fed21,'update app.redirect docs',"'@@ -1664,8 +1664,11 @@ class Flask(Scaffold):\n     def redirect(self, location: str, code: int = 302) -> BaseResponse:\n         """"""Create a redirect response object.\n \n-        :param location: the url of the redirect\n-        :param code: http return code\n+        This is called by :func:`flask.redirect`, and can be called\n+        directly as well.\n+\n+        :param location: The URL to redirect to.\n+        :param code: The status code for the redirect.\n \n         .. versionadded:: 2.2\n         """"""\n'",3.0,3.0
src/flask/helpers.py,src/flask/helpers.py,fac630379d31baaa1667894c2b5613304285a4bb,5512a6688193758a24ef0b6825217030da9fed21,'update app.redirect docs',"'@@ -349,8 +349,8 @@ def redirect(\n ) -> ""BaseResponse"":\n     """"""Create a redirect response object.\n \n-    If :data:`~flask.current_app` is available, it will use\n-    :meth:`~flask.app.Flask.redirect`, otherwise it will use\n+    If :data:`~flask.current_app` is available, it will use its\n+    :meth:`~flask.Flask.redirect` method, otherwise it will use\n     :func:`werkzeug.utils.redirect`.\n \n     :param location: The URL to redirect to.\n@@ -359,6 +359,8 @@ def redirect(\n         ``current_app`` is active, which uses ``app.response_class``.\n \n     .. versionadded:: 2.2\n+        Calls ``current_app.redirect`` if available instead of always\n+        using Werkzeug\'s default ``redirect``.\n     """"""\n     if current_app:\n         return current_app.redirect(location, code=code)\n'",2.869565217391304,2.869565217391304
src/flask/app.py,src/flask/app.py,92acd05d9bd33419ab885e4472b28a1d5cc15d2e,fac630379d31baaa1667894c2b5613304285a4bb,'add url_for method to app',"'@@ -23,6 +23,7 @@ from werkzeug.routing import MapAdapter\n from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n+from werkzeug.urls import url_quote\n from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n \n@@ -1661,6 +1662,50 @@ class Flask(Scaffold):\n \n         return asgiref_async_to_sync(func)\n \n+    def url_for(\n+        self,\n+        endpoint: str,\n+        external: bool,\n+        url_adapter,\n+        **values: t.Any,\n+    ) -> str:\n+\n+        anchor = values.pop(""_anchor"", None)\n+        method = values.pop(""_method"", None)\n+        scheme = values.pop(""_scheme"", None)\n+        self.inject_url_defaults(endpoint, values)\n+\n+        # This is not the best way to deal with this but currently the\n+        # underlying Werkzeug router does not support overriding the scheme on\n+        # a per build call basis.\n+        old_scheme = None\n+        if scheme is not None:\n+            if not external:\n+                raise ValueError(""When specifying _scheme, _external must be True"")\n+            old_scheme = url_adapter.url_scheme\n+            url_adapter.url_scheme = scheme\n+\n+        try:\n+            try:\n+                rv = url_adapter.build(\n+                    endpoint, values, method=method, force_external=external\n+                )\n+            finally:\n+                if old_scheme is not None:\n+                    url_adapter.url_scheme = old_scheme\n+        except BuildError as error:\n+            # We need to inject the values again so that the app callback can\n+            # deal with that sort of stuff.\n+            values[""_external""] = external\n+            values[""_anchor""] = anchor\n+            values[""_method""] = method\n+            values[""_scheme""] = scheme\n+            return self.handle_url_build_error(error, endpoint, values)\n+\n+        if anchor is not None:\n+            rv += f""#{url_quote(anchor)}""\n+        return rv\n+\n     def redirect(self, location: str, code: int = 302) -> BaseResponse:\n         """"""Create a redirect response object.\n \n'",3.0,3.056338028169014
src/flask/helpers.py,src/flask/helpers.py,92acd05d9bd33419ab885e4472b28a1d5cc15d2e,fac630379d31baaa1667894c2b5613304285a4bb,'add url_for method to app',"'@@ -11,8 +11,6 @@ from threading import RLock\n \n import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n-from werkzeug.routing import BuildError\n-from werkzeug.urls import url_quote\n from werkzeug.utils import redirect as _wz_redirect\n \n from .globals import _app_ctx_stack\n@@ -307,41 +305,7 @@ def url_for(endpoint: str, **values: t.Any) -> str:\n \n         external = values.pop(""_external"", True)\n \n-    anchor = values.pop(""_anchor"", None)\n-    method = values.pop(""_method"", None)\n-    scheme = values.pop(""_scheme"", None)\n-    appctx.app.inject_url_defaults(endpoint, values)\n-\n-    # This is not the best way to deal with this but currently the\n-    # underlying Werkzeug router does not support overriding the scheme on\n-    # a per build call basis.\n-    old_scheme = None\n-    if scheme is not None:\n-        if not external:\n-            raise ValueError(""When specifying _scheme, _external must be True"")\n-        old_scheme = url_adapter.url_scheme\n-        url_adapter.url_scheme = scheme\n-\n-    try:\n-        try:\n-            rv = url_adapter.build(\n-                endpoint, values, method=method, force_external=external\n-            )\n-        finally:\n-            if old_scheme is not None:\n-                url_adapter.url_scheme = old_scheme\n-    except BuildError as error:\n-        # We need to inject the values again so that the app callback can\n-        # deal with that sort of stuff.\n-        values[""_external""] = external\n-        values[""_anchor""] = anchor\n-        values[""_method""] = method\n-        values[""_scheme""] = scheme\n-        return appctx.app.handle_url_build_error(error, endpoint, values)\n-\n-    if anchor is not None:\n-        rv += f""#{url_quote(anchor)}""\n-    return rv\n+    return current_app.url_for(endpoint, external, url_adapter, **values)\n \n \n def redirect(\n'",2.869565217391304,2.608695652173913
src/flask/app.py,src/flask/app.py,39f93632964ecabfcb9c1980e2add922098aad80,92acd05d9bd33419ab885e4472b28a1d5cc15d2e,'finish moving url_for to app\n\nmove entire implementation to app\nmake special build args actual keyword-only args\nhandle no app context in method\nmention other config in server_name error\nimplicit external with scheme\nuse adapter.build url_scheme argument\nrewrite documentation',"'@@ -34,6 +34,7 @@ from .config import ConfigAttribute\n from .ctx import _AppCtxGlobals\n from .ctx import AppContext\n from .ctx import RequestContext\n+from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .globals import g\n from .globals import request\n@@ -440,15 +441,16 @@ class Flask(Scaffold):\n         #: .. versionadded:: 2.2\n         self.aborter = self.make_aborter()\n \n-        #: A list of functions that are called when :meth:`url_for` raises a\n-        #: :exc:`~werkzeug.routing.BuildError`.  Each function registered here\n-        #: is called with `error`, `endpoint` and `values`.  If a function\n-        #: returns ``None`` or raises a :exc:`BuildError` the next function is\n-        #: tried.\n+        #: A list of functions that are called by\n+        #: :meth:`handle_url_build_error` when :meth:`.url_for` raises a\n+        #: :exc:`~werkzeug.routing.BuildError`. Each function is called\n+        #: with ``error``, ``endpoint`` and ``values``. If a function\n+        #: returns ``None`` or raises a ``BuildError``, it is skipped.\n+        #: Otherwise, its return value is returned by ``url_for``.\n         #:\n         #: .. versionadded:: 0.9\n         self.url_build_error_handlers: t.List[\n-            t.Callable[[Exception, str, dict], str]\n+            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n         ] = []\n \n         #: A list of functions that will be called at the beginning of the\n@@ -1665,45 +1667,125 @@ class Flask(Scaffold):\n     def url_for(\n         self,\n         endpoint: str,\n-        external: bool,\n-        url_adapter,\n+        *,\n+        _anchor: t.Optional[str] = None,\n+        _method: t.Optional[str] = None,\n+        _scheme: t.Optional[str] = None,\n+        _external: t.Optional[bool] = None,\n         **values: t.Any,\n     ) -> str:\n+        """"""Generate a URL to the given endpoint with the given values.\n \n-        anchor = values.pop(""_anchor"", None)\n-        method = values.pop(""_method"", None)\n-        scheme = values.pop(""_scheme"", None)\n-        self.inject_url_defaults(endpoint, values)\n+        This is called by :func:`flask.url_for`, and can be called\n+        directly as well.\n \n-        # This is not the best way to deal with this but currently the\n-        # underlying Werkzeug router does not support overriding the scheme on\n-        # a per build call basis.\n-        old_scheme = None\n-        if scheme is not None:\n-            if not external:\n-                raise ValueError(""When specifying _scheme, _external must be True"")\n-            old_scheme = url_adapter.url_scheme\n-            url_adapter.url_scheme = scheme\n+        An *endpoint* is the name of a URL rule, usually added with\n+        :meth:`@app.route() <route>`, and usually the same name as the\n+        view function. A route defined in a :class:`~flask.Blueprint`\n+        will prepend the blueprint\'s name separated by a ``.`` to the\n+        endpoint.\n+\n+        In some cases, such as email messages, you want URLs to include\n+        the scheme and domain, like ``https://example.com/hello``. When\n+        not in an active request, URLs will be external by default, but\n+        this requires setting :data:`SERVER_NAME` so Flask knows what\n+        domain to use. :data:`APPLICATION_ROOT` and\n+        :data:`PREFERRED_URL_SCHEME` should also be configured as\n+        needed. This config is only used when not in an active request.\n+\n+        Functions can be decorated with :meth:`url_defaults` to modify\n+        keyword arguments before the URL is built.\n+\n+        If building fails for some reason, such as an unknown endpoint\n+        or incorrect values, the app\'s :meth:`handle_url_build_error`\n+        method is called. If that returns a string, that is returned,\n+        otherwise a :exc:`~werkzeug.routing.BuildError` is raised.\n+\n+        :param endpoint: The endpoint name associated with the URL to\n+            generate. If this starts with a ``.``, the current blueprint\n+            name (if any) will be used.\n+        :param _anchor: If given, append this as ``#anchor`` to the URL.\n+        :param _method: If given, generate the URL associated with this\n+            method for the endpoint.\n+        :param _scheme: If given, the URL will have this scheme if it\n+            is external.\n+        :param _external: If given, prefer the URL to be internal\n+            (False) or require it to be external (True). External URLs\n+            include the scheme and domain. When not in an active\n+            request, URLs are external by default.\n+        :param values: Values to use for the variable parts of the URL\n+            rule. Unknown keys are appended as query string arguments,\n+            like ``?a=b&c=d``.\n \n-        try:\n-            try:\n-                rv = url_adapter.build(\n-                    endpoint, values, method=method, force_external=external\n+        .. versionadded:: 2.2\n+            Moved from ``flask.url_for``, which calls this method.\n+        """"""\n+        req_ctx = _request_ctx_stack.top\n+\n+        if req_ctx is not None:\n+            url_adapter = req_ctx.url_adapter\n+            blueprint_name = req_ctx.request.blueprint\n+\n+            # If the endpoint starts with ""."" and the request matches a\n+            # blueprint, the endpoint is relative to the blueprint.\n+            if endpoint[:1] == ""."":\n+                if blueprint_name is not None:\n+                    endpoint = f""{blueprint_name}{endpoint}""\n+                else:\n+                    endpoint = endpoint[1:]\n+\n+            # When in a request, generate a URL without scheme and\n+            # domain by default, unless a scheme is given.\n+            if _external is None:\n+                _external = _scheme is not None\n+        else:\n+            app_ctx = _app_ctx_stack.top\n+\n+            # If called by helpers.url_for, an app context is active,\n+            # use its url_adapter. Otherwise, app.url_for was called\n+            # directly, build an adapter.\n+            if app_ctx is not None:\n+                url_adapter = app_ctx.url_adapter\n+            else:\n+                url_adapter = self.create_url_adapter(None)\n+\n+            if url_adapter is None:\n+                raise RuntimeError(\n+                    ""Unable to build URLs outside an active request""\n+                    "" without \'SERVER_NAME\' configured. Also configure""\n+                    "" \'APPLICATION_ROOT\' and \'PREFERRED_URL_SCHEME\' as""\n+                    "" needed.""\n                 )\n-            finally:\n-                if old_scheme is not None:\n-                    url_adapter.url_scheme = old_scheme\n+\n+            # When outside a request, generate a URL with scheme and\n+            # domain by default.\n+            if _external is None:\n+                _external = True\n+\n+        # It is an error to set _scheme when _external=False, in order\n+        # to avoid accidental insecure URLs.\n+        if _scheme is not None and not _external:\n+            raise ValueError(""When specifying \'_scheme\', \'_external\' must be True."")\n+\n+        self.inject_url_defaults(endpoint, values)\n+\n+        try:\n+            rv = url_adapter.build(\n+                endpoint,\n+                values,\n+                method=_method,\n+                url_scheme=_scheme,\n+                force_external=_external,\n+            )\n         except BuildError as error:\n-            # We need to inject the values again so that the app callback can\n-            # deal with that sort of stuff.\n-            values[""_external""] = external\n-            values[""_anchor""] = anchor\n-            values[""_method""] = method\n-            values[""_scheme""] = scheme\n+            values.update(\n+                _anchor=_anchor, _method=_method, _scheme=_scheme, _external=_external\n+            )\n             return self.handle_url_build_error(error, endpoint, values)\n \n-        if anchor is not None:\n-            rv += f""#{url_quote(anchor)}""\n+        if _anchor is not None:\n+            rv = f""{rv}#{url_quote(_anchor)}""\n+\n         return rv\n \n     def redirect(self, location: str, code: int = 302) -> BaseResponse:\n@@ -1905,10 +1987,21 @@ class Flask(Scaffold):\n                     func(endpoint, values)\n \n     def handle_url_build_error(\n-        self, error: Exception, endpoint: str, values: dict\n+        self, error: BuildError, endpoint: str, values: t.Dict[str, t.Any]\n     ) -> str:\n-        """"""Handle :class:`~werkzeug.routing.BuildError` on\n-        :meth:`url_for`.\n+        """"""Called by :meth:`.url_for` if a\n+        :exc:`~werkzeug.routing.BuildError` was raised. If this returns\n+        a value, it will be returned by ``url_for``, otherwise the error\n+        will be re-raised.\n+\n+        Each function in :attr:`url_build_error_handlers` is called with\n+        ``error``, ``endpoint`` and ``values``. If a function returns\n+        ``None`` or raises a ``BuildError``, it is skipped. Otherwise,\n+        its return value is returned by ``url_for``.\n+\n+        :param error: The active ``BuildError`` being handled.\n+        :param endpoint: The endpoint being built.\n+        :param values: The keyword arguments passed to ``url_for``.\n         """"""\n         for handler in self.url_build_error_handlers:\n             try:\n'",3.056338028169014,3.1267605633802815
src/flask/helpers.py,src/flask/helpers.py,39f93632964ecabfcb9c1980e2add922098aad80,92acd05d9bd33419ab885e4472b28a1d5cc15d2e,'finish moving url_for to app\n\nmove entire implementation to app\nmake special build args actual keyword-only args\nhandle no app context in method\nmention other config in server_name error\nimplicit external with scheme\nuse adapter.build url_scheme argument\nrewrite documentation',"'@@ -13,7 +13,6 @@ import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n from werkzeug.utils import redirect as _wz_redirect\n \n-from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .globals import current_app\n from .globals import request\n@@ -191,121 +190,58 @@ def make_response(*args: t.Any) -> ""Response"":\n     return current_app.make_response(args)  # type: ignore\n \n \n-def url_for(endpoint: str, **values: t.Any) -> str:\n-    """"""Generates a URL to the given endpoint with the method provided.\n-\n-    Variable arguments that are unknown to the target endpoint are appended\n-    to the generated URL as query arguments.  If the value of a query argument\n-    is ``None``, the whole pair is skipped.  In case blueprints are active\n-    you can shortcut references to the same blueprint by prefixing the\n-    local endpoint with a dot (``.``).\n-\n-    This will reference the index function local to the current blueprint::\n-\n-        url_for(\'.index\')\n-\n-    See :ref:`url-building`.\n-\n-    Configuration values ``APPLICATION_ROOT`` and ``SERVER_NAME`` are only used when\n-    generating URLs outside of a request context.\n-\n-    To integrate applications, :class:`Flask` has a hook to intercept URL build\n-    errors through :attr:`Flask.url_build_error_handlers`.  The `url_for`\n-    function results in a :exc:`~werkzeug.routing.BuildError` when the current\n-    app does not have a URL for the given endpoint and values.  When it does, the\n-    :data:`~flask.current_app` calls its :attr:`~Flask.url_build_error_handlers` if\n-    it is not ``None``, which can return a string to use as the result of\n-    `url_for` (instead of `url_for`\'s default to raise the\n-    :exc:`~werkzeug.routing.BuildError` exception) or re-raise the exception.\n-    An example::\n-\n-        def external_url_handler(error, endpoint, values):\n-            ""Looks up an external URL when `url_for` cannot build a URL.""\n-            # This is an example of hooking the build_error_handler.\n-            # Here, lookup_url is some utility function you\'ve built\n-            # which looks up the endpoint in some external URL registry.\n-            url = lookup_url(endpoint, **values)\n-            if url is None:\n-                # External lookup did not have a URL.\n-                # Re-raise the BuildError, in context of original traceback.\n-                exc_type, exc_value, tb = sys.exc_info()\n-                if exc_value is error:\n-                    raise exc_type(exc_value).with_traceback(tb)\n-                else:\n-                    raise error\n-            # url_for will use this result, instead of raising BuildError.\n-            return url\n-\n-        app.url_build_error_handlers.append(external_url_handler)\n-\n-    Here, `error` is the instance of :exc:`~werkzeug.routing.BuildError`, and\n-    `endpoint` and `values` are the arguments passed into `url_for`.  Note\n-    that this is for building URLs outside the current application, and not for\n-    handling 404 NotFound errors.\n-\n-    .. versionadded:: 0.10\n-       The `_scheme` parameter was added.\n+def url_for(\n+    endpoint: str,\n+    *,\n+    _anchor: t.Optional[str] = None,\n+    _method: t.Optional[str] = None,\n+    _scheme: t.Optional[str] = None,\n+    _external: t.Optional[bool] = None,\n+    **values: t.Any,\n+) -> str:\n+    """"""Generate a URL to the given endpoint with the given values.\n+\n+    This requires an active request or application context, and calls\n+    :meth:`current_app.url_for() <flask.Flask.url_for>`. See that method\n+    for full documentation.\n+\n+    :param endpoint: The endpoint name associated with the URL to\n+        generate. If this starts with a ``.``, the current blueprint\n+        name (if any) will be used.\n+    :param _anchor: If given, append this as ``#anchor`` to the URL.\n+    :param _method: If given, generate the URL associated with this\n+        method for the endpoint.\n+    :param _scheme: If given, the URL will have this scheme if it is\n+        external.\n+    :param _external: If given, prefer the URL to be internal (False) or\n+        require it to be external (True). External URLs include the\n+        scheme and domain. When not in an active request, URLs are\n+        external by default.\n+    :param values: Values to use for the variable parts of the URL rule.\n+        Unknown keys are appended as query string arguments, like\n+        ``?a=b&c=d``.\n+\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.url_for``, allowing an app to override the\n+        behavior.\n+\n+    .. versionchanged:: 0.10\n+       The ``_scheme`` parameter was added.\n \n-    .. versionadded:: 0.9\n-       The `_anchor` and `_method` parameters were added.\n+    .. versionchanged:: 0.9\n+       The ``_anchor`` and ``_method`` parameters were added.\n \n-    .. versionadded:: 0.9\n-       Calls :meth:`Flask.handle_build_error` on\n-       :exc:`~werkzeug.routing.BuildError`.\n-\n-    :param endpoint: the endpoint of the URL (name of the function)\n-    :param values: the variable arguments of the URL rule\n-    :param _external: if set to ``True``, an absolute URL is generated. Server\n-      address can be changed via ``SERVER_NAME`` configuration variable which\n-      falls back to the `Host` header, then to the IP and port of the request.\n-    :param _scheme: a string specifying the desired URL scheme. The `_external`\n-      parameter must be set to ``True`` or a :exc:`ValueError` is raised. The default\n-      behavior uses the same scheme as the current request, or\n-      :data:`PREFERRED_URL_SCHEME` if no request context is available.\n-      This also can be set to an empty string to build protocol-relative\n-      URLs.\n-    :param _anchor: if provided this is added as anchor to the URL.\n-    :param _method: if provided this explicitly specifies an HTTP method.\n+    .. versionchanged:: 0.9\n+       Calls ``app.handle_url_build_error`` on build errors.\n     """"""\n-    appctx = _app_ctx_stack.top\n-    reqctx = _request_ctx_stack.top\n-\n-    if appctx is None:\n-        raise RuntimeError(\n-            ""Attempted to generate a URL without the application context being""\n-            "" pushed. This has to be executed when application context is""\n-            "" available.""\n-        )\n-\n-    # If request specific information is available we have some extra\n-    # features that support ""relative"" URLs.\n-    if reqctx is not None:\n-        url_adapter = reqctx.url_adapter\n-        blueprint_name = request.blueprint\n-\n-        if endpoint[:1] == ""."":\n-            if blueprint_name is not None:\n-                endpoint = f""{blueprint_name}{endpoint}""\n-            else:\n-                endpoint = endpoint[1:]\n-\n-        external = values.pop(""_external"", False)\n-\n-    # Otherwise go with the url adapter from the appctx and make\n-    # the URLs external by default.\n-    else:\n-        url_adapter = appctx.url_adapter\n-\n-        if url_adapter is None:\n-            raise RuntimeError(\n-                ""Application was not able to create a URL adapter for request""\n-                "" independent URL generation. You might be able to fix this by""\n-                "" setting the SERVER_NAME config variable.""\n-            )\n-\n-        external = values.pop(""_external"", True)\n-\n-    return current_app.url_for(endpoint, external, url_adapter, **values)\n+    return current_app.url_for(\n+        endpoint,\n+        _anchor=_anchor,\n+        _method=_method,\n+        _scheme=_scheme,\n+        _external=_external,\n+        **values,\n+    )\n \n \n def redirect(\n'",2.608695652173913,2.391304347826087
tests/test_helpers.py,tests/test_helpers.py,39f93632964ecabfcb9c1980e2add922098aad80,92acd05d9bd33419ab885e4472b28a1d5cc15d2e,'finish moving url_for to app\n\nmove entire implementation to app\nmake special build args actual keyword-only args\nhandle no app context in method\nmention other config in server_name error\nimplicit external with scheme\nuse adapter.build url_scheme argument\nrewrite documentation',"'@@ -119,11 +119,15 @@ class TestUrlFor:\n         )\n \n     def test_url_for_with_scheme_not_external(self, app, req_ctx):\n-        @app.route(""/"")\n-        def index():\n-            return ""42""\n+        app.add_url_rule(""/"", endpoint=""index"")\n \n-        pytest.raises(ValueError, flask.url_for, ""index"", _scheme=""https"")\n+        # Implicit external with scheme.\n+        url = flask.url_for(""index"", _scheme=""https"")\n+        assert url == ""https://localhost/""\n+\n+        # Error when external=False with scheme\n+        with pytest.raises(ValueError):\n+            flask.url_for(""index"", _scheme=""https"", _external=False)\n \n     def test_url_for_with_alternating_schemes(self, app, req_ctx):\n         @app.route(""/"")\n'",1.0638297872340425,1.065217391304348
CHANGES.rst,CHANGES.rst,69e2300608497bba103fd05735c878c0d642dd68,00e2aac9371d94011279a6340ec3e7ecc86f097e,'use app.url_for as template global\n\navoid extra call from helpers.url_for\nupdate changelog for method moves',"'@@ -8,6 +8,7 @@ Unreleased\n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n \n+    -   ``flask.url_for`` will call ``app.url_for``. :issue:`4568`\n     -   ``flask.abort`` will call ``app.aborter``.\n         ``Flask.aborter_class`` and ``Flask.make_aborter`` can be used\n         to customize this aborter. :issue:`4567`\n'",0,0
src/flask/app.py,src/flask/app.py,69e2300608497bba103fd05735c878c0d642dd68,00e2aac9371d94011279a6340ec3e7ecc86f097e,'use app.url_for as template global\n\navoid extra call from helpers.url_for\nupdate changelog for method moves',"'@@ -45,7 +45,6 @@ from .helpers import get_env\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n from .helpers import locked_cached_property\n-from .helpers import url_for\n from .json import jsonify\n from .logging import create_logger\n from .scaffold import _endpoint_from_view_func\n@@ -439,6 +438,7 @@ class Flask(Scaffold):\n         #: to raise HTTP errors, and can be called directly as well.\n         #:\n         #: .. versionadded:: 2.2\n+        #:     Moved from ``flask.abort``, which calls this object.\n         self.aborter = self.make_aborter()\n \n         #: A list of functions that are called by\n@@ -727,7 +727,7 @@ class Flask(Scaffold):\n \n         rv = self.jinja_environment(self, **options)\n         rv.globals.update(\n-            url_for=url_for,\n+            url_for=self.url_for,\n             get_flashed_messages=get_flashed_messages,\n             config=self.config,\n             # request, session and g are normally added with the\n@@ -1798,6 +1798,7 @@ class Flask(Scaffold):\n         :param code: The status code for the redirect.\n \n         .. versionadded:: 2.2\n+            Moved from ``flask.redirect``, which calls this method.\n         """"""\n         return _wz_redirect(location, code=code, Response=self.response_class)\n \n'",3.1267605633802815,3.1267605633802815
CHANGES.rst,CHANGES.rst,eb36135cfe6a17350617e47b70b9ad383206eded,ca8e6217fe450435e024bcff3082d2a37445f7e1,'always warn on blueprint setupmethod after registration',"'@@ -16,6 +16,10 @@ Unreleased\n \n -   Refactor ``register_error_handler`` to consolidate error checking.\n     Rewrite some error messages to be more consistent. :issue:`4559`\n+-   Use Blueprint decorators and functions intended for setup after\n+    registering the blueprint will show a warning. In the next version,\n+    this will become an error just like the application setup methods.\n+    :issue:`4571`\n \n \n Version 2.1.2\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,eb36135cfe6a17350617e47b70b9ad383206eded,ca8e6217fe450435e024bcff3082d2a37445f7e1,'always warn on blueprint setupmethod after registration',"'@@ -162,7 +162,6 @@ class Blueprint(Scaffold):\n     .. versionadded:: 0.7\n     """"""\n \n-    warn_on_modifications = False\n     _got_registered_once = False\n \n     #: Blueprint local JSON encoder class to use. Set to ``None`` to use\n@@ -209,7 +208,7 @@ class Blueprint(Scaffold):\n         self._blueprints: t.List[t.Tuple[""Blueprint"", dict]] = []\n \n     def _is_setup_finished(self) -> bool:\n-        return self.warn_on_modifications and self._got_registered_once\n+        return self._got_registered_once\n \n     def record(self, func: t.Callable) -> None:\n         """"""Registers a function that is called when the blueprint is\n@@ -217,14 +216,15 @@ class Blueprint(Scaffold):\n         state as argument as returned by the :meth:`make_setup_state`\n         method.\n         """"""\n-        if self._got_registered_once and self.warn_on_modifications:\n+        if self._got_registered_once:\n+            # TODO: Upgrade this to an error and unify it setupmethod in 2.3\n             from warnings import warn\n \n             warn(\n                 Warning(\n                     ""The blueprint was already registered once but is""\n                     "" getting modified now. These changes will not show""\n-                    "" up.""\n+                    "" up.\\n This warning will be become an exception in 2.3.""\n                 )\n             )\n         self.deferred_functions.append(func)\n'",2.3636363636363638,2.303030303030303
src/flask/scaffold.py,src/flask/scaffold.py,eb36135cfe6a17350617e47b70b9ad383206eded,ca8e6217fe450435e024bcff3082d2a37445f7e1,'always warn on blueprint setupmethod after registration',"'@@ -27,8 +27,8 @@ from .typing import URLDefaultCallable\n from .typing import URLValuePreprocessorCallable\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    from .wrappers import Response\n     from .typing import ErrorHandlerCallable\n+    from .wrappers import Response\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n@@ -411,6 +411,7 @@ class Scaffold:\n         """"""\n         return self._method_route(""PATCH"", rule, options)\n \n+    @setupmethod\n     def route(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Decorate a view function to register it with the given URL\n         rule and options. Calls :meth:`add_url_rule`, which has more\n@@ -510,6 +511,7 @@ class Scaffold:\n         """"""\n         raise NotImplementedError\n \n+    @setupmethod\n     def endpoint(self, endpoint: str) -> t.Callable:\n         """"""Decorate a view function to register it for the given\n         endpoint. Used if a rule is added without a ``view_func`` with\n'",1.8461538461538463,1.8461538461538463
src/flask/app.py,src/flask/app.py,a406c297aafa28074d11ec6fd27c246c70418cb4,eb36135cfe6a17350617e47b70b9ad383206eded,'apply setupmethod consistently',"'@@ -541,8 +541,17 @@ class Flask(Scaffold):\n         # the app\'s commands to another CLI tool.\n         self.cli.name = self.name\n \n-    def _is_setup_finished(self) -> bool:\n-        return self.debug and self._got_first_request\n+    def _check_setup_finished(self, f_name: str) -> None:\n+        if self._got_first_request:\n+            raise AssertionError(\n+                f""The setup method \'{f_name}\' can no longer be called""\n+                "" on the application. It has already handled its first""\n+                "" request, any changes will not be applied""\n+                "" consistently.\\n""\n+                ""Make sure all imports, decorators, functions, etc.""\n+                "" needed to set up the application are done before""\n+                "" running it.""\n+            )\n \n     @locked_cached_property\n     def name(self) -> str:  # type: ignore\n'",3.1267605633802815,3.1267605633802815
src/flask/blueprints.py,src/flask/blueprints.py,a406c297aafa28074d11ec6fd27c246c70418cb4,eb36135cfe6a17350617e47b70b9ad383206eded,'apply setupmethod consistently',"'@@ -6,6 +6,7 @@ from functools import update_wrapper\n from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n from .scaffold import Scaffold\n+from .scaffold import setupmethod\n from .typing import AfterRequestCallable\n from .typing import BeforeFirstRequestCallable\n from .typing import BeforeRequestCallable\n@@ -207,28 +208,33 @@ class Blueprint(Scaffold):\n         self.cli_group = cli_group\n         self._blueprints: t.List[t.Tuple[""Blueprint"", dict]] = []\n \n-    def _is_setup_finished(self) -> bool:\n-        return self._got_registered_once\n+    def _check_setup_finished(self, f_name: str) -> None:\n+        if self._got_registered_once:\n+            import warnings\n+\n+            warnings.warn(\n+                f""The setup method \'{f_name}\' can no longer be called on""\n+                f"" the blueprint \'{self.name}\'. It has already been""\n+                "" registered at least once, any changes will not be""\n+                "" applied consistently.\\n""\n+                ""Make sure all imports, decorators, functions, etc.""\n+                "" needed to set up the blueprint are done before""\n+                "" registering it.\\n""\n+                ""This warning will become an exception in Flask 2.3."",\n+                UserWarning,\n+                stacklevel=3,\n+            )\n \n+    @setupmethod\n     def record(self, func: t.Callable) -> None:\n         """"""Registers a function that is called when the blueprint is\n         registered on the application.  This function is called with the\n         state as argument as returned by the :meth:`make_setup_state`\n         method.\n         """"""\n-        if self._got_registered_once:\n-            # TODO: Upgrade this to an error and unify it setupmethod in 2.3\n-            from warnings import warn\n-\n-            warn(\n-                Warning(\n-                    ""The blueprint was already registered once but is""\n-                    "" getting modified now. These changes will not show""\n-                    "" up.\\n This warning will be become an exception in 2.3.""\n-                )\n-            )\n         self.deferred_functions.append(func)\n \n+    @setupmethod\n     def record_once(self, func: t.Callable) -> None:\n         """"""Works like :meth:`record` but wraps the function in another\n         function that will ensure the function is only called once.  If the\n@@ -251,6 +257,7 @@ class Blueprint(Scaffold):\n         """"""\n         return BlueprintSetupState(self, app, options, first_registration)\n \n+    @setupmethod\n     def register_blueprint(self, blueprint: ""Blueprint"", **options: t.Any) -> None:\n         """"""Register a :class:`~flask.Blueprint` on this blueprint. Keyword\n         arguments passed to this method will override the defaults set\n@@ -390,6 +397,7 @@ class Blueprint(Scaffold):\n             bp_options[""name_prefix""] = name\n             blueprint.register(app, bp_options)\n \n+    @setupmethod\n     def add_url_rule(\n         self,\n         rule: str,\n@@ -417,6 +425,7 @@ class Blueprint(Scaffold):\n             )\n         )\n \n+    @setupmethod\n     def app_template_filter(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n@@ -433,6 +442,7 @@ class Blueprint(Scaffold):\n \n         return decorator\n \n+    @setupmethod\n     def add_app_template_filter(\n         self, f: TemplateFilterCallable, name: t.Optional[str] = None\n     ) -> None:\n@@ -449,6 +459,7 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n+    @setupmethod\n     def app_template_test(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n@@ -467,6 +478,7 @@ class Blueprint(Scaffold):\n \n         return decorator\n \n+    @setupmethod\n     def add_app_template_test(\n         self, f: TemplateTestCallable, name: t.Optional[str] = None\n     ) -> None:\n@@ -485,6 +497,7 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n+    @setupmethod\n     def app_template_global(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n@@ -503,6 +516,7 @@ class Blueprint(Scaffold):\n \n         return decorator\n \n+    @setupmethod\n     def add_app_template_global(\n         self, f: TemplateGlobalCallable, name: t.Optional[str] = None\n     ) -> None:\n@@ -521,6 +535,7 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n+    @setupmethod\n     def before_app_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n         """"""Like :meth:`Flask.before_request`.  Such a function is executed\n         before each request, even if outside of a blueprint.\n@@ -530,6 +545,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n+    @setupmethod\n     def before_app_first_request(\n         self, f: BeforeFirstRequestCallable\n     ) -> BeforeFirstRequestCallable:\n@@ -548,6 +564,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n+    @setupmethod\n     def teardown_app_request(self, f: TeardownCallable) -> TeardownCallable:\n         """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n         function is executed when tearing down each request, even if outside of\n@@ -558,6 +575,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n+    @setupmethod\n     def app_context_processor(\n         self, f: TemplateContextProcessorCallable\n     ) -> TemplateContextProcessorCallable:\n@@ -569,6 +587,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n+    @setupmethod\n     def app_errorhandler(self, code: t.Union[t.Type[Exception], int]) -> t.Callable:\n         """"""Like :meth:`Flask.errorhandler` but for a blueprint.  This\n         handler is used for all requests, even if outside of the blueprint.\n@@ -580,6 +599,7 @@ class Blueprint(Scaffold):\n \n         return decorator\n \n+    @setupmethod\n     def app_url_value_preprocessor(\n         self, f: URLValuePreprocessorCallable\n     ) -> URLValuePreprocessorCallable:\n@@ -589,6 +609,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n+    @setupmethod\n     def app_url_defaults(self, f: URLDefaultCallable) -> URLDefaultCallable:\n         """"""Same as :meth:`url_defaults` but application wide.""""""\n         self.record_once(\n'",2.303030303030303,2.303030303030303
src/flask/scaffold.py,src/flask/scaffold.py,a406c297aafa28074d11ec6fd27c246c70418cb4,eb36135cfe6a17350617e47b70b9ad383206eded,'apply setupmethod consistently',"'@@ -37,22 +37,10 @@ F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n \n \n def setupmethod(f: F) -> F:\n-    """"""Wraps a method so that it performs a check in debug mode if the\n-    first request was already handled.\n-    """"""\n+    f_name = f.__name__\n \n     def wrapper_func(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n-        if self._is_setup_finished():\n-            raise AssertionError(\n-                ""A setup function was called after the first request ""\n-                ""was handled. This usually indicates a bug in the""\n-                "" application where a module was not imported and""\n-                "" decorators or other functionality was called too""\n-                "" late.\\nTo fix this make sure to import all your view""\n-                "" modules, database models, and everything related at a""\n-                "" central place before the application starts serving""\n-                "" requests.""\n-            )\n+        self._check_setup_finished(f_name)\n         return f(self, *args, **kwargs)\n \n     return t.cast(F, update_wrapper(wrapper_func, f))\n@@ -239,7 +227,7 @@ class Scaffold:\n     def __repr__(self) -> str:\n         return f""<{type(self).__name__} {self.name!r}>""\n \n-    def _is_setup_finished(self) -> bool:\n+    def _check_setup_finished(self, f_name: str) -> None:\n         raise NotImplementedError\n \n     @property\n@@ -376,6 +364,7 @@ class Scaffold:\n \n         return self.route(rule, methods=[method], **options)\n \n+    @setupmethod\n     def get(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n \n@@ -383,6 +372,7 @@ class Scaffold:\n         """"""\n         return self._method_route(""GET"", rule, options)\n \n+    @setupmethod\n     def post(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n \n@@ -390,6 +380,7 @@ class Scaffold:\n         """"""\n         return self._method_route(""POST"", rule, options)\n \n+    @setupmethod\n     def put(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n \n@@ -397,6 +388,7 @@ class Scaffold:\n         """"""\n         return self._method_route(""PUT"", rule, options)\n \n+    @setupmethod\n     def delete(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n \n@@ -404,6 +396,7 @@ class Scaffold:\n         """"""\n         return self._method_route(""DELETE"", rule, options)\n \n+    @setupmethod\n     def patch(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n \n'",1.8461538461538463,1.8205128205128205
tests/test_basic.py,tests/test_basic.py,e044b00047da9bf94e7eb88049a17fe1dcf78f4e,a406c297aafa28074d11ec6fd27c246c70418cb4,'avoid triggering setupmethod late in tests',"'@@ -329,6 +329,11 @@ def test_session_using_session_settings(app, client):\n         flask.session[""testing""] = 42\n         return ""Hello World""\n \n+    @app.route(""/clear"")\n+    def clear():\n+        flask.session.pop(""testing"", None)\n+        return ""Goodbye World""\n+\n     rv = client.get(""/"", ""http://www.example.com:8080/test/"")\n     cookie = rv.headers[""set-cookie""].lower()\n     assert ""domain=.example.com"" in cookie\n@@ -337,11 +342,6 @@ def test_session_using_session_settings(app, client):\n     assert ""httponly"" not in cookie\n     assert ""samesite"" in cookie\n \n-    @app.route(""/clear"")\n-    def clear():\n-        flask.session.pop(""testing"", None)\n-        return ""Goodbye World""\n-\n     rv = client.get(""/clear"", ""http://www.example.com:8080/test/"")\n     cookie = rv.headers[""set-cookie""].lower()\n     assert ""session=;"" in cookie\n@@ -1031,7 +1031,14 @@ def test_errorhandler_precedence(app, client):\n     assert rv.data == b""E2""\n \n \n-def test_trapping_of_bad_request_key_errors(app, client):\n+@pytest.mark.parametrize(\n+    (""debug"", ""trap"", ""expect_key"", ""expect_abort""),\n+    [(False, None, True, True), (True, None, False, True), (False, True, False, False)],\n+)\n+def test_trap_bad_request_key_error(app, client, debug, trap, expect_key, expect_abort):\n+    app.config[""DEBUG""] = debug\n+    app.config[""TRAP_BAD_REQUEST_ERRORS""] = trap\n+\n     @app.route(""/key"")\n     def fail():\n         flask.request.form[""missing_key""]\n@@ -1040,26 +1047,23 @@ def test_trapping_of_bad_request_key_errors(app, client):\n     def allow_abort():\n         flask.abort(400)\n \n-    rv = client.get(""/key"")\n-    assert rv.status_code == 400\n-    assert b""missing_key"" not in rv.data\n-    rv = client.get(""/abort"")\n-    assert rv.status_code == 400\n+    if expect_key:\n+        rv = client.get(""/key"")\n+        assert rv.status_code == 400\n+        assert b""missing_key"" not in rv.data\n+    else:\n+        with pytest.raises(KeyError) as exc_info:\n+            client.get(""/key"")\n \n-    app.debug = True\n-    with pytest.raises(KeyError) as e:\n-        client.get(""/key"")\n-    assert e.errisinstance(BadRequest)\n-    assert ""missing_key"" in e.value.get_description()\n-    rv = client.get(""/abort"")\n-    assert rv.status_code == 400\n+        assert exc_info.errisinstance(BadRequest)\n+        assert ""missing_key"" in exc_info.value.get_description()\n \n-    app.debug = False\n-    app.config[""TRAP_BAD_REQUEST_ERRORS""] = True\n-    with pytest.raises(KeyError):\n-        client.get(""/key"")\n-    with pytest.raises(BadRequest):\n-        client.get(""/abort"")\n+    if expect_abort:\n+        rv = client.get(""/abort"")\n+        assert rv.status_code == 400\n+    else:\n+        with pytest.raises(BadRequest):\n+            client.get(""/abort"")\n \n \n def test_trapping_of_all_http_exceptions(app, client):\n@@ -1661,7 +1665,7 @@ def test_nonascii_pathinfo(app, client):\n     assert rv.data == b""Hello World!""\n \n \n-def test_debug_mode_complains_after_first_request(app, client):\n+def test_no_setup_after_first_request(app, client):\n     app.debug = True\n \n     @app.route(""/"")\n@@ -1671,19 +1675,10 @@ def test_debug_mode_complains_after_first_request(app, client):\n     assert not app.got_first_request\n     assert client.get(""/"").data == b""Awesome""\n \n-    with pytest.raises(AssertionError) as e:\n+    with pytest.raises(AssertionError) as exc_info:\n         app.add_url_rule(""/foo"", endpoint=""late"")\n \n-    assert ""A setup function was called"" in str(e.value)\n-\n-    app.debug = False\n-\n-    @app.route(""/foo"")\n-    def working():\n-        return ""Meh""\n-\n-    assert client.get(""/foo"").data == b""Meh""\n-    assert app.got_first_request\n+    assert ""setup method \'add_url_rule\'"" in str(exc_info.value)\n \n \n def test_before_first_request_functions(app, client):\n@@ -1720,28 +1715,23 @@ def test_before_first_request_functions_concurrent(app, client):\n \n \n def test_routing_redirect_debugging(monkeypatch, app, client):\n-    @app.route(""/foo/"", methods=[""GET"", ""POST""])\n-    def foo():\n-        return ""success""\n+    app.config[""DEBUG""] = True\n \n-    app.debug = False\n-    rv = client.post(""/foo"", data={}, follow_redirects=True)\n-    assert rv.data == b""success""\n+    @app.route(""/user/"", methods=[""GET"", ""POST""])\n+    def user():\n+        return flask.request.form[""status""]\n \n-    app.debug = True\n-\n-    with client:\n-        rv = client.post(""/foo"", data={}, follow_redirects=True)\n-        assert rv.data == b""success""\n-        rv = client.get(""/foo"", data={}, follow_redirects=True)\n-        assert rv.data == b""success""\n+    # default redirect code preserves form data\n+    rv = client.post(""/user"", data={""status"": ""success""}, follow_redirects=True)\n+    assert rv.data == b""success""\n \n+    # 301 and 302 raise error\n     monkeypatch.setattr(RequestRedirect, ""code"", 301)\n \n-    with client, pytest.raises(AssertionError) as e:\n-        client.post(""/foo"", data={})\n+    with client, pytest.raises(AssertionError) as exc_info:\n+        client.post(""/user"", data={""status"": ""error""}, follow_redirects=True)\n \n-    assert ""canonical URL \'http://localhost/foo/\'"" in str(e.value)\n+    assert ""canonical URL \'http://localhost/user/\'"" in str(exc_info.value)\n \n \n def test_route_decorator_custom_endpoint(app, client):\n'",1.0687022900763359,1.0766283524904214
setup.cfg,setup.cfg,1232d698600e11dcb83bb5dc349ca785eae02d2f,e322f32e94ac97981cfc441cb1ae187580b41d37,'inline conditional imports for cli behaviors',"'@@ -116,3 +116,6 @@ ignore_missing_imports = True\n \n [mypy-cryptography.*]\n ignore_missing_imports = True\n+\n+[mypy-importlib_metadata]\n+ignore_missing_imports = True\n'",0,0
src/flask/cli.py,src/flask/cli.py,1232d698600e11dcb83bb5dc349ca785eae02d2f,e322f32e94ac97981cfc441cb1ae187580b41d37,'inline conditional imports for cli behaviors',"'@@ -9,8 +9,6 @@ from functools import update_wrapper\n from operator import attrgetter\n from threading import Lock\n from threading import Thread\n-from typing import Any\n-from typing import TYPE_CHECKING\n \n import click\n from werkzeug.utils import import_string\n@@ -20,31 +18,6 @@ from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_load_dotenv\n \n-try:\n-    import dotenv\n-except ImportError:\n-    dotenv = None\n-\n-try:\n-    import ssl\n-except ImportError:\n-    ssl = None  # type: ignore\n-\n-if sys.version_info >= (3, 10):\n-    from importlib import metadata\n-else:\n-    # Use a backport on Python < 3.10.\n-    #\n-    # We technically have importlib.metadata on 3.8+,\n-    # but the API changed in 3.10, so use the backport\n-    # for consistency.\n-    if TYPE_CHECKING:\n-        metadata: Any\n-    else:\n-        # we do this to avoid a version dependent mypy error\n-        # because importlib_metadata is not installed in python3.10+\n-        import importlib_metadata as metadata\n-\n \n class NoAppException(click.UsageError):\n     """"""Raised if an application cannot be found or loaded.""""""\n@@ -520,6 +493,14 @@ class FlaskGroup(AppGroup):\n         if self._loaded_plugin_commands:\n             return\n \n+        if sys.version_info >= (3, 10):\n+            from importlib import metadata\n+        else:\n+            # Use a backport on Python < 3.10. We technically have\n+            # importlib.metadata on 3.8+, but the API changed in 3.10,\n+            # so use the backport for consistency.\n+            import importlib_metadata as metadata\n+\n         for ep in metadata.entry_points(group=""flask.commands""):\n             self.add_command(ep.load(), ep.name)\n \n@@ -615,7 +596,9 @@ def load_dotenv(path=None):\n \n     .. versionadded:: 1.0\n     """"""\n-    if dotenv is None:\n+    try:\n+        import dotenv\n+    except ImportError:\n         if path or os.path.isfile("".env"") or os.path.isfile("".flaskenv""):\n             click.secho(\n                 "" * Tip: There are .env or .flaskenv files present.""\n@@ -691,12 +674,14 @@ class CertParamType(click.ParamType):\n         self.path_type = click.Path(exists=True, dir_okay=False, resolve_path=True)\n \n     def convert(self, value, param, ctx):\n-        if ssl is None:\n+        try:\n+            import ssl\n+        except ImportError:\n             raise click.BadParameter(\n                 \'Using ""--cert"" requires Python to be compiled with SSL support.\',\n                 ctx,\n                 param,\n-            )\n+            ) from None\n \n         try:\n             return self.path_type(value, param, ctx)\n@@ -729,7 +714,13 @@ def _validate_key(ctx, param, value):\n     """"""\n     cert = ctx.params.get(""cert"")\n     is_adhoc = cert == ""adhoc""\n-    is_context = ssl and isinstance(cert, ssl.SSLContext)\n+\n+    try:\n+        import ssl\n+    except ImportError:\n+        is_context = False\n+    else:\n+        is_context = isinstance(cert, ssl.SSLContext)\n \n     if value is not None:\n         if is_adhoc:\n'",4.114285714285714,4.142857142857143
tests/test_cli.py,tests/test_cli.py,1232d698600e11dcb83bb5dc349ca785eae02d2f,e322f32e94ac97981cfc441cb1ae187580b41d37,'inline conditional imports for cli behaviors',"'@@ -18,7 +18,6 @@ from flask import current_app\n from flask import Flask\n from flask.cli import AppGroup\n from flask.cli import DispatchingApp\n-from flask.cli import dotenv\n from flask.cli import find_best_app\n from flask.cli import FlaskGroup\n from flask.cli import get_version\n@@ -492,7 +491,18 @@ class TestRoutes:\n         assert ""No routes were registered."" in result.output\n \n \n-need_dotenv = pytest.mark.skipif(dotenv is None, reason=""dotenv is not installed"")\n+def dotenv_not_available():\n+    try:\n+        import dotenv  # noqa: F401\n+    except ImportError:\n+        return True\n+\n+    return False\n+\n+\n+need_dotenv = pytest.mark.skipif(\n+    dotenv_not_available(), reason=""dotenv is not installed""\n+)\n \n \n @need_dotenv\n@@ -530,7 +540,7 @@ def test_dotenv_path(monkeypatch):\n \n \n def test_dotenv_optional(monkeypatch):\n-    monkeypatch.setattr(""flask.cli.dotenv"", None)\n+    monkeypatch.setitem(sys.modules, ""dotenv"", None)\n     monkeypatch.chdir(test_path)\n     load_dotenv()\n     assert ""FOO"" not in os.environ\n@@ -602,7 +612,8 @@ def test_run_cert_import(monkeypatch):\n \n \n def test_run_cert_no_ssl(monkeypatch):\n-    monkeypatch.setattr(""flask.cli.ssl"", None)\n+    monkeypatch.setitem(sys.modules, ""ssl"", None)\n+\n     with pytest.raises(click.BadParameter):\n         run_command.make_context(""run"", [""--cert"", ""not_here""])\n \n'",1.0461538461538462,1.0606060606060606
.pre-commit-config.yaml,.pre-commit-config.yaml,d506af1b1f27877f2101a20c6826e99f30427348,31aad113ff59337436e0308d467da31872f58f0a,'update requirements',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.32.0\n+    rev: v2.32.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n'",0,0
requirements/dev.txt,requirements/dev.txt,d506af1b1f27877f2101a20c6826e99f30427348,31aad113ff59337436e0308d467da31872f58f0a,'update requirements',"'@@ -10,19 +10,19 @@\n -r typing.txt\n cfgv==3.3.1\n     # via pre-commit\n-click==8.1.2\n+click==8.1.3\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n distlib==0.3.4\n     # via virtualenv\n-filelock==3.6.0\n+filelock==3.7.0\n     # via\n     #   tox\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.5.0\n+identify==2.5.1\n     # via pre-commit\n nodeenv==1.6.0\n     # via pre-commit\n@@ -30,11 +30,11 @@ pep517==0.12.0\n     # via pip-tools\n pip-compile-multi==2.4.5\n     # via -r requirements/dev.in\n-pip-tools==6.6.0\n+pip-tools==6.6.1\n     # via pip-compile-multi\n platformdirs==2.5.2\n     # via virtualenv\n-pre-commit==2.18.1\n+pre-commit==2.19.0\n     # via -r requirements/dev.in\n pyyaml==6.0\n     # via pre-commit\n'",0,0
requirements/docs.txt,requirements/docs.txt,d506af1b1f27877f2101a20c6826e99f30427348,31aad113ff59337436e0308d467da31872f58f0a,'update requirements',"'@@ -9,7 +9,7 @@ alabaster==0.7.12\n     # via sphinx\n babel==2.10.1\n     # via sphinx\n-certifi==2021.10.8\n+certifi==2022.5.18.1\n     # via requests\n charset-normalizer==2.0.12\n     # via requests\n@@ -21,7 +21,7 @@ idna==3.3\n     # via requests\n imagesize==1.3.0\n     # via sphinx\n-jinja2==3.1.1\n+jinja2==3.1.2\n     # via sphinx\n markupsafe==2.1.1\n     # via jinja2\n@@ -35,7 +35,7 @@ pygments==2.12.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==3.0.8\n+pyparsing==3.0.9\n     # via packaging\n pytz==2022.1\n     # via babel\n'",0,0
requirements/tests.txt,requirements/tests.txt,d506af1b1f27877f2101a20c6826e99f30427348,31aad113ff59337436e0308d467da31872f58f0a,'update requirements',"'@@ -5,7 +5,7 @@\n #\n #    pip-compile-multi\n #\n-asgiref==3.5.0\n+asgiref==3.5.2\n     # via -r requirements/tests.in\n attrs==21.4.0\n     # via pytest\n@@ -21,7 +21,7 @@ pluggy==1.0.0\n     # via pytest\n py==1.11.0\n     # via pytest\n-pyparsing==3.0.8\n+pyparsing==3.0.9\n     # via packaging\n pytest==7.1.2\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,d506af1b1f27877f2101a20c6826e99f30427348,31aad113ff59337436e0308d467da31872f58f0a,'update requirements',"'@@ -7,7 +7,7 @@\n #\n cffi==1.15.0\n     # via cryptography\n-cryptography==37.0.1\n+cryptography==37.0.2\n     # via -r requirements/typing.in\n mypy==0.950\n     # via -r requirements/typing.in\n@@ -21,7 +21,7 @@ types-contextvars==2.4.5\n     # via -r requirements/typing.in\n types-dataclasses==0.6.5\n     # via -r requirements/typing.in\n-types-setuptools==57.4.14\n+types-setuptools==57.4.15\n     # via -r requirements/typing.in\n typing-extensions==4.2.0\n     # via mypy\n'",0,0
docs/patterns/celery.rst,docs/patterns/celery.rst,9252be9c9ebe46dd6415b24999a869ed87eace57,d506af1b1f27877f2101a20c6826e99f30427348,'docs: new configuration format for celery',"'@@ -34,17 +34,15 @@ Celery without any reconfiguration with Flask, it becomes a bit nicer by\n subclassing tasks and adding support for Flask\'s application contexts and\n hooking it up with the Flask configuration.\n \n-This is all that is necessary to properly integrate Celery with Flask::\n+This is all that is necessary to integrate Celery with Flask:\n+\n+.. code-block:: python\n \n     from celery import Celery\n \n     def make_celery(app):\n-        celery = Celery(\n-            app.import_name,\n-            backend=app.config[\'CELERY_RESULT_BACKEND\'],\n-            broker=app.config[\'CELERY_BROKER_URL\']\n-        )\n-        celery.conf.update(app.config)\n+        celery = Celery(app.import_name)\n+        celery.conf.update(app.config[""CELERY_CONFIG""])\n \n         class ContextTask(celery.Task):\n             def __call__(self, *args, **kwargs):\n@@ -59,6 +57,12 @@ from the application config, updates the rest of the Celery config from\n the Flask config and then creates a subclass of the task that wraps the\n task execution in an application context.\n \n+.. note::\n+    Celery 5.x deprecated uppercase configuration keys, and 6.x will\n+    remove them. See their official `migration guide`_.\n+\n+.. _migration guide: https://docs.celeryproject.org/en/stable/userguide/configuration.html#conf-old-settings-map.\n+\n An example task\n ---------------\n \n@@ -69,10 +73,10 @@ application using the factory from above, and then use it to define the task. ::\n     from flask import Flask\n \n     flask_app = Flask(__name__)\n-    flask_app.config.update(\n-        CELERY_BROKER_URL=\'redis://localhost:6379\',\n-        CELERY_RESULT_BACKEND=\'redis://localhost:6379\'\n-    )\n+    flask_app.config.update(CELERY_CONFIG={\n+        \'broker_url\': \'redis://localhost:6379\',\n+        \'result_backend\': \'redis://localhost:6379\',\n+    })\n     celery = make_celery(flask_app)\n \n     @celery.task()\n'",1.0,1.0
docs/tutorial/install.rst,docs/tutorial/install.rst,c45c81938a1715eb4bdf9eaf6ac9d75becb8c191,ab76703532939d0bbb6257abb9284eb229ed01d4,'Add link to additional packaging info',"'@@ -67,10 +67,12 @@ This tells Python to copy everything in the ``static`` and ``templates``\n directories, and the ``schema.sql`` file, but to exclude all bytecode\n files.\n \n-See the `official packaging guide`_ for another explanation of the files\n+See the official `Packaging tutorial <packaging tutorial_>`_ and\n+`detailed guide <packaging guide_>`_ for more explanation of the files\n and options used.\n \n-.. _official packaging guide: https://packaging.python.org/tutorials/packaging-projects/\n+.. _packaging tutorial: https://packaging.python.org/tutorials/packaging-projects/\n+.. _packaging guide: https://packaging.python.org/guides/distributing-packages-using-setuptools/\n \n \n Install the Project\n'",0,0
CHANGES.rst,CHANGES.rst,a4f63e0390e4f9aba543514d16479ce6f40e46be,60ac0c509202b99ca9a5e3ea04addd93194ca5d0,'start version 2.1.3',"'@@ -1,5 +1,14 @@\n .. currentmodule:: flask\n \n+Version 2.1.3\n+-------------\n+\n+Unreleased\n+\n+-   Inline some optional imports that are only used for certain CLI\n+    commands. :pr:`4606`\n+\n+\n Version 2.1.2\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,a4f63e0390e4f9aba543514d16479ce6f40e46be,60ac0c509202b99ca9a5e3ea04addd93194ca5d0,'start version 2.1.3',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.2""\n+__version__ = ""2.1.3.dev0""\n'",0,0
CHANGES.rst,CHANGES.rst,8cb950671f39c64707b6aaebfc60d7a8f1157da5,a4f63e0390e4f9aba543514d16479ce6f40e46be,'use bound typevar to accept Flask and Werkzeug Response classes',"'@@ -7,6 +7,7 @@ Unreleased\n \n -   Inline some optional imports that are only used for certain CLI\n     commands. :pr:`4606`\n+-   Relax type annotation for ``after_request`` functions. :issue:`4600`\n \n \n Version 2.1.2\n'",0,0
src/flask/typing.py,src/flask/typing.py,8cb950671f39c64707b6aaebfc60d7a8f1157da5,a4f63e0390e4f9aba543514d16479ce6f40e46be,'use bound typevar to accept Flask and Werkzeug Response classes',"'@@ -4,7 +4,7 @@ import typing as t\n if t.TYPE_CHECKING:\n     from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n-    from werkzeug.wrappers.response import Response  # noqa: F401\n+    from werkzeug.wrappers import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n ResponseValue = t.Union[\n@@ -35,8 +35,13 @@ ResponseReturnValue = t.Union[\n     ""WSGIApplication"",\n ]\n \n+# Allow any subclass of werkzeug.Response, such as the one from Flask,\n+# as a callback argument. Using werkzeug.Response directly makes a\n+# callback annotated with flask.Response fail type checking.\n+ResponseClass = t.TypeVar(""ResponseClass"", bound=""Response"")\n+\n AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints are named\n-AfterRequestCallable = t.Callable[[""Response""], ""Response""]\n+AfterRequestCallable = t.Callable[[ResponseClass], ResponseClass]\n BeforeFirstRequestCallable = t.Callable[[], None]\n BeforeRequestCallable = t.Callable[[], t.Optional[ResponseReturnValue]]\n TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n'",0,0
src/flask/app.py,src/flask/app.py,61f62e6005f72c44a90026e2589b6bc5234f2f24,8cb950671f39c64707b6aaebfc60d7a8f1157da5,'access flask types through namespace alias',"'@@ -26,6 +26,7 @@ from werkzeug.wrappers import Response as BaseResponse\n \n from . import cli\n from . import json\n+from . import typing as ft\n from .config import Config\n from .config import ConfigAttribute\n from .ctx import _AppCtxGlobals\n@@ -58,12 +59,6 @@ from .signals import request_started\n from .signals import request_tearing_down\n from .templating import DispatchingJinjaLoader\n from .templating import Environment\n-from .typing import BeforeFirstRequestCallable\n-from .typing import ResponseReturnValue\n-from .typing import TeardownCallable\n-from .typing import TemplateFilterCallable\n-from .typing import TemplateGlobalCallable\n-from .typing import TemplateTestCallable\n from .wrappers import Request\n from .wrappers import Response\n \n@@ -72,7 +67,6 @@ if t.TYPE_CHECKING:\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n-    from .typing import ErrorHandlerCallable\n \n if sys.version_info >= (3, 8):\n     iscoroutinefunction = inspect.iscoroutinefunction\n@@ -436,7 +430,7 @@ class Flask(Scaffold):\n         #: :meth:`before_first_request` decorator.\n         #:\n         #: .. versionadded:: 0.8\n-        self.before_first_request_funcs: t.List[BeforeFirstRequestCallable] = []\n+        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n \n         #: A list of functions that are called when the application context\n         #: is destroyed.  Since the application context is also torn down\n@@ -444,7 +438,7 @@ class Flask(Scaffold):\n         #: from databases.\n         #:\n         #: .. versionadded:: 0.9\n-        self.teardown_appcontext_funcs: t.List[TeardownCallable] = []\n+        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n \n         #: A list of shell context processor functions that should be run\n         #: when a shell context is created.\n@@ -1096,7 +1090,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_filter(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n+    ) -> t.Callable[[ft.TemplateFilterCallable], ft.TemplateFilterCallable]:\n         """"""A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n         name will be used. Example::\n@@ -1109,7 +1103,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateFilterCallable) -> TemplateFilterCallable:\n+        def decorator(f: ft.TemplateFilterCallable) -> ft.TemplateFilterCallable:\n             self.add_template_filter(f, name=name)\n             return f\n \n@@ -1117,7 +1111,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_filter(\n-        self, f: TemplateFilterCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateFilterCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template filter.  Works exactly like the\n         :meth:`template_filter` decorator.\n@@ -1130,7 +1124,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_test(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n+    ) -> t.Callable[[ft.TemplateTestCallable], ft.TemplateTestCallable]:\n         """"""A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n         name will be used. Example::\n@@ -1150,7 +1144,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateTestCallable) -> TemplateTestCallable:\n+        def decorator(f: ft.TemplateTestCallable) -> ft.TemplateTestCallable:\n             self.add_template_test(f, name=name)\n             return f\n \n@@ -1158,7 +1152,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_test(\n-        self, f: TemplateTestCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateTestCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template test.  Works exactly like the\n         :meth:`template_test` decorator.\n@@ -1173,7 +1167,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_global(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n+    ) -> t.Callable[[ft.TemplateGlobalCallable], ft.TemplateGlobalCallable]:\n         """"""A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n         name will be used. Example::\n@@ -1188,7 +1182,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateGlobalCallable) -> TemplateGlobalCallable:\n+        def decorator(f: ft.TemplateGlobalCallable) -> ft.TemplateGlobalCallable:\n             self.add_template_global(f, name=name)\n             return f\n \n@@ -1196,7 +1190,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_global(\n-        self, f: TemplateGlobalCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateGlobalCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template global function. Works exactly like the\n         :meth:`template_global` decorator.\n@@ -1210,8 +1204,8 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def before_first_request(\n-        self, f: BeforeFirstRequestCallable\n-    ) -> BeforeFirstRequestCallable:\n+        self, f: ft.BeforeFirstRequestCallable\n+    ) -> ft.BeforeFirstRequestCallable:\n         """"""Registers a function to be run before the first request to this\n         instance of the application.\n \n@@ -1224,7 +1218,7 @@ class Flask(Scaffold):\n         return f\n \n     @setupmethod\n-    def teardown_appcontext(self, f: TeardownCallable) -> TeardownCallable:\n+    def teardown_appcontext(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n         """"""Registers a function to be called when the application context\n         ends.  These functions are typically also called when the request\n         context is popped.\n@@ -1265,7 +1259,7 @@ class Flask(Scaffold):\n         self.shell_context_processors.append(f)\n         return f\n \n-    def _find_error_handler(self, e: Exception) -> t.Optional[""ErrorHandlerCallable""]:\n+    def _find_error_handler(self, e: Exception) -> t.Optional[ft.ErrorHandlerCallable]:\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n         blueprint handler for an exception class, app handler for an exception\n@@ -1290,7 +1284,7 @@ class Flask(Scaffold):\n \n     def handle_http_exception(\n         self, e: HTTPException\n-    ) -> t.Union[HTTPException, ResponseReturnValue]:\n+    ) -> t.Union[HTTPException, ft.ResponseReturnValue]:\n         """"""Handles an HTTP exception.  By default this will invoke the\n         registered error handlers and fall back to returning the\n         exception as response.\n@@ -1360,7 +1354,7 @@ class Flask(Scaffold):\n \n     def handle_user_exception(\n         self, e: Exception\n-    ) -> t.Union[HTTPException, ResponseReturnValue]:\n+    ) -> t.Union[HTTPException, ft.ResponseReturnValue]:\n         """"""This method is called whenever an exception occurs that\n         should be handled. A special case is :class:`~werkzeug\n         .exceptions.HTTPException` which is forwarded to the\n@@ -1430,7 +1424,7 @@ class Flask(Scaffold):\n             raise e\n \n         self.log_exception(exc_info)\n-        server_error: t.Union[InternalServerError, ResponseReturnValue]\n+        server_error: t.Union[InternalServerError, ft.ResponseReturnValue]\n         server_error = InternalServerError(original_exception=e)\n         handler = self._find_error_handler(server_error)\n \n@@ -1484,7 +1478,7 @@ class Flask(Scaffold):\n \n         raise FormDataRoutingRedirect(request)\n \n-    def dispatch_request(self) -> ResponseReturnValue:\n+    def dispatch_request(self) -> ft.ResponseReturnValue:\n         """"""Does the request dispatching.  Matches the URL and returns the\n         return value of the view or error handler.  This does not have to\n         be a response object.  In order to convert the return value to a\n@@ -1527,7 +1521,7 @@ class Flask(Scaffold):\n \n     def finalize_request(\n         self,\n-        rv: t.Union[ResponseReturnValue, HTTPException],\n+        rv: t.Union[ft.ResponseReturnValue, HTTPException],\n         from_error_handler: bool = False,\n     ) -> Response:\n         """"""Given the return value from a view function this finalizes\n@@ -1630,7 +1624,7 @@ class Flask(Scaffold):\n \n         return asgiref_async_to_sync(func)\n \n-    def make_response(self, rv: ResponseReturnValue) -> Response:\n+    def make_response(self, rv: ft.ResponseReturnValue) -> Response:\n         """"""Convert the return value from a view function to an instance of\n         :attr:`response_class`.\n \n@@ -1722,7 +1716,9 @@ class Flask(Scaffold):\n                 # evaluate a WSGI callable, or coerce a different response\n                 # class to the correct type\n                 try:\n-                    rv = self.response_class.force_type(rv, request.environ)  # type: ignore  # noqa: B950\n+                    rv = self.response_class.force_type(\n+                        rv, request.environ  # type: ignore[arg-type]\n+                    )\n                 except TypeError as e:\n                     raise TypeError(\n                         f""{e}\\nThe view function did not return a valid""\n@@ -1838,7 +1834,7 @@ class Flask(Scaffold):\n \n         raise error\n \n-    def preprocess_request(self) -> t.Optional[ResponseReturnValue]:\n+    def preprocess_request(self) -> t.Optional[ft.ResponseReturnValue]:\n         """"""Called before the request is dispatched. Calls\n         :attr:`url_value_preprocessors` registered with the app and the\n         current blueprint (if any). Then calls :attr:`before_request_funcs`\n'",3.0588235294117645,3.0588235294117645
src/flask/blueprints.py,src/flask/blueprints.py,61f62e6005f72c44a90026e2589b6bc5234f2f24,8cb950671f39c64707b6aaebfc60d7a8f1157da5,'access flask types through namespace alias',"'@@ -3,23 +3,13 @@ import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n \n+from . import typing as ft\n from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n from .scaffold import Scaffold\n-from .typing import AfterRequestCallable\n-from .typing import BeforeFirstRequestCallable\n-from .typing import BeforeRequestCallable\n-from .typing import TeardownCallable\n-from .typing import TemplateContextProcessorCallable\n-from .typing import TemplateFilterCallable\n-from .typing import TemplateGlobalCallable\n-from .typing import TemplateTestCallable\n-from .typing import URLDefaultCallable\n-from .typing import URLValuePreprocessorCallable\n \n if t.TYPE_CHECKING:\n     from .app import Flask\n-    from .typing import ErrorHandlerCallable\n \n DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n \n@@ -419,7 +409,7 @@ class Blueprint(Scaffold):\n \n     def app_template_filter(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n+    ) -> t.Callable[[ft.TemplateFilterCallable], ft.TemplateFilterCallable]:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n \n@@ -427,14 +417,14 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateFilterCallable) -> TemplateFilterCallable:\n+        def decorator(f: ft.TemplateFilterCallable) -> ft.TemplateFilterCallable:\n             self.add_app_template_filter(f, name=name)\n             return f\n \n         return decorator\n \n     def add_app_template_filter(\n-        self, f: TemplateFilterCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateFilterCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.add_template_filter` but for a blueprint.  Works exactly\n@@ -451,7 +441,7 @@ class Blueprint(Scaffold):\n \n     def app_template_test(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n+    ) -> t.Callable[[ft.TemplateTestCallable], ft.TemplateTestCallable]:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.template_test` but for a blueprint.\n \n@@ -461,14 +451,14 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateTestCallable) -> TemplateTestCallable:\n+        def decorator(f: ft.TemplateTestCallable) -> ft.TemplateTestCallable:\n             self.add_app_template_test(f, name=name)\n             return f\n \n         return decorator\n \n     def add_app_template_test(\n-        self, f: TemplateTestCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateTestCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.add_template_test` but for a blueprint.  Works exactly\n@@ -487,7 +477,7 @@ class Blueprint(Scaffold):\n \n     def app_template_global(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n+    ) -> t.Callable[[ft.TemplateGlobalCallable], ft.TemplateGlobalCallable]:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.template_global` but for a blueprint.\n \n@@ -497,14 +487,14 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: TemplateGlobalCallable) -> TemplateGlobalCallable:\n+        def decorator(f: ft.TemplateGlobalCallable) -> ft.TemplateGlobalCallable:\n             self.add_app_template_global(f, name=name)\n             return f\n \n         return decorator\n \n     def add_app_template_global(\n-        self, f: TemplateGlobalCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateGlobalCallable, name: t.Optional[str] = None\n     ) -> None:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.add_template_global` but for a blueprint.  Works exactly\n@@ -521,7 +511,9 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n-    def before_app_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n+    def before_app_request(\n+        self, f: ft.BeforeRequestCallable\n+    ) -> ft.BeforeRequestCallable:\n         """"""Like :meth:`Flask.before_request`.  Such a function is executed\n         before each request, even if outside of a blueprint.\n         """"""\n@@ -531,15 +523,15 @@ class Blueprint(Scaffold):\n         return f\n \n     def before_app_first_request(\n-        self, f: BeforeFirstRequestCallable\n-    ) -> BeforeFirstRequestCallable:\n+        self, f: ft.BeforeFirstRequestCallable\n+    ) -> ft.BeforeFirstRequestCallable:\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n         """"""\n         self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n         return f\n \n-    def after_app_request(self, f: AfterRequestCallable) -> AfterRequestCallable:\n+    def after_app_request(self, f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n         """"""Like :meth:`Flask.after_request` but for a blueprint.  Such a function\n         is executed after each request, even if outside of the blueprint.\n         """"""\n@@ -548,7 +540,7 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def teardown_app_request(self, f: TeardownCallable) -> TeardownCallable:\n+    def teardown_app_request(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n         """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n         function is executed when tearing down each request, even if outside of\n         the blueprint.\n@@ -559,8 +551,8 @@ class Blueprint(Scaffold):\n         return f\n \n     def app_context_processor(\n-        self, f: TemplateContextProcessorCallable\n-    ) -> TemplateContextProcessorCallable:\n+        self, f: ft.TemplateContextProcessorCallable\n+    ) -> ft.TemplateContextProcessorCallable:\n         """"""Like :meth:`Flask.context_processor` but for a blueprint.  Such a\n         function is executed each request, even if outside of the blueprint.\n         """"""\n@@ -574,22 +566,22 @@ class Blueprint(Scaffold):\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(f: ""ErrorHandlerCallable"") -> ""ErrorHandlerCallable"":\n+        def decorator(f: ft.ErrorHandlerCallable) -> ft.ErrorHandlerCallable:\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n         return decorator\n \n     def app_url_value_preprocessor(\n-        self, f: URLValuePreprocessorCallable\n-    ) -> URLValuePreprocessorCallable:\n+        self, f: ft.URLValuePreprocessorCallable\n+    ) -> ft.URLValuePreprocessorCallable:\n         """"""Same as :meth:`url_value_preprocessor` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_value_preprocessors.setdefault(None, []).append(f)\n         )\n         return f\n \n-    def app_url_defaults(self, f: URLDefaultCallable) -> URLDefaultCallable:\n+    def app_url_defaults(self, f: ft.URLDefaultCallable) -> ft.URLDefaultCallable:\n         """"""Same as :meth:`url_defaults` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n'",2.3636363636363638,2.3636363636363638
src/flask/ctx.py,src/flask/ctx.py,61f62e6005f72c44a90026e2589b6bc5234f2f24,8cb950671f39c64707b6aaebfc60d7a8f1157da5,'access flask types through namespace alias',"'@@ -5,11 +5,11 @@ from types import TracebackType\n \n from werkzeug.exceptions import HTTPException\n \n+from . import typing as ft\n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .signals import appcontext_popped\n from .signals import appcontext_pushed\n-from .typing import AfterRequestCallable\n \n if t.TYPE_CHECKING:\n     from .app import Flask\n@@ -109,7 +109,7 @@ class _AppCtxGlobals:\n         return object.__repr__(self)\n \n \n-def after_this_request(f: AfterRequestCallable) -> AfterRequestCallable:\n+def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n     """"""Executes a function after this request.  This is useful to modify\n     response objects.  The function is passed the response object and has\n     to return the same or a new one.\n@@ -341,7 +341,7 @@ class RequestContext:\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n-        self._after_request_functions: t.List[AfterRequestCallable] = []\n+        self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n \n     @property\n     def g(self) -> _AppCtxGlobals:\n'",1.9333333333333333,1.9333333333333333
src/flask/scaffold.py,src/flask/scaffold.py,61f62e6005f72c44a90026e2589b6bc5234f2f24,8cb950671f39c64707b6aaebfc60d7a8f1157da5,'access flask types through namespace alias',"'@@ -12,23 +12,16 @@ from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n \n+from . import typing as ft\n from .cli import AppGroup\n from .globals import current_app\n from .helpers import get_root_path\n from .helpers import locked_cached_property\n from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n-from .typing import AfterRequestCallable\n-from .typing import AppOrBlueprintKey\n-from .typing import BeforeRequestCallable\n-from .typing import TeardownCallable\n-from .typing import TemplateContextProcessorCallable\n-from .typing import URLDefaultCallable\n-from .typing import URLValuePreprocessorCallable\n \n if t.TYPE_CHECKING:\n     from .wrappers import Response\n-    from .typing import ErrorHandlerCallable\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n@@ -143,8 +136,8 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.error_handler_spec: t.Dict[\n-            AppOrBlueprintKey,\n-            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ""ErrorHandlerCallable""]],\n+            ft.AppOrBlueprintKey,\n+            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ft.ErrorHandlerCallable]],\n         ] = defaultdict(lambda: defaultdict(dict))\n \n         #: A data structure of functions to call at the beginning of\n@@ -158,7 +151,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.before_request_funcs: t.Dict[\n-            AppOrBlueprintKey, t.List[BeforeRequestCallable]\n+            ft.AppOrBlueprintKey, t.List[ft.BeforeRequestCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n@@ -172,7 +165,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.after_request_funcs: t.Dict[\n-            AppOrBlueprintKey, t.List[AfterRequestCallable]\n+            ft.AppOrBlueprintKey, t.List[ft.AfterRequestCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n@@ -187,7 +180,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.teardown_request_funcs: t.Dict[\n-            AppOrBlueprintKey, t.List[TeardownCallable]\n+            ft.AppOrBlueprintKey, t.List[ft.TeardownCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call to pass extra context\n@@ -202,7 +195,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.template_context_processors: t.Dict[\n-            AppOrBlueprintKey, t.List[TemplateContextProcessorCallable]\n+            ft.AppOrBlueprintKey, t.List[ft.TemplateContextProcessorCallable]\n         ] = defaultdict(list, {None: [_default_template_ctx_processor]})\n \n         #: A data structure of functions to call to modify the keyword\n@@ -217,8 +210,8 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.url_value_preprocessors: t.Dict[\n-            AppOrBlueprintKey,\n-            t.List[URLValuePreprocessorCallable],\n+            ft.AppOrBlueprintKey,\n+            t.List[ft.URLValuePreprocessorCallable],\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call to modify the keyword\n@@ -233,7 +226,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.url_default_functions: t.Dict[\n-            AppOrBlueprintKey, t.List[URLDefaultCallable]\n+            ft.AppOrBlueprintKey, t.List[ft.URLDefaultCallable]\n         ] = defaultdict(list)\n \n     def __repr__(self) -> str:\n@@ -534,7 +527,7 @@ class Scaffold:\n         return decorator\n \n     @setupmethod\n-    def before_request(self, f: BeforeRequestCallable) -> BeforeRequestCallable:\n+    def before_request(self, f: ft.BeforeRequestCallable) -> ft.BeforeRequestCallable:\n         """"""Register a function to run before each request.\n \n         For example, this can be used to open a database connection, or\n@@ -556,7 +549,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def after_request(self, f: AfterRequestCallable) -> AfterRequestCallable:\n+    def after_request(self, f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n         """"""Register a function to run after each request to this object.\n \n         The function is called with the response object, and must return\n@@ -572,7 +565,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def teardown_request(self, f: TeardownCallable) -> TeardownCallable:\n+    def teardown_request(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n         """"""Register a function to be run at the end of each request,\n         regardless of whether there was an exception or not.  These functions\n         are executed when the request context is popped, even if not an\n@@ -612,16 +605,16 @@ class Scaffold:\n \n     @setupmethod\n     def context_processor(\n-        self, f: TemplateContextProcessorCallable\n-    ) -> TemplateContextProcessorCallable:\n+        self, f: ft.TemplateContextProcessorCallable\n+    ) -> ft.TemplateContextProcessorCallable:\n         """"""Registers a template context processor function.""""""\n         self.template_context_processors[None].append(f)\n         return f\n \n     @setupmethod\n     def url_value_preprocessor(\n-        self, f: URLValuePreprocessorCallable\n-    ) -> URLValuePreprocessorCallable:\n+        self, f: ft.URLValuePreprocessorCallable\n+    ) -> ft.URLValuePreprocessorCallable:\n         """"""Register a URL value preprocessor function for all view\n         functions in the application. These functions will be called before the\n         :meth:`before_request` functions.\n@@ -638,7 +631,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def url_defaults(self, f: URLDefaultCallable) -> URLDefaultCallable:\n+    def url_defaults(self, f: ft.URLDefaultCallable) -> ft.URLDefaultCallable:\n         """"""Callback function for URL defaults for all view functions of the\n         application.  It\'s called with the endpoint and values and should\n         update the values passed in place.\n@@ -649,7 +642,7 @@ class Scaffold:\n     @setupmethod\n     def errorhandler(\n         self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable[[""ErrorHandlerCallable""], ""ErrorHandlerCallable""]:\n+    ) -> t.Callable[[ft.ErrorHandlerCallable], ft.ErrorHandlerCallable]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -679,7 +672,7 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(f: ""ErrorHandlerCallable"") -> ""ErrorHandlerCallable"":\n+        def decorator(f: ft.ErrorHandlerCallable) -> ft.ErrorHandlerCallable:\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n@@ -689,7 +682,7 @@ class Scaffold:\n     def register_error_handler(\n         self,\n         code_or_exception: t.Union[t.Type[Exception], int],\n-        f: ""ErrorHandlerCallable"",\n+        f: ft.ErrorHandlerCallable,\n     ) -> None:\n         """"""Alternative error attach function to the :meth:`errorhandler`\n         decorator that is more straightforward to use for non decorator\n'",1.8205128205128205,1.8205128205128205
src/flask/views.py,src/flask/views.py,61f62e6005f72c44a90026e2589b6bc5234f2f24,8cb950671f39c64707b6aaebfc60d7a8f1157da5,'access flask types through namespace alias',"'@@ -1,8 +1,8 @@\n import typing as t\n \n+from . import typing as ft\n from .globals import current_app\n from .globals import request\n-from .typing import ResponseReturnValue\n \n \n http_method_funcs = frozenset(\n@@ -59,7 +59,7 @@ class View:\n     #: .. versionadded:: 0.8\n     decorators: t.List[t.Callable] = []\n \n-    def dispatch_request(self) -> ResponseReturnValue:\n+    def dispatch_request(self) -> ft.ResponseReturnValue:\n         """"""Subclasses have to override this method to implement the\n         actual view function code.  This method is called with all\n         the arguments from the URL rule.\n@@ -79,7 +79,7 @@ class View:\n         constructor of the class.\n         """"""\n \n-        def view(*args: t.Any, **kwargs: t.Any) -> ResponseReturnValue:\n+        def view(*args: t.Any, **kwargs: t.Any) -> ft.ResponseReturnValue:\n             self = view.view_class(*class_args, **class_kwargs)  # type: ignore\n             return current_app.ensure_sync(self.dispatch_request)(*args, **kwargs)\n \n@@ -146,7 +146,7 @@ class MethodView(View, metaclass=MethodViewType):\n         app.add_url_rule(\'/counter\', view_func=CounterAPI.as_view(\'counter\'))\n     """"""\n \n-    def dispatch_request(self, *args: t.Any, **kwargs: t.Any) -> ResponseReturnValue:\n+    def dispatch_request(self, *args: t.Any, **kwargs: t.Any) -> ft.ResponseReturnValue:\n         meth = getattr(self, request.method.lower(), None)\n \n         # If the request method is HEAD and we don\'t have a handler for it\n'",3.0,3.0
tests/test_config.py,tests/test_config.py,3ecebcdf8de02818cd409afd6edd39a09248b3ef,1888df34405d46ac0e7524d0de9408e37449feaa,'Add test config.from_mapping method: ignoring items with non-upper keys',"'@@ -113,6 +113,10 @@ def test_config_from_mapping():\n     app.config.from_mapping(SECRET_KEY=""config"", TEST_KEY=""foo"")\n     common_object_test(app)\n \n+    app = flask.Flask(__name__)\n+    app.config.from_mapping(SECRET_KEY=""config"", TEST_KEY=""foo"", skip_key=""skip"")\n+    common_object_test(app)\n+\n     app = flask.Flask(__name__)\n     with pytest.raises(TypeError):\n         app.config.from_mapping({}, {})\n'",1.0555555555555556,1.0555555555555556
requirements/dev.txt,requirements/dev.txt,21d32ee0672c69573303ac78ff308109b06c9c91,83e96806492bd90c1f866617ec56b07f2a6691c0,'update requirements',"'@@ -16,7 +16,7 @@ click==8.1.3\n     #   pip-tools\n distlib==0.3.4\n     # via virtualenv\n-filelock==3.7.0\n+filelock==3.7.1\n     # via\n     #   tox\n     #   virtualenv\n@@ -30,7 +30,7 @@ pep517==0.12.0\n     # via pip-tools\n pip-compile-multi==2.4.5\n     # via -r requirements/dev.in\n-pip-tools==6.6.1\n+pip-tools==6.6.2\n     # via pip-compile-multi\n platformdirs==2.5.2\n     # via virtualenv\n'",0,0
requirements/typing.txt,requirements/typing.txt,21d32ee0672c69573303ac78ff308109b06c9c91,83e96806492bd90c1f866617ec56b07f2a6691c0,'update requirements',"'@@ -9,7 +9,7 @@ cffi==1.15.0\n     # via cryptography\n cryptography==37.0.2\n     # via -r requirements/typing.in\n-mypy==0.950\n+mypy==0.960\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -17,11 +17,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.5\n+types-contextvars==2.4.6\n     # via -r requirements/typing.in\n types-dataclasses==0.6.5\n     # via -r requirements/typing.in\n-types-setuptools==57.4.15\n+types-setuptools==57.4.17\n     # via -r requirements/typing.in\n typing-extensions==4.2.0\n     # via mypy\n'",0,0
docs/testing.rst,docs/testing.rst,5d31ce1031e8ca24dc908c319567a76110edd87e,21d32ee0672c69573303ac78ff308109b06c9c91,"""Fix incorrect references to query in testing doc\n\nThe [EnvironBuilder doc](https://werkzeug.palletsprojects.com/en/2.1.x/test/#werkzeug.test.EnvironBuilder) shows that the correct name for the keyword argument is `query_string`, not `query`. Using `query` results in an error.\r\n\r\nI've fixed the two places this appears in the testing doc.""","'@@ -92,7 +92,7 @@ The ``client`` has methods that match the common HTTP request methods,\n such as ``client.get()`` and ``client.post()``. They take many arguments\n for building the request; you can find the full documentation in\n :class:`~werkzeug.test.EnvironBuilder`. Typically you\'ll use ``path``,\n-``query``, ``headers``, and ``data`` or ``json``.\n+``query_string``, ``headers``, and ``data`` or ``json``.\n \n To make a request, call the method the request should use with the path\n to the route to test. A :class:`~werkzeug.test.TestResponse` is returned\n@@ -108,9 +108,9 @@ provides ``response.text``, or use ``response.get_data(as_text=True)``.\n         assert b""<h2>Hello, World!</h2>"" in response.data\n \n \n-Pass a dict ``query={""key"": ""value"", ...}`` to set arguments in the\n-query string (after the ``?`` in the URL). Pass a dict ``headers={}``\n-to set request headers.\n+Pass a dict ``query_string={""key"": ""value"", ...}`` to set arguments in\n+the query string (after the ``?`` in the URL). Pass a dict\n+``headers={}`` to set request headers.\n \n To send a request body in a POST or PUT request, pass a value to\n ``data``. If raw bytes are passed, that exact body is used. Usually,\n'",1.0,1.0
src/flask/scaffold.py,src/flask/scaffold.py,72cae9ce2b6a5a296b7328df8dd73240e14718e6,696d7c620d97e78ea9ed8870380b5b302d9f9a01,'Remove extra backtick',"'@@ -123,7 +123,7 @@ class Scaffold:\n         self.view_functions: t.Dict[str, t.Callable] = {}\n \n         #: A data structure of registered error handlers, in the format\n-        #: ``{scope: {code: {class: handler}}}```. The ``scope`` key is\n+        #: ``{scope: {code: {class: handler}}}``. The ``scope`` key is\n         #: the name of a blueprint the handlers are active for, or\n         #: ``None`` for all requests. The ``code`` key is the HTTP\n         #: status code for ``HTTPException``, or ``None`` for\n'",1.8205128205128205,1.8205128205128205
src/flask/app.py,src/flask/app.py,81be290ec8889c157c84bc7ce857f883396c5daf,8c6f1d96ded2a22429b1ee7da6c3870cb140b587,'view function is actually type checked',"'@@ -1033,7 +1033,7 @@ class Flask(Scaffold):\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[t.Callable] = None,\n+        view_func: t.Optional[ft.ViewCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n@@ -1681,7 +1681,7 @@ class Flask(Scaffold):\n                 if isinstance(rv[1], (Headers, dict, tuple, list)):\n                     rv, headers = rv\n                 else:\n-                    rv, status = rv  # type: ignore[misc]\n+                    rv, status = rv  # type: ignore[assignment,misc]\n             # other sized tuples are not allowed\n             else:\n                 raise TypeError(\n'",3.0588235294117645,3.0588235294117645
src/flask/blueprints.py,src/flask/blueprints.py,81be290ec8889c157c84bc7ce857f883396c5daf,8c6f1d96ded2a22429b1ee7da6c3870cb140b587,'view function is actually type checked',"'@@ -384,7 +384,7 @@ class Blueprint(Scaffold):\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[t.Callable] = None,\n+        view_func: t.Optional[ft.ViewCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n'",2.3636363636363638,2.3636363636363638
src/flask/scaffold.py,src/flask/scaffold.py,81be290ec8889c157c84bc7ce857f883396c5daf,8c6f1d96ded2a22429b1ee7da6c3870cb140b587,'view function is actually type checked',"'@@ -363,48 +363,60 @@ class Scaffold:\n         method: str,\n         rule: str,\n         options: dict,\n-    ) -> t.Callable[[F], F]:\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n \n         return self.route(rule, methods=[method], **options)\n \n-    def get(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def get(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""GET"", rule, options)\n \n-    def post(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def post(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""POST"", rule, options)\n \n-    def put(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def put(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PUT"", rule, options)\n \n-    def delete(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def delete(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""DELETE"", rule, options)\n \n-    def patch(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def patch(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n \n         .. versionadded:: 2.0\n         """"""\n         return self._method_route(""PATCH"", rule, options)\n \n-    def route(self, rule: str, **options: t.Any) -> t.Callable[[F], F]:\n+    def route(\n+        self, rule: str, **options: t.Any\n+    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n         """"""Decorate a view function to register it with the given URL\n         rule and options. Calls :meth:`add_url_rule`, which has more\n         details about the implementation.\n@@ -428,7 +440,7 @@ class Scaffold:\n             :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n-        def decorator(f: F) -> F:\n+        def decorator(f: ft.RouteDecorator) -> ft.RouteDecorator:\n             endpoint = options.pop(""endpoint"", None)\n             self.add_url_rule(rule, endpoint, f, **options)\n             return f\n@@ -440,7 +452,7 @@ class Scaffold:\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[t.Callable] = None,\n+        view_func: t.Optional[ft.ViewCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n'",1.8205128205128205,1.8205128205128205
src/flask/typing.py,src/flask/typing.py,81be290ec8889c157c84bc7ce857f883396c5daf,8c6f1d96ded2a22429b1ee7da6c3870cb140b587,'view function is actually type checked',"'@@ -1,37 +1,30 @@\n import typing as t\n \n-\n if t.TYPE_CHECKING:\n     from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n     from werkzeug.wrappers import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n-ResponseValue = t.Union[\n-    ""Response"",\n-    str,\n-    bytes,\n-    t.Dict[str, t.Any],  # any jsonify-able dict\n-    t.Iterator[str],\n-    t.Iterator[bytes],\n-]\n-StatusCode = int\n+ResponseValue = t.Union[""Response"", str, bytes, t.Dict[str, t.Any]]\n \n # the possible types for an individual HTTP header\n-HeaderName = str\n+# This should be a Union, but mypy doesn\'t pass unless it\'s a TypeVar.\n HeaderValue = t.Union[str, t.List[str], t.Tuple[str, ...]]\n \n # the possible types for HTTP headers\n HeadersValue = t.Union[\n-    ""Headers"", t.Dict[HeaderName, HeaderValue], t.List[t.Tuple[HeaderName, HeaderValue]]\n+    ""Headers"",\n+    t.Mapping[str, HeaderValue],\n+    t.Sequence[t.Tuple[str, HeaderValue]],\n ]\n \n # The possible types returned by a route function.\n ResponseReturnValue = t.Union[\n     ResponseValue,\n     t.Tuple[ResponseValue, HeadersValue],\n-    t.Tuple[ResponseValue, StatusCode],\n-    t.Tuple[ResponseValue, StatusCode, HeadersValue],\n+    t.Tuple[ResponseValue, int],\n+    t.Tuple[ResponseValue, int, HeadersValue],\n     ""WSGIApplication"",\n ]\n \n@@ -51,6 +44,7 @@ TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n URLDefaultCallable = t.Callable[[str, dict], None]\n URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n+\n # This should take Exception, but that either breaks typing the argument\n # with a specific exception, or decorating multiple times with different\n # exceptions (and using a union type on the argument).\n@@ -58,3 +52,6 @@ URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], N\n # https://github.com/pallets/flask/issues/4295\n # https://github.com/pallets/flask/issues/4297\n ErrorHandlerCallable = t.Callable[[t.Any], ResponseReturnValue]\n+\n+ViewCallable = t.Callable[..., ResponseReturnValue]\n+RouteDecorator = t.TypeVar(""RouteDecorator"", bound=ViewCallable)\n'",0,0
tests/typing/typing_route.py,tests/typing/typing_route.py,81be290ec8889c157c84bc7ce857f883396c5daf,8c6f1d96ded2a22429b1ee7da6c3870cb140b587,'view function is actually type checked',"'@@ -1,6 +1,6 @@\n+from __future__ import annotations\n+\n from http import HTTPStatus\n-from typing import Tuple\n-from typing import Union\n \n from flask import Flask\n from flask import jsonify\n@@ -8,42 +8,51 @@ from flask.templating import render_template\n from flask.views import View\n from flask.wrappers import Response\n \n-\n app = Flask(__name__)\n \n \n-@app.route(""/"")\n-def hello_world() -> str:\n+@app.route(""/str"")\n+def hello_str() -> str:\n     return ""<p>Hello, World!</p>""\n \n \n+@app.route(""/bytes"")\n+def hello_bytes() -> bytes:\n+    return b""<p>Hello, World!</p>""\n+\n+\n @app.route(""/json"")\n-def hello_world_json() -> Response:\n+def hello_json() -> Response:\n     return jsonify({""response"": ""Hello, World!""})\n \n \n-@app.route(""/template"")\n-@app.route(""/template/<name>"")\n-def return_template(name: Union[str, None] = None) -> str:\n-    return render_template(""index.html"", name=name)\n+@app.route(""/status"")\n+@app.route(""/status/<int:code>"")\n+def tuple_status(code: int = 200) -> tuple[str, int]:\n+    return ""hello"", code\n+\n+\n+@app.route(""/status-enum"")\n+def tuple_status_enum() -> tuple[str, int]:\n+    return ""hello"", HTTPStatus.OK\n \n \n-@app.errorhandler(HTTPStatus.INTERNAL_SERVER_ERROR)\n-def error_500(e) -> Tuple[str, int]:\n-    return ""<p>Sorry, we are having problems</p>"", HTTPStatus.INTERNAL_SERVER_ERROR\n+@app.route(""/headers"")\n+def tuple_headers() -> tuple[str, dict[str, str]]:\n+    return ""Hello, World!"", {""Content-Type"": ""text/plain""}\n \n \n-@app.before_request\n-def before_request() -> None:\n-    app.logger.debug(""Executing a sample before_request function"")\n-    return None\n+@app.route(""/template"")\n+@app.route(""/template/<name>"")\n+def return_template(name: str | None = None) -> str:\n+    return render_template(""index.html"", name=name)\n \n \n class RenderTemplateView(View):\n-    def __init__(self: ""RenderTemplateView"", template_name: str) -> None:\n+    def __init__(self: RenderTemplateView, template_name: str) -> None:\n         self.template_name = template_name\n \n-    def dispatch_request(self: ""RenderTemplateView"") -> str:\n+    def dispatch_request(self: RenderTemplateView) -> str:\n         return render_template(self.template_name)\n \n \n'",1.0,1.0
src/flask/blueprints.py,src/flask/blueprints.py,3351a8677e5bd1e1b8cfe2860b73b3422cde4f31,81be290ec8889c157c84bc7ce857f883396c5daf,'add errorhandler type check tests',"'@@ -561,12 +561,14 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    def app_errorhandler(self, code: t.Union[t.Type[Exception], int]) -> t.Callable:\n+    def app_errorhandler(\n+        self, code: t.Union[t.Type[Exception], int]\n+    ) -> t.Callable[[ft.ErrorHandlerDecorator], ft.ErrorHandlerDecorator]:\n         """"""Like :meth:`Flask.errorhandler` but for a blueprint.  This\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(f: ft.ErrorHandlerCallable) -> ft.ErrorHandlerCallable:\n+        def decorator(f: ft.ErrorHandlerDecorator) -> ft.ErrorHandlerDecorator:\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n'",2.3636363636363638,2.3636363636363638
src/flask/scaffold.py,src/flask/scaffold.py,3351a8677e5bd1e1b8cfe2860b73b3422cde4f31,81be290ec8889c157c84bc7ce857f883396c5daf,'add errorhandler type check tests',"'@@ -654,7 +654,7 @@ class Scaffold:\n     @setupmethod\n     def errorhandler(\n         self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable[[ft.ErrorHandlerCallable], ft.ErrorHandlerCallable]:\n+    ) -> t.Callable[[ft.ErrorHandlerDecorator], ft.ErrorHandlerDecorator]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -684,7 +684,7 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(f: ft.ErrorHandlerCallable) -> ft.ErrorHandlerCallable:\n+        def decorator(f: ft.ErrorHandlerDecorator) -> ft.ErrorHandlerDecorator:\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n'",1.8205128205128205,1.8205128205128205
src/flask/typing.py,src/flask/typing.py,3351a8677e5bd1e1b8cfe2860b73b3422cde4f31,81be290ec8889c157c84bc7ce857f883396c5daf,'add errorhandler type check tests',"'@@ -52,6 +52,7 @@ URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], N\n # https://github.com/pallets/flask/issues/4295\n # https://github.com/pallets/flask/issues/4297\n ErrorHandlerCallable = t.Callable[[t.Any], ResponseReturnValue]\n+ErrorHandlerDecorator = t.TypeVar(""ErrorHandlerDecorator"", bound=ErrorHandlerCallable)\n \n ViewCallable = t.Callable[..., ResponseReturnValue]\n RouteDecorator = t.TypeVar(""RouteDecorator"", bound=ViewCallable)\n'",0,0
setup.cfg,setup.cfg,48766754b8e8a16bfb075229eaaf88643c958c4e,3351a8677e5bd1e1b8cfe2860b73b3422cde4f31,'add typing tests to mypy config',"'@@ -87,7 +87,7 @@ per-file-ignores =\n     src/flask/__init__.py: F401\n \n [mypy]\n-files = src/flask\n+files = src/flask, tests/typing\n python_version = 3.7\n show_error_codes = True\n allow_redefinition = True\n'",0,0
CHANGES.rst,CHANGES.rst,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,fb89745408cc02515815c792355c7e883b2d08a4,'instance_path for namespace packages uses path closest to submodule',"'@@ -8,6 +8,8 @@ Unreleased\n -   Inline some optional imports that are only used for certain CLI\n     commands. :pr:`4606`\n -   Relax type annotation for ``after_request`` functions. :issue:`4600`\n+-   ``instance_path`` for namespace packages uses the path closest to\n+    the imported submodule. :issue:`4600`\n \n \n Version 2.1.2\n'",0,0
src/flask/scaffold.py,src/flask/scaffold.py,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,fb89745408cc02515815c792355c7e883b2d08a4,'instance_path for namespace packages uses path closest to submodule',"'@@ -780,30 +780,46 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n     )\n \n \n-def _find_package_path(root_mod_name):\n+def _find_package_path(import_name):\n     """"""Find the path that contains the package or module.""""""\n+    root_mod_name, _, _ = import_name.partition(""."")\n+\n     try:\n-        spec = importlib.util.find_spec(root_mod_name)\n+        root_spec = importlib.util.find_spec(root_mod_name)\n \n-        if spec is None:\n+        if root_spec is None:\n             raise ValueError(""not found"")\n     # ImportError: the machinery told us it does not exist\n     # ValueError:\n     #    - the module name was invalid\n     #    - the module name is __main__\n-    #    - *we* raised `ValueError` due to `spec` being `None`\n+    #    - *we* raised `ValueError` due to `root_spec` being `None`\n     except (ImportError, ValueError):\n         pass  # handled below\n     else:\n         # namespace package\n-        if spec.origin in {""namespace"", None}:\n-            return os.path.dirname(next(iter(spec.submodule_search_locations)))\n+        if root_spec.origin in {""namespace"", None}:\n+            package_spec = importlib.util.find_spec(import_name)\n+            if package_spec is not None and package_spec.submodule_search_locations:\n+                # Pick the path in the namespace that contains the submodule.\n+                package_path = os.path.commonpath(\n+                    package_spec.submodule_search_locations\n+                )\n+                search_locations = (\n+                    location\n+                    for location in root_spec.submodule_search_locations\n+                    if package_path.startswith(location)\n+                )\n+            else:\n+                # Pick the first path.\n+                search_locations = iter(root_spec.submodule_search_locations)\n+            return os.path.dirname(next(search_locations))\n         # a package (with __init__.py)\n-        elif spec.submodule_search_locations:\n-            return os.path.dirname(os.path.dirname(spec.origin))\n+        elif root_spec.submodule_search_locations:\n+            return os.path.dirname(os.path.dirname(root_spec.origin))\n         # just a normal module\n         else:\n-            return os.path.dirname(spec.origin)\n+            return os.path.dirname(root_spec.origin)\n \n     # we were unable to find the `package_path` using PEP 451 loaders\n     loader = pkgutil.get_loader(root_mod_name)\n@@ -845,8 +861,7 @@ def find_package(import_name: str):\n     for import. If the package is not installed, it\'s assumed that the\n     package was imported from the current working directory.\n     """"""\n-    root_mod_name, _, _ = import_name.partition(""."")\n-    package_path = _find_package_path(root_mod_name)\n+    package_path = _find_package_path(import_name)\n     py_prefix = os.path.abspath(sys.prefix)\n \n     # installed to the system\n'",1.8205128205128205,1.9230769230769231
tests/test_instance_config.py,tests/test_instance_config.py,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,fb89745408cc02515815c792355c7e883b2d08a4,'instance_path for namespace packages uses path closest to submodule',"'@@ -59,6 +59,25 @@ def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == str(modules_tmpdir.join(""instance""))\n \n \n+def test_uninstalled_namespace_paths(tmpdir, monkeypatch, purge_module):\n+    def create_namespace(package):\n+        project = tmpdir.join(f""project-{package}"")\n+        monkeypatch.syspath_prepend(str(project))\n+        project.join(""namespace"").join(package).join(""__init__.py"").write(\n+            ""import flask\\napp = flask.Flask(__name__)\\n"", ensure=True\n+        )\n+        return project\n+\n+    _ = create_namespace(""package1"")\n+    project2 = create_namespace(""package2"")\n+    purge_module(""namespace.package2"")\n+    purge_module(""namespace"")\n+\n+    from namespace.package2 import app\n+\n+    assert app.instance_path == str(project2.join(""instance""))\n+\n+\n def test_installed_module_paths(\n     modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n ):\n'",1.25,1.2
src/flask/scaffold.py,src/flask/scaffold.py,3ba37d2afe6511c3f3153248f7342174bea5b131,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,'fix uninstalled package tests under tox',"'@@ -1,5 +1,6 @@\n import importlib.util\n import os\n+import pathlib\n import pkgutil\n import sys\n import typing as t\n@@ -780,6 +781,15 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n     )\n \n \n+def _path_is_relative_to(path: pathlib.PurePath, base: str) -> bool:\n+    # Path.is_relative_to doesn\'t exist until Python 3.9\n+    try:\n+        path.relative_to(base)\n+        return True\n+    except ValueError:\n+        return False\n+\n+\n def _find_package_path(import_name):\n     """"""Find the path that contains the package or module.""""""\n     root_mod_name, _, _ = import_name.partition(""."")\n@@ -802,13 +812,13 @@ def _find_package_path(import_name):\n             package_spec = importlib.util.find_spec(import_name)\n             if package_spec is not None and package_spec.submodule_search_locations:\n                 # Pick the path in the namespace that contains the submodule.\n-                package_path = os.path.commonpath(\n-                    package_spec.submodule_search_locations\n+                package_path = pathlib.Path(\n+                    os.path.commonpath(package_spec.submodule_search_locations)\n                 )\n                 search_locations = (\n                     location\n                     for location in root_spec.submodule_search_locations\n-                    if package_path.startswith(location)\n+                    if _path_is_relative_to(package_path, location)\n                 )\n             else:\n                 # Pick the first path.\n@@ -865,7 +875,7 @@ def find_package(import_name: str):\n     py_prefix = os.path.abspath(sys.prefix)\n \n     # installed to the system\n-    if package_path.startswith(py_prefix):\n+    if _path_is_relative_to(pathlib.PurePath(package_path), py_prefix):\n         return py_prefix, package_path\n \n     site_parent, site_folder = os.path.split(package_path)\n'",1.9230769230769231,1.925
tests/test_instance_config.py,tests/test_instance_config.py,3ba37d2afe6511c3f3153248f7342174bea5b131,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,'fix uninstalled package tests under tox',"'@@ -15,7 +15,6 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n-@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_main_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""main_app.py"")\n     app.write(\'import flask\\n\\napp = flask.Flask(""__main__"")\')\n@@ -27,7 +26,6 @@ def test_main_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == os.path.join(here, ""instance"")\n \n \n-@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""config_module_app.py"").write(\n         ""import os\\n""\n@@ -42,7 +40,6 @@ def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == str(modules_tmpdir.join(""instance""))\n \n \n-@pytest.mark.xfail(reason=""weird interaction with tox"")\n def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.mkdir(""config_package_app"")\n     init = app.join(""__init__.py"")\n'",1.2,1.2
tox.ini,tox.ini,3ba37d2afe6511c3f3153248f7342174bea5b131,88bcf78439b66b5fcba9f4d3a1c56307f98dbf1d,'fix uninstalled package tests under tox',"'@@ -9,6 +9,7 @@ envlist =\n skip_missing_interpreters = true\n \n [testenv]\n+envtmpdir = {toxworkdir}/tmp/{envname}\n deps =\n     -r requirements/tests.txt\n     min: -r requirements/tests-pallets-min.txt\n'",0,0
tests/test_instance_config.py,tests/test_instance_config.py,b06df0a792ceb5506da47e0c8fea09902c1058f9,3ba37d2afe6511c3f3153248f7342174bea5b131,'remove outdated instance path test',"'@@ -1,4 +1,3 @@\n-import os\n import sys\n \n import pytest\n@@ -15,17 +14,6 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n-def test_main_module_paths(modules_tmpdir, purge_module):\n-    app = modules_tmpdir.join(""main_app.py"")\n-    app.write(\'import flask\\n\\napp = flask.Flask(""__main__"")\')\n-    purge_module(""main_app"")\n-\n-    from main_app import app\n-\n-    here = os.path.abspath(os.getcwd())\n-    assert app.instance_path == os.path.join(here, ""instance"")\n-\n-\n def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(""config_module_app.py"").write(\n         ""import os\\n""\n'",1.2,1.2222222222222223
CHANGES.rst,CHANGES.rst,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -20,6 +20,8 @@ Unreleased\n     registering the blueprint will show a warning. In the next version,\n     this will become an error just like the application setup methods.\n     :issue:`4571`\n+-   ``before_first_request`` is deprecated. Run setup code when creating\n+    the application instead. :issue:`4605`\n \n \n Version 2.1.3\n@@ -1032,8 +1034,7 @@ Released 2011-09-29, codename Rakija\n     earlier feedback when users forget to import view code ahead of\n     time.\n -   Added the ability to register callbacks that are only triggered once\n-    at the beginning of the first request.\n-    (:meth:`Flask.before_first_request`)\n+    at the beginning of the first request. (``before_first_request``)\n -   Malformed JSON data will now trigger a bad request HTTP exception\n     instead of a value error which usually would result in a 500\n     internal server error if not handled. This is a backwards\n'",0,0
src/flask/app.py,src/flask/app.py,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -451,6 +451,10 @@ class Flask(Scaffold):\n         #: first request to this instance. To register a function, use the\n         #: :meth:`before_first_request` decorator.\n         #:\n+        #: .. deprecated:: 2.2\n+        #:     Will be removed in Flask 2.3. Run setup code when\n+        #:     creating the application instead.\n+        #:\n         #: .. versionadded:: 0.8\n         self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n \n@@ -1255,8 +1259,21 @@ class Flask(Scaffold):\n         The function will be called without any arguments and its return\n         value is ignored.\n \n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Run setup code when creating\n+            the application instead.\n+\n         .. versionadded:: 0.8\n         """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'before_first_request\' is deprecated and will be removed""\n+            "" in Flask 2.3. Run setup code while creating the""\n+            "" application instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         self.before_first_request_funcs.append(f)\n         return f\n \n@@ -1552,7 +1569,17 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        self.try_trigger_before_first_request_functions()\n+        # Run before_first_request functions if this is the thread\'s first request.\n+        # Inlined to avoid a method call on subsequent requests.\n+        # This is deprecated, will be removed in Flask 2.3.\n+        if not self._got_first_request:\n+            with self._before_request_lock:\n+                if not self._got_first_request:\n+                    for func in self.before_first_request_funcs:\n+                        self.ensure_sync(func)()\n+\n+                    self._got_first_request = True\n+\n         try:\n             request_started.send(self)\n             rv = self.preprocess_request()\n@@ -1591,22 +1618,6 @@ class Flask(Scaffold):\n             )\n         return response\n \n-    def try_trigger_before_first_request_functions(self) -> None:\n-        """"""Called before each request and will ensure that it triggers\n-        the :attr:`before_first_request_funcs` and only exactly once per\n-        application instance (which means process usually).\n-\n-        :internal:\n-        """"""\n-        if self._got_first_request:\n-            return\n-        with self._before_request_lock:\n-            if self._got_first_request:\n-                return\n-            for func in self.before_first_request_funcs:\n-                self.ensure_sync(func)()\n-            self._got_first_request = True\n-\n     def make_default_options_response(self) -> Response:\n         """"""This method is called to create the default ``OPTIONS`` response.\n         This can be changed through subclassing to change the default\n'",3.1267605633802815,3.157142857142857
src/flask/blueprints.py,src/flask/blueprints.py,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -543,7 +543,20 @@ class Blueprint(Scaffold):\n     ) -> ft.BeforeFirstRequestCallable:\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n+\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Run setup code when creating\n+            the application instead.\n         """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'before_app_first_request\' is deprecated and will be""\n+            "" removed in Flask 2.3. Use \'record_once\' instead to run""\n+            "" setup code when registering the blueprint."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n         return f\n \n'",2.303030303030303,2.303030303030303
tests/test_async.py,tests/test_async.py,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -107,10 +107,12 @@ def test_async_before_after_request():\n     def index():\n         return """"\n \n-    @app.before_first_request\n-    async def before_first():\n-        nonlocal app_first_called\n-        app_first_called = True\n+    with pytest.deprecated_call():\n+\n+        @app.before_first_request\n+        async def before_first():\n+            nonlocal app_first_called\n+            app_first_called = True\n \n     @app.before_request\n     async def before():\n'",1.0,1.0
tests/test_basic.py,tests/test_basic.py,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -1684,9 +1684,11 @@ def test_no_setup_after_first_request(app, client):\n def test_before_first_request_functions(app, client):\n     got = []\n \n-    @app.before_first_request\n-    def foo():\n-        got.append(42)\n+    with pytest.deprecated_call():\n+\n+        @app.before_first_request\n+        def foo():\n+            got.append(42)\n \n     client.get(""/"")\n     assert got == [42]\n@@ -1698,10 +1700,12 @@ def test_before_first_request_functions(app, client):\n def test_before_first_request_functions_concurrent(app, client):\n     got = []\n \n-    @app.before_first_request\n-    def foo():\n-        time.sleep(0.2)\n-        got.append(42)\n+    with pytest.deprecated_call():\n+\n+        @app.before_first_request\n+        def foo():\n+            time.sleep(0.2)\n+            got.append(42)\n \n     def get_and_assert():\n         client.get(""/"")\n'",1.0766283524904214,1.0766283524904214
tests/test_blueprints.py,tests/test_blueprints.py,96c97dec095f204b8a557c5ea804afdd329e3c43,7a2d5fb6df1f2c066b94dd88686137353ada9cc6,'deprecate before_first_request',"'@@ -722,9 +722,11 @@ def test_app_request_processing(app, client):\n     bp = flask.Blueprint(""bp"", __name__)\n     evts = []\n \n-    @bp.before_app_first_request\n-    def before_first_request():\n-        evts.append(""first"")\n+    with pytest.deprecated_call():\n+\n+        @bp.before_app_first_request\n+        def before_first_request():\n+            evts.append(""first"")\n \n     @bp.before_app_request\n     def before_app():\n'",1.0264900662251655,1.0264900662251655
CHANGES.rst,CHANGES.rst,6e23239567efde1c2e272db87c53444d6c22a1bb,aab1d9935e17e40104a28c89d4c669f7ab3cc579,'add View.init_every_request attribute',"'@@ -22,7 +22,9 @@ Unreleased\n     :issue:`4571`\n -   ``before_first_request`` is deprecated. Run setup code when creating\n     the application instead. :issue:`4605`\n-\n+-   Added the ``View.init_every_request`` class attribute. If a view\n+    subclass sets this to ``False``, the view will not create a new\n+    instance on every request. :issue:`2520`.\n \n Version 2.1.3\n -------------\n'",0,0
src/flask/views.py,src/flask/views.py,6e23239567efde1c2e272db87c53444d6c22a1bb,aab1d9935e17e40104a28c89d4c669f7ab3cc579,'add View.init_every_request attribute',"'@@ -59,6 +59,18 @@ class View:\n     #: .. versionadded:: 0.8\n     decorators: t.List[t.Callable] = []\n \n+    #: Create a new instance of this view class for every request by\n+    #: default. If a view subclass sets this to ``False``, the same\n+    #: instance is used for every request.\n+    #:\n+    #: A single instance is more efficient, especially if complex setup\n+    #: is done during init. However, storing data on ``self`` is no\n+    #: longer safe across requests, and :data:`~flask.g` should be used\n+    #: instead.\n+    #:\n+    #: .. versionadded:: 2.2\n+    init_every_request: t.ClassVar[bool] = True\n+\n     def dispatch_request(self) -> ft.ResponseReturnValue:\n         """"""Subclasses have to override this method to implement the\n         actual view function code.  This method is called with all\n@@ -69,19 +81,35 @@ class View:\n     @classmethod\n     def as_view(\n         cls, name: str, *class_args: t.Any, **class_kwargs: t.Any\n-    ) -> t.Callable:\n-        """"""Converts the class into an actual view function that can be used\n-        with the routing system.  Internally this generates a function on the\n-        fly which will instantiate the :class:`View` on each request and call\n-        the :meth:`dispatch_request` method on it.\n-\n-        The arguments passed to :meth:`as_view` are forwarded to the\n-        constructor of the class.\n+    ) -> ft.ViewCallable:\n+        """"""Convert the class into a view function that can be registered\n+        for a route.\n+\n+        By default, the generated view will create a new instance of the\n+        view class for every request and call its\n+        :meth:`dispatch_request` method. If the view class sets\n+        :attr:`init_every_request` to ``False``, the same instance will\n+        be used for every request.\n+\n+        The arguments passed to this method are forwarded to the view\n+        class ``__init__`` method.\n+\n+        .. versionchanged:: 2.2\n+            Added the ``init_every_request`` class attribute.\n         """"""\n+        if cls.init_every_request:\n+\n+            def view(**kwargs: t.Any) -> ft.ResponseReturnValue:\n+                self = view.view_class(  # type: ignore[attr-defined]\n+                    *class_args, **class_kwargs\n+                )\n+                return current_app.ensure_sync(self.dispatch_request)(**kwargs)\n+\n+        else:\n+            self = cls(*class_args, **class_kwargs)\n \n-        def view(*args: t.Any, **kwargs: t.Any) -> ft.ResponseReturnValue:\n-            self = view.view_class(*class_args, **class_kwargs)  # type: ignore\n-            return current_app.ensure_sync(self.dispatch_request)(*args, **kwargs)\n+            def view(**kwargs: t.Any) -> ft.ResponseReturnValue:\n+                return current_app.ensure_sync(self.dispatch_request)(**kwargs)\n \n         if cls.decorators:\n             view.__name__ = name\n@@ -146,7 +174,7 @@ class MethodView(View, metaclass=MethodViewType):\n         app.add_url_rule(\'/counter\', view_func=CounterAPI.as_view(\'counter\'))\n     """"""\n \n-    def dispatch_request(self, *args: t.Any, **kwargs: t.Any) -> ft.ResponseReturnValue:\n+    def dispatch_request(self, **kwargs: t.Any) -> ft.ResponseReturnValue:\n         meth = getattr(self, request.method.lower(), None)\n \n         # If the request method is HEAD and we don\'t have a handler for it\n@@ -155,4 +183,4 @@ class MethodView(View, metaclass=MethodViewType):\n             meth = getattr(self, ""get"", None)\n \n         assert meth is not None, f""Unimplemented method {request.method!r}""\n-        return current_app.ensure_sync(meth)(*args, **kwargs)\n+        return current_app.ensure_sync(meth)(**kwargs)\n'",3.0,2.8333333333333335
tests/test_views.py,tests/test_views.py,6e23239567efde1c2e272db87c53444d6c22a1bb,aab1d9935e17e40104a28c89d4c669f7ab3cc579,'add View.init_every_request attribute',"'@@ -240,3 +240,21 @@ def test_remove_method_from_parent(app, client):\n     assert client.get(""/"").data == b""GET""\n     assert client.post(""/"").status_code == 405\n     assert sorted(View.methods) == [""GET""]\n+\n+\n+def test_init_once(app, client):\n+    n = 0\n+\n+    class CountInit(flask.views.View):\n+        init_every_request = False\n+\n+        def __init__(self):\n+            nonlocal n\n+            n += 1\n+\n+        def dispatch_request(self):\n+            return str(n)\n+\n+    app.add_url_rule(""/"", view_func=CountInit.as_view(""index""))\n+    assert client.get(""/"").data == b""1""\n+    assert client.get(""/"").data == b""1""\n'",1.0,1.0
docs/views.rst,docs/views.rst,bab5a65e6eaee20ac1706fc9439ee538f59e652f,6e23239567efde1c2e272db87c53444d6c22a1bb,'rewrite class-based view docs',"'@@ -1,235 +1,319 @@\n-Pluggable Views\n-===============\n+Class-based Views\n+=================\n \n-.. versionadded:: 0.7\n+.. currentmodule:: flask.views\n \n-Flask 0.7 introduces pluggable views inspired by the generic views from\n-Django which are based on classes instead of functions.  The main\n-intention is that you can replace parts of the implementations and this\n-way have customizable pluggable views.\n+This page introduces using the :class:`View` and :class:`MethodView`\n+classes to write class-based views.\n+\n+A class-based view is a class that acts as a view function. Because it\n+is a class, different instances of the class can be created with\n+different arguments, to change the behavior of the view. This is also\n+known as generic, reusable, or pluggable views.\n+\n+An example of where this is useful is defining a class that creates an\n+API based on the database model it is initialized with.\n+\n+For more complex API behavior and customization, look into the various\n+API extensions for Flask.\n \n-Basic Principle\n----------------\n \n-Consider you have a function that loads a list of objects from the\n-database and renders into a template::\n+Basic Reusable View\n+-------------------\n \n-    @app.route(\'/users/\')\n-    def show_users(page):\n+Let\'s walk through an example converting a view function to a view\n+class. We start with a view function that queries a list of users then\n+renders a template to show the list.\n+\n+.. code-block:: python\n+\n+    @app.route(""/users/"")\n+    def user_list():\n         users = User.query.all()\n-        return render_template(\'users.html\', users=users)\n+        return render_template(""users.html"", users=users)\n \n-This is simple and flexible, but if you want to provide this view in a\n-generic fashion that can be adapted to other models and templates as well\n-you might want more flexibility.  This is where pluggable class-based\n-views come into place.  As the first step to convert this into a class\n-based view you would do this::\n+This works for the user model, but let\'s say you also had more models\n+that needed list pages. You\'d need to write another view function for\n+each model, even though the only thing that would change is the model\n+and template name.\n \n+Instead, you can write a :class:`View` subclass that will query a model\n+and render a template. As the first step, we\'ll convert the view to a\n+class without any customization.\n \n-    from flask.views import View\n+.. code-block:: python\n \n-    class ShowUsers(View):\n+    from flask.views import View\n \n+    class UserList(View):\n         def dispatch_request(self):\n             users = User.query.all()\n-            return render_template(\'users.html\', objects=users)\n+            return render_template(""users.html"", objects=users)\n \n-    app.add_url_rule(\'/users/\', view_func=ShowUsers.as_view(\'show_users\'))\n+    app.add_url_rule(""/users/"", view_func=UserList.as_view(""user_list""))\n \n-As you can see what you have to do is to create a subclass of\n-:class:`flask.views.View` and implement\n-:meth:`~flask.views.View.dispatch_request`.  Then we have to convert that\n-class into an actual view function by using the\n-:meth:`~flask.views.View.as_view` class method.  The string you pass to\n-that function is the name of the endpoint that view will then have.  But\n-this by itself is not helpful, so let\'s refactor the code a bit::\n+The :meth:`View.dispatch_request` method is the equivalent of the view\n+function. Calling :meth:`View.as_view` method will create a view\n+function that can be registered on the app with its\n+:meth:`~flask.Flask.add_url_rule` method. The first argument to\n+``as_view`` is the name to use to refer to the view with\n+:func:`~flask.url_for`.\n \n+.. note::\n \n-    from flask.views import View\n+    You can\'t decorate the class with ``@app.route()`` the way you\'d\n+    do with a basic view function.\n \n-    class ListView(View):\n+Next, we need to be able to register the same view class for different\n+models and templates, to make it more useful than the original function.\n+The class will take two arguments, the model and template, and store\n+them on ``self``. Then ``dispatch_request`` can reference these instead\n+of hard-coded values.\n \n-        def get_template_name(self):\n-            raise NotImplementedError()\n+.. code-block:: python\n \n-        def render_template(self, context):\n-            return render_template(self.get_template_name(), **context)\n+    class ListView(View):\n+        def __init__(self, model, template):\n+            self.model = model\n+            self.template = template\n \n         def dispatch_request(self):\n-            context = {\'objects\': self.get_objects()}\n-            return self.render_template(context)\n+            items = self.model.query.all()\n+            return render_template(self.template, items=items)\n+\n+Remember, we create the view function with ``View.as_view()`` instead of\n+creating the class directly. Any extra arguments passed to ``as_view``\n+are then passed when creating the class. Now we can register the same\n+view to handle multiple models.\n+\n+.. code-block:: python\n \n-    class UserView(ListView):\n+    app.add_url_rule(\n+        ""/users/"",\n+        view_func=ListView.as_view(""user_list"", User, ""users.html""),\n+    )\n+    app.add_url_rule(\n+        ""/stories/"",\n+        view_func=ListView.as_view(""story_list"", Story, ""stories.html""),\n+    )\n \n-        def get_template_name(self):\n-            return \'users.html\'\n \n-        def get_objects(self):\n-            return User.query.all()\n+URL Variables\n+-------------\n+\n+Any variables captured by the URL are passed as keyword arguments to the\n+``dispatch_request`` method, as they would be for a regular view\n+function.\n+\n+.. code-block:: python\n+\n+    class DetailView(View):\n+        def __init__(self, model):\n+            self.model = model\n+            self.template = f""{model.__name__.lower()}/detail.html""\n+\n+        def dispatch_request(self, id)\n+            item = self.model.query.get_or_404(id)\n+            return render_template(self.template, item=item)\n+\n+    app.add_url_rule(""/users/<int:id>"", view_func=DetailView.as_view(""user_detail""))\n+\n+\n+View Lifetime and ``self``\n+--------------------------\n+\n+By default, a new instance of the view class is created every time a\n+request is handled. This means that it is safe to write other data to\n+``self`` during the request, since the next request will not see it,\n+unlike other forms of global state.\n+\n+However, if your view class needs to do a lot of complex initialization,\n+doing it for every request is unnecessary and can be inefficient. To\n+avoid this, set :attr:`View.init_every_request` to ``False``, which will\n+only create one instance of the class and use it for every request. In\n+this case, writing to ``self`` is not safe. If you need to store data\n+during the request, use :data:`~flask.g` instead.\n+\n+In the ``ListView`` example, nothing writes to ``self`` during the\n+request, so it is more efficient to create a single instance.\n+\n+.. code-block:: python\n+\n+    class ListView(View):\n+        init_every_request = False\n \n-This of course is not that helpful for such a small example, but it\'s good\n-enough to explain the basic principle.  When you have a class-based view\n-the question comes up what ``self`` points to.  The way this works is that\n-whenever the request is dispatched a new instance of the class is created\n-and the :meth:`~flask.views.View.dispatch_request` method is called with\n-the parameters from the URL rule.  The class itself is instantiated with\n-the parameters passed to the :meth:`~flask.views.View.as_view` function.\n-For instance you can write a class like this::\n+        def __init__(self, model, template):\n+            self.model = model\n+            self.template = template\n \n-    class RenderTemplateView(View):\n-        def __init__(self, template_name):\n-            self.template_name = template_name\n         def dispatch_request(self):\n-            return render_template(self.template_name)\n+            items = self.model.query.all()\n+            return render_template(self.template, items=items)\n \n-And then you can register it like this::\n+Different instances will still be created each for each ``as_view``\n+call, but not for each request to those views.\n+\n+\n+View Decorators\n+---------------\n+\n+The view class itself is not the view function. View decorators need to\n+be applied to the view function returned by ``as_view``, not the class\n+itself. Set :attr:`View.decorators` to a list of decorators to apply.\n+\n+.. code-block:: python\n+\n+    class UserList(View):\n+        decorators = [cache(minutes=2), login_required]\n+\n+    app.add_url_rule(\'/users/\', view_func=UserList.as_view())\n+\n+If you didn\'t set ``decorators``, you could apply them manually instead.\n+This is equivalent to:\n+\n+.. code-block:: python\n+\n+    view = UserList.as_view(""users_list"")\n+    view = cache(minutes=2)(view)\n+    view = login_required(view)\n+    app.add_url_rule(\'/users/\', view_func=view)\n+\n+Keep in mind that order matters. If you\'re used to ``@decorator`` style,\n+this is equivalent to:\n+\n+.. code-block:: python\n+\n+    @app.route(""/users/"")\n+    @login_required\n+    @cache(minutes=2)\n+    def user_list():\n+        ...\n \n-    app.add_url_rule(\'/about\', view_func=RenderTemplateView.as_view(\n-        \'about_page\', template_name=\'about.html\'))\n \n Method Hints\n ------------\n \n-Pluggable views are attached to the application like a regular function by\n-either using :func:`~flask.Flask.route` or better\n-:meth:`~flask.Flask.add_url_rule`.  That however also means that you would\n-have to provide the names of the HTTP methods the view supports when you\n-attach this.  In order to move that information to the class you can\n-provide a :attr:`~flask.views.View.methods` attribute that has this\n-information::\n+A common pattern is to register a view with ``methods=[""GET"", ""POST""]``,\n+then check ``request.method == ""POST""`` to decide what to do. Setting\n+:attr:`View.methods` is equivalent to passing the list of methods to\n+``add_url_rule`` or ``route``.\n+\n+.. code-block:: python\n \n     class MyView(View):\n-        methods = [\'GET\', \'POST\']\n+        methods = [""GET"", ""POST""]\n \n         def dispatch_request(self):\n-            if request.method == \'POST\':\n+            if request.method == ""POST"":\n                 ...\n             ...\n \n-    app.add_url_rule(\'/myview\', view_func=MyView.as_view(\'myview\'))\n-\n-Method Based Dispatching\n-------------------------\n+    app.add_url_rule(\'/my-view\', view_func=MyView.as_view(\'my-view\'))\n \n-For RESTful APIs it\'s especially helpful to execute a different function\n-for each HTTP method.  With the :class:`flask.views.MethodView` you can\n-easily do that.  Each HTTP method maps to a method of the class with the\n-same name (just in lowercase)::\n+This is equivalent to the following, except further subclasses can\n+inherit or change the methods.\n \n-    from flask.views import MethodView\n+.. code-block:: python\n \n-    class UserAPI(MethodView):\n+    app.add_url_rule(\n+        ""/my-view"",\n+        view_func=MyView.as_view(""my-view""),\n+        methods=[""GET"", ""POST""],\n+    )\n \n-        def get(self):\n-            users = User.query.all()\n-            ...\n \n-        def post(self):\n-            user = User.from_form_data(request.form)\n-            ...\n+Method Dispatching and APIs\n+---------------------------\n \n-    app.add_url_rule(\'/users/\', view_func=UserAPI.as_view(\'users\'))\n+For APIs it can be helpful to use a different function for each HTTP\n+method. :class:`MethodView` extends the basic :class:`View` to dispatch\n+to different methods of the class based on the request method. Each HTTP\n+method maps to a method of the class with the same (lowercase) name.\n \n-That way you also don\'t have to provide the\n-:attr:`~flask.views.View.methods` attribute.  It\'s automatically set based\n-on the methods defined in the class.\n+:class:`MethodView` automatically sets :attr:`View.methods` based on the\n+methods defined by the class. It even knows how to handle subclasses\n+that override or define other methods.\n \n-Decorating Views\n-----------------\n+We can make a generic ``ItemAPI`` class that provides get (detail),\n+patch (edit), and delete methods for a given model. A ``GroupAPI`` can\n+provide get (list) and post (create) methods.\n \n-Since the view class itself is not the view function that is added to the\n-routing system it does not make much sense to decorate the class itself.\n-Instead you either have to decorate the return value of\n-:meth:`~flask.views.View.as_view` by hand::\n+.. code-block:: python\n \n-    def user_required(f):\n-        """"""Checks whether user is logged in or raises error 401.""""""\n-        def decorator(*args, **kwargs):\n-            if not g.user:\n-                abort(401)\n-            return f(*args, **kwargs)\n-        return decorator\n+    from flask.views import MethodView\n \n-    view = user_required(UserAPI.as_view(\'users\'))\n-    app.add_url_rule(\'/users/\', view_func=view)\n+    class ItemAPI(MethodView):\n+        init_every_request = False\n \n-Starting with Flask 0.8 there is also an alternative way where you can\n-specify a list of decorators to apply in the class declaration::\n+        def __init__(self, model):\n+            self.model\n+            self.validator = generate_validator(model)\n \n-    class UserAPI(MethodView):\n-        decorators = [user_required]\n+        def _get_item(self, id):\n+            return self.model.query.get_or_404(id)\n \n-Due to the implicit self from the caller\'s perspective you cannot use\n-regular view decorators on the individual methods of the view however,\n-keep this in mind.\n+        def get(self, id):\n+            user = self._get_item(id)\n+            return jsonify(item.to_json())\n \n-Method Views for APIs\n----------------------\n+        def patch(self, id):\n+            item = self._get_item(id)\n+            errors = self.validator.validate(item, request.json)\n \n-Web APIs are often working very closely with HTTP verbs so it makes a lot\n-of sense to implement such an API based on the\n-:class:`~flask.views.MethodView`.  That said, you will notice that the API\n-will require different URL rules that go to the same method view most of\n-the time.  For instance consider that you are exposing a user object on\n-the web:\n+            if errors:\n+                return jsonify(errors), 400\n \n-=============== =============== ======================================\n-URL             Method          Description\n---------------- --------------- --------------------------------------\n-``/users/``     ``GET``         Gives a list of all users\n-``/users/``     ``POST``        Creates a new user\n-``/users/<id>`` ``GET``         Shows a single user\n-``/users/<id>`` ``PUT``         Updates a single user\n-``/users/<id>`` ``DELETE``      Deletes a single user\n-=============== =============== ======================================\n+            item.update_from_json(request.json)\n+            db.session.commit()\n+            return jsonify(item.to_json())\n \n-So how would you go about doing that with the\n-:class:`~flask.views.MethodView`?  The trick is to take advantage of the\n-fact that you can provide multiple rules to the same view.\n+        def delete(self, id):\n+            item = self._get_item(id)\n+            db.session.delete(item)\n+            db.session.commit()\n+            return """", 204\n \n-Let\'s assume for the moment the view would look like this::\n+    class GroupAPI(MethodView):\n+        init_every_request = False\n \n-    class UserAPI(MethodView):\n+        def __init__(self, model):\n+            self.model = model\n+            self.validator = generate_validator(model, create=True)\n \n-        def get(self, user_id):\n-            if user_id is None:\n-                # return a list of users\n-                pass\n-            else:\n-                # expose a single user\n-                pass\n+        def get(self):\n+            items = self.model.query.all()\n+            return jsonify([item.to_json() for item in items])\n \n         def post(self):\n-            # create a new user\n-            pass\n-\n-        def delete(self, user_id):\n-            # delete a single user\n-            pass\n-\n-        def put(self, user_id):\n-            # update a single user\n-            pass\n-\n-So how do we hook this up with the routing system?  By adding two rules\n-and explicitly mentioning the methods for each::\n-\n-    user_view = UserAPI.as_view(\'user_api\')\n-    app.add_url_rule(\'/users/\', defaults={\'user_id\': None},\n-                     view_func=user_view, methods=[\'GET\',])\n-    app.add_url_rule(\'/users/\', view_func=user_view, methods=[\'POST\',])\n-    app.add_url_rule(\'/users/<int:user_id>\', view_func=user_view,\n-                     methods=[\'GET\', \'PUT\', \'DELETE\'])\n-\n-If you have a lot of APIs that look similar you can refactor that\n-registration code::\n-\n-    def register_api(view, endpoint, url, pk=\'id\', pk_type=\'int\'):\n-        view_func = view.as_view(endpoint)\n-        app.add_url_rule(url, defaults={pk: None},\n-                         view_func=view_func, methods=[\'GET\',])\n-        app.add_url_rule(url, view_func=view_func, methods=[\'POST\',])\n-        app.add_url_rule(f\'{url}<{pk_type}:{pk}>\', view_func=view_func,\n-                         methods=[\'GET\', \'PUT\', \'DELETE\'])\n-\n-    register_api(UserAPI, \'user_api\', \'/users/\', pk=\'user_id\')\n+            errors = self.validator.validate(request.json)\n+\n+            if errors:\n+                return jsonify(errors), 400\n+\n+            db.session.add(self.model.from_json(request.json))\n+            db.session.commit()\n+            return jsonify(item.to_json())\n+\n+    def register_api(app, model, url):\n+        app.add_url_rule(f""/{name}/<int:id>"", view_func=ItemAPI(f""{name}-item"", model))\n+        app.add_url_rule(f""/{name}/"", view_func=GroupAPI(f""{name}-group"", model))\n+\n+    register_api(app, User, ""users"")\n+    register_api(app, Story, ""stories"")\n+\n+This produces the following views, a standard REST API!\n+\n+================= ========== ===================\n+URL               Method     Description\n+----------------- ---------- -------------------\n+``/users/``       ``GET``    List all users\n+``/users/``       ``POST``   Create a new user\n+``/users/<id>``   ``GET``    Show a single user\n+``/users/<id>``   ``PATCH``  Update a user\n+``/users/<id>``   ``DELETE`` Delete a user\n+``/stories/``     ``GET``    List all stories\n+``/stories/``     ``POST``   Create a new story\n+``/stories/<id>`` ``GET``    Show a single story\n+``/stories/<id>`` ``PATCH``  Update a story\n+``/stories/<id>`` ``DELETE`` Delete a story\n+================= ========== ===================\n'",1.2,1.2222222222222223
src/flask/views.py,src/flask/views.py,bab5a65e6eaee20ac1706fc9439ee538f59e652f,6e23239567efde1c2e272db87c53444d6c22a1bb,'rewrite class-based view docs',"'@@ -11,53 +11,54 @@ http_method_funcs = frozenset(\n \n \n class View:\n-    """"""Alternative way to use view functions.  A subclass has to implement\n-    :meth:`dispatch_request` which is called with the view arguments from\n-    the URL routing system.  If :attr:`methods` is provided the methods\n-    do not have to be passed to the :meth:`~flask.Flask.add_url_rule`\n-    method explicitly::\n+    """"""Subclass this class and override :meth:`dispatch_request` to\n+    create a generic class-based view. Call :meth:`as_view` to create a\n+    view function that creates an instance of the class with the given\n+    arguments and calls its ``dispatch_request`` method with any URL\n+    variables.\n \n-        class MyView(View):\n-            methods = [\'GET\']\n+    See :doc:`views` for a detailed guide.\n \n-            def dispatch_request(self, name):\n-                return f""Hello {name}!""\n+    .. code-block:: python\n+\n+        class Hello(View):\n+            init_every_request = False\n \n-        app.add_url_rule(\'/hello/<name>\', view_func=MyView.as_view(\'myview\'))\n+            def dispatch_request(self, name):\n+                return f""Hello, {name}!""\n \n-    When you want to decorate a pluggable view you will have to either do that\n-    when the view function is created (by wrapping the return value of\n-    :meth:`as_view`) or you can use the :attr:`decorators` attribute::\n+        app.add_url_rule(\n+            ""/hello/<name>"", view_func=Hello.as_view(""hello"")\n+        )\n \n-        class SecretView(View):\n-            methods = [\'GET\']\n-            decorators = [superuser_required]\n+    Set :attr:`methods` on the class to change what methods the view\n+    accepts.\n \n-            def dispatch_request(self):\n-                ...\n+    Set :attr:`decorators` on the class to apply a list of decorators to\n+    the generated view function. Decorators applied to the class itself\n+    will not be applied to the generated view function!\n \n-    The decorators stored in the decorators list are applied one after another\n-    when the view function is created.  Note that you can *not* use the class\n-    based decorators since those would decorate the view class and not the\n-    generated view function!\n+    Set :attr:`init_every_request` to ``False`` for efficiency, unless\n+    you need to store request-global data on ``self``.\n     """"""\n \n-    #: A list of methods this view can handle.\n-    methods: t.Optional[t.List[str]] = None\n+    #: The methods this view is registered for. Uses the same default\n+    #: (``[""GET"", ""HEAD"", ""OPTIONS""]``) as ``route`` and\n+    #: ``add_url_rule`` by default.\n+    methods: t.ClassVar[t.Optional[t.List[str]]] = None\n \n-    #: Setting this disables or force-enables the automatic options handling.\n-    provide_automatic_options: t.Optional[bool] = None\n+    #: Control whether the ``OPTIONS`` method is handled automatically.\n+    #: Uses the same default (``True``) as ``route`` and\n+    #: ``add_url_rule`` by default.\n+    provide_automatic_options: t.ClassVar[t.Optional[bool]] = None\n \n-    #: The canonical way to decorate class-based views is to decorate the\n-    #: return value of as_view().  However since this moves parts of the\n-    #: logic from the class declaration to the place where it\'s hooked\n-    #: into the routing system.\n-    #:\n-    #: You can place one or more decorators in this list and whenever the\n-    #: view function is created the result is automatically decorated.\n+    #: A list of decorators to apply, in order, to the generated view\n+    #: function. Remember that ``@decorator`` syntax is applied bottom\n+    #: to top, so the first decorator in the list would be the bottom\n+    #: decorator.\n     #:\n     #: .. versionadded:: 0.8\n-    decorators: t.List[t.Callable] = []\n+    decorators: t.ClassVar[t.List[t.Callable]] = []\n \n     #: Create a new instance of this view class for every request by\n     #: default. If a view subclass sets this to ``False``, the same\n@@ -72,9 +73,9 @@ class View:\n     init_every_request: t.ClassVar[bool] = True\n \n     def dispatch_request(self) -> ft.ResponseReturnValue:\n-        """"""Subclasses have to override this method to implement the\n-        actual view function code.  This method is called with all\n-        the arguments from the URL rule.\n+        """"""The actual view function behavior. Subclasses must override\n+        this and return a valid response. Any variables from the URL\n+        rule are passed as keyword arguments.\n         """"""\n         raise NotImplementedError()\n \n@@ -159,19 +160,30 @@ class MethodViewType(type):\n \n \n class MethodView(View, metaclass=MethodViewType):\n-    """"""A class-based view that dispatches request methods to the corresponding\n-    class methods. For example, if you implement a ``get`` method, it will be\n-    used to handle ``GET`` requests. ::\n+    """"""Dispatches request methods to the corresponding instance methods.\n+    For example, if you implement a ``get`` method, it will be used to\n+    handle ``GET`` requests.\n+\n+    This can be useful for defining a REST API.\n+\n+    :attr:`methods` is automatically set based on the methods defined on\n+    the class.\n+\n+    See :doc:`views` for a detailed guide.\n+\n+    .. code-block:: python\n \n         class CounterAPI(MethodView):\n             def get(self):\n-                return session.get(\'counter\', 0)\n+                return str(session.get(""counter"", 0))\n \n             def post(self):\n-                session[\'counter\'] = session.get(\'counter\', 0) + 1\n-                return \'OK\'\n+                session[""counter""] = session.get(""counter"", 0) + 1\n+                return redirect(url_for(""counter""))\n \n-        app.add_url_rule(\'/counter\', view_func=CounterAPI.as_view(\'counter\'))\n+        app.add_url_rule(\n+            ""/counter"", view_func=CounterAPI.as_view(""counter"")\n+        )\n     """"""\n \n     def dispatch_request(self, **kwargs: t.Any) -> ft.ResponseReturnValue:\n'",2.8333333333333335,2.8333333333333335
src/flask/views.py,src/flask/views.py,45174bf9a1e96e51ce589c7aa2c151249d1fdf11,bab5a65e6eaee20ac1706fc9439ee538f59e652f,'use __init_subclass__ instead of metaclass for MethodView',"'@@ -45,7 +45,7 @@ class View:\n     #: The methods this view is registered for. Uses the same default\n     #: (``[""GET"", ""HEAD"", ""OPTIONS""]``) as ``route`` and\n     #: ``add_url_rule`` by default.\n-    methods: t.ClassVar[t.Optional[t.List[str]]] = None\n+    methods: t.ClassVar[t.Optional[t.Collection[str]]] = None\n \n     #: Control whether the ``OPTIONS`` method is handled automatically.\n     #: Uses the same default (``True``) as ``route`` and\n@@ -132,34 +132,7 @@ class View:\n         return view\n \n \n-class MethodViewType(type):\n-    """"""Metaclass for :class:`MethodView` that determines what methods the view\n-    defines.\n-    """"""\n-\n-    def __init__(cls, name, bases, d):\n-        super().__init__(name, bases, d)\n-\n-        if ""methods"" not in d:\n-            methods = set()\n-\n-            for base in bases:\n-                if getattr(base, ""methods"", None):\n-                    methods.update(base.methods)\n-\n-            for key in http_method_funcs:\n-                if hasattr(cls, key):\n-                    methods.add(key.upper())\n-\n-            # If we have no method at all in there we don\'t want to add a\n-            # method list. This is for instance the case for the base class\n-            # or another subclass of a base method view that does not introduce\n-            # new methods.\n-            if methods:\n-                cls.methods = methods\n-\n-\n-class MethodView(View, metaclass=MethodViewType):\n+class MethodView(View):\n     """"""Dispatches request methods to the corresponding instance methods.\n     For example, if you implement a ``get`` method, it will be used to\n     handle ``GET`` requests.\n@@ -186,6 +159,23 @@ class MethodView(View, metaclass=MethodViewType):\n         )\n     """"""\n \n+    def __init_subclass__(cls, **kwargs: t.Any) -> None:\n+        super().__init_subclass__(**kwargs)\n+\n+        if ""methods"" not in cls.__dict__:\n+            methods = set()\n+\n+            for base in cls.__bases__:\n+                if getattr(base, ""methods"", None):\n+                    methods.update(base.methods)  # type: ignore[attr-defined]\n+\n+            for key in http_method_funcs:\n+                if hasattr(cls, key):\n+                    methods.add(key.upper())\n+\n+            if methods:\n+                cls.methods = methods\n+\n     def dispatch_request(self, **kwargs: t.Any) -> ft.ResponseReturnValue:\n         meth = getattr(self, request.method.lower(), None)\n \n'",2.8333333333333335,2.8333333333333335
examples/javascript/README.rst,examples/javascript/README.rst,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"""@@ -3,15 +3,15 @@ JavaScript Ajax Example\n \n Demonstrates how to post form data and process a JSON response using\n JavaScript. This allows making requests without navigating away from the\n-page. Demonstrates using |XMLHttpRequest|_, |fetch|_, and\n-|jQuery.ajax|_. See the `Flask docs`_ about jQuery and Ajax.\n-\n-.. |XMLHttpRequest| replace:: ``XMLHttpRequest``\n-.. _XMLHttpRequest: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n+page. Demonstrates using |fetch|_, |XMLHttpRequest|_,  and\n+|jQuery.ajax|_. See the `Flask docs`_ about JavaScript and Ajax.\n \n .. |fetch| replace:: ``fetch``\n .. _fetch: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n \n+.. |XMLHttpRequest| replace:: ``XMLHttpRequest``\n+.. _XMLHttpRequest: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n+\n .. |jQuery.ajax| replace:: ``jQuery.ajax``\n .. _jQuery.ajax: https://api.jquery.com/jQuery.ajax/\n \n@@ -21,7 +21,7 @@ page. Demonstrates using |XMLHttpRequest|_, |fetch|_, and\n Install\n -------\n \n-::\n+.. code-block:: text\n \n     $ python3 -m venv venv\n     $ . venv/bin/activate\n@@ -31,7 +31,7 @@ Install\n Run\n ---\n \n-::\n+.. code-block:: text\n \n     $ export FLASK_APP=js_example\n     $ flask run\n@@ -42,7 +42,7 @@ Open http://127.0.0.1:5000 in a browser.\n Test\n ----\n \n-::\n+.. code-block:: text\n \n     $ pip install -e '.[test]'\n     $ coverage run -m pytest\n""",0,0
examples/javascript/js_example/templates/base.html,examples/javascript/js_example/templates/base.html,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -1,7 +1,7 @@\n <!doctype html>\n <title>JavaScript Example</title>\n-<link rel=""stylesheet"" href=""https://unpkg.com/sakura.css@1.0.0/css/normalize.css"">\n-<link rel=""stylesheet"" href=""https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css"">\n+<link rel=""stylesheet"" href=""https://unpkg.com/normalize.css@8.0.1/normalize.css"">\n+<link rel=""stylesheet"" href=""https://unpkg.com/sakura.css@1.3.1/css/sakura.css"">\n <style>\n   ul { margin: 0; padding: 0; display: flex; list-style-type: none; }\n   li > * { padding: 1em; }\n@@ -13,10 +13,10 @@\n </style>\n <ul>\n   <li><span>Type:</span>\n-  <li class=""{% if js == \'plain\' %}active{% endif %}"">\n-    <a href=""{{ url_for(\'index\', js=\'plain\') }}"">Plain</a>\n   <li class=""{% if js == \'fetch\' %}active{% endif %}"">\n     <a href=""{{ url_for(\'index\', js=\'fetch\') }}"">Fetch</a>\n+  <li class=""{% if js == \'xhr\' %}active{% endif %}"">\n+    <a href=""{{ url_for(\'index\', js=\'xhr\') }}"">XHR</a>\n   <li class=""{% if js == \'jquery\' %}active{% endif %}"">\n     <a href=""{{ url_for(\'index\', js=\'jquery\') }}"">jQuery</a>\n </ul>\n'",0,0
examples/javascript/js_example/templates/fetch.html,examples/javascript/js_example/templates/fetch.html,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -2,14 +2,11 @@\n \n {% block intro %}\n   <a href=""https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch""><code>fetch</code></a>\n-  is the <em>new</em> plain JavaScript way to make requests. It\'s\n-  supported in all modern browsers except IE, which requires a\n-  <a href=""https://github.com/github/fetch"">polyfill</a>.\n+  is the <em>modern</em> plain JavaScript way to make requests. It\'s\n+  supported in all modern browsers.\n {% endblock %}\n \n {% block script %}\n-  <script src=""https://unpkg.com/promise-polyfill@7.1.2/dist/polyfill.min.js""></script>\n-  <script src=""https://unpkg.com/whatwg-fetch@2.0.4/fetch.js""></script>\n   <script>\n     function addSubmit(ev) {\n       ev.preventDefault();\n'",0,0
examples/javascript/js_example/templates/plain.html,examples/javascript/js_example/templates/xhr.html,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -2,8 +2,9 @@\n \n {% block intro %}\n   <a href=""https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest""><code>XMLHttpRequest</code></a>\n-  is the plain JavaScript way to make requests. It\'s natively supported\n-  by all browsers.\n+  is the original JavaScript way to make requests. It\'s natively supported\n+  by all browsers, but has been superseded by\n+  <a href=""{{ url_for(""index"", js=""fetch"") }}""><code>fetch</code></a>.\n {% endblock %}\n \n {% block script %}\n'",0,0
examples/javascript/js_example/views.py,examples/javascript/js_example/views.py,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -5,8 +5,8 @@ from flask import request\n from js_example import app\n \n \n-@app.route(""/"", defaults={""js"": ""plain""})\n-@app.route(""/<any(plain, jquery, fetch):js>"")\n+@app.route(""/"", defaults={""js"": ""fetch""})\n+@app.route(""/<any(xhr, jquery, fetch):js>"")\n def index(js):\n     return render_template(f""{js}.html"", js=js)\n \n'",1.0,1.0
examples/javascript/setup.cfg,examples/javascript/setup.cfg,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -1,6 +1,6 @@\n [metadata]\n name = js_example\n-version = 1.0.0\n+version = 1.1.0\n url = https://flask.palletsprojects.com/patterns/jquery/\n license = BSD-3-Clause\n maintainer = Pallets\n'",0,0
examples/javascript/tests/test_js_example.py,examples/javascript/tests/test_js_example.py,6f6e3289da182593fb296da072049ade729adeea,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'remove javascript fetch polyfill',"'@@ -5,8 +5,8 @@ from flask import template_rendered\n @pytest.mark.parametrize(\n     (""path"", ""template_name""),\n     (\n-        (""/"", ""plain.html""),\n-        (""/plain"", ""plain.html""),\n+        (""/"", ""xhr.html""),\n+        (""/plain"", ""xhr.html""),\n         (""/fetch"", ""fetch.html""),\n         (""/jquery"", ""jquery.html""),\n     ),\n'",1.0,1.0
src/flask/helpers.py,src/flask/helpers.py,9934528c8f7e3aa6f4a1c800cba439e5425a5093,c7f2ab8e7a512bd643bc640ce015bbe48e74e16e,'Update send_from_directory docstring',"""@@ -649,7 +649,8 @@ def send_from_directory(\n     If the final path does not point to an existing regular file,\n     raises a 404 :exc:`~werkzeug.exceptions.NotFound` error.\n \n-    :param directory: The directory that ``path`` must be located under.\n+    :param directory: The directory that ``path`` must be located under,\n+        relative to the current application's root path.\n     :param path: The path to the file to send, relative to\n         ``directory``.\n     :param kwargs: Arguments to pass to :func:`send_file`.\n""",2.9523809523809526,2.9523809523809526
docs/patterns/index.rst,docs/patterns/index.rst,2f3c87dcb8492f082a2f3ece444773d9db30171b,6f6e3289da182593fb296da072049ade729adeea,'rewrite javascript docs',"'@@ -29,7 +29,7 @@ collected in the following pages.\n    wtforms\n    templateinheritance\n    flashing\n-   jquery\n+   javascript\n    lazyloading\n    mongoengine\n    favicon\n'",0,0
docs/async-await.rst,docs/async-await.rst,2ea77c278282f04a8a18c3ced88ef1e048f8ed4a,9398630a8f002b2d1729246846b167eaf1090b92,'rewrite deployment docs',"'@@ -70,8 +70,8 @@ If you wish to use background tasks it is best to use a task queue to\n trigger background work, rather than spawn tasks in a view\n function. With that in mind you can spawn asyncio tasks by serving\n Flask with an ASGI server and utilising the asgiref WsgiToAsgi adapter\n-as described in :ref:`asgi`. This works as the adapter creates an\n-event loop that runs continually.\n+as described in :doc:`deploying/asgi`. This works as the adapter creates\n+an event loop that runs continually.\n \n \n When to use Quart instead\n'",1.0,1.0
docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,a9878c018bdecc377788204a3bc93497ec1f050a,b0a144d0c0acacab9d6cc7ced256d0e841ec8009,'remove mod_wsgi-standalone',"'@@ -7,8 +7,7 @@ start the server without needing to write Apache httpd configuration.\n \n *   Tightly integrated with Apache httpd.\n *   Supports Windows directly.\n-*   Requires a compiler to install. Requires Apache installed separately\n-    on Windows.\n+*   Requires a compiler and the Apache development headers to install.\n *   Does not require a reverse proxy setup.\n \n This page outlines the basics of running mod_wsgi-express, not the more\n@@ -24,12 +23,12 @@ understand what features are available.\n Installing\n ----------\n \n-On Linux/Mac, the most straightforward way to install mod_wsgi is to\n-install the ``mod_wsgi-standalone`` package, which will compile an\n-up-to-date version of Apache httpd as well.\n+Installing mod_wsgi requires a compiler and the Apache server and\n+development headers installed. You will get an error if they are not.\n+How to install them depends on the OS and package manager that you use.\n \n Create a virtualenv, install your application, then install\n-``mod_wsgi-standalone``.\n+``mod_wsgi``.\n \n .. code-block:: text\n \n@@ -37,16 +36,6 @@ Create a virtualenv, install your application, then install\n     $ python -m venv venv\n     $ . venv/bin/activate\n     $ pip install .  # install your application\n-    $ pip install mod_wsgi-standalone\n-\n-If you want to use the system-installed version of Apache httpd\n-(required on Windows, optional but faster on Linux/Mac), install the\n-``mod_wsgi`` package instead. You will get an error if Apache and its\n-development headers are not available. How to install them depends on\n-what OS and package manager you use.\n-\n-.. code-block:: text\n-\n     $ pip install mod_wsgi\n \n \n'",0,0
docs/deploying/eventlet.rst,docs/deploying/eventlet.rst,9c50b8fc1ca160803f7368fc44f12591da856fd4,a9878c018bdecc377788204a3bc93497ec1f050a,'fix formatting',"'@@ -44,7 +44,7 @@ Running\n -------\n \n To use eventlet to serve your application, write a script that imports\n-its ```wsgi.server``, as well as your app or app factory.\n+its ``wsgi.server``, as well as your app or app factory.\n \n .. code-block:: python\n     :caption: ``wsgi.py``\n'",0,0
src/flask/app.py,src/flask/app.py,4f03a769d44f6740490dd4ddf70e094c12a6090c,97298e06fe19298c3ff9d2e0ed9ba70bb3fda2c8,"""edit some cli messages\n\ndev server message doesn't show one of the lines in grey\napp.run message uses click.secho instead of warning""","'@@ -10,6 +10,7 @@ from itertools import chain\n from threading import Lock\n from types import TracebackType\n \n+import click\n from werkzeug.datastructures import Headers\n from werkzeug.datastructures import ImmutableDict\n from werkzeug.exceptions import Aborter\n@@ -23,6 +24,7 @@ from werkzeug.routing import MapAdapter\n from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n+from werkzeug.serving import is_running_from_reloader\n from werkzeug.urls import url_quote\n from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n@@ -908,12 +910,18 @@ class Flask(Scaffold):\n             The default port is now picked from the ``SERVER_NAME``\n             variable.\n         """"""\n-        # Change this into a no-op if the server is invoked from the\n-        # command line. Have a look at cli.py for more information.\n+        # Ignore this call so that it doesn\'t start another server if\n+        # the \'flask run\' command is used.\n         if os.environ.get(""FLASK_RUN_FROM_CLI"") == ""true"":\n-            from .debughelpers import explain_ignored_app_run\n+            if not is_running_from_reloader():\n+                click.secho(\n+                    "" * Ignoring a call to \'app.run()\', the server is""\n+                    "" already being run with the \'flask run\' command.\\n""\n+                    ""   Only call \'app.run()\' in an \'if __name__ ==""\n+                    \' ""__main__""\\\' guard.\',\n+                    fg=""red"",\n+                )\n \n-            explain_ignored_app_run()\n             return\n \n         if get_load_dotenv(load_dotenv):\n'",3.157142857142857,3.1714285714285713
src/flask/cli.py,src/flask/cli.py,4f03a769d44f6740490dd4ddf70e094c12a6090c,97298e06fe19298c3ff9d2e0ed9ba70bb3fda2c8,"""edit some cli messages\n\ndev server message doesn't show one of the lines in grey\napp.run message uses click.secho instead of warning""","'@@ -11,6 +11,7 @@ from threading import Lock\n from threading import Thread\n \n import click\n+from werkzeug.serving import is_running_from_reloader\n from werkzeug.utils import import_string\n \n from .globals import current_app\n@@ -273,7 +274,7 @@ class DispatchingApp:\n         self._bg_loading_exc = None\n \n         if use_eager_loading is None:\n-            use_eager_loading = os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true""\n+            use_eager_loading = not is_running_from_reloader()\n \n         if use_eager_loading:\n             self._load_unlocked()\n@@ -546,12 +547,6 @@ class FlaskGroup(AppGroup):\n         return sorted(rv)\n \n     def main(self, *args, **kwargs):\n-        # Set a global flag that indicates that we were invoked from the\n-        # command line interface. This is detected by Flask.run to make the\n-        # call into a no-op. This is necessary to avoid ugly errors when the\n-        # script that is loaded here also attempts to start a server.\n-        os.environ[""FLASK_RUN_FROM_CLI""] = ""true""\n-\n         if get_load_dotenv(self.load_dotenv):\n             load_dotenv()\n \n@@ -637,7 +632,7 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n     """"""Show extra startup messages the first time the server is run,\n     ignoring the reloader.\n     """"""\n-    if os.environ.get(""WERKZEUG_RUN_MAIN"") == ""true"":\n+    if is_running_from_reloader():\n         return\n \n     if app_import_path is not None:\n@@ -653,10 +648,10 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n     if env == ""production"":\n         click.secho(\n             ""   WARNING: This is a development server. Do not use it in""\n-            "" a production deployment."",\n+            "" a production deployment.\\n   Use a production WSGI server""\n+            "" instead."",\n             fg=""red"",\n         )\n-        click.secho(""   Use a production WSGI server instead."", dim=True)\n \n     if debug is not None:\n         click.echo(f"" * Debug mode: {\'on\' if debug else \'off\'}"")\n'",4.142857142857143,4.142857142857143
src/flask/debughelpers.py,src/flask/debughelpers.py,4f03a769d44f6740490dd4ddf70e094c12a6090c,97298e06fe19298c3ff9d2e0ed9ba70bb3fda2c8,"""edit some cli messages\n\ndev server message doesn't show one of the lines in grey\napp.run message uses click.secho instead of warning""","'@@ -1,6 +1,4 @@\n-import os\n import typing as t\n-from warnings import warn\n \n from .app import Flask\n from .blueprints import Blueprint\n@@ -159,16 +157,3 @@ def explain_template_loading_attempts(app: Flask, template, attempts) -> None:\n         info.append(""  See https://flask.palletsprojects.com/blueprints/#templates"")\n \n     app.logger.info(""\\n"".join(info))\n-\n-\n-def explain_ignored_app_run() -> None:\n-    if os.environ.get(""WERKZEUG_RUN_MAIN"") != ""true"":\n-        warn(\n-            Warning(\n-                ""Silently ignoring app.run() because the application is""\n-                "" run from the flask command line executable. Consider""\n-                \' putting app.run() behind an if __name__ == ""__main__""\'\n-                "" guard to silence this warning.""\n-            ),\n-            stacklevel=3,\n-        )\n'",4.0,4.285714285714286
CHANGES.rst,CHANGES.rst,aa801c431ad1f979bce3ea1afbd88e7796ebfd7e,4f03a769d44f6740490dd4ddf70e094c12a6090c,'FlaskGroup can be nested',"'@@ -25,6 +25,9 @@ Unreleased\n -   Added the ``View.init_every_request`` class attribute. If a view\n     subclass sets this to ``False``, the view will not create a new\n     instance on every request. :issue:`2520`.\n+-   A ``flask.cli.FlaskGroup`` Click group can be nested as a\n+    sub-command in a custom CLI. :issue:`3263`\n+\n \n Version 2.1.3\n -------------\n'",0,0
src/flask/cli.py,src/flask/cli.py,aa801c431ad1f979bce3ea1afbd88e7796ebfd7e,4f03a769d44f6740490dd4ddf70e094c12a6090c,'FlaskGroup can be nested',"'@@ -5,6 +5,7 @@ import platform\n import re\n import sys\n import traceback\n+import typing as t\n from functools import update_wrapper\n from operator import attrgetter\n from threading import Lock\n@@ -478,7 +479,13 @@ class FlaskGroup(AppGroup):\n         if add_version_option:\n             params.append(version_option)\n \n-        AppGroup.__init__(self, params=params, **extra)\n+        if ""context_settings"" not in extra:\n+            extra[""context_settings""] = {}\n+\n+        extra[""context_settings""].setdefault(""auto_envvar_prefix"", ""FLASK"")\n+\n+        super().__init__(params=params, **extra)\n+\n         self.create_app = create_app\n         self.load_dotenv = load_dotenv\n         self.set_debug_flag = set_debug_flag\n@@ -546,20 +553,22 @@ class FlaskGroup(AppGroup):\n \n         return sorted(rv)\n \n-    def main(self, *args, **kwargs):\n+    def make_context(\n+        self,\n+        info_name: t.Optional[str],\n+        args: t.List[str],\n+        parent: t.Optional[click.Context] = None,\n+        **extra: t.Any,\n+    ) -> click.Context:\n         if get_load_dotenv(self.load_dotenv):\n             load_dotenv()\n \n-        obj = kwargs.get(""obj"")\n-\n-        if obj is None:\n-            obj = ScriptInfo(\n+        if ""obj"" not in extra and ""obj"" not in self.context_settings:\n+            extra[""obj""] = ScriptInfo(\n                 create_app=self.create_app, set_debug_flag=self.set_debug_flag\n             )\n \n-        kwargs[""obj""] = obj\n-        kwargs.setdefault(""auto_envvar_prefix"", ""FLASK"")\n-        return super().main(*args, **kwargs)\n+        return super().make_context(info_name, args, parent=parent, **extra)\n \n \n def _path_is_ancestor(path, other):\n@@ -958,6 +967,7 @@ def routes_command(sort: str, all_methods: bool) -> None:\n \n \n cli = FlaskGroup(\n+    name=""flask"",\n     help=""""""\\\n A general utility script for Flask applications.\n \n@@ -973,7 +983,7 @@ debug mode.\n """""".format(\n         cmd=""export"" if os.name == ""posix"" else ""set"",\n         prefix=""$ "" if os.name == ""posix"" else ""> "",\n-    )\n+    ),\n )\n \n \n'",4.142857142857143,4.2
tests/test_cli.py,tests/test_cli.py,aa801c431ad1f979bce3ea1afbd88e7796ebfd7e,4f03a769d44f6740490dd4ddf70e094c12a6090c,'FlaskGroup can be nested',"'@@ -388,6 +388,19 @@ def test_flaskgroup_debug(runner, set_debug_flag):\n     assert result.output == f""{not set_debug_flag}\\n""\n \n \n+def test_flaskgroup_nested(app, runner):\n+    cli = click.Group(""cli"")\n+    flask_group = FlaskGroup(name=""flask"", create_app=lambda: app)\n+    cli.add_command(flask_group)\n+\n+    @flask_group.command()\n+    def show():\n+        click.echo(current_app.name)\n+\n+    result = runner.invoke(cli, [""flask"", ""show""])\n+    assert result.output == ""flask_test\\n""\n+\n+\n def test_no_command_echo_loading_error():\n     from flask.cli import cli\n \n'",1.0606060606060606,1.0588235294117647
CHANGES.rst,CHANGES.rst,99fa3c36abc03cd5b3407df34dce74e879ea377a,fe4003b3c998fde4c9ad8b2340f773f50079ede1,"'add --app, --env, --debug, and --env-file CLI options'","'@@ -27,6 +27,12 @@ Unreleased\n     instance on every request. :issue:`2520`.\n -   A ``flask.cli.FlaskGroup`` Click group can be nested as a\n     sub-command in a custom CLI. :issue:`3263`\n+-   Add ``--app``, ``--env``, and ``--debug`` options to the ``flask``\n+    CLI, instead of requiring that they are set through environment\n+    variables. :issue:`2836`\n+-   Add ``--env-file`` option to the ``flask`` CLI. This allows\n+    specifying a dotenv file to load in addition to ``.env`` and\n+    ``.flaskenv``. :issue:`3108`\n \n \n Version 2.1.3\n'",0,0
src/flask/cli.py,src/flask/cli.py,99fa3c36abc03cd5b3407df34dce74e879ea377a,fe4003b3c998fde4c9ad8b2340f773f50079ede1,"'add --app, --env, --debug, and --env-file CLI options'","'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import ast\n import inspect\n import os\n@@ -12,6 +14,7 @@ from threading import Lock\n from threading import Thread\n \n import click\n+from click.core import ParameterSource\n from werkzeug.serving import is_running_from_reloader\n from werkzeug.utils import import_string\n \n@@ -20,6 +23,9 @@ from .helpers import get_debug_flag\n from .helpers import get_env\n from .helpers import get_load_dotenv\n \n+if t.TYPE_CHECKING:\n+    from .app import Flask\n+\n \n class NoAppException(click.UsageError):\n     """"""Raised if an application cannot be found or loaded.""""""\n@@ -46,8 +52,8 @@ def find_best_app(module):\n     elif len(matches) > 1:\n         raise NoAppException(\n             ""Detected multiple Flask applications in module""\n-            f"" {module.__name__!r}. Use \'FLASK_APP={module.__name__}:name\'""\n-            f"" to specify the correct one.""\n+            f"" \'{module.__name__}\'. Use \'{module.__name__}:name\'""\n+            "" to specify the correct one.""\n         )\n \n     # Search for app factory functions.\n@@ -65,15 +71,15 @@ def find_best_app(module):\n                     raise\n \n                 raise NoAppException(\n-                    f""Detected factory {attr_name!r} in module {module.__name__!r},""\n+                    f""Detected factory \'{attr_name}\' in module \'{module.__name__}\',""\n                     "" but could not call it without arguments. Use""\n-                    f"" \\""FLASK_APP=\'{module.__name__}:{attr_name}(args)\'\\""""\n+                    f"" \'{module.__name__}:{attr_name}(args)\'""\n                     "" to specify arguments.""\n                 ) from e\n \n     raise NoAppException(\n         ""Failed to find Flask application or factory in module""\n-        f"" {module.__name__!r}. Use \'FLASK_APP={module.__name__}:name\'""\n+        f"" \'{module.__name__}\'. Use \'{module.__name__}:name\'""\n         "" to specify one.""\n     )\n \n@@ -253,7 +259,7 @@ def get_version(ctx, param, value):\n \n version_option = click.Option(\n     [""--version""],\n-    help=""Show the flask version"",\n+    help=""Show the Flask version."",\n     expose_value=False,\n     callback=get_version,\n     is_flag=True,\n@@ -338,19 +344,24 @@ class ScriptInfo:\n     onwards as click object.\n     """"""\n \n-    def __init__(self, app_import_path=None, create_app=None, set_debug_flag=True):\n+    def __init__(\n+        self,\n+        app_import_path: str | None = None,\n+        create_app: t.Callable[..., Flask] | None = None,\n+        set_debug_flag: bool = True,\n+    ) -> None:\n         #: Optionally the import path for the Flask application.\n-        self.app_import_path = app_import_path or os.environ.get(""FLASK_APP"")\n+        self.app_import_path = app_import_path\n         #: Optionally a function that is passed the script info to create\n         #: the instance of the application.\n         self.create_app = create_app\n         #: A dictionary with arbitrary data that can be associated with\n         #: this script info.\n-        self.data = {}\n+        self.data: t.Dict[t.Any, t.Any] = {}\n         self.set_debug_flag = set_debug_flag\n-        self._loaded_app = None\n+        self._loaded_app: Flask | None = None\n \n-    def load_app(self):\n+    def load_app(self) -> Flask:\n         """"""Loads the Flask app (if not yet loaded) and returns it.  Calling\n         this multiple times will just result in the already loaded app to\n         be returned.\n@@ -379,9 +390,10 @@ class ScriptInfo:\n \n         if not app:\n             raise NoAppException(\n-                ""Could not locate a Flask application. You did not provide ""\n-                \'the ""FLASK_APP"" environment variable, and a ""wsgi.py"" or \'\n-                \'""app.py"" module was not found in the current directory.\'\n+                ""Could not locate a Flask application. Use the""\n+                "" \'flask --app\' option, \'FLASK_APP\' environment""\n+                "" variable, or a \'wsgi.py\' or \'app.py\' file in the""\n+                "" current directory.""\n             )\n \n         if self.set_debug_flag:\n@@ -442,6 +454,117 @@ class AppGroup(click.Group):\n         return click.Group.group(self, *args, **kwargs)\n \n \n+def _set_app(ctx: click.Context, param: click.Option, value: str | None) -> str | None:\n+    if value is None:\n+        return None\n+\n+    info = ctx.ensure_object(ScriptInfo)\n+    info.app_import_path = value\n+    return value\n+\n+\n+# This option is eager so the app will be available if --help is given.\n+# --help is also eager, so --app must be before it in the param list.\n+# no_args_is_help bypasses eager processing, so this option must be\n+# processed manually in that case to ensure FLASK_APP gets picked up.\n+_app_option = click.Option(\n+    [""-A"", ""--app""],\n+    metavar=""IMPORT"",\n+    help=(\n+        ""The Flask application or factory function to load, in the form \'module:name\'.""\n+        "" Module can be a dotted import or file path. Name is not required if it is""\n+        "" \'app\', \'application\', \'create_app\', or \'make_app\', and can be \'name(args)\' to""\n+        "" pass arguments.""\n+    ),\n+    is_eager=True,\n+    expose_value=False,\n+    callback=_set_app,\n+)\n+\n+\n+def _set_env(ctx: click.Context, param: click.Option, value: str | None) -> str | None:\n+    if value is None:\n+        return None\n+\n+    # Set with env var instead of ScriptInfo.load so that it can be\n+    # accessed early during a factory function.\n+    os.environ[""FLASK_ENV""] = value\n+    return value\n+\n+\n+_env_option = click.Option(\n+    [""-E"", ""--env""],\n+    metavar=""NAME"",\n+    help=(\n+        ""The execution environment name to set in \'app.env\'. Defaults to""\n+        "" \'production\'. \'development\' will enable \'app.debug\' and start the""\n+        "" debugger and reloader when running the server.""\n+    ),\n+    expose_value=False,\n+    callback=_set_env,\n+)\n+\n+\n+def _set_debug(ctx: click.Context, param: click.Option, value: bool) -> bool | None:\n+    # If the flag isn\'t provided, it will default to False. Don\'t use\n+    # that, let debug be set by env in that case.\n+    source = ctx.get_parameter_source(param.name)  # type: ignore[arg-type]\n+\n+    if source is not None and source in (\n+        ParameterSource.DEFAULT,\n+        ParameterSource.DEFAULT_MAP,\n+    ):\n+        return None\n+\n+    # Set with env var instead of ScriptInfo.load so that it can be\n+    # accessed early during a factory function.\n+    os.environ[""FLASK_DEBUG""] = ""1"" if value else ""0""\n+    return value\n+\n+\n+_debug_option = click.Option(\n+    [""--debug/--no-debug""],\n+    help=""Set \'app.debug\' separately from \'--env\'."",\n+    expose_value=False,\n+    callback=_set_debug,\n+)\n+\n+\n+def _env_file_callback(\n+    ctx: click.Context, param: click.Option, value: str | None\n+) -> str | None:\n+    if value is None:\n+        return None\n+\n+    import importlib\n+\n+    try:\n+        importlib.import_module(""dotenv"")\n+    except ImportError:\n+        raise click.BadParameter(\n+            ""python-dotenv must be installed to load an env file."",\n+            ctx=ctx,\n+            param=param,\n+        ) from None\n+\n+    # Don\'t check FLASK_SKIP_DOTENV, that only disables automatically\n+    # loading .env and .flaskenv files.\n+    load_dotenv(value)\n+    return value\n+\n+\n+# This option is eager so env vars are loaded as early as possible to be\n+# used by other options.\n+_env_file_option = click.Option(\n+    [""-e"", ""--env-file""],\n+    type=click.Path(exists=True, dir_okay=False),\n+    help=""Load environment variables from this file. python-dotenv must be installed."",\n+    is_eager=True,\n+    expose_value=False,\n+    callback=_env_file_callback,\n+)\n+\n+\n class FlaskGroup(AppGroup):\n     """"""Special subclass of the :class:`AppGroup` group that supports\n     loading more commands from the configured Flask app.  Normally a\n@@ -460,6 +583,10 @@ class FlaskGroup(AppGroup):\n     :param set_debug_flag: Set the app\'s debug flag based on the active\n         environment\n \n+    .. versionchanged:: 2.2\n+        Added the ``-A/--app``, ``-E/--env``, ``--debug/--no-debug``,\n+        and ``-e/--env-file`` options.\n+\n     .. versionchanged:: 1.0\n         If installed, python-dotenv will be used to load environment variables\n         from :file:`.env` and :file:`.flaskenv` files.\n@@ -467,14 +594,19 @@ class FlaskGroup(AppGroup):\n \n     def __init__(\n         self,\n-        add_default_commands=True,\n-        create_app=None,\n-        add_version_option=True,\n-        load_dotenv=True,\n-        set_debug_flag=True,\n-        **extra,\n-    ):\n+        add_default_commands: bool = True,\n+        create_app: t.Callable[..., Flask] | None = None,\n+        add_version_option: bool = True,\n+        load_dotenv: bool = True,\n+        set_debug_flag: bool = True,\n+        **extra: t.Any,\n+    ) -> None:\n         params = list(extra.pop(""params"", None) or ())\n+        # Processing is done with option callbacks instead of a group\n+        # callback. This allows users to make a custom group callback\n+        # without losing the behavior. --env-file must come first so\n+        # that it is eagerly evaluated before --app.\n+        params.extend((_env_file_option, _app_option, _env_option, _debug_option))\n \n         if add_version_option:\n             params.append(version_option)\n@@ -555,11 +687,13 @@ class FlaskGroup(AppGroup):\n \n     def make_context(\n         self,\n-        info_name: t.Optional[str],\n-        args: t.List[str],\n-        parent: t.Optional[click.Context] = None,\n+        info_name: str | None,\n+        args: list[str],\n+        parent: click.Context | None = None,\n         **extra: t.Any,\n     ) -> click.Context:\n+        # Attempt to load .env and .flask env files. The --env-file\n+        # option can cause another file to be loaded.\n         if get_load_dotenv(self.load_dotenv):\n             load_dotenv()\n \n@@ -570,6 +704,16 @@ class FlaskGroup(AppGroup):\n \n         return super().make_context(info_name, args, parent=parent, **extra)\n \n+    def parse_args(self, ctx: click.Context, args: list[str]) -> list[str]:\n+        if not args and self.no_args_is_help:\n+            # Attempt to load --env-file and --app early in case they\n+            # were given as env vars. Otherwise no_args_is_help will not\n+            # see commands from app.cli.\n+            _env_file_option.handle_parse_result(ctx, {}, [])\n+            _app_option.handle_parse_result(ctx, {}, [])\n+\n+        return super().parse_args(ctx, args)\n+\n \n def _path_is_ancestor(path, other):\n     """"""Take ``other`` and remove the length of ``path`` from it. Then join it\n@@ -578,7 +722,7 @@ def _path_is_ancestor(path, other):\n     return os.path.join(path, other[len(path) :].lstrip(os.sep)) == other\n \n \n-def load_dotenv(path=None):\n+def load_dotenv(path: str | os.PathLike | None = None) -> bool:\n     """"""Load ""dotenv"" files in order of precedence to set environment variables.\n \n     If an env var is already set it is not overwritten, so earlier files in the\n@@ -591,13 +735,17 @@ def load_dotenv(path=None):\n     :param path: Load the file at this location instead of searching.\n     :return: ``True`` if a file was loaded.\n \n-    .. versionchanged:: 1.1.0\n-        Returns ``False`` when python-dotenv is not installed, or when\n-        the given path isn\'t a file.\n+    .. versionchanged:: 2.0\n+        The current directory is not changed to the location of the\n+        loaded file.\n \n     .. versionchanged:: 2.0\n         When loading the env files, set the default encoding to UTF-8.\n \n+    .. versionchanged:: 1.1.0\n+        Returns ``False`` when python-dotenv is not installed, or when\n+        the given path isn\'t a file.\n+\n     .. versionadded:: 1.0\n     """"""\n     try:\n@@ -613,15 +761,15 @@ def load_dotenv(path=None):\n \n         return False\n \n-    # if the given path specifies the actual file then return True,\n-    # else False\n+    # Always return after attempting to load a given path, don\'t load\n+    # the default files.\n     if path is not None:\n         if os.path.isfile(path):\n             return dotenv.load_dotenv(path, encoding=""utf-8"")\n \n         return False\n \n-    new_dir = None\n+    loaded = False\n \n     for name in ("".env"", "".flaskenv""):\n         path = dotenv.find_dotenv(name, usecwd=True)\n@@ -629,12 +777,10 @@ def load_dotenv(path=None):\n         if not path:\n             continue\n \n-        if new_dir is None:\n-            new_dir = os.path.dirname(path)\n-\n         dotenv.load_dotenv(path, encoding=""utf-8"")\n+        loaded = True\n \n-    return new_dir is not None  # at least one file was located and loaded\n+    return loaded  # True if at least one file was located and loaded.\n \n \n def show_server_banner(env, debug, app_import_path, eager_loading):\n@@ -837,9 +983,10 @@ def run_command(\n     This server is for development purposes only. It does not provide\n     the stability, security, or performance of production WSGI servers.\n \n-    The reloader and debugger are enabled by default if\n-    FLASK_ENV=development or FLASK_DEBUG=1.\n+    The reloader and debugger are enabled by default with the\n+    \'--env development\' or \'--debug\' options.\n     """"""\n+    app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n     debug = get_debug_flag()\n \n     if reload is None:\n@@ -849,7 +996,6 @@ def run_command(\n         debugger = debug\n \n     show_server_banner(get_env(), debug, info.app_import_path, eager_loading)\n-    app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n \n     from werkzeug.serving import run_simple\n \n@@ -971,19 +1117,10 @@ cli = FlaskGroup(\n     help=""""""\\\n A general utility script for Flask applications.\n \n-Provides commands from Flask, extensions, and the application. Loads the\n-application defined in the FLASK_APP environment variable, or from a wsgi.py\n-file. Setting the FLASK_ENV environment variable to \'development\' will enable\n-debug mode.\n-\n-\\b\n-  {prefix}{cmd} FLASK_APP=hello.py\n-  {prefix}{cmd} FLASK_ENV=development\n-  {prefix}flask run\n-"""""".format(\n-        cmd=""export"" if os.name == ""posix"" else ""set"",\n-        prefix=""$ "" if os.name == ""posix"" else ""> "",\n-    ),\n+An application to load must be given with the \'--app\' option,\n+\'FLASK_APP\' environment variable, or with a \'wsgi.py\' or \'app.py\' file\n+in the current directory.\n+"""""",\n )\n \n \n'",4.2,3.975
src/flask/helpers.py,src/flask/helpers.py,99fa3c36abc03cd5b3407df34dce74e879ea377a,fe4003b3c998fde4c9ad8b2340f773f50079ede1,"'add --app, --env, --debug, and --env-file CLI options'","'@@ -48,9 +48,9 @@ def get_debug_flag() -> bool:\n \n \n def get_load_dotenv(default: bool = True) -> bool:\n-    """"""Get whether the user has disabled loading dotenv files by setting\n-    :envvar:`FLASK_SKIP_DOTENV`. The default is ``True``, load the\n-    files.\n+    """"""Get whether the user has disabled loading default dotenv files by\n+    setting :envvar:`FLASK_SKIP_DOTENV`. The default is ``True``, load\n+    the files.\n \n     :param default: What to return if the env var isn\'t set.\n     """"""\n'",2.391304347826087,2.391304347826087
docs/cli.rst,docs/cli.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -15,40 +15,10 @@ Application Discovery\n ---------------------\n \n The ``flask`` command is installed by Flask, not your application; it must be\n-told where to find your application in order to use it. The ``FLASK_APP``\n-environment variable is used to specify how to load the application.\n+told where to find your application in order to use it. The ``--app``\n+option is used to specify how to load the application.\n \n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=hello\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP hello\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=hello\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""hello""\n-         > flask run\n-\n-While ``FLASK_APP`` supports a variety of options for specifying your\n+While ``--app`` supports a variety of options for specifying your\n application, most use cases should be simple. Here are the typical values:\n \n (nothing)\n@@ -56,32 +26,32 @@ application, most use cases should be simple. Here are the typical values:\n     automatically detecting an app (``app`` or ``application``) or\n     factory (``create_app`` or ``make_app``).\n \n-``FLASK_APP=hello``\n+``--app hello``\n     The given name is imported, automatically detecting an app (``app``\n     or ``application``) or factory (``create_app`` or ``make_app``).\n \n ----\n \n-``FLASK_APP`` has three parts: an optional path that sets the current working\n+``--app`` has three parts: an optional path that sets the current working\n directory, a Python file or dotted import path, and an optional variable\n name of the instance or factory. If the name is a factory, it can optionally\n be followed by arguments in parentheses. The following values demonstrate these\n parts:\n \n-``FLASK_APP=src/hello``\n+``--app src/hello``\n     Sets the current working directory to ``src`` then imports ``hello``.\n \n-``FLASK_APP=hello.web``\n+``--app hello.web``\n     Imports the path ``hello.web``.\n \n-``FLASK_APP=hello:app2``\n+``--app hello:app2``\n     Uses the ``app2`` Flask instance in ``hello``.\n \n-``FLASK_APP=""hello:create_app(\'dev\')""``\n+``--app \'hello:create_app(""dev"")\'``\n     The ``create_app`` factory in ``hello`` is called with the string ``\'dev\'``\n     as the argument.\n \n-If ``FLASK_APP`` is not set, the command will try to import ""app"" or\n+If ``--app`` is not set, the command will try to import ""app"" or\n ""wsgi"" (as a "".py"" file, or package) and try to detect an application\n instance or factory.\n \n@@ -137,8 +107,9 @@ Environments\n \n .. versionadded:: 1.0\n \n-The environment in which the Flask app runs is set by the\n-:envvar:`FLASK_ENV` environment variable. If not set it defaults to\n+The environment in which the Flask app executes is set by the\n+``FLASK_ENV`` environment variable. When using the ``flask`` command, it\n+can also be set with the ``--env`` option. If not set it defaults to\n ``production``. The other recognized environment is ``development``.\n Flask and extensions may choose to enable behaviors based on the\n environment.\n@@ -147,63 +118,16 @@ If the env is set to ``development``, the ``flask`` command will enable\n debug mode and ``flask run`` will enable the interactive debugger and\n reloader.\n \n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-         $ flask run\n-          * Serving Flask app ""hello""\n-          * Environment: development\n-          * Debug mode: on\n-          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n-          * Restarting with inotify reloader\n-          * Debugger is active!\n-          * Debugger PIN: 223-456-919\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_ENV development\n-         $ flask run\n-          * Serving Flask app ""hello""\n-          * Environment: development\n-          * Debug mode: on\n-          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n-          * Restarting with inotify reloader\n-          * Debugger is active!\n-          * Debugger PIN: 223-456-919\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-         > flask run\n-          * Serving Flask app ""hello""\n-          * Environment: development\n-          * Debug mode: on\n-          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n-          * Restarting with inotify reloader\n-          * Debugger is active!\n-          * Debugger PIN: 223-456-919\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n-          * Serving Flask app ""hello""\n-          * Environment: development\n-          * Debug mode: on\n-          * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n-          * Restarting with inotify reloader\n-          * Debugger is active!\n-          * Debugger PIN: 223-456-919\n+     $ flask --app hello --env development run\n+      * Serving Flask app ""hello""\n+      * Environment: development\n+      * Debug mode: on\n+      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n+      * Restarting with inotify reloader\n+      * Debugger is active!\n+      * Debugger PIN: 223-456-919\n \n \n Watch Extra Files with the Reloader\n@@ -211,72 +135,31 @@ Watch Extra Files with the Reloader\n \n When using development mode, the reloader will trigger whenever your\n Python code or imported modules change. The reloader can watch\n-additional files with the ``--extra-files`` option, or the\n-``FLASK_RUN_EXTRA_FILES`` environment variable. Multiple paths are\n+additional files with the ``--extra-files`` option. Multiple paths are\n separated with ``:``, or ``;`` on Windows.\n \n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-          $ flask run --extra-files file1:dirA/file2:dirB/\n-          # or\n-          $ export FLASK_RUN_EXTRA_FILES=file1:dirA/file2:dirB/\n-          $ flask run\n-           * Running on http://127.0.0.1:8000/\n-           * Detected change in \'/path/to/file1\', reloading\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-          $ flask run --extra-files file1:dirA/file2:dirB/\n-          # or\n-          $ set -x FLASK_RUN_EXTRA_FILES file1 dirA/file2 dirB/\n-          $ flask run\n-           * Running on http://127.0.0.1:8000/\n-           * Detected change in \'/path/to/file1\', reloading\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-          > flask run --extra-files file1:dirA/file2:dirB/\n-          # or\n-          > set FLASK_RUN_EXTRA_FILES=file1:dirA/file2:dirB/\n-          > flask run\n-           * Running on http://127.0.0.1:8000/\n-           * Detected change in \'/path/to/file1\', reloading\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-          > flask run --extra-files file1:dirA/file2:dirB/\n-          # or\n-          > $env:FLASK_RUN_EXTRA_FILES = ""file1:dirA/file2:dirB/""\n-          > flask run\n-           * Running on http://127.0.0.1:8000/\n-           * Detected change in \'/path/to/file1\', reloading\n+    $ flask run --extra-files file1:dirA/file2:dirB/\n+     * Running on http://127.0.0.1:8000/\n+     * Detected change in \'/path/to/file1\', reloading\n \n \n Ignore files with the Reloader\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n The reloader can also ignore files using :mod:`fnmatch` patterns with\n-the ``--exclude-patterns`` option, or the ``FLASK_RUN_EXCLUDE_PATTERNS``\n-environment variable. Multiple patterns are separated with ``:``, or\n-``;`` on Windows.\n+the ``--exclude-patterns`` option. Multiple patterns are separated with\n+``:``, or ``;`` on Windows.\n \n \n Debug Mode\n ----------\n \n-Debug mode will be enabled when :envvar:`FLASK_ENV` is ``development``,\n-as described above. If you want to control debug mode separately, use\n-:envvar:`FLASK_DEBUG`. The value ``1`` enables it, ``0`` disables it.\n+Debug mode will be enabled when the execution environment is\n+``development``, as described above. If you want to control debug mode\n+separately, use the ``--debug/--no-debug`` option or the ``FLASK_DEBUG``\n+environment variable.\n \n \n .. _dotenv:\n@@ -284,14 +167,21 @@ as described above. If you want to control debug mode separately, use\n Environment Variables From dotenv\n ---------------------------------\n \n-Rather than setting ``FLASK_APP`` each time you open a new terminal, you can\n-use Flask\'s dotenv support to set environment variables automatically.\n+The ``flask`` command supports setting any option for any command with\n+environment variables. The variables are named like ``FLASK_OPTION`` or\n+``FLASK_COMMAND_OPTION``, for example ``FLASK_APP`` or\n+``FLASK_RUN_PORT``.\n+\n+Rather than passing options every time you run a command, or environment\n+variables every time you open a new terminal, you can use Flask\'s dotenv\n+support to set environment variables automatically.\n \n If `python-dotenv`_ is installed, running the ``flask`` command will set\n-environment variables defined in the files :file:`.env` and :file:`.flaskenv`.\n-This can be used to avoid having to set ``FLASK_APP`` manually every time you\n-open a new terminal, and to set configuration using environment variables\n-similar to how some deployment services work.\n+environment variables defined in the files ``.env`` and ``.flaskenv``.\n+You can also specify an extra file to load with the ``--env-file``\n+option. Dotenv files can be used to avoid having to set ``--app`` or\n+``FLASK_APP`` manually, and to set configuration using environment\n+variables similar to how some deployment services work.\n \n Variables set on the command line are used over those set in :file:`.env`,\n which are used over those set in :file:`.flaskenv`. :file:`.flaskenv` should be\n@@ -612,7 +502,7 @@ Custom Scripts\n --------------\n \n When you are using the app factory pattern, it may be more convenient to define\n-your own Click script. Instead of using ``FLASK_APP`` and letting Flask load\n+your own Click script. Instead of using ``--app`` and letting Flask load\n your application, you can create your own Click object and export it as a\n `console script`_ entry point.\n \n@@ -646,7 +536,7 @@ Define the entry point in :file:`setup.py`::\n     )\n \n Install the application in the virtualenv in editable mode and the custom\n-script is available. Note that you don\'t need to set ``FLASK_APP``. ::\n+script is available. Note that you don\'t need to set ``--app``. ::\n \n     $ pip install -e .\n     $ wiki run\n'",1.0,1.0
docs/config.rst,docs/config.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -47,61 +47,33 @@ Environment and Debug Features\n \n The :data:`ENV` and :data:`DEBUG` config values are special because they\n may behave inconsistently if changed after the app has begun setting up.\n-In order to set the environment and debug mode reliably, Flask uses\n-environment variables.\n+In order to set the environment and debug mode reliably, pass options to\n+the ``flask`` command or use environment variables.\n \n-The environment is used to indicate to Flask, extensions, and other\n-programs, like Sentry, what context Flask is running in. It is\n-controlled with the :envvar:`FLASK_ENV` environment variable and\n-defaults to ``production``.\n+The execution environment is used to indicate to Flask, extensions, and\n+other programs, like Sentry, what context Flask is running in. It is\n+controlled with the ``FLASK_ENV`` environment variable, or the\n+``--env`` option when using the ``flask`` command, and defaults to\n+``production``.\n \n-Setting :envvar:`FLASK_ENV` to ``development`` will enable debug mode.\n-``flask run`` will use the interactive debugger and reloader by default\n-in debug mode. To control this separately from the environment, use the\n-:envvar:`FLASK_DEBUG` flag.\n-\n-.. versionchanged:: 1.0\n-    Added :envvar:`FLASK_ENV` to control the environment separately\n-    from debug mode. The development environment enables debug mode.\n+Setting ``--env development`` will enable debug mode. ``flask run`` will\n+use the interactive debugger and reloader by default in debug mode. To\n+control this separately from the environment, use the\n+``--debug/--no-debug`` option or the ``FLASK_DEBUG`` environment\n+variable.\n \n To switch Flask to the development environment and enable debug mode,\n-set :envvar:`FLASK_ENV`:\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n+set ``--env``:\n \n-         $ set -x FLASK_ENV development\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n+    $ flask --app hello --env development run\n \n-Using the environment variables as described above is recommended. While\n-it is possible to set :data:`ENV` and :data:`DEBUG` in your config or\n-code, this is strongly discouraged. They can\'t be read early by the\n-``flask`` command, and some systems or extensions may have already\n-configured themselves based on a previous value.\n+Using the options or environment variables as described above is\n+recommended. While it is possible to set :data:`ENV` and :data:`DEBUG`\n+in your config or code, this is strongly discouraged. They can\'t be read\n+early by the ``flask`` command, and some systems or extensions may have\n+already configured themselves based on a previous value.\n \n \n Builtin Configuration Values\n'",1.0,1.0
docs/debugging.rst,docs/debugging.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -39,45 +39,19 @@ during a request. This debugger should only be used during development.\n     security risk. Do not run the development server or debugger in a\n     production environment.\n \n-To enable the debugger, run the development server with the\n-``FLASK_ENV`` environment variable set to ``development``. This puts\n-Flask in debug mode, which changes how it handles some errors, and\n-enables the debugger and reloader.\n+To enable the debugger, run the development server with the environment\n+set to ``development``. This puts Flask in debug mode, which changes how\n+it handles some errors, and enables the debugger and reloader.\n \n-.. tabs::\n+.. code-block:: text\n \n-   .. group-tab:: Bash\n+    $ flask --app hello --env development run\n \n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_ENV development\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n-\n-``FLASK_ENV`` can only be set as an environment variable. When running\n+``FLASK_ENV`` can also be set as an environment variable. When running\n from Python code, passing ``debug=True`` enables debug mode, which is\n-mostly equivalent. Debug mode can be controlled separately from\n-``FLASK_ENV`` with the ``FLASK_DEBUG`` environment variable as well.\n+mostly equivalent. Debug mode can be controlled separately from the\n+environment with the ``--debug/--no-debug`` option or the\n+``FLASK_DEBUG`` environment variable.\n \n .. code-block:: python\n \n@@ -102,37 +76,9 @@ When using an external debugger, the app should still be in debug mode,\n but it can be useful to disable the built-in debugger and reloader,\n which can interfere.\n \n-When running from the command line:\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-         $ flask run --no-debugger --no-reload\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_ENV development\n-         $ flask run --no-debugger --no-reload\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-         > flask run --no-debugger --no-reload\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-         > $env:FLASK_ENV = ""development""\n-         > flask run --no-debugger --no-reload\n+    $ flask --app hello --env development run --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -89,71 +89,20 @@ Using Applications\n \n To run such an application, you can use the :command:`flask` command:\n \n-.. tabs::\n+.. code-block:: text\n \n-   .. group-tab:: Bash\n+    $ flask run --app hello run\n \n-      .. code-block:: text\n+Flask will automatically detect the factory if it is named\n+``create_app`` or ``make_app`` in ``hello``. You can also pass arguments\n+to the factory like this:\n \n-         $ export FLASK_APP=myapp\n-         $ flask run\n+.. code-block:: text\n \n-   .. group-tab:: Fish\n+    $ flask run --app hello:create_app(local_auth=True)``\n \n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP myapp\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=myapp\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""myapp""\n-         > flask run\n-\n-Flask will automatically detect the factory (``create_app`` or ``make_app``)\n-in ``myapp``. You can also pass arguments to the factory like this:\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=""myapp:create_app(\'dev\')""\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP ""myapp:create_app(\'dev\')""\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=""myapp:create_app(\'dev\')""\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""myapp:create_app(\'dev\')""\n-         > flask run\n-\n-Then the ``create_app`` factory in ``myapp`` is called with the string\n-``\'dev\'`` as the argument. See :doc:`/cli` for more detail.\n+Then the ``create_app`` factory in ``myapp`` is called with the keyword\n+argument ``local_auth=True``. See :doc:`/cli` for more detail.\n \n Factory Improvements\n --------------------\n'",1.0,1.0
docs/patterns/packages.rst,docs/patterns/packages.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -56,70 +56,17 @@ a big problem, just add a new file called :file:`setup.py` next to the inner\n         ],\n     )\n \n-In order to run the application you need to export an environment variable\n-that tells Flask where to find the application instance:\n+Install your application so it is importable:\n \n-.. tabs::\n+.. code-block:: text\n \n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=yourapplication\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP yourapplication\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=yourapplication\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""yourapplication""\n-\n-If you are outside of the project directory make sure to provide the exact\n-path to your application directory. Similarly you can turn on the\n-development features like this:\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_ENV development\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_ENV = ""development""\n+    $ pip install -e .\n \n-In order to install and run the application you need to issue the following\n-commands::\n+To use the ``flask`` command and run your application you need to set\n+the ``--app`` option that tells Flask where to find the application\n+instance:\n \n-    $ pip install -e .\n-    $ flask run\n+    $ flask --app yourapplication run\n \n What did we gain from this?  Now we can restructure the application a bit\n into multiple modules.  The only thing you have to remember is the\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -39,50 +39,20 @@ Save it as :file:`hello.py` or something similar. Make sure to not call\n your application :file:`flask.py` because this would conflict with Flask\n itself.\n \n-To run the application, use the :command:`flask` command or\n-:command:`python -m flask`. Before you can do that you need\n-to tell your terminal the application to work with by exporting the\n-``FLASK_APP`` environment variable:\n+To run the application, use the ``flask`` command or\n+``python -m flask``. You need to tell the Flask where your application\n+is with the ``-app`` option.\n \n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=hello\n-         $ flask run\n-          * Running on http://127.0.0.1:5000/\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP hello\n-         $ flask run\n-          * Running on http://127.0.0.1:5000/\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=hello\n-         > flask run\n-          * Running on http://127.0.0.1:5000/\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-         > $env:FLASK_APP = ""hello""\n-         > flask run\n-          * Running on http://127.0.0.1:5000/\n+    $ flask --app hello run\n+     * Serving Flask app \'hello\' (lazy loading)\n+     * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n \n .. admonition:: Application Discovery Behavior\n \n     As a shortcut, if the file is named ``app.py`` or ``wsgi.py``, you\n-    don\'t have to set the ``FLASK_APP`` environment variable. See\n-    :doc:`/cli` for more details.\n+    don\'t have to use ``--app``. See :doc:`/cli` for more details.\n \n This launches a very simple builtin server, which is good enough for\n testing but probably not what you want to use in production. For\n@@ -114,34 +84,6 @@ handle that.\n    This tells your operating system to listen on all public IPs.\n \n \n-What to do if the Server does not Start\n----------------------------------------\n-\n-In case the :command:`python -m flask` fails or :command:`flask`\n-does not exist, there are multiple reasons this might be the case.\n-First of all you need to look at the error message.\n-\n-Old Version of Flask\n-````````````````````\n-\n-Versions of Flask older than 0.11 used to have different ways to start the\n-application.  In short, the :command:`flask` command did not exist, and\n-neither did :command:`python -m flask`.  In that case you have two options:\n-either upgrade to newer Flask versions or have a look at :doc:`/server`\n-to see the alternative method for running a server.\n-\n-Invalid Import Name\n-```````````````````\n-\n-The ``FLASK_APP`` environment variable is the name of the module to import at\n-:command:`flask run`. In case that module is incorrectly named you will get an\n-import error upon start (or if debug is enabled when you navigate to the\n-application). It will tell you what it tried to import and why it failed.\n-\n-The most common reason is a typo or because you did not actually create an\n-``app`` object.\n-\n-\n Debug Mode\n ----------\n \n@@ -162,38 +104,19 @@ error occurs during a request.\n     security risk. Do not run the development server or debugger in a\n     production environment.\n \n-To enable all development features, set the ``FLASK_ENV`` environment\n-variable to ``development`` before calling ``flask run``.\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_ENV=development\n-         $ flask run\n+To enable all development features, set the ``--env`` option to\n+``development``.\n \n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_ENV development\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_ENV=development\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n+.. code-block:: text\n \n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n+    $ flask --app hello --env development run\n+     * Serving Flask app \'hello\' (lazy loading)\n+     * Environment: development\n+     * Debug mode: on\n+     * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n+     * Restarting with stat\n+     * Debugger is active!\n+     * Debugger PIN: nnn-nnn-nnn\n \n See also:\n \n'",1.2666666666666666,1.2666666666666666
docs/reqcontext.rst,docs/reqcontext.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"""@@ -227,8 +227,8 @@ associated with it is destroyed. If an error occurs during development,\n it is useful to delay destroying the data for debugging purposes.\n \n When the development server is running in development mode (the\n-``FLASK_ENV`` environment variable is set to ``'development'``), the\n-error and data will be preserved and shown in the interactive debugger.\n+``--env`` option is set to ``'development'``), the error and data will\n+be preserved and shown in the interactive debugger.\n \n This behavior can be controlled with the\n :data:`PRESERVE_CONTEXT_ON_EXCEPTION` config. As described above, it\n""",0,0
docs/server.rst,docs/server.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -19,9 +19,16 @@ Command Line\n ------------\n \n The ``flask run`` command line script is the recommended way to run the\n-development server. It requires setting the ``FLASK_APP`` environment\n-variable to point to your application, and ``FLASK_ENV=development`` to\n-fully enable development mode.\n+development server. Use the ``--app`` option to point to your\n+application, and the ``--env development`` option to fully enable\n+development mode.\n+\n+.. code-block:: text\n+\n+    $ flask --app hello --env development run\n+\n+These options (and any others) can also be set using environment\n+variables.\n \n .. tabs::\n \n@@ -65,11 +72,11 @@ and using the CLI.\n \n .. note::\n \n-    Prior to Flask 1.0 the ``FLASK_ENV`` environment variable was not\n-    supported and you needed to enable debug mode by exporting\n-    ``FLASK_DEBUG=1``. This can still be used to control debug mode, but\n-    you should prefer setting the development environment as shown\n-    above.\n+    Debug mode can be controlled separately from the development\n+    environment with the ``--debug/--no-debug`` option or the\n+    ``FLASK_DEBUG`` environment variable. This is how older versions of\n+    Flask worked. You should prefer setting the development environment\n+    as shown above.\n \n \n .. _address-already-in-use:\n'",0,0
docs/tutorial/database.rst,docs/tutorial/database.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"""@@ -196,15 +196,13 @@ previous page.\n     If you're still running the server from the previous page, you can\n     either stop the server, or run this command in a new terminal. If\n     you use a new terminal, remember to change to your project directory\n-    and activate the env as described in :doc:`/installation`. You'll\n-    also need to set ``FLASK_APP`` and ``FLASK_ENV`` as shown on the\n-    previous page.\n+    and activate the env as described in :doc:`/installation`.\n \n Run the ``init-db`` command:\n \n .. code-block:: none\n \n-    $ flask init-db\n+    $ flask --app flaskr init-db\n     Initialized the database.\n \n There will now be a ``flaskr.sqlite`` file in the ``instance`` folder in\n""",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -48,35 +48,9 @@ Pip will install your project along with its dependencies.\n Since this is a different machine, you need to run ``init-db`` again to\n create the database in the instance folder.\n \n-.. tabs::\n+    .. code-block:: text\n \n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=flaskr\n-         $ flask init-db\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP flaskr\n-         $ flask init-db\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=flaskr\n-         > flask init-db\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""flaskr""\n-         > flask init-db\n+        $ flask --app flaskr init-db\n \n When Flask detects that it\'s installed (not in editable mode), it uses\n a different directory for the instance folder. You can find it at\n@@ -127,7 +101,7 @@ first install it in the virtual environment:\n     $ pip install waitress\n \n You need to tell Waitress about your application, but it doesn\'t use\n-``FLASK_APP`` like ``flask run`` does. You need to tell it to import and\n+``--app`` like ``flask run`` does. You need to tell it to import and\n call the application factory to get an application object.\n \n .. code-block:: none\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -135,43 +135,13 @@ exception, and restarts the server whenever you make changes to the\n code. You can leave it running and just reload the browser page as you\n follow the tutorial.\n \n-.. tabs::\n+.. code-block:: text\n \n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=flaskr\n-         $ export FLASK_ENV=development\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP flaskr\n-         $ set -x FLASK_ENV development\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=flaskr\n-         > set FLASK_ENV=development\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""flaskr""\n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n+    $ flask --app flaskr --env development run\n \n You\'ll see output similar to this:\n \n-.. code-block:: none\n+.. code-block:: text\n \n      * Serving Flask app ""flaskr""\n      * Environment: development\n@@ -179,7 +149,7 @@ You\'ll see output similar to this:\n      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n      * Restarting with stat\n      * Debugger is active!\n-     * Debugger PIN: 855-212-761\n+     * Debugger PIN: nnn-nnn-nnn\n \n Visit http://127.0.0.1:5000/hello in a browser and you should see the\n ""Hello, World!"" message. Congratulations, you\'re now running your Flask\n'",0,0
docs/tutorial/install.rst,docs/tutorial/install.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"""@@ -109,7 +109,7 @@ You can observe that the project is now installed with ``pip list``.\n     wheel          0.30.0\n \n Nothing changes from how you've been running your project so far.\n-``FLASK_APP`` is still set to ``flaskr`` and ``flask run`` still runs\n+``--app`` is still set to ``flaskr`` and ``flask run`` still runs\n the application, but you can call it from anywhere, not just the\n ``flask-tutorial`` directory.\n \n""",0,0
examples/javascript/README.rst,examples/javascript/README.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -33,8 +33,7 @@ Run\n \n .. code-block:: text\n \n-    $ export FLASK_APP=js_example\n-    $ flask run\n+    $ flask --app js_example run\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -45,19 +45,10 @@ installing Flaskr::\n Run\n ---\n \n-::\n-\n-    $ export FLASK_APP=flaskr\n-    $ export FLASK_ENV=development\n-    $ flask init-db\n-    $ flask run\n-\n-Or on Windows cmd::\n+.. code-block:: text\n \n-    > set FLASK_APP=flaskr\n-    > set FLASK_ENV=development\n-    > flask init-db\n-    > flask run\n+    $ flask --app flaskr init-db\n+    $ flask --app flaskr --env development run\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
tests/conftest.py,tests/conftest.py,ab1fbef29a073fe5950ea2357f6a3a0d280eb506,99fa3c36abc03cd5b3407df34dce74e879ea377a,'prefer --app over FLASK_APP in docs',"'@@ -18,6 +18,7 @@ def _standard_os_environ():\n     """"""\n     mp = monkeypatch.MonkeyPatch()\n     out = (\n+        (os.environ, ""FLASK_ENV_FILE"", monkeypatch.notset),\n         (os.environ, ""FLASK_APP"", monkeypatch.notset),\n         (os.environ, ""FLASK_ENV"", monkeypatch.notset),\n         (os.environ, ""FLASK_DEBUG"", monkeypatch.notset),\n'",1.3157894736842106,1.3157894736842106
CHANGES.rst,CHANGES.rst,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"'@@ -33,6 +33,9 @@ Unreleased\n -   Add ``--env-file`` option to the ``flask`` CLI. This allows\n     specifying a dotenv file to load in addition to ``.env`` and\n     ``.flaskenv``. :issue:`3108`\n+-   It is no longer required to decorate custom CLI commands on\n+    ``app.cli`` or ``blueprint.cli`` with ``@with_appcontext``, an app\n+    context will already be active at that point. :issue:`2410`\n \n \n Version 2.1.3\n'",0,0
docs/cli.rst,docs/cli.rst,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"""@@ -437,12 +437,14 @@ commands directly to the application's level:\n Application Context\n ~~~~~~~~~~~~~~~~~~~\n \n-Commands added using the Flask app's :attr:`~Flask.cli`\n-:meth:`~cli.AppGroup.command` decorator will be executed with an application\n-context pushed, so your command and extensions have access to the app and its\n-configuration. If you create a command using the Click :func:`~click.command`\n-decorator instead of the Flask decorator, you can use\n-:func:`~cli.with_appcontext` to get the same behavior. ::\n+Commands added using the Flask app's :attr:`~Flask.cli` or\n+:class:`~flask.cli.FlaskGroup` :meth:`~cli.AppGroup.command` decorator\n+will be executed with an application context pushed, so your custom\n+commands and parameters have access to the app and its configuration. The\n+:func:`~cli.with_appcontext` decorator can be used to get the same\n+behavior, but is not needed in most cases.\n+\n+.. code-block:: python\n \n     import click\n     from flask.cli import with_appcontext\n@@ -454,12 +456,6 @@ decorator instead of the Flask decorator, you can use\n \n     app.cli.add_command(do_work)\n \n-If you're sure a command doesn't need the context, you can disable it::\n-\n-    @app.cli.command(with_appcontext=False)\n-    def do_work():\n-        ...\n-\n \n Plugins\n -------\n""",1.0,1.0
docs/tutorial/database.rst,docs/tutorial/database.rst,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"'@@ -40,7 +40,6 @@ response is sent.\n \n     import click\n     from flask import current_app, g\n-    from flask.cli import with_appcontext\n \n \n     def get_db():\n@@ -128,7 +127,6 @@ Add the Python functions that will run these SQL commands to the\n \n \n     @click.command(\'init-db\')\n-    @with_appcontext\n     def init_db_command():\n         """"""Clear the existing data and create new tables.""""""\n         init_db()\n'",0,0
examples/tutorial/flaskr/db.py,examples/tutorial/flaskr/db.py,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"'@@ -3,7 +3,6 @@ import sqlite3\n import click\n from flask import current_app\n from flask import g\n-from flask.cli import with_appcontext\n \n \n def get_db():\n@@ -39,7 +38,6 @@ def init_db():\n \n \n @click.command(""init-db"")\n-@with_appcontext\n def init_db_command():\n     """"""Clear existing data and create new tables.""""""\n     init_db()\n'",1.4,1.4
src/flask/cli.py,src/flask/cli.py,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"'@@ -410,15 +410,25 @@ pass_script_info = click.make_pass_decorator(ScriptInfo, ensure=True)\n \n def with_appcontext(f):\n     """"""Wraps a callback so that it\'s guaranteed to be executed with the\n-    script\'s application context.  If callbacks are registered directly\n-    to the ``app.cli`` object then they are wrapped with this function\n-    by default unless it\'s disabled.\n+    script\'s application context.\n+\n+    Custom commands (and their options) registered under ``app.cli`` or\n+    ``blueprint.cli`` will always have an app context available, this\n+    decorator is not required in that case.\n+\n+    .. versionchanged:: 2.2\n+        The app context is active for subcommands as well as the\n+        decorated callback. The app context is always available to\n+        ``app.cli`` command and parameter callbacks.\n     """"""\n \n     @click.pass_context\n     def decorator(__ctx, *args, **kwargs):\n-        with __ctx.ensure_object(ScriptInfo).load_app().app_context():\n-            return __ctx.invoke(f, *args, **kwargs)\n+        if not current_app:\n+            app = __ctx.ensure_object(ScriptInfo).load_app()\n+            __ctx.with_resource(app.app_context())\n+\n+        return __ctx.invoke(f, *args, **kwargs)\n \n     return update_wrapper(decorator, f)\n \n@@ -587,6 +597,10 @@ class FlaskGroup(AppGroup):\n         Added the ``-A/--app``, ``-E/--env``, ``--debug/--no-debug``,\n         and ``-e/--env-file`` options.\n \n+    .. versionchanged:: 2.2\n+        An app context is pushed when running ``app.cli`` commands, so\n+        ``@with_appcontext`` is no longer required for those commands.\n+\n     .. versionchanged:: 1.0\n         If installed, python-dotenv will be used to load environment variables\n         from :file:`.env` and :file:`.flaskenv` files.\n@@ -660,9 +674,18 @@ class FlaskGroup(AppGroup):\n         # Look up commands provided by the app, showing an error and\n         # continuing if the app couldn\'t be loaded.\n         try:\n-            return info.load_app().cli.get_command(ctx, name)\n+            app = info.load_app()\n         except NoAppException as e:\n             click.secho(f""Error: {e.format_message()}\\n"", err=True, fg=""red"")\n+            return None\n+\n+        # Push an app context for the loaded app unless it is already\n+        # active somehow. This makes the context available to parameter\n+        # and command callbacks without needing @with_appcontext.\n+        if not current_app or current_app._get_current_object() is not app:\n+            ctx.with_resource(app.app_context())\n+\n+        return app.cli.get_command(ctx, name)\n \n     def list_commands(self, ctx):\n         self._load_plugin_commands()\n'",3.975,4.05
tests/test_cli.py,tests/test_cli.py,c9e000b9cea2e117218d460874d86301fbb43c43,ae547270e935b08d4deada9e28b049ff53debefe,'with_appcontext lasts for the lifetime of the click context',"'@@ -13,6 +13,7 @@ import pytest\n from _pytest.monkeypatch import notset\n from click.testing import CliRunner\n \n+from flask import _app_ctx_stack\n from flask import Blueprint\n from flask import current_app\n from flask import Flask\n@@ -310,6 +311,26 @@ def test_lazy_load_error(monkeypatch):\n             lazy._flush_bg_loading_exception()\n \n \n+def test_app_cli_has_app_context(app, runner):\n+    def _param_cb(ctx, param, value):\n+        # current_app should be available in parameter callbacks\n+        return bool(current_app)\n+\n+    @app.cli.command()\n+    @click.argument(""value"", callback=_param_cb)\n+    def check(value):\n+        app = click.get_current_context().obj.load_app()\n+        # the loaded app should be the same as current_app\n+        same_app = current_app._get_current_object() is app\n+        # only one app context should be pushed\n+        stack_size = len(_app_ctx_stack._local.stack)\n+        return same_app, stack_size, value\n+\n+    cli = FlaskGroup(create_app=lambda: app)\n+    result = runner.invoke(cli, [""check"", ""x""], standalone_mode=False)\n+    assert result.return_value == (True, 1, True)\n+\n+\n def test_with_appcontext(runner):\n     @click.command()\n     @with_appcontext\n@@ -323,12 +344,12 @@ def test_with_appcontext(runner):\n     assert result.output == ""testapp\\n""\n \n \n-def test_appgroup(runner):\n+def test_appgroup_app_context(runner):\n     @click.group(cls=AppGroup)\n     def cli():\n         pass\n \n-    @cli.command(with_appcontext=True)\n+    @cli.command()\n     def test():\n         click.echo(current_app.name)\n \n@@ -336,7 +357,7 @@ def test_appgroup(runner):\n     def subgroup():\n         pass\n \n-    @subgroup.command(with_appcontext=True)\n+    @subgroup.command()\n     def test2():\n         click.echo(current_app.name)\n \n@@ -351,7 +372,7 @@ def test_appgroup(runner):\n     assert result.output == ""testappgroup\\n""\n \n \n-def test_flaskgroup(runner):\n+def test_flaskgroup_app_context(runner):\n     def create_app():\n         return Flask(""flaskgroup"")\n \n'",1.0588235294117647,1.056338028169014
CHANGES.rst,CHANGES.rst,ed42e9292811a95f2a68e06a9ae50cb5872216a3,cec5f74110a7369992be1651c24b695d9fe55ab3,'session expiration datetime is UTC timezone-aware',"'@@ -36,6 +36,8 @@ Unreleased\n -   It is no longer required to decorate custom CLI commands on\n     ``app.cli`` or ``blueprint.cli`` with ``@with_appcontext``, an app\n     context will already be active at that point. :issue:`2410`\n+-   ``SessionInterface.get_expiration_time`` uses a timezone-aware\n+    value. :pr:`4645`\n \n \n Version 2.1.3\n'",0,0
src/flask/sessions.py,src/flask/sessions.py,ed42e9292811a95f2a68e06a9ae50cb5872216a3,cec5f74110a7369992be1651c24b695d9fe55ab3,'session expiration datetime is UTC timezone-aware',"'@@ -3,6 +3,7 @@ import typing as t\n import warnings\n from collections.abc import MutableMapping\n from datetime import datetime\n+from datetime import timezone\n \n from itsdangerous import BadSignature\n from itsdangerous import URLSafeTimedSerializer\n@@ -277,7 +278,7 @@ class SessionInterface:\n         lifetime configured on the application.\n         """"""\n         if session.permanent:\n-            return datetime.utcnow() + app.permanent_session_lifetime\n+            return datetime.now(timezone.utc) + app.permanent_session_lifetime\n         return None\n \n     def should_set_cookie(self, app: ""Flask"", session: SessionMixin) -> bool:\n'",1.826086956521739,1.826086956521739
tests/test_basic.py,tests/test_basic.py,ed42e9292811a95f2a68e06a9ae50cb5872216a3,cec5f74110a7369992be1651c24b695d9fe55ab3,'session expiration datetime is UTC timezone-aware',"'@@ -5,6 +5,7 @@ import uuid\n import warnings\n import weakref\n from datetime import datetime\n+from datetime import timezone\n from platform import python_implementation\n from threading import Thread\n \n@@ -436,7 +437,7 @@ def test_session_expiration(app, client):\n     assert ""set-cookie"" in rv.headers\n     match = re.search(r""(?i)\\bexpires=([^;]+)"", rv.headers[""set-cookie""])\n     expires = parse_date(match.group())\n-    expected = datetime.utcnow() + app.permanent_session_lifetime\n+    expected = datetime.now(timezone.utc) + app.permanent_session_lifetime\n     assert expires.year == expected.year\n     assert expires.month == expected.month\n     assert expires.day == expected.day\n@@ -466,7 +467,7 @@ def test_session_stored_last(app, client):\n \n \n def test_session_special_types(app, client):\n-    now = datetime.utcnow().replace(microsecond=0)\n+    now = datetime.now(timezone.utc).replace(microsecond=0)\n     the_uuid = uuid.uuid4()\n \n     @app.route(""/"")\n'",1.0766283524904214,1.0766283524904214
CHANGES.rst,CHANGES.rst,762382e436062183b1e1fa6f3bda594090a452e7,7f2a0f4806e40fb5c139b5b20ca443948ce1f4dd,'view functions can return generators as responses directly',"'@@ -38,6 +38,8 @@ Unreleased\n     context will already be active at that point. :issue:`2410`\n -   ``SessionInterface.get_expiration_time`` uses a timezone-aware\n     value. :pr:`4645`\n+-   View functions can return generators directly instead of wrapping\n+    them in a ``Response``. :pr:`4629`\n \n \n Version 2.1.3\n'",0,0
src/flask/app.py,src/flask/app.py,762382e436062183b1e1fa6f3bda594090a452e7,7f2a0f4806e40fb5c139b5b20ca443948ce1f4dd,'view functions can return generators as responses directly',"""@@ -5,6 +5,7 @@ import os\n import sys\n import typing as t\n import weakref\n+from collections.abc import Iterator as _abc_Iterator\n from datetime import timedelta\n from itertools import chain\n from threading import Lock\n@@ -1843,6 +1844,10 @@ class Flask(Scaffold):\n             ``dict``\n                 A dictionary that will be jsonify'd before being returned.\n \n+            ``generator`` or ``iterator``\n+                A generator that returns ``str`` or ``bytes`` to be\n+                streamed as the response.\n+\n             ``tuple``\n                 Either ``(body, status, headers)``, ``(body, status)``, or\n                 ``(body, headers)``, where ``body`` is any of the other types\n@@ -1862,6 +1867,12 @@ class Flask(Scaffold):\n                 The function is called as a WSGI application. The result is\n                 used to create a response object.\n \n+        .. versionchanged:: 2.2\n+            A generator will be converted to a streaming response.\n+\n+        .. versionchanged:: 1.1\n+            A dict will be converted to a JSON response.\n+\n         .. versionchanged:: 0.9\n            Previously a tuple was interpreted as the arguments for the\n            response object.\n@@ -1900,7 +1911,7 @@ class Flask(Scaffold):\n \n         # make sure the body is an instance of the response class\n         if not isinstance(rv, self.response_class):\n-            if isinstance(rv, (str, bytes, bytearray)):\n+            if isinstance(rv, (str, bytes, bytearray)) or isinstance(rv, _abc_Iterator):\n                 # let the response class set the status and headers instead of\n                 # waiting to do it manually, so that the class can handle any\n                 # special logic\n""",3.1714285714285713,3.1857142857142855
src/flask/typing.py,src/flask/typing.py,762382e436062183b1e1fa6f3bda594090a452e7,7f2a0f4806e40fb5c139b5b20ca443948ce1f4dd,'view functions can return generators as responses directly',"'@@ -6,7 +6,9 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.wrappers import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n-ResponseValue = t.Union[""Response"", str, bytes, t.Dict[str, t.Any]]\n+ResponseValue = t.Union[\n+    ""Response"", str, bytes, t.Dict[str, t.Any], t.Iterator[str], t.Iterator[bytes]\n+]\n \n # the possible types for an individual HTTP header\n # This should be a Union, but mypy doesn\'t pass unless it\'s a TypeVar.\n'",0,0
tests/test_basic.py,tests/test_basic.py,762382e436062183b1e1fa6f3bda594090a452e7,7f2a0f4806e40fb5c139b5b20ca443948ce1f4dd,'view functions can return generators as responses directly',"'@@ -1276,6 +1276,11 @@ def test_make_response(app, req_ctx):\n     assert rv.data == b""W00t""\n     assert rv.mimetype == ""text/html""\n \n+    rv = flask.make_response(c for c in ""Hello"")\n+    assert rv.status_code == 200\n+    assert rv.data == b""Hello""\n+    assert rv.mimetype == ""text/html""\n+\n \n def test_make_response_with_response_instance(app, req_ctx):\n     rv = flask.make_response(flask.jsonify({""msg"": ""W00t""}), 400)\n'",1.0766283524904214,1.0804597701149425
tests/typing/typing_route.py,tests/typing/typing_route.py,762382e436062183b1e1fa6f3bda594090a452e7,7f2a0f4806e40fb5c139b5b20ca443948ce1f4dd,'view functions can return generators as responses directly',"'@@ -1,9 +1,11 @@\n from __future__ import annotations\n \n+import typing as t\n from http import HTTPStatus\n \n from flask import Flask\n from flask import jsonify\n+from flask import stream_template\n from flask.templating import render_template\n from flask.views import View\n from flask.wrappers import Response\n@@ -26,6 +28,25 @@ def hello_json() -> Response:\n     return jsonify({""response"": ""Hello, World!""})\n \n \n+@app.route(""/generator"")\n+def hello_generator() -> t.Generator[str, None, None]:\n+    def show() -> t.Generator[str, None, None]:\n+        for x in range(100):\n+            yield f""data:{x}\\n\\n""\n+\n+    return show()\n+\n+\n+@app.route(""/generator-expression"")\n+def hello_generator_expression() -> t.Iterator[bytes]:\n+    return (f""data:{x}\\n\\n"".encode() for x in range(100))\n+\n+\n+@app.route(""/iterator"")\n+def hello_iterator() -> t.Iterator[str]:\n+    return iter([f""data:{x}\\n\\n"" for x in range(100)])\n+\n+\n @app.route(""/status"")\n @app.route(""/status/<int:code>"")\n def tuple_status(code: int = 200) -> tuple[str, int]:\n@@ -48,6 +69,11 @@ def return_template(name: str | None = None) -> str:\n     return render_template(""index.html"", name=name)\n \n \n+@app.route(""/template"")\n+def return_template_stream() -> t.Iterator[str]:\n+    return stream_template(""index.html"", name=""Hello"")\n+\n+\n class RenderTemplateView(View):\n     def __init__(self: RenderTemplateView, template_name: str) -> None:\n         self.template_name = template_name\n'",1.0,1.2142857142857142
CHANGES.rst,CHANGES.rst,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -40,6 +40,8 @@ Unreleased\n     value. :pr:`4645`\n -   View functions can return generators directly instead of wrapping\n     them in a ``Response``. :pr:`4629`\n+-   Add ``stream_template`` and ``stream_template_string`` functions to\n+    render a template as a stream of pieces. :pr:`4629`\n \n \n Version 2.1.3\n'",0,0
docs/api.rst,docs/api.rst,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -287,6 +287,10 @@ Template Rendering\n \n .. autofunction:: render_template_string\n \n+.. autofunction:: stream_template\n+\n+.. autofunction:: stream_template_string\n+\n .. autofunction:: get_template_attribute\n \n Configuration\n'",1.25,1.25
docs/patterns/streaming.rst,docs/patterns/streaming.rst,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -20,7 +20,7 @@ data and to then invoke that function and pass it to a response object::\n         def generate():\n             for row in iter_all_rows():\n                 yield f""{\',\'.join(row)}\\n""\n-        return app.response_class(generate(), mimetype=\'text/csv\')\n+        return generate(), {""Content-Type"": ""text/csv"")\n \n Each ``yield`` expression is directly sent to the browser.  Note though\n that some WSGI middlewares might break streaming, so be careful there in\n@@ -29,52 +29,57 @@ debug environments with profilers and other things you might have enabled.\n Streaming from Templates\n ------------------------\n \n-The Jinja2 template engine also supports rendering templates piece by\n-piece.  This functionality is not directly exposed by Flask because it is\n-quite uncommon, but you can easily do it yourself::\n-\n-    def stream_template(template_name, **context):\n-        app.update_template_context(context)\n-        t = app.jinja_env.get_template(template_name)\n-        rv = t.stream(context)\n-        rv.enable_buffering(5)\n-        return rv\n-\n-    @app.route(\'/my-large-page.html\')\n-    def render_large_template():\n-        rows = iter_all_rows()\n-        return app.response_class(stream_template(\'the_template.html\', rows=rows))\n-\n-The trick here is to get the template object from the Jinja2 environment\n-on the application and to call :meth:`~jinja2.Template.stream` instead of\n-:meth:`~jinja2.Template.render` which returns a stream object instead of a\n-string.  Since we\'re bypassing the Flask template render functions and\n-using the template object itself we have to make sure to update the render\n-context ourselves by calling :meth:`~flask.Flask.update_template_context`.\n-The template is then evaluated as the stream is iterated over.  Since each\n-time you do a yield the server will flush the content to the client you\n-might want to buffer up a few items in the template which you can do with\n-``rv.enable_buffering(size)``.  ``5`` is a sane default.\n+The Jinja2 template engine supports rendering a template piece by\n+piece, returning an iterator of strings. Flask provides the\n+:func:`~flask.stream_template` and :func:`~flask.stream_template_string`\n+functions to make this easier to use.\n+\n+.. code-block:: python\n+\n+    from flask import stream_template\n+\n+    @app.get(""/timeline"")\n+    def timeline():\n+        return stream_template(""timeline.html"")\n+\n+The parts yielded by the render stream tend to match statement blocks in\n+the template.\n+\n \n Streaming with Context\n ----------------------\n \n-.. versionadded:: 0.9\n+The :data:`~flask.request` will not be active while the generator is\n+running, because the view has already returned at that point. If you try\n+to access ``request``, you\'ll get a ``RuntimeError``.\n \n-Note that when you stream data, the request context is already gone the\n-moment the function executes.  Flask 0.9 provides you with a helper that\n-can keep the request context around during the execution of the\n-generator::\n+If your generator function relies on data in ``request``, use the\n+:func:`~flask.stream_with_context` wrapper. This will keep the request\n+context active during the generator.\n+\n+.. code-block:: python\n \n     from flask import stream_with_context, request\n+    from markupsafe import escape\n \n     @app.route(\'/stream\')\n     def streamed_response():\n         def generate():\n-            yield \'Hello \'\n-            yield request.args[\'name\']\n-            yield \'!\'\n-        return app.response_class(stream_with_context(generate()))\n+            yield \'<p>Hello \'\n+            yield escape(request.args[\'name\'])\n+            yield \'!</p>\'\n+        return stream_with_context(generate())\n+\n+It can also be used as a decorator.\n+\n+.. code-block:: python\n+\n+    @stream_with_context\n+    def generate():\n+        ...\n+\n+    return generate()\n \n-Without the :func:`~flask.stream_with_context` function you would get a\n-:class:`RuntimeError` at that point.\n+The :func:`~flask.stream_template` and\n+:func:`~flask.stream_template_string` functions automatically\n+use :func:`~flask.stream_with_context` if a request is active.\n'",1.25,1.25
docs/templating.rst,docs/templating.rst,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -201,3 +201,29 @@ templates::\n You could also build `format_price` as a template filter (see\n :ref:`registering-filters`), but this demonstrates how to pass functions in a\n context processor.\n+\n+Streaming\n+---------\n+\n+It can be useful to not render the whole template as one complete\n+string, instead render it as a stream, yielding smaller incremental\n+strings. This can be used for streaming HTML in chunks to speed up\n+initial page load, or to save memory when rendering a very large\n+template.\n+\n+The Jinja2 template engine supports rendering a template piece\n+by piece, returning an iterator of strings. Flask provides the\n+:func:`~flask.stream_template` and :func:`~flask.stream_template_string`\n+functions to make this easier to use.\n+\n+.. code-block:: python\n+\n+    from flask import stream_template\n+\n+    @app.get(""/timeline"")\n+    def timeline():\n+        return stream_template(""timeline.html"")\n+\n+These functions automatically apply the\n+:func:`~flask.stream_with_context` wrapper if a request is active, so\n+that it remains available in the template.\n'",1.0,1.0
src/flask/__init__.py,src/flask/__init__.py,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -41,5 +41,7 @@ from .signals import signals_available as signals_available\n from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n+from .templating import stream_template as stream_template\n+from .templating import stream_template_string as stream_template_string\n \n __version__ = ""2.2.0.dev0""\n'",0,0
src/flask/templating.py,src/flask/templating.py,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -7,6 +7,9 @@ from jinja2 import TemplateNotFound\n \n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n+from .globals import current_app\n+from .globals import request\n+from .helpers import stream_with_context\n from .signals import before_render_template\n from .signals import template_rendered\n \n@@ -122,8 +125,6 @@ class DispatchingJinjaLoader(BaseLoader):\n \n \n def _render(template: Template, context: dict, app: ""Flask"") -> str:\n-    """"""Renders the template and fires the signal""""""\n-\n     before_render_template.send(app, template=template, context=context)\n     rv = template.render(context)\n     template_rendered.send(app, template=template, context=context)\n@@ -164,3 +165,56 @@ def render_template_string(source: str, **context: t.Any) -> str:\n     ctx = _app_ctx_stack.top\n     ctx.app.update_template_context(context)\n     return _render(ctx.app.jinja_env.from_string(source), context, ctx.app)\n+\n+\n+def _stream(\n+    app: ""Flask"", template: Template, context: t.Dict[str, t.Any]\n+) -> t.Iterator[str]:\n+    app.update_template_context(context)\n+    before_render_template.send(app, template=template, context=context)\n+\n+    def generate() -> t.Iterator[str]:\n+        yield from template.generate(context)\n+        template_rendered.send(app, template=template, context=context)\n+\n+    rv = generate()\n+\n+    # If a request context is active, keep it while generating.\n+    if request:\n+        rv = stream_with_context(rv)\n+\n+    return rv\n+\n+\n+def stream_template(\n+    template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n+    **context: t.Any\n+) -> t.Iterator[str]:\n+    """"""Render a template by name with the given context as a stream.\n+    This returns an iterator of strings, which can be used as a\n+    streaming response from a view.\n+\n+    :param template_name_or_list: The name of the template to render. If\n+        a list is given, the first name to exist will be rendered.\n+    :param context: The variables to make available in the template.\n+\n+    .. versionadded:: 2.2\n+    """"""\n+    app = current_app._get_current_object()  # type: ignore[attr-defined]\n+    template = app.jinja_env.get_or_select_template(template_name_or_list)\n+    return _stream(app, template, context)\n+\n+\n+def stream_template_string(source: str, **context: t.Any) -> t.Iterator[str]:\n+    """"""Render a template from the given source string with the given\n+    context as a stream. This returns an iterator of strings, which can\n+    be used as a streaming response from a view.\n+\n+    :param source: The source code of the template to render.\n+    :param context: The variables to make available in the template.\n+\n+    .. versionadded:: 2.2\n+    """"""\n+    app = current_app._get_current_object()  # type: ignore[attr-defined]\n+    template = app.jinja_env.from_string(source)\n+    return _stream(app, template, context)\n'",2.5454545454545454,2.2
tests/test_templating.py,tests/test_templating.py,46433e9807a1c960d6b2bb0e125cf16a90167d97,762382e436062183b1e1fa6f3bda594090a452e7,'add generate_template and generate_template_string functions',"'@@ -29,6 +29,15 @@ def test_original_win(app, client):\n     assert rv.data == b""42""\n \n \n+def test_simple_stream(app, client):\n+    @app.route(""/"")\n+    def index():\n+        return flask.stream_template_string(""{{ config }}"", config=42)\n+\n+    rv = client.get(""/"")\n+    assert rv.data == b""42""\n+\n+\n def test_request_less_rendering(app, app_ctx):\n     app.config[""WORLD_NAME""] = ""Special World""\n \n'",1.0,1.0
docs/patterns/javascript.rst,docs/patterns/javascript.rst,abcb6c96777794da1142b0117f8c57f95cba65b7,9c50b8fc1ca160803f7368fc44f12591da856fd4,'Update javascript.rst',"""@@ -184,8 +184,8 @@ Replacing Content\n A response might be new HTML, either a new section of the page to add or\n replace, or an entirely new page. In general, if you're returning the\n entire page, it would be better to handle that with a redirect as shown\n-in the previous section. The following example shows how to a ``<div>``\n-with the HTML returned by a request.\n+in the previous section. The following example shows how to replace a\n+``<div>`` with the HTML returned by a request.\n \n .. code-block:: html\n \n""",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,64ab59817dedd7959b4b38d47403c86415f4a322,f6be300c4284527f76f910fe0d6f07d72a10a52b,'show separate HTTP method route decorators in quickstart',"""@@ -390,6 +390,24 @@ of the :meth:`~flask.Flask.route` decorator to handle different HTTP methods.\n         else:\n             return show_the_login_form()\n \n+The example above keeps all methods for the route within one function,\n+which can be useful if each part uses some common data.\n+\n+You can also separate views for different methods into different\n+functions. Flask provides a shortcut for decorating such routes with\n+:meth:`~flask.Flask.get`, :meth:`~flask.Flask.post`, etc. for each\n+common HTTP method.\n+\n+.. code-block:: python\n+\n+    @app.get('/login')\n+    def login_get():\n+        return show_the_login_form()\n+\n+    @app.post('/login')\n+    def login_post():\n+        return do_the_login()\n+\n If ``GET`` is present, Flask automatically adds support for the ``HEAD`` method\n and handles ``HEAD`` requests according to the `HTTP RFC`_. Likewise,\n ``OPTIONS`` is automatically implemented for you.\n""",1.2666666666666666,1.2352941176470589
docs/extensiondev.rst,docs/extensiondev.rst,b46bfcfa63e3c7b32b66dd4870f1c8c17fe1cb46,0a01248b5cee9d47363207687660708d5ba3ee4b,'rewrite extension development docs',"'@@ -1,310 +1,284 @@\n Flask Extension Development\n ===========================\n \n-Flask, being a microframework, often requires some repetitive steps to get\n-a third party library working. Many such extensions are already available\n-on `PyPI`_.\n-\n-If you want to create your own Flask extension for something that does not\n-exist yet, this guide to extension development will help you get your\n-extension running in no time and to feel like users would expect your\n-extension to behave.\n-\n-Anatomy of an Extension\n------------------------\n-\n-Extensions are all located in a package called ``flask_something``\n-where ""something"" is the name of the library you want to bridge.  So for\n-example if you plan to add support for a library named `simplexml` to\n-Flask, you would name your extension\'s package ``flask_simplexml``.\n-\n-The name of the actual extension (the human readable name) however would\n-be something like ""Flask-SimpleXML"".  Make sure to include the name\n-""Flask"" somewhere in that name and that you check the capitalization.\n-This is how users can then register dependencies to your extension in\n-their :file:`setup.py` files.\n-\n-But what do extensions look like themselves?  An extension has to ensure\n-that it works with multiple Flask application instances at once.  This is\n-a requirement because many people will use patterns like the\n-:doc:`/patterns/appfactories` pattern to create their application as\n-needed to aid unittests and to support multiple configurations. Because\n-of that it is crucial that your application supports that kind of\n-behavior.\n-\n-Most importantly the extension must be shipped with a :file:`setup.py` file and\n-registered on PyPI.  Also the development checkout link should work so\n-that people can easily install the development version into their\n-virtualenv without having to download the library by hand.\n-\n-Flask extensions must be licensed under a BSD, MIT or more liberal license\n-in order to be listed in the Flask Extension Registry.  Keep in mind\n-that the Flask Extension Registry is a moderated place and libraries will\n-be reviewed upfront if they behave as required.\n-\n-""Hello Flaskext!""\n------------------\n-\n-So let\'s get started with creating such a Flask extension.  The extension\n-we want to create here will provide very basic support for SQLite3.\n-\n-First we create the following folder structure::\n-\n-    flask-sqlite3/\n-        flask_sqlite3.py\n-        LICENSE\n-        README\n-\n-Here\'s the contents of the most important files:\n-\n-setup.py\n-````````\n-\n-The next file that is absolutely required is the :file:`setup.py` file which is\n-used to install your Flask extension.  The following contents are\n-something you can work with::\n-\n-    """"""\n-    Flask-SQLite3\n-    -------------\n-\n-    This is the description for that library\n-    """"""\n-    from setuptools import setup\n-\n-\n-    setup(\n-        name=\'Flask-SQLite3\',\n-        version=\'1.0\',\n-        url=\'http://example.com/flask-sqlite3/\',\n-        license=\'BSD\',\n-        author=\'Your Name\',\n-        author_email=\'your-email@example.com\',\n-        description=\'Very short description\',\n-        long_description=__doc__,\n-        py_modules=[\'flask_sqlite3\'],\n-        # if you would be using a package instead use packages instead\n-        # of py_modules:\n-        # packages=[\'flask_sqlite3\'],\n-        zip_safe=False,\n-        include_package_data=True,\n-        platforms=\'any\',\n-        install_requires=[\n-            \'Flask\'\n-        ],\n-        classifiers=[\n-            \'Environment :: Web Environment\',\n-            \'Intended Audience :: Developers\',\n-            \'License :: OSI Approved :: BSD License\',\n-            \'Operating System :: OS Independent\',\n-            \'Programming Language :: Python\',\n-            \'Topic :: Internet :: WWW/HTTP :: Dynamic Content\',\n-            \'Topic :: Software Development :: Libraries :: Python Modules\'\n-        ]\n-    )\n-\n-That\'s a lot of code but you can really just copy/paste that from existing\n-extensions and adapt.\n-\n-flask_sqlite3.py\n-````````````````\n-\n-Now this is where your extension code goes.  But how exactly should such\n-an extension look like?  What are the best practices?  Continue reading\n-for some insight.\n-\n-Initializing Extensions\n------------------------\n-\n-Many extensions will need some kind of initialization step.  For example,\n-consider an application that\'s currently connecting to SQLite like the\n-documentation suggests (:doc:`/patterns/sqlite3`). So how does the\n-extension know the name of the application object?\n-\n-Quite simple: you pass it to it.\n-\n-There are two recommended ways for an extension to initialize:\n-\n-initialization functions:\n-\n-    If your extension is called `helloworld` you might have a function\n-    called ``init_helloworld(app[, extra_args])`` that initializes the\n-    extension for that application.  It could attach before / after\n-    handlers etc.\n+.. currentmodule:: flask\n \n-classes:\n+Extensions are extra packages that add functionality to a Flask\n+application. While `PyPI`_ contains many Flask extensions, you may not\n+find one that fits your need. If this is the case, you can create your\n+own, and publish it for others to use as well.\n \n-    Classes work mostly like initialization functions but can later be\n-    used to further change the behavior.\n+This guide will show how to create a Flask extension, and some of the\n+common patterns and requirements involved. Since extensions can do\n+anything, this guide won\'t be able to cover every possibility.\n \n-What to use depends on what you have in mind.  For the SQLite 3 extension\n-we will use the class-based approach because it will provide users with an\n-object that handles opening and closing database connections.\n+The best ways to learn about extensions are to look at how other\n+extensions you use are written, and discuss with others. Discuss your\n+design ideas with others on our `Discord Chat`_ or\n+`GitHub Discussions`_.\n \n-When designing your classes, it\'s important to make them easily reusable\n-at the module level. This means the object itself must not under any\n-circumstances store any application specific state and must be shareable\n-between different applications.\n+The best extensions share common patterns, so that anyone familiar with\n+using one extension won\'t feel completely lost with another. This can\n+only work if collaboration happens early.\n \n-The Extension Code\n-------------------\n-\n-Here\'s the contents of the `flask_sqlite3.py` for copy/paste::\n-\n-    import sqlite3\n-    from flask import current_app, _app_ctx_stack\n \n+Naming\n+------\n \n-    class SQLite3(object):\n-        def __init__(self, app=None):\n-            self.app = app\n-            if app is not None:\n-                self.init_app(app)\n-\n-        def init_app(self, app):\n-            app.config.setdefault(\'SQLITE3_DATABASE\', \':memory:\')\n-            app.teardown_appcontext(self.teardown)\n-\n-        def connect(self):\n-            return sqlite3.connect(current_app.config[\'SQLITE3_DATABASE\'])\n-\n-        def teardown(self, exception):\n-            ctx = _app_ctx_stack.top\n-            if hasattr(ctx, \'sqlite3_db\'):\n-                ctx.sqlite3_db.close()\n-\n-        @property\n-        def connection(self):\n-            ctx = _app_ctx_stack.top\n-            if ctx is not None:\n-                if not hasattr(ctx, \'sqlite3_db\'):\n-                    ctx.sqlite3_db = self.connect()\n-                return ctx.sqlite3_db\n-\n-\n-So here\'s what these lines of code do:\n-\n-1.  The ``__init__`` method takes an optional app object and, if supplied, will\n-    call ``init_app``.\n-2.  The ``init_app`` method exists so that the ``SQLite3`` object can be\n-    instantiated without requiring an app object.  This method supports the\n-    factory pattern for creating applications.  The ``init_app`` will set the\n-    configuration for the database, defaulting to an in memory database if\n-    no configuration is supplied.  In addition, the ``init_app`` method\n-    attaches the ``teardown`` handler.\n-3.  Next, we define a ``connect`` method that opens a database connection.\n-4.  Finally, we add a ``connection`` property that on first access opens\n-    the database connection and stores it on the context.  This is also\n-    the recommended way to handling resources: fetch resources lazily the\n-    first time they are used.\n-\n-    Note here that we\'re attaching our database connection to the top\n-    application context via ``_app_ctx_stack.top``. Extensions should use\n-    the top context for storing their own information with a sufficiently\n-    complex name.\n-\n-So why did we decide on a class-based approach here?  Because using our\n-extension looks something like this::\n-\n-    from flask import Flask\n-    from flask_sqlite3 import SQLite3\n-\n-    app = Flask(__name__)\n-    app.config.from_pyfile(\'the-config.cfg\')\n-    db = SQLite3(app)\n-\n-You can then use the database from views like this::\n-\n-    @app.route(\'/\')\n-    def show_all():\n-        cur = db.connection.cursor()\n-        cur.execute(...)\n-\n-Likewise if you are outside of a request you can use the database by\n-pushing an app context::\n-\n-    with app.app_context():\n-        cur = db.connection.cursor()\n-        cur.execute(...)\n-\n-At the end of the ``with`` block the teardown handles will be executed\n-automatically.\n-\n-Additionally, the ``init_app`` method is used to support the factory pattern\n-for creating apps::\n-\n-    db = SQLite3()\n-    # Then later on.\n-    app = create_app(\'the-config.cfg\')\n-    db.init_app(app)\n-\n-Keep in mind that supporting this factory pattern for creating apps is required\n-for approved flask extensions (described below).\n-\n-.. admonition:: Note on ``init_app``\n+A Flask extension typically has ``flask`` in its name as a prefix or\n+suffix. If it wraps another library, it should include the library name\n+as well. This makes it easy to search for extensions, and makes their\n+purpose clearer.\n \n-   As you noticed, ``init_app`` does not assign ``app`` to ``self``.  This\n-   is intentional!  Class based Flask extensions must only store the\n-   application on the object when the application was passed to the\n-   constructor.  This tells the extension: I am not interested in using\n-   multiple applications.\n+A general Python packaging recommendation is that the install name from\n+the package index and the name used in ``import`` statements should be\n+related. The import name is lowercase, with words separated by\n+underscores (``_``). The install name is either lower case or title\n+case, with words separated by dashes (``-``). If it wraps another\n+library, prefer using the same case as that library\'s name.\n \n-   When the extension needs to find the current application and it does\n-   not have a reference to it, it must either use the\n-   :data:`~flask.current_app` context local or change the API in a way\n-   that you can pass the application explicitly.\n+Here are some example install and import names:\n \n+-   ``Flask-Name`` imported as ``flask_name``\n+-   ``flask-name-lower`` imported as ``flask_name_lower``\n+-   ``Flask-ComboName`` imported as ``flask_comboname``\n+-   ``Name-Flask`` imported as ``name_flask``\n \n-Using _app_ctx_stack\n---------------------\n \n-In the example above, before every request, a ``sqlite3_db`` variable is\n-assigned to ``_app_ctx_stack.top``.  In a view function, this variable is\n-accessible using the ``connection`` property of ``SQLite3``.  During the\n-teardown of a request, the ``sqlite3_db`` connection is closed.  By using\n-this pattern, the *same* connection to the sqlite3 database is accessible\n-to anything that needs it for the duration of the request.\n+The Extension Class and Initialization\n+--------------------------------------\n \n+All extensions will need some entry point that initializes the\n+extension with the application. The most common pattern is to create a\n+class that represents the extension\'s configuration and behavior, with\n+an ``init_app`` method to apply the extension instance to the given\n+application instance.\n \n-Learn from Others\n------------------\n+.. code-block:: python\n \n-This documentation only touches the bare minimum for extension development.\n-If you want to learn more, it\'s a very good idea to check out existing extensions\n-on `PyPI`_.  If you feel lost there is `Discord Chat`_ or\n-`GitHub Discussions`_ to get some ideas for nice looking APIs.  Especially if you do\n-something nobody before you did, it might be a very good idea to get some more\n-input.  This not only generates useful feedback on what people might want from\n-an extension, but also avoids having multiple developers working in isolation\n-on pretty much the same problem.\n-\n-Remember: good API design is hard, so introduce your project on\n-`Discord Chat`_ or `GitHub Discussions`_, and let other developers give\n-you a helping hand with designing the API.\n+    class HelloExtension:\n+        def __init__(self, app=None):\n+            if app is not None:\n+                self.init_app(app)\n \n-The best Flask extensions are extensions that share common idioms for the\n-API.  And this can only work if collaboration happens early.\n+        def init_app(self, app):\n+            app.before_request(...)\n+\n+It is important that the app is not stored on the extension, don\'t do\n+``self.app = app``. The only time the extension should have direct\n+access to an app is during ``init_app``, otherwise it should use\n+:data:`current_app`.\n+\n+This allows the extension to support the application factory pattern,\n+avoids circular import issues when importing the extension instance\n+elsewhere in a user\'s code, and makes testing with different\n+configurations easier.\n+\n+.. code-block:: python\n+\n+    hello = HelloExtension()\n+\n+    def create_app():\n+        app = Flask(__name__)\n+        hello.init_app(app)\n+        return app\n+\n+Above, the ``hello`` extension instance exists independently of the\n+application. This means that other modules in a user\'s project can do\n+``from project import hello`` and use the extension in blueprints before\n+the app exists.\n+\n+The :attr:`Flask.extensions` dict can be used to store a reference to\n+the extension on the application, or some other state specific to the\n+application. Be aware that this is a single namespace, so use a name\n+unique to your extension, such as the extension\'s name without the\n+""flask"" prefix.\n+\n+\n+Adding Behavior\n+---------------\n+\n+There are many ways that an extension can add behavior. Any setup\n+methods that are available on the :class:`Flask` object can be used\n+during an extension\'s ``init_app`` method.\n+\n+A common pattern is to use :meth:`~Flask.before_request` to initialize\n+some data or a connection at the beginning of each request, then\n+:meth:`~Flask.teardown_request` to clean it up at the end. This can be\n+stored on :data:`g`, discussed more below.\n+\n+A more lazy approach is to provide a method that initializes and caches\n+the data or connection. For example, a ``ext.get_db`` method could\n+create a database connection the first time it\'s called, so that a view\n+that doesn\'t use the database doesn\'t create a connection.\n+\n+Besides doing something before and after every view, your extension\n+might want to add some specific views as well. In this case, you could\n+define a :class:`Blueprint`, then call :meth:`~Flask.register_blueprint`\n+during ``init_app`` to add the blueprint to the app.\n+\n+\n+Configuration Techniques\n+------------------------\n+\n+There can be multiple levels and sources of configuration for an\n+extension. You should consider what parts of your extension fall into\n+each one.\n+\n+-   Configuration per application instance, through ``app.config``\n+    values. This is configuration that could reasonably change for each\n+    deployment of an application. A common example is a URL to an\n+    external resource, such as a database. Configuration keys should\n+    start with the extension\'s name so that they don\'t interfere with\n+    other extensions.\n+-   Configuration per extension instance, through ``__init__``\n+    arguments. This configuration usually affects how the extension\n+    is used, such that it wouldn\'t make sense to change it per\n+    deployment.\n+-   Configuration per extension instance, through instance attributes\n+    and decorator methods. It might be more ergonomic to assign to\n+    ``ext.value``, or use a ``@ext.register`` decorator to register a\n+    function, after the extension instance has been created.\n+-   Global configuration through class attributes. Changing a class\n+    attribute like ``Ext.connection_class`` can customize default\n+    behavior without making a subclass. This could be combined\n+    per-extension configuration to override defaults.\n+-   Subclassing and overriding methods and attributes. Making the API of\n+    the extension itself something that can be overridden provides a\n+    very powerful tool for advanced customization.\n+\n+The :class:`~flask.Flask` object itself uses all of these techniques.\n+\n+It\'s up to you to decide what configuration is appropriate for your\n+extension, based on what you need and what you want to support.\n+\n+Configuration should not be changed after the application setup phase is\n+complete and the server begins handling requests. Configuration is\n+global, any changes to it are not guaranteed to be visible to other\n+workers.\n+\n+\n+Data During a Request\n+---------------------\n+\n+When writing a Flask application, the :data:`~flask.g` object is used to\n+store information during a request. For example the\n+:doc:`tutorial <tutorial/database>` stores a connection to a SQLite\n+database as ``g.db``. Extensions can also use this, with some care.\n+Since ``g`` is a single global namespace, extensions must use unique\n+names that won\'t collide with user data. For example, use the extension\n+name as a prefix, or as a namespace.\n+\n+.. code-block:: python\n+\n+    # an internal prefix with the extension name\n+    g._hello_user_id = 2\n+\n+    # or an internal prefix as a namespace\n+    from types import SimpleNamespace\n+    g._hello = SimpleNamespace()\n+    g._hello.user_id = 2\n+\n+The data in ``g`` lasts for an application context. An application\n+context is active when a request context is, or when a CLI command is\n+run. If you\'re storing something that should be closed, use\n+:meth:`~flask.Flask.teardown_appcontext` to ensure that it gets closed\n+when the application context ends. If it should only be valid during a\n+request, or would not be used in the CLI outside a reqeust, use\n+:meth:`~flask.Flask.teardown_request`.\n+\n+An older technique for storing context data was to store it on\n+``_app_ctx_stack.top`` or ``_request_ctx_stack.top``. However, this just\n+moves the same namespace collision problem elsewhere (although less\n+likely) and modifies objects that are very internal to Flask\'s\n+operations. Prefer storing data under a unique name in ``g``.\n+\n+\n+Views and Models\n+----------------\n+\n+Your extension views might want to interact with specific models in your\n+database, or some other extension or data connected to your application.\n+For example, let\'s consider a ``Flask-SimpleBlog`` extension that works\n+with Flask-SQLAlchemy to provide a ``Post`` model and views to write\n+and read posts.\n+\n+The ``Post`` model needs to subclass the Flask-SQLAlchemy ``db.Model``\n+object, but that\'s only available once you\'ve created an instance of\n+that extension, not when your extension is defining its views. So how\n+can the view code, defined before the model exists, access the model?\n+\n+One method could be to use :doc:`views`. During ``__init__``, create\n+the model, then create the views by passing the model to the view\n+class\'s :meth:`~views.View.as_view` method.\n+\n+.. code-block:: python\n+\n+    class PostAPI(MethodView):\n+        def __init__(self, model):\n+            self.model = model\n+\n+        def get(id):\n+            post = self.model.query.get(id)\n+            return jsonify(post.to_json())\n+\n+    class BlogExtension:\n+        def __init__(self, db):\n+            class Post(db.Model):\n+                id = db.Column(primary_key=True)\n+                title = db.Column(db.String, nullable=False)\n+\n+            self.post_model = Post\n \n-Approved Extensions\n--------------------\n+        def init_app(self, app):\n+            api_view = PostAPI.as_view(model=self.post_model)\n \n-Flask previously had the concept of approved extensions. These came with\n-some vetting of support and compatibility. While this list became too\n-difficult to maintain over time, the guidelines are still relevant to\n-all extensions maintained and developed today, as they help the Flask\n+    db = SQLAlchemy()\n+    blog = BlogExtension(db)\n+    db.init_app(app)\n+    blog.init_app(app)\n+\n+Another technique could be to use an attribute on the extension, such as\n+``self.post_model`` from above. Add the extension to ``app.extensions``\n+in ``init_app``, then access\n+``current_app.extensions[""simple_blog""].post_model`` from views.\n+\n+You may also want to provide base classes so that users can provide\n+their own ``Post`` model that conforms to the API your extension\n+expects. So they could implement ``class Post(blog.BasePost)``, then\n+set it as ``blog.post_model``.\n+\n+As you can see, this can get a bit complex. Unfortunately, there\'s no\n+perfect solution here, only different strategies and tradeoffs depending\n+on your needs and how much customization you want to offer. Luckily,\n+this sort of resource dependency is not a common need for most\n+extensions. Remember, if you need help with design, ask on our\n+`Discord Chat`_ or `GitHub Discussions`_.\n+\n+\n+Recommended Extension Guidelines\n+--------------------------------\n+\n+Flask previously had the concept of ""approved extensions"", where the\n+Flask maintainers evaluated the quality, support, and compatibility of\n+the extensions before listing them. While the list became too difficult\n+to maintain over time, the guidelines are still relevant to all\n+extensions maintained and developed today, as they help the Flask\n ecosystem remain consistent and compatible.\n \n-0.  An approved Flask extension requires a maintainer. In the event an\n-    extension author would like to move beyond the project, the project\n-    should find a new maintainer and transfer access to the repository,\n-    documentation, PyPI, and any other services. If no maintainer\n-    is available, give access to the Pallets core team.\n-1.  The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*.\n+1.  An extension requires a maintainer. In the event an extension author\n+    would like to move beyond the project, the project should find a new\n+    maintainer and transfer access to the repository, documentation,\n+    PyPI, and any other services. The `Pallets-Eco`_ organization on\n+    GitHub allows for community maintenance with oversight from the\n+    Pallets maintainers.\n+2.  The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*.\n     It must provide exactly one package or module named\n     ``flask_extension_name``.\n-2.  The extension must be BSD or MIT licensed. It must be open source\n-    and publicly available.\n-3.  The extension\'s API must have the following characteristics:\n+3.  The extension must use an open source license. The Python web\n+    ecosystem tends to prefer BSD or MIT. It must be open source and\n+    publicly available.\n+4.  The extension\'s API must have the following characteristics:\n \n     -   It must support multiple applications running in the same Python\n         process. Use ``current_app`` instead of ``self.app``, store\n@@ -312,21 +286,25 @@ ecosystem remain consistent and compatible.\n     -   It must be possible to use the factory pattern for creating\n         applications. Use the ``ext.init_app()`` pattern.\n \n-4.  From a clone of the repository, an extension with its dependencies\n-    must be installable with ``pip install -e .``.\n-5.  It must ship a testing suite that can be invoked with ``tox -e py``\n-    or ``pytest``. If not using ``tox``, the test dependencies should be\n-    specified in a ``requirements.txt`` file. The tests must be part of\n-    the sdist distribution.\n-6.  The documentation must use the ``flask`` theme from the\n-    `Official Pallets Themes`_. A link to the documentation or project\n-    website must be in the PyPI metadata or the readme.\n-7.  For maximum compatibility, the extension should support the same\n-    versions of Python that Flask supports. 3.7+ is recommended as of\n-    December 2021. Use ``python_requires="">= 3.7""`` in ``setup.py`` to\n-    indicate supported versions.\n+5.  From a clone of the repository, an extension with its dependencies\n+    must be installable in editable mode with ``pip install -e .``.\n+6.  It must ship tests that can be invoked with a common tool like\n+    ``tox -e py``, ``nox -s test`` or ``pytest``. If not using ``tox``,\n+    the test dependencies should be specified in a requirements file.\n+    The tests must be part of the sdist distribution.\n+7.  A link to the documentation or project website must be in the PyPI\n+    metadata or the readme. The documentation should use the Flask theme\n+    from the `Official Pallets Themes`_.\n+8.  The extension\'s dependencies should not use upper bounds or assume\n+    any particular version scheme, but should use lower bounds to\n+    indicate minimum compatibility support. For example,\n+    ``sqlalchemy>=1.4``.\n+9.  Indicate the versions of Python supported using\n+    ``python_requires="">=version""``. Flask itself supports Python >=3.7\n+    as of December 2021, but this will update over time.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _Discord Chat: https://discord.gg/pallets\n .. _GitHub Discussions: https://github.com/pallets/flask/discussions\n .. _Official Pallets Themes: https://pypi.org/project/Pallets-Sphinx-Themes/\n+.. _Pallets-Eco: https://github.com/pallets-eco\n'",1.6666666666666667,1.3333333333333333
docs/extensions.rst,docs/extensions.rst,b46bfcfa63e3c7b32b66dd4870f1c8c17fe1cb46,0a01248b5cee9d47363207687660708d5ba3ee4b,'rewrite extension development docs',"'@@ -39,10 +39,10 @@ an extension called ""Flask-Foo"" might be used like this::\n Building Extensions\n -------------------\n \n-While the `PyPI <pypi_>`_ contains many Flask extensions, you may\n-not find an extension that fits your need. If this is the case, you can\n-create your own. Read :doc:`/extensiondev` to develop your own Flask\n-extension.\n+While `PyPI <pypi_>`_ contains many Flask extensions, you may not find\n+an extension that fits your need. If this is the case, you can create\n+your own, and publish it for others to use as well. Read\n+:doc:`extensiondev` to develop your own Flask extension.\n \n \n .. _pypi: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n'",0,0
src/flask/app.py,src/flask/app.py,5544d09477af3221d988ec18b086930c2d9e67cd,ab36542260c61f178b6e8f61312b706ac4c5f73e,'re-add flag to skip unguarded app.run from CLI',"'@@ -916,8 +916,8 @@ class Flask(Scaffold):\n         if os.environ.get(""FLASK_RUN_FROM_CLI"") == ""true"":\n             if not is_running_from_reloader():\n                 click.secho(\n-                    "" * Ignoring a call to \'app.run()\', the server is""\n-                    "" already being run with the \'flask run\' command.\\n""\n+                    "" * Ignoring a call to \'app.run()\' that would block""\n+                    "" the current \'flask\' CLI command.\\n""\n                     ""   Only call \'app.run()\' in an \'if __name__ ==""\n                     \' ""__main__""\\\' guard.\',\n                     fg=""red"",\n'",3.1857142857142855,3.1857142857142855
src/flask/cli.py,src/flask/cli.py,5544d09477af3221d988ec18b086930c2d9e67cd,ab36542260c61f178b6e8f61312b706ac4c5f73e,'re-add flag to skip unguarded app.run from CLI',"'@@ -715,6 +715,11 @@ class FlaskGroup(AppGroup):\n         parent: click.Context | None = None,\n         **extra: t.Any,\n     ) -> click.Context:\n+        # Set a flag to tell app.run to become a no-op. If app.run was\n+        # not in a __name__ == __main__ guard, it would start the server\n+        # when importing, blocking whatever command is being called.\n+        os.environ[""FLASK_RUN_FROM_CLI""] = ""true""\n+\n         # Attempt to load .env and .flask env files. The --env-file\n         # option can cause another file to be loaded.\n         if get_load_dotenv(self.load_dotenv):\n'",4.05,4.05
tests/test_cli.py,tests/test_cli.py,5544d09477af3221d988ec18b086930c2d9e67cd,ab36542260c61f178b6e8f61312b706ac4c5f73e,'re-add flag to skip unguarded app.run from CLI',"'@@ -13,7 +13,6 @@ import pytest\n from _pytest.monkeypatch import notset\n from click.testing import CliRunner\n \n-from flask import _app_ctx_stack\n from flask import Blueprint\n from flask import current_app\n from flask import Flask\n@@ -322,13 +321,11 @@ def test_app_cli_has_app_context(app, runner):\n         app = click.get_current_context().obj.load_app()\n         # the loaded app should be the same as current_app\n         same_app = current_app._get_current_object() is app\n-        # only one app context should be pushed\n-        stack_size = len(_app_ctx_stack._local.stack)\n-        return same_app, stack_size, value\n+        return same_app, value\n \n     cli = FlaskGroup(create_app=lambda: app)\n     result = runner.invoke(cli, [""check"", ""x""], standalone_mode=False)\n-    assert result.return_value == (True, 1, True)\n+    assert result.return_value == (True, True)\n \n \n def test_with_appcontext(runner):\n'",1.056338028169014,1.056338028169014
.github/workflows/tests.yaml,.github/workflows/tests.yaml,2589328485f51ad17afda682dd84a83da4e4e38e,3635583ce27f70a3d9efd1e2212d5efc1d256333,'Bump actions/setup-python from 3 to 4\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 3 to 4.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v3\n-      - uses: actions/setup-python@v3\n+      - uses: actions/setup-python@v4\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
CHANGES.rst,CHANGES.rst,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -42,6 +42,18 @@ Unreleased\n     them in a ``Response``. :pr:`4629`\n -   Add ``stream_template`` and ``stream_template_string`` functions to\n     render a template as a stream of pieces. :pr:`4629`\n+-   A new implementation of context preservation during debugging and\n+    testing. :pr:`4666`\n+\n+    -   ``request``, ``g``, and other context-locals point to the\n+        correct data when running code in the interactive debugger\n+        console. :issue:`2836`\n+    -   Teardown functions are always run at the end of the request,\n+        even if the context is preserved. They are also run after the\n+        preserved context is popped.\n+    -   ``stream_with_context`` preserves context separately from a\n+        ``with client`` block. It will be cleaned up when\n+        ``response.get_data()`` or ``response.close()`` is called.\n \n \n Version 2.1.3\n'",0,0
docs/config.rst,docs/config.rst,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"""@@ -126,14 +126,6 @@ The following configuration values are used internally by Flask:\n \n     Default: ``None``\n \n-.. py:data:: PRESERVE_CONTEXT_ON_EXCEPTION\n-\n-    Don't pop the request context when an exception occurs. If not set, this\n-    is true if ``DEBUG`` is true. This allows debuggers to introspect the\n-    request data on errors, and should normally not need to be set directly.\n-\n-    Default: ``None``\n-\n .. py:data:: TRAP_HTTP_EXCEPTIONS\n \n     If there is no handler for an ``HTTPException``-type exception, re-raise it\n@@ -392,6 +384,9 @@ The following configuration values are used internally by Flask:\n \n     Added :data:`MAX_COOKIE_SIZE` to control a warning from Werkzeug.\n \n+.. versionchanged:: 2.2\n+    Removed ``PRESERVE_CONTEXT_ON_EXCEPTION``.\n+\n \n Configuring from Python Files\n -----------------------------\n""",1.0,1.0
docs/reqcontext.rst,docs/reqcontext.rst,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"""@@ -219,25 +219,6 @@ sent:\n     :meth:`~Flask.teardown_request` functions are called.\n \n \n-Context Preservation on Error\n------------------------------\n-\n-At the end of a request, the request context is popped and all data\n-associated with it is destroyed. If an error occurs during development,\n-it is useful to delay destroying the data for debugging purposes.\n-\n-When the development server is running in development mode (the\n-``--env`` option is set to ``'development'``), the error and data will\n-be preserved and shown in the interactive debugger.\n-\n-This behavior can be controlled with the\n-:data:`PRESERVE_CONTEXT_ON_EXCEPTION` config. As described above, it\n-defaults to ``True`` in the development environment.\n-\n-Do not enable :data:`PRESERVE_CONTEXT_ON_EXCEPTION` in production, as it\n-will cause your application to leak memory on exceptions.\n-\n-\n .. _notes-on-proxies:\n \n Notes On Proxies\n""",0,0
src/flask/app.py,src/flask/app.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -331,7 +331,6 @@ class Flask(Scaffold):\n             ""DEBUG"": None,\n             ""TESTING"": False,\n             ""PROPAGATE_EXCEPTIONS"": None,\n-            ""PRESERVE_CONTEXT_ON_EXCEPTION"": None,\n             ""SECRET_KEY"": None,\n             ""PERMANENT_SESSION_LIFETIME"": timedelta(days=31),\n             ""USE_X_SENDFILE"": False,\n@@ -583,19 +582,6 @@ class Flask(Scaffold):\n             return rv\n         return self.testing or self.debug\n \n-    @property\n-    def preserve_context_on_exception(self) -> bool:\n-        """"""Returns the value of the ``PRESERVE_CONTEXT_ON_EXCEPTION``\n-        configuration value in case it\'s set, otherwise a sensible default\n-        is returned.\n-\n-        .. versionadded:: 0.7\n-        """"""\n-        rv = self.config[""PRESERVE_CONTEXT_ON_EXCEPTION""]\n-        if rv is not None:\n-            return rv\n-        return self.debug\n-\n     @locked_cached_property\n     def logger(self) -> logging.Logger:\n         """"""A standard Python :class:`~logging.Logger` for the app, with\n@@ -2301,9 +2287,14 @@ class Flask(Scaffold):\n                 raise\n             return response(environ, start_response)\n         finally:\n-            if self.should_ignore_error(error):\n+            if ""werkzeug.debug.preserve_context"" in environ:\n+                environ[""werkzeug.debug.preserve_context""](_app_ctx_stack.top)\n+                environ[""werkzeug.debug.preserve_context""](_request_ctx_stack.top)\n+\n+            if error is not None and self.should_ignore_error(error):\n                 error = None\n-            ctx.auto_pop(error)\n+\n+            ctx.pop(error)\n \n     def __call__(self, environ: dict, start_response: t.Callable) -> t.Any:\n         """"""The WSGI server calls the Flask application object as the\n'",3.1857142857142855,3.2318840579710146
src/flask/ctx.py,src/flask/ctx.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -289,20 +289,12 @@ class RequestContext:\n     functions registered on the application for teardown execution\n     (:meth:`~flask.Flask.teardown_request`).\n \n-    The request context is automatically popped at the end of the request\n-    for you.  In debug mode the request context is kept around if\n-    exceptions happen so that interactive debuggers have a chance to\n-    introspect the data.  With 0.4 this can also be forced for requests\n-    that did not fail and outside of ``DEBUG`` mode.  By setting\n-    ``\'flask._preserve_context\'`` to ``True`` on the WSGI environment the\n-    context will not pop itself at the end of the request.  This is used by\n-    the :meth:`~flask.Flask.test_client` for example to implement the\n-    deferred cleanup functionality.\n-\n-    You might find this helpful for unittests where you need the\n-    information from the context local around for a little longer.  Make\n-    sure to properly :meth:`~werkzeug.LocalStack.pop` the stack yourself in\n-    that situation, otherwise your unittests will leak memory.\n+    The request context is automatically popped at the end of the\n+    request. When using the interactive debugger, the context will be\n+    restored so ``request`` is still accessible. Similarly, the test\n+    client can preserve the context after the request ends. However,\n+    teardown functions may already have closed some resources such as\n+    database connections.\n     """"""\n \n     def __init__(\n@@ -330,14 +322,6 @@ class RequestContext:\n         # one is created implicitly so for each level we add this information\n         self._implicit_app_ctx_stack: t.List[t.Optional[""AppContext""]] = []\n \n-        # indicator if the context was preserved.  Next time another context\n-        # is pushed the preserved context is popped.\n-        self.preserved = False\n-\n-        # remembers the exception for pop if there is one in case the context\n-        # preservation kicks in.\n-        self._preserved_exc = None\n-\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n@@ -400,19 +384,6 @@ class RequestContext:\n             self.request.routing_exception = e\n \n     def push(self) -> None:\n-        """"""Binds the request context to the current context.""""""\n-        # If an exception occurs in debug mode or if context preservation is\n-        # activated under exception situations exactly one context stays\n-        # on the stack.  The rationale is that you want to access that\n-        # information under debug situations.  However if someone forgets to\n-        # pop that context again we want to make sure that on the next push\n-        # it\'s invalidated, otherwise we run at risk that something leaks\n-        # memory.  This is usually only a problem in test suite since this\n-        # functionality is not active in production environments.\n-        top = _request_ctx_stack.top\n-        if top is not None and top.preserved:\n-            top.pop(top._preserved_exc)\n-\n         # Before we push the request context we have to ensure that there\n         # is an application context.\n         app_ctx = _app_ctx_stack.top\n@@ -454,8 +425,6 @@ class RequestContext:\n \n         try:\n             if not self._implicit_app_ctx_stack:\n-                self.preserved = False\n-                self._preserved_exc = None\n                 if exc is _sentinel:\n                     exc = sys.exc_info()[1]\n                 self.app.do_teardown_request(exc)\n@@ -481,13 +450,18 @@ class RequestContext:\n             ), f""Popped wrong request context. ({rv!r} instead of {self!r})""\n \n     def auto_pop(self, exc: t.Optional[BaseException]) -> None:\n-        if self.request.environ.get(""flask._preserve_context"") or (\n-            exc is not None and self.app.preserve_context_on_exception\n-        ):\n-            self.preserved = True\n-            self._preserved_exc = exc  # type: ignore\n-        else:\n-            self.pop(exc)\n+        """"""\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3.\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'ctx.auto_pop\' is deprecated and will be removed in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self.pop(exc)\n \n     def __enter__(self) -> ""RequestContext"":\n         self.push()\n@@ -499,12 +473,7 @@ class RequestContext:\n         exc_value: t.Optional[BaseException],\n         tb: t.Optional[TracebackType],\n     ) -> None:\n-        # do not pop the request stack if we are in debug mode and an\n-        # exception happened.  This will allow the debugger to still\n-        # access the request object in the interactive shell.  Furthermore\n-        # the context can be force kept alive for the test client.\n-        # See flask.testing for how this works.\n-        self.auto_pop(exc_value)\n+        self.pop(exc_value)\n \n     def __repr__(self) -> str:\n         return (\n'",1.9333333333333333,1.7666666666666666
src/flask/scaffold.py,src/flask/scaffold.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -600,13 +600,6 @@ class Scaffold:\n         be passed an error object.\n \n         The return values of teardown functions are ignored.\n-\n-        .. admonition:: Debug Note\n-\n-           In debug mode Flask will not tear down a request on an exception\n-           immediately.  Instead it will keep it alive so that the interactive\n-           debugger can still access it.  This behavior can be controlled\n-           by the ``PRESERVE_CONTEXT_ON_EXCEPTION`` configuration variable.\n         """"""\n         self.teardown_request_funcs.setdefault(None, []).append(f)\n         return f\n'",1.925,1.925
src/flask/testing.py,src/flask/testing.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -1,5 +1,6 @@\n import typing as t\n from contextlib import contextmanager\n+from contextlib import ExitStack\n from copy import copy\n from types import TracebackType\n \n@@ -108,10 +109,12 @@ class FlaskClient(Client):\n     """"""\n \n     application: ""Flask""\n-    preserve_context = False\n \n     def __init__(self, *args: t.Any, **kwargs: t.Any) -> None:\n         super().__init__(*args, **kwargs)\n+        self.preserve_context = False\n+        self._new_contexts: t.List[t.ContextManager[t.Any]] = []\n+        self._context_stack = ExitStack()\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n             ""HTTP_USER_AGENT"": f""werkzeug/{werkzeug.__version__}"",\n@@ -173,11 +176,12 @@ class FlaskClient(Client):\n             self.cookie_jar.extract_wsgi(c.request.environ, headers)\n \n     def _copy_environ(self, other):\n-        return {\n-            **self.environ_base,\n-            **other,\n-            ""flask._preserve_context"": self.preserve_context,\n-        }\n+        out = {**self.environ_base, **other}\n+\n+        if self.preserve_context:\n+            out[""werkzeug.debug.preserve_context""] = self._new_contexts.append\n+\n+        return out\n \n     def _request_from_builder_args(self, args, kwargs):\n         kwargs[""environ_base""] = self._copy_environ(kwargs.get(""environ_base"", {}))\n@@ -214,12 +218,24 @@ class FlaskClient(Client):\n             # request is None\n             request = self._request_from_builder_args(args, kwargs)\n \n-        return super().open(\n+        # Pop any previously preserved contexts. This prevents contexts\n+        # from being preserved across redirects or multiple requests\n+        # within a single block.\n+        self._context_stack.close()\n+\n+        response = super().open(\n             request,\n             buffered=buffered,\n             follow_redirects=follow_redirects,\n         )\n \n+        # Re-push contexts that were preserved during the request.\n+        while self._new_contexts:\n+            cm = self._new_contexts.pop()\n+            self._context_stack.enter_context(cm)\n+\n+        return response\n+\n     def __enter__(self) -> ""FlaskClient"":\n         if self.preserve_context:\n             raise RuntimeError(""Cannot nest client invocations"")\n@@ -233,18 +249,7 @@ class FlaskClient(Client):\n         tb: t.Optional[TracebackType],\n     ) -> None:\n         self.preserve_context = False\n-\n-        # Normally the request context is preserved until the next\n-        # request in the same thread comes. When the client exits we\n-        # want to clean up earlier. Pop request contexts until the stack\n-        # is empty or a non-preserved one is found.\n-        while True:\n-            top = _request_ctx_stack.top\n-\n-            if top is not None and top.preserved:\n-                top.pop()\n-            else:\n-                break\n+        self._context_stack.close()\n \n \n class FlaskCliRunner(CliRunner):\n'",3.3636363636363638,3.272727272727273
tests/test_basic.py,tests/test_basic.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -928,13 +928,8 @@ def test_baseexception_error_handling(app, client):\n     def broken_func():\n         raise KeyboardInterrupt()\n \n-    with client:\n-        with pytest.raises(KeyboardInterrupt):\n-            client.get(""/"")\n-\n-        ctx = flask._request_ctx_stack.top\n-        assert ctx.preserved\n-        assert type(ctx._preserved_exc) is KeyboardInterrupt\n+    with pytest.raises(KeyboardInterrupt):\n+        client.get(""/"")\n \n \n def test_before_request_and_routing_errors(app, client):\n@@ -1769,57 +1764,6 @@ def test_route_decorator_custom_endpoint(app, client):\n     assert client.get(""/bar/123"").data == b""123""\n \n \n-def test_preserve_only_once(app, client):\n-    app.debug = True\n-\n-    @app.route(""/fail"")\n-    def fail_func():\n-        1 // 0\n-\n-    for _x in range(3):\n-        with pytest.raises(ZeroDivisionError):\n-            client.get(""/fail"")\n-\n-    assert flask._request_ctx_stack.top is not None\n-    assert flask._app_ctx_stack.top is not None\n-    # implicit appctx disappears too\n-    flask._request_ctx_stack.top.pop()\n-    assert flask._request_ctx_stack.top is None\n-    assert flask._app_ctx_stack.top is None\n-\n-\n-def test_preserve_remembers_exception(app, client):\n-    app.debug = True\n-    errors = []\n-\n-    @app.route(""/fail"")\n-    def fail_func():\n-        1 // 0\n-\n-    @app.route(""/success"")\n-    def success_func():\n-        return ""Okay""\n-\n-    @app.teardown_request\n-    def teardown_handler(exc):\n-        errors.append(exc)\n-\n-    # After this failure we did not yet call the teardown handler\n-    with pytest.raises(ZeroDivisionError):\n-        client.get(""/fail"")\n-    assert errors == []\n-\n-    # But this request triggers it, and it\'s an error\n-    client.get(""/success"")\n-    assert len(errors) == 2\n-    assert isinstance(errors[0], ZeroDivisionError)\n-\n-    # At this point another request does nothing.\n-    client.get(""/success"")\n-    assert len(errors) == 3\n-    assert errors[1] is None\n-\n-\n def test_get_method_on_g(app_ctx):\n     assert flask.g.get(""x"") is None\n     assert flask.g.get(""x"", 11) == 11\n'",1.0804597701149425,1.0784313725490196
tests/test_signals.py,tests/test_signals.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -123,8 +123,7 @@ def test_request_exception_signal():\n         flask.got_request_exception.disconnect(record, app)\n \n \n-def test_appcontext_signals():\n-    app = flask.Flask(__name__)\n+def test_appcontext_signals(app, client):\n     recorded = []\n \n     def record_push(sender, **kwargs):\n@@ -140,10 +139,8 @@ def test_appcontext_signals():\n     flask.appcontext_pushed.connect(record_push, app)\n     flask.appcontext_popped.connect(record_pop, app)\n     try:\n-        with app.test_client() as c:\n-            rv = c.get(""/"")\n-            assert rv.data == b""Hello""\n-            assert recorded == [""push""]\n+        rv = client.get(""/"")\n+        assert rv.data == b""Hello""\n         assert recorded == [""push"", ""pop""]\n     finally:\n         flask.appcontext_pushed.disconnect(record_push, app)\n@@ -174,12 +171,12 @@ def test_flash_signal(app):\n         flask.message_flashed.disconnect(record, app)\n \n \n-def test_appcontext_tearing_down_signal():\n-    app = flask.Flask(__name__)\n+def test_appcontext_tearing_down_signal(app, client):\n+    app.testing = False\n     recorded = []\n \n-    def record_teardown(sender, **kwargs):\n-        recorded.append((""tear_down"", kwargs))\n+    def record_teardown(sender, exc):\n+        recorded.append(exc)\n \n     @app.route(""/"")\n     def index():\n@@ -187,10 +184,9 @@ def test_appcontext_tearing_down_signal():\n \n     flask.appcontext_tearing_down.connect(record_teardown, app)\n     try:\n-        with app.test_client() as c:\n-            rv = c.get(""/"")\n-            assert rv.status_code == 500\n-            assert recorded == []\n-        assert recorded == [(""tear_down"", {""exc"": None})]\n+        rv = client.get(""/"")\n+        assert rv.status_code == 500\n+        assert len(recorded) == 1\n+        assert isinstance(recorded[0], ZeroDivisionError)\n     finally:\n         flask.appcontext_tearing_down.disconnect(record_teardown, app)\n'",1.28,1.28
tests/test_testing.py,tests/test_testing.py,84c722044ad03f7f5384f5314c8350b3a13d8dfa,3635583ce27f70a3d9efd1e2212d5efc1d256333,'new debug/test preserve context implementation',"'@@ -187,7 +187,6 @@ def test_session_transactions(app, client):\n \n def test_session_transactions_no_null_sessions():\n     app = flask.Flask(__name__)\n-    app.testing = True\n \n     with app.test_client() as c:\n         with pytest.raises(RuntimeError) as e:\n@@ -254,29 +253,6 @@ def test_reuse_client(client):\n         assert client.get(""/"").status_code == 404\n \n \n-def test_test_client_calls_teardown_handlers(app, client):\n-    called = []\n-\n-    @app.teardown_request\n-    def remember(error):\n-        called.append(error)\n-\n-    with client:\n-        assert called == []\n-        client.get(""/"")\n-        assert called == []\n-    assert called == [None]\n-\n-    del called[:]\n-    with client:\n-        assert called == []\n-        client.get(""/"")\n-        assert called == []\n-        client.get(""/"")\n-        assert called == [None]\n-    assert called == [None, None]\n-\n-\n def test_full_url_request(app, client):\n     @app.route(""/action"", methods=[""POST""])\n     def action():\n@@ -412,13 +388,15 @@ def test_cli_custom_obj(app):\n def test_client_pop_all_preserved(app, req_ctx, client):\n     @app.route(""/"")\n     def index():\n-        # stream_with_context pushes a third context, preserved by client\n-        return flask.Response(flask.stream_with_context(""hello""))\n+        # stream_with_context pushes a third context, preserved by response\n+        return flask.stream_with_context(""hello"")\n \n-    # req_ctx fixture pushed an initial context, not marked preserved\n+    # req_ctx fixture pushed an initial context\n     with client:\n         # request pushes a second request context, preserved by client\n-        client.get(""/"")\n+        rv = client.get(""/"")\n \n+    # close the response, releasing the context held by stream_with_context\n+    rv.close()\n     # only req_ctx fixture should still be pushed\n     assert flask._request_ctx_stack.top is req_ctx\n'",1.0408163265306123,1.0425531914893618
CHANGES.rst,CHANGES.rst,9e686d93b69f0e73f801cc11a57839f4dfe2ca1a,96d39c87a803e3a92152787a12d09bbc149556ec,'remove deprecated RequestContext.g',"'@@ -5,6 +5,10 @@ Version 2.2.0\n \n Unreleased\n \n+-   Remove previously deprecated code. :pr:`4337`\n+\n+    -   The ``RequestContext.g`` proxy to ``AppContext.g`` is removed.\n+\n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n \n'",0,0
src/flask/ctx.py,src/flask/ctx.py,9e686d93b69f0e73f801cc11a57839f4dfe2ca1a,96d39c87a803e3a92152787a12d09bbc149556ec,'remove deprecated RequestContext.g',"'@@ -327,32 +327,6 @@ class RequestContext:\n         # functions.\n         self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n \n-    @property\n-    def g(self) -> _AppCtxGlobals:\n-        import warnings\n-\n-        warnings.warn(\n-            ""Accessing \'g\' on the request context is deprecated and""\n-            "" will be removed in Flask 2.2. Access `g` directly or from""\n-            ""the application context instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return _app_ctx_stack.top.g\n-\n-    @g.setter\n-    def g(self, value: _AppCtxGlobals) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""Setting \'g\' on the request context is deprecated and""\n-            "" will be removed in Flask 2.2. Set it on the application""\n-            "" context instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        _app_ctx_stack.top.g = value\n-\n     def copy(self) -> ""RequestContext"":\n         """"""Creates a copy of this request context with the same request object.\n         This can be used to move a request context to a different greenlet.\n'",1.7666666666666666,1.8214285714285714
CHANGES.rst,CHANGES.rst,c2810ffdd2f2becbc37d35f63b69034b8b9ed5b8,9e686d93b69f0e73f801cc11a57839f4dfe2ca1a,'remove deprecated send_file argument names',"'@@ -7,7 +7,13 @@ Unreleased\n \n -   Remove previously deprecated code. :pr:`4337`\n \n-    -   The ``RequestContext.g`` proxy to ``AppContext.g`` is removed.\n+    -   Old names for some ``send_file`` parameters have been removed.\n+        ``download_name`` replaces ``attachment_filename``, ``max_age``\n+        replaces ``cache_timeout``, and ``etag`` replaces ``add_etags``.\n+        Additionally, ``path`` replaces ``filename`` in\n+        ``send_from_directory``.\n+    -   The ``RequestContext.g`` property returning ``AppContext.g`` is\n+        removed.\n \n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,c2810ffdd2f2becbc37d35f63b69034b8b9ed5b8,9e686d93b69f0e73f801cc11a57839f4dfe2ca1a,'remove deprecated send_file argument names',"'@@ -3,7 +3,6 @@ import pkgutil\n import socket\n import sys\n import typing as t\n-import warnings\n from datetime import datetime\n from functools import lru_cache\n from functools import update_wrapper\n@@ -390,53 +389,12 @@ def get_flashed_messages(\n     return flashes\n \n \n-def _prepare_send_file_kwargs(\n-    download_name: t.Optional[str] = None,\n-    attachment_filename: t.Optional[str] = None,\n-    etag: t.Optional[t.Union[bool, str]] = None,\n-    add_etags: t.Optional[t.Union[bool]] = None,\n-    max_age: t.Optional[\n-        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n-    ] = None,\n-    cache_timeout: t.Optional[int] = None,\n-    **kwargs: t.Any,\n-) -> t.Dict[str, t.Any]:\n-    if attachment_filename is not None:\n-        warnings.warn(\n-            ""The \'attachment_filename\' parameter has been renamed to""\n-            "" \'download_name\'. The old name will be removed in Flask""\n-            "" 2.2."",\n-            DeprecationWarning,\n-            stacklevel=3,\n-        )\n-        download_name = attachment_filename\n-\n-    if cache_timeout is not None:\n-        warnings.warn(\n-            ""The \'cache_timeout\' parameter has been renamed to""\n-            "" \'max_age\'. The old name will be removed in Flask 2.2."",\n-            DeprecationWarning,\n-            stacklevel=3,\n-        )\n-        max_age = cache_timeout\n-\n-    if add_etags is not None:\n-        warnings.warn(\n-            ""The \'add_etags\' parameter has been renamed to \'etag\'. The""\n-            "" old name will be removed in Flask 2.2."",\n-            DeprecationWarning,\n-            stacklevel=3,\n-        )\n-        etag = add_etags\n-\n-    if max_age is None:\n-        max_age = current_app.get_send_file_max_age\n+def _prepare_send_file_kwargs(**kwargs: t.Any) -> t.Dict[str, t.Any]:\n+    if kwargs.get(""max_age"") is None:\n+        kwargs[""max_age""] = current_app.get_send_file_max_age\n \n     kwargs.update(\n         environ=request.environ,\n-        download_name=download_name,\n-        etag=etag,\n-        max_age=max_age,\n         use_x_sendfile=current_app.use_x_sendfile,\n         response_class=current_app.response_class,\n         _root_path=current_app.root_path,  # type: ignore\n@@ -449,16 +407,13 @@ def send_file(\n     mimetype: t.Optional[str] = None,\n     as_attachment: bool = False,\n     download_name: t.Optional[str] = None,\n-    attachment_filename: t.Optional[str] = None,\n     conditional: bool = True,\n     etag: t.Union[bool, str] = True,\n-    add_etags: t.Optional[bool] = None,\n     last_modified: t.Optional[t.Union[datetime, int, float]] = None,\n     max_age: t.Optional[\n         t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n     ] = None,\n-    cache_timeout: t.Optional[int] = None,\n-):\n+) -> ""Response"":\n     """"""Send the contents of a file to the client.\n \n     The first argument can be a file path or a file-like object. Paths\n@@ -560,20 +515,17 @@ def send_file(\n \n     .. versionadded:: 0.2\n     """"""\n-    return werkzeug.utils.send_file(\n+    return werkzeug.utils.send_file(  # type: ignore[return-value]\n         **_prepare_send_file_kwargs(\n             path_or_file=path_or_file,\n             environ=request.environ,\n             mimetype=mimetype,\n             as_attachment=as_attachment,\n             download_name=download_name,\n-            attachment_filename=attachment_filename,\n             conditional=conditional,\n             etag=etag,\n-            add_etags=add_etags,\n             last_modified=last_modified,\n             max_age=max_age,\n-            cache_timeout=cache_timeout,\n         )\n     )\n \n@@ -581,7 +533,6 @@ def send_file(\n def send_from_directory(\n     directory: t.Union[os.PathLike, str],\n     path: t.Union[os.PathLike, str],\n-    filename: t.Optional[str] = None,\n     **kwargs: t.Any,\n ) -> ""Response"":\n     """"""Send a file from within a directory using :func:`send_file`.\n@@ -617,16 +568,7 @@ def send_from_directory(\n \n     .. versionadded:: 0.5\n     """"""\n-    if filename is not None:\n-        warnings.warn(\n-            ""The \'filename\' parameter has been renamed to \'path\'. The""\n-            "" old name will be removed in Flask 2.2."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        path = filename\n-\n-    return werkzeug.utils.send_from_directory(  # type: ignore\n+    return werkzeug.utils.send_from_directory(  # type: ignore[return-value]\n         directory, path, **_prepare_send_file_kwargs(**kwargs)\n     )\n \n'",2.391304347826087,2.217391304347826
tests/test_cli.py,tests/test_cli.py,ab6a8b0330845c80d661a748314691302ea7d8f7,12d3f4fdf0b91a1b367dcda0421dfcd0774b6dd2,'relax routes cli match order',"'@@ -422,22 +422,23 @@ def test_help_echo_exception():\n \n class TestRoutes:\n     @pytest.fixture\n-    def invoke(self, runner):\n-        def create_app():\n-            app = Flask(__name__)\n-            app.testing = True\n+    def app(self):\n+        app = Flask(__name__)\n+        app.testing = True\n \n-            @app.route(""/get_post/<int:x>/<int:y>"", methods=[""GET"", ""POST""])\n-            def yyy_get_post(x, y):\n-                pass\n+        @app.route(""/get_post/<int:x>/<int:y>"", methods=[""GET"", ""POST""])\n+        def yyy_get_post(x, y):\n+            pass\n \n-            @app.route(""/zzz_post"", methods=[""POST""])\n-            def aaa_post():\n-                pass\n+        @app.route(""/zzz_post"", methods=[""POST""])\n+        def aaa_post():\n+            pass\n \n-            return app\n+        return app\n \n-        cli = FlaskGroup(create_app=create_app)\n+    @pytest.fixture\n+    def invoke(self, app, runner):\n+        cli = FlaskGroup(create_app=lambda: app)\n         return partial(runner.invoke, cli)\n \n     @pytest.fixture\n@@ -462,7 +463,7 @@ class TestRoutes:\n         assert result.exit_code == 0\n         self.expect_order([""aaa_post"", ""static"", ""yyy_get_post""], result.output)\n \n-    def test_sort(self, invoke):\n+    def test_sort(self, app, invoke):\n         default_output = invoke([""routes""]).output\n         endpoint_output = invoke([""routes"", ""-s"", ""endpoint""]).output\n         assert default_output == endpoint_output\n@@ -474,10 +475,8 @@ class TestRoutes:\n             [""yyy_get_post"", ""static"", ""aaa_post""],\n             invoke([""routes"", ""-s"", ""rule""]).output,\n         )\n-        self.expect_order(\n-            [""aaa_post"", ""yyy_get_post"", ""static""],\n-            invoke([""routes"", ""-s"", ""match""]).output,\n-        )\n+        match_order = [r.endpoint for r in app.url_map.iter_rules()]\n+        self.expect_order(match_order, invoke([""routes"", ""-s"", ""match""]).output)\n \n     def test_all_methods(self, invoke):\n         output = invoke([""routes""]).output\n'",1.0606060606060606,1.0757575757575757
src/flask/app.py,src/flask/app.py,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,1626aff602e3316642e69927333041370095c321,'Support returning list as JSON',"'@@ -1830,6 +1830,9 @@ class Flask(Scaffold):\n             ``dict``\n                 A dictionary that will be jsonify\'d before being returned.\n \n+            ``list``\n+                A list that will be jsonify\'d before being returned.\n+\n             ``generator`` or ``iterator``\n                 A generator that returns ``str`` or ``bytes`` to be\n                 streamed as the response.\n@@ -1855,6 +1858,7 @@ class Flask(Scaffold):\n \n         .. versionchanged:: 2.2\n             A generator will be converted to a streaming response.\n+            A list will be converted to a JSON response.\n \n         .. versionchanged:: 1.1\n             A dict will be converted to a JSON response.\n@@ -1907,7 +1911,7 @@ class Flask(Scaffold):\n                     headers=headers,  # type: ignore[arg-type]\n                 )\n                 status = headers = None\n-            elif isinstance(rv, dict):\n+            elif isinstance(rv, (dict, list)):\n                 rv = jsonify(rv)\n             elif isinstance(rv, BaseResponse) or callable(rv):\n                 # evaluate a WSGI callable, or coerce a different response\n@@ -1920,14 +1924,14 @@ class Flask(Scaffold):\n                     raise TypeError(\n                         f""{e}\\nThe view function did not return a valid""\n                         "" response. The return type must be a string,""\n-                        "" dict, tuple, Response instance, or WSGI""\n+                        "" dict, list, tuple, Response instance, or WSGI""\n                         f"" callable, but it was a {type(rv).__name__}.""\n                     ).with_traceback(sys.exc_info()[2]) from None\n             else:\n                 raise TypeError(\n                     ""The view function did not return a valid""\n                     "" response. The return type must be a string,""\n-                    "" dict, tuple, Response instance, or WSGI""\n+                    "" dict, list, tuple, Response instance, or WSGI""\n                     f"" callable, but it was a {type(rv).__name__}.""\n                 )\n \n'",3.2318840579710146,3.2318840579710146
src/flask/typing.py,src/flask/typing.py,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,1626aff602e3316642e69927333041370095c321,'Support returning list as JSON',"'@@ -7,7 +7,7 @@ if t.TYPE_CHECKING:  # pragma: no cover\n \n # The possible types that are directly convertible or are a Response object.\n ResponseValue = t.Union[\n-    ""Response"", str, bytes, t.Dict[str, t.Any], t.Iterator[str], t.Iterator[bytes]\n+    ""Response"", str, bytes, list, t.Dict[str, t.Any], t.Iterator[str], t.Iterator[bytes]\n ]\n \n # the possible types for an individual HTTP header\n'",0,0
tests/test_basic.py,tests/test_basic.py,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,1626aff602e3316642e69927333041370095c321,'Support returning list as JSON',"'@@ -1166,6 +1166,10 @@ def test_response_types(app, client):\n     def from_dict():\n         return {""foo"": ""bar""}, 201\n \n+    @app.route(""/list"")\n+    def from_list():\n+        return [""foo"", ""bar""], 201\n+\n     assert client.get(""/text"").data == ""Hällo Wörld"".encode()\n     assert client.get(""/bytes"").data == ""Hällo Wörld"".encode()\n \n@@ -1205,6 +1209,10 @@ def test_response_types(app, client):\n     assert rv.json == {""foo"": ""bar""}\n     assert rv.status_code == 201\n \n+    rv = client.get(""/list"")\n+    assert rv.json == [""foo"", ""bar""]\n+    assert rv.status_code == 201\n+\n \n def test_response_type_errors():\n     app = flask.Flask(__name__)\n'",1.0784313725490196,1.078125
CHANGES.rst,CHANGES.rst,f8cb0b0dd5ea30729db6b131aeeb30915ea4860b,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,'update docs about json',"'@@ -65,6 +65,9 @@ Unreleased\n         ``with client`` block. It will be cleaned up when\n         ``response.get_data()`` or ``response.close()`` is called.\n \n+-   Allow returning a list from a view function, to convert it to a\n+    JSON response like a dict is. :issue:`4672`\n+\n \n Version 2.1.3\n -------------\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,f8cb0b0dd5ea30729db6b131aeeb30915ea4860b,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,'update docs about json',"'@@ -681,22 +681,25 @@ The return value from a view function is automatically converted into\n a response object for you. If the return value is a string it\'s\n converted into a response object with the string as response body, a\n ``200 OK`` status code and a :mimetype:`text/html` mimetype. If the\n-return value is a dict, :func:`jsonify` is called to produce a response.\n-The logic that Flask applies to converting return values into response\n-objects is as follows:\n+return value is a dict or list, :func:`jsonify` is called to produce a\n+response. The logic that Flask applies to converting return values into\n+response objects is as follows:\n \n 1.  If a response object of the correct type is returned it\'s directly\n     returned from the view.\n 2.  If it\'s a string, a response object is created with that data and\n     the default parameters.\n-3.  If it\'s a dict, a response object is created using ``jsonify``.\n-4.  If a tuple is returned the items in the tuple can provide extra\n+3.  If it\'s an iterator or generator returning strings or bytes, it is\n+    treated as a streaming response.\n+4.  If it\'s a dict or list, a response object is created using\n+    :func:`~flask.json.jsonify`.\n+5.  If a tuple is returned the items in the tuple can provide extra\n     information. Such tuples have to be in the form\n     ``(response, status)``, ``(response, headers)``, or\n     ``(response, status, headers)``. The ``status`` value will override\n     the status code and ``headers`` can be a list or dictionary of\n     additional header values.\n-5.  If none of that works, Flask will assume the return value is a\n+6.  If none of that works, Flask will assume the return value is a\n     valid WSGI application and convert that into a response object.\n \n If you want to get hold of the resulting response object inside the view\n@@ -727,8 +730,8 @@ APIs with JSON\n ``````````````\n \n A common response format when writing an API is JSON. It\'s easy to get\n-started writing such an API with Flask. If you return a ``dict`` from a\n-view, it will be converted to a JSON response.\n+started writing such an API with Flask. If you return a ``dict`` or\n+``list`` from a view, it will be converted to a JSON response.\n \n .. code-block:: python\n \n@@ -741,20 +744,20 @@ view, it will be converted to a JSON response.\n             ""image"": url_for(""user_image"", filename=user.image),\n         }\n \n-Depending on your API design, you may want to create JSON responses for\n-types other than ``dict``. In that case, use the\n-:func:`~flask.json.jsonify` function, which will serialize any supported\n-JSON data type. Or look into Flask community extensions that support\n-more complex applications.\n-\n-.. code-block:: python\n-\n-    from flask import jsonify\n-\n     @app.route(""/users"")\n     def users_api():\n         users = get_all_users()\n-        return jsonify([user.to_json() for user in users])\n+        return [user.to_json() for user in users]\n+\n+This is a shortcut to passing the data to the\n+:func:`~flask.json.jsonify` function, which will serialize any supported\n+JSON data type. That means that all the data in the dict or list must be\n+JSON serializable.\n+\n+For complex types such as database models, you\'ll want to use a\n+serialization library to convert the data to valid JSON types first.\n+There are many serialization libraries and Flask API extensions\n+maintained by the community that support more complex applications.\n \n \n .. _sessions:\n'",1.2352941176470589,1.1764705882352942
src/flask/app.py,src/flask/app.py,f8cb0b0dd5ea30729db6b131aeeb30915ea4860b,ca2bfbb0ac66fbbeeedbf6bbe317bee45cb23d29,'update docs about json',"'@@ -1924,15 +1924,17 @@ class Flask(Scaffold):\n                     raise TypeError(\n                         f""{e}\\nThe view function did not return a valid""\n                         "" response. The return type must be a string,""\n-                        "" dict, list, tuple, Response instance, or WSGI""\n-                        f"" callable, but it was a {type(rv).__name__}.""\n+                        "" dict, list, tuple with headers or status,""\n+                        "" Response instance, or WSGI callable, but it""\n+                        f"" was a {type(rv).__name__}.""\n                     ).with_traceback(sys.exc_info()[2]) from None\n             else:\n                 raise TypeError(\n                     ""The view function did not return a valid""\n                     "" response. The return type must be a string,""\n-                    "" dict, list, tuple, Response instance, or WSGI""\n-                    f"" callable, but it was a {type(rv).__name__}.""\n+                    "" dict, list, tuple with headers or status,""\n+                    "" Response instance, or WSGI callable, but it was a""\n+                    f"" {type(rv).__name__}.""\n                 )\n \n         rv = t.cast(Response, rv)\n'",3.2318840579710146,3.2318840579710146
src/flask/typing.py,src/flask/typing.py,60b845ebabeb77e401186f4b83de21d3f9c6a9d7,f8cb0b0dd5ea30729db6b131aeeb30915ea4860b,'update typing tests for json',"'@@ -7,7 +7,13 @@ if t.TYPE_CHECKING:  # pragma: no cover\n \n # The possible types that are directly convertible or are a Response object.\n ResponseValue = t.Union[\n-    ""Response"", str, bytes, list, t.Dict[str, t.Any], t.Iterator[str], t.Iterator[bytes]\n+    ""Response"",\n+    str,\n+    bytes,\n+    t.List[t.Any],\n+    t.Dict[str, t.Any],\n+    t.Iterator[str],\n+    t.Iterator[bytes],\n ]\n \n # the possible types for an individual HTTP header\n'",0,0
tests/typing/typing_route.py,tests/typing/typing_route.py,60b845ebabeb77e401186f4b83de21d3f9c6a9d7,f8cb0b0dd5ea30729db6b131aeeb30915ea4860b,'update typing tests for json',"'@@ -25,7 +25,17 @@ def hello_bytes() -> bytes:\n \n @app.route(""/json"")\n def hello_json() -> Response:\n-    return jsonify({""response"": ""Hello, World!""})\n+    return jsonify(""Hello, World!"")\n+\n+\n+@app.route(""/json/dict"")\n+def hello_json_dict() -> t.Dict[str, t.Any]:\n+    return {""response"": ""Hello, World!""}\n+\n+\n+@app.route(""/json/dict"")\n+def hello_json_list() -> t.List[t.Any]:\n+    return [{""message"": ""Hello""}, {""message"": ""World""}]\n \n \n @app.route(""/generator"")\n'",1.2142857142857142,1.1875
.github/workflows/lock.yaml,.github/workflows/lock.yaml,50df54e4c7fb06df51a89d8f363e2997d2310449,559a8458c4187b3cc12b1ea5a92a393c7fbdc765,'explain workflow',"'@@ -1,3 +1,6 @@\n+# This does not automatically close ""stale"" issues. Instead, it locks closed issues after 2 weeks of no activity.\n+# If there\'s a new issue related to an old one, we\'ve found it\'s much easier to work on as a new issue.\n+\n name: \'Lock threads\'\n \n on:\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,e9d0000fc152108948144def06b2ac84524bffcc,ab6a8b0330845c80d661a748314691302ea7d8f7,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.32.1 → v2.34.0](https://github.com/asottile/pyupgrade/compare/v2.32.1...v2.34.0)\n- [github.com/asottile/reorder_python_imports: v3.1.0 → v3.3.0](https://github.com/asottile/reorder_python_imports/compare/v3.1.0...v3.3.0)\n- [github.com/psf/black: 22.3.0 → 22.6.0](https://github.com/psf/black/compare/22.3.0...22.6.0)\n- [github.com/pre-commit/pre-commit-hooks: v4.2.0 → v4.3.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.2.0...v4.3.0)',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.32.1\n+    rev: v2.34.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.1.0\n+    rev: v3.3.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n@@ -16,7 +16,7 @@ repos:\n         args: [""--application-directories"", ""src""]\n         additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n-    rev: 22.3.0\n+    rev: 22.6.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n@@ -31,7 +31,7 @@ repos:\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.2.0\n+    rev: v4.3.0\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
docs/api.rst,docs/api.rst,9dfcb90c92e13f2d92cb723cb834b5e0d666a2f5,e4c4fd57710097c7405f7b185b9048c1c8c72d3e,"'Document serialization of Decimal in JSONEncoder\n\nThe Flask JSONEncoder serializes Decimal types to strings, but this\nbehavior is missing from the docs. The docs are updated accordingly.'","'@@ -242,6 +242,7 @@ for easier customization. By default it handles some extra data types:\n \n -   :class:`datetime.datetime` and :class:`datetime.date` are serialized\n     to :rfc:`822` strings. This is the same as the HTTP date format.\n+-   :class:`decimal.Decimal` is serialized to a string.\n -   :class:`uuid.UUID` is serialized to a string.\n -   :class:`dataclasses.dataclass` is passed to\n     :func:`dataclasses.asdict`.\n'",1.25,1.25
src/flask/json/__init__.py,src/flask/json/__init__.py,9dfcb90c92e13f2d92cb723cb834b5e0d666a2f5,e4c4fd57710097c7405f7b185b9048c1c8c72d3e,"'Document serialization of Decimal in JSONEncoder\n\nThe Flask JSONEncoder serializes Decimal types to strings, but this\nbehavior is missing from the docs. The docs are updated accordingly.'","'@@ -23,6 +23,7 @@ class JSONEncoder(_json.JSONEncoder):\n     -   :class:`datetime.datetime` and :class:`datetime.date` are\n         serialized to :rfc:`822` strings. This is the same as the HTTP\n         date format.\n+    -   :class:`decimal.Decimal` is serialized to a string.\n     -   :class:`uuid.UUID` is serialized to a string.\n     -   :class:`dataclasses.dataclass` is passed to\n         :func:`dataclasses.asdict`.\n'",3.3,3.3
src/flask/app.py,src/flask/app.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -74,6 +74,17 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n \n+T_before_first_request = t.TypeVar(\n+    ""T_before_first_request"", bound=ft.BeforeFirstRequestCallable\n+)\n+T_shell_context_processor = t.TypeVar(\n+    ""T_shell_context_processor"", bound=ft.ShellContextProcessorCallable\n+)\n+T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n+T_template_filter = t.TypeVar(""T_template_filter"", bound=ft.TemplateFilterCallable)\n+T_template_global = t.TypeVar(""T_template_global"", bound=ft.TemplateGlobalCallable)\n+T_template_test = t.TypeVar(""T_template_test"", bound=ft.TemplateTestCallable)\n+\n if sys.version_info >= (3, 8):\n     iscoroutinefunction = inspect.iscoroutinefunction\n else:\n@@ -472,7 +483,7 @@ class Flask(Scaffold):\n         #: when a shell context is created.\n         #:\n         #: .. versionadded:: 0.11\n-        self.shell_context_processors: t.List[t.Callable[[], t.Dict[str, t.Any]]] = []\n+        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n \n         #: Maps registered blueprint names to blueprint objects. The\n         #: dict retains the order the blueprints were registered in.\n@@ -1075,7 +1086,7 @@ class Flask(Scaffold):\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.ViewCallable] = None,\n+        view_func: t.Optional[ft.RouteCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n@@ -1132,7 +1143,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_filter(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateFilterCallable], ft.TemplateFilterCallable]:\n+    ) -> t.Callable[[T_template_filter], T_template_filter]:\n         """"""A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n         name will be used. Example::\n@@ -1145,7 +1156,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateFilterCallable) -> ft.TemplateFilterCallable:\n+        def decorator(f: T_template_filter) -> T_template_filter:\n             self.add_template_filter(f, name=name)\n             return f\n \n@@ -1166,7 +1177,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_test(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateTestCallable], ft.TemplateTestCallable]:\n+    ) -> t.Callable[[T_template_test], T_template_test]:\n         """"""A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n         name will be used. Example::\n@@ -1186,7 +1197,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateTestCallable) -> ft.TemplateTestCallable:\n+        def decorator(f: T_template_test) -> T_template_test:\n             self.add_template_test(f, name=name)\n             return f\n \n@@ -1209,7 +1220,7 @@ class Flask(Scaffold):\n     @setupmethod\n     def template_global(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateGlobalCallable], ft.TemplateGlobalCallable]:\n+    ) -> t.Callable[[T_template_global], T_template_global]:\n         """"""A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n         name will be used. Example::\n@@ -1224,7 +1235,7 @@ class Flask(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateGlobalCallable) -> ft.TemplateGlobalCallable:\n+        def decorator(f: T_template_global) -> T_template_global:\n             self.add_template_global(f, name=name)\n             return f\n \n@@ -1245,9 +1256,7 @@ class Flask(Scaffold):\n         self.jinja_env.globals[name or f.__name__] = f\n \n     @setupmethod\n-    def before_first_request(\n-        self, f: ft.BeforeFirstRequestCallable\n-    ) -> ft.BeforeFirstRequestCallable:\n+    def before_first_request(self, f: T_before_first_request) -> T_before_first_request:\n         """"""Registers a function to be run before the first request to this\n         instance of the application.\n \n@@ -1273,7 +1282,7 @@ class Flask(Scaffold):\n         return f\n \n     @setupmethod\n-    def teardown_appcontext(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n+    def teardown_appcontext(self, f: T_teardown) -> T_teardown:\n         """"""Registers a function to be called when the application context\n         ends.  These functions are typically also called when the request\n         context is popped.\n@@ -1306,7 +1315,9 @@ class Flask(Scaffold):\n         return f\n \n     @setupmethod\n-    def shell_context_processor(self, f: t.Callable) -> t.Callable:\n+    def shell_context_processor(\n+        self, f: T_shell_context_processor\n+    ) -> T_shell_context_processor:\n         """"""Registers a shell context processor function.\n \n         .. versionadded:: 0.11\n'",3.2318840579710146,3.2318840579710146
src/flask/blueprints.py,src/flask/blueprints.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -13,6 +13,23 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n \n DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n+T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable)\n+T_before_first_request = t.TypeVar(\n+    ""T_before_first_request"", bound=ft.BeforeFirstRequestCallable\n+)\n+T_before_request = t.TypeVar(""T_before_request"", bound=ft.BeforeRequestCallable)\n+T_error_handler = t.TypeVar(""T_error_handler"", bound=ft.ErrorHandlerCallable)\n+T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n+T_template_context_processor = t.TypeVar(\n+    ""T_template_context_processor"", bound=ft.TemplateContextProcessorCallable\n+)\n+T_template_filter = t.TypeVar(""T_template_filter"", bound=ft.TemplateFilterCallable)\n+T_template_global = t.TypeVar(""T_template_global"", bound=ft.TemplateGlobalCallable)\n+T_template_test = t.TypeVar(""T_template_test"", bound=ft.TemplateTestCallable)\n+T_url_defaults = t.TypeVar(""T_url_defaults"", bound=ft.URLDefaultCallable)\n+T_url_value_preprocessor = t.TypeVar(\n+    ""T_url_value_preprocessor"", bound=ft.URLValuePreprocessorCallable\n+)\n \n \n class BlueprintSetupState:\n@@ -236,7 +253,7 @@ class Blueprint(Scaffold):\n             if state.first_registration:\n                 func(state)\n \n-        return self.record(update_wrapper(wrapper, func))\n+        self.record(update_wrapper(wrapper, func))\n \n     def make_setup_state(\n         self, app: ""Flask"", options: dict, first_registration: bool = False\n@@ -392,7 +409,7 @@ class Blueprint(Scaffold):\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.ViewCallable] = None,\n+        view_func: t.Optional[ft.RouteCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n@@ -418,7 +435,7 @@ class Blueprint(Scaffold):\n     @setupmethod\n     def app_template_filter(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateFilterCallable], ft.TemplateFilterCallable]:\n+    ) -> t.Callable[[T_template_filter], T_template_filter]:\n         """"""Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n \n@@ -426,7 +443,7 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateFilterCallable) -> ft.TemplateFilterCallable:\n+        def decorator(f: T_template_filter) -> T_template_filter:\n             self.add_app_template_filter(f, name=name)\n             return f\n \n@@ -452,7 +469,7 @@ class Blueprint(Scaffold):\n     @setupmethod\n     def app_template_test(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateTestCallable], ft.TemplateTestCallable]:\n+    ) -> t.Callable[[T_template_test], T_template_test]:\n         """"""Register a custom template test, available application wide.  Like\n         :meth:`Flask.template_test` but for a blueprint.\n \n@@ -462,7 +479,7 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateTestCallable) -> ft.TemplateTestCallable:\n+        def decorator(f: T_template_test) -> T_template_test:\n             self.add_app_template_test(f, name=name)\n             return f\n \n@@ -490,7 +507,7 @@ class Blueprint(Scaffold):\n     @setupmethod\n     def app_template_global(\n         self, name: t.Optional[str] = None\n-    ) -> t.Callable[[ft.TemplateGlobalCallable], ft.TemplateGlobalCallable]:\n+    ) -> t.Callable[[T_template_global], T_template_global]:\n         """"""Register a custom template global, available application wide.  Like\n         :meth:`Flask.template_global` but for a blueprint.\n \n@@ -500,7 +517,7 @@ class Blueprint(Scaffold):\n                      function name will be used.\n         """"""\n \n-        def decorator(f: ft.TemplateGlobalCallable) -> ft.TemplateGlobalCallable:\n+        def decorator(f: T_template_global) -> T_template_global:\n             self.add_app_template_global(f, name=name)\n             return f\n \n@@ -526,9 +543,7 @@ class Blueprint(Scaffold):\n         self.record_once(register_template)\n \n     @setupmethod\n-    def before_app_request(\n-        self, f: ft.BeforeRequestCallable\n-    ) -> ft.BeforeRequestCallable:\n+    def before_app_request(self, f: T_before_request) -> T_before_request:\n         """"""Like :meth:`Flask.before_request`.  Such a function is executed\n         before each request, even if outside of a blueprint.\n         """"""\n@@ -539,8 +554,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def before_app_first_request(\n-        self, f: ft.BeforeFirstRequestCallable\n-    ) -> ft.BeforeFirstRequestCallable:\n+        self, f: T_before_first_request\n+    ) -> T_before_first_request:\n         """"""Like :meth:`Flask.before_first_request`.  Such a function is\n         executed before the first request to the application.\n \n@@ -560,7 +575,8 @@ class Blueprint(Scaffold):\n         self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n         return f\n \n-    def after_app_request(self, f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n+    @setupmethod\n+    def after_app_request(self, f: T_after_request) -> T_after_request:\n         """"""Like :meth:`Flask.after_request` but for a blueprint.  Such a function\n         is executed after each request, even if outside of the blueprint.\n         """"""\n@@ -570,7 +586,7 @@ class Blueprint(Scaffold):\n         return f\n \n     @setupmethod\n-    def teardown_app_request(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n+    def teardown_app_request(self, f: T_teardown) -> T_teardown:\n         """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n         function is executed when tearing down each request, even if outside of\n         the blueprint.\n@@ -582,8 +598,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_context_processor(\n-        self, f: ft.TemplateContextProcessorCallable\n-    ) -> ft.TemplateContextProcessorCallable:\n+        self, f: T_template_context_processor\n+    ) -> T_template_context_processor:\n         """"""Like :meth:`Flask.context_processor` but for a blueprint.  Such a\n         function is executed each request, even if outside of the blueprint.\n         """"""\n@@ -595,12 +611,12 @@ class Blueprint(Scaffold):\n     @setupmethod\n     def app_errorhandler(\n         self, code: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable[[ft.ErrorHandlerDecorator], ft.ErrorHandlerDecorator]:\n+    ) -> t.Callable[[T_error_handler], T_error_handler]:\n         """"""Like :meth:`Flask.errorhandler` but for a blueprint.  This\n         handler is used for all requests, even if outside of the blueprint.\n         """"""\n \n-        def decorator(f: ft.ErrorHandlerDecorator) -> ft.ErrorHandlerDecorator:\n+        def decorator(f: T_error_handler) -> T_error_handler:\n             self.record_once(lambda s: s.app.errorhandler(code)(f))\n             return f\n \n@@ -608,8 +624,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_url_value_preprocessor(\n-        self, f: ft.URLValuePreprocessorCallable\n-    ) -> ft.URLValuePreprocessorCallable:\n+        self, f: T_url_value_preprocessor\n+    ) -> T_url_value_preprocessor:\n         """"""Same as :meth:`url_value_preprocessor` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_value_preprocessors.setdefault(None, []).append(f)\n@@ -617,7 +633,7 @@ class Blueprint(Scaffold):\n         return f\n \n     @setupmethod\n-    def app_url_defaults(self, f: ft.URLDefaultCallable) -> ft.URLDefaultCallable:\n+    def app_url_defaults(self, f: T_url_defaults) -> T_url_defaults:\n         """"""Same as :meth:`url_defaults` but application wide.""""""\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n'",2.303030303030303,2.303030303030303
src/flask/scaffold.py,src/flask/scaffold.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -28,6 +28,18 @@ if t.TYPE_CHECKING:  # pragma: no cover\n _sentinel = object()\n \n F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n+T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable)\n+T_before_request = t.TypeVar(""T_before_request"", bound=ft.BeforeRequestCallable)\n+T_error_handler = t.TypeVar(""T_error_handler"", bound=ft.ErrorHandlerCallable)\n+T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n+T_template_context_processor = t.TypeVar(\n+    ""T_template_context_processor"", bound=ft.TemplateContextProcessorCallable\n+)\n+T_url_defaults = t.TypeVar(""T_url_defaults"", bound=ft.URLDefaultCallable)\n+T_url_value_preprocessor = t.TypeVar(\n+    ""T_url_value_preprocessor"", bound=ft.URLValuePreprocessorCallable\n+)\n+T_route = t.TypeVar(""T_route"", bound=ft.RouteCallable)\n \n \n def setupmethod(f: F) -> F:\n@@ -352,16 +364,14 @@ class Scaffold:\n         method: str,\n         rule: str,\n         options: dict,\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    ) -> t.Callable[[T_route], T_route]:\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n \n         return self.route(rule, methods=[method], **options)\n \n     @setupmethod\n-    def get(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def get(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Shortcut for :meth:`route` with ``methods=[""GET""]``.\n \n         .. versionadded:: 2.0\n@@ -369,9 +379,7 @@ class Scaffold:\n         return self._method_route(""GET"", rule, options)\n \n     @setupmethod\n-    def post(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def post(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Shortcut for :meth:`route` with ``methods=[""POST""]``.\n \n         .. versionadded:: 2.0\n@@ -379,9 +387,7 @@ class Scaffold:\n         return self._method_route(""POST"", rule, options)\n \n     @setupmethod\n-    def put(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def put(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PUT""]``.\n \n         .. versionadded:: 2.0\n@@ -389,9 +395,7 @@ class Scaffold:\n         return self._method_route(""PUT"", rule, options)\n \n     @setupmethod\n-    def delete(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def delete(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Shortcut for :meth:`route` with ``methods=[""DELETE""]``.\n \n         .. versionadded:: 2.0\n@@ -399,9 +403,7 @@ class Scaffold:\n         return self._method_route(""DELETE"", rule, options)\n \n     @setupmethod\n-    def patch(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def patch(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Shortcut for :meth:`route` with ``methods=[""PATCH""]``.\n \n         .. versionadded:: 2.0\n@@ -409,9 +411,7 @@ class Scaffold:\n         return self._method_route(""PATCH"", rule, options)\n \n     @setupmethod\n-    def route(\n-        self, rule: str, **options: t.Any\n-    ) -> t.Callable[[ft.RouteDecorator], ft.RouteDecorator]:\n+    def route(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n         """"""Decorate a view function to register it with the given URL\n         rule and options. Calls :meth:`add_url_rule`, which has more\n         details about the implementation.\n@@ -435,7 +435,7 @@ class Scaffold:\n             :class:`~werkzeug.routing.Rule` object.\n         """"""\n \n-        def decorator(f: ft.RouteDecorator) -> ft.RouteDecorator:\n+        def decorator(f: T_route) -> T_route:\n             endpoint = options.pop(""endpoint"", None)\n             self.add_url_rule(rule, endpoint, f, **options)\n             return f\n@@ -447,7 +447,7 @@ class Scaffold:\n         self,\n         rule: str,\n         endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.ViewCallable] = None,\n+        view_func: t.Optional[ft.RouteCallable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n@@ -511,7 +511,7 @@ class Scaffold:\n         raise NotImplementedError\n \n     @setupmethod\n-    def endpoint(self, endpoint: str) -> t.Callable:\n+    def endpoint(self, endpoint: str) -> t.Callable[[F], F]:\n         """"""Decorate a view function to register it for the given\n         endpoint. Used if a rule is added without a ``view_func`` with\n         :meth:`add_url_rule`.\n@@ -528,14 +528,14 @@ class Scaffold:\n             function.\n         """"""\n \n-        def decorator(f):\n+        def decorator(f: F) -> F:\n             self.view_functions[endpoint] = f\n             return f\n \n         return decorator\n \n     @setupmethod\n-    def before_request(self, f: ft.BeforeRequestCallable) -> ft.BeforeRequestCallable:\n+    def before_request(self, f: T_before_request) -> T_before_request:\n         """"""Register a function to run before each request.\n \n         For example, this can be used to open a database connection, or\n@@ -557,7 +557,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def after_request(self, f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n+    def after_request(self, f: T_after_request) -> T_after_request:\n         """"""Register a function to run after each request to this object.\n \n         The function is called with the response object, and must return\n@@ -573,7 +573,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def teardown_request(self, f: ft.TeardownCallable) -> ft.TeardownCallable:\n+    def teardown_request(self, f: T_teardown) -> T_teardown:\n         """"""Register a function to be run at the end of each request,\n         regardless of whether there was an exception or not.  These functions\n         are executed when the request context is popped, even if not an\n@@ -606,16 +606,18 @@ class Scaffold:\n \n     @setupmethod\n     def context_processor(\n-        self, f: ft.TemplateContextProcessorCallable\n-    ) -> ft.TemplateContextProcessorCallable:\n+        self,\n+        f: T_template_context_processor,\n+    ) -> T_template_context_processor:\n         """"""Registers a template context processor function.""""""\n         self.template_context_processors[None].append(f)\n         return f\n \n     @setupmethod\n     def url_value_preprocessor(\n-        self, f: ft.URLValuePreprocessorCallable\n-    ) -> ft.URLValuePreprocessorCallable:\n+        self,\n+        f: T_url_value_preprocessor,\n+    ) -> T_url_value_preprocessor:\n         """"""Register a URL value preprocessor function for all view\n         functions in the application. These functions will be called before the\n         :meth:`before_request` functions.\n@@ -632,7 +634,7 @@ class Scaffold:\n         return f\n \n     @setupmethod\n-    def url_defaults(self, f: ft.URLDefaultCallable) -> ft.URLDefaultCallable:\n+    def url_defaults(self, f: T_url_defaults) -> T_url_defaults:\n         """"""Callback function for URL defaults for all view functions of the\n         application.  It\'s called with the endpoint and values and should\n         update the values passed in place.\n@@ -643,7 +645,7 @@ class Scaffold:\n     @setupmethod\n     def errorhandler(\n         self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable[[ft.ErrorHandlerDecorator], ft.ErrorHandlerDecorator]:\n+    ) -> t.Callable[[T_error_handler], T_error_handler]:\n         """"""Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n@@ -673,7 +675,7 @@ class Scaffold:\n                                   an arbitrary exception\n         """"""\n \n-        def decorator(f: ft.ErrorHandlerDecorator) -> ft.ErrorHandlerDecorator:\n+        def decorator(f: T_error_handler) -> T_error_handler:\n             self.register_error_handler(code_or_exception, f)\n             return f\n \n'",1.925,1.925
src/flask/typing.py,src/flask/typing.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -42,10 +42,22 @@ ResponseReturnValue = t.Union[\n ResponseClass = t.TypeVar(""ResponseClass"", bound=""Response"")\n \n AppOrBlueprintKey = t.Optional[str]  # The App key is None, whereas blueprints are named\n-AfterRequestCallable = t.Callable[[ResponseClass], ResponseClass]\n-BeforeFirstRequestCallable = t.Callable[[], None]\n-BeforeRequestCallable = t.Callable[[], t.Optional[ResponseReturnValue]]\n-TeardownCallable = t.Callable[[t.Optional[BaseException]], None]\n+AfterRequestCallable = t.Union[\n+    t.Callable[[ResponseClass], ResponseClass],\n+    t.Callable[[ResponseClass], t.Awaitable[ResponseClass]],\n+]\n+BeforeFirstRequestCallable = t.Union[\n+    t.Callable[[], None], t.Callable[[], t.Awaitable[None]]\n+]\n+BeforeRequestCallable = t.Union[\n+    t.Callable[[], t.Optional[ResponseReturnValue]],\n+    t.Callable[[], t.Awaitable[t.Optional[ResponseReturnValue]]],\n+]\n+ShellContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n+TeardownCallable = t.Union[\n+    t.Callable[[t.Optional[BaseException]], None],\n+    t.Callable[[t.Optional[BaseException]], t.Awaitable[None]],\n+]\n TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n TemplateFilterCallable = t.Callable[..., t.Any]\n TemplateGlobalCallable = t.Callable[..., t.Any]\n@@ -60,7 +72,8 @@ URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], N\n # https://github.com/pallets/flask/issues/4295\n # https://github.com/pallets/flask/issues/4297\n ErrorHandlerCallable = t.Callable[[t.Any], ResponseReturnValue]\n-ErrorHandlerDecorator = t.TypeVar(""ErrorHandlerDecorator"", bound=ErrorHandlerCallable)\n \n-ViewCallable = t.Callable[..., ResponseReturnValue]\n-RouteDecorator = t.TypeVar(""RouteDecorator"", bound=ViewCallable)\n+RouteCallable = t.Union[\n+    t.Callable[..., ResponseReturnValue],\n+    t.Callable[..., t.Awaitable[ResponseReturnValue]],\n+]\n'",0,0
src/flask/views.py,src/flask/views.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -82,7 +82,7 @@ class View:\n     @classmethod\n     def as_view(\n         cls, name: str, *class_args: t.Any, **class_kwargs: t.Any\n-    ) -> ft.ViewCallable:\n+    ) -> ft.RouteCallable:\n         """"""Convert the class into a view function that can be registered\n         for a route.\n \n'",2.8333333333333335,2.8333333333333335
tests/typing/typing_route.py,tests/typing/typing_route.py,9b44bf2818d8e3cde422ad7f43fb33dfc6737289,d7482cd765351e7495bfce45f9fb55732e91ab3a,"""Improve decorator typing (#4676)\n\n* Add a missing setupmethod decorator\r\n\r\n* Improve the decorator typing\r\n\r\nThis will allow type checkers to understand that the decorators return\r\nthe same function signature as passed as an argument. This follows the\r\nguidelines from\r\nhttps://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators.\r\n\r\nI've chosen to keep a TypeVar per module and usage as I think\r\nencouraged by PEP 695, which I hope is accepted as the syntax is much\r\nnicer.""","'@@ -84,6 +84,11 @@ def return_template_stream() -> t.Iterator[str]:\n     return stream_template(""index.html"", name=""Hello"")\n \n \n+@app.route(""/async"")\n+async def async_route() -> str:\n+    return ""Hello""\n+\n+\n class RenderTemplateView(View):\n     def __init__(self: RenderTemplateView, template_name: str) -> None:\n         self.template_name = template_name\n'",1.1875,1.1764705882352942
docs/async-await.rst,docs/async-await.rst,6751f68560bfa7c51133d2712830645ed551ace8,cafe68e1edb8902f2dab977af9d848928ce1ecc6,'New URL for the Quart project\n\nThe Quart project moved from Gitlab (https://gitlab.com/pgjones/quart) to Github (https://github.com/pallets/quart). There is a message at the top of the Gitlab page announcing the move.',"'@@ -91,7 +91,7 @@ patch low-level Python functions to accomplish this, whereas ``async``/\n whether you should use Flask, Quart, or something else is ultimately up\n to understanding the specific needs of your project.\n \n-.. _Quart: https://gitlab.com/pgjones/quart\n+.. _Quart: https://github.com/pallets/quart\n .. _ASGI: https://asgi.readthedocs.io/en/latest/\n \n \n'",1.0,1.0
setup.py,setup.py,89463cb77c7f3830c308cdfcc250255fd7377d01,c757882808a7e4e29636e433463435a7eed5b952,'require Werkzeug 2.2',"'@@ -4,7 +4,7 @@ from setuptools import setup\n setup(\n     name=""Flask"",\n     install_requires=[\n-        ""Werkzeug >= 2.0"",\n+        ""Werkzeug >= 2.2.0a1"",\n         ""Jinja2 >= 3.0"",\n         ""itsdangerous >= 2.0"",\n         ""click >= 8.0"",\n'",0,0
src/flask/globals.py,src/flask/globals.py,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,89463cb77c7f3830c308cdfcc250255fd7377d01,'access names as proxies directly',"'@@ -1,59 +1,50 @@\n import typing as t\n-from functools import partial\n+from contextvars import ContextVar\n \n-from werkzeug.local import LocalProxy\n from werkzeug.local import LocalStack\n \n if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n     from .ctx import _AppCtxGlobals\n+    from .ctx import AppContext\n+    from .ctx import RequestContext\n     from .sessions import SessionMixin\n     from .wrappers import Request\n \n-_request_ctx_err_msg = """"""\\\n-Working outside of request context.\n-\n-This typically means that you attempted to use functionality that needed\n-an active HTTP request.  Consult the documentation on testing for\n-information about how to avoid this problem.\\\n-""""""\n-_app_ctx_err_msg = """"""\\\n+_no_app_msg = """"""\\\n Working outside of application context.\n \n This typically means that you attempted to use functionality that needed\n-to interface with the current application object in some way. To solve\n-this, set up an application context with app.app_context().  See the\n-documentation for more information.\\\n+the current application. To solve this, set up an application context\n+with app.app_context(). See the documentation for more information.\\\n """"""\n+_cv_app: ContextVar[t.List[""AppContext""]] = ContextVar(""flask.app_ctx"")\n+_app_ctx_stack: LocalStack[""AppContext""] = LocalStack(_cv_app)\n+app_ctx: ""AppContext"" = _app_ctx_stack(  # type: ignore[assignment]\n+    unbound_message=_no_app_msg\n+)\n+current_app: ""Flask"" = _app_ctx_stack(  # type: ignore[assignment]\n+    ""app"", unbound_message=_no_app_msg\n+)\n+g: ""_AppCtxGlobals"" = _app_ctx_stack(  # type: ignore[assignment]\n+    ""g"", unbound_message=_no_app_msg\n+)\n \n+_no_req_msg = """"""\\\n+Working outside of request context.\n \n-def _lookup_req_object(name):\n-    top = _request_ctx_stack.top\n-    if top is None:\n-        raise RuntimeError(_request_ctx_err_msg)\n-    return getattr(top, name)\n-\n-\n-def _lookup_app_object(name):\n-    top = _app_ctx_stack.top\n-    if top is None:\n-        raise RuntimeError(_app_ctx_err_msg)\n-    return getattr(top, name)\n-\n-\n-def _find_app():\n-    top = _app_ctx_stack.top\n-    if top is None:\n-        raise RuntimeError(_app_ctx_err_msg)\n-    return top.app\n-\n-\n-# context locals\n-_request_ctx_stack = LocalStack()\n-_app_ctx_stack = LocalStack()\n-current_app: ""Flask"" = LocalProxy(_find_app)  # type: ignore\n-request: ""Request"" = LocalProxy(partial(_lookup_req_object, ""request""))  # type: ignore\n-session: ""SessionMixin"" = LocalProxy(  # type: ignore\n-    partial(_lookup_req_object, ""session"")\n+This typically means that you attempted to use functionality that needed\n+an active HTTP request. Consult the documentation on testing for\n+information about how to avoid this problem.\\\n+""""""\n+_cv_req: ContextVar[t.List[""RequestContext""]] = ContextVar(""flask.request_ctx"")\n+_request_ctx_stack: LocalStack[""RequestContext""] = LocalStack(_cv_req)\n+request_ctx: ""RequestContext"" = _request_ctx_stack(  # type: ignore[assignment]\n+    unbound_message=_no_req_msg\n+)\n+request: ""Request"" = _request_ctx_stack(  # type: ignore[assignment]\n+    ""request"", unbound_message=_no_req_msg\n+)\n+session: ""SessionMixin"" = _request_ctx_stack(  # type: ignore[assignment]\n+    ""session"", unbound_message=_no_req_msg\n )\n-g: ""_AppCtxGlobals"" = LocalProxy(partial(_lookup_app_object, ""g""))  # type: ignore\n'",2.0,0
CHANGES.rst,CHANGES.rst,d597db67ded68d4aedf42b9d1d4570573fb79cd6,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,'contexts no longer use LocalStack',"""@@ -15,6 +15,15 @@ Unreleased\n     -   The ``RequestContext.g`` property returning ``AppContext.g`` is\n         removed.\n \n+-   The app and request contexts are managed using Python context vars\n+    directly rather than Werkzeug's ``LocalStack``. This should result\n+    in better performance and memory use. :pr:`4672`\n+\n+    -   Extension maintainers, be aware that ``_app_ctx_stack.top``\n+        and ``_request_ctx_stack.top`` are deprecated. Store data on\n+        ``g`` instead using a unique prefix, like\n+        ``g._extension_name_attr``.\n+\n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n \n""",0,0
src/flask/__init__.py,src/flask/__init__.py,d597db67ded68d4aedf42b9d1d4570573fb79cd6,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,'contexts no longer use LocalStack',"'@@ -11,8 +11,6 @@ from .ctx import after_this_request as after_this_request\n from .ctx import copy_current_request_context as copy_current_request_context\n from .ctx import has_app_context as has_app_context\n from .ctx import has_request_context as has_request_context\n-from .globals import _app_ctx_stack as _app_ctx_stack\n-from .globals import _request_ctx_stack as _request_ctx_stack\n from .globals import current_app as current_app\n from .globals import g as g\n from .globals import request as request\n@@ -45,3 +43,29 @@ from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n __version__ = ""2.2.0.dev0""\n+\n+\n+def __getattr__(name):\n+    if name == ""_app_ctx_stack"":\n+        import warnings\n+        from .globals import __app_ctx_stack\n+\n+        warnings.warn(\n+            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return __app_ctx_stack\n+\n+    if name == ""_request_ctx_stack"":\n+        import warnings\n+        from .globals import __request_ctx_stack\n+\n+        warnings.warn(\n+            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return __request_ctx_stack\n+\n+    raise AttributeError(name)\n'",0,3.0
src/flask/ctx.py,src/flask/ctx.py,d597db67ded68d4aedf42b9d1d4570573fb79cd6,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,'contexts no longer use LocalStack',"'@@ -1,3 +1,4 @@\n+import contextvars\n import sys\n import typing as t\n from functools import update_wrapper\n@@ -7,6 +8,8 @@ from werkzeug.exceptions import HTTPException\n \n from . import typing as ft\n from .globals import _app_ctx_stack\n+from .globals import _cv_app\n+from .globals import _cv_req\n from .globals import _request_ctx_stack\n from .signals import appcontext_popped\n from .signals import appcontext_pushed\n@@ -212,7 +215,7 @@ def has_request_context() -> bool:\n \n     .. versionadded:: 0.7\n     """"""\n-    return _request_ctx_stack.top is not None\n+    return _cv_app.get(None) is not None\n \n \n def has_app_context() -> bool:\n@@ -222,7 +225,7 @@ def has_app_context() -> bool:\n \n     .. versionadded:: 0.9\n     """"""\n-    return _app_ctx_stack.top is not None\n+    return _cv_req.get(None) is not None\n \n \n class AppContext:\n@@ -238,28 +241,29 @@ class AppContext:\n         self.app = app\n         self.url_adapter = app.create_url_adapter(None)\n         self.g = app.app_ctx_globals_class()\n-\n-        # Like request context, app contexts can be pushed multiple times\n-        # but there a basic ""refcount"" is enough to track them.\n-        self._refcnt = 0\n+        self._cv_tokens: t.List[contextvars.Token] = []\n \n     def push(self) -> None:\n         """"""Binds the app context to the current context.""""""\n-        self._refcnt += 1\n-        _app_ctx_stack.push(self)\n+        self._cv_tokens.append(_cv_app.set(self))\n         appcontext_pushed.send(self.app)\n \n     def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         """"""Pops the app context.""""""\n         try:\n-            self._refcnt -= 1\n-            if self._refcnt <= 0:\n+            if len(self._cv_tokens) == 1:\n                 if exc is _sentinel:\n                     exc = sys.exc_info()[1]\n                 self.app.do_teardown_appcontext(exc)\n         finally:\n-            rv = _app_ctx_stack.pop()\n-        assert rv is self, f""Popped wrong app context.  ({rv!r} instead of {self!r})""\n+            ctx = _cv_app.get()\n+            _cv_app.reset(self._cv_tokens.pop())\n+\n+        if ctx is not self:\n+            raise AssertionError(\n+                f""Popped wrong app context. ({ctx!r} instead of {self!r})""\n+            )\n+\n         appcontext_popped.send(self.app)\n \n     def __enter__(self) -> ""AppContext"":\n@@ -315,18 +319,13 @@ class RequestContext:\n             self.request.routing_exception = e\n         self.flashes = None\n         self.session = session\n-\n-        # Request contexts can be pushed multiple times and interleaved with\n-        # other request contexts.  Now only if the last level is popped we\n-        # get rid of them.  Additionally if an application context is missing\n-        # one is created implicitly so for each level we add this information\n-        self._implicit_app_ctx_stack: t.List[t.Optional[""AppContext""]] = []\n-\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n         self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n \n+        self._cv_tokens: t.List[t.Tuple[contextvars.Token, t.Optional[AppContext]]] = []\n+\n     def copy(self) -> ""RequestContext"":\n         """"""Creates a copy of this request context with the same request object.\n         This can be used to move a request context to a different greenlet.\n@@ -360,15 +359,15 @@ class RequestContext:\n     def push(self) -> None:\n         # Before we push the request context we have to ensure that there\n         # is an application context.\n-        app_ctx = _app_ctx_stack.top\n-        if app_ctx is None or app_ctx.app != self.app:\n+        app_ctx = _cv_app.get(None)\n+\n+        if app_ctx is None or app_ctx.app is not self.app:\n             app_ctx = self.app.app_context()\n             app_ctx.push()\n-            self._implicit_app_ctx_stack.append(app_ctx)\n         else:\n-            self._implicit_app_ctx_stack.append(None)\n+            app_ctx = None\n \n-        _request_ctx_stack.push(self)\n+        self._cv_tokens.append((_cv_req.set(self), app_ctx))\n \n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n@@ -394,11 +393,10 @@ class RequestContext:\n         .. versionchanged:: 0.9\n            Added the `exc` argument.\n         """"""\n-        app_ctx = self._implicit_app_ctx_stack.pop()\n-        clear_request = False\n+        clear_request = len(self._cv_tokens) == 1\n \n         try:\n-            if not self._implicit_app_ctx_stack:\n+            if clear_request:\n                 if exc is _sentinel:\n                     exc = sys.exc_info()[1]\n                 self.app.do_teardown_request(exc)\n@@ -406,36 +404,23 @@ class RequestContext:\n                 request_close = getattr(self.request, ""close"", None)\n                 if request_close is not None:\n                     request_close()\n-                clear_request = True\n         finally:\n-            rv = _request_ctx_stack.pop()\n+            ctx = _cv_req.get()\n+            token, app_ctx = self._cv_tokens.pop()\n+            _cv_req.reset(token)\n \n             # get rid of circular dependencies at the end of the request\n             # so that we don\'t require the GC to be active.\n             if clear_request:\n-                rv.request.environ[""werkzeug.request""] = None\n+                ctx.request.environ[""werkzeug.request""] = None\n \n-            # Get rid of the app as well if necessary.\n             if app_ctx is not None:\n                 app_ctx.pop(exc)\n \n-            assert (\n-                rv is self\n-            ), f""Popped wrong request context. ({rv!r} instead of {self!r})""\n-\n-    def auto_pop(self, exc: t.Optional[BaseException]) -> None:\n-        """"""\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'ctx.auto_pop\' is deprecated and will be removed in Flask 2.3."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.pop(exc)\n+            if ctx is not self:\n+                raise AssertionError(\n+                    f""Popped wrong request context. ({ctx!r} instead of {self!r})""\n+                )\n \n     def __enter__(self) -> ""RequestContext"":\n         self.push()\n'",1.8214285714285714,1.9259259259259258
src/flask/globals.py,src/flask/globals.py,d597db67ded68d4aedf42b9d1d4570573fb79cd6,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,'contexts no longer use LocalStack',"'@@ -1,7 +1,7 @@\n import typing as t\n from contextvars import ContextVar\n \n-from werkzeug.local import LocalStack\n+from werkzeug.local import LocalProxy\n \n if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import Flask\n@@ -11,6 +11,39 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .sessions import SessionMixin\n     from .wrappers import Request\n \n+\n+class _FakeStack:\n+    def __init__(self, name: str, cv: ContextVar[t.Any]) -> None:\n+        self.name = name\n+        self.cv = cv\n+\n+    def _warn(self):\n+        import warnings\n+\n+        warnings.warn(\n+            f""\'_{self.name}_ctx_stack\' is deprecated and will be""\n+            "" removed in Flask 2.3. Use \'g\' to store data, or""\n+            f"" \'{self.name}_ctx\' to access the current context."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+\n+    def push(self, obj: t.Any) -> None:\n+        self._warn()\n+        self.cv.set(obj)\n+\n+    def pop(self) -> t.Any:\n+        self._warn()\n+        ctx = self.cv.get(None)\n+        self.cv.set(None)\n+        return ctx\n+\n+    @property\n+    def top(self) -> t.Optional[t.Any]:\n+        self._warn()\n+        return self.cv.get(None)\n+\n+\n _no_app_msg = """"""\\\n Working outside of application context.\n \n@@ -18,16 +51,16 @@ This typically means that you attempted to use functionality that needed\n the current application. To solve this, set up an application context\n with app.app_context(). See the documentation for more information.\\\n """"""\n-_cv_app: ContextVar[t.List[""AppContext""]] = ContextVar(""flask.app_ctx"")\n-_app_ctx_stack: LocalStack[""AppContext""] = LocalStack(_cv_app)\n-app_ctx: ""AppContext"" = _app_ctx_stack(  # type: ignore[assignment]\n-    unbound_message=_no_app_msg\n+_cv_app: ContextVar[""AppContext""] = ContextVar(""flask.app_ctx"")\n+__app_ctx_stack = _FakeStack(""app"", _cv_app)\n+app_ctx: ""AppContext"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_app, unbound_message=_no_app_msg\n )\n-current_app: ""Flask"" = _app_ctx_stack(  # type: ignore[assignment]\n-    ""app"", unbound_message=_no_app_msg\n+current_app: ""Flask"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_app, ""app"", unbound_message=_no_app_msg\n )\n-g: ""_AppCtxGlobals"" = _app_ctx_stack(  # type: ignore[assignment]\n-    ""g"", unbound_message=_no_app_msg\n+g: ""_AppCtxGlobals"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_app, ""g"", unbound_message=_no_app_msg\n )\n \n _no_req_msg = """"""\\\n@@ -37,14 +70,38 @@ This typically means that you attempted to use functionality that needed\n an active HTTP request. Consult the documentation on testing for\n information about how to avoid this problem.\\\n """"""\n-_cv_req: ContextVar[t.List[""RequestContext""]] = ContextVar(""flask.request_ctx"")\n-_request_ctx_stack: LocalStack[""RequestContext""] = LocalStack(_cv_req)\n-request_ctx: ""RequestContext"" = _request_ctx_stack(  # type: ignore[assignment]\n-    unbound_message=_no_req_msg\n+_cv_req: ContextVar[""RequestContext""] = ContextVar(""flask.request_ctx"")\n+__request_ctx_stack = _FakeStack(""request"", _cv_req)\n+request_ctx: ""RequestContext"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_req, unbound_message=_no_req_msg\n )\n-request: ""Request"" = _request_ctx_stack(  # type: ignore[assignment]\n-    ""request"", unbound_message=_no_req_msg\n+request: ""Request"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_req, ""request"", unbound_message=_no_req_msg\n )\n-session: ""SessionMixin"" = _request_ctx_stack(  # type: ignore[assignment]\n-    ""session"", unbound_message=_no_req_msg\n+session: ""SessionMixin"" = LocalProxy(  # type: ignore[assignment]\n+    _cv_req, ""session"", unbound_message=_no_req_msg\n )\n+\n+\n+def __getattr__(name: str) -> t.Any:\n+    if name == ""_app_ctx_stack"":\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'_app_ctx_stack\' is deprecated and will be remoevd in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return __app_ctx_stack\n+\n+    if name == ""_request_ctx_stack"":\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'_request_ctx_stack\' is deprecated and will be remoevd in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return __request_ctx_stack\n+\n+    raise AttributeError(name)\n'",0,1.3333333333333333
src/flask/testing.py,src/flask/testing.py,d597db67ded68d4aedf42b9d1d4570573fb79cd6,0b2f809f9b56861dae3ae5154d73b4afaf632a0a,'contexts no longer use LocalStack',"'@@ -11,7 +11,7 @@ from werkzeug.urls import url_parse\n from werkzeug.wrappers import Request as BaseRequest\n \n from .cli import ScriptInfo\n-from .globals import _request_ctx_stack\n+from .globals import _cv_req\n from .json import dumps as json_dumps\n from .sessions import SessionMixin\n \n@@ -147,7 +147,7 @@ class FlaskClient(Client):\n         app = self.application\n         environ_overrides = kwargs.setdefault(""environ_overrides"", {})\n         self.cookie_jar.inject_wsgi(environ_overrides)\n-        outer_reqctx = _request_ctx_stack.top\n+        outer_reqctx = _cv_req.get(None)\n         with app.test_request_context(*args, **kwargs) as c:\n             session_interface = app.session_interface\n             sess = session_interface.open_session(app, c.request)\n@@ -163,11 +163,11 @@ class FlaskClient(Client):\n             # behavior.  It\'s important to not use the push and pop\n             # methods of the actual request context object since that would\n             # mean that cleanup handlers are called\n-            _request_ctx_stack.push(outer_reqctx)\n+            token = _cv_req.set(outer_reqctx)\n             try:\n                 yield sess\n             finally:\n-                _request_ctx_stack.pop()\n+                _cv_req.reset(token)\n \n             resp = app.response_class()\n             if not session_interface.is_null_session(sess):\n'",3.272727272727273,3.272727272727273
src/flask/app.py,src/flask/app.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -38,10 +38,11 @@ from .config import ConfigAttribute\n from .ctx import _AppCtxGlobals\n from .ctx import AppContext\n from .ctx import RequestContext\n-from .globals import _app_ctx_stack\n-from .globals import _request_ctx_stack\n+from .globals import _cv_app\n+from .globals import _cv_req\n from .globals import g\n from .globals import request\n+from .globals import request_ctx\n from .globals import session\n from .helpers import _split_blueprint_path\n from .helpers import get_debug_flag\n@@ -1554,10 +1555,10 @@ class Flask(Scaffold):\n            This no longer does the exception handling, this code was\n            moved to the new :meth:`full_dispatch_request`.\n         """"""\n-        req = _request_ctx_stack.top.request\n+        req = request_ctx.request\n         if req.routing_exception is not None:\n             self.raise_routing_exception(req)\n-        rule = req.url_rule\n+        rule: Rule = req.url_rule  # type: ignore[assignment]\n         # if we provide automatic options for this URL and the\n         # request came with the OPTIONS method, reply automatically\n         if (\n@@ -1566,7 +1567,8 @@ class Flask(Scaffold):\n         ):\n             return self.make_default_options_response()\n         # otherwise dispatch to the handler for that endpoint\n-        return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)\n+        view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]\n+        return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n \n     def full_dispatch_request(self) -> Response:\n         """"""Dispatches the request and on top of that performs request\n@@ -1631,8 +1633,8 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        adapter = _request_ctx_stack.top.url_adapter\n-        methods = adapter.allowed_methods()\n+        adapter = request_ctx.url_adapter\n+        methods = adapter.allowed_methods()  # type: ignore[union-attr]\n         rv = self.response_class()\n         rv.allow.update(methods)\n         return rv\n@@ -1740,7 +1742,7 @@ class Flask(Scaffold):\n         .. versionadded:: 2.2\n             Moved from ``flask.url_for``, which calls this method.\n         """"""\n-        req_ctx = _request_ctx_stack.top\n+        req_ctx = _cv_req.get(None)\n \n         if req_ctx is not None:\n             url_adapter = req_ctx.url_adapter\n@@ -1759,7 +1761,7 @@ class Flask(Scaffold):\n             if _external is None:\n                 _external = _scheme is not None\n         else:\n-            app_ctx = _app_ctx_stack.top\n+            app_ctx = _cv_app.get(None)\n \n             # If called by helpers.url_for, an app context is active,\n             # use its url_adapter. Otherwise, app.url_for was called\n@@ -1790,7 +1792,7 @@ class Flask(Scaffold):\n         self.inject_url_defaults(endpoint, values)\n \n         try:\n-            rv = url_adapter.build(\n+            rv = url_adapter.build(  # type: ignore[union-attr]\n                 endpoint,\n                 values,\n                 method=_method,\n@@ -2099,7 +2101,7 @@ class Flask(Scaffold):\n         :return: a new response object or the same, has to be an\n                  instance of :attr:`response_class`.\n         """"""\n-        ctx = _request_ctx_stack.top\n+        ctx = request_ctx._get_current_object()  # type: ignore[attr-defined]\n \n         for func in ctx._after_request_functions:\n             response = self.ensure_sync(func)(response)\n@@ -2305,8 +2307,8 @@ class Flask(Scaffold):\n             return response(environ, start_response)\n         finally:\n             if ""werkzeug.debug.preserve_context"" in environ:\n-                environ[""werkzeug.debug.preserve_context""](_app_ctx_stack.top)\n-                environ[""werkzeug.debug.preserve_context""](_request_ctx_stack.top)\n+                environ[""werkzeug.debug.preserve_context""](_cv_app.get())\n+                environ[""werkzeug.debug.preserve_context""](_cv_req.get())\n \n             if error is not None and self.should_ignore_error(error):\n                 error = None\n'",3.2318840579710146,3.2318840579710146
src/flask/cli.py,src/flask/cli.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -1051,13 +1051,11 @@ def shell_command() -> None:\n     without having to manually configure the application.\n     """"""\n     import code\n-    from .globals import _app_ctx_stack\n \n-    app = _app_ctx_stack.top.app\n     banner = (\n         f""Python {sys.version} on {sys.platform}\\n""\n-        f""App: {app.import_name} [{app.env}]\\n""\n-        f""Instance: {app.instance_path}""\n+        f""App: {current_app.import_name} [{current_app.env}]\\n""\n+        f""Instance: {current_app.instance_path}""\n     )\n     ctx: dict = {}\n \n@@ -1068,7 +1066,7 @@ def shell_command() -> None:\n         with open(startup) as f:\n             eval(compile(f.read(), startup, ""exec""), ctx)\n \n-    ctx.update(app.make_shell_context())\n+    ctx.update(current_app.make_shell_context())\n \n     # Site, customize, or startup script can set a hook to call when\n     # entering interactive mode. The default one sets up readline with\n'",4.05,4.05
src/flask/ctx.py,src/flask/ctx.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -7,10 +7,8 @@ from types import TracebackType\n from werkzeug.exceptions import HTTPException\n \n from . import typing as ft\n-from .globals import _app_ctx_stack\n from .globals import _cv_app\n from .globals import _cv_req\n-from .globals import _request_ctx_stack\n from .signals import appcontext_popped\n from .signals import appcontext_pushed\n \n@@ -106,9 +104,9 @@ class _AppCtxGlobals:\n         return iter(self.__dict__)\n \n     def __repr__(self) -> str:\n-        top = _app_ctx_stack.top\n-        if top is not None:\n-            return f""<flask.g of {top.app.name!r}>""\n+        ctx = _cv_app.get(None)\n+        if ctx is not None:\n+            return f""<flask.g of \'{ctx.app.name}\'>""\n         return object.__repr__(self)\n \n \n@@ -133,15 +131,15 @@ def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n \n     .. versionadded:: 0.9\n     """"""\n-    top = _request_ctx_stack.top\n+    ctx = _cv_req.get(None)\n \n-    if top is None:\n+    if ctx is None:\n         raise RuntimeError(\n-            ""This decorator can only be used when a request context is""\n-            "" active, such as within a view function.""\n+            ""\'after_this_request\' can only be used when a request""\n+            "" context is active, such as in a view function.""\n         )\n \n-    top._after_request_functions.append(f)\n+    ctx._after_request_functions.append(f)\n     return f\n \n \n@@ -169,19 +167,19 @@ def copy_current_request_context(f: t.Callable) -> t.Callable:\n \n     .. versionadded:: 0.10\n     """"""\n-    top = _request_ctx_stack.top\n+    ctx = _cv_req.get(None)\n \n-    if top is None:\n+    if ctx is None:\n         raise RuntimeError(\n-            ""This decorator can only be used when a request context is""\n-            "" active, such as within a view function.""\n+            ""\'copy_current_request_context\' can only be used when a""\n+            "" request context is active, such as in a view function.""\n         )\n \n-    reqctx = top.copy()\n+    ctx = ctx.copy()\n \n     def wrapper(*args, **kwargs):\n-        with reqctx:\n-            return reqctx.app.ensure_sync(f)(*args, **kwargs)\n+        with ctx:\n+            return ctx.app.ensure_sync(f)(*args, **kwargs)\n \n     return update_wrapper(wrapper, f)\n \n@@ -240,7 +238,7 @@ class AppContext:\n     def __init__(self, app: ""Flask"") -> None:\n         self.app = app\n         self.url_adapter = app.create_url_adapter(None)\n-        self.g = app.app_ctx_globals_class()\n+        self.g: _AppCtxGlobals = app.app_ctx_globals_class()\n         self._cv_tokens: t.List[contextvars.Token] = []\n \n     def push(self) -> None:\n@@ -311,14 +309,14 @@ class RequestContext:\n         self.app = app\n         if request is None:\n             request = app.request_class(environ)\n-        self.request = request\n+        self.request: Request = request\n         self.url_adapter = None\n         try:\n             self.url_adapter = app.create_url_adapter(self.request)\n         except HTTPException as e:\n             self.request.routing_exception = e\n-        self.flashes = None\n-        self.session = session\n+        self.flashes: t.Optional[t.List[t.Tuple[str, str]]] = None\n+        self.session: t.Optional[""SessionMixin""] = session\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -2,7 +2,7 @@ import typing as t\n \n from .app import Flask\n from .blueprints import Blueprint\n-from .globals import _request_ctx_stack\n+from .globals import request_ctx\n \n \n class UnexpectedUnicodeError(AssertionError, UnicodeError):\n@@ -116,9 +116,8 @@ def explain_template_loading_attempts(app: Flask, template, attempts) -> None:\n     info = [f""Locating template {template!r}:""]\n     total_found = 0\n     blueprint = None\n-    reqctx = _request_ctx_stack.top\n-    if reqctx is not None and reqctx.request.blueprint is not None:\n-        blueprint = reqctx.request.blueprint\n+    if request_ctx and request_ctx.request.blueprint is not None:\n+        blueprint = request_ctx.request.blueprint\n \n     for idx, (loader, srcobj, triple) in enumerate(attempts):\n         if isinstance(srcobj, Flask):\n'",4.285714285714286,4.285714285714286
src/flask/helpers.py,src/flask/helpers.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -12,9 +12,10 @@ import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n from werkzeug.utils import redirect as _wz_redirect\n \n-from .globals import _request_ctx_stack\n+from .globals import _cv_req\n from .globals import current_app\n from .globals import request\n+from .globals import request_ctx\n from .globals import session\n from .signals import message_flashed\n \n@@ -110,11 +111,11 @@ def stream_with_context(\n         return update_wrapper(decorator, generator_or_function)  # type: ignore\n \n     def generator() -> t.Generator:\n-        ctx = _request_ctx_stack.top\n+        ctx = _cv_req.get(None)\n         if ctx is None:\n             raise RuntimeError(\n-                ""Attempted to stream with context but ""\n-                ""there was no context in the first place to keep around.""\n+                ""\'stream_with_context\' can only be used when a request""\n+                "" context is active, such as in a view function.""\n             )\n         with ctx:\n             # Dummy sentinel.  Has to be inside the context block or we\'re\n@@ -377,11 +378,10 @@ def get_flashed_messages(\n     :param category_filter: filter of categories to limit return values.  Only\n                             categories in the list will be returned.\n     """"""\n-    flashes = _request_ctx_stack.top.flashes\n+    flashes = request_ctx.flashes\n     if flashes is None:\n-        _request_ctx_stack.top.flashes = flashes = (\n-            session.pop(""_flashes"") if ""_flashes"" in session else []\n-        )\n+        flashes = session.pop(""_flashes"") if ""_flashes"" in session else []\n+        request_ctx.flashes = flashes\n     if category_filter:\n         flashes = list(filter(lambda f: f[0] in category_filter, flashes))\n     if not with_categories:\n'",2.217391304347826,2.217391304347826
src/flask/templating.py,src/flask/templating.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -5,8 +5,8 @@ from jinja2 import Environment as BaseEnvironment\n from jinja2 import Template\n from jinja2 import TemplateNotFound\n \n-from .globals import _app_ctx_stack\n-from .globals import _request_ctx_stack\n+from .globals import _cv_app\n+from .globals import _cv_req\n from .globals import current_app\n from .globals import request\n from .helpers import stream_with_context\n@@ -22,9 +22,9 @@ def _default_template_ctx_processor() -> t.Dict[str, t.Any]:\n     """"""Default template context processor.  Injects `request`,\n     `session` and `g`.\n     """"""\n-    reqctx = _request_ctx_stack.top\n-    appctx = _app_ctx_stack.top\n-    rv = {}\n+    appctx = _cv_app.get(None)\n+    reqctx = _cv_req.get(None)\n+    rv: t.Dict[str, t.Any] = {}\n     if appctx is not None:\n         rv[""g""] = appctx.g\n     if reqctx is not None:\n@@ -124,7 +124,8 @@ class DispatchingJinjaLoader(BaseLoader):\n         return list(result)\n \n \n-def _render(template: Template, context: dict, app: ""Flask"") -> str:\n+def _render(app: ""Flask"", template: Template, context: t.Dict[str, t.Any]) -> str:\n+    app.update_template_context(context)\n     before_render_template.send(app, template=template, context=context)\n     rv = template.render(context)\n     template_rendered.send(app, template=template, context=context)\n@@ -135,36 +136,27 @@ def render_template(\n     template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n     **context: t.Any\n ) -> str:\n-    """"""Renders a template from the template folder with the given\n-    context.\n+    """"""Render a template by name with the given context.\n \n-    :param template_name_or_list: the name of the template to be\n-                                  rendered, or an iterable with template names\n-                                  the first one existing will be rendered\n-    :param context: the variables that should be available in the\n-                    context of the template.\n+    :param template_name_or_list: The name of the template to render. If\n+        a list is given, the first name to exist will be rendered.\n+    :param context: The variables to make available in the template.\n     """"""\n-    ctx = _app_ctx_stack.top\n-    ctx.app.update_template_context(context)\n-    return _render(\n-        ctx.app.jinja_env.get_or_select_template(template_name_or_list),\n-        context,\n-        ctx.app,\n-    )\n+    app = current_app._get_current_object()  # type: ignore[attr-defined]\n+    template = app.jinja_env.get_or_select_template(template_name_or_list)\n+    return _render(app, template, context)\n \n \n def render_template_string(source: str, **context: t.Any) -> str:\n-    """"""Renders a template from the given template source string\n-    with the given context. Template variables will be autoescaped.\n+    """"""Render a template from the given source string with the given\n+    context.\n \n-    :param source: the source code of the template to be\n-                   rendered\n-    :param context: the variables that should be available in the\n-                    context of the template.\n+    :param source: The source code of the template to render.\n+    :param context: The variables to make available in the template.\n     """"""\n-    ctx = _app_ctx_stack.top\n-    ctx.app.update_template_context(context)\n-    return _render(ctx.app.jinja_env.from_string(source), context, ctx.app)\n+    app = current_app._get_current_object()  # type: ignore[attr-defined]\n+    template = app.jinja_env.from_string(source)\n+    return _render(app, template, context)\n \n \n def _stream(\n'",2.2,2.2
src/flask/testing.py,src/flask/testing.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"""@@ -163,7 +163,7 @@ class FlaskClient(Client):\n             # behavior.  It's important to not use the push and pop\n             # methods of the actual request context object since that would\n             # mean that cleanup handlers are called\n-            token = _cv_req.set(outer_reqctx)\n+            token = _cv_req.set(outer_reqctx)  # type: ignore[arg-type]\n             try:\n                 yield sess\n             finally:\n""",3.272727272727273,3.272727272727273
tests/conftest.py,tests/conftest.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -6,8 +6,8 @@ import textwrap\n import pytest\n from _pytest import monkeypatch\n \n-import flask\n-from flask import Flask as _Flask\n+from flask import Flask\n+from flask.globals import request_ctx\n \n \n @pytest.fixture(scope=""session"", autouse=True)\n@@ -44,14 +44,13 @@ def _reset_os_environ(monkeypatch, _standard_os_environ):\n     monkeypatch._setitem.extend(_standard_os_environ)\n \n \n-class Flask(_Flask):\n-    testing = True\n-    secret_key = ""test key""\n-\n-\n @pytest.fixture\n def app():\n     app = Flask(""flask_test"", root_path=os.path.dirname(__file__))\n+    app.config.update(\n+        TESTING=True,\n+        SECRET_KEY=""test key"",\n+    )\n     return app\n \n \n@@ -92,8 +91,10 @@ def leak_detector():\n     # make sure we\'re not leaking a request context since we are\n     # testing flask internally in debug mode in a few cases\n     leaks = []\n-    while flask._request_ctx_stack.top is not None:\n-        leaks.append(flask._request_ctx_stack.pop())\n+    while request_ctx:\n+        leaks.append(request_ctx._get_current_object())\n+        request_ctx.pop()\n+\n     assert leaks == []\n \n \n'",1.3157894736842106,1.3157894736842106
tests/test_appctx.py,tests/test_appctx.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -1,6 +1,8 @@\n import pytest\n \n import flask\n+from flask.globals import app_ctx\n+from flask.globals import request_ctx\n \n \n def test_basic_url_generation(app):\n@@ -29,14 +31,14 @@ def test_url_generation_without_context_fails():\n \n def test_request_context_means_app_context(app):\n     with app.test_request_context():\n-        assert flask.current_app._get_current_object() == app\n-    assert flask._app_ctx_stack.top is None\n+        assert flask.current_app._get_current_object() is app\n+    assert not flask.current_app\n \n \n def test_app_context_provides_current_app(app):\n     with app.app_context():\n-        assert flask.current_app._get_current_object() == app\n-    assert flask._app_ctx_stack.top is None\n+        assert flask.current_app._get_current_object() is app\n+    assert not flask.current_app\n \n \n def test_app_tearing_down(app):\n@@ -175,11 +177,11 @@ def test_context_refcounts(app, client):\n \n     @app.route(""/"")\n     def index():\n-        with flask._app_ctx_stack.top:\n-            with flask._request_ctx_stack.top:\n+        with app_ctx:\n+            with request_ctx:\n                 pass\n-        env = flask._request_ctx_stack.top.request.environ\n-        assert env[""werkzeug.request""] is not None\n+\n+        assert flask.request.environ[""werkzeug.request""] is not None\n         return """"\n \n     res = client.get(""/"")\n'",1.103448275862069,1.103448275862069
tests/test_basic.py,tests/test_basic.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -1110,14 +1110,10 @@ def test_enctype_debug_helper(app, client):\n     def index():\n         return flask.request.files[""foo""].filename\n \n-    # with statement is important because we leave an exception on the\n-    # stack otherwise and we want to ensure that this is not the case\n-    # to not negatively affect other tests.\n-    with client:\n-        with pytest.raises(DebugFilesKeyError) as e:\n-            client.post(""/fail"", data={""foo"": ""index.txt""})\n-        assert ""no file contents were transmitted"" in str(e.value)\n-        assert ""This was submitted: \'index.txt\'"" in str(e.value)\n+    with pytest.raises(DebugFilesKeyError) as e:\n+        client.post(""/fail"", data={""foo"": ""index.txt""})\n+    assert ""no file contents were transmitted"" in str(e.value)\n+    assert ""This was submitted: \'index.txt\'"" in str(e.value)\n \n \n def test_response_types(app, client):\n@@ -1548,29 +1544,21 @@ def test_server_name_subdomain():\n     assert rv.data == b""subdomain""\n \n \n-@pytest.mark.filterwarnings(""ignore::pytest.PytestUnraisableExceptionWarning"")\n-@pytest.mark.filterwarnings(""ignore::pytest.PytestUnhandledThreadExceptionWarning"")\n-def test_exception_propagation(app, client):\n-    def apprunner(config_key):\n-        @app.route(""/"")\n-        def index():\n-            1 // 0\n+@pytest.mark.parametrize(""key"", [""TESTING"", ""PROPAGATE_EXCEPTIONS"", ""DEBUG"", None])\n+def test_exception_propagation(app, client, key):\n+    app.testing = False\n \n-        if config_key is not None:\n-            app.config[config_key] = True\n-            with pytest.raises(Exception):\n-                client.get(""/"")\n-        else:\n-            assert client.get(""/"").status_code == 500\n-\n-    # we have to run this test in an isolated thread because if the\n-    # debug flag is set to true and an exception happens the context is\n-    # not torn down.  This causes other tests that run after this fail\n-    # when they expect no exception on the stack.\n-    for config_key in ""TESTING"", ""PROPAGATE_EXCEPTIONS"", ""DEBUG"", None:\n-        t = Thread(target=apprunner, args=(config_key,))\n-        t.start()\n-        t.join()\n+    @app.route(""/"")\n+    def index():\n+        1 // 0\n+\n+    if key is not None:\n+        app.config[key] = True\n+\n+        with pytest.raises(ZeroDivisionError):\n+            client.get(""/"")\n+    else:\n+        assert client.get(""/"").status_code == 500\n \n \n @pytest.mark.parametrize(""debug"", [True, False])\n'",1.078125,1.0745098039215686
tests/test_reqctx.py,tests/test_reqctx.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -3,6 +3,7 @@ import warnings\n import pytest\n \n import flask\n+from flask.globals import request_ctx\n from flask.sessions import SecureCookieSessionInterface\n from flask.sessions import SessionInterface\n \n@@ -116,7 +117,7 @@ def test_context_binding(app):\n         assert index() == ""Hello World!""\n     with app.test_request_context(""/meh""):\n         assert meh() == ""http://localhost/meh""\n-    assert flask._request_ctx_stack.top is None\n+    assert not flask.request\n \n \n def test_context_test(app):\n@@ -152,7 +153,7 @@ class TestGreenletContextCopying:\n         @app.route(""/"")\n         def index():\n             flask.session[""fizz""] = ""buzz""\n-            reqctx = flask._request_ctx_stack.top.copy()\n+            reqctx = request_ctx.copy()\n \n             def g():\n                 assert not flask.request\n'",1.1142857142857143,1.1142857142857143
tests/test_session_interface.py,tests/test_session_interface.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -1,4 +1,5 @@\n import flask\n+from flask.globals import request_ctx\n from flask.sessions import SessionInterface\n \n \n@@ -13,7 +14,7 @@ def test_open_session_with_endpoint():\n             pass\n \n         def open_session(self, app, request):\n-            flask._request_ctx_stack.top.match_request()\n+            request_ctx.match_request()\n             assert request.endpoint is not None\n \n     app = flask.Flask(__name__)\n'",1.0,1.0
tests/test_testing.py,tests/test_testing.py,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,d597db67ded68d4aedf42b9d1d4570573fb79cd6,'remove uses of LocalStack',"'@@ -5,6 +5,7 @@ import werkzeug\n import flask\n from flask import appcontext_popped\n from flask.cli import ScriptInfo\n+from flask.globals import _cv_req\n from flask.json import jsonify\n from flask.testing import EnvironBuilder\n from flask.testing import FlaskCliRunner\n@@ -399,4 +400,4 @@ def test_client_pop_all_preserved(app, req_ctx, client):\n     # close the response, releasing the context held by stream_with_context\n     rv.close()\n     # only req_ctx fixture should still be pushed\n-    assert flask._request_ctx_stack.top is req_ctx\n+    assert _cv_req.get(None) is req_ctx\n'",1.0425531914893618,1.0425531914893618
docs/api.rst,docs/api.rst,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"'@@ -311,56 +311,28 @@ Useful Internals\n .. autoclass:: flask.ctx.RequestContext\n    :members:\n \n-.. data:: _request_ctx_stack\n+.. data:: flask.globals.request_ctx\n \n-    The internal :class:`~werkzeug.local.LocalStack` that holds\n-    :class:`~flask.ctx.RequestContext` instances. Typically, the\n-    :data:`request` and :data:`session` proxies should be accessed\n-    instead of the stack. It may be useful to access the stack in\n-    extension code.\n+    The current :class:`~flask.ctx.RequestContext`. If a request context\n+    is not active, accessing attributes on this proxy will raise a\n+    ``RuntimeError``.\n \n-    The following attributes are always present on each layer of the\n-    stack:\n-\n-    `app`\n-      the active Flask application.\n-\n-    `url_adapter`\n-      the URL adapter that was used to match the request.\n-\n-    `request`\n-      the current request object.\n-\n-    `session`\n-      the active session object.\n-\n-    `g`\n-      an object with all the attributes of the :data:`flask.g` object.\n-\n-    `flashes`\n-      an internal cache for the flashed messages.\n-\n-    Example usage::\n-\n-        from flask import _request_ctx_stack\n-\n-        def get_session():\n-            ctx = _request_ctx_stack.top\n-            if ctx is not None:\n-                return ctx.session\n+    This is an internal object that is essential to how Flask handles\n+    requests. Accessing this should not be needed in most cases. Most\n+    likely you want :data:`request` and :data:`session` instead.\n \n .. autoclass:: flask.ctx.AppContext\n    :members:\n \n-.. data:: _app_ctx_stack\n+.. data:: flask.globals.app_ctx\n \n-    The internal :class:`~werkzeug.local.LocalStack` that holds\n-    :class:`~flask.ctx.AppContext` instances. Typically, the\n-    :data:`current_app` and :data:`g` proxies should be accessed instead\n-    of the stack. Extensions can access the contexts on the stack as a\n-    namespace to store data.\n+    The current :class:`~flask.ctx.AppContext`. If an app context is not\n+    active, accessing attributes on this proxy will raise a\n+    ``RuntimeError``.\n \n-    .. versionadded:: 0.9\n+    This is an internal object that is essential to how Flask handles\n+    requests. Accessing this should not be needed in most cases. Most\n+    likely you want :data:`current_app` and :data:`g` instead.\n \n .. autoclass:: flask.blueprints.BlueprintSetupState\n    :members:\n'",1.25,1.2
docs/appcontext.rst,docs/appcontext.rst,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"""@@ -136,14 +136,6 @@ local from ``get_db()``::\n Accessing ``db`` will call ``get_db`` internally, in the same way that\n :data:`current_app` works.\n \n-----\n-\n-If you're writing an extension, :data:`g` should be reserved for user\n-code. You may store internal data on the context itself, but be sure to\n-use a sufficiently unique name. The current context is accessed with\n-:data:`_app_ctx_stack.top <_app_ctx_stack>`. For more information see\n-:doc:`/extensiondev`.\n-\n \n Events and Signals\n ------------------\n""",1.6666666666666667,1.6666666666666667
docs/extensiondev.rst,docs/extensiondev.rst,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"""@@ -187,12 +187,6 @@ when the application context ends. If it should only be valid during a\n request, or would not be used in the CLI outside a reqeust, use\n :meth:`~flask.Flask.teardown_request`.\n \n-An older technique for storing context data was to store it on\n-``_app_ctx_stack.top`` or ``_request_ctx_stack.top``. However, this just\n-moves the same namespace collision problem elsewhere (although less\n-likely) and modifies objects that are very internal to Flask's\n-operations. Prefer storing data under a unique name in ``g``.\n-\n \n Views and Models\n ----------------\n""",1.3333333333333333,1.1428571428571428
docs/patterns/sqlite3.rst,docs/patterns/sqlite3.rst,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"""@@ -30,10 +30,6 @@ or create an application context itself.  At that point the ``get_db``\n function can be used to get the current database connection.  Whenever the\n context is destroyed the database connection will be terminated.\n \n-Note: if you use Flask 0.9 or older you need to use\n-``flask._app_ctx_stack.top`` instead of ``g`` as the :data:`flask.g`\n-object was bound to the request and not application context.\n-\n Example::\n \n     @app.route('/')\n""",2.0,2.0
docs/reqcontext.rst,docs/reqcontext.rst,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"""@@ -37,12 +37,14 @@ context, which also pushes an :doc:`app context </appcontext>`. When the\n request ends it pops the request context then the application context.\n \n The context is unique to each thread (or other worker type).\n-:data:`request` cannot be passed to another thread, the other thread\n-will have a different context stack and will not know about the request\n-the parent thread was pointing to.\n+:data:`request` cannot be passed to another thread, the other thread has\n+a different context space and will not know about the request the parent\n+thread was pointing to.\n \n-Context locals are implemented in Werkzeug. See :doc:`werkzeug:local`\n-for more information on how this works internally.\n+Context locals are implemented using Python's :mod:`contextvars` and\n+Werkzeug's :class:`~werkzeug.local.LocalProxy`. Python manages the\n+lifetime of context vars automatically, and local proxy wraps that\n+low-level interface to make the data easier to work with.\n \n \n Manually Push a Context\n@@ -87,10 +89,9 @@ How the Context Works\n \n The :meth:`Flask.wsgi_app` method is called to handle each request. It\n manages the contexts during the request. Internally, the request and\n-application contexts work as stacks, :data:`_request_ctx_stack` and\n-:data:`_app_ctx_stack`. When contexts are pushed onto the stack, the\n+application contexts work like stacks. When contexts are pushed, the\n proxies that depend on them are available and point at information from\n-the top context on the stack.\n+the top item.\n \n When the request starts, a :class:`~ctx.RequestContext` is created and\n pushed, which creates and pushes an :class:`~ctx.AppContext` first if\n@@ -99,10 +100,10 @@ these contexts are pushed, the :data:`current_app`, :data:`g`,\n :data:`request`, and :data:`session` proxies are available to the\n original thread handling the request.\n \n-Because the contexts are stacks, other contexts may be pushed to change\n-the proxies during a request. While this is not a common pattern, it\n-can be used in advanced applications to, for example, do internal\n-redirects or chain different applications together.\n+Other contexts may be pushed to change the proxies during a request.\n+While this is not a common pattern, it can be used in advanced\n+applications to, for example, do internal redirects or chain different\n+applications together.\n \n After the request is dispatched and a response is generated and sent,\n the request context is popped, which then pops the application context.\n""",0,0
src/flask/app.py,src/flask/app.py,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"'@@ -1284,29 +1284,30 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def teardown_appcontext(self, f: T_teardown) -> T_teardown:\n-        """"""Registers a function to be called when the application context\n-        ends.  These functions are typically also called when the request\n-        context is popped.\n+        """"""Registers a function to be called when the application\n+        context is popped. The application context is typically popped\n+        after the request context for each request, at the end of CLI\n+        commands, or after a manually pushed context ends.\n \n-        Example::\n-\n-            ctx = app.app_context()\n-            ctx.push()\n-            ...\n-            ctx.pop()\n-\n-        When ``ctx.pop()`` is executed in the above example, the teardown\n-        functions are called just before the app context moves from the\n-        stack of active contexts.  This becomes relevant if you are using\n-        such constructs in tests.\n-\n-        Since a request context typically also manages an application\n-        context it would also be called when you pop a request context.\n+        .. code-block:: python\n \n-        When a teardown function was called because of an unhandled exception\n-        it will be passed an error object. If an :meth:`errorhandler` is\n-        registered, it will handle the exception and the teardown will not\n-        receive it.\n+            with app.app_context():\n+                ...\n+\n+        When the ``with`` block exits (or ``ctx.pop()`` is called), the\n+        teardown functions are called just before the app context is\n+        made inactive. Since a request context typically also manages an\n+        application context it would also be called when you pop a\n+        request context.\n+\n+        When a teardown function was called because of an unhandled\n+        exception it will be passed an error object. If an\n+        :meth:`errorhandler` is registered, it will handle the exception\n+        and the teardown will not receive it.\n+\n+        Teardown functions must avoid raising exceptions. If they\n+        execute code that might fail they must surround that code with a\n+        ``try``/``except`` block and log any errors.\n \n         The return values of teardown functions are ignored.\n \n'",3.2318840579710146,3.2318840579710146
src/flask/ctx.py,src/flask/ctx.py,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"'@@ -227,12 +227,10 @@ def has_app_context() -> bool:\n \n \n class AppContext:\n-    """"""The application context binds an application object implicitly\n-    to the current thread or greenlet, similar to how the\n-    :class:`RequestContext` binds request information.  The application\n-    context is also implicitly created if a request context is created\n-    but the application is not on top of the individual application\n-    context.\n+    """"""The app context contains application-specific information. An app\n+    context is created and pushed at the beginning of each request if\n+    one is not already active. An app context is also pushed when\n+    running CLI commands.\n     """"""\n \n     def __init__(self, app: ""Flask"") -> None:\n@@ -278,10 +276,10 @@ class AppContext:\n \n \n class RequestContext:\n-    """"""The request context contains all request relevant information.  It is\n-    created at the beginning of the request and pushed to the\n-    `_request_ctx_stack` and removed at the end of it.  It will create the\n-    URL adapter and request object for the WSGI environment provided.\n+    """"""The request context contains per-request information. The Flask\n+    app creates and pushes it at the beginning of the request, then pops\n+    it at the end of the request. It will create the URL adapter and\n+    request object for the WSGI environment provided.\n \n     Do not attempt to use this class directly, instead use\n     :meth:`~flask.Flask.test_request_context` and\n'",1.9259259259259258,1.9259259259259258
src/flask/scaffold.py,src/flask/scaffold.py,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"'@@ -574,30 +574,27 @@ class Scaffold:\n \n     @setupmethod\n     def teardown_request(self, f: T_teardown) -> T_teardown:\n-        """"""Register a function to be run at the end of each request,\n-        regardless of whether there was an exception or not.  These functions\n-        are executed when the request context is popped, even if not an\n-        actual request was performed.\n-\n-        Example::\n-\n-            ctx = app.test_request_context()\n-            ctx.push()\n-            ...\n-            ctx.pop()\n-\n-        When ``ctx.pop()`` is executed in the above example, the teardown\n-        functions are called just before the request context moves from the\n-        stack of active contexts.  This becomes relevant if you are using\n-        such constructs in tests.\n-\n-        Teardown functions must avoid raising exceptions. If\n-        they execute code that might fail they\n-        will have to surround the execution of that code with try/except\n-        statements and log any errors.\n-\n-        When a teardown function was called because of an exception it will\n-        be passed an error object.\n+        """"""Register a function to be called when the request context is\n+        popped. Typically this happens at the end of each request, but\n+        contexts may be pushed manually as well during testing.\n+\n+        .. code-block:: python\n+\n+            with app.test_request_context():\n+                ...\n+\n+        When the ``with`` block exits (or ``ctx.pop()`` is called), the\n+        teardown functions are called just before the request context is\n+        made inactive.\n+\n+        When a teardown function was called because of an unhandled\n+        exception it will be passed an error object. If an\n+        :meth:`errorhandler` is registered, it will handle the exception\n+        and the teardown will not receive it.\n+\n+        Teardown functions must avoid raising exceptions. If they\n+        execute code that might fail they must surround that code with a\n+        ``try``/``except`` block and log any errors.\n \n         The return values of teardown functions are ignored.\n         """"""\n'",1.925,1.925
src/flask/testing.py,src/flask/testing.py,e0dad454810dd081947d3ca2ff376c5096185698,82c2e0366ce6b74a3786a64631ce58b85b3a7d4e,'update docs about contexts',"'@@ -94,11 +94,10 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n \n \n class FlaskClient(Client):\n-    """"""Works like a regular Werkzeug test client but has some knowledge about\n-    how Flask works to defer the cleanup of the request context stack to the\n-    end of a ``with`` body when used in a ``with`` statement.  For general\n-    information about how to use this class refer to\n-    :class:`werkzeug.test.Client`.\n+    """"""Works like a regular Werkzeug test client but has knowledge about\n+    Flask\'s contexts to defer the cleanup of the request context until\n+    the end of a ``with`` block. For general information about how to\n+    use this class refer to :class:`werkzeug.test.Client`.\n \n     .. versionchanged:: 0.12\n        `app.test_client()` includes preset default environment, which can be\n'",3.272727272727273,3.272727272727273
CHANGES.rst,CHANGES.rst,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,cbebdae698272eeea2739988ccce54b1f14a1a67,'fix pr link',"""@@ -17,7 +17,7 @@ Unreleased\n \n -   The app and request contexts are managed using Python context vars\n     directly rather than Werkzeug's ``LocalStack``. This should result\n-    in better performance and memory use. :pr:`4672`\n+    in better performance and memory use. :pr:`4682`\n \n     -   Extension maintainers, be aware that ``_app_ctx_stack.top``\n         and ``_request_ctx_stack.top`` are deprecated. Store data on\n""",0,0
src/flask/app.py,src/flask/app.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -39,7 +39,7 @@ from .ctx import _AppCtxGlobals\n from .ctx import AppContext\n from .ctx import RequestContext\n from .globals import _cv_app\n-from .globals import _cv_req\n+from .globals import _cv_request\n from .globals import g\n from .globals import request\n from .globals import request_ctx\n@@ -1743,7 +1743,7 @@ class Flask(Scaffold):\n         .. versionadded:: 2.2\n             Moved from ``flask.url_for``, which calls this method.\n         """"""\n-        req_ctx = _cv_req.get(None)\n+        req_ctx = _cv_request.get(None)\n \n         if req_ctx is not None:\n             url_adapter = req_ctx.url_adapter\n@@ -2309,7 +2309,7 @@ class Flask(Scaffold):\n         finally:\n             if ""werkzeug.debug.preserve_context"" in environ:\n                 environ[""werkzeug.debug.preserve_context""](_cv_app.get())\n-                environ[""werkzeug.debug.preserve_context""](_cv_req.get())\n+                environ[""werkzeug.debug.preserve_context""](_cv_request.get())\n \n             if error is not None and self.should_ignore_error(error):\n                 error = None\n'",3.2318840579710146,3.2318840579710146
src/flask/ctx.py,src/flask/ctx.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -8,7 +8,7 @@ from werkzeug.exceptions import HTTPException\n \n from . import typing as ft\n from .globals import _cv_app\n-from .globals import _cv_req\n+from .globals import _cv_request\n from .signals import appcontext_popped\n from .signals import appcontext_pushed\n \n@@ -131,7 +131,7 @@ def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n \n     .. versionadded:: 0.9\n     """"""\n-    ctx = _cv_req.get(None)\n+    ctx = _cv_request.get(None)\n \n     if ctx is None:\n         raise RuntimeError(\n@@ -167,7 +167,7 @@ def copy_current_request_context(f: t.Callable) -> t.Callable:\n \n     .. versionadded:: 0.10\n     """"""\n-    ctx = _cv_req.get(None)\n+    ctx = _cv_request.get(None)\n \n     if ctx is None:\n         raise RuntimeError(\n@@ -223,7 +223,7 @@ def has_app_context() -> bool:\n \n     .. versionadded:: 0.9\n     """"""\n-    return _cv_req.get(None) is not None\n+    return _cv_request.get(None) is not None\n \n \n class AppContext:\n@@ -363,7 +363,7 @@ class RequestContext:\n         else:\n             app_ctx = None\n \n-        self._cv_tokens.append((_cv_req.set(self), app_ctx))\n+        self._cv_tokens.append((_cv_request.set(self), app_ctx))\n \n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n@@ -401,9 +401,9 @@ class RequestContext:\n                 if request_close is not None:\n                     request_close()\n         finally:\n-            ctx = _cv_req.get()\n+            ctx = _cv_request.get()\n             token, app_ctx = self._cv_tokens.pop()\n-            _cv_req.reset(token)\n+            _cv_request.reset(token)\n \n             # get rid of circular dependencies at the end of the request\n             # so that we don\'t require the GC to be active.\n'",1.9259259259259258,1.9259259259259258
src/flask/globals.py,src/flask/globals.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -70,16 +70,16 @@ This typically means that you attempted to use functionality that needed\n an active HTTP request. Consult the documentation on testing for\n information about how to avoid this problem.\\\n """"""\n-_cv_req: ContextVar[""RequestContext""] = ContextVar(""flask.request_ctx"")\n-__request_ctx_stack = _FakeStack(""request"", _cv_req)\n+_cv_request: ContextVar[""RequestContext""] = ContextVar(""flask.request_ctx"")\n+__request_ctx_stack = _FakeStack(""request"", _cv_request)\n request_ctx: ""RequestContext"" = LocalProxy(  # type: ignore[assignment]\n-    _cv_req, unbound_message=_no_req_msg\n+    _cv_request, unbound_message=_no_req_msg\n )\n request: ""Request"" = LocalProxy(  # type: ignore[assignment]\n-    _cv_req, ""request"", unbound_message=_no_req_msg\n+    _cv_request, ""request"", unbound_message=_no_req_msg\n )\n session: ""SessionMixin"" = LocalProxy(  # type: ignore[assignment]\n-    _cv_req, ""session"", unbound_message=_no_req_msg\n+    _cv_request, ""session"", unbound_message=_no_req_msg\n )\n \n \n'",1.3333333333333333,1.3333333333333333
src/flask/helpers.py,src/flask/helpers.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -12,7 +12,7 @@ import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n from werkzeug.utils import redirect as _wz_redirect\n \n-from .globals import _cv_req\n+from .globals import _cv_request\n from .globals import current_app\n from .globals import request\n from .globals import request_ctx\n@@ -111,7 +111,7 @@ def stream_with_context(\n         return update_wrapper(decorator, generator_or_function)  # type: ignore\n \n     def generator() -> t.Generator:\n-        ctx = _cv_req.get(None)\n+        ctx = _cv_request.get(None)\n         if ctx is None:\n             raise RuntimeError(\n                 ""\'stream_with_context\' can only be used when a request""\n'",2.217391304347826,2.217391304347826
src/flask/templating.py,src/flask/templating.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -6,7 +6,7 @@ from jinja2 import Template\n from jinja2 import TemplateNotFound\n \n from .globals import _cv_app\n-from .globals import _cv_req\n+from .globals import _cv_request\n from .globals import current_app\n from .globals import request\n from .helpers import stream_with_context\n@@ -23,7 +23,7 @@ def _default_template_ctx_processor() -> t.Dict[str, t.Any]:\n     `session` and `g`.\n     """"""\n     appctx = _cv_app.get(None)\n-    reqctx = _cv_req.get(None)\n+    reqctx = _cv_request.get(None)\n     rv: t.Dict[str, t.Any] = {}\n     if appctx is not None:\n         rv[""g""] = appctx.g\n'",2.2,2.2
src/flask/testing.py,src/flask/testing.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -11,7 +11,7 @@ from werkzeug.urls import url_parse\n from werkzeug.wrappers import Request as BaseRequest\n \n from .cli import ScriptInfo\n-from .globals import _cv_req\n+from .globals import _cv_request\n from .json import dumps as json_dumps\n from .sessions import SessionMixin\n \n@@ -146,7 +146,7 @@ class FlaskClient(Client):\n         app = self.application\n         environ_overrides = kwargs.setdefault(""environ_overrides"", {})\n         self.cookie_jar.inject_wsgi(environ_overrides)\n-        outer_reqctx = _cv_req.get(None)\n+        outer_reqctx = _cv_request.get(None)\n         with app.test_request_context(*args, **kwargs) as c:\n             session_interface = app.session_interface\n             sess = session_interface.open_session(app, c.request)\n@@ -162,11 +162,11 @@ class FlaskClient(Client):\n             # behavior.  It\'s important to not use the push and pop\n             # methods of the actual request context object since that would\n             # mean that cleanup handlers are called\n-            token = _cv_req.set(outer_reqctx)  # type: ignore[arg-type]\n+            token = _cv_request.set(outer_reqctx)  # type: ignore[arg-type]\n             try:\n                 yield sess\n             finally:\n-                _cv_req.reset(token)\n+                _cv_request.reset(token)\n \n             resp = app.response_class()\n             if not session_interface.is_null_session(sess):\n'",3.272727272727273,3.272727272727273
tests/test_testing.py,tests/test_testing.py,91044c4d769efa7f20455e1b70457a7da95c26d8,979e0adbacfb3c5cc1ac678b4ef5373dadde83d3,'Change _cv_req -> _cv_request\n\nThis is a clearer name for the variable.',"'@@ -5,7 +5,7 @@ import werkzeug\n import flask\n from flask import appcontext_popped\n from flask.cli import ScriptInfo\n-from flask.globals import _cv_req\n+from flask.globals import _cv_request\n from flask.json import jsonify\n from flask.testing import EnvironBuilder\n from flask.testing import FlaskCliRunner\n@@ -400,4 +400,4 @@ def test_client_pop_all_preserved(app, req_ctx, client):\n     # close the response, releasing the context held by stream_with_context\n     rv.close()\n     # only req_ctx fixture should still be pushed\n-    assert _cv_req.get(None) is req_ctx\n+    assert _cv_request.get(None) is req_ctx\n'",1.0425531914893618,1.0425531914893618
CHANGES.rst,CHANGES.rst,58ecacd271c2a07018cb6f65da164d4bed1e14ea,5775d1e9b1a031c7bc3bf1463acb3289594ab3e4,'Change Roll back by Rever',"'@@ -236,7 +236,7 @@ Released 2021-05-21\n     the endpoint name. :issue:`4041`\n -   Combine URL prefixes when nesting blueprints that were created with\n     a ``url_prefix`` value. :issue:`4037`\n--   Roll back a change to the order that URL matching was done. The\n+-   Revert a change to the order that URL matching was done. The\n     URL is again matched after the session is loaded, so the session is\n     available in custom URL converters. :issue:`4053`\n -   Re-add deprecated ``Config.from_json``, which was accidentally\n'",0,0
CHANGES.rst,CHANGES.rst,03b410066b96f63ba2a215750f881d5bebb78a29,4696156278c5d3f05fb09d1a605b6866b49ffbcb,'Fix docs/CHANGES.rst typo',"'@@ -914,7 +914,7 @@ Released 2013-06-13, codename Limoncello\n -   Set the content-length header for x-sendfile.\n -   ``tojson`` filter now does not escape script blocks in HTML5\n     parsers.\n--   ``tojson`` used in templates is now safe by default due. This was\n+-   ``tojson`` used in templates is now safe by default. This was\n     allowed due to the different escaping behavior.\n -   Flask will now raise an error if you attempt to register a new\n     function on an already used endpoint.\n'",0,0
CHANGES.rst,CHANGES.rst,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"'@@ -32,7 +32,22 @@ Unreleased\n         ``Flask.aborter_class`` and ``Flask.make_aborter`` can be used\n         to customize this aborter. :issue:`4567`\n     -   ``flask.redirect`` will call ``app.redirect``. :issue:`4569`\n-\n+    -   ``flask.json`` is an instance of ``JSONProvider``. A different\n+        provider can be set to use a different JSON library.\n+        ``flask.jsonify`` will call ``app.json.response``, other\n+        functions in ``flask.json`` will call corresponding functions in\n+        ``app.json``. :pr:`4688`\n+\n+-   JSON configuration is moved to attributes on the default\n+    ``app.json`` provider. ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``,\n+    ``JSONIFY_MIMETYPE``, and ``JSONIFY_PRETTYPRINT_REGULAR`` are\n+    deprecated. :pr:`4688`\n+-   Setting custom ``json_encoder`` and ``json_decoder`` classes on the\n+    app or a blueprint, and the corresponding ``json.JSONEncoder`` and\n+    ``JSONDecoder`` classes, are deprecated. JSON behavior can now be\n+    overridden using the ``app.json`` provider interface. :pr:`4688`\n+-   ``json.htmlsafe_dumps`` and ``json.htmlsafe_dump`` are deprecated,\n+    the function is built-in to Jinja now. :pr:`4688`\n -   Refactor ``register_error_handler`` to consolidate error checking.\n     Rewrite some error messages to be more consistent. :issue:`4559`\n -   Use Blueprint decorators and functions intended for setup after\n'",0,0
docs/api.rst,docs/api.rst,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"""@@ -236,21 +236,15 @@ JSON Support\n \n .. module:: flask.json\n \n-Flask uses the built-in :mod:`json` module for handling JSON. It will\n-use the current blueprint's or application's JSON encoder and decoder\n-for easier customization. By default it handles some extra data types:\n-\n--   :class:`datetime.datetime` and :class:`datetime.date` are serialized\n-    to :rfc:`822` strings. This is the same as the HTTP date format.\n--   :class:`uuid.UUID` is serialized to a string.\n--   :class:`dataclasses.dataclass` is passed to\n-    :func:`dataclasses.asdict`.\n--   :class:`~markupsafe.Markup` (or any object with a ``__html__``\n-    method) will call the ``__html__`` method to get a string.\n-\n-Jinja's ``|tojson`` filter is configured to use Flask's :func:`dumps`\n-function. The filter marks the output with ``|safe`` automatically. Use\n-the filter to render data inside ``<script>`` tags.\n+Flask uses Python's built-in :mod:`json` module for handling JSON by\n+default. The JSON implementation can be changed by assigning a different\n+provider to :attr:`flask.Flask.json_provider_class` or\n+:attr:`flask.Flask.json`. The functions provided by ``flask.json`` will\n+use methods on ``app.json`` if an app context is active.\n+\n+Jinja's ``|tojson`` filter is configured to use the app's JSON provider.\n+The filter marks the output with ``|safe``. Use it to render data inside\n+HTML ``<script>`` tags.\n \n .. sourcecode:: html+jinja\n \n@@ -269,6 +263,14 @@ the filter to render data inside ``<script>`` tags.\n \n .. autofunction:: load\n \n+.. autoclass:: flask.json.provider.JSONProvider\n+    :members:\n+    :member-order: bysource\n+\n+.. autoclass:: flask.json.provider.DefaultJSONProvider\n+    :members:\n+    :member-order: bysource\n+\n .. autoclass:: JSONEncoder\n    :members:\n \n""",1.2,1.5
docs/config.rst,docs/config.rst,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"""@@ -301,6 +301,10 @@ The following configuration values are used internally by Flask:\n \n     Default: ``True``\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Set ``app.json.ensure_ascii``\n+        instead.\n+\n .. py:data:: JSON_SORT_KEYS\n \n     Sort the keys of JSON objects alphabetically. This is useful for caching\n@@ -310,19 +314,30 @@ The following configuration values are used internally by Flask:\n \n     Default: ``True``\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Set ``app.json.sort_keys``\n+        instead.\n+\n .. py:data:: JSONIFY_PRETTYPRINT_REGULAR\n \n-    ``jsonify`` responses will be output with newlines, spaces, and indentation\n-    for easier reading by humans. Always enabled in debug mode.\n+    :func:`~flask.jsonify` responses will be output with newlines,\n+    spaces, and indentation for easier reading by humans. Always enabled\n+    in debug mode.\n \n     Default: ``False``\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Set ``app.json.compact`` instead.\n+\n .. py:data:: JSONIFY_MIMETYPE\n \n     The mimetype of ``jsonify`` responses.\n \n     Default: ``'application/json'``\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Set ``app.json.mimetype`` instead.\n+\n .. py:data:: TEMPLATES_AUTO_RELOAD\n \n     Reload templates when they are changed. If not set, it will be enabled in\n@@ -387,6 +402,12 @@ The following configuration values are used internally by Flask:\n .. versionchanged:: 2.2\n     Removed ``PRESERVE_CONTEXT_ON_EXCEPTION``.\n \n+.. versionchanged:: 2.2\n+    ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``,\n+    ``JSONIFY_MIMETYPE``, and ``JSONIFY_PRETTYPRINT_REGULAR`` will be\n+    removed in Flask 2.3. The default ``app.json`` provider has\n+    equivalent attributes instead.\n+\n \n Configuring from Python Files\n -----------------------------\n""",1.0,1.0
src/flask/app.py,src/flask/app.py,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"'@@ -31,7 +31,6 @@ from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n \n from . import cli\n-from . import json\n from . import typing as ft\n from .config import Config\n from .config import ConfigAttribute\n@@ -50,7 +49,8 @@ from .helpers import get_env\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n from .helpers import locked_cached_property\n-from .json import jsonify\n+from .json.provider import DefaultJSONProvider\n+from .json.provider import JSONProvider\n from .logging import create_logger\n from .scaffold import _endpoint_from_view_func\n from .scaffold import _sentinel\n@@ -315,15 +315,37 @@ class Flask(Scaffold):\n     #: ``USE_X_SENDFILE`` configuration key.  Defaults to ``False``.\n     use_x_sendfile = ConfigAttribute(""USE_X_SENDFILE"")\n \n-    #: The JSON encoder class to use.  Defaults to :class:`~flask.json.JSONEncoder`.\n+    #: The JSON encoder class to use. Defaults to\n+    #: :class:`~flask.json.JSONEncoder`.\n+    #:\n+    #: .. deprecated:: 2.2\n+    #:      Will be removed in Flask 2.3. Customize\n+    #:      :attr:`json_provider_class` instead.\n     #:\n     #: .. versionadded:: 0.10\n-    json_encoder = json.JSONEncoder\n+    json_encoder: None = None\n \n-    #: The JSON decoder class to use.  Defaults to :class:`~flask.json.JSONDecoder`.\n+    #: The JSON decoder class to use. Defaults to\n+    #: :class:`~flask.json.JSONDecoder`.\n+    #:\n+    #: .. deprecated:: 2.2\n+    #:      Will be removed in Flask 2.3. Customize\n+    #:      :attr:`json_provider_class` instead.\n     #:\n     #: .. versionadded:: 0.10\n-    json_decoder = json.JSONDecoder\n+    json_decoder: None = None\n+\n+    json_provider_class: t.Type[JSONProvider] = DefaultJSONProvider\n+    """"""A subclass of :class:`~flask.json.provider.JSONProvider`. An\n+    instance is created and assigned to :attr:`app.json` when creating\n+    the app.\n+\n+    The default, :class:`~flask.json.provider.DefaultJSONProvider`, uses\n+    Python\'s built-in :mod:`json` library. A different provider can use\n+    a different JSON library.\n+\n+    .. versionadded:: 2.2\n+    """"""\n \n     #: Options that are passed to the Jinja environment in\n     #: :meth:`create_jinja_environment`. Changing these options after\n@@ -361,10 +383,10 @@ class Flask(Scaffold):\n             ""TRAP_HTTP_EXCEPTIONS"": False,\n             ""EXPLAIN_TEMPLATE_LOADING"": False,\n             ""PREFERRED_URL_SCHEME"": ""http"",\n-            ""JSON_AS_ASCII"": True,\n-            ""JSON_SORT_KEYS"": True,\n-            ""JSONIFY_PRETTYPRINT_REGULAR"": False,\n-            ""JSONIFY_MIMETYPE"": ""application/json"",\n+            ""JSON_AS_ASCII"": None,\n+            ""JSON_SORT_KEYS"": None,\n+            ""JSONIFY_PRETTYPRINT_REGULAR"": None,\n+            ""JSONIFY_MIMETYPE"": None,\n             ""TEMPLATES_AUTO_RELOAD"": None,\n             ""MAX_COOKIE_SIZE"": 4093,\n         }\n@@ -449,6 +471,22 @@ class Flask(Scaffold):\n         #:     Moved from ``flask.abort``, which calls this object.\n         self.aborter = self.make_aborter()\n \n+        self.json: JSONProvider = self.json_provider_class(self)\n+        """"""Provides access to JSON methods. Functions in ``flask.json``\n+        will call methods on this provider when the application context\n+        is active. Used for handling JSON requests and responses.\n+\n+        An instance of :attr:`json_provider_class`. Can be customized by\n+        changing that attribute on a subclass, or by assigning to this\n+        attribute afterwards.\n+\n+        The default, :class:`~flask.json.provider.DefaultJSONProvider`,\n+        uses Python\'s built-in :mod:`json` library. A different provider\n+        can use a different JSON library.\n+\n+        .. versionadded:: 2.2\n+        """"""\n+\n         #: A list of functions that are called by\n         #: :meth:`handle_url_build_error` when :meth:`.url_for` raises a\n         #: :exc:`~werkzeug.routing.BuildError`. Each function is called\n@@ -745,7 +783,7 @@ class Flask(Scaffold):\n             session=session,\n             g=g,\n         )\n-        rv.policies[""json.dumps_function""] = json.dumps\n+        rv.policies[""json.dumps_function""] = self.json.dumps\n         return rv\n \n     def create_global_jinja_loader(self) -> DispatchingJinjaLoader:\n@@ -1926,7 +1964,7 @@ class Flask(Scaffold):\n                 )\n                 status = headers = None\n             elif isinstance(rv, (dict, list)):\n-                rv = jsonify(rv)\n+                rv = self.json.response(rv)\n             elif isinstance(rv, BaseResponse) or callable(rv):\n                 # evaluate a WSGI callable, or coerce a different response\n                 # class to the correct type\n'",3.2318840579710146,3.2318840579710146
src/flask/blueprints.py,src/flask/blueprints.py,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"""@@ -174,10 +174,16 @@ class Blueprint(Scaffold):\n \n     #: Blueprint local JSON encoder class to use. Set to ``None`` to use\n     #: the app's :class:`~flask.Flask.json_encoder`.\n-    json_encoder = None\n+    #:\n+    #: .. deprecated:: 2.2\n+    #:      Will be removed in Flask 2.3.\n+    json_encoder: None = None\n     #: Blueprint local JSON decoder class to use. Set to ``None`` to use\n     #: the app's :class:`~flask.Flask.json_decoder`.\n-    json_decoder = None\n+    #:\n+    #: .. deprecated:: 2.2\n+    #:      Will be removed in Flask 2.3.\n+    json_decoder: None = None\n \n     def __init__(\n         self,\n""",2.303030303030303,2.303030303030303
src/flask/ctx.py,src/flask/ctx.py,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"'@@ -307,6 +307,7 @@ class RequestContext:\n         self.app = app\n         if request is None:\n             request = app.request_class(environ)\n+            request.json_module = app.json  # type: ignore[misc]\n         self.request: Request = request\n         self.url_adapter = None\n         try:\n'",1.9259259259259258,1.9259259259259258
src/flask/json/__init__.py,src/flask/json/__init__.py,69f9845ef2da3051d74d4dade3e88ccf5b2ee3de,c356c6da5f25ba70bd53448ff1d1bf6ad6967fd5,'add json provider interface',"'@@ -1,15 +1,12 @@\n-import dataclasses\n-import decimal\n+from __future__ import annotations\n+\n import json as _json\n import typing as t\n-import uuid\n-from datetime import date\n \n from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n-from werkzeug.http import http_date\n \n from ..globals import current_app\n-from ..globals import request\n+from .provider import _default\n \n if t.TYPE_CHECKING:  # pragma: no cover\n     from ..app import Flask\n@@ -31,23 +28,30 @@ class JSONEncoder(_json.JSONEncoder):\n \n     Assign a subclass of this to :attr:`flask.Flask.json_encoder` or\n     :attr:`flask.Blueprint.json_encoder` to override the default.\n+\n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Use ``app.json`` instead.\n     """"""\n \n+    def __init__(self, **kwargs) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'JSONEncoder\' is deprecated and will be removed in""\n+            "" Flask 2.3. Use \'Flask.json\' to provide an alternate""\n+            "" JSON implementation instead."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+        super().__init__(**kwargs)\n+\n     def default(self, o: t.Any) -> t.Any:\n         """"""Convert ``o`` to a JSON serializable type. See\n         :meth:`json.JSONEncoder.default`. Python does not support\n         overriding how basic types like ``str`` or ``list`` are\n         serialized, they are handled before this method.\n         """"""\n-        if isinstance(o, date):\n-            return http_date(o)\n-        if isinstance(o, (decimal.Decimal, uuid.UUID)):\n-            return str(o)\n-        if dataclasses and dataclasses.is_dataclass(o):\n-            return dataclasses.asdict(o)\n-        if hasattr(o, ""__html__""):\n-            return str(o.__html__())\n-        return super().default(o)\n+        return _default(o)\n \n \n class JSONDecoder(_json.JSONDecoder):\n@@ -58,144 +62,193 @@ class JSONDecoder(_json.JSONDecoder):\n \n     Assign a subclass of this to :attr:`flask.Flask.json_decoder` or\n     :attr:`flask.Blueprint.json_decoder` to override the default.\n-    """"""\n-\n-\n-def _dump_arg_defaults(\n-    kwargs: t.Dict[str, t.Any], app: t.Optional[""Flask""] = None\n-) -> None:\n-    """"""Inject default arguments for dump functions.""""""\n-    if app is None:\n-        app = current_app\n \n-    if app:\n-        cls = app.json_encoder\n-        bp = app.blueprints.get(request.blueprint) if request else None  # type: ignore\n-        if bp is not None and bp.json_encoder is not None:\n-            cls = bp.json_encoder\n-\n-        # Only set a custom encoder if it has custom behavior. This is\n-        # faster on PyPy.\n-        if cls is not _json.JSONEncoder:\n-            kwargs.setdefault(""cls"", cls)\n-\n-        kwargs.setdefault(""cls"", cls)\n-        kwargs.setdefault(""ensure_ascii"", app.config[""JSON_AS_ASCII""])\n-        kwargs.setdefault(""sort_keys"", app.config[""JSON_SORT_KEYS""])\n-    else:\n-        kwargs.setdefault(""sort_keys"", True)\n-        kwargs.setdefault(""cls"", JSONEncoder)\n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Use ``app.json`` instead.\n+    """"""\n \n+    def __init__(self, **kwargs) -> None:\n+        import warnings\n \n-def _load_arg_defaults(\n-    kwargs: t.Dict[str, t.Any], app: t.Optional[""Flask""] = None\n-) -> None:\n-    """"""Inject default arguments for load functions.""""""\n-    if app is None:\n-        app = current_app\n+        warnings.warn(\n+            ""\'JSONDecoder\' is deprecated and will be removed in""\n+            "" Flask 2.3. Use \'Flask.json\' to provide an alternate""\n+            "" JSON implementation instead."",\n+            DeprecationWarning,\n+            stacklevel=3,\n+        )\n+        super().__init__(**kwargs)\n \n-    if app:\n-        cls = app.json_decoder\n-        bp = app.blueprints.get(request.blueprint) if request else None  # type: ignore\n-        if bp is not None and bp.json_decoder is not None:\n-            cls = bp.json_decoder\n \n-        # Only set a custom decoder if it has custom behavior. This is\n-        # faster on PyPy.\n-        if cls not in {JSONDecoder, _json.JSONDecoder}:\n-            kwargs.setdefault(""cls"", cls)\n+def dumps(obj: t.Any, *, app: Flask | None = None, **kwargs: t.Any) -> str:\n+    """"""Serialize data as JSON.\n \n+    If :data:`~flask.current_app` is available, it will use its\n+    :meth:`app.json.dumps() <flask.json.provider.JSONProvider.dumps>`\n+    method, otherwise it will use :func:`json.dumps`.\n \n-def dumps(obj: t.Any, app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> str:\n-    """"""Serialize an object to a string of JSON.\n+    :param obj: The data to serialize.\n+    :param kwargs: Arguments passed to the ``dumps`` implementation.\n \n-    Takes the same arguments as the built-in :func:`json.dumps`, with\n-    some defaults from application configuration.\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.json.dumps``, allowing an app to override\n+        the behavior.\n \n-    :param obj: Object to serialize to JSON.\n-    :param app: Use this app\'s config instead of the active app context\n-        or defaults.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    .. versionchanged:: 2.2\n+        The ``app`` parameter will be removed in Flask 2.3.\n \n     .. versionchanged:: 2.0.2\n         :class:`decimal.Decimal` is supported by converting to a string.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in Flask 2.1.\n+        ``encoding`` will be removed in Flask 2.1.\n \n     .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n-    _dump_arg_defaults(kwargs, app=app)\n+    if app is not None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""The \'app\' parameter is deprecated and will be removed in""\n+            "" Flask 2.3. Call \'app.json.dumps\' directly instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+    else:\n+        app = current_app\n+\n+    if app:\n+        return app.json.dumps(obj, **kwargs)\n+\n+    kwargs.setdefault(""default"", _default)\n     return _json.dumps(obj, **kwargs)\n \n \n def dump(\n-    obj: t.Any, fp: t.IO[str], app: t.Optional[""Flask""] = None, **kwargs: t.Any\n+    obj: t.Any, fp: t.IO[str], *, app: Flask | None = None, **kwargs: t.Any\n ) -> None:\n-    """"""Serialize an object to JSON written to a file object.\n+    """"""Serialize data as JSON and write to a file.\n+\n+    If :data:`~flask.current_app` is available, it will use its\n+    :meth:`app.json.dump() <flask.json.provider.JSONProvider.dump>`\n+    method, otherwise it will use :func:`json.dump`.\n \n-    Takes the same arguments as the built-in :func:`json.dump`, with\n-    some defaults from application configuration.\n+    :param obj: The data to serialize.\n+    :param fp: A file opened for writing text. Should use the UTF-8\n+        encoding to be valid JSON.\n+    :param kwargs: Arguments passed to the ``dump`` implementation.\n \n-    :param obj: Object to serialize to JSON.\n-    :param fp: File object to write JSON to.\n-    :param app: Use this app\'s config instead of the active app context\n-        or defaults.\n-    :param kwargs: Extra arguments passed to :func:`json.dump`.\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.json.dump``, allowing an app to override\n+        the behavior.\n+\n+    .. versionchanged:: 2.2\n+        The ``app`` parameter will be removed in Flask 2.3.\n \n     .. versionchanged:: 2.0\n-        Writing to a binary file, and the ``encoding`` argument, is\n-        deprecated and will be removed in Flask 2.1.\n+        Writing to a binary file, and the ``encoding`` argument, will be\n+        removed in Flask 2.1.\n     """"""\n-    _dump_arg_defaults(kwargs, app=app)\n-    _json.dump(obj, fp, **kwargs)\n+    if app is not None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""The \'app\' parameter is deprecated and will be removed in""\n+            "" Flask 2.3. Call \'app.json.dump\' directly instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+    else:\n+        app = current_app\n+\n+    if app:\n+        app.json.dump(obj, fp, **kwargs)\n+    else:\n+        kwargs.setdefault(""default"", _default)\n+        _json.dump(obj, fp, **kwargs)\n+\n \n+def loads(s: str | bytes, *, app: Flask | None = None, **kwargs: t.Any) -> t.Any:\n+    """"""Deserialize data as JSON.\n \n-def loads(\n-    s: t.Union[str, bytes],\n-    app: t.Optional[""Flask""] = None,\n-    **kwargs: t.Any,\n-) -> t.Any:\n-    """"""Deserialize an object from a string of JSON.\n+    If :data:`~flask.current_app` is available, it will use its\n+    :meth:`app.json.loads() <flask.json.provider.JSONProvider.loads>`\n+    method, otherwise it will use :func:`json.loads`.\n \n-    Takes the same arguments as the built-in :func:`json.loads`, with\n-    some defaults from application configuration.\n+    :param s: Text or UTF-8 bytes.\n+    :param kwargs: Arguments passed to the ``loads`` implementation.\n \n-    :param s: JSON string to deserialize.\n-    :param app: Use this app\'s config instead of the active app context\n-        or defaults.\n-    :param kwargs: Extra arguments passed to :func:`json.loads`.\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.json.loads``, allowing an app to override\n+        the behavior.\n+\n+    .. versionchanged:: 2.2\n+        The ``app`` parameter will be removed in Flask 2.3.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in Flask 2.1. The\n-        data must be a string or UTF-8 bytes.\n+        ``encoding`` will be removed in Flask 2.1. The data must be a\n+        string or UTF-8 bytes.\n \n     .. versionchanged:: 1.0.3\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n-    _load_arg_defaults(kwargs, app=app)\n+    if app is not None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""The \'app\' parameter is deprecated and will be removed in""\n+            "" Flask 2.3. Call \'app.json.loads\' directly instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+    else:\n+        app = current_app\n+\n+    if app:\n+        return app.json.loads(s, **kwargs)\n+\n     return _json.loads(s, **kwargs)\n \n \n-def load(fp: t.IO[str], app: t.Optional[""Flask""] = None, **kwargs: t.Any) -> t.Any:\n-    """"""Deserialize an object from JSON read from a file object.\n+def load(fp: t.IO[t.AnyStr], *, app: Flask | None = None, **kwargs: t.Any) -> t.Any:\n+    """"""Deserialize data as JSON read from a file.\n+\n+    If :data:`~flask.current_app` is available, it will use its\n+    :meth:`app.json.load() <flask.json.provider.JSONProvider.load>`\n+    method, otherwise it will use :func:`json.load`.\n \n-    Takes the same arguments as the built-in :func:`json.load`, with\n-    some defaults from application configuration.\n+    :param fp: A file opened for reading text or UTF-8 bytes.\n+    :param kwargs: Arguments passed to the ``load`` implementation.\n \n-    :param fp: File object to read JSON from.\n-    :param app: Use this app\'s config instead of the active app context\n-        or defaults.\n-    :param kwargs: Extra arguments passed to :func:`json.load`.\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.json.load``, allowing an app to override\n+        the behavior.\n+\n+    .. versionchanged:: 2.2\n+        The ``app`` parameter will be removed in Flask 2.3.\n \n     .. versionchanged:: 2.0\n-        ``encoding`` is deprecated and will be removed in Flask 2.1. The\n-        file must be text mode, or binary mode with UTF-8 bytes.\n+        ``encoding`` will be removed in Flask 2.1. The file must be text\n+        mode, or binary mode with UTF-8 bytes.\n     """"""\n-    _load_arg_defaults(kwargs, app=app)\n+    if app is not None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""The \'app\' parameter is deprecated and will be removed in""\n+            "" Flask 2.3. Call \'app.json.load\' directly instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+    else:\n+        app = current_app\n+\n+    if app:\n+        return app.json.load(fp, **kwargs)\n+\n     return _json.load(fp, **kwargs)\n \n \n@@ -211,6 +264,9 @@ def htmlsafe_dumps(obj: t.Any, **kwargs: t.Any) -> str:\n     double quoted; either use single quotes or the ``|forceescape``\n     filter.\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. This is built-in to Jinja now.\n+\n     .. versionchanged:: 2.0\n         Uses :func:`jinja2.utils.htmlsafe_json_dumps`. The returned\n         value is marked safe by wrapping in :class:`~markupsafe.Markup`.\n@@ -220,6 +276,14 @@ def htmlsafe_dumps(obj: t.Any, **kwargs: t.Any) -> str:\n         ``<script>`` tags, and single-quoted attributes without further\n         escaping.\n     """"""\n+    import warnings\n+\n+    warnings.warn(\n+        ""\'htmlsafe_dumps\' is deprecated and will be removed in Flask""\n+        "" 2.3. Use \'jinja2.utils.htmlsafe_json_dumps\' instead."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n     return _jinja_htmlsafe_dumps(obj, dumps=dumps, **kwargs)\n \n \n@@ -227,77 +291,51 @@ def htmlsafe_dump(obj: t.Any, fp: t.IO[str], **kwargs: t.Any) -> None:\n     """"""Serialize an object to JSON written to a file object, replacing\n     HTML-unsafe characters with Unicode escapes. See\n     :func:`htmlsafe_dumps` and :func:`dumps`.\n-    """"""\n-    fp.write(htmlsafe_dumps(obj, **kwargs))\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3.\n+    """"""\n+    import warnings\n \n-def jsonify(*args: t.Any, **kwargs: t.Any) -> ""Response"":\n-    """"""Serialize data to JSON and wrap it in a :class:`~flask.Response`\n-    with the :mimetype:`application/json` mimetype.\n-\n-    Uses :func:`dumps` to serialize the data, but ``args`` and\n-    ``kwargs`` are treated as data rather than arguments to\n-    :func:`json.dumps`.\n-\n-    1.  Single argument: Treated as a single value.\n-    2.  Multiple arguments: Treated as a list of values.\n-        ``jsonify(1, 2, 3)`` is the same as ``jsonify([1, 2, 3])``.\n-    3.  Keyword arguments: Treated as a dict of values.\n-        ``jsonify(data=data, errors=errors)`` is the same as\n-        ``jsonify({""data"": data, ""errors"": errors})``.\n-    4.  Passing both arguments and keyword arguments is not allowed as\n-        it\'s not clear what should happen.\n+    warnings.warn(\n+        ""\'htmlsafe_dump\' is deprecated and will be removed in Flask""\n+        "" 2.3. Use \'jinja2.utils.htmlsafe_json_dumps\' instead."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n+    fp.write(htmlsafe_dumps(obj, **kwargs))\n \n-    .. code-block:: python\n \n-        from flask import jsonify\n+def jsonify(*args: t.Any, **kwargs: t.Any) -> Response:\n+    """"""Serialize the given arguments as JSON, and return a\n+    :class:`~flask.Response` object with the ``application/json``\n+    mimetype. A dict or list returned from a view will be converted to a\n+    JSON response automatically without needing to call this.\n \n-        @app.route(""/users/me"")\n-        def get_current_user():\n-            return jsonify(\n-                username=g.user.username,\n-                email=g.user.email,\n-                id=g.user.id,\n-            )\n+    This requires an active request or application context, and calls\n+    :meth:`app.json.response() <flask.json.provider.JSONProvider.response>`.\n \n-    Will return a JSON response like this:\n+    In debug mode, the output is formatted with indentation to make it\n+    easier to read. This may also be controlled by the provider.\n \n-    .. code-block:: javascript\n+    Either positional or keyword arguments can be given, not both.\n+    If no arguments are given, ``None`` is serialized.\n \n-        {\n-          ""username"": ""admin"",\n-          ""email"": ""admin@localhost"",\n-          ""id"": 42\n-        }\n+    :param args: A single value to serialize, or multiple values to\n+        treat as a list to serialize.\n+    :param kwargs: Treat as a dict to serialize.\n \n-    The default output omits indents and spaces after separators. In\n-    debug mode or if :data:`JSONIFY_PRETTYPRINT_REGULAR` is ``True``,\n-    the output will be formatted to be easier to read.\n+    .. versionchanged:: 2.2\n+        Calls ``current_app.json.response``, allowing an app to override\n+        the behavior.\n \n     .. versionchanged:: 2.0.2\n         :class:`decimal.Decimal` is supported by converting to a string.\n \n     .. versionchanged:: 0.11\n-        Added support for serializing top-level arrays. This introduces\n-        a security risk in ancient browsers. See :ref:`security-json`.\n+        Added support for serializing top-level arrays. This was a\n+        security risk in ancient browsers. See :ref:`security-json`.\n \n     .. versionadded:: 0.2\n     """"""\n-    indent = None\n-    separators = ("","", "":"")\n-\n-    if current_app.config[""JSONIFY_PRETTYPRINT_REGULAR""] or current_app.debug:\n-        indent = 2\n-        separators = ("", "", "": "")\n-\n-    if args and kwargs:\n-        raise TypeError(""jsonify() behavior undefined when passed both args and kwargs"")\n-    elif len(args) == 1:  # single args are passed directly to dumps()\n-        data = args[0]\n-    else:\n-        data = args or kwargs\n-\n-    return current_app.response_class(\n-        f""{dumps(data, indent=indent, separators=separators)}\\n"",\n-        mimetype=current_app.config[""JSONIFY_MIMETYPE""],\n-    )\n+    return current_app.json.response(*args, **kwargs)\n'",3.3,1.8
.pre-commit-config.yaml,.pre-commit-config.yaml,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.34.0\n+    rev: v2.37.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.3.0\n+    rev: v3.8.1\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n'",0,0
requirements/dev.txt,requirements/dev.txt,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -8,6 +8,8 @@\n -r docs.txt\n -r tests.txt\n -r typing.txt\n+build==0.8.0\n+    # via pip-tools\n cfgv==3.3.1\n     # via pre-commit\n click==8.1.3\n@@ -24,17 +26,17 @@ greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n identify==2.5.1\n     # via pre-commit\n-nodeenv==1.6.0\n+nodeenv==1.7.0\n     # via pre-commit\n pep517==0.12.0\n-    # via pip-tools\n+    # via build\n pip-compile-multi==2.4.5\n     # via -r requirements/dev.in\n-pip-tools==6.6.2\n+pip-tools==6.8.0\n     # via pip-compile-multi\n platformdirs==2.5.2\n     # via virtualenv\n-pre-commit==2.19.0\n+pre-commit==2.20.0\n     # via -r requirements/dev.in\n pyyaml==6.0\n     # via pre-commit\n@@ -48,9 +50,9 @@ toml==0.10.2\n     #   tox\n toposort==1.7\n     # via pip-compile-multi\n-tox==3.25.0\n+tox==3.25.1\n     # via -r requirements/dev.in\n-virtualenv==20.14.1\n+virtualenv==20.15.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.in,requirements/docs.in,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -1,5 +1,7 @@\n Pallets-Sphinx-Themes\n-Sphinx\n+# sphinx 5 introduced error in references from werkzeug in docstrings\n+Sphinx < 5\n sphinx-issues\n sphinxcontrib-log-cabinet\n-sphinx-tabs\n+# sphinx-tabs 3.4 requires docutils 0.18, sphinx < 5 requires < 0.18\n+sphinx-tabs < 3.4\n'",0,0
requirements/docs.txt,requirements/docs.txt,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -1,4 +1,4 @@\n-# SHA1:34fd4ca6516e97c7348e6facdd9c4ebb68209d1c\n+# SHA1:323f1c1134d78952ea63131c187303def63b56bd\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -7,11 +7,11 @@\n #\n alabaster==0.7.12\n     # via sphinx\n-babel==2.10.1\n+babel==2.10.3\n     # via sphinx\n-certifi==2022.5.18.1\n+certifi==2022.6.15\n     # via requests\n-charset-normalizer==2.0.12\n+charset-normalizer==2.1.0\n     # via requests\n docutils==0.17.1\n     # via\n@@ -19,7 +19,7 @@ docutils==0.17.1\n     #   sphinx-tabs\n idna==3.3\n     # via requests\n-imagesize==1.3.0\n+imagesize==1.4.1\n     # via sphinx\n jinja2==3.1.2\n     # via sphinx\n@@ -39,7 +39,7 @@ pyparsing==3.0.9\n     # via packaging\n pytz==2022.1\n     # via babel\n-requests==2.27.1\n+requests==2.28.1\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n@@ -68,5 +68,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.9\n+urllib3==1.26.10\n     # via requests\n'",0,0
requirements/tests-pallets-dev.txt,requirements/tests-pallets-dev.txt,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -15,5 +15,6 @@ markupsafe @ https://github.com/pallets/markupsafe/archive/refs/heads/main.tar.g\n     # via\n     #   -r requirements/tests-pallets-dev.in\n     #   jinja2\n+    #   werkzeug\n werkzeug @ https://github.com/pallets/werkzeug/archive/refs/heads/main.tar.gz\n     # via -r requirements/tests-pallets-dev.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,94233fc8c07fdd11cf6b3309de8bb12368aa802a,'update requirements',"'@@ -5,11 +5,11 @@\n #\n #    pip-compile-multi\n #\n-cffi==1.15.0\n+cffi==1.15.1\n     # via cryptography\n-cryptography==37.0.2\n+cryptography==37.0.4\n     # via -r requirements/typing.in\n-mypy==0.960\n+mypy==0.961\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -17,11 +17,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.6\n+types-contextvars==2.4.7\n     # via -r requirements/typing.in\n-types-dataclasses==0.6.5\n+types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==57.4.17\n+types-setuptools==62.6.1\n     # via -r requirements/typing.in\n-typing-extensions==4.2.0\n+typing-extensions==4.3.0\n     # via mypy\n'",0,0
CHANGES.rst,CHANGES.rst,58f3536a8f5dfc18e559c518ae38cba52bec90a9,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,'error for render_template outside app context',"'@@ -10,6 +10,9 @@ Unreleased\n -   Relax type annotation for ``after_request`` functions. :issue:`4600`\n -   ``instance_path`` for namespace packages uses the path closest to\n     the imported submodule. :issue:`4600`\n+-   Clearer error message when ``render_template`` and\n+    ``render_template_string`` are used outside an application context.\n+    :pr:`4693`\n \n \n Version 2.1.2\n'",0,0
src/flask/templating.py,src/flask/templating.py,58f3536a8f5dfc18e559c518ae38cba52bec90a9,7096b2c4b13660998ad9a7bc845c3e6c5779afaa,'error for render_template outside app context',"'@@ -144,6 +144,12 @@ def render_template(\n                     context of the template.\n     """"""\n     ctx = _app_ctx_stack.top\n+\n+    if ctx is None:\n+        raise RuntimeError(\n+            ""This function can only be used when an application context is active.""\n+        )\n+\n     ctx.app.update_template_context(context)\n     return _render(\n         ctx.app.jinja_env.get_or_select_template(template_name_or_list),\n@@ -162,5 +168,11 @@ def render_template_string(source: str, **context: t.Any) -> str:\n                     context of the template.\n     """"""\n     ctx = _app_ctx_stack.top\n+\n+    if ctx is None:\n+        raise RuntimeError(\n+            ""This function can only be used when an application context is active.""\n+        )\n+\n     ctx.app.update_template_context(context)\n     return _render(ctx.app.jinja_env.from_string(source), context, ctx.app)\n'",2.5454545454545454,2.727272727272727
CHANGES.rst,CHANGES.rst,134aebe60115716b962a95a0dd31bf72c5417941,a7859c6947ffc3e74007c23646cf74518230f0fb,'release version 2.1.3',"'@@ -3,7 +3,7 @@\n Version 2.1.3\n -------------\n \n-Unreleased\n+Released 2022-07-13\n \n -   Inline some optional imports that are only used for certain CLI\n     commands. :pr:`4606`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,134aebe60115716b962a95a0dd31bf72c5417941,a7859c6947ffc3e74007c23646cf74518230f0fb,'release version 2.1.3',"'@@ -42,4 +42,4 @@ from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n \n-__version__ = ""2.1.3.dev0""\n+__version__ = ""2.1.3""\n'",0,0
CHANGES.rst,CHANGES.rst,4f01c68a4bcabf7dde010b7c602f2811aa89a852,187d7179f605d28c3d24e9f4d65d3295fb099afe,'fix issue link',"'@@ -9,7 +9,7 @@ Released 2022-07-13\n     commands. :pr:`4606`\n -   Relax type annotation for ``after_request`` functions. :issue:`4600`\n -   ``instance_path`` for namespace packages uses the path closest to\n-    the imported submodule. :issue:`4600`\n+    the imported submodule. :issue:`4610`\n -   Clearer error message when ``render_template`` and\n     ``render_template_string`` are used outside an application context.\n     :pr:`4693`\n'",0,0
CHANGES.rst,CHANGES.rst,4bf7415a9692b0c1a69cd50a17c1cbda4a75931b,76a6b4f2b56bebf1262377ba5b39b7951155b54d,'allow TypedDict as a response value',"'@@ -91,6 +91,8 @@ Unreleased\n \n -   Allow returning a list from a view function, to convert it to a\n     JSON response like a dict is. :issue:`4672`\n+-   When type checking, allow ``TypedDict`` to be returned from view\n+    functions. :pr:`4695`\n \n \n Version 2.1.3\n'",0,0
src/flask/typing.py,src/flask/typing.py,4bf7415a9692b0c1a69cd50a17c1cbda4a75931b,76a6b4f2b56bebf1262377ba5b39b7951155b54d,'allow TypedDict as a response value',"'@@ -11,7 +11,8 @@ ResponseValue = t.Union[\n     str,\n     bytes,\n     t.List[t.Any],\n-    t.Dict[str, t.Any],\n+    # Only dict is actually accepted, but Mapping allows for TypedDict.\n+    t.Mapping[str, t.Any],\n     t.Iterator[str],\n     t.Iterator[bytes],\n ]\n'",0,0
tests/typing/typing_route.py,tests/typing/typing_route.py,4bf7415a9692b0c1a69cd50a17c1cbda4a75931b,76a6b4f2b56bebf1262377ba5b39b7951155b54d,'allow TypedDict as a response value',"'@@ -3,6 +3,8 @@ from __future__ import annotations\n import typing as t\n from http import HTTPStatus\n \n+import typing_extensions as te\n+\n from flask import Flask\n from flask import jsonify\n from flask import stream_template\n@@ -38,6 +40,15 @@ def hello_json_list() -> t.List[t.Any]:\n     return [{""message"": ""Hello""}, {""message"": ""World""}]\n \n \n+class StatusJSON(te.TypedDict):\n+    status: str\n+\n+\n+@app.route(""/typed-dict"")\n+def typed_dict() -> StatusJSON:\n+    return {""status"": ""ok""}\n+\n+\n @app.route(""/generator"")\n def hello_generator() -> t.Generator[str, None, None]:\n     def show() -> t.Generator[str, None, None]:\n'",1.1764705882352942,1.1666666666666667
CHANGES.rst,CHANGES.rst,add53e190cf90b01b37914f810a370a0cd681800,900e11850a201717599fb12fb7cd76c37078206d,'require Werkzeug 2.2',"""@@ -15,6 +15,7 @@ Unreleased\n     -   The ``RequestContext.g`` property returning ``AppContext.g`` is\n         removed.\n \n+-   Update Werkzeug dependency to >= 2.2.\n -   The app and request contexts are managed using Python context vars\n     directly rather than Werkzeug's ``LocalStack``. This should result\n     in better performance and memory use. :pr:`4682`\n""",0,0
setup.py,setup.py,add53e190cf90b01b37914f810a370a0cd681800,900e11850a201717599fb12fb7cd76c37078206d,'require Werkzeug 2.2',"'@@ -4,7 +4,7 @@ from setuptools import setup\n setup(\n     name=""Flask"",\n     install_requires=[\n-        ""Werkzeug >= 2.2.0a1"",\n+        ""Werkzeug >= 2.2.0"",\n         ""Jinja2 >= 3.0"",\n         ""itsdangerous >= 2.0"",\n         ""click >= 8.0"",\n'",0,0
docs/conf.py,docs/conf.py,2869ddf50ce8dbf590a5a6992ffc7bbd096884a3,4f01c68a4bcabf7dde010b7c602f2811aa89a852,'update blinker intersphinx link',"'@@ -29,7 +29,7 @@ intersphinx_mapping = {\n     ""itsdangerous"": (""https://itsdangerous.palletsprojects.com/"", None),\n     ""sqlalchemy"": (""https://docs.sqlalchemy.org/"", None),\n     ""wtforms"": (""https://wtforms.readthedocs.io/"", None),\n-    ""blinker"": (""https://pythonhosted.org/blinker/"", None),\n+    ""blinker"": (""https://blinker.readthedocs.io/"", None),\n }\n issues_github_path = ""pallets/flask""\n \n'",3.0,3.0
CHANGES.rst,CHANGES.rst,363be75e8401350d4f1b131723991d382fce83c6,2869ddf50ce8dbf590a5a6992ffc7bbd096884a3,'remove reference links from changelog',"'@@ -1,5 +1,3 @@\n-.. currentmodule:: flask\n-\n Version 2.1.3\n -------------\n \n@@ -199,17 +197,17 @@ Released 2021-05-11\n     ``click.get_current_context().obj`` if it\'s needed. :issue:`3552`\n -   The CLI shows better error messages when the app failed to load\n     when looking up commands. :issue:`2741`\n--   Add :meth:`sessions.SessionInterface.get_cookie_name` to allow\n-    setting the session cookie name dynamically. :pr:`3369`\n--   Add :meth:`Config.from_file` to load config using arbitrary file\n+-   Add ``SessionInterface.get_cookie_name`` to allow setting the\n+    session cookie name dynamically. :pr:`3369`\n+-   Add ``Config.from_file`` to load config using arbitrary file\n     loaders, such as ``toml.load`` or ``json.load``.\n-    :meth:`Config.from_json` is deprecated in favor of this. :pr:`3398`\n+    ``Config.from_json`` is deprecated in favor of this. :pr:`3398`\n -   The ``flask run`` command will only defer errors on reload. Errors\n     present during the initial call will cause the server to exit with\n     the traceback immediately. :issue:`3431`\n--   :func:`send_file` raises a :exc:`ValueError` when passed an\n-    :mod:`io` object in text mode. Previously, it would respond with\n-    200 OK and an empty file. :issue:`3358`\n+-   ``send_file`` raises a ``ValueError`` when passed an ``io`` object\n+    in text mode. Previously, it would respond with 200 OK and an empty\n+    file. :issue:`3358`\n -   When using ad-hoc certificates, check for the cryptography library\n     instead of PyOpenSSL. :pr:`3492`\n -   When specifying a factory function with ``FLASK_APP``, keyword\n@@ -320,31 +318,29 @@ Released 2019-07-04\n     base ``HTTPException``. This makes error handler behavior more\n     consistent. :pr:`3266`\n \n-    -   :meth:`Flask.finalize_request` is called for all unhandled\n+    -   ``Flask.finalize_request`` is called for all unhandled\n         exceptions even if there is no ``500`` error handler.\n \n--   :attr:`Flask.logger` takes the same name as\n-    :attr:`Flask.name` (the value passed as\n-    ``Flask(import_name)``. This reverts 1.0\'s behavior of always\n-    logging to ``""flask.app""``, in order to support multiple apps in the\n-    same process. A warning will be shown if old configuration is\n+-   ``Flask.logger`` takes the same name as ``Flask.name`` (the value\n+    passed as ``Flask(import_name)``. This reverts 1.0\'s behavior of\n+    always logging to ``""flask.app""``, in order to support multiple apps\n+    in the same process. A warning will be shown if old configuration is\n     detected that needs to be moved. :issue:`2866`\n--   :meth:`flask.RequestContext.copy` includes the current session\n-    object in the request context copy. This prevents ``session``\n-    pointing to an out-of-date object. :issue:`2935`\n+-   ``RequestContext.copy`` includes the current session object in the\n+    request context copy. This prevents ``session`` pointing to an\n+    out-of-date object. :issue:`2935`\n -   Using built-in RequestContext, unprintable Unicode characters in\n     Host header will result in a HTTP 400 response and not HTTP 500 as\n     previously. :pr:`2994`\n--   :func:`send_file` supports :class:`~os.PathLike` objects as\n-    described in PEP 0519, to support :mod:`pathlib` in Python 3.\n-    :pr:`3059`\n--   :func:`send_file` supports :class:`~io.BytesIO` partial content.\n+-   ``send_file`` supports ``PathLike`` objects as described in\n+    :pep:`519`, to support ``pathlib`` in Python 3. :pr:`3059`\n+-   ``send_file`` supports ``BytesIO`` partial content.\n     :issue:`2957`\n--   :func:`open_resource` accepts the ""rt"" file mode. This still does\n-    the same thing as ""r"". :issue:`3163`\n--   The :attr:`MethodView.methods` attribute set in a base class is used\n-    by subclasses. :issue:`3138`\n--   :attr:`Flask.jinja_options` is a ``dict`` instead of an\n+-   ``open_resource`` accepts the ""rt"" file mode. This still does the\n+    same thing as ""r"". :issue:`3163`\n+-   The ``MethodView.methods`` attribute set in a base class is used by\n+    subclasses. :issue:`3138`\n+-   ``Flask.jinja_options`` is a ``dict`` instead of an\n     ``ImmutableDict`` to allow easier configuration. Changes must still\n     be made before creating the environment. :pr:`3190`\n -   Flask\'s ``JSONMixin`` for the request and response wrappers was\n@@ -358,15 +354,14 @@ Released 2019-07-04\n     :issue:`3134`\n -   Support empty ``static_folder`` without requiring setting an empty\n     ``static_url_path`` as well. :pr:`3124`\n--   :meth:`jsonify` supports :class:`dataclasses.dataclass` objects.\n-    :pr:`3195`\n--   Allow customizing the :attr:`Flask.url_map_class` used for routing.\n+-   ``jsonify`` supports ``dataclass`` objects. :pr:`3195`\n+-   Allow customizing the ``Flask.url_map_class`` used for routing.\n     :pr:`3069`\n -   The development server port can be set to 0, which tells the OS to\n     pick an available port. :issue:`2926`\n--   The return value from :meth:`cli.load_dotenv` is more consistent\n-    with the documentation. It will return ``False`` if python-dotenv is\n-    not installed, or if the given path isn\'t a file. :issue:`2937`\n+-   The return value from ``cli.load_dotenv`` is more consistent with\n+    the documentation. It will return ``False`` if python-dotenv is not\n+    installed, or if the given path isn\'t a file. :issue:`2937`\n -   Signaling support has a stub for the ``connect_via`` method when\n     the Blinker library is not installed. :pr:`3208`\n -   Add an ``--extra-files`` option to the ``flask run`` CLI command to\n@@ -405,7 +400,7 @@ Released 2019-07-04\n     requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n -   ``send_file`` url quotes the "":"" and ""/"" characters for more\n     compatible UTF-8 filename support in some browsers. :issue:`3074`\n--   Fixes for PEP451 import loaders and pytest 5.x. :issue:`3275`\n+-   Fixes for :pep:`451` import loaders and pytest 5.x. :issue:`3275`\n -   Show message about dotenv on stderr instead of stdout. :issue:`3285`\n \n \n@@ -414,16 +409,16 @@ Version 1.0.3\n \n Released 2019-05-17\n \n--   :func:`send_file` encodes filenames as ASCII instead of Latin-1\n+-   ``send_file`` encodes filenames as ASCII instead of Latin-1\n     (ISO-8859-1). This fixes compatibility with Gunicorn, which is\n-    stricter about header encodings than PEP 3333. :issue:`2766`\n+    stricter about header encodings than :pep:`3333`. :issue:`2766`\n -   Allow custom CLIs using ``FlaskGroup`` to set the debug flag without\n     it always being overwritten based on environment variables.\n     :pr:`2765`\n -   ``flask --version`` outputs Werkzeug\'s version and simplifies the\n     Python version. :pr:`2825`\n--   :func:`send_file` handles an ``attachment_filename`` that is a\n-    native Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`\n+-   ``send_file`` handles an ``attachment_filename`` that is a native\n+    Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`\n -   A catch-all error handler registered for ``HTTPException`` will not\n     handle ``RoutingException``, which is used internally during\n     routing. This fixes the unexpected behavior that had been introduced\n@@ -471,32 +466,30 @@ Released 2018-04-26\n -   Bump minimum dependency versions to the latest stable versions:\n     Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.\n     :issue:`2586`\n--   Skip :meth:`app.run <Flask.run>` when a Flask application is run\n-    from the command line. This avoids some behavior that was confusing\n-    to debug.\n--   Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to\n-    ``False``. :func:`~json.jsonify` returns a compact format by\n-    default, and an indented format in debug mode. :pr:`2193`\n--   :meth:`Flask.__init__ <Flask>` accepts the ``host_matching``\n-    argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`\n--   :meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument\n-    and passes it as the ``host`` argument when defining the static\n-    route. :issue:`1559`\n--   :func:`send_file` supports Unicode in ``attachment_filename``.\n+-   Skip ``app.run`` when a Flask application is run from the command\n+    line. This avoids some behavior that was confusing to debug.\n+-   Change the default for ``JSONIFY_PRETTYPRINT_REGULAR`` to\n+    ``False``. ``~json.jsonify`` returns a compact format by default,\n+    and an indented format in debug mode. :pr:`2193`\n+-   ``Flask.__init__`` accepts the ``host_matching`` argument and sets\n+    it on ``Flask.url_map``. :issue:`1559`\n+-   ``Flask.__init__`` accepts the ``static_host`` argument and passes\n+    it as the ``host`` argument when defining the static route.\n+    :issue:`1559`\n+-   ``send_file`` supports Unicode in ``attachment_filename``.\n     :pr:`2223`\n--   Pass ``_scheme`` argument from :func:`url_for` to\n-    :meth:`~Flask.handle_url_build_error`. :pr:`2017`\n--   :meth:`~Flask.add_url_rule` accepts the\n-    ``provide_automatic_options`` argument to disable adding the\n-    ``OPTIONS`` method. :pr:`1489`\n--   :class:`~views.MethodView` subclasses inherit method handlers from\n-    base classes. :pr:`1936`\n+-   Pass ``_scheme`` argument from ``url_for`` to\n+    ``Flask.handle_url_build_error``. :pr:`2017`\n+-   ``Flask.add_url_rule`` accepts the ``provide_automatic_options``\n+    argument to disable adding the ``OPTIONS`` method. :pr:`1489`\n+-   ``MethodView`` subclasses inherit method handlers from base classes.\n+    :pr:`1936`\n -   Errors caused while opening the session at the beginning of the\n     request are handled by the app\'s error handlers. :pr:`2254`\n--   Blueprints gained :attr:`~Blueprint.json_encoder` and\n-    :attr:`~Blueprint.json_decoder` attributes to override the app\'s\n+-   Blueprints gained ``Blueprint.json_encoder`` and\n+    ``Blueprint.json_decoder`` attributes to override the app\'s\n     encoder and decoder. :pr:`1898`\n--   :meth:`Flask.make_response` raises ``TypeError`` instead of\n+-   ``Flask.make_response`` raises ``TypeError`` instead of\n     ``ValueError`` for bad response types. The error messages have been\n     improved to describe why the type is invalid. :pr:`2256`\n -   Add ``routes`` CLI command to output routes registered on the\n@@ -511,52 +504,49 @@ Released 2018-04-26\n     ``make_app`` from ``FLASK_APP``. :pr:`2297`\n -   Factory functions are not required to take a ``script_info``\n     parameter to work with the ``flask`` command. If they take a single\n-    parameter or a parameter named ``script_info``, the\n-    :class:`~cli.ScriptInfo` object will be passed. :pr:`2319`\n+    parameter or a parameter named ``script_info``, the ``ScriptInfo``\n+    object will be passed. :pr:`2319`\n -   ``FLASK_APP`` can be set to an app factory, with arguments if\n     needed, for example ``FLASK_APP=myproject.app:create_app(\'dev\')``.\n     :pr:`2326`\n -   ``FLASK_APP`` can point to local packages that are not installed in\n     editable mode, although ``pip install -e`` is still preferred.\n     :pr:`2414`\n--   The :class:`~views.View` class attribute\n-    :attr:`~views.View.provide_automatic_options` is set in\n-    :meth:`~views.View.as_view`, to be detected by\n-    :meth:`~Flask.add_url_rule`. :pr:`2316`\n+-   The ``View`` class attribute\n+    ``View.provide_automatic_options`` is set in ``View.as_view``, to be\n+    detected by ``Flask.add_url_rule``. :pr:`2316`\n -   Error handling will try handlers registered for ``blueprint, code``,\n     ``app, code``, ``blueprint, exception``, ``app, exception``.\n     :pr:`2314`\n -   ``Cookie`` is added to the response\'s ``Vary`` header if the session\n     is accessed at all during the request (and not deleted). :pr:`2288`\n--   :meth:`~Flask.test_request_context` accepts ``subdomain`` and\n+-   ``Flask.test_request_context`` accepts ``subdomain`` and\n     ``url_scheme`` arguments for use when building the base URL.\n     :pr:`1621`\n--   Set :data:`APPLICATION_ROOT` to ``\'/\'`` by default. This was already\n-    the implicit default when it was set to ``None``.\n--   :data:`TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode.\n+-   Set ``APPLICATION_ROOT`` to ``\'/\'`` by default. This was already the\n+    implicit default when it was set to ``None``.\n+-   ``TRAP_BAD_REQUEST_ERRORS`` is enabled by default in debug mode.\n     ``BadRequestKeyError`` has a message with the bad key in debug mode\n     instead of the generic bad request message. :pr:`2348`\n--   Allow registering new tags with\n-    :class:`~json.tag.TaggedJSONSerializer` to support storing other\n-    types in the session cookie. :pr:`2352`\n+-   Allow registering new tags with ``TaggedJSONSerializer`` to support\n+    storing other types in the session cookie. :pr:`2352`\n -   Only open the session if the request has not been pushed onto the\n-    context stack yet. This allows :func:`~stream_with_context`\n-    generators to access the same session that the containing view uses.\n-    :pr:`2354`\n+    context stack yet. This allows ``stream_with_context`` generators to\n+    access the same session that the containing view uses. :pr:`2354`\n -   Add ``json`` keyword argument for the test client request methods.\n     This will dump the given object as JSON and set the appropriate\n     content type. :pr:`2358`\n--   Extract JSON handling to a mixin applied to both the\n-    :class:`Request` and :class:`Response` classes. This adds the\n-    :meth:`~Response.is_json` and :meth:`~Response.get_json` methods to\n-    the response to make testing JSON response much easier. :pr:`2358`\n+-   Extract JSON handling to a mixin applied to both the ``Request`` and\n+    ``Response`` classes. This adds the ``Response.is_json`` and\n+    ``Response.get_json`` methods to the response to make testing JSON\n+    response much easier. :pr:`2358`\n -   Removed error handler caching because it caused unexpected results\n     for some exception inheritance hierarchies. Register handlers\n     explicitly for each exception if you want to avoid traversing the\n     MRO. :pr:`2362`\n -   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`\n -   Template auto reloading will honor debug mode even even if\n-    :attr:`~Flask.jinja_env` was already accessed. :pr:`2373`\n+    ``Flask.jinja_env`` was already accessed. :pr:`2373`\n -   The following old deprecated code was removed. :issue:`2385`\n \n     -   ``flask.ext`` - import extensions directly by their name instead\n@@ -564,57 +554,55 @@ Released 2018-04-26\n         ``import flask.ext.sqlalchemy`` becomes\n         ``import flask_sqlalchemy``.\n     -   ``Flask.init_jinja_globals`` - extend\n-        :meth:`Flask.create_jinja_environment` instead.\n+        ``Flask.create_jinja_environment`` instead.\n     -   ``Flask.error_handlers`` - tracked by\n-        :attr:`Flask.error_handler_spec`, use :meth:`Flask.errorhandler`\n+        ``Flask.error_handler_spec``, use ``Flask.errorhandler``\n         to register handlers.\n     -   ``Flask.request_globals_class`` - use\n-        :attr:`Flask.app_ctx_globals_class` instead.\n-    -   ``Flask.static_path`` - use :attr:`Flask.static_url_path`\n-        instead.\n-    -   ``Request.module`` - use :attr:`Request.blueprint` instead.\n-\n--   The :attr:`Request.json` property is no longer deprecated.\n-    :issue:`1421`\n--   Support passing a :class:`~werkzeug.test.EnvironBuilder` or ``dict``\n-    to :meth:`test_client.open <werkzeug.test.Client.open>`. :pr:`2412`\n--   The ``flask`` command and :meth:`Flask.run` will load environment\n+        ``Flask.app_ctx_globals_class`` instead.\n+    -   ``Flask.static_path`` - use ``Flask.static_url_path`` instead.\n+    -   ``Request.module`` - use ``Request.blueprint`` instead.\n+\n+-   The ``Request.json`` property is no longer deprecated. :issue:`1421`\n+-   Support passing a ``EnvironBuilder`` or ``dict`` to\n+    ``test_client.open``. :pr:`2412`\n+-   The ``flask`` command and ``Flask.run`` will load environment\n     variables from ``.env`` and ``.flaskenv`` files if python-dotenv is\n     installed. :pr:`2416`\n -   When passing a full URL to the test client, the scheme in the URL is\n-    used instead of :data:`PREFERRED_URL_SCHEME`. :pr:`2430`\n--   :attr:`Flask.logger` has been simplified. ``LOGGER_NAME`` and\n+    used instead of ``PREFERRED_URL_SCHEME``. :pr:`2430`\n+-   ``Flask.logger`` has been simplified. ``LOGGER_NAME`` and\n     ``LOGGER_HANDLER_POLICY`` config was removed. The logger is always\n     named ``flask.app``. The level is only set on first access, it\n-    doesn\'t check :attr:`Flask.debug` each time. Only one format is\n-    used, not different ones depending on :attr:`Flask.debug`. No\n-    handlers are removed, and a handler is only added if no handlers are\n-    already configured. :pr:`2436`\n+    doesn\'t check ``Flask.debug`` each time. Only one format is used,\n+    not different ones depending on ``Flask.debug``. No handlers are\n+    removed, and a handler is only added if no handlers are already\n+    configured. :pr:`2436`\n -   Blueprint view function names may not contain dots. :pr:`2450`\n -   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n     cases. :issue:`2526`\n -   The development server uses threads by default. :pr:`2529`\n--   Loading config files with ``silent=True`` will ignore\n-    :data:`~errno.ENOTDIR` errors. :pr:`2581`\n+-   Loading config files with ``silent=True`` will ignore ``ENOTDIR``\n+    errors. :pr:`2581`\n -   Pass ``--cert`` and ``--key`` options to ``flask run`` to run the\n     development server over HTTPS. :pr:`2606`\n--   Added :data:`SESSION_COOKIE_SAMESITE` to control the ``SameSite``\n+-   Added ``SESSION_COOKIE_SAMESITE`` to control the ``SameSite``\n     attribute on the session cookie. :pr:`2607`\n--   Added :meth:`~flask.Flask.test_cli_runner` to create a Click runner\n-    that can invoke Flask CLI commands for testing. :pr:`2636`\n+-   Added ``Flask.test_cli_runner`` to create a Click runner that can\n+    invoke Flask CLI commands for testing. :pr:`2636`\n -   Subdomain matching is disabled by default and setting\n-    :data:`SERVER_NAME` does not implicitly enable it. It can be enabled\n-    by passing ``subdomain_matching=True`` to the ``Flask`` constructor.\n+    ``SERVER_NAME`` does not implicitly enable it. It can be enabled by\n+    passing ``subdomain_matching=True`` to the ``Flask`` constructor.\n     :pr:`2635`\n -   A single trailing slash is stripped from the blueprint\n     ``url_prefix`` when it is registered with the app. :pr:`2629`\n--   :meth:`Request.get_json` doesn\'t cache the result if parsing fails\n-    when ``silent`` is true. :issue:`2651`\n--   :func:`Request.get_json` no longer accepts arbitrary encodings.\n-    Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n-    Flask will autodetect UTF-8, -16, or -32. :pr:`2691`\n--   Added :data:`MAX_COOKIE_SIZE` and :attr:`Response.max_cookie_size`\n-    to control when Werkzeug warns about large cookies that browsers may\n+-   ``Request.get_json`` doesn\'t cache the result if parsing fails when\n+    ``silent`` is true. :issue:`2651`\n+-   ``Request.get_json`` no longer accepts arbitrary encodings. Incoming\n+    JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will\n+    autodetect UTF-8, -16, or -32. :pr:`2691`\n+-   Added ``MAX_COOKIE_SIZE`` and ``Response.max_cookie_size`` to\n+    control when Werkzeug warns about large cookies that browsers may\n     ignore. :pr:`2693`\n -   Updated documentation theme to make docs look better in small\n     windows. :pr:`2709`\n@@ -644,7 +632,7 @@ Version 0.12.3\n \n Released 2018-04-26\n \n--   :func:`Request.get_json` no longer accepts arbitrary encodings.\n+-   ``Request.get_json`` no longer accepts arbitrary encodings.\n     Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n     Flask will autodetect UTF-8, -16, or -32. :issue:`2692`\n -   Fix a Python warning about imports when using ``python -m flask``.\n@@ -714,13 +702,12 @@ Version 0.11\n \n Released 2016-05-29, codename Absinthe\n \n--   Added support to serializing top-level arrays to\n-    :func:`flask.jsonify`. This introduces a security risk in ancient\n-    browsers.\n+-   Added support to serializing top-level arrays to ``jsonify``. This\n+    introduces a security risk in ancient browsers.\n -   Added before_render_template signal.\n--   Added ``**kwargs`` to :meth:`flask.Test.test_client` to support\n-    passing additional keyword arguments to the constructor of\n-    :attr:`flask.Flask.test_client_class`.\n+-   Added ``**kwargs`` to ``Flask.test_client`` to support passing\n+    additional keyword arguments to the constructor of\n+    ``Flask.test_client_class``.\n -   Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the\n     set-cookie behavior. If set to ``True`` a permanent session will be\n     refreshed each request and get their lifetime extended, if set to\n@@ -730,9 +717,9 @@ Released 2016-05-29, codename Absinthe\n -   Made Flask support custom JSON mimetypes for incoming data.\n -   Added support for returning tuples in the form ``(response,\n     headers)`` from a view function.\n--   Added :meth:`flask.Config.from_json`.\n--   Added :attr:`flask.Flask.config_class`.\n--   Added :meth:`flask.Config.get_namespace`.\n+-   Added ``Config.from_json``.\n+-   Added ``Flask.config_class``.\n+-   Added ``Config.get_namespace``.\n -   Templates are no longer automatically reloaded outside of debug\n     mode. This can be configured with the new ``TEMPLATES_AUTO_RELOAD``\n     config key.\n@@ -740,7 +727,7 @@ Released 2016-05-29, codename Absinthe\n     loader.\n -   Added support for explicit root paths when using Python 3.3\'s\n     namespace packages.\n--   Added :command:`flask` and the ``flask.cli`` module to start the\n+-   Added ``flask`` and the ``flask.cli`` module to start the\n     local debug server through the click CLI system. This is recommended\n     over the old ``flask.run()`` method as it works faster and more\n     reliable due to a different design and also replaces\n@@ -751,7 +738,7 @@ Released 2016-05-29, codename Absinthe\n     an extension author to create exceptions that will by default result\n     in the HTTP error of their choosing, but may be caught with a custom\n     error handler if desired.\n--   Added :meth:`flask.Config.from_mapping`.\n+-   Added ``Config.from_mapping``.\n -   Flask will now log by default even if debug is disabled. The log\n     format is now hardcoded but the default log handling can be disabled\n     through the ``LOGGER_HANDLER_POLICY`` configuration key.\n@@ -769,9 +756,7 @@ Released 2016-05-29, codename Absinthe\n     space included by default after separators.\n -   JSON responses are now terminated with a newline character, because\n     it is a convention that UNIX text files end with a newline and some\n-    clients don\'t deal well when this newline is missing. This came up\n-    originally as a part of\n-    https://github.com/postmanlabs/httpbin/issues/168. :pr:`1262`\n+    clients don\'t deal well when this newline is missing. :pr:`1262`\n -   The automatically provided ``OPTIONS`` method is now correctly\n     disabled if the user registered an overriding rule with the\n     lowercase-version ``options``. :issue:`1288`\n@@ -791,9 +776,9 @@ Released 2016-05-29, codename Absinthe\n -   Exceptions during teardown handling will no longer leave bad\n     application contexts lingering around.\n -   Fixed broken ``test_appcontext_signals()`` test case.\n--   Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package`\n-    with a useful message explaining why it is raised when a PEP 302\n-    import hook is used without an ``is_package()`` method.\n+-   Raise an ``AttributeError`` in ``helpers.find_package`` with a\n+    useful message explaining why it is raised when a :pep:`302` import\n+    hook is used without an ``is_package()`` method.\n -   Fixed an issue causing exceptions raised before entering a request\n     or app context to be passed to teardown handlers.\n -   Fixed an issue with query parameters getting removed from requests\n@@ -909,12 +894,12 @@ Version 0.9\n \n Released 2012-07-01, codename Campari\n \n--   The :func:`flask.Request.on_json_loading_failed` now returns a JSON\n-    formatted response by default.\n--   The :func:`flask.url_for` function now can generate anchors to the\n-    generated links.\n--   The :func:`flask.url_for` function now can also explicitly generate\n-    URL rules specific to a given HTTP method.\n+-   The ``Request.on_json_loading_failed`` now returns a JSON formatted\n+    response by default.\n+-   The ``url_for`` function now can generate anchors to the generated\n+    links.\n+-   The ``url_for`` function now can also explicitly generate URL rules\n+    specific to a given HTTP method.\n -   Logger now only returns the debug log setting if it was not set\n     explicitly.\n -   Unregister a circular dependency between the WSGI environment and\n@@ -926,42 +911,41 @@ Released 2012-07-01, codename Campari\n -   Session is now stored after callbacks so that if the session payload\n     is stored in the session you can still modify it in an after request\n     callback.\n--   The :class:`flask.Flask` class will avoid importing the provided\n-    import name if it can (the required first parameter), to benefit\n-    tools which build Flask instances programmatically. The Flask class\n-    will fall back to using import on systems with custom module hooks,\n-    e.g. Google App Engine, or when the import name is inside a zip\n-    archive (usually a .egg) prior to Python 2.7.\n+-   The ``Flask`` class will avoid importing the provided import name if\n+    it can (the required first parameter), to benefit tools which build\n+    Flask instances programmatically. The Flask class will fall back to\n+    using import on systems with custom module hooks, e.g. Google App\n+    Engine, or when the import name is inside a zip archive (usually an\n+    egg) prior to Python 2.7.\n -   Blueprints now have a decorator to add custom template filters\n-    application wide, :meth:`flask.Blueprint.app_template_filter`.\n+    application wide, ``Blueprint.app_template_filter``.\n -   The Flask and Blueprint classes now have a non-decorator method for\n     adding custom template filters application wide,\n-    :meth:`flask.Flask.add_template_filter` and\n-    :meth:`flask.Blueprint.add_app_template_filter`.\n--   The :func:`flask.get_flashed_messages` function now allows rendering\n-    flashed message categories in separate blocks, through a\n-    ``category_filter`` argument.\n--   The :meth:`flask.Flask.run` method now accepts ``None`` for ``host``\n-    and ``port`` arguments, using default values when ``None``. This\n-    allows for calling run using configuration values, e.g.\n+    ``Flask.add_template_filter`` and\n+    ``Blueprint.add_app_template_filter``.\n+-   The ``get_flashed_messages`` function now allows rendering flashed\n+    message categories in separate blocks, through a ``category_filter``\n+    argument.\n+-   The ``Flask.run`` method now accepts ``None`` for ``host`` and\n+    ``port`` arguments, using default values when ``None``. This allows\n+    for calling run using configuration values, e.g.\n     ``app.run(app.config.get(\'MYHOST\'), app.config.get(\'MYPORT\'))``,\n     with proper behavior whether or not a config file is provided.\n--   The :meth:`flask.render_template` method now accepts a either an\n-    iterable of template names or a single template name. Previously, it\n-    only accepted a single template name. On an iterable, the first\n-    template found is rendered.\n--   Added :meth:`flask.Flask.app_context` which works very similar to\n-    the request context but only provides access to the current\n-    application. This also adds support for URL generation without an\n-    active request context.\n+-   The ``render_template`` method now accepts a either an iterable of\n+    template names or a single template name. Previously, it only\n+    accepted a single template name. On an iterable, the first template\n+    found is rendered.\n+-   Added ``Flask.app_context`` which works very similar to the request\n+    context but only provides access to the current application. This\n+    also adds support for URL generation without an active request\n+    context.\n -   View functions can now return a tuple with the first instance being\n-    an instance of :class:`flask.Response`. This allows for returning\n+    an instance of ``Response``. This allows for returning\n     ``jsonify(error=""error msg""), 400`` from a view function.\n--   :class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a\n-    :meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to\n-    override behavior of serving static files from Flask when using\n-    :meth:`flask.Flask.send_static_file` (used for the default static\n-    file handler) and :func:`~flask.helpers.send_file`. This hook is\n+-   ``Flask`` and ``Blueprint`` now provide a ``get_send_file_max_age``\n+    hook for subclasses to override behavior of serving static files\n+    from Flask when using ``Flask.send_static_file`` (used for the\n+    default static file handler) and ``helpers.send_file``. This hook is\n     provided a filename, which for example allows changing cache\n     controls by file extension. The default max-age for ``send_file``\n     and static files can be configured through a new\n@@ -973,14 +957,13 @@ Released 2012-07-01, codename Campari\n -   Changed the behavior of tuple return values from functions. They are\n     no longer arguments to the response object, they now have a defined\n     meaning.\n--   Added :attr:`flask.Flask.request_globals_class` to allow a specific\n-    class to be used on creation of the :data:`~flask.g` instance of\n-    each request.\n+-   Added ``Flask.request_globals_class`` to allow a specific class to\n+    be used on creation of the ``g`` instance of each request.\n -   Added ``required_methods`` attribute to view functions to force-add\n     methods on registration.\n--   Added :func:`flask.after_this_request`.\n--   Added :func:`flask.stream_with_context` and the ability to push\n-    contexts multiple times without producing unexpected behavior.\n+-   Added ``flask.after_this_request``.\n+-   Added ``flask.stream_with_context`` and the ability to push contexts\n+    multiple times without producing unexpected behavior.\n \n \n Version 0.8.1\n@@ -1013,8 +996,8 @@ Released 2011-09-29, codename Rakija\n     earlier feedback when users forget to import view code ahead of\n     time.\n -   Added the ability to register callbacks that are only triggered once\n-    at the beginning of the first request.\n-    (:meth:`Flask.before_first_request`)\n+    at the beginning of the first request with\n+    ``Flask.before_first_request``.\n -   Malformed JSON data will now trigger a bad request HTTP exception\n     instead of a value error which usually would result in a 500\n     internal server error if not handled. This is a backwards\n@@ -1026,20 +1009,20 @@ Released 2011-09-29, codename Rakija\n     version control so it\'s the perfect place to put configuration files\n     etc.\n -   Added the ``APPLICATION_ROOT`` configuration variable.\n--   Implemented :meth:`~flask.testing.TestClient.session_transaction` to\n-    easily modify sessions from the test environment.\n+-   Implemented ``TestClient.session_transaction`` to easily modify\n+    sessions from the test environment.\n -   Refactored test client internally. The ``APPLICATION_ROOT``\n     configuration variable as well as ``SERVER_NAME`` are now properly\n     used by the test client as defaults.\n--   Added :attr:`flask.views.View.decorators` to support simpler\n-    decorating of pluggable (class-based) views.\n+-   Added ``View.decorators`` to support simpler decorating of pluggable\n+    (class-based) views.\n -   Fixed an issue where the test client if used with the ""with""\n     statement did not trigger the execution of the teardown handlers.\n -   Added finer control over the session cookie parameters.\n -   HEAD requests to a method view now automatically dispatch to the\n     ``get`` method if no handler was implemented.\n--   Implemented the virtual :mod:`flask.ext` package to import\n-    extensions from.\n+-   Implemented the virtual ``flask.ext`` package to import extensions\n+    from.\n -   The context preservation on exceptions is now an integral component\n     of Flask itself and no longer of the test client. This cleaned up\n     some internal logic and lowers the odds of runaway request contexts\n@@ -1072,14 +1055,13 @@ Version 0.7\n \n Released 2011-06-28, codename Grappa\n \n--   Added :meth:`~flask.Flask.make_default_options_response` which can\n-    be used by subclasses to alter the default behavior for ``OPTIONS``\n-    responses.\n--   Unbound locals now raise a proper :exc:`RuntimeError` instead of an\n-    :exc:`AttributeError`.\n+-   Added ``Flask.make_default_options_response`` which can be used by\n+    subclasses to alter the default behavior for ``OPTIONS`` responses.\n+-   Unbound locals now raise a proper ``RuntimeError`` instead of an\n+    ``AttributeError``.\n -   Mimetype guessing and etag support based on file objects is now\n-    deprecated for :func:`flask.send_file` because it was unreliable.\n-    Pass filenames instead or attach your own etags and provide a proper\n+    deprecated for ``send_file`` because it was unreliable. Pass\n+    filenames instead or attach your own etags and provide a proper\n     mimetype by hand.\n -   Static file handling for modules now requires the name of the static\n     folder to be supplied explicitly. The previous autodetection was not\n@@ -1105,15 +1087,15 @@ Released 2011-06-28, codename Grappa\n     at the end of a request regardless of whether an exception occurred.\n     Also the behavior for ``after_request`` was changed. It\'s now no\n     longer executed when an exception is raised.\n--   Implemented :func:`flask.has_request_context`\n+-   Implemented ``has_request_context``.\n -   Deprecated ``init_jinja_globals``. Override the\n-    :meth:`~flask.Flask.create_jinja_environment` method instead to\n-    achieve the same functionality.\n--   Added :func:`flask.safe_join`\n+    ``Flask.create_jinja_environment`` method instead to achieve the\n+    same functionality.\n+-   Added ``safe_join``.\n -   The automatic JSON request data unpacking now looks at the charset\n     mimetype parameter.\n--   Don\'t modify the session on :func:`flask.get_flashed_messages` if\n-    there are no messages in the session.\n+-   Don\'t modify the session on ``get_flashed_messages`` if there are no\n+    messages in the session.\n -   ``before_request`` handlers are now able to abort requests with\n     errors.\n -   It is not possible to define user exception handlers. That way you\n@@ -1155,29 +1137,25 @@ Released 2010-07-27, codename Whisky\n -   Static rules are now even in place if there is no static folder for\n     the module. This was implemented to aid GAE which will remove the\n     static folder if it\'s part of a mapping in the .yml file.\n--   The :attr:`~flask.Flask.config` is now available in the templates as\n-    ``config``.\n+-   ``Flask.config`` is now available in the templates as ``config``.\n -   Context processors will no longer override values passed directly to\n     the render function.\n -   Added the ability to limit the incoming request data with the new\n     ``MAX_CONTENT_LENGTH`` configuration value.\n--   The endpoint for the :meth:`flask.Module.add_url_rule` method is now\n-    optional to be consistent with the function of the same name on the\n+-   The endpoint for the ``Module.add_url_rule`` method is now optional\n+    to be consistent with the function of the same name on the\n     application object.\n--   Added a :func:`flask.make_response` function that simplifies\n-    creating response object instances in views.\n+-   Added a ``make_response`` function that simplifies creating response\n+    object instances in views.\n -   Added signalling support based on blinker. This feature is currently\n     optional and supposed to be used by extensions and applications. If\n-    you want to use it, make sure to have `blinker`_ installed.\n+    you want to use it, make sure to have ``blinker`` installed.\n -   Refactored the way URL adapters are created. This process is now\n-    fully customizable with the :meth:`~flask.Flask.create_url_adapter`\n-    method.\n+    fully customizable with the ``Flask.create_url_adapter`` method.\n -   Modules can now register for a subdomain instead of just an URL\n     prefix. This makes it possible to bind a whole module to a\n     configurable subdomain.\n \n-.. _blinker: https://pypi.org/project/blinker/\n-\n \n Version 0.5.2\n -------------\n@@ -1211,8 +1189,8 @@ Released 2010-07-06, codename Calvados\n     templates this behavior can be changed with the ``autoescape`` tag.\n -   Refactored Flask internally. It now consists of more than a single\n     file.\n--   :func:`flask.send_file` now emits etags and has the ability to do\n-    conditional responses builtin.\n+-   ``send_file`` now emits etags and has the ability to do conditional\n+    responses builtin.\n -   (temporarily) dropped support for zipped applications. This was a\n     rarely used feature and led to some confusing behavior.\n -   Added support for per-package template and static-file directories.\n@@ -1228,9 +1206,8 @@ Released 2010-06-18, codename Rakia\n \n -   Added the ability to register application wide error handlers from\n     modules.\n--   :meth:`~flask.Flask.after_request` handlers are now also invoked if\n-    the request dies with an exception and an error handling page kicks\n-    in.\n+-   ``Flask.after_request`` handlers are now also invoked if the request\n+    dies with an exception and an error handling page kicks in.\n -   Test client has not the ability to preserve the request context for\n     a little longer. This can also be used to trigger custom requests\n     that do not pop the request stack for testing.\n@@ -1245,8 +1222,8 @@ Version 0.3.1\n \n Released 2010-05-28\n \n--   Fixed a error reporting bug with :meth:`flask.Config.from_envvar`\n--   Removed some unused code from flask\n+-   Fixed a error reporting bug with ``Config.from_envvar``.\n+-   Removed some unused code.\n -   Release does no longer include development leftover files (.git\n     folder for themes, built documentation in zip and pdf file and some\n     .pyc files)\n@@ -1258,9 +1235,9 @@ Version 0.3\n Released 2010-05-28, codename Schnaps\n \n -   Added support for categories for flashed messages.\n--   The application now configures a :class:`logging.Handler` and will\n-    log request handling exceptions to that logger when not in debug\n-    mode. This makes it possible to receive mails on server errors for\n+-   The application now configures a ``logging.Handler`` and will log\n+    request handling exceptions to that logger when not in debug mode.\n+    This makes it possible to receive mails on server errors for\n     example.\n -   Added support for context binding that does not require the use of\n     the with statement for playing in the console.\n@@ -1276,14 +1253,13 @@ Released 2010-05-12, codename J?germeister\n \n -   Various bugfixes\n -   Integrated JSON support\n--   Added :func:`~flask.get_template_attribute` helper function.\n--   :meth:`~flask.Flask.add_url_rule` can now also register a view\n-    function.\n+-   Added ``get_template_attribute`` helper function.\n+-   ``Flask.add_url_rule`` can now also register a view function.\n -   Refactored internal request dispatching.\n -   Server listens on 127.0.0.1 by default now to fix issues with\n     chrome.\n -   Added external URL support.\n--   Added support for :func:`~flask.send_file`\n+-   Added support for ``send_file``.\n -   Module support and internal request handling refactoring to better\n     support pluggable applications.\n -   Sessions can be set to be permanent now on a per-session basis.\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,095651be9eec58ddb0c2eb6158318b1c703c67c5,02a08512527f997e43d1c01d03d4d473cab3b239,'fix has_app_context and has_request_context',"'@@ -213,7 +213,7 @@ def has_request_context() -> bool:\n \n     .. versionadded:: 0.7\n     """"""\n-    return _cv_app.get(None) is not None\n+    return _cv_request.get(None) is not None\n \n \n def has_app_context() -> bool:\n@@ -223,7 +223,7 @@ def has_app_context() -> bool:\n \n     .. versionadded:: 0.9\n     """"""\n-    return _cv_request.get(None) is not None\n+    return _cv_app.get(None) is not None\n \n \n class AppContext:\n'",1.9259259259259258,1.9259259259259258
CHANGES.rst,CHANGES.rst,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"'@@ -92,6 +92,12 @@ Unreleased\n     JSON response like a dict is. :issue:`4672`\n -   When type checking, allow ``TypedDict`` to be returned from view\n     functions. :pr:`4695`\n+-   Remove the ``--eager-loading/--lazy-loading`` options from the\n+    ``flask run`` command. The app is always eager loaded the first\n+    time, then lazily loaded in the reloader. The reloader always prints\n+    errors immediately but continues serving. Remove the internal\n+    ``DispatchingApp`` middleware used by the previous implementation.\n+    :issue:`4715`\n \n \n Version 2.1.3\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"""@@ -46,7 +46,7 @@ is with the ``-app`` option.\n .. code-block:: text\n \n     $ flask --app hello run\n-     * Serving Flask app 'hello' (lazy loading)\n+     * Serving Flask app 'hello'\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n \n .. admonition:: Application Discovery Behavior\n@@ -110,7 +110,7 @@ To enable all development features, set the ``--env`` option to\n .. code-block:: text\n \n     $ flask --app hello --env development run\n-     * Serving Flask app 'hello' (lazy loading)\n+     * Serving Flask app 'hello'\n      * Environment: development\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n""",1.1764705882352942,1.1764705882352942
docs/server.rst,docs/server.rst,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"'@@ -127,24 +127,19 @@ macOS Monterey and later automatically starts a service that uses port\n disable ""AirPlay Receiver"".\n \n \n-Lazy or Eager Loading\n-~~~~~~~~~~~~~~~~~~~~~\n+Deferred Errors on Reload\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n \n When using the ``flask run`` command with the reloader, the server will\n continue to run even if you introduce syntax errors or other\n initialization errors into the code. Accessing the site will show the\n interactive debugger for the error, rather than crashing the server.\n-This feature is called ""lazy loading"".\n \n If a syntax error is already present when calling ``flask run``, it will\n fail immediately and show the traceback rather than waiting until the\n site is accessed. This is intended to make errors more visible initially\n while still allowing the server to handle errors on reload.\n \n-To override this behavior and always fail immediately, even on reload,\n-pass the ``--eager-loading`` option. To always keep the server running,\n-even on the initial call, pass ``--lazy-loading``.\n-\n \n In Code\n -------\n'",0,0
src/flask/app.py,src/flask/app.py,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"'@@ -998,7 +998,7 @@ class Flask(Scaffold):\n         options.setdefault(""use_debugger"", self.debug)\n         options.setdefault(""threaded"", True)\n \n-        cli.show_server_banner(self.env, self.debug, self.name, False)\n+        cli.show_server_banner(self.env, self.debug, self.name)\n \n         from werkzeug.serving import run_simple\n \n'",3.2318840579710146,3.2318840579710146
src/flask/cli.py,src/flask/cli.py,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"'@@ -10,8 +10,6 @@ import traceback\n import typing as t\n from functools import update_wrapper\n from operator import attrgetter\n-from threading import Lock\n-from threading import Thread\n \n import click\n from click.core import ParameterSource\n@@ -267,74 +265,6 @@ version_option = click.Option(\n )\n \n \n-class DispatchingApp:\n-    """"""Special application that dispatches to a Flask application which\n-    is imported by name in a background thread.  If an error happens\n-    it is recorded and shown as part of the WSGI handling which in case\n-    of the Werkzeug debugger means that it shows up in the browser.\n-    """"""\n-\n-    def __init__(self, loader, use_eager_loading=None):\n-        self.loader = loader\n-        self._app = None\n-        self._lock = Lock()\n-        self._bg_loading_exc = None\n-\n-        if use_eager_loading is None:\n-            use_eager_loading = not is_running_from_reloader()\n-\n-        if use_eager_loading:\n-            self._load_unlocked()\n-        else:\n-            self._load_in_background()\n-\n-    def _load_in_background(self):\n-        # Store the Click context and push it in the loader thread so\n-        # script_info is still available.\n-        ctx = click.get_current_context(silent=True)\n-\n-        def _load_app():\n-            __traceback_hide__ = True  # noqa: F841\n-\n-            with self._lock:\n-                if ctx is not None:\n-                    click.globals.push_context(ctx)\n-\n-                try:\n-                    self._load_unlocked()\n-                except Exception as e:\n-                    self._bg_loading_exc = e\n-\n-        t = Thread(target=_load_app, args=())\n-        t.start()\n-\n-    def _flush_bg_loading_exception(self):\n-        __traceback_hide__ = True  # noqa: F841\n-        exc = self._bg_loading_exc\n-\n-        if exc is not None:\n-            self._bg_loading_exc = None\n-            raise exc\n-\n-    def _load_unlocked(self):\n-        __traceback_hide__ = True  # noqa: F841\n-        self._app = rv = self.loader()\n-        self._bg_loading_exc = None\n-        return rv\n-\n-    def __call__(self, environ, start_response):\n-        __traceback_hide__ = True  # noqa: F841\n-        if self._app is not None:\n-            return self._app(environ, start_response)\n-        self._flush_bg_loading_exception()\n-        with self._lock:\n-            if self._app is not None:\n-                rv = self._app\n-            else:\n-                rv = self._load_unlocked()\n-            return rv(environ, start_response)\n-\n-\n class ScriptInfo:\n     """"""Helper object to deal with Flask applications.  This is usually not\n     necessary to interface with as it\'s used internally in the dispatching\n@@ -811,7 +741,7 @@ def load_dotenv(path: str | os.PathLike | None = None) -> bool:\n     return loaded  # True if at least one file was located and loaded.\n \n \n-def show_server_banner(env, debug, app_import_path, eager_loading):\n+def show_server_banner(env, debug, app_import_path):\n     """"""Show extra startup messages the first time the server is run,\n     ignoring the reloader.\n     """"""\n@@ -819,12 +749,7 @@ def show_server_banner(env, debug, app_import_path, eager_loading):\n         return\n \n     if app_import_path is not None:\n-        message = f"" * Serving Flask app {app_import_path!r}""\n-\n-        if not eager_loading:\n-            message += "" (lazy loading)""\n-\n-        click.echo(message)\n+        click.echo(f"" * Serving Flask app \'{app_import_path}\'"")\n \n     click.echo(f"" * Environment: {env}"")\n \n@@ -963,12 +888,6 @@ class SeparatedPathType(click.Path):\n     help=""Enable or disable the debugger. By default the debugger ""\n     ""is active if debug is enabled."",\n )\n-@click.option(\n-    ""--eager-loading/--lazy-loading"",\n-    default=None,\n-    help=""Enable or disable eager loading. By default eager ""\n-    ""loading is enabled if the reloader is disabled."",\n-)\n @click.option(\n     ""--with-threads/--without-threads"",\n     default=True,\n@@ -1000,7 +919,6 @@ def run_command(\n     port,\n     reload,\n     debugger,\n-    eager_loading,\n     with_threads,\n     cert,\n     extra_files,\n@@ -1014,7 +932,23 @@ def run_command(\n     The reloader and debugger are enabled by default with the\n     \'--env development\' or \'--debug\' options.\n     """"""\n-    app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n+    try:\n+        app = info.load_app()\n+    except Exception as e:\n+        if is_running_from_reloader():\n+            # When reloading, print out the error immediately, but raise\n+            # it later so the debugger or server can handle it.\n+            traceback.print_exc()\n+            err = e\n+\n+            def app(environ, start_response):\n+                raise err from None\n+\n+        else:\n+            # When not reloading, raise the error immediately so the\n+            # command fails.\n+            raise e from None\n+\n     debug = get_debug_flag()\n \n     if reload is None:\n@@ -1023,7 +957,7 @@ def run_command(\n     if debugger is None:\n         debugger = debug\n \n-    show_server_banner(get_env(), debug, info.app_import_path, eager_loading)\n+    show_server_banner(get_env(), debug, info.app_import_path)\n \n     from werkzeug.serving import run_simple\n \n'",4.05,4.314285714285714
tests/test_cli.py,tests/test_cli.py,5d8e35653fca0d7ee01519d556c7851089de82ea,095651be9eec58ddb0c2eb6158318b1c703c67c5,'refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.',"'@@ -1,7 +1,6 @@\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n import os\n-import platform\n import ssl\n import sys\n import types\n@@ -17,7 +16,6 @@ from flask import Blueprint\n from flask import current_app\n from flask import Flask\n from flask.cli import AppGroup\n-from flask.cli import DispatchingApp\n from flask.cli import find_best_app\n from flask.cli import FlaskGroup\n from flask.cli import get_version\n@@ -290,26 +288,6 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert app.name == ""testapp""\n \n \n-@pytest.mark.xfail(platform.python_implementation() == ""PyPy"", reason=""flaky on pypy"")\n-def test_lazy_load_error(monkeypatch):\n-    """"""When using lazy loading, the correct exception should be\n-    re-raised.\n-    """"""\n-\n-    class BadExc(Exception):\n-        pass\n-\n-    def bad_load():\n-        raise BadExc\n-\n-    lazy = DispatchingApp(bad_load, use_eager_loading=False)\n-\n-    # reduce flakiness by waiting for the internal loading lock\n-    with lazy._lock:\n-        with pytest.raises(BadExc):\n-            lazy._flush_bg_loading_exception()\n-\n-\n def test_app_cli_has_app_context(app, runner):\n     def _param_cb(ctx, param, value):\n         # current_app should be available in parameter callbacks\n'",1.0704225352112675,1.0724637681159421
src/flask/cli.py,src/flask/cli.py,7d53a129cf1b28f1a88491ae50877473b68bdb54,633f421031c9c18b56177b0d42adcb505b4627b1,'remove __traceback_hide__',"'@@ -214,8 +214,6 @@ def prepare_import(path):\n \n \n def locate_app(module_name, app_name, raise_if_not_found=True):\n-    __traceback_hide__ = True  # noqa: F841\n-\n     try:\n         __import__(module_name)\n     except ImportError:\n@@ -296,8 +294,6 @@ class ScriptInfo:\n         this multiple times will just result in the already loaded app to\n         be returned.\n         """"""\n-        __traceback_hide__ = True  # noqa: F841\n-\n         if self._loaded_app is not None:\n             return self._loaded_app\n \n'",4.314285714285714,4.314285714285714
CHANGES.rst,CHANGES.rst,ef95998d79eed3b8350d8db825e3d98f25c179f2,4c08e3a2ba3d42fbee63577bceedfe325f51b81d,'deprecate FLASK_ENV',"'@@ -23,6 +23,10 @@ Unreleased\n         ``g`` instead using a unique prefix, like\n         ``g._extension_name_attr``.\n \n+-   The ``FLASK_ENV`` environment variable and ``app.env`` attribute are\n+    deprecated, removing the distinction between development and debug\n+    mode. Debug mode should be controlled directly using the ``--debug``\n+    option or ``app.run(debug=True)``. :issue:`4714`\n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n \n@@ -60,9 +64,9 @@ Unreleased\n     instance on every request. :issue:`2520`.\n -   A ``flask.cli.FlaskGroup`` Click group can be nested as a\n     sub-command in a custom CLI. :issue:`3263`\n--   Add ``--app``, ``--env``, and ``--debug`` options to the ``flask``\n-    CLI, instead of requiring that they are set through environment\n-    variables. :issue:`2836`\n+-   Add ``--app`` and ``--debug`` options to the ``flask`` CLI, instead\n+    of requiring that they are set through environment variables.\n+    :issue:`2836`\n -   Add ``--env-file`` option to the ``flask`` CLI. This allows\n     specifying a dotenv file to load in addition to ``.env`` and\n     ``.flaskenv``. :issue:`3108`\n'",0,0
src/flask/app.py,src/flask/app.py,ef95998d79eed3b8350d8db825e3d98f25c179f2,4c08e3a2ba3d42fbee63577bceedfe325f51b81d,'deprecate FLASK_ENV',"'@@ -45,7 +45,6 @@ from .globals import request_ctx\n from .globals import session\n from .helpers import _split_blueprint_path\n from .helpers import get_debug_flag\n-from .helpers import get_env\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n from .helpers import locked_cached_property\n@@ -691,7 +690,7 @@ class Flask(Scaffold):\n         if instance_relative:\n             root_path = self.instance_path\n         defaults = dict(self.default_config)\n-        defaults[""ENV""] = get_env()\n+        defaults[""ENV""] = os.environ.get(""FLASK_ENV"") or ""development""\n         defaults[""DEBUG""] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n \n@@ -849,31 +848,50 @@ class Flask(Scaffold):\n             rv.update(processor())\n         return rv\n \n-    #: What environment the app is running in. Flask and extensions may\n-    #: enable behaviors based on the environment, such as enabling debug\n-    #: mode. This maps to the :data:`ENV` config key. This is set by the\n-    #: :envvar:`FLASK_ENV` environment variable and may not behave as\n-    #: expected if set in code.\n-    #:\n-    #: **Do not enable development when deploying in production.**\n-    #:\n-    #: Default: ``\'production\'``\n-    env = ConfigAttribute(""ENV"")\n+    @property\n+    def env(self) -> str:\n+        """"""What environment the app is running in. This maps to the :data:`ENV` config\n+        key.\n+\n+        **Do not enable development when deploying in production.**\n+\n+        Default: ``\'production\'``\n+\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3.\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.env\' is deprecated and will be removed in Flask 2.3.""\n+            "" Use \'app.debug\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self.config[""ENV""]\n+\n+    @env.setter\n+    def env(self, value: str) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.env\' is deprecated and will be removed in Flask 2.3.""\n+            "" Use \'app.debug\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self.config[""ENV""] = value\n \n     @property\n     def debug(self) -> bool:\n-        """"""Whether debug mode is enabled. When using ``flask run`` to start\n-        the development server, an interactive debugger will be shown for\n-        unhandled exceptions, and the server will be reloaded when code\n-        changes. This maps to the :data:`DEBUG` config key. This is\n-        enabled when :attr:`env` is ``\'development\'`` and is overridden\n-        by the ``FLASK_DEBUG`` environment variable. It may not behave as\n-        expected if set in code.\n+        """"""Whether debug mode is enabled. When using ``flask run`` to start the\n+        development server, an interactive debugger will be shown for unhandled\n+        exceptions, and the server will be reloaded when code changes. This maps to the\n+        :data:`DEBUG` config key. It may not behave as expected if set late.\n \n         **Do not enable debug mode when deploying in production.**\n \n-        Default: ``True`` if :attr:`env` is ``\'development\'``, or\n-        ``False`` otherwise.\n+        Default: ``False``\n         """"""\n         return self.config[""DEBUG""]\n \n@@ -937,9 +955,7 @@ class Flask(Scaffold):\n             If installed, python-dotenv will be used to load environment\n             variables from :file:`.env` and :file:`.flaskenv` files.\n \n-            If set, the :envvar:`FLASK_ENV` and :envvar:`FLASK_DEBUG`\n-            environment variables will override :attr:`env` and\n-            :attr:`debug`.\n+            The :envvar:`FLASK_DEBUG` environment variable will override :attr:`debug`.\n \n             Threaded mode is enabled by default.\n \n@@ -966,7 +982,12 @@ class Flask(Scaffold):\n \n             # if set, let env vars override previous values\n             if ""FLASK_ENV"" in os.environ:\n-                self.env = get_env()\n+                print(\n+                    ""\'FLASK_ENV\' is deprecated and will not be used in""\n+                    "" Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n+                    file=sys.stderr,\n+                )\n+                self.config[""ENV""] = os.environ.get(""FLASK_ENV"") or ""production""\n                 self.debug = get_debug_flag()\n             elif ""FLASK_DEBUG"" in os.environ:\n                 self.debug = get_debug_flag()\n@@ -998,7 +1019,7 @@ class Flask(Scaffold):\n         options.setdefault(""use_debugger"", self.debug)\n         options.setdefault(""threaded"", True)\n \n-        cli.show_server_banner(self.env, self.debug, self.name)\n+        cli.show_server_banner(self.debug, self.name)\n \n         from werkzeug.serving import run_simple\n \n'",3.2318840579710146,3.1971830985915495
src/flask/cli.py,src/flask/cli.py,ef95998d79eed3b8350d8db825e3d98f25c179f2,4c08e3a2ba3d42fbee63577bceedfe325f51b81d,'deprecate FLASK_ENV',"'@@ -13,12 +13,12 @@ from operator import attrgetter\n \n import click\n from click.core import ParameterSource\n+from werkzeug import run_simple\n from werkzeug.serving import is_running_from_reloader\n from werkzeug.utils import import_string\n \n from .globals import current_app\n from .helpers import get_debug_flag\n-from .helpers import get_env\n from .helpers import get_load_dotenv\n \n if t.TYPE_CHECKING:\n@@ -418,29 +418,6 @@ _app_option = click.Option(\n )\n \n \n-def _set_env(ctx: click.Context, param: click.Option, value: str | None) -> str | None:\n-    if value is None:\n-        return None\n-\n-    # Set with env var instead of ScriptInfo.load so that it can be\n-    # accessed early during a factory function.\n-    os.environ[""FLASK_ENV""] = value\n-    return value\n-\n-\n-_env_option = click.Option(\n-    [""-E"", ""--env""],\n-    metavar=""NAME"",\n-    help=(\n-        ""The execution environment name to set in \'app.env\'. Defaults to""\n-        "" \'production\'. \'development\' will enable \'app.debug\' and start the""\n-        "" debugger and reloader when running the server.""\n-    ),\n-    expose_value=False,\n-    callback=_set_env,\n-)\n-\n-\n def _set_debug(ctx: click.Context, param: click.Option, value: bool) -> bool | None:\n     # If the flag isn\'t provided, it will default to False. Don\'t use\n     # that, let debug be set by env in that case.\n@@ -460,7 +437,7 @@ def _set_debug(ctx: click.Context, param: click.Option, value: bool) -> bool | N\n \n _debug_option = click.Option(\n     [""--debug/--no-debug""],\n-    help=""Set \'app.debug\' separately from \'--env\'."",\n+    help=""Set debug mode."",\n     expose_value=False,\n     callback=_set_debug,\n )\n@@ -516,12 +493,10 @@ class FlaskGroup(AppGroup):\n     :param load_dotenv: Load the nearest :file:`.env` and :file:`.flaskenv`\n         files to set environment variables. Will also change the working\n         directory to the directory containing the first file found.\n-    :param set_debug_flag: Set the app\'s debug flag based on the active\n-        environment\n+    :param set_debug_flag: Set the app\'s debug flag.\n \n     .. versionchanged:: 2.2\n-        Added the ``-A/--app``, ``-E/--env``, ``--debug/--no-debug``,\n-        and ``-e/--env-file`` options.\n+        Added the ``-A/--app``, ``--debug/--no-debug``, ``-e/--env-file`` options.\n \n     .. versionchanged:: 2.2\n         An app context is pushed when running ``app.cli`` commands, so\n@@ -546,7 +521,7 @@ class FlaskGroup(AppGroup):\n         # callback. This allows users to make a custom group callback\n         # without losing the behavior. --env-file must come first so\n         # that it is eagerly evaluated before --app.\n-        params.extend((_env_file_option, _app_option, _env_option, _debug_option))\n+        params.extend((_env_file_option, _app_option, _debug_option))\n \n         if add_version_option:\n             params.append(version_option)\n@@ -737,26 +712,23 @@ def load_dotenv(path: str | os.PathLike | None = None) -> bool:\n     return loaded  # True if at least one file was located and loaded.\n \n \n-def show_server_banner(env, debug, app_import_path):\n+def show_server_banner(debug, app_import_path):\n     """"""Show extra startup messages the first time the server is run,\n     ignoring the reloader.\n     """"""\n     if is_running_from_reloader():\n         return\n \n+    click.secho(\n+        ""WARNING: This is a development server. Do not use it in a production""\n+        "" deployment. Use a production WSGI server instead."",\n+        fg=""red"",\n+        bold=True,\n+    )\n+\n     if app_import_path is not None:\n         click.echo(f"" * Serving Flask app \'{app_import_path}\'"")\n \n-    click.echo(f"" * Environment: {env}"")\n-\n-    if env == ""production"":\n-        click.secho(\n-            ""   WARNING: This is a development server. Do not use it in""\n-            "" a production deployment.\\n   Use a production WSGI server""\n-            "" instead."",\n-            fg=""red"",\n-        )\n-\n     if debug is not None:\n         click.echo(f"" * Debug mode: {\'on\' if debug else \'off\'}"")\n \n@@ -925,8 +897,8 @@ def run_command(\n     This server is for development purposes only. It does not provide\n     the stability, security, or performance of production WSGI servers.\n \n-    The reloader and debugger are enabled by default with the\n-    \'--env development\' or \'--debug\' options.\n+    The reloader and debugger are enabled by default with the \'--debug\'\n+    option.\n     """"""\n     try:\n         app = info.load_app()\n@@ -953,9 +925,7 @@ def run_command(\n     if debugger is None:\n         debugger = debug\n \n-    show_server_banner(get_env(), debug, info.app_import_path)\n-\n-    from werkzeug.serving import run_simple\n+    show_server_banner(debug, info.app_import_path)\n \n     run_simple(\n         host,\n'",4.314285714285714,4.352941176470588
src/flask/helpers.py,src/flask/helpers.py,ef95998d79eed3b8350d8db825e3d98f25c179f2,4c08e3a2ba3d42fbee63577bceedfe325f51b81d,'deprecate FLASK_ENV',"'@@ -29,22 +29,41 @@ def get_env() -> str:\n     """"""Get the environment the app is running in, indicated by the\n     :envvar:`FLASK_ENV` environment variable. The default is\n     ``\'production\'``.\n+\n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3.\n     """"""\n+    import warnings\n+\n+    warnings.warn(\n+        ""\'FLASK_ENV\' and \'get_env\' are deprecated and will be removed""\n+        "" in Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n     return os.environ.get(""FLASK_ENV"") or ""production""\n \n \n def get_debug_flag() -> bool:\n-    """"""Get whether debug mode should be enabled for the app, indicated\n-    by the :envvar:`FLASK_DEBUG` environment variable. The default is\n-    ``True`` if :func:`.get_env` returns ``\'development\'``, or ``False``\n-    otherwise.\n+    """"""Get whether debug mode should be enabled for the app, indicated by the\n+    :envvar:`FLASK_DEBUG` environment variable. The default is ``False``.\n     """"""\n     val = os.environ.get(""FLASK_DEBUG"")\n \n     if not val:\n-        return get_env() == ""development""\n+        env = os.environ.get(""FLASK_ENV"")\n+\n+        if env is not None:\n+            print(\n+                ""\'FLASK_ENV\' is deprecated and will not be used in""\n+                "" Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n+                file=sys.stderr,\n+            )\n+            return env == ""development""\n+\n+        return False\n \n-    return val.lower() not in (""0"", ""false"", ""no"")\n+    return val.lower() not in {""0"", ""false"", ""no""}\n \n \n def get_load_dotenv(default: bool = True) -> bool:\n'",2.217391304347826,2.260869565217391
tests/test_helpers.py,tests/test_helpers.py,ef95998d79eed3b8350d8db825e3d98f25c179f2,4c08e3a2ba3d42fbee63577bceedfe325f51b81d,'deprecate FLASK_ENV',"'@@ -6,7 +6,6 @@ import werkzeug.exceptions\n \n import flask\n from flask.helpers import get_debug_flag\n-from flask.helpers import get_env\n \n \n class FakePath:\n@@ -322,20 +321,6 @@ class TestHelpers:\n             assert get_debug_flag() == expected_flag\n         assert get_debug_flag() == expected_default_flag\n \n-    @pytest.mark.parametrize(\n-        ""env, ref_env, debug"",\n-        [\n-            ("""", ""production"", False),\n-            (""production"", ""production"", False),\n-            (""development"", ""development"", True),\n-            (""other"", ""other"", False),\n-        ],\n-    )\n-    def test_get_env(self, monkeypatch, env, ref_env, debug):\n-        monkeypatch.setenv(""FLASK_ENV"", env)\n-        assert get_debug_flag() == debug\n-        assert get_env() == ref_env\n-\n     def test_make_response(self):\n         app = flask.Flask(__name__)\n         with app.test_request_context():\n'",1.065217391304348,1.0666666666666667
docs/cli.rst,docs/cli.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"'@@ -71,7 +71,7 @@ Run the Development Server\n The :func:`run <cli.run_command>` command will start the development server. It\n replaces the :meth:`Flask.run` method in most cases. ::\n \n-    $ flask run\n+    $ flask --app hello run\n      * Serving Flask app ""hello""\n      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n \n@@ -86,43 +86,17 @@ server tries to start. See :ref:`address-already-in-use` for how to\n handle that.\n \n \n-Open a Shell\n-------------\n-\n-To explore the data in your application, you can start an interactive Python\n-shell with the :func:`shell <cli.shell_command>` command. An application\n-context will be active, and the app instance will be imported. ::\n-\n-    $ flask shell\n-    Python 3.10.0 (default, Oct 27 2021, 06:59:51) [GCC 11.1.0] on linux\n-    App: example [production]\n-    Instance: /home/david/Projects/pallets/flask/instance\n-    >>>\n-\n-Use :meth:`~Flask.shell_context_processor` to add other automatic imports.\n-\n-\n-Environments\n-------------\n-\n-.. versionadded:: 1.0\n-\n-The environment in which the Flask app executes is set by the\n-``FLASK_ENV`` environment variable. When using the ``flask`` command, it\n-can also be set with the ``--env`` option. If not set it defaults to\n-``production``. The other recognized environment is ``development``.\n-Flask and extensions may choose to enable behaviors based on the\n-environment.\n+Debug Mode\n+~~~~~~~~~~\n \n-If the env is set to ``development``, the ``flask`` command will enable\n-debug mode and ``flask run`` will enable the interactive debugger and\n-reloader.\n+In debug mode, the ``flask run`` command will enable the interactive debugger and the\n+reloader by default, and make errors easier to see and debug. To enable debug mode, use\n+the ``--debug`` option.\n \n-.. code-block:: text\n+.. code-block:: console\n \n-     $ flask --app hello --env development run\n+     $ flask --app hello --debug run\n       * Serving Flask app ""hello""\n-      * Environment: development\n       * Debug mode: on\n       * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n       * Restarting with inotify reloader\n@@ -130,13 +104,12 @@ reloader.\n       * Debugger PIN: 223-456-919\n \n \n-Watch Extra Files with the Reloader\n-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+Watch and Ignore Files with the Reloader\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-When using development mode, the reloader will trigger whenever your\n-Python code or imported modules change. The reloader can watch\n-additional files with the ``--extra-files`` option. Multiple paths are\n-separated with ``:``, or ``;`` on Windows.\n+When using debug mode, the reloader will trigger whenever your Python code or imported\n+modules change. The reloader can watch additional files with the ``--extra-files``\n+option. Multiple paths are separated with ``:``, or ``;`` on Windows.\n \n .. code-block:: text\n \n@@ -144,22 +117,25 @@ separated with ``:``, or ``;`` on Windows.\n      * Running on http://127.0.0.1:8000/\n      * Detected change in \'/path/to/file1\', reloading\n \n+The reloader can also ignore files using :mod:`fnmatch` patterns with the\n+``--exclude-patterns`` option. Multiple patterns are separated with ``:``, or ``;`` on\n+Windows.\n \n-Ignore files with the Reloader\n-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-The reloader can also ignore files using :mod:`fnmatch` patterns with\n-the ``--exclude-patterns`` option. Multiple patterns are separated with\n-``:``, or ``;`` on Windows.\n+Open a Shell\n+------------\n \n+To explore the data in your application, you can start an interactive Python\n+shell with the :func:`shell <cli.shell_command>` command. An application\n+context will be active, and the app instance will be imported. ::\n \n-Debug Mode\n-----------\n+    $ flask shell\n+    Python 3.10.0 (default, Oct 27 2021, 06:59:51) [GCC 11.1.0] on linux\n+    App: example [production]\n+    Instance: /home/david/Projects/pallets/flask/instance\n+    >>>\n \n-Debug mode will be enabled when the execution environment is\n-``development``, as described above. If you want to control debug mode\n-separately, use the ``--debug/--no-debug`` option or the ``FLASK_DEBUG``\n-environment variable.\n+Use :meth:`~Flask.shell_context_processor` to add other automatic imports.\n \n \n .. _dotenv:\n'",1.0,1.0
docs/config.rst,docs/config.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"""@@ -42,38 +42,22 @@ method::\n     )\n \n \n-Environment and Debug Features\n-------------------------------\n+Debug Mode\n+----------\n \n-The :data:`ENV` and :data:`DEBUG` config values are special because they\n-may behave inconsistently if changed after the app has begun setting up.\n-In order to set the environment and debug mode reliably, pass options to\n-the ``flask`` command or use environment variables.\n-\n-The execution environment is used to indicate to Flask, extensions, and\n-other programs, like Sentry, what context Flask is running in. It is\n-controlled with the ``FLASK_ENV`` environment variable, or the\n-``--env`` option when using the ``flask`` command, and defaults to\n-``production``.\n-\n-Setting ``--env development`` will enable debug mode. ``flask run`` will\n-use the interactive debugger and reloader by default in debug mode. To\n-control this separately from the environment, use the\n-``--debug/--no-debug`` option or the ``FLASK_DEBUG`` environment\n-variable.\n-\n-To switch Flask to the development environment and enable debug mode,\n-set ``--env``:\n+The :data:`DEBUG` config value is special because it may behave inconsistently if\n+changed after the app has begun setting up. In order to set debug mode reliably, use the\n+``--debug`` option on the ``flask`` command.``flask run`` will use the interactive\n+debugger and reloader by default in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --env development run\n+    $ flask --app hello --debug run\n \n-Using the options or environment variables as described above is\n-recommended. While it is possible to set :data:`ENV` and :data:`DEBUG`\n-in your config or code, this is strongly discouraged. They can't be read\n-early by the ``flask`` command, and some systems or extensions may have\n-already configured themselves based on a previous value.\n+Using the option is recommended. While it is possible to set :data:`DEBUG` in your\n+config or code, this is strongly discouraged. It can't be read early by the ``flask``\n+command, and some systems or extensions may have already configured themselves based on\n+a previous value.\n \n \n Builtin Configuration Values\n@@ -83,32 +67,27 @@ The following configuration values are used internally by Flask:\n \n .. py:data:: ENV\n \n-    What environment the app is running in. Flask and extensions may\n-    enable behaviors based on the environment, such as enabling debug\n-    mode. The :attr:`~flask.Flask.env` attribute maps to this config\n-    key. This is set by the :envvar:`FLASK_ENV` environment variable and\n-    may not behave as expected if set in code.\n-\n-    **Do not enable development when deploying in production.**\n+    What environment the app is running in. The :attr:`~flask.Flask.env` attribute maps\n+    to this config key.\n \n     Default: ``'production'``\n \n+    .. deprecated:: 2.2\n+        Will be removed in Flask 2.3. Use ``--debug`` instead.\n+\n     .. versionadded:: 1.0\n \n .. py:data:: DEBUG\n \n-    Whether debug mode is enabled. When using ``flask run`` to start the\n-    development server, an interactive debugger will be shown for\n-    unhandled exceptions, and the server will be reloaded when code\n-    changes. The :attr:`~flask.Flask.debug` attribute maps to this\n-    config key. This is enabled when :data:`ENV` is ``'development'``\n-    and is overridden by the ``FLASK_DEBUG`` environment variable. It\n-    may not behave as expected if set in code.\n+    Whether debug mode is enabled. When using ``flask run`` to start the development\n+    server, an interactive debugger will be shown for unhandled exceptions, and the\n+    server will be reloaded when code changes. The :attr:`~flask.Flask.debug` attribute\n+    maps to this config key. This is set with the ``FLASK_DEBUG`` environment variable.\n+    It may not behave as expected if set in code.\n \n     **Do not enable debug mode when deploying in production.**\n \n-    Default: ``True`` if :data:`ENV` is ``'development'``, or ``False``\n-    otherwise.\n+    Default: ``False``\n \n .. py:data:: TESTING\n \n@@ -408,6 +387,9 @@ The following configuration values are used internally by Flask:\n     removed in Flask 2.3. The default ``app.json`` provider has\n     equivalent attributes instead.\n \n+.. versionchanged:: 2.2\n+    ``ENV`` will be removed in Flask 2.3. Use ``--debug`` instead.\n+\n \n Configuring from Python Files\n -----------------------------\n""",1.0,1.0
docs/debugging.rst,docs/debugging.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"'@@ -39,28 +39,22 @@ during a request. This debugger should only be used during development.\n     security risk. Do not run the development server or debugger in a\n     production environment.\n \n-To enable the debugger, run the development server with the environment\n-set to ``development``. This puts Flask in debug mode, which changes how\n-it handles some errors, and enables the debugger and reloader.\n+The debugger is enabled by default when the development server is run in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --env development run\n+    $ flask --app hello --debug run\n \n-``FLASK_ENV`` can also be set as an environment variable. When running\n-from Python code, passing ``debug=True`` enables debug mode, which is\n-mostly equivalent. Debug mode can be controlled separately from the\n-environment with the ``--debug/--no-debug`` option or the\n-``FLASK_DEBUG`` environment variable.\n+When running from Python code, passing ``debug=True`` enables debug mode, which is\n+mostly equivalent.\n \n .. code-block:: python\n \n     app.run(debug=True)\n \n-:doc:`/server` and :doc:`/cli` have more information about running the\n-debugger, debug mode, and development mode. More information about the\n-debugger can be found in the `Werkzeug documentation\n-<https://werkzeug.palletsprojects.com/debug/>`__.\n+:doc:`/server` and :doc:`/cli` have more information about running the debugger and\n+debug mode. More information about the debugger can be found in the `Werkzeug\n+documentation <https://werkzeug.palletsprojects.com/debug/>`__.\n \n \n External Debuggers\n@@ -78,7 +72,7 @@ which can interfere.\n \n .. code-block:: text\n \n-    $ flask --app hello --env development run --no-debugger --no-reload\n+    $ flask --app hello --debug run --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"""@@ -104,14 +104,12 @@ error occurs during a request.\n     security risk. Do not run the development server or debugger in a\n     production environment.\n \n-To enable all development features, set the ``--env`` option to\n-``development``.\n+To enable debug mode, use the ``--debug`` option.\n \n .. code-block:: text\n \n-    $ flask --app hello --env development run\n+    $ flask --app hello --debug run\n      * Serving Flask app 'hello'\n-     * Environment: development\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n      * Restarting with stat\n@@ -120,8 +118,7 @@ To enable all development features, set the ``--env`` option to\n \n See also:\n \n--   :doc:`/server` and :doc:`/cli` for information about running in\n-    development mode.\n+-   :doc:`/server` and :doc:`/cli` for information about running in debug mode.\n -   :doc:`/debugging` for information about using the built-in debugger\n     and other debuggers.\n -   :doc:`/logging` and :doc:`/errorhandling` to log errors and display\n""",1.1764705882352942,1.1764705882352942
docs/server.rst,docs/server.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"'@@ -3,9 +3,9 @@\n Development Server\n ==================\n \n-Flask provides a ``run`` command to run the application with a\n-development server. In development mode, this server provides an\n-interactive debugger and will reload when code is changed.\n+Flask provides a ``run`` command to run the application with a development server. In\n+debug mode, this server provides an interactive debugger and will reload when code is\n+changed.\n \n .. warning::\n \n@@ -18,65 +18,18 @@ interactive debugger and will reload when code is changed.\n Command Line\n ------------\n \n-The ``flask run`` command line script is the recommended way to run the\n-development server. Use the ``--app`` option to point to your\n-application, and the ``--env development`` option to fully enable\n-development mode.\n+The ``flask run`` CLI command is the recommended way to run the development server. Use\n+the ``--app`` option to point to your application, and the ``--debug`` option to enable\n+debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --env development run\n+    $ flask --app hello --debug run\n \n-These options (and any others) can also be set using environment\n-variables.\n-\n-.. tabs::\n-\n-   .. group-tab:: Bash\n-\n-      .. code-block:: text\n-\n-         $ export FLASK_APP=hello\n-         $ export FLASK_ENV=development\n-         $ flask run\n-\n-   .. group-tab:: Fish\n-\n-      .. code-block:: text\n-\n-         $ set -x FLASK_APP hello\n-         $ export FLASK_ENV=development\n-         $ flask run\n-\n-   .. group-tab:: CMD\n-\n-      .. code-block:: text\n-\n-         > set FLASK_APP=hello\n-         > set FLASK_ENV=development\n-         > flask run\n-\n-   .. group-tab:: Powershell\n-\n-      .. code-block:: text\n-\n-         > $env:FLASK_APP = ""hello""\n-         > $env:FLASK_ENV = ""development""\n-         > flask run\n-\n-This enables the development environment, including the interactive\n-debugger and reloader, and then starts the server on\n-http://localhost:5000/. Use ``flask run --help`` to see the available\n-options, and  :doc:`/cli` for detailed instructions about configuring\n-and using the CLI.\n-\n-.. note::\n-\n-    Debug mode can be controlled separately from the development\n-    environment with the ``--debug/--no-debug`` option or the\n-    ``FLASK_DEBUG`` environment variable. This is how older versions of\n-    Flask worked. You should prefer setting the development environment\n-    as shown above.\n+This enables debug mode, including the interactive debugger and reloader, and then\n+starts the server on http://localhost:5000/. Use ``flask run --help`` to see the\n+available options, and :doc:`/cli` for detailed instructions about configuring and using\n+the CLI.\n \n \n .. _address-already-in-use:\n@@ -144,18 +97,13 @@ while still allowing the server to handle errors on reload.\n In Code\n -------\n \n-As an alternative to the ``flask run`` command, the development server\n-can also be started from Python with the :meth:`Flask.run` method. This\n-method takes arguments similar to the CLI options to control the server.\n-The main difference from the CLI command is that the server will crash\n-if there are errors when reloading.\n-\n-``debug=True`` can be passed to enable the debugger and reloader, but\n-the ``FLASK_ENV=development`` environment variable is still required to\n-fully enable development mode.\n+The development server can also be started from Python with the :meth:`Flask.run`\n+method. This method takes arguments similar to the CLI options to control the server.\n+The main difference from the CLI command is that the server will crash if there are\n+errors when reloading. ``debug=True`` can be passed to enable debug mode.\n \n-Place the call in a main block, otherwise it will interfere when trying\n-to import and run the application with a production server later.\n+Place the call in a main block, otherwise it will interfere when trying to import and\n+run the application with a production server later.\n \n .. code-block:: python\n \n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"'@@ -127,24 +127,23 @@ Run The Application\n \n Now you can run your application using the ``flask`` command. From the\n terminal, tell Flask where to find your application, then run it in\n-development mode. Remember, you should still be in the top-level\n+debug mode. Remember, you should still be in the top-level\n ``flask-tutorial`` directory, not the ``flaskr`` package.\n \n-Development mode shows an interactive debugger whenever a page raises an\n+Debug mode shows an interactive debugger whenever a page raises an\n exception, and restarts the server whenever you make changes to the\n code. You can leave it running and just reload the browser page as you\n follow the tutorial.\n \n .. code-block:: text\n \n-    $ flask --app flaskr --env development run\n+    $ flask --app flaskr --debug run\n \n You\'ll see output similar to this:\n \n .. code-block:: text\n \n      * Serving Flask app ""flaskr""\n-     * Environment: development\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n      * Restarting with stat\n'",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,30427a209043bfb9730904e0c34b0dbc40bd21f4,ef95998d79eed3b8350d8db825e3d98f25c179f2,'remove FLASK_ENV from docs',"'@@ -48,7 +48,7 @@ Run\n .. code-block:: text\n \n     $ flask --app flaskr init-db\n-    $ flask --app flaskr --env development run\n+    $ flask --app flaskr --debug run\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,6f9ef112865eae12684aa74924ee08504044a62d,363be75e8401350d4f1b131723991d382fce83c6,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.37.1 → v2.37.3](https://github.com/asottile/pyupgrade/compare/v2.37.1...v2.37.3)\n- [github.com/asottile/reorder_python_imports: v3.8.1 → v3.8.2](https://github.com/asottile/reorder_python_imports/compare/v3.8.1...v3.8.2)\n- [github.com/PyCQA/flake8: 4.0.1 → 5.0.2](https://github.com/PyCQA/flake8/compare/4.0.1...5.0.2)\n- [github.com/peterdemin/pip-compile-multi: v2.4.5 → v2.4.6](https://github.com/peterdemin/pip-compile-multi/compare/v2.4.5...v2.4.6)',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.37.1\n+    rev: v2.37.3\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.8.1\n+    rev: v3.8.2\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n@@ -20,14 +20,14 @@ repos:\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 4.0.1\n+    rev: 5.0.2\n     hooks:\n       - id: flake8\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.4.5\n+    rev: v2.4.6\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
CHANGES.rst,CHANGES.rst,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -27,6 +27,11 @@ Unreleased\n     deprecated, removing the distinction between development and debug\n     mode. Debug mode should be controlled directly using the ``--debug``\n     option or ``app.run(debug=True)``. :issue:`4714`\n+-   Some attributes that proxied config keys on ``app`` are deprecated:\n+    ``session_cookie_name``, ``send_file_max_age_default``,\n+    ``use_x_sendfile``, ``propagate_exceptions``, and\n+    ``templates_auto_reload``. Use the relevant config keys instead.\n+    :issue:`4716`\n -   Add new customization points to the ``Flask`` app object for many\n     previously global behaviors.\n \n'",0,0
docs/api.rst,docs/api.rst,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -125,10 +125,9 @@ implementation that Flask is using.\n \n .. admonition:: Notice\n \n-   The ``PERMANENT_SESSION_LIFETIME`` config key can also be an integer\n-   starting with Flask 0.8.  Either catch this down yourself or use\n-   the :attr:`~flask.Flask.permanent_session_lifetime` attribute on the\n-   app which converts the result to an integer automatically.\n+    The :data:`PERMANENT_SESSION_LIFETIME` config can be an integer or ``timedelta``.\n+    The :attr:`~flask.Flask.permanent_session_lifetime` attribute is always a\n+    ``timedelta``.\n \n \n Test Client\n'",1.5,1.5
src/flask/app.py,src/flask/app.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -99,7 +99,7 @@ else:\n         return inspect.iscoroutinefunction(func)\n \n \n-def _make_timedelta(value: t.Optional[timedelta]) -> t.Optional[timedelta]:\n+def _make_timedelta(value: t.Union[timedelta, int, None]) -> t.Optional[timedelta]:\n     if value is None or isinstance(value, timedelta):\n         return value\n \n@@ -273,11 +273,35 @@ class Flask(Scaffold):\n     #: :data:`SECRET_KEY` configuration key. Defaults to ``None``.\n     secret_key = ConfigAttribute(""SECRET_KEY"")\n \n-    #: The secure cookie uses this for the name of the session cookie.\n-    #:\n-    #: This attribute can also be configured from the config with the\n-    #: ``SESSION_COOKIE_NAME`` configuration key.  Defaults to ``\'session\'``\n-    session_cookie_name = ConfigAttribute(""SESSION_COOKIE_NAME"")\n+    @property\n+    def session_cookie_name(self) -> str:\n+        """"""The name of the cookie set by the session interface.\n+\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Use ``app.config[""SESSION_COOKIE_NAME""]``\n+            instead.\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'session_cookie_name\' is deprecated and will be removed in Flask 2.3. Use""\n+            "" \'SESSION_COOKIE_NAME\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self.config[""SESSION_COOKIE_NAME""]\n+\n+    @session_cookie_name.setter\n+    def session_cookie_name(self, value: str) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'session_cookie_name\' is deprecated and will be removed in Flask 2.3. Use""\n+            "" \'SESSION_COOKIE_NAME\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self.config[""SESSION_COOKIE_NAME""] = value\n \n     #: A :class:`~datetime.timedelta` which is used to set the expiration\n     #: date of a permanent session.  The default is 31 days which makes a\n@@ -290,29 +314,70 @@ class Flask(Scaffold):\n         ""PERMANENT_SESSION_LIFETIME"", get_converter=_make_timedelta\n     )\n \n-    #: A :class:`~datetime.timedelta` or number of seconds which is used\n-    #: as the default ``max_age`` for :func:`send_file`. The default is\n-    #: ``None``, which tells the browser to use conditional requests\n-    #: instead of a timed cache.\n-    #:\n-    #: Configured with the :data:`SEND_FILE_MAX_AGE_DEFAULT`\n-    #: configuration key.\n-    #:\n-    #: .. versionchanged:: 2.0\n-    #:     Defaults to ``None`` instead of 12 hours.\n-    send_file_max_age_default = ConfigAttribute(\n-        ""SEND_FILE_MAX_AGE_DEFAULT"", get_converter=_make_timedelta\n-    )\n+    @property\n+    def send_file_max_age_default(self) -> t.Optional[timedelta]:\n+        """"""The default value for ``max_age`` for :func:`~flask.send_file`. The default\n+        is ``None``, which tells the browser to use conditional requests instead of a\n+        timed cache.\n \n-    #: Enable this if you want to use the X-Sendfile feature.  Keep in\n-    #: mind that the server has to support this.  This only affects files\n-    #: sent with the :func:`send_file` method.\n-    #:\n-    #: .. versionadded:: 0.2\n-    #:\n-    #: This attribute can also be configured from the config with the\n-    #: ``USE_X_SENDFILE`` configuration key.  Defaults to ``False``.\n-    use_x_sendfile = ConfigAttribute(""USE_X_SENDFILE"")\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Use\n+            ``app.config[""SEND_FILE_MAX_AGE_DEFAULT""]`` instead.\n+\n+        .. versionchanged:: 2.0\n+            Defaults to ``None`` instead of 12 hours.\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'send_file_max_age_default\' is deprecated and will be removed in Flask""\n+            "" 2.3. Use \'SEND_FILE_MAX_AGE_DEFAULT\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return _make_timedelta(self.config[""SEND_FILE_MAX_AGE_DEFAULT""])\n+\n+    @send_file_max_age_default.setter\n+    def send_file_max_age_default(self, value: t.Union[int, timedelta, None]) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'send_file_max_age_default\' is deprecated and will be removed in Flask""\n+            "" 2.3. Use \'SEND_FILE_MAX_AGE_DEFAULT\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self.config[""SEND_FILE_MAX_AGE_DEFAULT""] = _make_timedelta(value)\n+\n+    @property\n+    def use_x_sendfile(self) -> bool:\n+        """"""Enable this to use the ``X-Sendfile`` feature, assuming the server supports\n+        it, from :func:`~flask.send_file`.\n+\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Use ``app.config[""USE_X_SENDFILE""]`` instead.\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'use_x_sendfile\' is deprecated and will be removed in Flask 2.3. Use""\n+            "" \'USE_X_SENDFILE\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self.config[""USE_X_SENDFILE""]\n+\n+    @use_x_sendfile.setter\n+    def use_x_sendfile(self, value: bool) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'use_x_sendfile\' is deprecated and will be removed in Flask 2.3. Use""\n+            "" \'USE_X_SENDFILE\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self.config[""USE_X_SENDFILE""] = value\n \n     #: The JSON encoder class to use. Defaults to\n     #: :class:`~flask.json.JSONEncoder`.\n@@ -624,8 +689,18 @@ class Flask(Scaffold):\n         """"""Returns the value of the ``PROPAGATE_EXCEPTIONS`` configuration\n         value in case it\'s set, otherwise a sensible default is returned.\n \n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3.\n+\n         .. versionadded:: 0.7\n         """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'propagate_exceptions\' is deprecated and will be removed in Flask 2.3."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         rv = self.config[""PROPAGATE_EXCEPTIONS""]\n         if rv is not None:\n             return rv\n@@ -734,20 +809,37 @@ class Flask(Scaffold):\n     @property\n     def templates_auto_reload(self) -> bool:\n         """"""Reload templates when they are changed. Used by\n-        :meth:`create_jinja_environment`.\n+        :meth:`create_jinja_environment`. It is enabled by default in debug mode.\n \n-        This attribute can be configured with :data:`TEMPLATES_AUTO_RELOAD`. If\n-        not set, it will be enabled in debug mode.\n+        .. deprecated:: 2.2\n+            Will be removed in Flask 2.3. Use ``app.config[""TEMPLATES_AUTO_RELOAD""]``\n+            instead.\n \n         .. versionadded:: 1.0\n             This property was added but the underlying config and behavior\n             already existed.\n         """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'templates_auto_reload\' is deprecated and will be removed in Flask 2.3.""\n+            "" Use \'TEMPLATES_AUTO_RELOAD\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         rv = self.config[""TEMPLATES_AUTO_RELOAD""]\n         return rv if rv is not None else self.debug\n \n     @templates_auto_reload.setter\n     def templates_auto_reload(self, value: bool) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'templates_auto_reload\' is deprecated and will be removed in Flask 2.3.""\n+            "" Use \'TEMPLATES_AUTO_RELOAD\' in \'app.config\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         self.config[""TEMPLATES_AUTO_RELOAD""] = value\n \n     def create_jinja_environment(self) -> Environment:\n@@ -768,7 +860,12 @@ class Flask(Scaffold):\n             options[""autoescape""] = self.select_jinja_autoescape\n \n         if ""auto_reload"" not in options:\n-            options[""auto_reload""] = self.templates_auto_reload\n+            auto_reload = self.config[""TEMPLATES_AUTO_RELOAD""]\n+\n+            if auto_reload is None:\n+                auto_reload = self.debug\n+\n+            options[""auto_reload""] = auto_reload\n \n         rv = self.jinja_environment(self, **options)\n         rv.globals.update(\n@@ -898,7 +995,9 @@ class Flask(Scaffold):\n     @debug.setter\n     def debug(self, value: bool) -> None:\n         self.config[""DEBUG""] = value\n-        self.jinja_env.auto_reload = self.templates_auto_reload\n+\n+        if self.config[""TEMPLATES_AUTO_RELOAD""] is None:\n+            self.jinja_env.auto_reload = value\n \n     def run(\n         self,\n@@ -1541,8 +1640,12 @@ class Flask(Scaffold):\n         """"""\n         exc_info = sys.exc_info()\n         got_request_exception.send(self, exception=e)\n+        propagate = self.config[""PROPAGATE_EXCEPTIONS""]\n+\n+        if propagate is None:\n+            propagate = self.testing or self.debug\n \n-        if self.propagate_exceptions:\n+        if propagate:\n             # Re-raise if called with an active exception, otherwise\n             # raise the passed in exception.\n             if exc_info[1] is e:\n'",3.1971830985915495,3.0779220779220777
src/flask/helpers.py,src/flask/helpers.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -414,7 +414,7 @@ def _prepare_send_file_kwargs(**kwargs: t.Any) -> t.Dict[str, t.Any]:\n \n     kwargs.update(\n         environ=request.environ,\n-        use_x_sendfile=current_app.use_x_sendfile,\n+        use_x_sendfile=current_app.config[""USE_X_SENDFILE""],\n         response_class=current_app.response_class,\n         _root_path=current_app.root_path,  # type: ignore\n     )\n'",2.260869565217391,2.260869565217391
src/flask/scaffold.py,src/flask/scaffold.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -5,6 +5,7 @@ import pkgutil\n import sys\n import typing as t\n from collections import defaultdict\n+from datetime import timedelta\n from functools import update_wrapper\n \n from jinja2 import FileSystemLoader\n@@ -302,12 +303,15 @@ class Scaffold:\n \n         .. versionadded:: 0.9\n         """"""\n-        value = current_app.send_file_max_age_default\n+        value = current_app.config[""SEND_FILE_MAX_AGE_DEFAULT""]\n \n         if value is None:\n             return None\n \n-        return int(value.total_seconds())\n+        if isinstance(value, timedelta):\n+            return int(value.total_seconds())\n+\n+        return value\n \n     def send_static_file(self, filename: str) -> ""Response"":\n         """"""The view function used to serve files from\n'",1.925,1.95
src/flask/sessions.py,src/flask/sessions.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -177,11 +177,8 @@ class SessionInterface:\n         return isinstance(obj, self.null_session_class)\n \n     def get_cookie_name(self, app: ""Flask"") -> str:\n-        """"""Returns the name of the session cookie.\n-\n-        Uses ``app.session_cookie_name`` which is set to ``SESSION_COOKIE_NAME``\n-        """"""\n-        return app.session_cookie_name\n+        """"""The name of the session cookie. Uses``app.config[""SESSION_COOKIE_NAME""]``.""""""\n+        return app.config[""SESSION_COOKIE_NAME""]\n \n     def get_cookie_domain(self, app: ""Flask"") -> t.Optional[str]:\n         """"""Returns the domain that should be set for the session cookie.\n'",1.826086956521739,1.826086956521739
tests/test_config.py,tests/test_config.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -1,7 +1,6 @@\n import json\n import os\n import textwrap\n-from datetime import timedelta\n \n import pytest\n \n@@ -207,14 +206,6 @@ def test_session_lifetime():\n     assert app.permanent_session_lifetime.seconds == 42\n \n \n-def test_send_file_max_age():\n-    app = flask.Flask(__name__)\n-    app.config[""SEND_FILE_MAX_AGE_DEFAULT""] = 3600\n-    assert app.send_file_max_age_default.seconds == 3600\n-    app.config[""SEND_FILE_MAX_AGE_DEFAULT""] = timedelta(hours=2)\n-    assert app.send_file_max_age_default.seconds == 7200\n-\n-\n def test_get_namespace():\n     app = flask.Flask(__name__)\n     app.config[""FOO_OPTION_1""] = ""foo option 1""\n'",1.0555555555555556,1.0588235294117647
tests/test_templating.py,tests/test_templating.py,bfdd37110c67ebeb42061fb43cf684b05291241f,98ca00d54532bfdf858fe663f8fb3cc260c2048b,'deprecate config attributes',"'@@ -397,11 +397,9 @@ def test_templates_auto_reload_debug_run(app, monkeypatch):\n     monkeypatch.setattr(werkzeug.serving, ""run_simple"", run_simple_mock)\n \n     app.run()\n-    assert not app.templates_auto_reload\n     assert not app.jinja_env.auto_reload\n \n     app.run(debug=True)\n-    assert app.templates_auto_reload\n     assert app.jinja_env.auto_reload\n \n \n'",1.0,1.0
CHANGES.rst,CHANGES.rst,292c7e5c5db14824a23bbd6fdfe69f62015aee20,f3bb9b25665d5d141d899979116ad62d771815cc,'release version 2.2.0',"'@@ -1,7 +1,7 @@\n Version 2.2.0\n -------------\n \n-Unreleased\n+Released 2022-08-01\n \n -   Remove previously deprecated code. :pr:`4337`\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,292c7e5c5db14824a23bbd6fdfe69f62015aee20,f3bb9b25665d5d141d899979116ad62d771815cc,'release version 2.2.0',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.0.dev0""\n+__version__ = ""2.2.0""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,01dec1889127a3fc09eaa0dac905559740842992,b17bb9ed563ab2857c0db9a07ec4e6407404c7be,'start version 2.3.0',"'@@ -1,3 +1,9 @@\n+Version 2.3.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.2.0\n -------------\n \n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,cb4ee201179f7c414fbcd02145a1147f2793fa46,01dec1889127a3fc09eaa0dac905559740842992,'pre-commit updates latest release branch',"'@@ -1,5 +1,5 @@\n ci:\n-  autoupdate_branch: ""2.1.x""\n+  autoupdate_branch: ""2.2.x""\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n'",0,0
CHANGES.rst,CHANGES.rst,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,b17bb9ed563ab2857c0db9a07ec4e6407404c7be,'start version 2.2.1',"'@@ -1,3 +1,9 @@\n+Version 2.2.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.2.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,b17bb9ed563ab2857c0db9a07ec4e6407404c7be,'start version 2.2.1',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.0""\n+__version__ = ""2.2.1.dev""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,714ccefeca33db9e87e8ef4abd0008af05c32a4d,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,'show deprecation warning on json_encoder/decoder access',"'@@ -3,6 +3,9 @@ Version 2.2.1\n \n Unreleased\n \n+-   Setting or accessing ``json_encoder`` or ``json_decoder`` raises a\n+    deprecation warning. :issue:`4732`\n+\n \n Version 2.2.0\n -------------\n@@ -50,18 +53,18 @@ Released 2022-08-01\n         provider can be set to use a different JSON library.\n         ``flask.jsonify`` will call ``app.json.response``, other\n         functions in ``flask.json`` will call corresponding functions in\n-        ``app.json``. :pr:`4688`\n+        ``app.json``. :pr:`4692`\n \n -   JSON configuration is moved to attributes on the default\n     ``app.json`` provider. ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``,\n     ``JSONIFY_MIMETYPE``, and ``JSONIFY_PRETTYPRINT_REGULAR`` are\n-    deprecated. :pr:`4688`\n+    deprecated. :pr:`4692`\n -   Setting custom ``json_encoder`` and ``json_decoder`` classes on the\n     app or a blueprint, and the corresponding ``json.JSONEncoder`` and\n     ``JSONDecoder`` classes, are deprecated. JSON behavior can now be\n-    overridden using the ``app.json`` provider interface. :pr:`4688`\n+    overridden using the ``app.json`` provider interface. :pr:`4692`\n -   ``json.htmlsafe_dumps`` and ``json.htmlsafe_dump`` are deprecated,\n-    the function is built-in to Jinja now. :pr:`4688`\n+    the function is built-in to Jinja now. :pr:`4692`\n -   Refactor ``register_error_handler`` to consolidate error checking.\n     Rewrite some error messages to be more consistent. :issue:`4559`\n -   Use Blueprint decorators and functions intended for setup after\n'",0,0
src/flask/app.py,src/flask/app.py,714ccefeca33db9e87e8ef4abd0008af05c32a4d,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,'show deprecation warning on json_encoder/decoder access',"'@@ -1,5 +1,6 @@\n import functools\n import inspect\n+import json\n import logging\n import os\n import sys\n@@ -379,25 +380,86 @@ class Flask(Scaffold):\n         )\n         self.config[""USE_X_SENDFILE""] = value\n \n-    #: The JSON encoder class to use. Defaults to\n-    #: :class:`~flask.json.JSONEncoder`.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3. Customize\n-    #:      :attr:`json_provider_class` instead.\n-    #:\n-    #: .. versionadded:: 0.10\n-    json_encoder: None = None\n+    _json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n+    _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n \n-    #: The JSON decoder class to use. Defaults to\n-    #: :class:`~flask.json.JSONDecoder`.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3. Customize\n-    #:      :attr:`json_provider_class` instead.\n-    #:\n-    #: .. versionadded:: 0.10\n-    json_decoder: None = None\n+    @property  # type: ignore[override]\n+    def json_encoder(self) -> t.Type[json.JSONEncoder]:  # type: ignore[override]\n+        """"""The JSON encoder class to use. Defaults to\n+        :class:`~flask.json.JSONEncoder`.\n+\n+        .. deprecated:: 2.2\n+             Will be removed in Flask 2.3. Customize\n+             :attr:`json_provider_class` instead.\n+\n+        .. versionadded:: 0.10\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+\n+        if self._json_encoder is None:\n+            from . import json\n+\n+            return json.JSONEncoder\n+\n+        return self._json_encoder\n+\n+    @json_encoder.setter\n+    def json_encoder(self, value: t.Type[json.JSONEncoder]) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self._json_encoder = value\n+\n+    @property  # type: ignore[override]\n+    def json_decoder(self) -> t.Type[json.JSONDecoder]:  # type: ignore[override]\n+        """"""The JSON decoder class to use. Defaults to\n+        :class:`~flask.json.JSONDecoder`.\n+\n+        .. deprecated:: 2.2\n+             Will be removed in Flask 2.3. Customize\n+             :attr:`json_provider_class` instead.\n+\n+        .. versionadded:: 0.10\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+\n+        if self._json_decoder is None:\n+            from . import json\n+\n+            return json.JSONDecoder\n+\n+        return self._json_decoder\n+\n+    @json_decoder.setter\n+    def json_decoder(self, value: t.Type[json.JSONDecoder]) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'app.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self._json_decoder = value\n \n     json_provider_class: t.Type[JSONProvider] = DefaultJSONProvider\n     """"""A subclass of :class:`~flask.json.provider.JSONProvider`. An\n'",3.0779220779220777,3.0
src/flask/blueprints.py,src/flask/blueprints.py,714ccefeca33db9e87e8ef4abd0008af05c32a4d,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,'show deprecation warning on json_encoder/decoder access',"'@@ -1,3 +1,4 @@\n+import json\n import os\n import typing as t\n from collections import defaultdict\n@@ -172,18 +173,76 @@ class Blueprint(Scaffold):\n \n     _got_registered_once = False\n \n-    #: Blueprint local JSON encoder class to use. Set to ``None`` to use\n-    #: the app\'s :class:`~flask.Flask.json_encoder`.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3.\n-    json_encoder: None = None\n-    #: Blueprint local JSON decoder class to use. Set to ``None`` to use\n-    #: the app\'s :class:`~flask.Flask.json_decoder`.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3.\n-    json_decoder: None = None\n+    _json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n+    _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n+\n+    @property  # type: ignore[override]\n+    def json_encoder(  # type: ignore[override]\n+        self,\n+    ) -> t.Union[t.Type[json.JSONEncoder], None]:\n+        """"""Blueprint-local JSON encoder class to use. Set to ``None`` to use the app\'s.\n+\n+        .. deprecated:: 2.2\n+             Will be removed in Flask 2.3. Customize\n+             :attr:`json_provider_class` instead.\n+\n+        .. versionadded:: 0.10\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'bp.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self._json_encoder\n+\n+    @json_encoder.setter\n+    def json_encoder(self, value: t.Union[t.Type[json.JSONEncoder], None]) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'bp.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self._json_encoder = value\n+\n+    @property  # type: ignore[override]\n+    def json_decoder(  # type: ignore[override]\n+        self,\n+    ) -> t.Union[t.Type[json.JSONDecoder], None]:\n+        """"""Blueprint-local JSON decoder class to use. Set to ``None`` to use the app\'s.\n+\n+        .. deprecated:: 2.2\n+             Will be removed in Flask 2.3. Customize\n+             :attr:`json_provider_class` instead.\n+\n+        .. versionadded:: 0.10\n+        """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'bp.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self._json_decoder\n+\n+    @json_decoder.setter\n+    def json_decoder(self, value: t.Union[t.Type[json.JSONDecoder], None]) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'bp.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n+            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        self._json_decoder = value\n \n     def __init__(\n         self,\n'",2.303030303030303,2.1621621621621623
src/flask/json/provider.py,src/flask/json/provider.py,714ccefeca33db9e87e8ef4abd0008af05c32a4d,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,'show deprecation warning on json_encoder/decoder access',"'@@ -176,11 +176,11 @@ class DefaultJSONProvider(JSONProvider):\n         :param obj: The data to serialize.\n         :param kwargs: Passed to :func:`json.dumps`.\n         """"""\n-        cls = self._app.json_encoder\n+        cls = self._app._json_encoder\n         bp = self._app.blueprints.get(request.blueprint) if request else None\n \n-        if bp is not None and bp.json_encoder is not None:\n-            cls = bp.json_encoder\n+        if bp is not None and bp._json_encoder is not None:\n+            cls = bp._json_encoder\n \n         if cls is not None:\n             import warnings\n@@ -235,11 +235,11 @@ class DefaultJSONProvider(JSONProvider):\n         :param s: Text or UTF-8 bytes.\n         :param kwargs: Passed to :func:`json.loads`.\n         """"""\n-        cls = self._app.json_decoder\n+        cls = self._app._json_decoder\n         bp = self._app.blueprints.get(request.blueprint) if request else None\n \n-        if bp is not None and bp.json_decoder is not None:\n-            cls = bp.json_decoder\n+        if bp is not None and bp._json_decoder is not None:\n+            cls = bp._json_decoder\n \n         if cls is not None:\n             import warnings\n'",3.4545454545454546,3.4545454545454546
src/flask/scaffold.py,src/flask/scaffold.py,714ccefeca33db9e87e8ef4abd0008af05c32a4d,9a1b25fce4ddd553d7cba01bab3df5841a24aeff,'show deprecation warning on json_encoder/decoder access',"""@@ -1,4 +1,5 @@\n import importlib.util\n+import json\n import os\n import pathlib\n import pkgutil\n@@ -78,14 +79,14 @@ class Scaffold:\n     #:\n     #: .. deprecated:: 2.2\n     #:      Will be removed in Flask 2.3.\n-    json_encoder: None = None\n+    json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n \n     #: JSON decoder class used by :func:`flask.json.loads`. If a\n     #: blueprint sets this, it will be used instead of the app's value.\n     #:\n     #: .. deprecated:: 2.2\n     #:      Will be removed in Flask 2.3.\n-    json_decoder: None = None\n+    json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n \n     def __init__(\n         self,\n""",1.95,1.95
.pre-commit-config.yaml,.pre-commit-config.yaml,0d87b22314d7d0f1a0aa6c3be340095412f6637e,723a3a6ffdb2c84eb7883d0852ec7d41fed751c0,'update requirements',"'@@ -20,7 +20,7 @@ repos:\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 5.0.2\n+    rev: 5.0.4\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
requirements/dev.txt,requirements/dev.txt,0d87b22314d7d0f1a0aa6c3be340095412f6637e,723a3a6ffdb2c84eb7883d0852ec7d41fed751c0,'update requirements',"'@@ -16,7 +16,7 @@ click==8.1.3\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n-distlib==0.3.4\n+distlib==0.3.5\n     # via virtualenv\n filelock==3.7.1\n     # via\n@@ -24,13 +24,13 @@ filelock==3.7.1\n     #   virtualenv\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n-identify==2.5.1\n+identify==2.5.3\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n-pep517==0.12.0\n+pep517==0.13.0\n     # via build\n-pip-compile-multi==2.4.5\n+pip-compile-multi==2.4.6\n     # via -r requirements/dev.in\n pip-tools==6.8.0\n     # via pip-compile-multi\n@@ -41,9 +41,7 @@ pre-commit==2.20.0\n pyyaml==6.0\n     # via pre-commit\n six==1.16.0\n-    # via\n-    #   tox\n-    #   virtualenv\n+    # via tox\n toml==0.10.2\n     # via\n     #   pre-commit\n@@ -52,7 +50,7 @@ toposort==1.7\n     # via pip-compile-multi\n tox==3.25.1\n     # via -r requirements/dev.in\n-virtualenv==20.15.1\n+virtualenv==20.16.2\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,0d87b22314d7d0f1a0aa6c3be340095412f6637e,723a3a6ffdb2c84eb7883d0852ec7d41fed751c0,'update requirements',"'@@ -68,5 +68,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.10\n+urllib3==1.26.11\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,0d87b22314d7d0f1a0aa6c3be340095412f6637e,723a3a6ffdb2c84eb7883d0852ec7d41fed751c0,'update requirements',"'@@ -7,9 +7,9 @@\n #\n asgiref==3.5.2\n     # via -r requirements/tests.in\n-attrs==21.4.0\n+attrs==22.1.0\n     # via pytest\n-blinker==1.4\n+blinker==1.5\n     # via -r requirements/tests.in\n greenlet==1.1.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,0d87b22314d7d0f1a0aa6c3be340095412f6637e,723a3a6ffdb2c84eb7883d0852ec7d41fed751c0,'update requirements',"'@@ -9,7 +9,7 @@ cffi==1.15.1\n     # via cryptography\n cryptography==37.0.4\n     # via -r requirements/typing.in\n-mypy==0.961\n+mypy==0.971\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n@@ -21,7 +21,7 @@ types-contextvars==2.4.7\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==62.6.1\n+types-setuptools==63.2.3\n     # via -r requirements/typing.in\n typing-extensions==4.3.0\n     # via mypy\n'",0,0
CHANGES.rst,CHANGES.rst,52c54b2ce1e392c5d5cd9339a4a069e91edd1d01,0d87b22314d7d0f1a0aa6c3be340095412f6637e,'release version 2.2.1',"'@@ -1,7 +1,7 @@\n Version 2.2.1\n -------------\n \n-Unreleased\n+Released 2022-08-03\n \n -   Setting or accessing ``json_encoder`` or ``json_decoder`` raises a\n     deprecation warning. :issue:`4732`\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,52c54b2ce1e392c5d5cd9339a4a069e91edd1d01,0d87b22314d7d0f1a0aa6c3be340095412f6637e,'release version 2.2.1',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.1.dev""\n+__version__ = ""2.2.1""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,4984753dbf5a247f46e2903011c981d0709973ff,85f79e1a2360c3589b228410c39e208b8514b5b9,'start version 2.2.2',"'@@ -1,3 +1,9 @@\n+Version 2.2.2\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.2.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,4984753dbf5a247f46e2903011c981d0709973ff,85f79e1a2360c3589b228410c39e208b8514b5b9,'start version 2.2.2',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.1""\n+__version__ = ""2.2.2.dev""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,a6a7a57380cd8f7410753c3b819ba6d09198d8c9,4984753dbf5a247f46e2903011c981d0709973ff,'fix default value of app.env',"'@@ -3,6 +3,9 @@ Version 2.2.2\n \n Unreleased\n \n+-   Fix the default value for ``app.env`` to be ``""production""``. This\n+    attribute remains deprecated. :issue:`4740`\n+\n \n Version 2.2.1\n -------------\n'",0,0
src/flask/app.py,src/flask/app.py,a6a7a57380cd8f7410753c3b819ba6d09198d8c9,4984753dbf5a247f46e2903011c981d0709973ff,'fix default value of app.env',"'@@ -827,7 +827,7 @@ class Flask(Scaffold):\n         if instance_relative:\n             root_path = self.instance_path\n         defaults = dict(self.default_config)\n-        defaults[""ENV""] = os.environ.get(""FLASK_ENV"") or ""development""\n+        defaults[""ENV""] = os.environ.get(""FLASK_ENV"") or ""production""\n         defaults[""DEBUG""] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n \n'",3.0,3.0
src/flask/cli.py,src/flask/cli.py,e3df23374cdb9342a823556170c53c9d987d0d33,a0458efef6c8a5669bb6e78044a290bf560f962b,'remove env from shell banner',"'@@ -954,7 +954,7 @@ def shell_command() -> None:\n \n     banner = (\n         f""Python {sys.version} on {sys.platform}\\n""\n-        f""App: {current_app.import_name} [{current_app.env}]\\n""\n+        f""App: {current_app.import_name}\\n""\n         f""Instance: {current_app.instance_path}""\n     )\n     ctx: dict = {}\n'",4.352941176470588,4.352941176470588
CHANGES.rst,CHANGES.rst,6ab3cb8d0cb1fa28dd2e0118c07e481720bd684a,e3eaafb56e3914676755fce6f67256599fb3fc64,'fix issue number',"'@@ -21,7 +21,7 @@ Version 2.2.0\n \n Released 2022-08-01\n \n--   Remove previously deprecated code. :pr:`4337`\n+-   Remove previously deprecated code. :pr:`4667`\n \n     -   Old names for some ``send_file`` parameters have been removed.\n         ``download_name`` replaces ``attachment_filename``, ``max_age``\n'",0,0
CHANGES.rst,CHANGES.rst,de16718b39e3544688130339a0813997e3790c48,6ab3cb8d0cb1fa28dd2e0118c07e481720bd684a,'require werkzeug >= 2.2.2',"'@@ -3,6 +3,9 @@ Version 2.2.2\n \n Unreleased\n \n+-   Update Werkzeug dependency to >= 2.2.2. This includes fixes related\n+    to the new faster router, header parsing, and the development\n+    server. :pr:`4754`\n -   Fix the default value for ``app.env`` to be ``""production""``. This\n     attribute remains deprecated. :issue:`4740`\n \n'",0,0
setup.py,setup.py,de16718b39e3544688130339a0813997e3790c48,6ab3cb8d0cb1fa28dd2e0118c07e481720bd684a,'require werkzeug >= 2.2.2',"'@@ -4,7 +4,7 @@ from setuptools import setup\n setup(\n     name=""Flask"",\n     install_requires=[\n-        ""Werkzeug >= 2.2.0"",\n+        ""Werkzeug >= 2.2.2"",\n         ""Jinja2 >= 3.0"",\n         ""itsdangerous >= 2.0"",\n         ""click >= 8.0"",\n'",0,0
src/flask/cli.py,src/flask/cli.py,de16718b39e3544688130339a0813997e3790c48,6ab3cb8d0cb1fa28dd2e0118c07e481720bd684a,'require werkzeug >= 2.2.2',"'@@ -719,13 +719,6 @@ def show_server_banner(debug, app_import_path):\n     if is_running_from_reloader():\n         return\n \n-    click.secho(\n-        ""WARNING: This is a development server. Do not use it in a production""\n-        "" deployment. Use a production WSGI server instead."",\n-        fg=""red"",\n-        bold=True,\n-    )\n-\n     if app_import_path is not None:\n         click.echo(f"" * Serving Flask app \'{app_import_path}\'"")\n \n'",4.352941176470588,4.352941176470588
CHANGES.rst,CHANGES.rst,43d2fff317aec64a000604a764b8ab2dc751c753,e9af7c23ae19fcc50781b7711f4672c113636892,'release version 2.2.2',"'@@ -1,7 +1,7 @@\n Version 2.2.2\n -------------\n \n-Unreleased\n+Released 2022-08-08\n \n -   Update Werkzeug dependency to >= 2.2.2. This includes fixes related\n     to the new faster router, header parsing, and the development\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,43d2fff317aec64a000604a764b8ab2dc751c753,e9af7c23ae19fcc50781b7711f4672c113636892,'release version 2.2.2',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.2.dev""\n+__version__ = ""2.2.2""\n \n \n def __getattr__(name):\n'",3.0,3.0
src/flask/globals.py,src/flask/globals.py,00b07c863ec147256b68f71c3fe9b6b2f9dbe6bc,a1c478bc93d3dc018a6e7a1ba3cf5409553c9df3,'fix typo\n\nfixes #4756',"'@@ -88,7 +88,7 @@ def __getattr__(name: str) -> t.Any:\n         import warnings\n \n         warnings.warn(\n-            ""\'_app_ctx_stack\' is deprecated and will be remoevd in Flask 2.3."",\n+            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -98,7 +98,7 @@ def __getattr__(name: str) -> t.Any:\n         import warnings\n \n         warnings.warn(\n-            ""\'_request_ctx_stack\' is deprecated and will be remoevd in Flask 2.3."",\n+            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n'",1.3333333333333333,1.3333333333333333
docs/patterns/javascript.rst,docs/patterns/javascript.rst,22b6296830113827810d4e89c634f8153020f097,a1c478bc93d3dc018a6e7a1ba3cf5409553c9df3,'Update javascript.rst\n\nSpelling',"""@@ -28,7 +28,7 @@ It is important to understand the difference between templates and\n JavaScript. Templates are rendered on the server, before the response is\n sent to the user's browser. JavaScript runs in the user's browser, after\n the template is rendered and sent. Therefore, it is impossible to use\n-JavaScript to affect how the Jinja template is rendered, but is is\n+JavaScript to affect how the Jinja template is rendered, but it is\n possible to render data into the JavaScript that will run.\n \n To provide data to JavaScript when rendering the template, use the\n""",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,77cdefcceeb90e261977493318bc8e71c5b15c33,062a096f4056c78956a6d12d2a04f2cef5180af6,'Fix typo',"'@@ -41,7 +41,7 @@ itself.\n \n To run the application, use the ``flask`` command or\n ``python -m flask``. You need to tell the Flask where your application\n-is with the ``-app`` option.\n+is with the ``--app`` option.\n \n .. code-block:: text\n \n'",1.1875,1.1875
docs/patterns/streaming.rst,docs/patterns/streaming.rst,1d07857b1ddd2c0aef6d09436b307eb7abfdbd39,b0b27785ae2a94bb41a9750ae9a0aaea8ae2dc35,'fix typo',"'@@ -20,7 +20,7 @@ data and to then invoke that function and pass it to a response object::\n         def generate():\n             for row in iter_all_rows():\n                 yield f""{\',\'.join(row)}\\n""\n-        return generate(), {""Content-Type"": ""text/csv"")\n+        return generate(), {""Content-Type"": ""text/csv""}\n \n Each ``yield`` expression is directly sent to the browser.  Note though\n that some WSGI middlewares might break streaming, so be careful there in\n'",1.25,1.25
docs/views.rst,docs/views.rst,d94634b1beaf81afea662692874fdaa4c8a6bd89,1d07857b1ddd2c0aef6d09436b307eb7abfdbd39,'fix view docs',"'@@ -116,7 +116,10 @@ function.\n             item = self.model.query.get_or_404(id)\n             return render_template(self.template, item=item)\n \n-    app.add_url_rule(""/users/<int:id>"", view_func=DetailView.as_view(""user_detail""))\n+    app.add_url_rule(\n+        ""/users/<int:id>"",\n+        view_func=DetailView.as_view(""user_detail"", User)\n+    )\n \n \n View Lifetime and ``self``\n@@ -295,8 +298,10 @@ provide get (list) and post (create) methods.\n             return jsonify(item.to_json())\n \n     def register_api(app, model, url):\n-        app.add_url_rule(f""/{name}/<int:id>"", view_func=ItemAPI(f""{name}-item"", model))\n-        app.add_url_rule(f""/{name}/"", view_func=GroupAPI(f""{name}-group"", model))\n+        item = ItemAPI.as_view(f""{name}-item"", model)\n+        group = GroupAPI.as_view(f""{name}-group"", model)\n+        app.add_url_rule(f""/{name}/<int:id>"", view_func=item)\n+        app.add_url_rule(f""/{name}/"", view_func=group)\n \n     register_api(app, User, ""users"")\n     register_api(app, Story, ""stories"")\n'",1.2222222222222223,1.2222222222222223
docs/extensiondev.rst,docs/extensiondev.rst,2d3f72574dcb9026c3fed6b68568351a4b18a69a,d94634b1beaf81afea662692874fdaa4c8a6bd89,'fix typo',"""@@ -184,7 +184,7 @@ context is active when a request context is, or when a CLI command is\n run. If you're storing something that should be closed, use\n :meth:`~flask.Flask.teardown_appcontext` to ensure that it gets closed\n when the application context ends. If it should only be valid during a\n-request, or would not be used in the CLI outside a reqeust, use\n+request, or would not be used in the CLI outside a request, use\n :meth:`~flask.Flask.teardown_request`.\n \n \n""",1.1428571428571428,1.1428571428571428
docs/deploying/waitress.rst,docs/deploying/waitress.rst,86bf3f205feaa86e149674cd0f23a14f3e5c2e22,2d3f72574dcb9026c3fed6b68568351a4b18a69a,'Correct `waitress-serve` command',"""@@ -45,10 +45,10 @@ pattern, use ``--call {module}:{factory}`` instead.\n .. code-block:: text\n \n     # equivalent to 'from hello import app'\n-    $ waitress-serve hello:app --host 127.0.0.1\n+    $ waitress-serve --host 127.0.0.1 hello:app\n \n     # equivalent to 'from hello import create_app; create_app()'\n-    $ waitress-serve --call hello:create_app --host 127.0.0.1\n+    $ waitress-serve --host 127.0.0.1 --call hello:create_app\n \n     Serving on http://127.0.0.1:8080\n \n""",0,0
src/flask/config.py,src/flask/config.py,746455d1038fd5479f396cbf2d19b48edfeb8290,e0c157f7ee99bde3376e456a914bb07260eb6017,'Fix misrendered docstring\n\nThe API reference for `flask.Config.from_mapping` needs a newline to separate\nthe summary from the return description.  I also wrapped the docstring at 72\ncharacters as suggested in CONTRIBUTING.rst.',"'@@ -275,8 +275,9 @@ class Config(dict):\n     def from_mapping(\n         self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n     ) -> bool:\n-        """"""Updates the config like :meth:`update` ignoring items with non-upper\n-        keys.\n+        """"""Updates the config like :meth:`update` ignoring items with\n+        non-upper keys.\n+\n         :return: Always returns ``True``.\n \n         .. versionadded:: 0.11\n'",3.25,3.25
CHANGES.rst,CHANGES.rst,212b72a1feeae69739fb50fc5ab11d1c025350bc,56a95f6ff6b14d26a8aad124bf08484e2b4be21f,'start version 2.2.3',"'@@ -1,3 +1,9 @@\n+Version 2.2.3\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.2.2\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,212b72a1feeae69739fb50fc5ab11d1c025350bc,56a95f6ff6b14d26a8aad124bf08484e2b4be21f,'start version 2.2.3',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.2""\n+__version__ = ""2.2.3""\n \n \n def __getattr__(name):\n'",3.0,3.0
docs/tutorial/install.rst,docs/tutorial/install.rst,00bdc2b448a10c690b159d778391fe23852cfc08,212b72a1feeae69739fb50fc5ab11d1c025350bc,'fix: remove obsolete `zip_safe` (#4783)\n\nremove obsolete `zip_safe`',"""@@ -41,7 +41,6 @@ to it.\n         version='1.0.0',\n         packages=find_packages(),\n         include_package_data=True,\n-        zip_safe=False,\n         install_requires=[\n             'flask',\n         ],\n""",0,0
docs/deploying/index.rst,docs/deploying/index.rst,ce6ad90ecf79daf759e177e0403f27c469c7f6a8,00bdc2b448a10c690b159d778391fe23852cfc08,'remove heroku link',"'@@ -66,7 +66,6 @@ interface. The links below are for some of the most common platforms,\n which have instructions for Flask, WSGI, or Python.\n \n - `PythonAnywhere <https://help.pythonanywhere.com/pages/Flask/>`_\n-- `Heroku <https://devcenter.heroku.com/articles/getting-started-with-python>`_\n - `Google App Engine <https://cloud.google.com/appengine/docs/standard/python3/building-app>`_\n - `Google Cloud Run <https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-python-service>`_\n - `AWS Elastic Beanstalk <https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-flask.html>`_\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,e7b2ce9a50c4a3a1ff5d032f201ed43d8cd39f17,ce6ad90ecf79daf759e177e0403f27c469c7f6a8,'Add missing .dev to version (#4801)',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.3""\n+__version__ = ""2.2.3.dev""\n \n \n def __getattr__(name):\n'",3.0,3.0
.pre-commit-config.yaml,.pre-commit-config.yaml,8811ae037a70621fdca8b109d155ff4aed0eb662,e7b2ce9a50c4a3a1ff5d032f201ed43d8cd39f17,'[pre-commit.ci] pre-commit autoupdate (#4806)\n\nupdates:\r\n- [github.com/psf/black: 22.6.0 → 22.8.0](https://github.com/psf/black/compare/22.6.0...22.8.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>',"'@@ -16,7 +16,7 @@ repos:\n         args: [""--application-directories"", ""src""]\n         additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n-    rev: 22.6.0\n+    rev: 22.8.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,8811ae037a70621fdca8b109d155ff4aed0eb662,'update requirements',"'@@ -16,15 +16,13 @@ click==8.1.3\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n-distlib==0.3.5\n+distlib==0.3.6\n     # via virtualenv\n-filelock==3.7.1\n+filelock==3.8.0\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==1.1.2 ; python_version < ""3.11""\n-    # via -r requirements/tests.in\n-identify==2.5.3\n+identify==2.5.5\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n@@ -43,14 +41,12 @@ pyyaml==6.0\n six==1.16.0\n     # via tox\n toml==0.10.2\n-    # via\n-    #   pre-commit\n-    #   tox\n+    # via pre-commit\n toposort==1.7\n     # via pip-compile-multi\n-tox==3.25.1\n+tox==3.26.0\n     # via -r requirements/dev.in\n-virtualenv==20.16.2\n+virtualenv==20.16.5\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,8811ae037a70621fdca8b109d155ff4aed0eb662,'update requirements',"'@@ -9,9 +9,9 @@ alabaster==0.7.12\n     # via sphinx\n babel==2.10.3\n     # via sphinx\n-certifi==2022.6.15\n+certifi==2022.6.15.1\n     # via requests\n-charset-normalizer==2.1.0\n+charset-normalizer==2.1.1\n     # via requests\n docutils==0.17.1\n     # via\n@@ -31,13 +31,13 @@ packaging==21.3\n     #   sphinx\n pallets-sphinx-themes==2.0.2\n     # via -r requirements/docs.in\n-pygments==2.12.0\n+pygments==2.13.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n pyparsing==3.0.9\n     # via packaging\n-pytz==2022.1\n+pytz==2022.2.1\n     # via babel\n requests==2.28.1\n     # via sphinx\n@@ -68,5 +68,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.11\n+urllib3==1.26.12\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,8811ae037a70621fdca8b109d155ff4aed0eb662,'update requirements',"'@@ -11,7 +11,7 @@ attrs==22.1.0\n     # via pytest\n blinker==1.5\n     # via -r requirements/tests.in\n-greenlet==1.1.2 ; python_version < ""3.11""\n+greenlet==1.1.3 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n@@ -23,9 +23,9 @@ py==1.11.0\n     # via pytest\n pyparsing==3.0.9\n     # via packaging\n-pytest==7.1.2\n+pytest==7.1.3\n     # via -r requirements/tests.in\n-python-dotenv==0.20.0\n+python-dotenv==0.21.0\n     # via -r requirements/tests.in\n tomli==2.0.1\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,8811ae037a70621fdca8b109d155ff4aed0eb662,'update requirements',"'@@ -7,7 +7,7 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==37.0.4\n+cryptography==38.0.1\n     # via -r requirements/typing.in\n mypy==0.971\n     # via -r requirements/typing.in\n@@ -21,7 +21,7 @@ types-contextvars==2.4.7\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==63.2.3\n+types-setuptools==65.3.0\n     # via -r requirements/typing.in\n typing-extensions==4.3.0\n     # via mypy\n'",0,0
docs/views.rst,docs/views.rst,2c7877123880d44f5d964c7370ed5dd4dbc45ad2,c34c84b69085e6bce67d0701b8f8ba3145f42ff2,'Fix missing assignment in MethodView example (#4815)',"'@@ -249,7 +249,7 @@ provide get (list) and post (create) methods.\n         init_every_request = False\n \n         def __init__(self, model):\n-            self.model\n+            self.model = model\n             self.validator = generate_validator(model)\n \n         def _get_item(self, id):\n'",1.2222222222222223,1.2222222222222223
docs/views.rst,docs/views.rst,9c3deeee963e62dfb60c9343fad4ec2ec752fdba,2c7877123880d44f5d964c7370ed5dd4dbc45ad2,'Fix argument in `register_api()` in docs/view.rst (#4818)',"'@@ -297,7 +297,7 @@ provide get (list) and post (create) methods.\n             db.session.commit()\n             return jsonify(item.to_json())\n \n-    def register_api(app, model, url):\n+    def register_api(app, model, name):\n         item = ItemAPI.as_view(f""{name}-item"", model)\n         group = GroupAPI.as_view(f""{name}-group"", model)\n         app.add_url_rule(f""/{name}/<int:id>"", view_func=item)\n'",1.2222222222222223,1.2222222222222223
src/flask/app.py,src/flask/app.py,0d8c8ba71bc6362e6ea9af08146dc97e1a0a8abc,9c3deeee963e62dfb60c9343fad4ec2ec752fdba,'Fix docstring of test_request_context (#4821)\n\nAdd missing `app.`.',"'@@ -2448,7 +2448,7 @@ class Flask(Scaffold):\n         :data:`request` point at the request for the created\n         environment. ::\n \n-            with test_request_context(...):\n+            with app.test_request_context(...):\n                 generate_report()\n \n         When using the shell, it may be easier to push and pop the\n'",3.0,3.0
.pre-commit-config.yaml,.pre-commit-config.yaml,c7da6d74a89753405203e2ee7d19dda74b38b493,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.37.3 → v2.38.2](https://github.com/asottile/pyupgrade/compare/v2.37.3...v2.38.2)\n- [github.com/asottile/reorder_python_imports: v3.8.2 → v3.8.3](https://github.com/asottile/reorder_python_imports/compare/v3.8.2...v3.8.3)',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.37.3\n+    rev: v2.38.2\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.8.2\n+    rev: v3.8.3\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n'",0,0
docs/quickstart.rst,docs/quickstart.rst,75e92090ee43642ad0608edc8bc5d4dc5e84dec8,7c01fbcd06c5d86c20bdc893a8caaba7ccb888f9,'fix typo in quickstart',"""@@ -359,7 +359,7 @@ the application secure.  Because of that Flask configures the `Jinja2\n \n Templates can be used to generate any type of text file. For web applications, you'll\n primarily be generating HTML pages, but you can also generate markdown, plain text for\n-emails, any anything else.\n+emails, and anything else.\n \n For a reference to HTML, CSS, and other web APIs, use the `MDN Web Docs`_.\n \n""",1.1875,1.1875
docs/api.rst,docs/api.rst,5dfd2126a6d5210096ec6ba1ead471b79dc8bd17,e7c82f9c47083b513b1f1b4cbc383c82c3084669,'Fixed inconsistent double spacing in docs/api.rst',"""@@ -3,7 +3,7 @@ API\n \n .. module:: flask\n \n-This part of the documentation covers all the interfaces of Flask.  For\n+This part of the documentation covers all the interfaces of Flask. For\n parts where Flask depends on external libraries, we document the most\n important right here and provide links to the canonical documentation.\n \n@@ -34,12 +34,12 @@ Incoming Request Data\n .. attribute:: request\n \n    To access incoming request data, you can use the global `request`\n-   object.  Flask parses incoming request data for you and gives you\n-   access to it through that global object.  Internally Flask makes\n+   object. Flask parses incoming request data for you and gives you\n+   access to it through that global object. Internally Flask makes\n    sure that you always get the correct data for the active thread if you\n    are in a multithreaded environment.\n \n-   This is a proxy.  See :ref:`notes-on-proxies` for more information.\n+   This is a proxy. See :ref:`notes-on-proxies` for more information.\n \n    The request object is an instance of a :class:`~flask.Request`.\n \n@@ -69,7 +69,7 @@ To access the current session you can use the :class:`session` object:\n    The session object works pretty much like an ordinary dict, with the\n    difference that it keeps track of modifications.\n \n-   This is a proxy.  See :ref:`notes-on-proxies` for more information.\n+   This is a proxy. See :ref:`notes-on-proxies` for more information.\n \n    The following attributes are interesting:\n \n@@ -79,10 +79,10 @@ To access the current session you can use the :class:`session` object:\n \n    .. attribute:: modified\n \n-      ``True`` if the session object detected a modification.  Be advised\n+      ``True`` if the session object detected a modification. Be advised\n       that modifications on mutable structures are not picked up\n       automatically, in that situation you have to explicitly set the\n-      attribute to ``True`` yourself.  Here an example::\n+      attribute to ``True`` yourself. Here an example::\n \n           # this change is not picked up because a mutable object (here\n           # a list) is changed.\n@@ -93,8 +93,8 @@ To access the current session you can use the :class:`session` object:\n    .. attribute:: permanent\n \n       If set to ``True`` the session lives for\n-      :attr:`~flask.Flask.permanent_session_lifetime` seconds.  The\n-      default is 31 days.  If set to ``False`` (which is the default) the\n+      :attr:`~flask.Flask.permanent_session_lifetime` seconds. The\n+      default is 31 days. If set to ``False`` (which is the default) the\n       session will be deleted when the user closes the browser.\n \n \n@@ -155,9 +155,9 @@ Application Globals\n \n To share data that is valid for one request only from one function to\n another, a global variable is not good enough because it would break in\n-threaded environments.  Flask provides you with a special object that\n+threaded environments. Flask provides you with a special object that\n ensures it is only valid for the active request and that will return\n-different values for each request.  In a nutshell: it does the right\n+different values for each request. In a nutshell: it does the right\n thing, like it does for :class:`request` and :class:`session`.\n \n .. data:: g\n@@ -347,14 +347,14 @@ Signals\n \n .. data:: signals.signals_available\n \n-   ``True`` if the signaling system is available.  This is the case\n+   ``True`` if the signaling system is available. This is the case\n    when `blinker`_ is installed.\n \n The following signals exist in Flask:\n \n .. data:: template_rendered\n \n-   This signal is sent when a template was successfully rendered.  The\n+   This signal is sent when a template was successfully rendered. The\n    signal is invoked with the instance of the template as `template`\n    and the context as dictionary (named `context`).\n \n@@ -388,7 +388,7 @@ The following signals exist in Flask:\n .. data:: request_started\n \n    This signal is sent when the request context is set up, before\n-   any request processing happens.  Because the request context is already\n+   any request processing happens. Because the request context is already\n    bound, the subscriber can access the request with the standard global\n    proxies such as :class:`~flask.request`.\n \n@@ -408,7 +408,7 @@ The following signals exist in Flask:\n    Example subscriber::\n \n         def log_response(sender, response, **extra):\n-            sender.logger.debug('Request context is about to close down.  '\n+            sender.logger.debug('Request context is about to close down. '\n                                 'Response: %s', response)\n \n         from flask import request_finished\n@@ -445,8 +445,8 @@ The following signals exist in Flask:\n \n .. data:: request_tearing_down\n \n-   This signal is sent when the request is tearing down.  This is always\n-   called, even if an exception is caused.  Currently functions listening\n+   This signal is sent when the request is tearing down. This is always\n+   called, even if an exception is caused. Currently functions listening\n    to this signal are called after the regular teardown handlers, but this\n    is not something you can rely on.\n \n@@ -464,8 +464,8 @@ The following signals exist in Flask:\n \n .. data:: appcontext_tearing_down\n \n-   This signal is sent when the app context is tearing down.  This is always\n-   called, even if an exception is caused.  Currently functions listening\n+   This signal is sent when the app context is tearing down. This is always\n+   called, even if an exception is caused. Currently functions listening\n    to this signal are called after the regular teardown handlers, but this\n    is not something you can rely on.\n \n@@ -482,9 +482,9 @@ The following signals exist in Flask:\n \n .. data:: appcontext_pushed\n \n-   This signal is sent when an application context is pushed.  The sender\n-   is the application.  This is usually useful for unittests in order to\n-   temporarily hook in information.  For instance it can be used to\n+   This signal is sent when an application context is pushed. The sender\n+   is the application. This is usually useful for unittests in order to\n+   temporarily hook in information. For instance it can be used to\n    set a resource early onto the `g` object.\n \n    Example usage::\n@@ -511,8 +511,8 @@ The following signals exist in Flask:\n \n .. data:: appcontext_popped\n \n-   This signal is sent when an application context is popped.  The sender\n-   is the application.  This usually falls in line with the\n+   This signal is sent when an application context is popped. The sender\n+   is the application. This usually falls in line with the\n    :data:`appcontext_tearing_down` signal.\n \n    .. versionadded:: 0.10\n@@ -520,7 +520,7 @@ The following signals exist in Flask:\n \n .. data:: message_flashed\n \n-   This signal is sent when the application is flashing a message.  The\n+   This signal is sent when the application is flashing a message. The\n    messages is sent as `message` keyword argument and the category as\n    `category`.\n \n@@ -538,7 +538,7 @@ The following signals exist in Flask:\n .. class:: signals.Namespace\n \n    An alias for :class:`blinker.base.Namespace` if blinker is available,\n-   otherwise a dummy class that creates fake signals.  This class is\n+   otherwise a dummy class that creates fake signals. This class is\n    available for Flask extensions that want to provide the same fallback\n    system as Flask itself.\n \n@@ -579,7 +579,7 @@ Generally there are three ways to define rules for the routing system:\n     which is exposed as :attr:`flask.Flask.url_map`.\n \n Variable parts in the route can be specified with angular brackets\n-(``/user/<username>``).  By default a variable part in the URL accepts any\n+(``/user/<username>``). By default a variable part in the URL accepts any\n string without a slash however a different converter can be specified as\n well by using ``<converter:name>``.\n \n@@ -613,7 +613,7 @@ Here are some examples::\n         pass\n \n An important detail to keep in mind is how Flask deals with trailing\n-slashes.  The idea is to keep each URL unique so the following rules\n+slashes. The idea is to keep each URL unique so the following rules\n apply:\n \n 1. If a rule ends with a slash and is requested without a slash by the\n@@ -622,11 +622,11 @@ apply:\n 2. If a rule does not end with a trailing slash and the user requests the\n    page with a trailing slash, a 404 not found is raised.\n \n-This is consistent with how web servers deal with static files.  This\n+This is consistent with how web servers deal with static files. This\n also makes it possible to use relative link targets safely.\n \n-You can also define multiple rules for the same function.  They have to be\n-unique however.  Defaults can also be specified.  Here for example is a\n+You can also define multiple rules for the same function. They have to be\n+unique however. Defaults can also be specified. Here for example is a\n definition for a URL that accepts an optional page::\n \n     @app.route('/users/', defaults={'page': 1})\n@@ -649,33 +649,33 @@ can't preserve form data. ::\n       pass\n \n Here are the parameters that :meth:`~flask.Flask.route` and\n-:meth:`~flask.Flask.add_url_rule` accept.  The only difference is that\n+:meth:`~flask.Flask.add_url_rule` accept. The only difference is that\n with the route parameter the view function is defined with the decorator\n instead of the `view_func` parameter.\n \n =============== ==========================================================\n `rule`          the URL rule as string\n-`endpoint`      the endpoint for the registered URL rule.  Flask itself\n+`endpoint`      the endpoint for the registered URL rule. Flask itself\n                 assumes that the name of the view function is the name\n                 of the endpoint if not explicitly stated.\n `view_func`     the function to call when serving a request to the\n-                provided endpoint.  If this is not provided one can\n+                provided endpoint. If this is not provided one can\n                 specify the function later by storing it in the\n                 :attr:`~flask.Flask.view_functions` dictionary with the\n                 endpoint as key.\n-`defaults`      A dictionary with defaults for this rule.  See the\n+`defaults`      A dictionary with defaults for this rule. See the\n                 example above for how defaults work.\n `subdomain`     specifies the rule for the subdomain in case subdomain\n-                matching is in use.  If not specified the default\n+                matching is in use. If not specified the default\n                 subdomain is assumed.\n `**options`     the options to be forwarded to the underlying\n-                :class:`~werkzeug.routing.Rule` object.  A change to\n-                Werkzeug is handling of method options.  methods is a list\n+                :class:`~werkzeug.routing.Rule` object. A change to\n+                Werkzeug is handling of method options. methods is a list\n                 of methods this rule should be limited to (``GET``, ``POST``\n-                etc.).  By default a rule just listens for ``GET`` (and\n-                implicitly ``HEAD``).  Starting with Flask 0.6, ``OPTIONS`` is\n+                etc.). By default a rule just listens for ``GET`` (and\n+                implicitly ``HEAD``). Starting with Flask 0.6, ``OPTIONS`` is\n                 implicitly added and handled by the standard request\n-                handling.  They have to be specified as keyword arguments.\n+                handling. They have to be specified as keyword arguments.\n =============== ==========================================================\n \n \n@@ -687,19 +687,19 @@ customize behavior the view function would normally not have control over.\n The following attributes can be provided optionally to either override\n some defaults to :meth:`~flask.Flask.add_url_rule` or general behavior:\n \n--   `__name__`: The name of a function is by default used as endpoint.  If\n-    endpoint is provided explicitly this value is used.  Additionally this\n+-   `__name__`: The name of a function is by default used as endpoint. If\n+    endpoint is provided explicitly this value is used. Additionally this\n     will be prefixed with the name of the blueprint by default which\n     cannot be customized from the function itself.\n \n -   `methods`: If methods are not provided when the URL rule is added,\n     Flask will look on the view function object itself if a `methods`\n-    attribute exists.  If it does, it will pull the information for the\n+    attribute exists. If it does, it will pull the information for the\n     methods from there.\n \n -   `provide_automatic_options`: if this attribute is set Flask will\n     either force enable or disable the automatic implementation of the\n-    HTTP ``OPTIONS`` response.  This can be useful when working with\n+    HTTP ``OPTIONS`` response. This can be useful when working with\n     decorators that want to customize the ``OPTIONS`` response on a per-view\n     basis.\n \n""",1.5,1.5
CHANGES.rst,CHANGES.rst,cc66213e579d6b35d9951c21b685d0078f373c44,3dc6db9d0cfddcfb971c382b014bb56ac3761d3c,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly \r\nall aspects to XML, .svg should also be autoescaped.'","'@@ -9,6 +9,9 @@ Version 2.2.3\n \n Unreleased\n \n+-   Autoescaping is now enabled by default for ``.svg`` files. Inside\n+    templates this behavior can be changed with the ``autoescape`` tag.\n+    :issue:`4831`\n \n Version 2.2.2\n -------------\n'",0,0
docs/templating.rst,docs/templating.rst,cc66213e579d6b35d9951c21b685d0078f373c44,3dc6db9d0cfddcfb971c382b014bb56ac3761d3c,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly \r\nall aspects to XML, .svg should also be autoescaped.'","'@@ -18,7 +18,7 @@ Jinja Setup\n Unless customized, Jinja2 is configured by Flask as follows:\n \n -   autoescaping is enabled for all templates ending in ``.html``,\n-    ``.htm``, ``.xml`` as well as ``.xhtml`` when using\n+    ``.htm``, ``.xml``, ``.xhtml``, as well as ``.svg`` when using\n     :func:`~flask.templating.render_template`.\n -   autoescaping is enabled for all strings when using\n     :func:`~flask.templating.render_template_string`.\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,cc66213e579d6b35d9951c21b685d0078f373c44,3dc6db9d0cfddcfb971c382b014bb56ac3761d3c,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly \r\nall aspects to XML, .svg should also be autoescaped.'","'@@ -961,11 +961,14 @@ class Flask(Scaffold):\n         """"""Returns ``True`` if autoescaping should be active for the given\n         template name. If no template name is given, returns `True`.\n \n+        .. versionchanged:: 2.2\n+            Autoescaping is now enabled by default for ``.svg`` files.\n+\n         .. versionadded:: 0.5\n         """"""\n         if filename is None:\n             return True\n-        return filename.endswith(("".html"", "".htm"", "".xml"", "".xhtml""))\n+        return filename.endswith(("".html"", "".htm"", "".xml"", "".xhtml"", "".svg""))\n \n     def update_template_context(self, context: dict) -> None:\n         """"""Update the template context with some commonly used variables.\n'",3.0,3.0
.pre-commit-config.yaml,.pre-commit-config.yaml,9daddd12719a098ff33556fcc34c0b7cf33120ca,2a54cfa5cecf4dd9f17525bf3ebae4d33a155776,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v2.38.2 → v3.2.0](https://github.com/asottile/pyupgrade/compare/v2.38.2...v3.2.0)\n- [github.com/asottile/reorder_python_imports: v3.8.3 → v3.9.0](https://github.com/asottile/reorder_python_imports/compare/v3.8.3...v3.9.0)\n- [github.com/psf/black: 22.8.0 → 22.10.0](https://github.com/psf/black/compare/22.8.0...22.10.0)',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v2.38.2\n+    rev: v3.2.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py36-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n-    rev: v3.8.3\n+    rev: v3.9.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n@@ -16,7 +16,7 @@ repos:\n         args: [""--application-directories"", ""src""]\n         additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n-    rev: 22.8.0\n+    rev: 22.10.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,9f99425aaf3433c892d0aeb941427f0766b02e2d,35c6595202c7b46a7d2a082e44250e3bfbe1aa41,'[pre-commit.ci] pre-commit autoupdate (#4862)\n\nupdates:\n- [github.com/peterdemin/pip-compile-multi: v2.4.6 → v2.5.0](https://github.com/peterdemin/pip-compile-multi/compare/v2.4.6...v2.5.0)\n\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>',"'@@ -27,7 +27,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.4.6\n+    rev: v2.5.0\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -3,10 +3,10 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.2.0\n+    rev: v3.2.2\n     hooks:\n       - id: pyupgrade\n-        args: [""--py36-plus""]\n+        args: [""--py37-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n     rev: v3.9.0\n     hooks:\n@@ -14,24 +14,23 @@ repos:\n         name: Reorder Python imports (src, tests)\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n-        additional_dependencies: [""setuptools>60.9""]\n   - repo: https://github.com/psf/black\n     rev: 22.10.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 5.0.4\n+    rev: 6.0.0\n     hooks:\n       - id: flake8\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.5.0\n+    rev: v2.6.1\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.3.0\n+    rev: v4.4.0\n     hooks:\n       - id: fix-byte-order-marker\n       - id: trailing-whitespace\n'",0,0
requirements/dev.txt,requirements/dev.txt,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -8,7 +8,7 @@\n -r docs.txt\n -r tests.txt\n -r typing.txt\n-build==0.8.0\n+build==0.9.0\n     # via pip-tools\n cfgv==3.3.1\n     # via pre-commit\n@@ -22,20 +22,22 @@ filelock==3.8.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.5\n+identify==2.5.9\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n pep517==0.13.0\n     # via build\n-pip-compile-multi==2.4.6\n+pip-compile-multi==2.6.1\n     # via -r requirements/dev.in\n-pip-tools==6.8.0\n+pip-tools==6.10.0\n     # via pip-compile-multi\n-platformdirs==2.5.2\n+platformdirs==2.5.4\n     # via virtualenv\n pre-commit==2.20.0\n     # via -r requirements/dev.in\n+py==1.11.0\n+    # via tox\n pyyaml==6.0\n     # via pre-commit\n six==1.16.0\n@@ -44,13 +46,13 @@ toml==0.10.2\n     # via pre-commit\n toposort==1.7\n     # via pip-compile-multi\n-tox==3.26.0\n+tox==3.27.1\n     # via -r requirements/dev.in\n-virtualenv==20.16.5\n+virtualenv==20.16.7\n     # via\n     #   pre-commit\n     #   tox\n-wheel==0.37.1\n+wheel==0.38.4\n     # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/docs.txt,requirements/docs.txt,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -7,9 +7,9 @@\n #\n alabaster==0.7.12\n     # via sphinx\n-babel==2.10.3\n+babel==2.11.0\n     # via sphinx\n-certifi==2022.6.15.1\n+certifi==2022.9.24\n     # via requests\n charset-normalizer==2.1.1\n     # via requests\n@@ -17,7 +17,7 @@ docutils==0.17.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==3.3\n+idna==3.4\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n@@ -37,7 +37,7 @@ pygments==2.13.0\n     #   sphinx-tabs\n pyparsing==3.0.9\n     # via packaging\n-pytz==2022.2.1\n+pytz==2022.6\n     # via babel\n requests==2.28.1\n     # via sphinx\n@@ -68,5 +68,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.12\n+urllib3==1.26.13\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -11,21 +11,15 @@ attrs==22.1.0\n     # via pytest\n blinker==1.5\n     # via -r requirements/tests.in\n-greenlet==1.1.3 ; python_version < ""3.11""\n-    # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n packaging==21.3\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-py==1.11.0\n-    # via pytest\n pyparsing==3.0.9\n     # via packaging\n-pytest==7.1.3\n+pytest==7.2.0\n     # via -r requirements/tests.in\n python-dotenv==0.21.0\n     # via -r requirements/tests.in\n-tomli==2.0.1\n-    # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -7,21 +7,19 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==38.0.1\n+cryptography==38.0.3\n     # via -r requirements/typing.in\n-mypy==0.971\n+mypy==0.991\n     # via -r requirements/typing.in\n mypy-extensions==0.4.3\n     # via mypy\n pycparser==2.21\n     # via cffi\n-tomli==2.0.1\n-    # via mypy\n types-contextvars==2.4.7\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==65.3.0\n+types-setuptools==65.6.0.1\n     # via -r requirements/typing.in\n-typing-extensions==4.3.0\n+typing-extensions==4.4.0\n     # via mypy\n'",0,0
src/flask/app.py,src/flask/app.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -384,7 +384,7 @@ class Flask(Scaffold):\n     _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n \n     @property  # type: ignore[override]\n-    def json_encoder(self) -> t.Type[json.JSONEncoder]:  # type: ignore[override]\n+    def json_encoder(self) -> t.Type[json.JSONEncoder]:\n         """"""The JSON encoder class to use. Defaults to\n         :class:`~flask.json.JSONEncoder`.\n \n@@ -423,7 +423,7 @@ class Flask(Scaffold):\n         self._json_encoder = value\n \n     @property  # type: ignore[override]\n-    def json_decoder(self) -> t.Type[json.JSONDecoder]:  # type: ignore[override]\n+    def json_decoder(self) -> t.Type[json.JSONDecoder]:\n         """"""The JSON decoder class to use. Defaults to\n         :class:`~flask.json.JSONDecoder`.\n \n'",3.0,3.0
src/flask/blueprints.py,src/flask/blueprints.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -176,8 +176,8 @@ class Blueprint(Scaffold):\n     _json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n     _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n \n-    @property  # type: ignore[override]\n-    def json_encoder(  # type: ignore[override]\n+    @property\n+    def json_encoder(\n         self,\n     ) -> t.Union[t.Type[json.JSONEncoder], None]:\n         """"""Blueprint-local JSON encoder class to use. Set to ``None`` to use the app\'s.\n@@ -210,8 +210,8 @@ class Blueprint(Scaffold):\n         )\n         self._json_encoder = value\n \n-    @property  # type: ignore[override]\n-    def json_decoder(  # type: ignore[override]\n+    @property\n+    def json_decoder(\n         self,\n     ) -> t.Union[t.Type[json.JSONDecoder], None]:\n         """"""Blueprint-local JSON decoder class to use. Set to ``None`` to use the app\'s.\n'",2.1621621621621623,2.1621621621621623
src/flask/ctx.py,src/flask/ctx.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -307,7 +307,7 @@ class RequestContext:\n         self.app = app\n         if request is None:\n             request = app.request_class(environ)\n-            request.json_module = app.json  # type: ignore[misc]\n+            request.json_module = app.json\n         self.request: Request = request\n         self.url_adapter = None\n         try:\n'",1.9259259259259258,1.9259259259259258
src/flask/helpers.py,src/flask/helpers.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -149,7 +149,7 @@ def stream_with_context(\n                 yield from gen\n             finally:\n                 if hasattr(gen, ""close""):\n-                    gen.close()  # type: ignore\n+                    gen.close()\n \n     # The trick is to start the generator.  Then the code execution runs until\n     # the first dummy None is yielded at which point the context was already\n@@ -287,7 +287,7 @@ def redirect(\n     return _wz_redirect(location, code=code, Response=Response)\n \n \n-def abort(  # type: ignore[misc]\n+def abort(\n     code: t.Union[int, ""BaseResponse""], *args: t.Any, **kwargs: t.Any\n ) -> ""te.NoReturn"":\n     """"""Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given\n@@ -617,7 +617,7 @@ def get_root_path(import_name: str) -> str:\n         return os.getcwd()\n \n     if hasattr(loader, ""get_filename""):\n-        filepath = loader.get_filename(import_name)  # type: ignore\n+        filepath = loader.get_filename(import_name)\n     else:\n         # Fall back to imports.\n         __import__(import_name)\n'",2.260869565217391,2.260869565217391
src/flask/testing.py,src/flask/testing.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -225,7 +225,7 @@ class FlaskClient(Client):\n             buffered=buffered,\n             follow_redirects=follow_redirects,\n         )\n-        response.json_module = self.application.json  # type: ignore[misc]\n+        response.json_module = self.application.json  # type: ignore[assignment]\n \n         # Re-push contexts that were preserved during the request.\n         while self._new_contexts:\n'",3.272727272727273,3.272727272727273
src/flask/wrappers.py,src/flask/wrappers.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -25,7 +25,7 @@ class Request(RequestBase):\n     specific ones.\n     """"""\n \n-    json_module = json\n+    json_module: t.Any = json\n \n     #: The internal URL rule that matched the request.  This can be\n     #: useful to inspect which methods are allowed for the URL from\n'",2.857142857142857,2.857142857142857
tests/typing/typing_app_decorators.py,tests/typing/typing_app_decorators.py,d178653b5f7a5ee2ba15e215ce60caeeb9ed82e1,9f99425aaf3433c892d0aeb941427f0766b02e2d,'update requirements',"'@@ -10,12 +10,12 @@ app = Flask(__name__)\n \n @app.after_request\n def after_sync(response: Response) -> Response:\n-    ...\n+    return Response()\n \n \n @app.after_request\n async def after_async(response: Response) -> Response:\n-    ...\n+    return Response()\n \n \n @app.before_request\n'",1.0,1.0
docs/config.rst,docs/config.rst,d951a763fb90ff3edb5aede5198198ee5d30d44e,618fdc86000d161d29bd8de70f998780474cfa28,'Fix backstick not rendering.',"'@@ -47,7 +47,7 @@ Debug Mode\n \n The :data:`DEBUG` config value is special because it may behave inconsistently if\n changed after the app has begun setting up. In order to set debug mode reliably, use the\n-``--debug`` option on the ``flask`` command.``flask run`` will use the interactive\n+``--debug`` option on the ``flask`` command. ``flask run`` will use the interactive\n debugger and reloader by default in debug mode.\n \n .. code-block:: text\n'",1.0,1.0
docs/extensiondev.rst,docs/extensiondev.rst,9a294a640141ea8ab108e5c0964d75d91a636c0a,618fdc86000d161d29bd8de70f998780474cfa28,'Fix class-based views example',"""@@ -212,7 +212,7 @@ class's :meth:`~views.View.as_view` method.\n         def __init__(self, model):\n             self.model = model\n \n-        def get(id):\n+        def get(self, id):\n             post = self.model.query.get(id)\n             return jsonify(post.to_json())\n \n""",1.1428571428571428,1.1428571428571428
.pre-commit-config.yaml,.pre-commit-config.yaml,3e932aa103661e78a0946e15f35b9f4da3908d39,b5ec83b6970fe94450310d8fecd811a22d6287a7,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.2.2 → v3.3.0](https://github.com/asottile/pyupgrade/compare/v3.2.2...v3.3.0)',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.2.2\n+    rev: v3.3.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py37-plus""]\n'",0,0
docs/api.rst,docs/api.rst,95b666871c7a89f2793952ea06d1c45e0ae5a38a,3d4acf0ca07b8c513bac1f43c25b870ff6c071c9,"'Update api.rst\n\nCorrected typo in ""tojson"" example, `const names = {{ names|tojson }};` was `const names = {{ names|tosjon }};`'","'@@ -248,7 +248,7 @@ HTML ``<script>`` tags.\n .. sourcecode:: html+jinja\n \n     <script>\n-        const names = {{ names|tosjon }};\n+        const names = {{ names|tojson }};\n         renderChart(names, {{ axis_data|tojson }});\n     </script>\n \n'",1.5,1.5
docs/views.rst,docs/views.rst,43ef559de3ecb1915aabe8156f357d7ac4cd22b3,dcdcac2f3a48d992a94dcc4598dccbd612dae099,'Fix varname in docs',"'@@ -256,7 +256,7 @@ provide get (list) and post (create) methods.\n             return self.model.query.get_or_404(id)\n \n         def get(self, id):\n-            user = self._get_item(id)\n+            item = self._get_item(id)\n             return jsonify(item.to_json())\n \n         def patch(self, id):\n'",1.2222222222222223,1.2222222222222223
.pre-commit-config.yaml,.pre-commit-config.yaml,43bc7330cece1dbe75e7d6c326a0dea8d5652699,d36a379a0fa1f83e539da6f305c7fbaa9122e886,'update requirements',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.0\n+    rev: v3.3.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py37-plus""]\n@@ -15,7 +15,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 22.10.0\n+    rev: 22.12.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,43bc7330cece1dbe75e7d6c326a0dea8d5652699,d36a379a0fa1f83e539da6f305c7fbaa9122e886,'update requirements',"'@@ -10,19 +10,25 @@\n -r typing.txt\n build==0.9.0\n     # via pip-tools\n+cachetools==5.2.0\n+    # via tox\n cfgv==3.3.1\n     # via pre-commit\n+chardet==5.1.0\n+    # via tox\n click==8.1.3\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n+colorama==0.4.6\n+    # via tox\n distlib==0.3.6\n     # via virtualenv\n-filelock==3.8.0\n+filelock==3.8.2\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.9\n+identify==2.5.11\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n@@ -30,25 +36,25 @@ pep517==0.13.0\n     # via build\n pip-compile-multi==2.6.1\n     # via -r requirements/dev.in\n-pip-tools==6.10.0\n+pip-tools==6.12.1\n     # via pip-compile-multi\n-platformdirs==2.5.4\n-    # via virtualenv\n+platformdirs==2.6.0\n+    # via\n+    #   tox\n+    #   virtualenv\n pre-commit==2.20.0\n     # via -r requirements/dev.in\n-py==1.11.0\n+pyproject-api==1.2.1\n     # via tox\n pyyaml==6.0\n     # via pre-commit\n-six==1.16.0\n-    # via tox\n toml==0.10.2\n     # via pre-commit\n toposort==1.7\n     # via pip-compile-multi\n-tox==3.27.1\n+tox==4.0.16\n     # via -r requirements/dev.in\n-virtualenv==20.16.7\n+virtualenv==20.17.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,43bc7330cece1dbe75e7d6c326a0dea8d5652699,d36a379a0fa1f83e539da6f305c7fbaa9122e886,'update requirements',"'@@ -9,7 +9,7 @@ alabaster==0.7.12\n     # via sphinx\n babel==2.11.0\n     # via sphinx\n-certifi==2022.9.24\n+certifi==2022.12.7\n     # via requests\n charset-normalizer==2.1.1\n     # via requests\n@@ -25,19 +25,17 @@ jinja2==3.1.2\n     # via sphinx\n markupsafe==2.1.1\n     # via jinja2\n-packaging==21.3\n+packaging==22.0\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.0.2\n+pallets-sphinx-themes==2.0.3\n     # via -r requirements/docs.in\n pygments==2.13.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pyparsing==3.0.9\n-    # via packaging\n-pytz==2022.6\n+pytz==2022.7\n     # via babel\n requests==2.28.1\n     # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,43bc7330cece1dbe75e7d6c326a0dea8d5652699,d36a379a0fa1f83e539da6f305c7fbaa9122e886,'update requirements',"'@@ -5,20 +5,18 @@\n #\n #    pip-compile-multi\n #\n-asgiref==3.5.2\n+asgiref==3.6.0\n     # via -r requirements/tests.in\n-attrs==22.1.0\n+attrs==22.2.0\n     # via pytest\n blinker==1.5\n     # via -r requirements/tests.in\n iniconfig==1.1.1\n     # via pytest\n-packaging==21.3\n+packaging==22.0\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-pyparsing==3.0.9\n-    # via packaging\n pytest==7.2.0\n     # via -r requirements/tests.in\n python-dotenv==0.21.0\n'",0,0
requirements/typing.txt,requirements/typing.txt,43bc7330cece1dbe75e7d6c326a0dea8d5652699,d36a379a0fa1f83e539da6f305c7fbaa9122e886,'update requirements',"'@@ -7,7 +7,7 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==38.0.3\n+cryptography==38.0.4\n     # via -r requirements/typing.in\n mypy==0.991\n     # via -r requirements/typing.in\n@@ -19,7 +19,7 @@ types-contextvars==2.4.7\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==65.6.0.1\n+types-setuptools==65.6.0.2\n     # via -r requirements/typing.in\n typing-extensions==4.4.0\n     # via mypy\n'",0,0
setup.cfg,setup.cfg,8e3128b9893ba4ec8d120e1c2f479f61bd10a476,43bc7330cece1dbe75e7d6c326a0dea8d5652699,'ignore flake8 b905 zip(strict=True) until python 3.10',"'@@ -80,6 +80,8 @@ ignore =\n     E722\n     # bin op line break, invalid\n     W503\n+    # requires Python 3.10\n+    B905\n # up to 88 allowed by bugbear B950\n max-line-length = 80\n per-file-ignores =\n'",0,0
docs/patterns/appdispatch.rst,docs/patterns/appdispatch.rst,1a68768e6b0aa19bd670ca050ad81adff55ba479,1373f70dc648f9f16032ea1e9b13f3fb59a8f612,'python 2 style inheritance clean up from docs',"'@@ -93,7 +93,7 @@ exist yet, it is dynamically created and remembered::\n \n     from threading import Lock\n \n-    class SubdomainDispatcher(object):\n+    class SubdomainDispatcher:\n \n         def __init__(self, domain, create_app):\n             self.domain = domain\n@@ -148,7 +148,7 @@ request path up to the first slash::\n     from threading import Lock\n     from werkzeug.wsgi import pop_path_info, peek_path_info\n \n-    class PathDispatcher(object):\n+    class PathDispatcher:\n \n         def __init__(self, default_app, create_app):\n             self.default_app = default_app\n'",1.6666666666666667,1.6666666666666667
CONTRIBUTING.rst,CONTRIBUTING.rst,6fcf6d00bd36f7c3c51115199615dc93c4a3007a,55cdb420a02e6d58386f37c748794e05aec0f2d2,"'Fix URL ""committing as you go""'","'@@ -171,7 +171,7 @@ Start coding\n \n         $ git push --set-upstream fork your-branch-name\n \n-.. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n+.. _committing as you go: https://afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n .. _create a pull request: https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request\n \n \n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,677a0468481a0f620bdb217e8f1a24ebe94681e5,55cdb420a02e6d58386f37c748794e05aec0f2d2,"'Fix URL ""committing as you go""'","'@@ -171,7 +171,7 @@ Start coding\n \n         $ git push --set-upstream fork your-branch-name\n \n-.. _committing as you go: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n+.. _committing as you go: https://afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html#commit-your-changes\n .. _create a pull request: https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request\n \n \n'",0,0
CHANGES.rst,CHANGES.rst,09112cfc477a270f4b2990e1daf39db1dbe30e98,d9e56c7f4b04b050b28cf90778f44dcb2e0287f4,'template_folder type allows pathlib',"'@@ -3,6 +3,8 @@ Version 2.2.3\n \n Unreleased\n \n+-   Fix the type of ``template_folder`` to accept ``pathlib.Path``. :issue:`4892`\n+\n \n Version 2.2.2\n -------------\n'",0,0
src/flask/app.py,src/flask/app.py,09112cfc477a270f4b2990e1daf39db1dbe30e98,d9e56c7f4b04b050b28cf90778f44dcb2e0287f4,'template_folder type allows pathlib',"'@@ -558,7 +558,7 @@ class Flask(Scaffold):\n         static_host: t.Optional[str] = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n-        template_folder: t.Optional[str] = ""templates"",\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = ""templates"",\n         instance_path: t.Optional[str] = None,\n         instance_relative_config: bool = False,\n         root_path: t.Optional[str] = None,\n'",3.0,3.0
src/flask/blueprints.py,src/flask/blueprints.py,09112cfc477a270f4b2990e1daf39db1dbe30e98,d9e56c7f4b04b050b28cf90778f44dcb2e0287f4,'template_folder type allows pathlib',"'@@ -250,7 +250,7 @@ class Blueprint(Scaffold):\n         import_name: str,\n         static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[str] = None,\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         url_prefix: t.Optional[str] = None,\n         subdomain: t.Optional[str] = None,\n         url_defaults: t.Optional[dict] = None,\n'",2.1621621621621623,2.1621621621621623
src/flask/scaffold.py,src/flask/scaffold.py,09112cfc477a270f4b2990e1daf39db1dbe30e98,d9e56c7f4b04b050b28cf90778f44dcb2e0287f4,'template_folder type allows pathlib',"'@@ -93,7 +93,7 @@ class Scaffold:\n         import_name: str,\n         static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[str] = None,\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         root_path: t.Optional[str] = None,\n     ):\n         #: The name of the package or module that this object belongs\n'",1.95,1.95
CHANGES.rst,CHANGES.rst,79032ca5f1c4747e5aeaa193bdeb2e4eae410ea6,631b6dd54619f5e71134297e3daa9bdbd1bc123b,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly\nall aspects to XML, .svg should also be autoescaped.'","'@@ -3,6 +3,9 @@ Version 2.2.3\n \n Unreleased\n \n+-   Autoescaping is now enabled by default for ``.svg`` files. Inside\n+    templates this behavior can be changed with the ``autoescape`` tag.\n+    :issue:`4831`\n -   Fix the type of ``template_folder`` to accept ``pathlib.Path``. :issue:`4892`\n \n \n'",0,0
docs/templating.rst,docs/templating.rst,79032ca5f1c4747e5aeaa193bdeb2e4eae410ea6,631b6dd54619f5e71134297e3daa9bdbd1bc123b,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly\nall aspects to XML, .svg should also be autoescaped.'","'@@ -18,7 +18,7 @@ Jinja Setup\n Unless customized, Jinja2 is configured by Flask as follows:\n \n -   autoescaping is enabled for all templates ending in ``.html``,\n-    ``.htm``, ``.xml`` as well as ``.xhtml`` when using\n+    ``.htm``, ``.xml``, ``.xhtml``, as well as ``.svg`` when using\n     :func:`~flask.templating.render_template`.\n -   autoescaping is enabled for all strings when using\n     :func:`~flask.templating.render_template_string`.\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,79032ca5f1c4747e5aeaa193bdeb2e4eae410ea6,631b6dd54619f5e71134297e3daa9bdbd1bc123b,"'Add .svg to select_jinja_autoescape (#4840)\n\nAs SVG files are a type of XML file and are similar in nearly\nall aspects to XML, .svg should also be autoescaped.'","'@@ -961,11 +961,14 @@ class Flask(Scaffold):\n         """"""Returns ``True`` if autoescaping should be active for the given\n         template name. If no template name is given, returns `True`.\n \n+        .. versionchanged:: 2.2\n+            Autoescaping is now enabled by default for ``.svg`` files.\n+\n         .. versionadded:: 0.5\n         """"""\n         if filename is None:\n             return True\n-        return filename.endswith(("".html"", "".htm"", "".xml"", "".xhtml""))\n+        return filename.endswith(("".html"", "".htm"", "".xml"", "".xhtml"", "".svg""))\n \n     def update_template_context(self, context: dict) -> None:\n         """"""Update the template context with some commonly used variables.\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,79032ca5f1c4747e5aeaa193bdeb2e4eae410ea6,'Add --debug option to flask run',"'@@ -7,6 +7,7 @@ Unreleased\n     templates this behavior can be changed with the ``autoescape`` tag.\n     :issue:`4831`\n -   Fix the type of ``template_folder`` to accept ``pathlib.Path``. :issue:`4892`\n+-   Add ``--debug`` option to the ``flask run`` command. :issue:`4777`\n \n \n Version 2.2.2\n'",0,0
src/flask/cli.py,src/flask/cli.py,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,79032ca5f1c4747e5aeaa193bdeb2e4eae410ea6,'Add --debug option to flask run',"'@@ -837,6 +837,11 @@ class SeparatedPathType(click.Path):\n     expose_value=False,\n     help=""The key file to use when specifying a certificate."",\n )\n+@click.option(\n+    ""--debug/--no-debug"",\n+    default=None,\n+    help=""Enable or disable the debug mode."",\n+)\n @click.option(\n     ""--reload/--no-reload"",\n     default=None,\n@@ -878,6 +883,7 @@ def run_command(\n     info,\n     host,\n     port,\n+    debug,\n     reload,\n     debugger,\n     with_threads,\n@@ -910,7 +916,8 @@ def run_command(\n             # command fails.\n             raise e from None\n \n-    debug = get_debug_flag()\n+    if debug is None:\n+        debug = get_debug_flag()\n \n     if reload is None:\n         reload = debug\n'",4.352941176470588,4.382352941176471
docs/_static/pycharm-run-config.png,docs/_static/pycharm-run-config.png,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs','Binary files a/docs/_static/pycharm-run-config.png and b/docs/_static/pycharm-run-config.png differ\n',0,0
docs/cli.rst,docs/cli.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"'@@ -95,7 +95,7 @@ the ``--debug`` option.\n \n .. code-block:: console\n \n-     $ flask --app hello --debug run\n+     $ flask --app hello run --debug\n       * Serving Flask app ""hello""\n       * Debug mode: on\n       * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n@@ -550,7 +550,7 @@ a name such as ""flask run"".\n Click the *Script path* dropdown and change it to *Module name*, then input ``flask``.\n \n The *Parameters* field is set to the CLI command to execute along with any arguments.\n-This example uses ``--app hello --debug run``, which will run the development server in\n+This example uses ``--app hello run --debug``, which will run the development server in\n debug mode. ``--app hello`` should be the import or file with your Flask app.\n \n If you installed your project as a package in your virtualenv, you may uncheck the\n'",1.0,1.0
docs/config.rst,docs/config.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"""@@ -47,15 +47,15 @@ Debug Mode\n \n The :data:`DEBUG` config value is special because it may behave inconsistently if\n changed after the app has begun setting up. In order to set debug mode reliably, use the\n-``--debug`` option on the ``flask`` command. ``flask run`` will use the interactive\n+``--debug`` option on the ``flask run`` command. ``flask run`` will use the interactive\n debugger and reloader by default in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n Using the option is recommended. While it is possible to set :data:`DEBUG` in your\n-config or code, this is strongly discouraged. It can't be read early by the ``flask``\n+config or code, this is strongly discouraged. It can't be read early by the ``flask run``\n command, and some systems or extensions may have already configured themselves based on\n a previous value.\n \n""",1.0,1.0
docs/debugging.rst,docs/debugging.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"'@@ -43,7 +43,7 @@ The debugger is enabled by default when the development server is run in debug m\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n When running from Python code, passing ``debug=True`` enables debug mode, which is\n mostly equivalent.\n@@ -72,7 +72,7 @@ which can interfere.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run --no-debugger --no-reload\n+    $ flask --app hello run --debug --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"""@@ -108,7 +108,7 @@ To enable debug mode, use the ``--debug`` option.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n      * Serving Flask app 'hello'\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n""",1.1875,1.1875
docs/server.rst,docs/server.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"'@@ -24,7 +24,7 @@ debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n This enables debug mode, including the interactive debugger and reloader, and then\n starts the server on http://localhost:5000/. Use ``flask run --help`` to see the\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"""@@ -137,7 +137,7 @@ follow the tutorial.\n \n .. code-block:: text\n \n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n You'll see output similar to this:\n \n""",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"'@@ -48,7 +48,7 @@ Run\n .. code-block:: text\n \n     $ flask --app flaskr init-db\n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
src/flask/cli.py,src/flask/cli.py,bd26928fdb2476fca62f0e621e8f2870250ac2bc,4bc0e4943dfa637361aec2bb18dc9e1fabeaad12,'Prefer flask run --debug in docs',"'@@ -837,11 +837,6 @@ class SeparatedPathType(click.Path):\n     expose_value=False,\n     help=""The key file to use when specifying a certificate."",\n )\n-@click.option(\n-    ""--debug/--no-debug"",\n-    default=None,\n-    help=""Enable or disable the debug mode."",\n-)\n @click.option(\n     ""--reload/--no-reload"",\n     default=None,\n@@ -883,7 +878,6 @@ def run_command(\n     info,\n     host,\n     port,\n-    debug,\n     reload,\n     debugger,\n     with_threads,\n@@ -916,8 +910,7 @@ def run_command(\n             # command fails.\n             raise e from None\n \n-    if debug is None:\n-        debug = get_debug_flag()\n+    debug = get_debug_flag()\n \n     if reload is None:\n         reload = debug\n@@ -940,6 +933,9 @@ def run_command(\n     )\n \n \n+run_command.params.insert(0, _debug_option)\n+\n+\n @click.command(""shell"", short_help=""Run a shell in the app context."")\n @with_appcontext\n def shell_command() -> None:\n'",4.382352941176471,4.352941176470588
docs/cli.rst,docs/cli.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"'@@ -95,7 +95,7 @@ the ``--debug`` option.\n \n .. code-block:: console\n \n-     $ flask --app hello run --debug\n+     $ flask --app hello --debug run\n       * Serving Flask app ""hello""\n       * Debug mode: on\n       * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n@@ -550,7 +550,7 @@ a name such as ""flask run"".\n Click the *Script path* dropdown and change it to *Module name*, then input ``flask``.\n \n The *Parameters* field is set to the CLI command to execute along with any arguments.\n-This example uses ``--app hello run --debug``, which will run the development server in\n+This example uses ``--app hello --debug run``, which will run the development server in\n debug mode. ``--app hello`` should be the import or file with your Flask app.\n \n If you installed your project as a package in your virtualenv, you may uncheck the\n'",1.0,1.0
docs/config.rst,docs/config.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"""@@ -47,12 +47,12 @@ Debug Mode\n \n The :data:`DEBUG` config value is special because it may behave inconsistently if\n changed after the app has begun setting up. In order to set debug mode reliably, use the\n-``--debug`` option on the ``flask run`` command. ``flask run`` will use the interactive\n+``--debug`` option on the ``flask`` command. ``flask run`` will use the interactive\n debugger and reloader by default in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello run --debug\n+    $ flask --app hello --debug run\n \n Using the option is recommended. While it is possible to set :data:`DEBUG` in your\n config or code, this is strongly discouraged. It can't be read early by the ``flask run``\n""",1.0,1.0
docs/debugging.rst,docs/debugging.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"'@@ -43,7 +43,7 @@ The debugger is enabled by default when the development server is run in debug m\n \n .. code-block:: text\n \n-    $ flask --app hello run --debug\n+    $ flask --app hello --debug run\n \n When running from Python code, passing ``debug=True`` enables debug mode, which is\n mostly equivalent.\n@@ -72,7 +72,7 @@ which can interfere.\n \n .. code-block:: text\n \n-    $ flask --app hello run --debug --no-debugger --no-reload\n+    $ flask --app hello --debug run --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"""@@ -108,7 +108,7 @@ To enable debug mode, use the ``--debug`` option.\n \n .. code-block:: text\n \n-    $ flask --app hello run --debug\n+    $ flask --app hello --debug run\n      * Serving Flask app 'hello'\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n""",1.1875,1.1875
docs/server.rst,docs/server.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"'@@ -24,7 +24,7 @@ debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello run --debug\n+    $ flask --app hello --debug run\n \n This enables debug mode, including the interactive debugger and reloader, and then\n starts the server on http://localhost:5000/. Use ``flask run --help`` to see the\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"""@@ -137,7 +137,7 @@ follow the tutorial.\n \n .. code-block:: text\n \n-    $ flask --app flaskr run --debug\n+    $ flask --app flaskr --debug run\n \n You'll see output similar to this:\n \n""",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,4d69165ab6e17fa754139d348cdfd9edacbcb999,229dcbb5ce3fd935974d923be84ad1bf9efb61e8,'revert run debug docs',"'@@ -48,7 +48,7 @@ Run\n .. code-block:: text\n \n     $ flask --app flaskr init-db\n-    $ flask --app flaskr run --debug\n+    $ flask --app flaskr --debug run\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
docs/cli.rst,docs/cli.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"'@@ -95,7 +95,7 @@ the ``--debug`` option.\n \n .. code-block:: console\n \n-     $ flask --app hello --debug run\n+     $ flask --app hello run --debug\n       * Serving Flask app ""hello""\n       * Debug mode: on\n       * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n@@ -550,7 +550,7 @@ a name such as ""flask run"".\n Click the *Script path* dropdown and change it to *Module name*, then input ``flask``.\n \n The *Parameters* field is set to the CLI command to execute along with any arguments.\n-This example uses ``--app hello --debug run``, which will run the development server in\n+This example uses ``--app hello run --debug``, which will run the development server in\n debug mode. ``--app hello`` should be the import or file with your Flask app.\n \n If you installed your project as a package in your virtualenv, you may uncheck the\n'",1.0,1.0
docs/config.rst,docs/config.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"""@@ -47,12 +47,12 @@ Debug Mode\n \n The :data:`DEBUG` config value is special because it may behave inconsistently if\n changed after the app has begun setting up. In order to set debug mode reliably, use the\n-``--debug`` option on the ``flask`` command. ``flask run`` will use the interactive\n+``--debug`` option on the ``flask run`` command. ``flask run`` will use the interactive\n debugger and reloader by default in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n Using the option is recommended. While it is possible to set :data:`DEBUG` in your\n config or code, this is strongly discouraged. It can't be read early by the ``flask run``\n""",1.0,1.0
docs/debugging.rst,docs/debugging.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"'@@ -43,7 +43,7 @@ The debugger is enabled by default when the development server is run in debug m\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n When running from Python code, passing ``debug=True`` enables debug mode, which is\n mostly equivalent.\n@@ -72,7 +72,7 @@ which can interfere.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run --no-debugger --no-reload\n+    $ flask --app hello run --debug --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"""@@ -108,7 +108,7 @@ To enable debug mode, use the ``--debug`` option.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n      * Serving Flask app 'hello'\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n""",1.1875,1.1875
docs/server.rst,docs/server.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"'@@ -24,7 +24,7 @@ debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n This enables debug mode, including the interactive debugger and reloader, and then\n starts the server on http://localhost:5000/. Use ``flask run --help`` to see the\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"""@@ -137,7 +137,7 @@ follow the tutorial.\n \n .. code-block:: text\n \n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n You'll see output similar to this:\n \n""",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,74e5263c88e51bb442879ab863a5d03292fc0a33,eeebb5adc7bc30c79975dece8119b82ddc063130,'new run debug docs',"'@@ -48,7 +48,7 @@ Run\n .. code-block:: text\n \n     $ flask --app flaskr init-db\n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,bb1f83c26586f1aa254d67a67e6b692034b4cb4a,74e5263c88e51bb442879ab863a5d03292fc0a33,'Bump dessant/lock-threads from 3 to 4\n\nBumps [dessant/lock-threads](https://github.com/dessant/lock-threads) from 3 to 4.\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -11,7 +11,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@v3\n+      - uses: dessant/lock-threads@v4\n         with:\n           github-token: ${{ github.token }}\n           issue-inactive-days: 14\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,fa1ee7066807c21256e90089731c548b313394d2,'Fix subdomain inheritance for nested blueprints.\n\nFixes #4834',"'@@ -453,6 +453,15 @@ class Blueprint(Scaffold):\n         for blueprint, bp_options in self._blueprints:\n             bp_options = bp_options.copy()\n             bp_url_prefix = bp_options.get(""url_prefix"")\n+            bp_subdomain = bp_options.get(""subdomain"")\n+\n+            if bp_subdomain is None:\n+                bp_subdomain = blueprint.subdomain\n+\n+            if state.subdomain is not None and bp_subdomain is None:\n+                bp_options[""subdomain""] = state.subdomain\n+            elif bp_subdomain is not None:\n+                bp_options[""subdomain""] = bp_subdomain\n \n             if bp_url_prefix is None:\n                 bp_url_prefix = blueprint.url_prefix\n'",2.1621621621621623,2.27027027027027
tests/test_blueprints.py,tests/test_blueprints.py,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,fa1ee7066807c21256e90089731c548b313394d2,'Fix subdomain inheritance for nested blueprints.\n\nFixes #4834',"'@@ -950,6 +950,53 @@ def test_nesting_url_prefixes(\n     assert response.status_code == 200\n \n \n+def test_nesting_subdomains(app, client) -> None:\n+    subdomain = ""api""\n+    parent = flask.Blueprint(""parent"", __name__)\n+    child = flask.Blueprint(""child"", __name__)\n+\n+    @child.route(""/child/"")\n+    def index():\n+        return ""child""\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, subdomain=subdomain)\n+\n+    client.allow_subdomain_redirects = True\n+\n+    domain_name = ""domain.tld""\n+    app.config[""SERVER_NAME""] = domain_name\n+    response = client.get(""/child/"", base_url=""http://api."" + domain_name)\n+\n+    assert response.status_code == 200\n+\n+\n+def test_child_overrides_parent_subdomain(app, client) -> None:\n+    child_subdomain = ""api""\n+    parent_subdomain = ""parent""\n+    parent = flask.Blueprint(""parent"", __name__)\n+    child = flask.Blueprint(""child"", __name__, subdomain=child_subdomain)\n+\n+    @child.route(""/"")\n+    def index():\n+        return ""child""\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, subdomain=parent_subdomain)\n+\n+    client.allow_subdomain_redirects = True\n+\n+    domain_name = ""domain.tld""\n+    app.config[""SERVER_NAME""] = domain_name\n+    response = client.get(""/"", base_url=f""http://{child_subdomain}.{domain_name}"")\n+\n+    assert response.status_code == 200\n+\n+    response = client.get(""/"", base_url=f""http://{parent_subdomain}.{domain_name}"")\n+\n+    assert response.status_code == 404\n+\n+\n def test_unique_blueprint_names(app, client) -> None:\n     bp = flask.Blueprint(""bp"", __name__)\n     bp2 = flask.Blueprint(""bp"", __name__)\n'",1.0264900662251655,1.0258064516129033
CHANGES.rst,CHANGES.rst,cabda5935322d75e7aedb3ee6d59fb7ab62bd674,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,"""Ensure that blueprint subdomains suffix-chain\n\nThis ensures that a child's subdomain prefixs any parent subdomain\nsuch that the full domain is child.parent.domain.tld and onwards with\nfurther nesting. This makes the most sense to users and mimics how\nurl_prefixes work (although subdomains suffix).""","'@@ -3,6 +3,8 @@ Version 2.3.0\n \n Unreleased\n \n+-   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n+\n \n Version 2.2.3\n -------------\n'",0,0
docs/blueprints.rst,docs/blueprints.rst,cabda5935322d75e7aedb3ee6d59fb7ab62bd674,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,"""Ensure that blueprint subdomains suffix-chain\n\nThis ensures that a child's subdomain prefixs any parent subdomain\nsuch that the full domain is child.parent.domain.tld and onwards with\nfurther nesting. This makes the most sense to users and mimics how\nurl_prefixes work (although subdomains suffix).""","'@@ -140,6 +140,19 @@ name, and child URLs will be prefixed with the parent\'s URL prefix.\n     url_for(\'parent.child.create\')\n     /parent/child/create\n \n+In addition a child blueprint\'s will gain their parent\'s subdomain,\n+with their subdomain as prefix if present i.e.\n+\n+.. code-block:: python\n+\n+    parent = Blueprint(\'parent\', __name__, subdomain=\'parent\')\n+    child = Blueprint(\'child\', __name__, subdomain=\'child\')\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent)\n+\n+    url_for(\'parent.child.create\', _external=True)\n+    ""child.parent.domain.tld""\n+\n Blueprint-specific before request functions, etc. registered with the\n parent will trigger for the child. If a child does not have an error\n handler that can handle a given exception, the parent\'s will be tried.\n'",2.0,2.0
src/flask/blueprints.py,src/flask/blueprints.py,cabda5935322d75e7aedb3ee6d59fb7ab62bd674,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,"""Ensure that blueprint subdomains suffix-chain\n\nThis ensures that a child's subdomain prefixs any parent subdomain\nsuch that the full domain is child.parent.domain.tld and onwards with\nfurther nesting. This makes the most sense to users and mimics how\nurl_prefixes work (although subdomains suffix).""","'@@ -358,6 +358,9 @@ class Blueprint(Scaffold):\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n \n+        .. versionchanged:: 2.3\n+            Nested blueprints now correctly apply subdomains.\n+\n         .. versionchanged:: 2.0.1\n             Nested blueprints are registered with their dotted name.\n             This allows different blueprints with the same name to be\n@@ -458,10 +461,12 @@ class Blueprint(Scaffold):\n             if bp_subdomain is None:\n                 bp_subdomain = blueprint.subdomain\n \n-            if state.subdomain is not None and bp_subdomain is None:\n-                bp_options[""subdomain""] = state.subdomain\n+            if state.subdomain is not None and bp_subdomain is not None:\n+                bp_options[""subdomain""] = bp_subdomain + ""."" + state.subdomain\n             elif bp_subdomain is not None:\n                 bp_options[""subdomain""] = bp_subdomain\n+            elif state.subdomain is not None:\n+                bp_options[""subdomain""] = state.subdomain\n \n             if bp_url_prefix is None:\n                 bp_url_prefix = blueprint.url_prefix\n'",2.27027027027027,2.2972972972972974
tests/test_blueprints.py,tests/test_blueprints.py,cabda5935322d75e7aedb3ee6d59fb7ab62bd674,d7b6c1f6703df405c69da45e7e0ba3d1aed512ce,"""Ensure that blueprint subdomains suffix-chain\n\nThis ensures that a child's subdomain prefixs any parent subdomain\nsuch that the full domain is child.parent.domain.tld and onwards with\nfurther nesting. This makes the most sense to users and mimics how\nurl_prefixes work (although subdomains suffix).""","'@@ -971,7 +971,7 @@ def test_nesting_subdomains(app, client) -> None:\n     assert response.status_code == 200\n \n \n-def test_child_overrides_parent_subdomain(app, client) -> None:\n+def test_child_and_parent_subdomain(app, client) -> None:\n     child_subdomain = ""api""\n     parent_subdomain = ""parent""\n     parent = flask.Blueprint(""parent"", __name__)\n@@ -988,7 +988,9 @@ def test_child_overrides_parent_subdomain(app, client) -> None:\n \n     domain_name = ""domain.tld""\n     app.config[""SERVER_NAME""] = domain_name\n-    response = client.get(""/"", base_url=f""http://{child_subdomain}.{domain_name}"")\n+    response = client.get(\n+        ""/"", base_url=f""http://{child_subdomain}.{parent_subdomain}.{domain_name}""\n+    )\n \n     assert response.status_code == 200\n \n'",1.0258064516129033,1.0258064516129033
.github/workflows/tests.yaml,.github/workflows/tests.yaml,2a9d16d01189249749324141f0c294b31bf7ba6b,4d69165ab6e17fa754139d348cdfd9edacbcb999,'update tested python versions\n\ntest 3.11 final\ntest 3.12 dev\nupdate for tox 4',"""@@ -24,16 +24,17 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - {name: Linux, python: '3.10', os: ubuntu-latest, tox: py310}\n-          - {name: Windows, python: '3.10', os: windows-latest, tox: py310}\n-          - {name: Mac, python: '3.10', os: macos-latest, tox: py310}\n-          - {name: '3.11-dev', python: '3.11-dev', os: ubuntu-latest, tox: py311}\n+          - {name: Linux, python: '3.11', os: ubuntu-latest, tox: py311}\n+          - {name: Windows, python: '3.11', os: windows-latest, tox: py311}\n+          - {name: Mac, python: '3.11', os: macos-latest, tox: py311}\n+          - {name: '3.12-dev', python: '3.12-dev', os: ubuntu-latest, tox: py312}\n+          - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n-          - {name: 'PyPy', python: 'pypy-3.7', os: ubuntu-latest, tox: pypy37}\n-          - {name: 'Pallets Minimum Versions', python: '3.10', os: ubuntu-latest, tox: py-min}\n-          - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py-dev}\n+          - {name: 'PyPy', python: 'pypy-3.9', os: ubuntu-latest, tox: pypy39}\n+          - {name: 'Pallets Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n+          - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n           - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@v3\n@@ -47,5 +48,11 @@ jobs:\n           pip install -U wheel\n           pip install -U setuptools\n           python -m pip install -U pip\n+      - name: cache mypy\n+        uses: actions/cache@v3.2.2\n+        with:\n+          path: ./.mypy_cache\n+          key: mypy|${{ matrix.python }}|${{ hashFiles('setup.cfg') }}\n+        if: matrix.tox == 'typing'\n       - run: pip install tox\n-      - run: tox -e ${{ matrix.tox }}\n+      - run: tox run -e ${{ matrix.tox }}\n""",0,0
src/flask/views.py,src/flask/views.py,a7487701999fee55bb76a393e72c96ac8e277fcf,4a0f658897dfcb86fad09d0411e74f0658ae72f1,'clarify `View.as_view` docstring',"'@@ -92,8 +92,8 @@ class View:\n         :attr:`init_every_request` to ``False``, the same instance will\n         be used for every request.\n \n-        The arguments passed to this method are forwarded to the view\n-        class ``__init__`` method.\n+        Except for ``name``, all other arguments passed to this method\n+        are forwarded to the view class ``__init__`` method.\n \n         .. versionchanged:: 2.2\n             Added the ``init_every_request`` class attribute.\n'",2.8333333333333335,2.8333333333333335
.github/workflows/lock.yaml,.github/workflows/lock.yaml,9da947a279d5ed5958609e0b6ec690160c496480,3812a52e96d8dd0630eb3263485bce6da5cda07c,'set workflow permissions',"'@@ -1,18 +1,25 @@\n-# This does not automatically close ""stale"" issues. Instead, it locks closed issues after 2 weeks of no activity.\n-# If there\'s a new issue related to an old one, we\'ve found it\'s much easier to work on as a new issue.\n-\n name: \'Lock threads\'\n+# Lock closed issues that have not received any further activity for\n+# two weeks. This does not close open issues, only humans may do that.\n+# We find that it is easier to respond to new issues with fresh examples\n+# rather than continuing discussions on old issues.\n \n on:\n   schedule:\n     - cron: \'0 0 * * *\'\n \n+permissions:\n+  issues: write\n+  pull-requests: write\n+\n+concurrency:\n+  group: lock\n+\n jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n       - uses: dessant/lock-threads@v4\n         with:\n-          github-token: ${{ github.token }}\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -102,14 +102,14 @@ First time setup\n \n       .. code-block:: text\n \n-         $ python3 -m venv env\n-         $ . env/bin/activate\n+         $ python3 -m venv .venv\n+         $ . .venv/bin/activate\n \n     - Windows\n \n       .. code-block:: text\n \n-         > py -3 -m venv env\n+         > py -3 -m venv .venv\n          > env\\Scripts\\activate\n \n -   Upgrade pip and setuptools.\n'",0,0
docs/cli.rst,docs/cli.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -280,25 +280,25 @@ script. Activating the virtualenv will set the variables.\n \n    .. group-tab:: Bash\n \n-      Unix Bash, :file:`venv/bin/activate`::\n+      Unix Bash, :file:`.venv/bin/activate`::\n \n           $ export FLASK_APP=hello\n \n    .. group-tab:: Fish\n \n-      Fish, :file:`venv/bin/activate.fish`::\n+      Fish, :file:`.venv/bin/activate.fish`::\n \n           $ set -x FLASK_APP hello\n \n    .. group-tab:: CMD\n \n-      Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::\n+      Windows CMD, :file:`.venv\\\\Scripts\\\\activate.bat`::\n \n           > set FLASK_APP=hello\n \n    .. group-tab:: Powershell\n \n-      Windows Powershell, :file:`venv\\\\Scripts\\\\activate.ps1`::\n+      Windows Powershell, :file:`.venv\\\\Scripts\\\\activate.ps1`::\n \n           > $env:FLASK_APP = ""hello""\n \n@@ -438,24 +438,16 @@ Plugins\n \n Flask will automatically load commands specified in the ``flask.commands``\n `entry point`_. This is useful for extensions that want to add commands when\n-they are installed. Entry points are specified in :file:`setup.py` ::\n+they are installed. Entry points are specified in :file:`pyproject.toml`:\n \n-    from setuptools import setup\n-\n-    setup(\n-        name=\'flask-my-extension\',\n-        ...,\n-        entry_points={\n-            \'flask.commands\': [\n-                \'my-command=flask_my_extension.commands:cli\'\n-            ],\n-        },\n-    )\n+.. code-block:: toml\n \n+    [project.entry-points.""flask.commands""]\n+    my-command = ""my_extension.commands:cli""\n \n .. _entry point: https://packaging.python.org/tutorials/packaging-projects/#entry-points\n \n-Inside :file:`flask_my_extension/commands.py` you can then export a Click\n+Inside :file:`my_extension/commands.py` you can then export a Click\n object::\n \n     import click\n@@ -493,19 +485,12 @@ Create an instance of :class:`~cli.FlaskGroup` and pass it the factory::\n     def cli():\n         """"""Management script for the Wiki application.""""""\n \n-Define the entry point in :file:`setup.py`::\n+Define the entry point in :file:`pyproject.toml`:\n \n-    from setuptools import setup\n+.. code-block:: toml\n \n-    setup(\n-        name=\'flask-my-extension\',\n-        ...,\n-        entry_points={\n-            \'console_scripts\': [\n-                \'wiki=wiki:cli\'\n-            ],\n-        },\n-    )\n+    [project.scripts]\n+    wiki = ""wiki:cli""\n \n Install the application in the virtualenv in editable mode and the custom\n script is available. Note that you don\'t need to set ``--app``. ::\n'",1.0,1.0
docs/deploying/eventlet.rst,docs/deploying/eventlet.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -34,8 +34,8 @@ Create a virtualenv, install your application, then install\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install eventlet\n \n'",0,0
docs/deploying/gevent.rst,docs/deploying/gevent.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -33,8 +33,8 @@ Create a virtualenv, install your application, then install ``gevent``.\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install gevent\n \n'",0,0
docs/deploying/gunicorn.rst,docs/deploying/gunicorn.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -30,8 +30,8 @@ Create a virtualenv, install your application, then install\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install gunicorn\n \n'",0,0
docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -33,8 +33,8 @@ Create a virtualenv, install your application, then install\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install mod_wsgi\n \n@@ -89,6 +89,6 @@ mod_wsgi to drop to that user after starting.\n \n .. code-block:: text\n \n-    $ sudo /home/hello/venv/bin/mod_wsgi-express start-server \\\n+    $ sudo /home/hello/.venv/bin/mod_wsgi-express start-server \\\n         /home/hello/wsgi.py \\\n         --user hello --group hello --port 80 --processes 4\n'",0,0
docs/deploying/uwsgi.rst,docs/deploying/uwsgi.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -29,8 +29,8 @@ Create a virtualenv, install your application, then install ``pyuwsgi``.\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install pyuwsgi\n \n'",0,0
docs/deploying/waitress.rst,docs/deploying/waitress.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -27,8 +27,8 @@ Create a virtualenv, install your application, then install\n .. code-block:: text\n \n     $ cd hello-app\n-    $ python -m venv venv\n-    $ . venv/bin/activate\n+    $ python -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install .  # install your application\n     $ pip install waitress\n \n'",0,0
docs/installation.rst,docs/installation.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -85,7 +85,7 @@ environments.\n Create an environment\n ~~~~~~~~~~~~~~~~~~~~~\n \n-Create a project folder and a :file:`venv` folder within:\n+Create a project folder and a :file:`.venv` folder within:\n \n .. tabs::\n \n@@ -95,7 +95,7 @@ Create a project folder and a :file:`venv` folder within:\n \n          $ mkdir myproject\n          $ cd myproject\n-         $ python3 -m venv venv\n+         $ python3 -m venv .venv\n \n    .. group-tab:: Windows\n \n@@ -103,7 +103,7 @@ Create a project folder and a :file:`venv` folder within:\n \n          > mkdir myproject\n          > cd myproject\n-         > py -3 -m venv venv\n+         > py -3 -m venv .venv\n \n \n .. _install-activate-env:\n@@ -119,13 +119,13 @@ Before you work on your project, activate the corresponding environment:\n \n       .. code-block:: text\n \n-         $ . venv/bin/activate\n+         $ . .venv/bin/activate\n \n    .. group-tab:: Windows\n \n       .. code-block:: text\n \n-         > venv\\Scripts\\activate\n+         > .venv\\Scripts\\activate\n \n Your shell prompt will change to show the name of the activated\n environment.\n'",0,0
docs/patterns/packages.rst,docs/patterns/packages.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -42,19 +42,20 @@ You should then end up with something like that::\n But how do you run your application now?  The naive ``python\n yourapplication/__init__.py`` will not work.  Let\'s just say that Python\n does not want modules in packages to be the startup file.  But that is not\n-a big problem, just add a new file called :file:`setup.py` next to the inner\n-:file:`yourapplication` folder with the following contents::\n+a big problem, just add a new file called :file:`pyproject.toml` next to the inner\n+:file:`yourapplication` folder with the following contents:\n \n-    from setuptools import setup\n+.. code-block:: toml\n \n-    setup(\n-        name=\'yourapplication\',\n-        packages=[\'yourapplication\'],\n-        include_package_data=True,\n-        install_requires=[\n-            \'flask\',\n-        ],\n-    )\n+    [project]\n+    name = ""yourapplication""\n+    dependencies = [\n+        ""flask"",\n+    ]\n+\n+    [build-system]\n+    requires = [""setuptools""]\n+    build-backend = ""setuptools.build_meta""\n \n Install your application so it is importable:\n \n@@ -98,7 +99,7 @@ And this is what :file:`views.py` would look like::\n You should then end up with something like that::\n \n     /yourapplication\n-        setup.py\n+        pyproject.toml\n         /yourapplication\n             __init__.py\n             views.py\n'",0,0
docs/tutorial/deploy.rst,docs/tutorial/deploy.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"""@@ -14,22 +14,13 @@ application.\n Build and Install\n -----------------\n \n-When you want to deploy your application elsewhere, you build a\n-distribution file. The current standard for Python distribution is the\n-*wheel* format, with the ``.whl`` extension. Make sure the wheel library\n-is installed first:\n+When you want to deploy your application elsewhere, you build a *wheel*\n+(``.whl``) file. Install and use the ``build`` tool to do this.\n \n .. code-block:: none\n \n-    $ pip install wheel\n-\n-Running ``setup.py`` with Python gives you a command line tool to issue\n-build-related commands. The ``bdist_wheel`` command will build a wheel\n-distribution file.\n-\n-.. code-block:: none\n-\n-    $ python setup.py bdist_wheel\n+    $ pip install build\n+    $ python -m build --wheel\n \n You can find the file in ``dist/flaskr-1.0.0-py3-none-any.whl``. The\n file name is in the format of {project name}-{version}-{python tag}\n@@ -54,7 +45,7 @@ create the database in the instance folder.\n \n When Flask detects that it's installed (not in editable mode), it uses\n a different directory for the instance folder. You can find it at\n-``venv/var/flaskr-instance`` instead.\n+``.venv/var/flaskr-instance`` instead.\n \n \n Configure the Secret Key\n@@ -77,7 +68,7 @@ Create the ``config.py`` file in the instance folder, which the factory\n will read from if it exists. Copy the generated value into it.\n \n .. code-block:: python\n-    :caption: ``venv/var/flaskr-instance/config.py``\n+    :caption: ``.venv/var/flaskr-instance/config.py``\n \n     SECRET_KEY = '192b9bdd22ab9ed4d12e236c78afcb9a393ec15f71bbf5dc987d54727823bcbf'\n \n""",0,0
docs/tutorial/install.rst,docs/tutorial/install.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -1,11 +1,10 @@\n Make the Project Installable\n ============================\n \n-Making your project installable means that you can build a\n-*distribution* file and install that in another environment, just like\n-you installed Flask in your project\'s environment. This makes deploying\n-your project the same as installing any other library, so you\'re using\n-all the standard Python tools to manage everything.\n+Making your project installable means that you can build a *wheel* file and install that\n+in another environment, just like you installed Flask in your project\'s environment.\n+This makes deploying your project the same as installing any other library, so you\'re\n+using all the standard Python tools to manage everything.\n \n Installing also comes with other benefits that might not be obvious from\n the tutorial or as a new Python user, including:\n@@ -28,31 +27,25 @@ the tutorial or as a new Python user, including:\n Describe the Project\n --------------------\n \n-The ``setup.py`` file describes your project and the files that belong\n-to it.\n+The ``pyproject.toml`` file describes your project and how to build it.\n \n-.. code-block:: python\n-    :caption: ``setup.py``\n+.. code-block:: toml\n+    :caption: ``pyproject.toml``\n \n-    from setuptools import find_packages, setup\n+    [project]\n+    name = ""flaskr""\n+    version = ""1.0.0""\n+    dependencies = [\n+        ""flask"",\n+    ]\n \n-    setup(\n-        name=\'flaskr\',\n-        version=\'1.0.0\',\n-        packages=find_packages(),\n-        include_package_data=True,\n-        install_requires=[\n-            \'flask\',\n-        ],\n-    )\n+    [build-system]\n+    requires = [""setuptools""]\n+    build-backend = ""setuptools.build_meta""\n \n \n-``packages`` tells Python what package directories (and the Python files\n-they contain) to include. ``find_packages()`` finds these directories\n-automatically so you don\'t have to type them out. To include other\n-files, such as the static and templates directories,\n-``include_package_data`` is set. Python needs another file named\n-``MANIFEST.in`` to tell what this other data is.\n+The setuptools build backend needs another file named ``MANIFEST.in`` to tell it about\n+non-Python files to include.\n \n .. code-block:: none\n     :caption: ``MANIFEST.in``\n@@ -62,9 +55,8 @@ files, such as the static and templates directories,\n     graft flaskr/templates\n     global-exclude *.pyc\n \n-This tells Python to copy everything in the ``static`` and ``templates``\n-directories, and the ``schema.sql`` file, but to exclude all bytecode\n-files.\n+This tells the build to copy everything in the ``static`` and ``templates`` directories,\n+and the ``schema.sql`` file, but to exclude all bytecode files.\n \n See the official `Packaging tutorial <packaging tutorial_>`_ and\n `detailed guide <packaging guide_>`_ for more explanation of the files\n@@ -83,10 +75,10 @@ Use ``pip`` to install your project in the virtual environment.\n \n     $ pip install -e .\n \n-This tells pip to find ``setup.py`` in the current directory and install\n-it in *editable* or *development* mode. Editable mode means that as you\n-make changes to your local code, you\'ll only need to re-install if you\n-change the metadata about the project, such as its dependencies.\n+This tells pip to find ``pyproject.toml`` in the current directory and install the\n+project in *editable* or *development* mode. Editable mode means that as you make\n+changes to your local code, you\'ll only need to re-install if you change the metadata\n+about the project, such as its dependencies.\n \n You can observe that the project is now installed with ``pip list``.\n \n'",0,0
docs/tutorial/layout.rst,docs/tutorial/layout.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"""@@ -41,7 +41,7 @@ The project directory will contain:\n * ``flaskr/``, a Python package containing your application code and\n   files.\n * ``tests/``, a directory containing test modules.\n-* ``venv/``, a Python virtual environment where Flask and other\n+* ``.venv/``, a Python virtual environment where Flask and other\n   dependencies are installed.\n * Installation files telling Python how to install your project.\n * Version control config, such as `git`_. You should make a habit of\n@@ -80,8 +80,8 @@ By the end, your project layout will look like this:\n     │   ├── test_db.py\n     │   ├── test_auth.py\n     │   └── test_blog.py\n-    ├── venv/\n-    ├── setup.py\n+    ├── .venv/\n+    ├── pyproject.toml\n     └── MANIFEST.in\n \n If you're using version control, the following files that are generated\n@@ -92,7 +92,7 @@ write. For example, with git:\n .. code-block:: none\n     :caption: ``.gitignore``\n \n-    venv/\n+    .venv/\n \n     *.pyc\n     __pycache__/\n""",0,0
docs/tutorial/tests.rst,docs/tutorial/tests.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -490,20 +490,18 @@ no longer exist in the database.\n Running the Tests\n -----------------\n \n-Some extra configuration, which is not required but makes running\n-tests with coverage less verbose, can be added to the project\'s\n-``setup.cfg`` file.\n+Some extra configuration, which is not required but makes running tests with coverage\n+less verbose, can be added to the project\'s ``pyproject.toml`` file.\n \n-.. code-block:: none\n-    :caption: ``setup.cfg``\n+.. code-block:: toml\n+    :caption: ``pyproject.toml``\n \n-    [tool:pytest]\n-    testpaths = tests\n+    [tool.pytest.ini_options]\n+    testpaths = [""tests""]\n \n-    [coverage:run]\n-    branch = True\n-    source =\n-        flaskr\n+    [tool.coverage.run]\n+    branch = true\n+    source = [""flaskr""]\n \n To run the tests, use the ``pytest`` command. It will find and run all\n the test functions you\'ve written.\n@@ -514,7 +512,7 @@ the test functions you\'ve written.\n \n     ========================= test session starts ==========================\n     platform linux -- Python 3.6.4, pytest-3.5.0, py-1.5.3, pluggy-0.6.0\n-    rootdir: /home/user/Projects/flask-tutorial, inifile: setup.cfg\n+    rootdir: /home/user/Projects/flask-tutorial\n     collected 23 items\n \n     tests/test_auth.py ........                                      [ 34%]\n'",1.0,1.0
examples/javascript/.gitignore,examples/javascript/.gitignore,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -1,4 +1,4 @@\n-venv/\n+.venv/\n *.pyc\n __pycache__/\n instance/\n'",0,0
examples/javascript/README.rst,examples/javascript/README.rst,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,6d6d986fc502c2c24fe3db0ec0dbb062d053e068,'update docs and examples for pyproject\n\nsetup.py -> pyproject.toml\nvenv -> .venv',"'@@ -23,8 +23,8 @@ Install\n \n .. code-block:: text\n \n-    $ python3 -m venv venv\n-    $ . venv/bin/activate\n+    $ python3 -m venv .venv\n+    $ . .venv/bin/activate\n     $ pip install -e .\n \n \n'",0,0
.flake8,.flake8,261e4a6cf287180b69c4db407791e43ce90e50ad,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,'fix flake8 bugbear errors',"'@@ -1,12 +1,12 @@\n [flake8]\n-# B = bugbear\n-# E = pycodestyle errors\n-# F = flake8 pyflakes\n-# W = pycodestyle warnings\n-# B9 = bugbear opinions\n-# ISC = implicit str concat\n-select = B, E, F, W, B9, ISC\n-ignore =\n+extend-select =\n+    # bugbear\n+    B\n+    # bugbear opinions\n+    B9\n+    # implicit str concat\n+    ISC\n+extend-ignore =\n     # slice notation whitespace, invalid\n     E203\n     # import at top, too many circular import fixes\n@@ -15,10 +15,11 @@ ignore =\n     E501\n     # bare except, handled by bugbear B001\n     E722\n-    # bin op line break, invalid\n-    W503\n-    # requires Python 3.10\n+    # zip with strict=, requires python >= 3.10\n     B905\n+    # string formatting opinion, B028 renamed to B907\n+    B028\n+    B907\n # up to 88 allowed by bugbear B950\n max-line-length = 80\n per-file-ignores =\n'",0,0
tests/test_appctx.py,tests/test_appctx.py,261e4a6cf287180b69c4db407791e43ce90e50ad,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,'fix flake8 bugbear errors',"'@@ -120,14 +120,14 @@ def test_app_tearing_down_with_unhandled_exception(app, client):\n \n     @app.route(""/"")\n     def index():\n-        raise Exception(""dummy"")\n+        raise ValueError(""dummy"")\n \n-    with pytest.raises(Exception, match=""dummy""):\n+    with pytest.raises(ValueError, match=""dummy""):\n         with app.app_context():\n             client.get(""/"")\n \n     assert len(cleanup_stuff) == 1\n-    assert isinstance(cleanup_stuff[0], Exception)\n+    assert isinstance(cleanup_stuff[0], ValueError)\n     assert str(cleanup_stuff[0]) == ""dummy""\n \n \n'",1.103448275862069,1.103448275862069
tests/test_basic.py,tests/test_basic.py,261e4a6cf287180b69c4db407791e43ce90e50ad,8f13f5b6d672f1ba434f9c8ebe2c1b1dd385962e,'fix flake8 bugbear errors',"'@@ -1472,11 +1472,11 @@ def test_static_route_with_host_matching():\n         rv = flask.url_for(""static"", filename=""index.html"", _external=True)\n         assert rv == ""http://example.com/static/index.html""\n     # Providing static_host without host_matching=True should error.\n-    with pytest.raises(Exception):\n+    with pytest.raises(AssertionError):\n         flask.Flask(__name__, static_host=""example.com"")\n     # Providing host_matching=True with static_folder\n     # but without static_host should error.\n-    with pytest.raises(Exception):\n+    with pytest.raises(AssertionError):\n         flask.Flask(__name__, host_matching=True)\n     # Providing host_matching=True without static_host\n     # but with static_folder=None should not error.\n'",1.0748031496062993,1.0748031496062993
.flake8,.flake8,3a35977d5fbcc424688d32154d250bc0bae918d6,78b42b9ac288c20c107a3b6779c322acb45be3d4,'stop ignoring flake8 e402',"'@@ -9,8 +9,6 @@ extend-select =\n extend-ignore =\n     # slice notation whitespace, invalid\n     E203\n-    # import at top, too many circular import fixes\n-    E402\n     # line length, handled by bugbear B950\n     E501\n     # bare except, handled by bugbear B001\n'",0,0
examples/javascript/js_example/__init__.py,examples/javascript/js_example/__init__.py,3a35977d5fbcc424688d32154d250bc0bae918d6,78b42b9ac288c20c107a3b6779c322acb45be3d4,'stop ignoring flake8 e402',"'@@ -2,4 +2,4 @@ from flask import Flask\n \n app = Flask(__name__)\n \n-from js_example import views  # noqa: F401\n+from js_example import views  # noqa: E402, F401\n'",0,0
tests/test_apps/blueprintapp/__init__.py,tests/test_apps/blueprintapp/__init__.py,3a35977d5fbcc424688d32154d250bc0bae918d6,78b42b9ac288c20c107a3b6779c322acb45be3d4,'stop ignoring flake8 e402',"'@@ -2,8 +2,8 @@ from flask import Flask\n \n app = Flask(__name__)\n app.config[""DEBUG""] = True\n-from blueprintapp.apps.admin import admin\n-from blueprintapp.apps.frontend import frontend\n+from blueprintapp.apps.admin import admin  # noqa: E402\n+from blueprintapp.apps.frontend import frontend  # noqa: E402\n \n app.register_blueprint(admin)\n app.register_blueprint(frontend)\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,0b4b61146ffca0f7dfc25f1b245df89442293335,99b34f7148b77d4b1311593590629c2bc8e8e772,"'build, provenance, publish workflow'","'@@ -1,18 +1,25 @@\n-# This does not automatically close ""stale"" issues. Instead, it locks closed issues after 2 weeks of no activity.\n-# If there\'s a new issue related to an old one, we\'ve found it\'s much easier to work on as a new issue.\n-\n name: \'Lock threads\'\n+# Lock closed issues that have not received any further activity for\n+# two weeks. This does not close open issues, only humans may do that.\n+# We find that it is easier to respond to new issues with fresh examples\n+# rather than continuing discussions on old issues.\n \n on:\n   schedule:\n     - cron: \'0 0 * * *\'\n \n+permissions:\n+  issues: write\n+  pull-requests: write\n+\n+concurrency:\n+  group: lock\n+\n jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@v3\n+      - uses: dessant/lock-threads@c1b35aecc5cdb1a34539d14196df55838bb2f836\n         with:\n-          github-token: ${{ github.token }}\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
docs/views.rst,docs/views.rst,d93760d8bd6e367faefe9ad550f753e32ef9a12d,39fc0c6badd3e9d2537c7baa765d9cc80a8a8d47,'Fix function argument name',"'@@ -297,7 +297,7 @@ provide get (list) and post (create) methods.\n             db.session.commit()\n             return jsonify(item.to_json())\n \n-    def register_api(app, model, url):\n+    def register_api(app, model, name):\n         item = ItemAPI.as_view(f""{name}-item"", model)\n         group = GroupAPI.as_view(f""{name}-group"", model)\n         app.add_url_rule(f""/{name}/<int:id>"", view_func=item)\n'",1.2222222222222223,1.2222222222222223
.github/workflows/publish.yaml,.github/workflows/publish.yaml,94a23a3e24b6736ca3b54773de0ce384270c457a,ef85270d9ada6d9b25beabb4602047fc91eef2f9,'Bump actions/setup-python from 4.4.0 to 4.5.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.4.0 to 4.5.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/5ccb29d8773c3f3f653e1705f474dfaa8a06a912...d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -10,7 +10,7 @@ jobs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n       - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n-      - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912\n+      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n         with:\n           python-version: '3.x'\n           cache: 'pip'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,94a23a3e24b6736ca3b54773de0ce384270c457a,ef85270d9ada6d9b25beabb4602047fc91eef2f9,'Bump actions/setup-python from 4.4.0 to 4.5.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.4.0 to 4.5.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/5ccb29d8773c3f3f653e1705f474dfaa8a06a912...d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -38,7 +38,7 @@ jobs:\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n-      - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912\n+      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,74c256872b5f0be65e9f71b91a73ac4b02647298,ef85270d9ada6d9b25beabb4602047fc91eef2f9,'Bump actions/cache from 3.2.3 to 3.2.4\n\nBumps [actions/cache](https://github.com/actions/cache) from 3.2.3 to 3.2.4.\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/58c146cc91c5b9e778e71775dfe9bf1442ad9a12...627f0f41f6904a5b1efbaed9f96d9eb58e92e920)\n\n---\nupdated-dependencies:\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -49,7 +49,7 @@ jobs:\n           pip install -U setuptools\n           python -m pip install -U pip\n       - name: cache mypy\n-        uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12\n+        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ matrix.python }}|${{ hashFiles('pyproject.toml') }}\n""",0,0
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,9abe28130d4f0aff48b4f9931ebc15bd7617f19f,39fc0c6badd3e9d2537c7baa765d9cc80a8a8d47,'fix doc',"'@@ -91,7 +91,7 @@ To run such an application, you can use the :command:`flask` command:\n \n .. code-block:: text\n \n-    $ flask run --app hello run\n+    $ flask --app hello run\n \n Flask will automatically detect the factory if it is named\n ``create_app`` or ``make_app`` in ``hello``. You can also pass arguments\n@@ -99,7 +99,7 @@ to the factory like this:\n \n .. code-block:: text\n \n-    $ flask run --app hello:create_app(local_auth=True)``\n+    $ flask --app hello:create_app(local_auth=True) run``\n \n Then the ``create_app`` factory in ``myapp`` is called with the keyword\n argument ``local_auth=True``. See :doc:`/cli` for more detail.\n'",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,c1d01f69994e87489d04c3218a417f517ab6c88e,3502cc951bc8b16ffb7fc90d8cecf059b214a167,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 22.12.0 → 23.1.0](https://github.com/psf/black/compare/22.12.0...23.1.0)',"'@@ -15,7 +15,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 22.12.0\n+    rev: 23.1.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
tests/test_reqctx.py,tests/test_reqctx.py,a15da89dbb4be39be09ed7e5b57a22acfb117e6d,c1d01f69994e87489d04c3218a417f517ab6c88e,"'[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci'","'@@ -227,7 +227,6 @@ def test_session_error_pops_context():\n \n \n def test_session_dynamic_cookie_name():\n-\n     # This session interface will use a cookie with a different name if the\n     # requested url ends with the string ""dynamic_cookie""\n     class PathAwareSessionInterface(SecureCookieSessionInterface):\n'",1.1142857142857143,1.1142857142857143
docs/patterns/packages.rst,docs/patterns/packages.rst,428d9430bc69031150a8d50ac8af17cc8082ea4e,dd2423ebdec3b58db0dea58897d321c7c629c1b3,'Fix command-line formatting',"'@@ -66,6 +66,8 @@ To use the ``flask`` command and run your application you need to set\n the ``--app`` option that tells Flask where to find the application\n instance:\n \n+.. code-block:: text\n+\n     $ flask --app yourapplication run\n \n What did we gain from this?  Now we can restructure the application a bit\n'",0,0
docs/patterns/celery.rst,docs/patterns/celery.rst,dca8cf013b2c0086539697ae6e4515a1c819092c,dd2423ebdec3b58db0dea58897d321c7c629c1b3,'rewrite celery background tasks docs',"'@@ -1,105 +1,235 @@\n-Celery Background Tasks\n-=======================\n+Background Tasks with Celery\n+============================\n \n-If your application has a long running task, such as processing some uploaded\n-data or sending email, you don\'t want to wait for it to finish during a\n-request. Instead, use a task queue to send the necessary data to another\n-process that will run the task in the background while the request returns\n-immediately.\n+If your application has a long running task, such as processing some uploaded data or\n+sending email, you don\'t want to wait for it to finish during a request. Instead, use a\n+task queue to send the necessary data to another process that will run the task in the\n+background while the request returns immediately.\n+\n+`Celery`_ is a powerful task queue that can be used for simple background tasks as well\n+as complex multi-stage programs and schedules. This guide will show you how to configure\n+Celery using Flask. Read Celery\'s `First Steps with Celery`_ guide to learn how to use\n+Celery itself.\n+\n+.. _Celery: https://celery.readthedocs.io\n+.. _First Steps with Celery: https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-celery.html\n \n-Celery is a powerful task queue that can be used for simple background tasks\n-as well as complex multi-stage programs and schedules. This guide will show you\n-how to configure Celery using Flask, but assumes you\'ve already read the\n-`First Steps with Celery <https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-celery.html>`_\n-guide in the Celery documentation.\n \n Install\n -------\n \n-Celery is a separate Python package. Install it from PyPI using pip::\n+Install Celery from PyPI, for example using pip:\n+\n+.. code-block:: text\n \n     $ pip install celery\n \n-Configure\n----------\n \n-The first thing you need is a Celery instance, this is called the celery\n-application.  It serves the same purpose as the :class:`~flask.Flask`\n-object in Flask, just for Celery.  Since this instance is used as the\n-entry-point for everything you want to do in Celery, like creating tasks\n-and managing workers, it must be possible for other modules to import it.\n+Integrate Celery with Flask\n+---------------------------\n \n-For instance you can place this in a ``tasks`` module.  While you can use\n-Celery without any reconfiguration with Flask, it becomes a bit nicer by\n-subclassing tasks and adding support for Flask\'s application contexts and\n-hooking it up with the Flask configuration.\n+You can use Celery without any integration with Flask, but it\'s convenient to configure\n+it through Flask\'s config, and to let tasks access the Flask application.\n \n-This is all that is necessary to integrate Celery with Flask:\n+Celery uses similar ideas to Flask, with a ``Celery`` app object that has configuration\n+and registers tasks. While creating a Flask app, use the following code to create and\n+configure a Celery app as well.\n \n .. code-block:: python\n \n-    from celery import Celery\n-\n-    def make_celery(app):\n-        celery = Celery(app.import_name)\n-        celery.conf.update(app.config[""CELERY_CONFIG""])\n+    from celery import Celery, Task\n \n-        class ContextTask(celery.Task):\n-            def __call__(self, *args, **kwargs):\n+    def celery_init_app(app: Flask) -> Celery:\n+        class FlaskTask(Task):\n+            def __call__(self, *args: object, **kwargs: object) -> object:\n                 with app.app_context():\n                     return self.run(*args, **kwargs)\n \n-        celery.Task = ContextTask\n-        return celery\n+        celery_app = Celery(app.name, task_cls=FlaskTask)\n+        celery_app.config_from_object(app.config[""CELERY""])\n+        celery_app.set_default()\n+        app.extensions[""celery""] = celery_app\n+        return celery_app\n \n-The function creates a new Celery object, configures it with the broker\n-from the application config, updates the rest of the Celery config from\n-the Flask config and then creates a subclass of the task that wraps the\n-task execution in an application context.\n+This creates and returns a ``Celery`` app object. Celery `configuration`_ is taken from\n+the ``CELERY`` key in the Flask configuration. The Celery app is set as the default, so\n+that it is seen during each request. The ``Task`` subclass automatically runs task\n+functions with a Flask app context active, so that services like your database\n+connections are available.\n \n-.. note::\n-    Celery 5.x deprecated uppercase configuration keys, and 6.x will\n-    remove them. See their official `migration guide`_.\n+.. _configuration: https://celery.readthedocs.io/en/stable/userguide/configuration.html\n \n-.. _migration guide: https://docs.celeryproject.org/en/stable/userguide/configuration.html#conf-old-settings-map.\n+Here\'s a basic ``example.py`` that configures Celery to use Redis for communication. We\n+enable a result backend, but ignore results by default. This allows us to store results\n+only for tasks where we care about the result.\n \n-An example task\n----------------\n-\n-Let\'s write a task that adds two numbers together and returns the result. We\n-configure Celery\'s broker and backend to use Redis, create a ``celery``\n-application using the factory from above, and then use it to define the task. ::\n+.. code-block:: python\n \n     from flask import Flask\n \n-    flask_app = Flask(__name__)\n-    flask_app.config.update(CELERY_CONFIG={\n-        \'broker_url\': \'redis://localhost:6379\',\n-        \'result_backend\': \'redis://localhost:6379\',\n-    })\n-    celery = make_celery(flask_app)\n+    app = Flask(__name__)\n+    app.config.from_mapping(\n+        CELERY=dict(\n+            broker_url=""redis://localhost"",\n+            result_backend=""redis://localhost"",\n+            task_ignore_result=True,\n+        ),\n+    )\n+    celery_app = celery_init_app(app)\n+\n+Point the ``celery worker`` command at this and it will find the ``celery_app`` object.\n+\n+.. code-block:: text\n+\n+    $ celery -A example worker --loglevel INFO\n+\n+You can also run the ``celery beat`` command to run tasks on a schedule. See Celery\'s\n+docs for more information about defining schedules.\n+\n+.. code-block:: text\n+\n+    $ celery -A example beat --loglevel INFO\n+\n+\n+Application Factory\n+-------------------\n+\n+When using the Flask application factory pattern, call the ``celery_init_app`` function\n+inside the factory. It sets ``app.extensions[""celery""]`` to the Celery app object, which\n+can be used to get the Celery app from the Flask app returned by the factory.\n+\n+.. code-block:: python\n+\n+    def create_app() -> Flask:\n+        app = Flask(__name__)\n+        app.config.from_mapping(\n+            CELERY=dict(\n+                broker_url=""redis://localhost"",\n+                result_backend=""redis://localhost"",\n+                task_ignore_result=True,\n+            ),\n+        )\n+        app.config.from_prefixed_env()\n+        celery_init_app(app)\n+        return app\n+\n+To use ``celery`` commands, Celery needs an app object, but that\'s no longer directly\n+available. Create a ``make_celery.py`` file that calls the Flask app factory and gets\n+the Celery app from the returned Flask app.\n+\n+.. code-block:: python\n+\n+    from example import create_app\n+\n+    flask_app = create_app()\n+    celery_app = flask_app.extensions[""celery""]\n+\n+Point the ``celery`` command to this file.\n+\n+.. code-block:: text\n+\n+    $ celery -A make_celery worker --loglevel INFO\n+    $ celery -A make_celery beat --loglevel INFO\n+\n \n-    @celery.task()\n-    def add_together(a, b):\n+Defining Tasks\n+--------------\n+\n+Using ``@celery_app.task`` to decorate task functions requires access to the\n+``celery_app`` object, which won\'t be available when using the factory pattern. It also\n+means that the decorated tasks are tied to the specific Flask and Celery app instances,\n+which could be an issue during testing if you change configuration for a test.\n+\n+Instead, use Celery\'s ``@shared_task`` decorator. This creates task objects that will\n+access whatever the ""current app"" is, which is a similar concept to Flask\'s blueprints\n+and app context. This is why we called ``celery_app.set_default()`` above.\n+\n+Here\'s an example task that adds two numbers together and returns the result.\n+\n+.. code-block:: python\n+\n+    from celery import shared_task\n+\n+    @shared_task(ignore_result=False)\n+    def add_together(a: int, b: int) -> int:\n         return a + b\n \n-This task can now be called in the background::\n+Earlier, we configured Celery to ignore task results by default. Since we want to know\n+the return value of this task, we set ``ignore_result=False``. On the other hand, a task\n+that didn\'t need a result, such as sending an email, wouldn\'t set this.\n+\n+\n+Calling Tasks\n+-------------\n+\n+The decorated function becomes a task object with methods to call it in the background.\n+The simplest way is to use the ``delay(*args, **kwargs)`` method. See Celery\'s docs for\n+more methods.\n+\n+A Celery worker must be running to run the task. Starting a worker is shown in the\n+previous sections.\n+\n+.. code-block:: python\n+\n+    from flask import request\n \n-    result = add_together.delay(23, 42)\n-    result.wait()  # 65\n+    @app.post(""/add"")\n+    def start_add() -> dict[str, object]:\n+        a = request.form.get(""a"", type=int)\n+        b = request.form.get(""b"", type=int)\n+        result = add_together.delay(a, b)\n+        return {""result_id"": result.id}\n \n-Run a worker\n-------------\n+The route doesn\'t get the task\'s result immediately. That would defeat the purpose by\n+blocking the response. Instead, we return the running task\'s result id, which we can use\n+later to get the result.\n \n-If you jumped in and already executed the above code you will be\n-disappointed to learn that ``.wait()`` will never actually return.\n-That\'s because you also need to run a Celery worker to receive and execute the\n-task. ::\n \n-    $ celery -A your_application.celery worker\n+Getting Results\n+---------------\n+\n+To fetch the result of the task we started above, we\'ll add another route that takes the\n+result id we returned before. We return whether the task is finished (ready), whether it\n+finished successfully, and what the return value (or error) was if it is finished.\n+\n+.. code-block:: python\n+\n+    from celery.result import AsyncResult\n+\n+    @app.get(""/result/<id>"")\n+    def task_result(id: str) -> dict[str, object]:\n+        result = AsyncResult(id)\n+        return {\n+            ""ready"": result.ready(),\n+            ""successful"": result.successful(),\n+            ""value"": result.result if result.ready() else None,\n+        }\n+\n+Now you can start the task using the first route, then poll for the result using the\n+second route. This keeps the Flask request workers from being blocked waiting for tasks\n+to finish.\n+\n+\n+Passing Data to Tasks\n+---------------------\n+\n+The ""add"" task above took two integers as arguments. To pass arguments to tasks, Celery\n+has to serialize them to a format that it can pass to other processes. Therefore,\n+passing complex objects is not recommended. For example, it would be impossible to pass\n+a SQLAlchemy model object, since that object is probably not serializable and is tied to\n+the session that queried it.\n+\n+Pass the minimal amount of data necessary to fetch or recreate any complex data within\n+the task. Consider a task that will run when the logged in user asks for an archive of\n+their data. The Flask request knows the logged in user, and has the user object queried\n+from the database. It got that by querying the database for a given id, so the task can\n+do the same thing. Pass the user\'s id rather than the user object.\n+\n+.. code-block:: python\n \n-The ``your_application`` string has to point to your application\'s package\n-or module that creates the ``celery`` object.\n+    @shared_task\n+    def generate_user_archive(user_id: str) -> None:\n+        user = db.session.get(User, user_id)\n+        ...\n \n-Now that the worker is running, ``wait`` will return the result once the task\n-is finished.\n+    generate_user_archive.delay(current_user.id)\n'",1.0,1.1666666666666667
docs/patterns/celery.rst,docs/patterns/celery.rst,3f195248dcd59f8eb08e282b7980dc04b97d7391,dca8cf013b2c0086539697ae6e4515a1c819092c,'add celery example',"'@@ -14,6 +14,10 @@ Celery itself.\n .. _Celery: https://celery.readthedocs.io\n .. _First Steps with Celery: https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-celery.html\n \n+The Flask repository contains `an example <https://github.com/pallets/flask/tree/main/examples/celery>`_\n+based on the information on this page, which also shows how to use JavaScript to submit\n+tasks and poll for progress and results.\n+\n \n Install\n -------\n@@ -209,6 +213,9 @@ Now you can start the task using the first route, then poll for the result using\n second route. This keeps the Flask request workers from being blocked waiting for tasks\n to finish.\n \n+The Flask repository contains `an example <https://github.com/pallets/flask/tree/main/examples/celery>`_\n+using JavaScript to submit tasks and poll for progress and results.\n+\n \n Passing Data to Tasks\n ---------------------\n'",1.1666666666666667,1.1666666666666667
src/flask/blueprints.py,src/flask/blueprints.py,ab93222bd6d4ea26e3aa832a0409489530f3f5e0,d5527264f0506504fd2fd400192c8f696ce6d979,'point to app-scoped blueprint methods',"'@@ -478,8 +478,11 @@ class Blueprint(Scaffold):\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n-        """"""Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n-        the :func:`url_for` function is prefixed with the name of the blueprint.\n+        """"""Register a URL rule with the blueprint. See :meth:`.Flask.add_url_rule` for\n+        full documentation.\n+\n+        The URL rule is prefixed with the blueprint\'s URL prefix. The endpoint name,\n+        used with :func:`url_for`, is prefixed with the blueprint\'s name.\n         """"""\n         if endpoint and ""."" in endpoint:\n             raise ValueError(""\'endpoint\' may not contain a dot \'.\' character."")\n@@ -501,8 +504,8 @@ class Blueprint(Scaffold):\n     def app_template_filter(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[T_template_filter], T_template_filter]:\n-        """"""Register a custom template filter, available application wide.  Like\n-        :meth:`Flask.template_filter` but for a blueprint.\n+        """"""Register a template filter, available in any template rendered by the\n+        application. Equivalent to :meth:`.Flask.template_filter`.\n \n         :param name: the optional name of the filter, otherwise the\n                      function name will be used.\n@@ -518,9 +521,9 @@ class Blueprint(Scaffold):\n     def add_app_template_filter(\n         self, f: ft.TemplateFilterCallable, name: t.Optional[str] = None\n     ) -> None:\n-        """"""Register a custom template filter, available application wide.  Like\n-        :meth:`Flask.add_template_filter` but for a blueprint.  Works exactly\n-        like the :meth:`app_template_filter` decorator.\n+        """"""Register a template filter, available in any template rendered by the\n+        application. Works like the :meth:`app_template_filter` decorator. Equivalent to\n+        :meth:`.Flask.add_template_filter`.\n \n         :param name: the optional name of the filter, otherwise the\n                      function name will be used.\n@@ -535,8 +538,8 @@ class Blueprint(Scaffold):\n     def app_template_test(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[T_template_test], T_template_test]:\n-        """"""Register a custom template test, available application wide.  Like\n-        :meth:`Flask.template_test` but for a blueprint.\n+        """"""Register a template test, available in any template rendered by the\n+        application. Equivalent to :meth:`.Flask.template_test`.\n \n         .. versionadded:: 0.10\n \n@@ -554,9 +557,9 @@ class Blueprint(Scaffold):\n     def add_app_template_test(\n         self, f: ft.TemplateTestCallable, name: t.Optional[str] = None\n     ) -> None:\n-        """"""Register a custom template test, available application wide.  Like\n-        :meth:`Flask.add_template_test` but for a blueprint.  Works exactly\n-        like the :meth:`app_template_test` decorator.\n+        """"""Register a template test, available in any template rendered by the\n+        application. Works like the :meth:`app_template_test` decorator. Equivalent to\n+        :meth:`.Flask.add_template_test`.\n \n         .. versionadded:: 0.10\n \n@@ -573,8 +576,8 @@ class Blueprint(Scaffold):\n     def app_template_global(\n         self, name: t.Optional[str] = None\n     ) -> t.Callable[[T_template_global], T_template_global]:\n-        """"""Register a custom template global, available application wide.  Like\n-        :meth:`Flask.template_global` but for a blueprint.\n+        """"""Register a template global, available in any template rendered by the\n+        application. Equivalent to :meth:`.Flask.template_global`.\n \n         .. versionadded:: 0.10\n \n@@ -592,9 +595,9 @@ class Blueprint(Scaffold):\n     def add_app_template_global(\n         self, f: ft.TemplateGlobalCallable, name: t.Optional[str] = None\n     ) -> None:\n-        """"""Register a custom template global, available application wide.  Like\n-        :meth:`Flask.add_template_global` but for a blueprint.  Works exactly\n-        like the :meth:`app_template_global` decorator.\n+        """"""Register a template global, available in any template rendered by the\n+        application. Works like the :meth:`app_template_global` decorator. Equivalent to\n+        :meth:`.Flask.add_template_global`.\n \n         .. versionadded:: 0.10\n \n@@ -609,8 +612,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def before_app_request(self, f: T_before_request) -> T_before_request:\n-        """"""Like :meth:`Flask.before_request`.  Such a function is executed\n-        before each request, even if outside of a blueprint.\n+        """"""Like :meth:`before_request`, but before every request, not only those handled\n+        by the blueprint. Equivalent to :meth:`.Flask.before_request`.\n         """"""\n         self.record_once(\n             lambda s: s.app.before_request_funcs.setdefault(None, []).append(f)\n@@ -621,8 +624,8 @@ class Blueprint(Scaffold):\n     def before_app_first_request(\n         self, f: T_before_first_request\n     ) -> T_before_first_request:\n-        """"""Like :meth:`Flask.before_first_request`.  Such a function is\n-        executed before the first request to the application.\n+        """"""Register a function to run before the first request to the application is\n+        handled by the worker. Equivalent to :meth:`.Flask.before_first_request`.\n \n         .. deprecated:: 2.2\n             Will be removed in Flask 2.3. Run setup code when creating\n@@ -642,8 +645,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def after_app_request(self, f: T_after_request) -> T_after_request:\n-        """"""Like :meth:`Flask.after_request` but for a blueprint.  Such a function\n-        is executed after each request, even if outside of the blueprint.\n+        """"""Like :meth:`after_request`, but after every request, not only those handled\n+        by the blueprint. Equivalent to :meth:`.Flask.after_request`.\n         """"""\n         self.record_once(\n             lambda s: s.app.after_request_funcs.setdefault(None, []).append(f)\n@@ -652,9 +655,8 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def teardown_app_request(self, f: T_teardown) -> T_teardown:\n-        """"""Like :meth:`Flask.teardown_request` but for a blueprint.  Such a\n-        function is executed when tearing down each request, even if outside of\n-        the blueprint.\n+        """"""Like :meth:`teardown_request`, but after every request, not only those\n+        handled by the blueprint. Equivalent to :meth:`.Flask.teardown_request`.\n         """"""\n         self.record_once(\n             lambda s: s.app.teardown_request_funcs.setdefault(None, []).append(f)\n@@ -665,8 +667,8 @@ class Blueprint(Scaffold):\n     def app_context_processor(\n         self, f: T_template_context_processor\n     ) -> T_template_context_processor:\n-        """"""Like :meth:`Flask.context_processor` but for a blueprint.  Such a\n-        function is executed each request, even if outside of the blueprint.\n+        """"""Like :meth:`context_processor`, but for templates rendered by every view, not\n+        only by the blueprint. Equivalent to :meth:`.Flask.context_processor`.\n         """"""\n         self.record_once(\n             lambda s: s.app.template_context_processors.setdefault(None, []).append(f)\n@@ -677,8 +679,8 @@ class Blueprint(Scaffold):\n     def app_errorhandler(\n         self, code: t.Union[t.Type[Exception], int]\n     ) -> t.Callable[[T_error_handler], T_error_handler]:\n-        """"""Like :meth:`Flask.errorhandler` but for a blueprint.  This\n-        handler is used for all requests, even if outside of the blueprint.\n+        """"""Like :meth:`errorhandler`, but for every request, not only those handled by\n+        the blueprint. Equivalent to :meth:`.Flask.errorhandler`.\n         """"""\n \n         def decorator(f: T_error_handler) -> T_error_handler:\n@@ -691,7 +693,9 @@ class Blueprint(Scaffold):\n     def app_url_value_preprocessor(\n         self, f: T_url_value_preprocessor\n     ) -> T_url_value_preprocessor:\n-        """"""Same as :meth:`url_value_preprocessor` but application wide.""""""\n+        """"""Like :meth:`url_value_preprocessor`, but for every request, not only those\n+        handled by the blueprint. Equivalent to :meth:`.Flask.url_value_preprocessor`.\n+        """"""\n         self.record_once(\n             lambda s: s.app.url_value_preprocessors.setdefault(None, []).append(f)\n         )\n@@ -699,7 +703,9 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_url_defaults(self, f: T_url_defaults) -> T_url_defaults:\n-        """"""Same as :meth:`url_defaults` but application wide.""""""\n+        """"""Like :meth:`url_defaults`, but for every request, not only those handled by\n+        the blueprint. Equivalent to :meth:`.Flask.url_defaults`.\n+        """"""\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n'",2.1621621621621623,2.1621621621621623
src/flask/scaffold.py,src/flask/scaffold.py,ab93222bd6d4ea26e3aa832a0409489530f3f5e0,d5527264f0506504fd2fd400192c8f696ce6d979,'point to app-scoped blueprint methods',"'@@ -561,6 +561,11 @@ class Scaffold:\n         a non-``None`` value, the value is handled as if it was the\n         return value from the view, and further request handling is\n         stopped.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        executes before every request. When used on a blueprint, this executes before\n+        every request that the blueprint handles. To register with a blueprint and\n+        execute before every request, use :meth:`.Blueprint.before_app_request`.\n         """"""\n         self.before_request_funcs.setdefault(None, []).append(f)\n         return f\n@@ -577,6 +582,11 @@ class Scaffold:\n         ``after_request`` functions will not be called. Therefore, this\n         should not be used for actions that must execute, such as to\n         close resources. Use :meth:`teardown_request` for that.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        executes after every request. When used on a blueprint, this executes after\n+        every request that the blueprint handles. To register with a blueprint and\n+        execute after every request, use :meth:`.Blueprint.after_app_request`.\n         """"""\n         self.after_request_funcs.setdefault(None, []).append(f)\n         return f\n@@ -606,6 +616,11 @@ class Scaffold:\n         ``try``/``except`` block and log any errors.\n \n         The return values of teardown functions are ignored.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        executes after every request. When used on a blueprint, this executes after\n+        every request that the blueprint handles. To register with a blueprint and\n+        execute after every request, use :meth:`.Blueprint.teardown_app_request`.\n         """"""\n         self.teardown_request_funcs.setdefault(None, []).append(f)\n         return f\n@@ -615,7 +630,15 @@ class Scaffold:\n         self,\n         f: T_template_context_processor,\n     ) -> T_template_context_processor:\n-        """"""Registers a template context processor function.""""""\n+        """"""Registers a template context processor function. These functions run before\n+        rendering a template. The keys of the returned dict are added as variables\n+        available in the template.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        is called for every rendered template. When used on a blueprint, this is called\n+        for templates rendered from the blueprint\'s views. To register with a blueprint\n+        and affect every template, use :meth:`.Blueprint.app_context_processor`.\n+        """"""\n         self.template_context_processors[None].append(f)\n         return f\n \n@@ -635,6 +658,11 @@ class Scaffold:\n \n         The function is passed the endpoint name and values dict. The return\n         value is ignored.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        is called for every request. When used on a blueprint, this is called for\n+        requests that the blueprint handles. To register with a blueprint and affect\n+        every request, use :meth:`.Blueprint.app_url_value_preprocessor`.\n         """"""\n         self.url_value_preprocessors[None].append(f)\n         return f\n@@ -644,6 +672,11 @@ class Scaffold:\n         """"""Callback function for URL defaults for all view functions of the\n         application.  It\'s called with the endpoint and values and should\n         update the values passed in place.\n+\n+        This is available on both app and blueprint objects. When used on an app, this\n+        is called for every request. When used on a blueprint, this is called for\n+        requests that the blueprint handles. To register with a blueprint and affect\n+        every request, use :meth:`.Blueprint.app_url_defaults`.\n         """"""\n         self.url_default_functions[None].append(f)\n         return f\n@@ -667,6 +700,11 @@ class Scaffold:\n             def special_exception_handler(error):\n                 return \'Database connection failed\', 500\n \n+        This is available on both app and blueprint objects. When used on an app, this\n+        can handle errors from every request. When used on a blueprint, this can handle\n+        errors from requests that the blueprint handles. To register with a blueprint\n+        and affect every request, use :meth:`.Blueprint.app_errorhandler`.\n+\n         .. versionadded:: 0.7\n             Use :meth:`register_error_handler` instead of modifying\n             :attr:`error_handler_spec` directly, for application wide error\n'",1.95,1.95
docs/reqcontext.rst,docs/reqcontext.rst,ba2b3094d1a8177059ea68853a48fcd5e90920fe,129568f7f4197bdcec9b8eb96f1f4d55f9519c83,'fix test client arg for query string example',"'@@ -69,11 +69,12 @@ everything that runs in the block will have access to :data:`request`,\n populated with your test data. ::\n \n     def generate_report(year):\n-        format = request.args.get(\'format\')\n+        format = request.args.get(""format"")\n         ...\n \n     with app.test_request_context(\n-            \'/make_report/2017\', data={\'format\': \'short\'}):\n+        ""/make_report/2017"", query_string={""format"": ""short""}\n+    ):\n         generate_report()\n \n If you see that error somewhere else in your code not related to\n'",0,0
docs/index.rst,docs/index.rst,a6cd8f212e762b8f70e00f3341b27799c0fb657a,129568f7f4197bdcec9b8eb96f1f4d55f9519c83,'document the lifecycle of a flask application and request',"'@@ -48,6 +48,7 @@ community-maintained extensions to add even more functionality.\n    config\n    signals\n    views\n+   lifecycle\n    appcontext\n    reqcontext\n    blueprints\n'",0,0
src/flask/templating.py,src/flask/templating.py,aa040c085c8c560616069f06c34cf796c10b05f1,a18ae3d75271ead93d779f4c950ad5750684c0a0,'run latest black format',"'@@ -134,7 +134,7 @@ def _render(app: ""Flask"", template: Template, context: t.Dict[str, t.Any]) -> st\n \n def render_template(\n     template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n-    **context: t.Any\n+    **context: t.Any,\n ) -> str:\n     """"""Render a template by name with the given context.\n \n@@ -180,7 +180,7 @@ def _stream(\n \n def stream_template(\n     template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n-    **context: t.Any\n+    **context: t.Any,\n ) -> t.Iterator[str]:\n     """"""Render a template by name with the given context as a stream.\n     This returns an iterator of strings, which can be used as a\n'",2.2,2.2
docs/cli.rst,docs/cli.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","'@@ -95,7 +95,7 @@ the ``--debug`` option.\n \n .. code-block:: console\n \n-     $ flask --app hello --debug run\n+     $ flask --app hello run --debug\n       * Serving Flask app ""hello""\n       * Debug mode: on\n       * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n@@ -103,6 +103,14 @@ the ``--debug`` option.\n       * Debugger is active!\n       * Debugger PIN: 223-456-919\n \n+The ``--debug`` option can also be passed to the top level ``flask`` command to enable\n+debug mode for any command. The following two ``run`` calls are equivalent.\n+\n+.. code-block:: console\n+\n+    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n+\n \n Watch and Ignore Files with the Reloader\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n@@ -550,7 +558,7 @@ a name such as ""flask run"".\n Click the *Script path* dropdown and change it to *Module name*, then input ``flask``.\n \n The *Parameters* field is set to the CLI command to execute along with any arguments.\n-This example uses ``--app hello --debug run``, which will run the development server in\n+This example uses ``--app hello run --debug``, which will run the development server in\n debug mode. ``--app hello`` should be the import or file with your Flask app.\n \n If you installed your project as a package in your virtualenv, you may uncheck the\n'",1.0,1.0
docs/config.rst,docs/config.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","""@@ -47,17 +47,17 @@ Debug Mode\n \n The :data:`DEBUG` config value is special because it may behave inconsistently if\n changed after the app has begun setting up. In order to set debug mode reliably, use the\n-``--debug`` option on the ``flask`` command. ``flask run`` will use the interactive\n-debugger and reloader by default in debug mode.\n+``--debug`` option on the ``flask`` or ``flask run`` command. ``flask run`` will use the\n+interactive debugger and reloader by default in debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n Using the option is recommended. While it is possible to set :data:`DEBUG` in your\n-config or code, this is strongly discouraged. It can't be read early by the ``flask run``\n-command, and some systems or extensions may have already configured themselves based on\n-a previous value.\n+config or code, this is strongly discouraged. It can't be read early by the\n+``flask run`` command, and some systems or extensions may have already configured\n+themselves based on a previous value.\n \n \n Builtin Configuration Values\n""",1.0,1.0
docs/debugging.rst,docs/debugging.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","'@@ -43,7 +43,7 @@ The debugger is enabled by default when the development server is run in debug m\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n When running from Python code, passing ``debug=True`` enables debug mode, which is\n mostly equivalent.\n@@ -72,7 +72,7 @@ which can interfere.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run --no-debugger --no-reload\n+    $ flask --app hello run --debug --no-debugger --no-reload\n \n When running from Python:\n \n'",0,0
docs/quickstart.rst,docs/quickstart.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","""@@ -108,7 +108,7 @@ To enable debug mode, use the ``--debug`` option.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n      * Serving Flask app 'hello'\n      * Debug mode: on\n      * Running on http://127.0.0.1:5000 (Press CTRL+C to quit)\n""",1.1875,1.1875
docs/server.rst,docs/server.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","'@@ -24,7 +24,7 @@ debug mode.\n \n .. code-block:: text\n \n-    $ flask --app hello --debug run\n+    $ flask --app hello run --debug\n \n This enables debug mode, including the interactive debugger and reloader, and then\n starts the server on http://localhost:5000/. Use ``flask run --help`` to see the\n'",0,0
docs/tutorial/factory.rst,docs/tutorial/factory.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","""@@ -137,7 +137,7 @@ follow the tutorial.\n \n .. code-block:: text\n \n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n You'll see output similar to this:\n \n""",0,0
examples/celery/README.md,examples/celery/README.md,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","'@@ -19,7 +19,7 @@ In a separate terminal, activate the virtualenv and run the Flask development se\n \n ```shell\n $ . ./.venv/bin/activate\n-$ flask -A task_app --debug run\n+$ flask -A task_app run --debug\n ```\n \n Go to http://localhost:5000/ and use the forms to submit tasks. You can see the polling\n'",0,0
examples/tutorial/README.rst,examples/tutorial/README.rst,24df8fc89d5659d041b91b30a2ada9de49ec2264,b945f988f94fd6f84fef31bd0bb668d71780f78b,"""show 'run --debug' in docs\n\nReverts commit 4d69165ab6e17fa754139d348cdfd9edacbcb999. Now that a\nrelease has this option, it's ok to show it in the docs. It had been\nreverted because the 2.2.x docs showed it before 2.2.3 was released.""","'@@ -48,7 +48,7 @@ Run\n .. code-block:: text\n \n     $ flask --app flaskr init-db\n-    $ flask --app flaskr --debug run\n+    $ flask --app flaskr run --debug\n \n Open http://127.0.0.1:5000 in a browser.\n \n'",0,0
CHANGES.rst,CHANGES.rst,41d4f62909bb426c84e9d057151f7d734695320a,24df8fc89d5659d041b91b30a2ada9de49ec2264,'release version 2.2.3',"'@@ -1,11 +1,9 @@\n Version 2.2.3\n -------------\n \n-Unreleased\n+Released 2023-02-15\n \n--   Autoescaping is now enabled by default for ``.svg`` files. Inside\n-    templates this behavior can be changed with the ``autoescape`` tag.\n-    :issue:`4831`\n+-   Autoescape is enabled by default for ``.svg`` template files. :issue:`4831`\n -   Fix the type of ``template_folder`` to accept ``pathlib.Path``. :issue:`4892`\n -   Add ``--debug`` option to the ``flask run`` command. :issue:`4777`\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,41d4f62909bb426c84e9d057151f7d734695320a,24df8fc89d5659d041b91b30a2ada9de49ec2264,'release version 2.2.3',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.3.dev""\n+__version__ = ""2.2.3""\n \n \n def __getattr__(name):\n'",3.0,3.0
requirements/build.txt,requirements/build.txt,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -5,13 +5,13 @@\n #\n #    pip-compile-multi\n #\n-build==0.9.0\n+build==0.10.0\n     # via -r requirements/build.in\n packaging==23.0\n     # via build\n-pep517==0.13.0\n+pyproject-hooks==1.0.0\n     # via build\n tomli==2.0.1\n     # via\n     #   build\n-    #   pep517\n+    #   pyproject-hooks\n'",0,0
requirements/dev.txt,requirements/dev.txt,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -8,9 +8,9 @@\n -r docs.txt\n -r tests.txt\n -r typing.txt\n-build==0.9.0\n+build==0.10.0\n     # via pip-tools\n-cachetools==5.2.0\n+cachetools==5.3.0\n     # via tox\n cfgv==3.3.1\n     # via pre-commit\n@@ -24,37 +24,35 @@ colorama==0.4.6\n     # via tox\n distlib==0.3.6\n     # via virtualenv\n-filelock==3.8.2\n+filelock==3.9.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.11\n+identify==2.5.18\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n-pep517==0.13.0\n-    # via build\n pip-compile-multi==2.6.1\n     # via -r requirements/dev.in\n-pip-tools==6.12.1\n+pip-tools==6.12.2\n     # via pip-compile-multi\n-platformdirs==2.6.0\n+platformdirs==3.0.0\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==2.20.0\n+pre-commit==3.0.4\n     # via -r requirements/dev.in\n-pyproject-api==1.2.1\n+pyproject-api==1.5.0\n     # via tox\n+pyproject-hooks==1.0.0\n+    # via build\n pyyaml==6.0\n     # via pre-commit\n-toml==0.10.2\n-    # via pre-commit\n-toposort==1.7\n+toposort==1.9\n     # via pip-compile-multi\n-tox==4.0.16\n+tox==4.4.5\n     # via -r requirements/dev.in\n-virtualenv==20.17.1\n+virtualenv==20.19.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -5,13 +5,13 @@\n #\n #    pip-compile-multi\n #\n-alabaster==0.7.12\n+alabaster==0.7.13\n     # via sphinx\n babel==2.11.0\n     # via sphinx\n certifi==2022.12.7\n     # via requests\n-charset-normalizer==2.1.1\n+charset-normalizer==3.0.1\n     # via requests\n docutils==0.17.1\n     # via\n@@ -23,21 +23,21 @@ imagesize==1.4.1\n     # via sphinx\n jinja2==3.1.2\n     # via sphinx\n-markupsafe==2.1.1\n+markupsafe==2.1.2\n     # via jinja2\n-packaging==22.0\n+packaging==23.0\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n pallets-sphinx-themes==2.0.3\n     # via -r requirements/docs.in\n-pygments==2.13.0\n+pygments==2.14.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pytz==2022.7\n+pytz==2022.7.1\n     # via babel\n-requests==2.28.1\n+requests==2.28.2\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n@@ -52,11 +52,11 @@ sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n sphinx-tabs==3.3.1\n     # via -r requirements/docs.in\n-sphinxcontrib-applehelp==1.0.2\n+sphinxcontrib-applehelp==1.0.4\n     # via sphinx\n sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.0\n+sphinxcontrib-htmlhelp==2.0.1\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n@@ -66,5 +66,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.13\n+urllib3==1.26.14\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -11,13 +11,19 @@ attrs==22.2.0\n     # via pytest\n blinker==1.5\n     # via -r requirements/tests.in\n-iniconfig==1.1.1\n+exceptiongroup==1.1.0\n     # via pytest\n-packaging==22.0\n+greenlet==2.0.2 ; python_version < ""3.11""\n+    # via -r requirements/tests.in\n+iniconfig==2.0.0\n+    # via pytest\n+packaging==23.0\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-pytest==7.2.0\n+pytest==7.2.1\n     # via -r requirements/tests.in\n-python-dotenv==0.21.0\n+python-dotenv==0.21.1\n     # via -r requirements/tests.in\n+tomli==2.0.1\n+    # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -7,19 +7,23 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==38.0.4\n+cryptography==39.0.1\n     # via -r requirements/typing.in\n-mypy==0.991\n+mypy==1.0.0\n     # via -r requirements/typing.in\n-mypy-extensions==0.4.3\n+mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n+tomli==2.0.1\n+    # via mypy\n types-contextvars==2.4.7\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==65.6.0.2\n+types-docutils==0.19.1.4\n+    # via types-setuptools\n+types-setuptools==67.3.0.1\n     # via -r requirements/typing.in\n-typing-extensions==4.4.0\n+typing-extensions==4.5.0\n     # via mypy\n'",0,0
src/flask/app.py,src/flask/app.py,c4c7f504be222c3aca9062656498ec3c72e2b2ad,6a392afbb6404236897ce7c0d02ac78b199e31bb,'update dependencies',"'@@ -1248,7 +1248,7 @@ class Flask(Scaffold):\n         """"""\n         cls = self.test_client_class\n         if cls is None:\n-            from .testing import FlaskClient as cls  # type: ignore\n+            from .testing import FlaskClient as cls\n         return cls(  # type: ignore\n             self, self.response_class, use_cookies=use_cookies, **kwargs\n         )\n@@ -1266,7 +1266,7 @@ class Flask(Scaffold):\n         cls = self.test_cli_runner_class\n \n         if cls is None:\n-            from .testing import FlaskCliRunner as cls  # type: ignore\n+            from .testing import FlaskCliRunner as cls\n \n         return cls(self, **kwargs)  # type: ignore\n \n'",3.0,3.0
CHANGES.rst,CHANGES.rst,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -3,6 +3,24 @@ Version 2.3.0\n \n Unreleased\n \n+-   Remove previously deprecated code. :pr:`4995`\n+\n+    -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and\n+        ``_request_ctx_stack`` objects are removed. ``top`` still exists to give\n+        extensions more time to update, but it will be removed.\n+    -   The ``FLASK_ENV`` environment variable, ``ENV`` config key, and ``app.env``\n+        property are removed.\n+    -   The ``session_cookie_name``, ``send_file_max_age_default``, ``use_x_sendfile``,\n+        ``propagate_exceptions``, and ``templates_auto_reload`` properties on ``app``\n+        are removed.\n+    -   The ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``, ``JSONIFY_MIMETYPE``, and\n+        ``JSONIFY_PRETTYPRINT_REGULAR`` config keys are removed.\n+    -   The ``app.before_first_request`` and ``bp.before_app_first_request`` decorators\n+        are removed.\n+    -   ``json_encoder`` and ``json_decoder`` attributes on app and blueprint, and the\n+        corresponding ``json.JSONEncoder`` and ``JSONDecoder`` classes, are removed.\n+    -   The ``json.htmlsafe_dumps`` and ``htmlsafe_dump`` functions are removed.\n+\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n     :pr:`4947`\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n'",0,0
docs/api.rst,docs/api.rst,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -270,12 +270,6 @@ HTML ``<script>`` tags.\n     :members:\n     :member-order: bysource\n \n-.. autoclass:: JSONEncoder\n-   :members:\n-\n-.. autoclass:: JSONDecoder\n-   :members:\n-\n .. automodule:: flask.json.tag\n \n \n'",1.5,1.5
docs/config.rst,docs/config.rst,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"""@@ -65,18 +65,6 @@ Builtin Configuration Values\n \n The following configuration values are used internally by Flask:\n \n-.. py:data:: ENV\n-\n-    What environment the app is running in. The :attr:`~flask.Flask.env` attribute maps\n-    to this config key.\n-\n-    Default: ``'production'``\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Use ``--debug`` instead.\n-\n-    .. versionadded:: 1.0\n-\n .. py:data:: DEBUG\n \n     Whether debug mode is enabled. When using ``flask run`` to start the development\n@@ -271,52 +259,6 @@ The following configuration values are used internally by Flask:\n \n     Default: ``None``\n \n-.. py:data:: JSON_AS_ASCII\n-\n-    Serialize objects to ASCII-encoded JSON. If this is disabled, the\n-    JSON returned from ``jsonify`` will contain Unicode characters. This\n-    has security implications when rendering the JSON into JavaScript in\n-    templates, and should typically remain enabled.\n-\n-    Default: ``True``\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Set ``app.json.ensure_ascii``\n-        instead.\n-\n-.. py:data:: JSON_SORT_KEYS\n-\n-    Sort the keys of JSON objects alphabetically. This is useful for caching\n-    because it ensures the data is serialized the same way no matter what\n-    Python's hash seed is. While not recommended, you can disable this for a\n-    possible performance improvement at the cost of caching.\n-\n-    Default: ``True``\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Set ``app.json.sort_keys``\n-        instead.\n-\n-.. py:data:: JSONIFY_PRETTYPRINT_REGULAR\n-\n-    :func:`~flask.jsonify` responses will be output with newlines,\n-    spaces, and indentation for easier reading by humans. Always enabled\n-    in debug mode.\n-\n-    Default: ``False``\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Set ``app.json.compact`` instead.\n-\n-.. py:data:: JSONIFY_MIMETYPE\n-\n-    The mimetype of ``jsonify`` responses.\n-\n-    Default: ``'application/json'``\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Set ``app.json.mimetype`` instead.\n-\n .. py:data:: TEMPLATES_AUTO_RELOAD\n \n     Reload templates when they are changed. If not set, it will be enabled in\n@@ -381,14 +323,13 @@ The following configuration values are used internally by Flask:\n .. versionchanged:: 2.2\n     Removed ``PRESERVE_CONTEXT_ON_EXCEPTION``.\n \n-.. versionchanged:: 2.2\n-    ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``,\n-    ``JSONIFY_MIMETYPE``, and ``JSONIFY_PRETTYPRINT_REGULAR`` will be\n-    removed in Flask 2.3. The default ``app.json`` provider has\n+.. versionchanged:: 2.3\n+    ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``, ``JSONIFY_MIMETYPE``, and\n+    ``JSONIFY_PRETTYPRINT_REGULAR`` were removed. The default ``app.json`` provider has\n     equivalent attributes instead.\n \n-.. versionchanged:: 2.2\n-    ``ENV`` will be removed in Flask 2.3. Use ``--debug`` instead.\n+.. versionchanged:: 2.3\n+    ``ENV`` was removed.\n \n \n Configuring from Python Files\n""",1.0,1.0
src/flask/__init__.py,src/flask/__init__.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -51,7 +51,7 @@ def __getattr__(name):\n         from .globals import __app_ctx_stack\n \n         warnings.warn(\n-            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -62,7 +62,7 @@ def __getattr__(name):\n         from .globals import __request_ctx_stack\n \n         warnings.warn(\n-            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n'",3.0,3.0
src/flask/app.py,src/flask/app.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -1,6 +1,5 @@\n import functools\n import inspect\n-import json\n import logging\n import os\n import sys\n@@ -75,9 +74,6 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n \n-T_before_first_request = t.TypeVar(\n-    ""T_before_first_request"", bound=ft.BeforeFirstRequestCallable\n-)\n T_shell_context_processor = t.TypeVar(\n     ""T_shell_context_processor"", bound=ft.ShellContextProcessorCallable\n )\n@@ -274,36 +270,6 @@ class Flask(Scaffold):\n     #: :data:`SECRET_KEY` configuration key. Defaults to ``None``.\n     secret_key = ConfigAttribute(""SECRET_KEY"")\n \n-    @property\n-    def session_cookie_name(self) -> str:\n-        """"""The name of the cookie set by the session interface.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Use ``app.config[""SESSION_COOKIE_NAME""]``\n-            instead.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'session_cookie_name\' is deprecated and will be removed in Flask 2.3. Use""\n-            "" \'SESSION_COOKIE_NAME\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self.config[""SESSION_COOKIE_NAME""]\n-\n-    @session_cookie_name.setter\n-    def session_cookie_name(self, value: str) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'session_cookie_name\' is deprecated and will be removed in Flask 2.3. Use""\n-            "" \'SESSION_COOKIE_NAME\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.config[""SESSION_COOKIE_NAME""] = value\n-\n     #: A :class:`~datetime.timedelta` which is used to set the expiration\n     #: date of a permanent session.  The default is 31 days which makes a\n     #: permanent session survive for roughly one month.\n@@ -315,152 +281,6 @@ class Flask(Scaffold):\n         ""PERMANENT_SESSION_LIFETIME"", get_converter=_make_timedelta\n     )\n \n-    @property\n-    def send_file_max_age_default(self) -> t.Optional[timedelta]:\n-        """"""The default value for ``max_age`` for :func:`~flask.send_file`. The default\n-        is ``None``, which tells the browser to use conditional requests instead of a\n-        timed cache.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Use\n-            ``app.config[""SEND_FILE_MAX_AGE_DEFAULT""]`` instead.\n-\n-        .. versionchanged:: 2.0\n-            Defaults to ``None`` instead of 12 hours.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'send_file_max_age_default\' is deprecated and will be removed in Flask""\n-            "" 2.3. Use \'SEND_FILE_MAX_AGE_DEFAULT\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return _make_timedelta(self.config[""SEND_FILE_MAX_AGE_DEFAULT""])\n-\n-    @send_file_max_age_default.setter\n-    def send_file_max_age_default(self, value: t.Union[int, timedelta, None]) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'send_file_max_age_default\' is deprecated and will be removed in Flask""\n-            "" 2.3. Use \'SEND_FILE_MAX_AGE_DEFAULT\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.config[""SEND_FILE_MAX_AGE_DEFAULT""] = _make_timedelta(value)\n-\n-    @property\n-    def use_x_sendfile(self) -> bool:\n-        """"""Enable this to use the ``X-Sendfile`` feature, assuming the server supports\n-        it, from :func:`~flask.send_file`.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Use ``app.config[""USE_X_SENDFILE""]`` instead.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'use_x_sendfile\' is deprecated and will be removed in Flask 2.3. Use""\n-            "" \'USE_X_SENDFILE\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self.config[""USE_X_SENDFILE""]\n-\n-    @use_x_sendfile.setter\n-    def use_x_sendfile(self, value: bool) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'use_x_sendfile\' is deprecated and will be removed in Flask 2.3. Use""\n-            "" \'USE_X_SENDFILE\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.config[""USE_X_SENDFILE""] = value\n-\n-    _json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n-    _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n-\n-    @property  # type: ignore[override]\n-    def json_encoder(self) -> t.Type[json.JSONEncoder]:\n-        """"""The JSON encoder class to use. Defaults to\n-        :class:`~flask.json.JSONEncoder`.\n-\n-        .. deprecated:: 2.2\n-             Will be removed in Flask 2.3. Customize\n-             :attr:`json_provider_class` instead.\n-\n-        .. versionadded:: 0.10\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n-        if self._json_encoder is None:\n-            from . import json\n-\n-            return json.JSONEncoder\n-\n-        return self._json_encoder\n-\n-    @json_encoder.setter\n-    def json_encoder(self, value: t.Type[json.JSONEncoder]) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self._json_encoder = value\n-\n-    @property  # type: ignore[override]\n-    def json_decoder(self) -> t.Type[json.JSONDecoder]:\n-        """"""The JSON decoder class to use. Defaults to\n-        :class:`~flask.json.JSONDecoder`.\n-\n-        .. deprecated:: 2.2\n-             Will be removed in Flask 2.3. Customize\n-             :attr:`json_provider_class` instead.\n-\n-        .. versionadded:: 0.10\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-\n-        if self._json_decoder is None:\n-            from . import json\n-\n-            return json.JSONDecoder\n-\n-        return self._json_decoder\n-\n-    @json_decoder.setter\n-    def json_decoder(self, value: t.Type[json.JSONDecoder]) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self._json_decoder = value\n-\n     json_provider_class: t.Type[JSONProvider] = DefaultJSONProvider\n     """"""A subclass of :class:`~flask.json.provider.JSONProvider`. An\n     instance is created and assigned to :attr:`app.json` when creating\n@@ -487,7 +307,6 @@ class Flask(Scaffold):\n     #: Default configuration parameters.\n     default_config = ImmutableDict(\n         {\n-            ""ENV"": None,\n             ""DEBUG"": None,\n             ""TESTING"": False,\n             ""PROPAGATE_EXCEPTIONS"": None,\n@@ -509,10 +328,6 @@ class Flask(Scaffold):\n             ""TRAP_HTTP_EXCEPTIONS"": False,\n             ""EXPLAIN_TEMPLATE_LOADING"": False,\n             ""PREFERRED_URL_SCHEME"": ""http"",\n-            ""JSON_AS_ASCII"": None,\n-            ""JSON_SORT_KEYS"": None,\n-            ""JSONIFY_PRETTYPRINT_REGULAR"": None,\n-            ""JSONIFY_MIMETYPE"": None,\n             ""TEMPLATES_AUTO_RELOAD"": None,\n             ""MAX_COOKIE_SIZE"": 4093,\n         }\n@@ -625,17 +440,6 @@ class Flask(Scaffold):\n             t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n         ] = []\n \n-        #: A list of functions that will be called at the beginning of the\n-        #: first request to this instance. To register a function, use the\n-        #: :meth:`before_first_request` decorator.\n-        #:\n-        #: .. deprecated:: 2.2\n-        #:     Will be removed in Flask 2.3. Run setup code when\n-        #:     creating the application instead.\n-        #:\n-        #: .. versionadded:: 0.8\n-        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n-\n         #: A list of functions that are called when the application context\n         #: is destroyed.  Since the application context is also torn down\n         #: if the request ends this is the place to store code that disconnects\n@@ -746,28 +550,6 @@ class Flask(Scaffold):\n             return os.path.splitext(os.path.basename(fn))[0]\n         return self.import_name\n \n-    @property\n-    def propagate_exceptions(self) -> bool:\n-        """"""Returns the value of the ``PROPAGATE_EXCEPTIONS`` configuration\n-        value in case it\'s set, otherwise a sensible default is returned.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3.\n-\n-        .. versionadded:: 0.7\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'propagate_exceptions\' is deprecated and will be removed in Flask 2.3."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        rv = self.config[""PROPAGATE_EXCEPTIONS""]\n-        if rv is not None:\n-            return rv\n-        return self.testing or self.debug\n-\n     @locked_cached_property\n     def logger(self) -> logging.Logger:\n         """"""A standard Python :class:`~logging.Logger` for the app, with\n@@ -827,7 +609,6 @@ class Flask(Scaffold):\n         if instance_relative:\n             root_path = self.instance_path\n         defaults = dict(self.default_config)\n-        defaults[""ENV""] = os.environ.get(""FLASK_ENV"") or ""production""\n         defaults[""DEBUG""] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n \n@@ -868,42 +649,6 @@ class Flask(Scaffold):\n         """"""\n         return open(os.path.join(self.instance_path, resource), mode)\n \n-    @property\n-    def templates_auto_reload(self) -> bool:\n-        """"""Reload templates when they are changed. Used by\n-        :meth:`create_jinja_environment`. It is enabled by default in debug mode.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Use ``app.config[""TEMPLATES_AUTO_RELOAD""]``\n-            instead.\n-\n-        .. versionadded:: 1.0\n-            This property was added but the underlying config and behavior\n-            already existed.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'templates_auto_reload\' is deprecated and will be removed in Flask 2.3.""\n-            "" Use \'TEMPLATES_AUTO_RELOAD\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        rv = self.config[""TEMPLATES_AUTO_RELOAD""]\n-        return rv if rv is not None else self.debug\n-\n-    @templates_auto_reload.setter\n-    def templates_auto_reload(self, value: bool) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'templates_auto_reload\' is deprecated and will be removed in Flask 2.3.""\n-            "" Use \'TEMPLATES_AUTO_RELOAD\' in \'app.config\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.config[""TEMPLATES_AUTO_RELOAD""] = value\n-\n     def create_jinja_environment(self) -> Environment:\n         """"""Create the Jinja environment based on :attr:`jinja_options`\n         and the various Jinja-related methods of the app. Changing\n@@ -1010,40 +755,6 @@ class Flask(Scaffold):\n             rv.update(processor())\n         return rv\n \n-    @property\n-    def env(self) -> str:\n-        """"""What environment the app is running in. This maps to the :data:`ENV` config\n-        key.\n-\n-        **Do not enable development when deploying in production.**\n-\n-        Default: ``\'production\'``\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.env\' is deprecated and will be removed in Flask 2.3.""\n-            "" Use \'app.debug\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self.config[""ENV""]\n-\n-    @env.setter\n-    def env(self, value: str) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'app.env\' is deprecated and will be removed in Flask 2.3.""\n-            "" Use \'app.debug\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.config[""ENV""] = value\n-\n     @property\n     def debug(self) -> bool:\n         """"""Whether debug mode is enabled. When using ``flask run`` to start the\n@@ -1144,16 +855,8 @@ class Flask(Scaffold):\n         if get_load_dotenv(load_dotenv):\n             cli.load_dotenv()\n \n-            # if set, let env vars override previous values\n-            if ""FLASK_ENV"" in os.environ:\n-                print(\n-                    ""\'FLASK_ENV\' is deprecated and will not be used in""\n-                    "" Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n-                    file=sys.stderr,\n-                )\n-                self.config[""ENV""] = os.environ.get(""FLASK_ENV"") or ""production""\n-                self.debug = get_debug_flag()\n-            elif ""FLASK_DEBUG"" in os.environ:\n+            # if set, env var overrides existing value\n+            if ""FLASK_DEBUG"" in os.environ:\n                 self.debug = get_debug_flag()\n \n         # debug passed to method overrides all other sources\n@@ -1479,32 +1182,6 @@ class Flask(Scaffold):\n         """"""\n         self.jinja_env.globals[name or f.__name__] = f\n \n-    @setupmethod\n-    def before_first_request(self, f: T_before_first_request) -> T_before_first_request:\n-        """"""Registers a function to be run before the first request to this\n-        instance of the application.\n-\n-        The function will be called without any arguments and its return\n-        value is ignored.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Run setup code when creating\n-            the application instead.\n-\n-        .. versionadded:: 0.8\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'before_first_request\' is deprecated and will be removed""\n-            "" in Flask 2.3. Run setup code while creating the""\n-            "" application instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.before_first_request_funcs.append(f)\n-        return f\n-\n     @setupmethod\n     def teardown_appcontext(self, f: T_teardown) -> T_teardown:\n         """"""Registers a function to be called when the application\n@@ -1682,7 +1359,7 @@ class Flask(Scaffold):\n \n         Always sends the :data:`got_request_exception` signal.\n \n-        If :attr:`propagate_exceptions` is ``True``, such as in debug\n+        If :data:`PROPAGATE_EXCEPTIONS` is ``True``, such as in debug\n         mode, the error will be re-raised so that the debugger can\n         display it. Otherwise, the original exception is logged, and\n         an :exc:`~werkzeug.exceptions.InternalServerError` is returned.\n@@ -1805,16 +1482,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        # Run before_first_request functions if this is the thread\'s first request.\n-        # Inlined to avoid a method call on subsequent requests.\n-        # This is deprecated, will be removed in Flask 2.3.\n-        if not self._got_first_request:\n-            with self._before_request_lock:\n-                if not self._got_first_request:\n-                    for func in self.before_first_request_funcs:\n-                        self.ensure_sync(func)()\n-\n-                    self._got_first_request = True\n+        self._got_first_request = True\n \n         try:\n             request_started.send(self)\n'",3.0,3.3230769230769233
src/flask/blueprints.py,src/flask/blueprints.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -1,4 +1,3 @@\n-import json\n import os\n import typing as t\n from collections import defaultdict\n@@ -15,9 +14,6 @@ if t.TYPE_CHECKING:  # pragma: no cover\n \n DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable)\n-T_before_first_request = t.TypeVar(\n-    ""T_before_first_request"", bound=ft.BeforeFirstRequestCallable\n-)\n T_before_request = t.TypeVar(""T_before_request"", bound=ft.BeforeRequestCallable)\n T_error_handler = t.TypeVar(""T_error_handler"", bound=ft.ErrorHandlerCallable)\n T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n@@ -173,77 +169,6 @@ class Blueprint(Scaffold):\n \n     _got_registered_once = False\n \n-    _json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n-    _json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n-\n-    @property\n-    def json_encoder(\n-        self,\n-    ) -> t.Union[t.Type[json.JSONEncoder], None]:\n-        """"""Blueprint-local JSON encoder class to use. Set to ``None`` to use the app\'s.\n-\n-        .. deprecated:: 2.2\n-             Will be removed in Flask 2.3. Customize\n-             :attr:`json_provider_class` instead.\n-\n-        .. versionadded:: 0.10\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'bp.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self._json_encoder\n-\n-    @json_encoder.setter\n-    def json_encoder(self, value: t.Union[t.Type[json.JSONEncoder], None]) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'bp.json_encoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self._json_encoder = value\n-\n-    @property\n-    def json_decoder(\n-        self,\n-    ) -> t.Union[t.Type[json.JSONDecoder], None]:\n-        """"""Blueprint-local JSON decoder class to use. Set to ``None`` to use the app\'s.\n-\n-        .. deprecated:: 2.2\n-             Will be removed in Flask 2.3. Customize\n-             :attr:`json_provider_class` instead.\n-\n-        .. versionadded:: 0.10\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'bp.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self._json_decoder\n-\n-    @json_decoder.setter\n-    def json_decoder(self, value: t.Union[t.Type[json.JSONDecoder], None]) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'bp.json_decoder\' is deprecated and will be removed in Flask 2.3.""\n-            "" Customize \'app.json_provider_class\' or \'app.json\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self._json_decoder = value\n-\n     def __init__(\n         self,\n         name: str,\n@@ -361,6 +286,10 @@ class Blueprint(Scaffold):\n         .. versionchanged:: 2.3\n             Nested blueprints now correctly apply subdomains.\n \n+        .. versionchanged:: 2.1\n+            Registering the same blueprint with the same name multiple\n+            times is an error.\n+\n         .. versionchanged:: 2.0.1\n             Nested blueprints are registered with their dotted name.\n             This allows different blueprints with the same name to be\n@@ -371,10 +300,6 @@ class Blueprint(Scaffold):\n             name the blueprint is registered with. This allows the same\n             blueprint to be registered multiple times with unique names\n             for ``url_for``.\n-\n-        .. versionchanged:: 2.0.1\n-            Registering the same blueprint with the same name multiple\n-            times is deprecated and will become an error in Flask 2.1.\n         """"""\n         name_prefix = options.get(""name_prefix"", """")\n         self_name = options.get(""name"", self.name)\n@@ -634,29 +559,6 @@ class Blueprint(Scaffold):\n         )\n         return f\n \n-    @setupmethod\n-    def before_app_first_request(\n-        self, f: T_before_first_request\n-    ) -> T_before_first_request:\n-        """"""Register a function to run before the first request to the application is\n-        handled by the worker. Equivalent to :meth:`.Flask.before_first_request`.\n-\n-        .. deprecated:: 2.2\n-            Will be removed in Flask 2.3. Run setup code when creating\n-            the application instead.\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'before_app_first_request\' is deprecated and will be""\n-            "" removed in Flask 2.3. Use \'record_once\' instead to run""\n-            "" setup code when registering the blueprint."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        self.record_once(lambda s: s.app.before_first_request_funcs.append(f))\n-        return f\n-\n     @setupmethod\n     def after_app_request(self, f: T_after_request) -> T_after_request:\n         """"""Like :meth:`after_request`, but after every request, not only those handled\n'",2.2972972972972974,2.5
src/flask/globals.py,src/flask/globals.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -17,30 +17,17 @@ class _FakeStack:\n         self.name = name\n         self.cv = cv\n \n-    def _warn(self):\n+    @property\n+    def top(self) -> t.Optional[t.Any]:\n         import warnings\n \n         warnings.warn(\n-            f""\'_{self.name}_ctx_stack\' is deprecated and will be""\n-            "" removed in Flask 2.3. Use \'g\' to store data, or""\n-            f"" \'{self.name}_ctx\' to access the current context."",\n+            f""\'_{self.name}_ctx_stack\' is deprecated and will be removed in Flask 2.4.""\n+            f"" Use \'g\' to store data, or \'{self.name}_ctx\' to access the current""\n+            "" context."",\n             DeprecationWarning,\n-            stacklevel=3,\n+            stacklevel=2,\n         )\n-\n-    def push(self, obj: t.Any) -> None:\n-        self._warn()\n-        self.cv.set(obj)\n-\n-    def pop(self) -> t.Any:\n-        self._warn()\n-        ctx = self.cv.get(None)\n-        self.cv.set(None)\n-        return ctx\n-\n-    @property\n-    def top(self) -> t.Optional[t.Any]:\n-        self._warn()\n         return self.cv.get(None)\n \n \n@@ -88,7 +75,7 @@ def __getattr__(name: str) -> t.Any:\n         import warnings\n \n         warnings.warn(\n-            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n@@ -98,7 +85,7 @@ def __getattr__(name: str) -> t.Any:\n         import warnings\n \n         warnings.warn(\n-            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.3."",\n+            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n             DeprecationWarning,\n             stacklevel=2,\n         )\n'",1.3333333333333333,1.6666666666666667
src/flask/helpers.py,src/flask/helpers.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -25,45 +25,12 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     import typing_extensions as te\n \n \n-def get_env() -> str:\n-    """"""Get the environment the app is running in, indicated by the\n-    :envvar:`FLASK_ENV` environment variable. The default is\n-    ``\'production\'``.\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3.\n-    """"""\n-    import warnings\n-\n-    warnings.warn(\n-        ""\'FLASK_ENV\' and \'get_env\' are deprecated and will be removed""\n-        "" in Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-    return os.environ.get(""FLASK_ENV"") or ""production""\n-\n-\n def get_debug_flag() -> bool:\n     """"""Get whether debug mode should be enabled for the app, indicated by the\n     :envvar:`FLASK_DEBUG` environment variable. The default is ``False``.\n     """"""\n     val = os.environ.get(""FLASK_DEBUG"")\n-\n-    if not val:\n-        env = os.environ.get(""FLASK_ENV"")\n-\n-        if env is not None:\n-            print(\n-                ""\'FLASK_ENV\' is deprecated and will not be used in""\n-                "" Flask 2.3. Use \'FLASK_DEBUG\' instead."",\n-                file=sys.stderr,\n-            )\n-            return env == ""development""\n-\n-        return False\n-\n-    return val.lower() not in {""0"", ""false"", ""no""}\n+    return bool(val and val.lower() not in {""0"", ""false"", ""no""})\n \n \n def get_load_dotenv(default: bool = True) -> bool:\n'",2.260869565217391,2.227272727272727
src/flask/json/__init__.py,src/flask/json/__init__.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -3,85 +3,14 @@ from __future__ import annotations\n import json as _json\n import typing as t\n \n-from jinja2.utils import htmlsafe_json_dumps as _jinja_htmlsafe_dumps\n-\n from ..globals import current_app\n from .provider import _default\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    from ..app import Flask\n     from ..wrappers import Response\n \n \n-class JSONEncoder(_json.JSONEncoder):\n-    """"""The default JSON encoder. Handles extra types compared to the\n-    built-in :class:`json.JSONEncoder`.\n-\n-    -   :class:`datetime.datetime` and :class:`datetime.date` are\n-        serialized to :rfc:`822` strings. This is the same as the HTTP\n-        date format.\n-    -   :class:`decimal.Decimal` is serialized to a string.\n-    -   :class:`uuid.UUID` is serialized to a string.\n-    -   :class:`dataclasses.dataclass` is passed to\n-        :func:`dataclasses.asdict`.\n-    -   :class:`~markupsafe.Markup` (or any object with a ``__html__``\n-        method) will call the ``__html__`` method to get a string.\n-\n-    Assign a subclass of this to :attr:`flask.Flask.json_encoder` or\n-    :attr:`flask.Blueprint.json_encoder` to override the default.\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Use ``app.json`` instead.\n-    """"""\n-\n-    def __init__(self, **kwargs) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'JSONEncoder\' is deprecated and will be removed in""\n-            "" Flask 2.3. Use \'Flask.json\' to provide an alternate""\n-            "" JSON implementation instead."",\n-            DeprecationWarning,\n-            stacklevel=3,\n-        )\n-        super().__init__(**kwargs)\n-\n-    def default(self, o: t.Any) -> t.Any:\n-        """"""Convert ``o`` to a JSON serializable type. See\n-        :meth:`json.JSONEncoder.default`. Python does not support\n-        overriding how basic types like ``str`` or ``list`` are\n-        serialized, they are handled before this method.\n-        """"""\n-        return _default(o)\n-\n-\n-class JSONDecoder(_json.JSONDecoder):\n-    """"""The default JSON decoder.\n-\n-    This does not change any behavior from the built-in\n-    :class:`json.JSONDecoder`.\n-\n-    Assign a subclass of this to :attr:`flask.Flask.json_decoder` or\n-    :attr:`flask.Blueprint.json_decoder` to override the default.\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. Use ``app.json`` instead.\n-    """"""\n-\n-    def __init__(self, **kwargs) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'JSONDecoder\' is deprecated and will be removed in""\n-            "" Flask 2.3. Use \'Flask.json\' to provide an alternate""\n-            "" JSON implementation instead."",\n-            DeprecationWarning,\n-            stacklevel=3,\n-        )\n-        super().__init__(**kwargs)\n-\n-\n-def dumps(obj: t.Any, *, app: Flask | None = None, **kwargs: t.Any) -> str:\n+def dumps(obj: t.Any, **kwargs: t.Any) -> str:\n     """"""Serialize data as JSON.\n \n     If :data:`~flask.current_app` is available, it will use its\n@@ -91,13 +20,13 @@ def dumps(obj: t.Any, *, app: Flask | None = None, **kwargs: t.Any) -> str:\n     :param obj: The data to serialize.\n     :param kwargs: Arguments passed to the ``dumps`` implementation.\n \n+    .. versionchanged:: 2.3\n+        The ``app`` parameter was removed.\n+\n     .. versionchanged:: 2.2\n         Calls ``current_app.json.dumps``, allowing an app to override\n         the behavior.\n \n-    .. versionchanged:: 2.2\n-        The ``app`` parameter will be removed in Flask 2.3.\n-\n     .. versionchanged:: 2.0.2\n         :class:`decimal.Decimal` is supported by converting to a string.\n \n@@ -108,28 +37,14 @@ def dumps(obj: t.Any, *, app: Flask | None = None, **kwargs: t.Any) -> str:\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n-    if app is not None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""The \'app\' parameter is deprecated and will be removed in""\n-            "" Flask 2.3. Call \'app.json.dumps\' directly instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-    else:\n-        app = current_app\n-\n-    if app:\n-        return app.json.dumps(obj, **kwargs)\n+    if current_app:\n+        return current_app.json.dumps(obj, **kwargs)\n \n     kwargs.setdefault(""default"", _default)\n     return _json.dumps(obj, **kwargs)\n \n \n-def dump(\n-    obj: t.Any, fp: t.IO[str], *, app: Flask | None = None, **kwargs: t.Any\n-) -> None:\n+def dump(obj: t.Any, fp: t.IO[str], **kwargs: t.Any) -> None:\n     """"""Serialize data as JSON and write to a file.\n \n     If :data:`~flask.current_app` is available, it will use its\n@@ -141,37 +56,25 @@ def dump(\n         encoding to be valid JSON.\n     :param kwargs: Arguments passed to the ``dump`` implementation.\n \n+    .. versionchanged:: 2.3\n+        The ``app`` parameter was removed.\n+\n     .. versionchanged:: 2.2\n         Calls ``current_app.json.dump``, allowing an app to override\n         the behavior.\n \n-    .. versionchanged:: 2.2\n-        The ``app`` parameter will be removed in Flask 2.3.\n-\n     .. versionchanged:: 2.0\n         Writing to a binary file, and the ``encoding`` argument, will be\n         removed in Flask 2.1.\n     """"""\n-    if app is not None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""The \'app\' parameter is deprecated and will be removed in""\n-            "" Flask 2.3. Call \'app.json.dump\' directly instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-    else:\n-        app = current_app\n-\n-    if app:\n-        app.json.dump(obj, fp, **kwargs)\n+    if current_app:\n+        current_app.json.dump(obj, fp, **kwargs)\n     else:\n         kwargs.setdefault(""default"", _default)\n         _json.dump(obj, fp, **kwargs)\n \n \n-def loads(s: str | bytes, *, app: Flask | None = None, **kwargs: t.Any) -> t.Any:\n+def loads(s: str | bytes, **kwargs: t.Any) -> t.Any:\n     """"""Deserialize data as JSON.\n \n     If :data:`~flask.current_app` is available, it will use its\n@@ -181,13 +84,13 @@ def loads(s: str | bytes, *, app: Flask | None = None, **kwargs: t.Any) -> t.Any\n     :param s: Text or UTF-8 bytes.\n     :param kwargs: Arguments passed to the ``loads`` implementation.\n \n+    .. versionchanged:: 2.3\n+        The ``app`` parameter was removed.\n+\n     .. versionchanged:: 2.2\n         Calls ``current_app.json.loads``, allowing an app to override\n         the behavior.\n \n-    .. versionchanged:: 2.2\n-        The ``app`` parameter will be removed in Flask 2.3.\n-\n     .. versionchanged:: 2.0\n         ``encoding`` will be removed in Flask 2.1. The data must be a\n         string or UTF-8 bytes.\n@@ -196,25 +99,13 @@ def loads(s: str | bytes, *, app: Flask | None = None, **kwargs: t.Any) -> t.Any\n         ``app`` can be passed directly, rather than requiring an app\n         context for configuration.\n     """"""\n-    if app is not None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""The \'app\' parameter is deprecated and will be removed in""\n-            "" Flask 2.3. Call \'app.json.loads\' directly instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-    else:\n-        app = current_app\n-\n-    if app:\n-        return app.json.loads(s, **kwargs)\n+    if current_app:\n+        return current_app.json.loads(s, **kwargs)\n \n     return _json.loads(s, **kwargs)\n \n \n-def load(fp: t.IO[t.AnyStr], *, app: Flask | None = None, **kwargs: t.Any) -> t.Any:\n+def load(fp: t.IO[t.AnyStr], **kwargs: t.Any) -> t.Any:\n     """"""Deserialize data as JSON read from a file.\n \n     If :data:`~flask.current_app` is available, it will use its\n@@ -224,6 +115,9 @@ def load(fp: t.IO[t.AnyStr], *, app: Flask | None = None, **kwargs: t.Any) -> t.\n     :param fp: A file opened for reading text or UTF-8 bytes.\n     :param kwargs: Arguments passed to the ``load`` implementation.\n \n+    .. versionchanged:: 2.3\n+        The ``app`` parameter was removed.\n+\n     .. versionchanged:: 2.2\n         Calls ``current_app.json.load``, allowing an app to override\n         the behavior.\n@@ -235,78 +129,12 @@ def load(fp: t.IO[t.AnyStr], *, app: Flask | None = None, **kwargs: t.Any) -> t.\n         ``encoding`` will be removed in Flask 2.1. The file must be text\n         mode, or binary mode with UTF-8 bytes.\n     """"""\n-    if app is not None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""The \'app\' parameter is deprecated and will be removed in""\n-            "" Flask 2.3. Call \'app.json.load\' directly instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-    else:\n-        app = current_app\n-\n-    if app:\n-        return app.json.load(fp, **kwargs)\n+    if current_app:\n+        return current_app.json.load(fp, **kwargs)\n \n     return _json.load(fp, **kwargs)\n \n \n-def htmlsafe_dumps(obj: t.Any, **kwargs: t.Any) -> str:\n-    """"""Serialize an object to a string of JSON with :func:`dumps`, then\n-    replace HTML-unsafe characters with Unicode escapes and mark the\n-    result safe with :class:`~markupsafe.Markup`.\n-\n-    This is available in templates as the ``|tojson`` filter.\n-\n-    The returned string is safe to render in HTML documents and\n-    ``<script>`` tags. The exception is in HTML attributes that are\n-    double quoted; either use single quotes or the ``|forceescape``\n-    filter.\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3. This is built-in to Jinja now.\n-\n-    .. versionchanged:: 2.0\n-        Uses :func:`jinja2.utils.htmlsafe_json_dumps`. The returned\n-        value is marked safe by wrapping in :class:`~markupsafe.Markup`.\n-\n-    .. versionchanged:: 0.10\n-        Single quotes are escaped, making this safe to use in HTML,\n-        ``<script>`` tags, and single-quoted attributes without further\n-        escaping.\n-    """"""\n-    import warnings\n-\n-    warnings.warn(\n-        ""\'htmlsafe_dumps\' is deprecated and will be removed in Flask""\n-        "" 2.3. Use \'jinja2.utils.htmlsafe_json_dumps\' instead."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-    return _jinja_htmlsafe_dumps(obj, dumps=dumps, **kwargs)\n-\n-\n-def htmlsafe_dump(obj: t.Any, fp: t.IO[str], **kwargs: t.Any) -> None:\n-    """"""Serialize an object to JSON written to a file object, replacing\n-    HTML-unsafe characters with Unicode escapes. See\n-    :func:`htmlsafe_dumps` and :func:`dumps`.\n-\n-    .. deprecated:: 2.2\n-        Will be removed in Flask 2.3.\n-    """"""\n-    import warnings\n-\n-    warnings.warn(\n-        ""\'htmlsafe_dump\' is deprecated and will be removed in Flask""\n-        "" 2.3. Use \'jinja2.utils.htmlsafe_json_dumps\' instead."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-    fp.write(htmlsafe_dumps(obj, **kwargs))\n-\n-\n def jsonify(*args: t.Any, **kwargs: t.Any) -> Response:\n     """"""Serialize the given arguments as JSON, and return a\n     :class:`~flask.Response` object with the ``application/json``\n'",1.8,1.8
src/flask/json/provider.py,src/flask/json/provider.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -10,8 +10,6 @@ from datetime import date\n \n from werkzeug.http import http_date\n \n-from ..globals import request\n-\n if t.TYPE_CHECKING:  # pragma: no cover\n     from ..app import Flask\n     from ..wrappers import Response\n@@ -176,57 +174,9 @@ class DefaultJSONProvider(JSONProvider):\n         :param obj: The data to serialize.\n         :param kwargs: Passed to :func:`json.dumps`.\n         """"""\n-        cls = self._app._json_encoder\n-        bp = self._app.blueprints.get(request.blueprint) if request else None\n-\n-        if bp is not None and bp._json_encoder is not None:\n-            cls = bp._json_encoder\n-\n-        if cls is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""Setting \'json_encoder\' on the app or a blueprint is""\n-                "" deprecated and will be removed in Flask 2.3.""\n-                "" Customize \'app.json\' instead."",\n-                DeprecationWarning,\n-            )\n-            kwargs.setdefault(""cls"", cls)\n-\n-            if ""default"" not in cls.__dict__:\n-                kwargs.setdefault(""default"", self.default)\n-        else:\n-            kwargs.setdefault(""default"", self.default)\n-\n-        ensure_ascii = self._app.config[""JSON_AS_ASCII""]\n-        sort_keys = self._app.config[""JSON_SORT_KEYS""]\n-\n-        if ensure_ascii is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""The \'JSON_AS_ASCII\' config key is deprecated and will""\n-                "" be removed in Flask 2.3. Set \'app.json.ensure_ascii\'""\n-                "" instead."",\n-                DeprecationWarning,\n-            )\n-        else:\n-            ensure_ascii = self.ensure_ascii\n-\n-        if sort_keys is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""The \'JSON_SORT_KEYS\' config key is deprecated and will""\n-                "" be removed in Flask 2.3. Set \'app.json.sort_keys\'""\n-                "" instead."",\n-                DeprecationWarning,\n-            )\n-        else:\n-            sort_keys = self.sort_keys\n-\n-        kwargs.setdefault(""ensure_ascii"", ensure_ascii)\n-        kwargs.setdefault(""sort_keys"", sort_keys)\n+        kwargs.setdefault(""default"", self.default)\n+        kwargs.setdefault(""ensure_ascii"", self.ensure_ascii)\n+        kwargs.setdefault(""sort_keys"", self.sort_keys)\n         return json.dumps(obj, **kwargs)\n \n     def loads(self, s: str | bytes, **kwargs: t.Any) -> t.Any:\n@@ -235,23 +185,6 @@ class DefaultJSONProvider(JSONProvider):\n         :param s: Text or UTF-8 bytes.\n         :param kwargs: Passed to :func:`json.loads`.\n         """"""\n-        cls = self._app._json_decoder\n-        bp = self._app.blueprints.get(request.blueprint) if request else None\n-\n-        if bp is not None and bp._json_decoder is not None:\n-            cls = bp._json_decoder\n-\n-        if cls is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""Setting \'json_decoder\' on the app or a blueprint is""\n-                "" deprecated and will be removed in Flask 2.3.""\n-                "" Customize \'app.json\' instead."",\n-                DeprecationWarning,\n-            )\n-            kwargs.setdefault(""cls"", cls)\n-\n         return json.loads(s, **kwargs)\n \n     def response(self, *args: t.Any, **kwargs: t.Any) -> Response:\n@@ -272,39 +205,12 @@ class DefaultJSONProvider(JSONProvider):\n         """"""\n         obj = self._prepare_response_obj(args, kwargs)\n         dump_args: t.Dict[str, t.Any] = {}\n-        pretty = self._app.config[""JSONIFY_PRETTYPRINT_REGULAR""]\n-        mimetype = self._app.config[""JSONIFY_MIMETYPE""]\n-\n-        if pretty is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""The \'JSONIFY_PRETTYPRINT_REGULAR\' config key is""\n-                "" deprecated and will be removed in Flask 2.3. Set""\n-                "" \'app.json.compact\' instead."",\n-                DeprecationWarning,\n-            )\n-            compact: bool | None = not pretty\n-        else:\n-            compact = self.compact\n \n-        if (compact is None and self._app.debug) or compact is False:\n+        if (self.compact is None and self._app.debug) or self.compact is False:\n             dump_args.setdefault(""indent"", 2)\n         else:\n             dump_args.setdefault(""separators"", ("","", "":""))\n \n-        if mimetype is not None:\n-            import warnings\n-\n-            warnings.warn(\n-                ""The \'JSONIFY_MIMETYPE\' config key is deprecated and""\n-                "" will be removed in Flask 2.3. Set \'app.json.mimetype\'""\n-                "" instead."",\n-                DeprecationWarning,\n-            )\n-        else:\n-            mimetype = self.mimetype\n-\n         return self._app.response_class(\n-            f""{self.dumps(obj, **dump_args)}\\n"", mimetype=mimetype\n+            f""{self.dumps(obj, **dump_args)}\\n"", mimetype=self.mimetype\n         )\n'",3.4545454545454546,2.272727272727273
src/flask/scaffold.py,src/flask/scaffold.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"""@@ -1,5 +1,4 @@\n import importlib.util\n-import json\n import os\n import pathlib\n import pkgutil\n@@ -74,20 +73,6 @@ class Scaffold:\n     _static_folder: t.Optional[str] = None\n     _static_url_path: t.Optional[str] = None\n \n-    #: JSON encoder class used by :func:`flask.json.dumps`. If a\n-    #: blueprint sets this, it will be used instead of the app's value.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3.\n-    json_encoder: t.Union[t.Type[json.JSONEncoder], None] = None\n-\n-    #: JSON decoder class used by :func:`flask.json.loads`. If a\n-    #: blueprint sets this, it will be used instead of the app's value.\n-    #:\n-    #: .. deprecated:: 2.2\n-    #:      Will be removed in Flask 2.3.\n-    json_decoder: t.Union[t.Type[json.JSONDecoder], None] = None\n-\n     def __init__(\n         self,\n         import_name: str,\n""",1.95,1.95
tests/conftest.py,tests/conftest.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -20,7 +20,6 @@ def _standard_os_environ():\n     out = (\n         (os.environ, ""FLASK_ENV_FILE"", monkeypatch.notset),\n         (os.environ, ""FLASK_APP"", monkeypatch.notset),\n-        (os.environ, ""FLASK_ENV"", monkeypatch.notset),\n         (os.environ, ""FLASK_DEBUG"", monkeypatch.notset),\n         (os.environ, ""FLASK_RUN_FROM_CLI"", monkeypatch.notset),\n         (os.environ, ""WERKZEUG_RUN_MAIN"", monkeypatch.notset),\n'",1.3157894736842106,1.3157894736842106
tests/test_async.py,tests/test_async.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -95,7 +95,6 @@ def test_async_error_handler(path, async_app):\n \n \n def test_async_before_after_request():\n-    app_first_called = False\n     app_before_called = False\n     app_after_called = False\n     bp_before_called = False\n@@ -107,13 +106,6 @@ def test_async_before_after_request():\n     def index():\n         return """"\n \n-    with pytest.deprecated_call():\n-\n-        @app.before_first_request\n-        async def before_first():\n-            nonlocal app_first_called\n-            app_first_called = True\n-\n     @app.before_request\n     async def before():\n         nonlocal app_before_called\n@@ -146,7 +138,6 @@ def test_async_before_after_request():\n \n     test_client = app.test_client()\n     test_client.get(""/"")\n-    assert app_first_called\n     assert app_before_called\n     assert app_after_called\n     test_client.get(""/bp/"")\n'",1.0,1.0
tests/test_basic.py,tests/test_basic.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -1,13 +1,11 @@\n import gc\n import re\n-import time\n import uuid\n import warnings\n import weakref\n from datetime import datetime\n from datetime import timezone\n from platform import python_implementation\n-from threading import Thread\n \n import pytest\n import werkzeug.serving\n@@ -1667,43 +1665,6 @@ def test_no_setup_after_first_request(app, client):\n     assert ""setup method \'add_url_rule\'"" in str(exc_info.value)\n \n \n-def test_before_first_request_functions(app, client):\n-    got = []\n-\n-    with pytest.deprecated_call():\n-\n-        @app.before_first_request\n-        def foo():\n-            got.append(42)\n-\n-    client.get(""/"")\n-    assert got == [42]\n-    client.get(""/"")\n-    assert got == [42]\n-    assert app.got_first_request\n-\n-\n-def test_before_first_request_functions_concurrent(app, client):\n-    got = []\n-\n-    with pytest.deprecated_call():\n-\n-        @app.before_first_request\n-        def foo():\n-            time.sleep(0.2)\n-            got.append(42)\n-\n-    def get_and_assert():\n-        client.get(""/"")\n-        assert got == [42]\n-\n-    t = Thread(target=get_and_assert)\n-    t.start()\n-    get_and_assert()\n-    t.join()\n-    assert app.got_first_request\n-\n-\n def test_routing_redirect_debugging(monkeypatch, app, client):\n     app.config[""DEBUG""] = True\n \n'",1.0748031496062993,1.0763052208835342
tests/test_blueprints.py,tests/test_blueprints.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -722,12 +722,6 @@ def test_app_request_processing(app, client):\n     bp = flask.Blueprint(""bp"", __name__)\n     evts = []\n \n-    with pytest.deprecated_call():\n-\n-        @bp.before_app_first_request\n-        def before_first_request():\n-            evts.append(""first"")\n-\n     @bp.before_app_request\n     def before_app():\n         evts.append(""before"")\n@@ -755,12 +749,12 @@ def test_app_request_processing(app, client):\n     # first request\n     resp = client.get(""/"").data\n     assert resp == b""request|after""\n-    assert evts == [""first"", ""before"", ""after"", ""teardown""]\n+    assert evts == [""before"", ""after"", ""teardown""]\n \n     # second request\n     resp = client.get(""/"").data\n     assert resp == b""request|after""\n-    assert evts == [""first""] + [""before"", ""after"", ""teardown""] * 2\n+    assert evts == [""before"", ""after"", ""teardown""] * 2\n \n \n def test_app_url_processors(app, client):\n'",1.0258064516129033,1.025974025974026
tests/test_helpers.py,tests/test_helpers.py,6650764e9719402de2aaa6f321bdec587699c6b2,604de4b1dc0729233704a08c32612c6f1221cccb,'remove previously deprecated code',"'@@ -302,24 +302,18 @@ class TestStreaming:\n \n class TestHelpers:\n     @pytest.mark.parametrize(\n-        ""debug, expected_flag, expected_default_flag"",\n+        (""debug"", ""expect""),\n         [\n-            ("""", False, False),\n-            (""0"", False, False),\n-            (""False"", False, False),\n-            (""No"", False, False),\n-            (""True"", True, True),\n+            ("""", False),\n+            (""0"", False),\n+            (""False"", False),\n+            (""No"", False),\n+            (""True"", True),\n         ],\n     )\n-    def test_get_debug_flag(\n-        self, monkeypatch, debug, expected_flag, expected_default_flag\n-    ):\n+    def test_get_debug_flag(self, monkeypatch, debug, expect):\n         monkeypatch.setenv(""FLASK_DEBUG"", debug)\n-        if expected_flag is None:\n-            assert get_debug_flag() is None\n-        else:\n-            assert get_debug_flag() == expected_flag\n-        assert get_debug_flag() == expected_default_flag\n+        assert get_debug_flag() == expect\n \n     def test_make_response(self):\n         app = flask.Flask(__name__)\n'",1.0666666666666667,1.0444444444444445
CHANGES.rst,CHANGES.rst,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -21,6 +21,8 @@ Unreleased\n         corresponding ``json.JSONEncoder`` and ``JSONDecoder`` classes, are removed.\n     -   The ``json.htmlsafe_dumps`` and ``htmlsafe_dump`` functions are removed.\n \n+-   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them\n+    directly from ``markupsafe`` instead. :pr:`4996`\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n     :pr:`4947`\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n'",0,0
docs/api.rst,docs/api.rst,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -217,10 +217,6 @@ Useful Functions and Classes\n \n .. autofunction:: send_from_directory\n \n-.. autofunction:: escape\n-\n-.. autoclass:: Markup\n-   :members: escape, unescape, striptags\n \n Message Flashing\n ----------------\n'",1.5,1.5
docs/security.rst,docs/security.rst,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -23,7 +23,7 @@ in templates, but there are still other places where you have to be\n careful:\n \n -   generating HTML without the help of Jinja2\n--   calling :class:`~flask.Markup` on data submitted by users\n+-   calling :class:`~markupsafe.Markup` on data submitted by users\n -   sending out HTML from uploaded files, never do that, use the\n     ``Content-Disposition: attachment`` header to prevent that problem.\n -   sending out textfiles from uploaded files.  Some browsers are using\n'",1.0,1.0
docs/templating.rst,docs/templating.rst,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -115,7 +115,7 @@ markdown to HTML converter.\n \n There are three ways to accomplish that:\n \n--   In the Python code, wrap the HTML string in a :class:`~flask.Markup`\n+-   In the Python code, wrap the HTML string in a :class:`~markupsafe.Markup`\n     object before passing it to the template.  This is in general the\n     recommended way.\n -   Inside the template, use the ``|safe`` filter to explicitly mark a\n'",1.0,1.0
src/flask/__init__.py,src/flask/__init__.py,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -1,6 +1,3 @@\n-from markupsafe import escape\n-from markupsafe import Markup\n-\n from . import json as json\n from .app import Flask as Flask\n from .app import Request as Request\n@@ -68,4 +65,28 @@ def __getattr__(name):\n         )\n         return __request_ctx_stack\n \n+    if name == ""escape"":\n+        import warnings\n+        from markupsafe import escape\n+\n+        warnings.warn(\n+            ""\'flask.escape\' is deprecated and will be removed in Flask 2.4. Import""\n+            "" \'markupsafe.escape\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return escape\n+\n+    if name == ""escape"":\n+        import warnings\n+        from markupsafe import Markup\n+\n+        warnings.warn(\n+            ""\'flask.Markup\' is deprecated and will be removed in Flask 2.4. Import""\n+            "" \'markupsafe.Markup\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return Markup\n+\n     raise AttributeError(name)\n'",3.0,5.0
tests/test_basic.py,tests/test_basic.py,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -9,6 +9,7 @@ from platform import python_implementation\n \n import pytest\n import werkzeug.serving\n+from markupsafe import Markup\n from werkzeug.exceptions import BadRequest\n from werkzeug.exceptions import Forbidden\n from werkzeug.exceptions import NotFound\n@@ -472,7 +473,7 @@ def test_session_special_types(app, client):\n     def dump_session_contents():\n         flask.session[""t""] = (1, 2, 3)\n         flask.session[""b""] = b""\\xff""\n-        flask.session[""m""] = flask.Markup(""<html>"")\n+        flask.session[""m""] = Markup(""<html>"")\n         flask.session[""u""] = the_uuid\n         flask.session[""d""] = now\n         flask.session[""t_tag""] = {"" t"": ""not-a-tuple""}\n@@ -486,8 +487,8 @@ def test_session_special_types(app, client):\n         assert s[""t""] == (1, 2, 3)\n         assert type(s[""b""]) == bytes\n         assert s[""b""] == b""\\xff""\n-        assert type(s[""m""]) == flask.Markup\n-        assert s[""m""] == flask.Markup(""<html>"")\n+        assert type(s[""m""]) == Markup\n+        assert s[""m""] == Markup(""<html>"")\n         assert s[""u""] == the_uuid\n         assert s[""d""] == now\n         assert s[""t_tag""] == {"" t"": ""not-a-tuple""}\n@@ -611,7 +612,7 @@ def test_extended_flashing(app):\n     def index():\n         flask.flash(""Hello World"")\n         flask.flash(""Hello World"", ""error"")\n-        flask.flash(flask.Markup(""<em>Testing</em>""), ""warning"")\n+        flask.flash(Markup(""<em>Testing</em>""), ""warning"")\n         return """"\n \n     @app.route(""/test/"")\n@@ -620,7 +621,7 @@ def test_extended_flashing(app):\n         assert list(messages) == [\n             ""Hello World"",\n             ""Hello World"",\n-            flask.Markup(""<em>Testing</em>""),\n+            Markup(""<em>Testing</em>""),\n         ]\n         return """"\n \n@@ -631,7 +632,7 @@ def test_extended_flashing(app):\n         assert list(messages) == [\n             (""message"", ""Hello World""),\n             (""error"", ""Hello World""),\n-            (""warning"", flask.Markup(""<em>Testing</em>"")),\n+            (""warning"", Markup(""<em>Testing</em>"")),\n         ]\n         return """"\n \n@@ -650,7 +651,7 @@ def test_extended_flashing(app):\n         )\n         assert list(messages) == [\n             (""message"", ""Hello World""),\n-            (""warning"", flask.Markup(""<em>Testing</em>"")),\n+            (""warning"", Markup(""<em>Testing</em>"")),\n         ]\n         return """"\n \n@@ -659,7 +660,7 @@ def test_extended_flashing(app):\n         messages = flask.get_flashed_messages(category_filter=[""message"", ""warning""])\n         assert len(messages) == 2\n         assert messages[0] == ""Hello World""\n-        assert messages[1] == flask.Markup(""<em>Testing</em>"")\n+        assert messages[1] == Markup(""<em>Testing</em>"")\n         return """"\n \n     # Create new test client on each test to clean flashed messages.\n'",1.0763052208835342,1.0763052208835342
tests/test_json_tag.py,tests/test_json_tag.py,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -3,8 +3,8 @@ from datetime import timezone\n from uuid import uuid4\n \n import pytest\n+from markupsafe import Markup\n \n-from flask import Markup\n from flask.json.tag import JSONTag\n from flask.json.tag import TaggedJSONSerializer\n \n'",1.0,1.0
tests/test_templating.py,tests/test_templating.py,9c02f07f9bb4c88207c2a6860742c452c35d2948,1ee22e1736ffd12c2222cd6215ed04ec1592adaa,'deprecate markupsafe exports',"'@@ -3,6 +3,7 @@ import logging\n import pytest\n import werkzeug.serving\n from jinja2 import TemplateNotFound\n+from markupsafe import Markup\n \n import flask\n \n@@ -73,7 +74,7 @@ def test_escaping(app, client):\n     @app.route(""/"")\n     def index():\n         return flask.render_template(\n-            ""escaping_template.html"", text=text, html=flask.Markup(text)\n+            ""escaping_template.html"", text=text, html=Markup(text)\n         )\n \n     lines = client.get(""/"").data.splitlines()\n@@ -93,7 +94,7 @@ def test_no_escaping(app, client):\n     @app.route(""/"")\n     def index():\n         return flask.render_template(\n-            ""non_escaping_template.txt"", text=text, html=flask.Markup(text)\n+            ""non_escaping_template.txt"", text=text, html=Markup(text)\n         )\n \n     lines = client.get(""/"").data.splitlines()\n'",1.0,1.0
CHANGES.rst,CHANGES.rst,2a33c1785412075c09f9f55b3e25f2bc995ca461,704b68948f7bb94a3a4fa15e99243d4ed82081c5,'deprecate got_first_request property',"'@@ -23,6 +23,7 @@ Unreleased\n \n -   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them\n     directly from ``markupsafe`` instead. :pr:`4996`\n+-   The ``app.got_first_request`` property is deprecated. :pr:`4997`\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n     :pr:`4947`\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n'",0,0
src/flask/app.py,src/flask/app.py,2a33c1785412075c09f9f55b3e25f2bc995ca461,704b68948f7bb94a3a4fa15e99243d4ed82081c5,'deprecate got_first_request property',"'@@ -8,7 +8,6 @@ import weakref\n from collections.abc import Iterator as _abc_Iterator\n from datetime import timedelta\n from itertools import chain\n-from threading import Lock\n from types import TracebackType\n \n import click\n@@ -496,7 +495,6 @@ class Flask(Scaffold):\n         # tracks internally if the application already handled at least one\n         # request.\n         self._got_first_request = False\n-        self._before_request_lock = Lock()\n \n         # Add a static route using the provided static_url_path, static_host,\n         # and static_folder if there is a configured static_folder.\n@@ -592,8 +590,18 @@ class Flask(Scaffold):\n         """"""This attribute is set to ``True`` if the application started\n         handling the first request.\n \n+        .. deprecated:: 2.3\n+            Will be removed in Flask 2.4.\n+\n         .. versionadded:: 0.8\n         """"""\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'got_first_request\' is deprecated and will be removed in Flask 2.4."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         return self._got_first_request\n \n     def make_config(self, instance_relative: bool = False) -> Config:\n'",3.3230769230769233,3.3230769230769233
tests/test_basic.py,tests/test_basic.py,2a33c1785412075c09f9f55b3e25f2bc995ca461,704b68948f7bb94a3a4fa15e99243d4ed82081c5,'deprecate got_first_request property',"'@@ -1657,7 +1657,6 @@ def test_no_setup_after_first_request(app, client):\n     def index():\n         return ""Awesome""\n \n-    assert not app.got_first_request\n     assert client.get(""/"").data == b""Awesome""\n \n     with pytest.raises(AssertionError) as exc_info:\n'",1.0763052208835342,1.0763052208835342
CHANGES.rst,CHANGES.rst,fc03d0dfab64945169e1114cdc1fb39519a1e0c1,2a33c1785412075c09f9f55b3e25f2bc995ca461,'setup method on registered blueprint is error',"'@@ -20,6 +20,8 @@ Unreleased\n     -   ``json_encoder`` and ``json_decoder`` attributes on app and blueprint, and the\n         corresponding ``json.JSONEncoder`` and ``JSONDecoder`` classes, are removed.\n     -   The ``json.htmlsafe_dumps`` and ``htmlsafe_dump`` functions are removed.\n+    -   Calling setup methods on blueprints after registration is an error instead of a\n+        warning. :pr:`4997`\n \n -   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them\n     directly from ``markupsafe`` instead. :pr:`4996`\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,fc03d0dfab64945169e1114cdc1fb39519a1e0c1,2a33c1785412075c09f9f55b3e25f2bc995ca461,'setup method on registered blueprint is error',"'@@ -207,19 +207,12 @@ class Blueprint(Scaffold):\n \n     def _check_setup_finished(self, f_name: str) -> None:\n         if self._got_registered_once:\n-            import warnings\n-\n-            warnings.warn(\n-                f""The setup method \'{f_name}\' can no longer be called on""\n-                f"" the blueprint \'{self.name}\'. It has already been""\n-                "" registered at least once, any changes will not be""\n-                "" applied consistently.\\n""\n-                ""Make sure all imports, decorators, functions, etc.""\n-                "" needed to set up the blueprint are done before""\n-                "" registering it.\\n""\n-                ""This warning will become an exception in Flask 2.3."",\n-                UserWarning,\n-                stacklevel=3,\n+            raise AssertionError(\n+                f""The setup method \'{f_name}\' can no longer be called on the blueprint""\n+                f"" \'{self.name}\'. It has already been registered at least once, any""\n+                "" changes will not be applied consistently.\\n""\n+                ""Make sure all imports, decorators, functions, etc. needed to set up""\n+                "" the blueprint are done before registering it.""\n             )\n \n     @setupmethod\n'",2.5,2.5
CHANGES.rst,CHANGES.rst,4256fc63044fa0d9c2135443461689b1adaf386d,c690f529f28a8fd7ecdac90939944475613760a5,'deprecate locked_cached_property',"'@@ -26,6 +26,10 @@ Unreleased\n -   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them\n     directly from ``markupsafe`` instead. :pr:`4996`\n -   The ``app.got_first_request`` property is deprecated. :pr:`4997`\n+-   The ``locked_cached_property`` decorator is deprecated. Use a lock inside the\n+    decorated function if locking is needed. :issue:`4993`\n+-   Remove uses of locks that could cause requests to block each other very briefly.\n+    :issue:`4993`\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n     :pr:`4947`\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n'",0,0
src/flask/app.py,src/flask/app.py,4256fc63044fa0d9c2135443461689b1adaf386d,c690f529f28a8fd7ecdac90939944475613760a5,'deprecate locked_cached_property',"'@@ -26,6 +26,7 @@ from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n from werkzeug.serving import is_running_from_reloader\n from werkzeug.urls import url_quote\n+from werkzeug.utils import cached_property\n from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n \n@@ -46,7 +47,6 @@ from .helpers import _split_blueprint_path\n from .helpers import get_debug_flag\n from .helpers import get_flashed_messages\n from .helpers import get_load_dotenv\n-from .helpers import locked_cached_property\n from .json.provider import DefaultJSONProvider\n from .json.provider import JSONProvider\n from .logging import create_logger\n@@ -531,7 +531,7 @@ class Flask(Scaffold):\n                 "" running it.""\n             )\n \n-    @locked_cached_property\n+    @cached_property\n     def name(self) -> str:  # type: ignore\n         """"""The name of the application.  This is usually the import name\n         with the difference that it\'s guessed from the run file if the\n@@ -548,7 +548,7 @@ class Flask(Scaffold):\n             return os.path.splitext(os.path.basename(fn))[0]\n         return self.import_name\n \n-    @locked_cached_property\n+    @cached_property\n     def logger(self) -> logging.Logger:\n         """"""A standard Python :class:`~logging.Logger` for the app, with\n         the same name as :attr:`name`.\n@@ -575,7 +575,7 @@ class Flask(Scaffold):\n         """"""\n         return create_logger(self)\n \n-    @locked_cached_property\n+    @cached_property\n     def jinja_env(self) -> Environment:\n         """"""The Jinja environment used to load templates.\n \n'",3.3230769230769233,3.3230769230769233
src/flask/helpers.py,src/flask/helpers.py,4256fc63044fa0d9c2135443461689b1adaf386d,c690f529f28a8fd7ecdac90939944475613760a5,'deprecate locked_cached_property',"'@@ -613,6 +613,10 @@ class locked_cached_property(werkzeug.utils.cached_property):\n     :class:`werkzeug.utils.cached_property` except access uses a lock\n     for thread safety.\n \n+    .. deprecated:: 2.3\n+        Will be removed in Flask 2.4. Use a lock inside the decorated function if\n+        locking is needed.\n+\n     .. versionchanged:: 2.0\n         Inherits from Werkzeug\'s ``cached_property`` (and ``property``).\n     """"""\n@@ -623,6 +627,14 @@ class locked_cached_property(werkzeug.utils.cached_property):\n         name: t.Optional[str] = None,\n         doc: t.Optional[str] = None,\n     ) -> None:\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'locked_cached_property\' is deprecated and will be removed in Flask 2.4.""\n+            "" Use a lock inside the decorated function if locking is needed."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n         super().__init__(fget, name=name, doc=doc)\n         self.lock = RLock()\n \n'",2.227272727272727,2.227272727272727
src/flask/scaffold.py,src/flask/scaffold.py,4256fc63044fa0d9c2135443461689b1adaf386d,c690f529f28a8fd7ecdac90939944475613760a5,'deprecate locked_cached_property',"'@@ -11,12 +11,12 @@ from functools import update_wrapper\n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n+from werkzeug.utils import cached_property\n \n from . import typing as ft\n from .cli import AppGroup\n from .globals import current_app\n from .helpers import get_root_path\n-from .helpers import locked_cached_property\n from .helpers import send_from_directory\n from .templating import _default_template_ctx_processor\n \n@@ -317,7 +317,7 @@ class Scaffold:\n             t.cast(str, self.static_folder), filename, max_age=max_age\n         )\n \n-    @locked_cached_property\n+    @cached_property\n     def jinja_loader(self) -> t.Optional[FileSystemLoader]:\n         """"""The Jinja loader for this object\'s templates. By default this\n         is a class :class:`jinja2.loaders.FileSystemLoader` to\n'",1.95,1.95
CHANGES.rst,CHANGES.rst,b10b6d4af1127fdfb0a74221af0c020ced71fece,4c288bc97ea371817199908d0d9b12de9dae327e,'add text parameter to config.from_file',"'@@ -33,6 +33,8 @@ Unreleased\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n     :pr:`4947`\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n+-   ``config.from_file`` can use ``text=False`` to indicate that the parser wants a\n+    binary file instead. :issue:`4989`\n \n \n Version 2.2.3\n'",0,0
src/flask/config.py,src/flask/config.py,b10b6d4af1127fdfb0a74221af0c020ced71fece,4c288bc97ea371817199908d0d9b12de9dae327e,'add text parameter to config.from_file',"'@@ -234,6 +234,7 @@ class Config(dict):\n         filename: str,\n         load: t.Callable[[t.IO[t.Any]], t.Mapping],\n         silent: bool = False,\n+        text: bool = True,\n     ) -> bool:\n         """"""Update the values in the config from a file that is loaded\n         using the ``load`` parameter. The loaded data is passed to the\n@@ -244,8 +245,8 @@ class Config(dict):\n             import json\n             app.config.from_file(""config.json"", load=json.load)\n \n-            import toml\n-            app.config.from_file(""config.toml"", load=toml.load)\n+            import tomllib\n+            app.config.from_file(""config.toml"", load=tomllib.load, text=False)\n \n         :param filename: The path to the data file. This can be an\n             absolute path or relative to the config root path.\n@@ -254,14 +255,18 @@ class Config(dict):\n         :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn\'t exist.\n+        :param text: Open the file in text or binary mode.\n         :return: ``True`` if the file was loaded successfully.\n \n+        .. versionchanged:: 2.3\n+            The ``text`` parameter was added.\n+\n         .. versionadded:: 2.0\n         """"""\n         filename = os.path.join(self.root_path, filename)\n \n         try:\n-            with open(filename) as f:\n+            with open(filename, ""r"" if text else ""rb"") as f:\n                 obj = load(f)\n         except OSError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n'",3.25,3.3333333333333335
.pre-commit-config.yaml,.pre-commit-config.yaml,736b5f9ff8564dee7e953987c7ef10c58146afa1,c4c7f504be222c3aca9062656498ec3c72e2b2ad,'update dependencies',"'@@ -26,7 +26,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.6.1\n+    rev: v2.6.2\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
examples/celery/requirements.txt,examples/celery/requirements.txt,736b5f9ff8564dee7e953987c7ef10c58146afa1,c4c7f504be222c3aca9062656498ec3c72e2b2ad,'update dependencies',"'@@ -2,7 +2,7 @@\n # This file is autogenerated by pip-compile with Python 3.10\n # by the following command:\n #\n-#    pip-compile pyproject.toml\n+#    pip-compile --resolver=backtracking pyproject.toml\n #\n amqp==5.1.1\n     # via kombu\n@@ -25,7 +25,7 @@ click-plugins==1.1.1\n     # via celery\n click-repl==0.2.0\n     # via celery\n-flask==2.2.2\n+flask==2.2.3\n     # via flask-example-celery (pyproject.toml)\n itsdangerous==2.1.2\n     # via flask\n@@ -37,7 +37,7 @@ markupsafe==2.1.2\n     # via\n     #   jinja2\n     #   werkzeug\n-prompt-toolkit==3.0.36\n+prompt-toolkit==3.0.37\n     # via click-repl\n pytz==2022.7.1\n     # via celery\n@@ -52,5 +52,5 @@ vine==5.0.0\n     #   kombu\n wcwidth==0.2.6\n     # via prompt-toolkit\n-werkzeug==2.2.2\n+werkzeug==2.2.3\n     # via flask\n'",0,0
requirements/dev.txt,requirements/dev.txt,736b5f9ff8564dee7e953987c7ef10c58146afa1,c4c7f504be222c3aca9062656498ec3c72e2b2ad,'update dependencies',"'@@ -32,7 +32,7 @@ identify==2.5.18\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n-pip-compile-multi==2.6.1\n+pip-compile-multi==2.6.2\n     # via -r requirements/dev.in\n pip-tools==6.12.2\n     # via pip-compile-multi\n@@ -40,7 +40,7 @@ platformdirs==3.0.0\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.0.4\n+pre-commit==3.1.0\n     # via -r requirements/dev.in\n pyproject-api==1.5.0\n     # via tox\n@@ -50,7 +50,7 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.9\n     # via pip-compile-multi\n-tox==4.4.5\n+tox==4.4.6\n     # via -r requirements/dev.in\n virtualenv==20.19.0\n     # via\n'",0,0
requirements/typing.txt,requirements/typing.txt,736b5f9ff8564dee7e953987c7ef10c58146afa1,c4c7f504be222c3aca9062656498ec3c72e2b2ad,'update dependencies',"'@@ -9,7 +9,7 @@ cffi==1.15.1\n     # via cryptography\n cryptography==39.0.1\n     # via -r requirements/typing.in\n-mypy==1.0.0\n+mypy==1.0.1\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -17,13 +17,13 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.7\n+types-contextvars==2.4.7.1\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-docutils==0.19.1.4\n+types-docutils==0.19.1.6\n     # via types-setuptools\n-types-setuptools==67.3.0.1\n+types-setuptools==67.4.0.1\n     # via -r requirements/typing.in\n typing-extensions==4.5.0\n     # via mypy\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,3cdcc729a73766bdb071b8b43a1d60971994db07,5cdfeae2e82541577e17f5179d91775550e34ebd,'Bump slsa-framework/slsa-github-generator from 1.4.0 to 1.5.0\n\nBumps [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) from 1.4.0 to 1.5.0.\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.4.0...v1.5.0)\n\n---\nupdated-dependencies:\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can't pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.5.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,b8eb83940cc46e1499f8e4194f688f193232eedb,5cdfeae2e82541577e17f5179d91775550e34ebd,'Bump actions/cache from 3.2.4 to 3.2.6\n\nBumps [actions/cache](https://github.com/actions/cache) from 3.2.4 to 3.2.6.\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/627f0f41f6904a5b1efbaed9f96d9eb58e92e920...69d9d449aced6a2ede0bc19182fadc3a0a42d2b0)\n\n---\nupdated-dependencies:\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -49,7 +49,7 @@ jobs:\n           pip install -U setuptools\n           python -m pip install -U pip\n       - name: cache mypy\n-        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920\n+        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ matrix.python }}|${{ hashFiles('pyproject.toml') }}\n""",0,0
docs/installation.rst,docs/installation.rst,0bc6be604d465406c5909b13162e7097ab0ea2f8,736b5f9ff8564dee7e953987c7ef10c58146afa1,'Update installation.rst\n\nThe link to Blinker does not work.',"'@@ -44,7 +44,7 @@ use them if you install them.\n * `Watchdog`_ provides a faster, more efficient reloader for the development\n   server.\n \n-.. _Blinker: https://pythonhosted.org/blinker/\n+.. _Blinker: https://blinker.readthedocs.io/en/stable/\n .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n .. _watchdog: https://pythonhosted.org/watchdog/\n \n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,31022056aee5ab24cf485e31a0b48bbd52d96a04,a5f30b157df2c62415a2d22758a1e4141ecdc9ed,'remove broken link',"'@@ -69,7 +69,6 @@ See also:\n -   Sentry also supports catching errors from a worker queue\n     (RQ, Celery, etc.) in a similar fashion. See the `Python SDK docs\n     <https://docs.sentry.io/platforms/python/>`__ for more information.\n--   `Getting started with Sentry <https://docs.sentry.io/quickstart/?platform=python>`__\n -   `Flask-specific documentation <https://docs.sentry.io/platforms/python/guides/flask/>`__\n \n \n'",1.5714285714285714,1.5714285714285714
requirements/build.txt,requirements/build.txt,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -12,6 +12,4 @@ packaging==23.0\n pyproject-hooks==1.0.0\n     # via build\n tomli==2.0.1\n-    # via\n-    #   build\n-    #   pyproject-hooks\n+    # via build\n'",0,0
requirements/dev.txt,requirements/dev.txt,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -28,19 +28,19 @@ filelock==3.9.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.18\n+identify==2.5.19\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n pip-compile-multi==2.6.2\n     # via -r requirements/dev.in\n-pip-tools==6.12.2\n+pip-tools==6.12.3\n     # via pip-compile-multi\n-platformdirs==3.0.0\n+platformdirs==3.1.1\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.1.0\n+pre-commit==3.1.1\n     # via -r requirements/dev.in\n pyproject-api==1.5.0\n     # via tox\n@@ -48,11 +48,11 @@ pyproject-hooks==1.0.0\n     # via build\n pyyaml==6.0\n     # via pre-commit\n-toposort==1.9\n+toposort==1.10\n     # via pip-compile-multi\n tox==4.4.6\n     # via -r requirements/dev.in\n-virtualenv==20.19.0\n+virtualenv==20.20.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -7,11 +7,11 @@\n #\n alabaster==0.7.13\n     # via sphinx\n-babel==2.11.0\n+babel==2.12.1\n     # via sphinx\n certifi==2022.12.7\n     # via requests\n-charset-normalizer==3.0.1\n+charset-normalizer==3.1.0\n     # via requests\n docutils==0.17.1\n     # via\n@@ -35,8 +35,6 @@ pygments==2.14.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pytz==2022.7.1\n-    # via babel\n requests==2.28.2\n     # via sphinx\n snowballstemmer==2.2.0\n@@ -66,5 +64,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.14\n+urllib3==1.26.15\n     # via requests\n'",0,0
requirements/tests.in,requirements/tests.in,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -2,4 +2,4 @@ pytest\n asgiref\n blinker\n greenlet ; python_version < ""3.11""\n-python-dotenv\n+python-dotenv>=1; python_version >= ""3.8""\n'",0,0
requirements/tests.txt,requirements/tests.txt,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -1,4 +1,4 @@\n-# SHA1:69cf1e101a60350e9933c6f1f3b129bd9ed1ea7c\n+# SHA1:30698f5f4f9cba5088318306829a15b0dc123b38\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -21,9 +21,9 @@ packaging==23.0\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-pytest==7.2.1\n+pytest==7.2.2\n     # via -r requirements/tests.in\n-python-dotenv==0.21.1\n+python-dotenv==1.0.0 ; python_version >= ""3.8""\n     # via -r requirements/tests.in\n tomli==2.0.1\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,1432cddb139fc3cb64b990b8672d245d805e97d0,c83f661427a43cef50e202bcc61ced709248791e,'update requirements',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==39.0.1\n+cryptography==39.0.2\n     # via -r requirements/typing.in\n-mypy==1.0.1\n+mypy==1.1.1\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -21,9 +21,7 @@ types-contextvars==2.4.7.1\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-docutils==0.19.1.6\n-    # via types-setuptools\n-types-setuptools==67.4.0.1\n+types-setuptools==67.6.0.0\n     # via -r requirements/typing.in\n typing-extensions==4.5.0\n     # via mypy\n'",0,0
CHANGES.rst,CHANGES.rst,c4b39ba2f3fede0555f18fc03b0f2499bb0d424b,e7f8ae016696a6224d1db5c121bcf0282d528da8,'replace werkzeug.urls with urllib.parse',"'@@ -1,3 +1,11 @@\n+Version 2.2.4\n+-------------\n+\n+Unreleased\n+\n+-   Update for compatibility with Werkzeug 2.3.\n+\n+\n Version 2.2.3\n -------------\n \n'",0,0
src/flask/app.py,src/flask/app.py,c4b39ba2f3fede0555f18fc03b0f2499bb0d424b,e7f8ae016696a6224d1db5c121bcf0282d528da8,'replace werkzeug.urls with urllib.parse',"'@@ -11,6 +11,7 @@ from datetime import timedelta\n from itertools import chain\n from threading import Lock\n from types import TracebackType\n+from urllib.parse import quote as _url_quote\n \n import click\n from werkzeug.datastructures import Headers\n@@ -27,7 +28,6 @@ from werkzeug.routing import RequestRedirect\n from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n from werkzeug.serving import is_running_from_reloader\n-from werkzeug.urls import url_quote\n from werkzeug.utils import redirect as _wz_redirect\n from werkzeug.wrappers import Response as BaseResponse\n \n@@ -2034,7 +2034,8 @@ class Flask(Scaffold):\n             return self.handle_url_build_error(error, endpoint, values)\n \n         if _anchor is not None:\n-            rv = f""{rv}#{url_quote(_anchor)}""\n+            _anchor = _url_quote(_anchor, safe=""%!#$&\'()*+,/:;=?@"")\n+            rv = f""{rv}#{_anchor}""\n \n         return rv\n \n'",3.0,3.0
src/flask/testing.py,src/flask/testing.py,c4b39ba2f3fede0555f18fc03b0f2499bb0d424b,e7f8ae016696a6224d1db5c121bcf0282d528da8,'replace werkzeug.urls with urllib.parse',"'@@ -3,11 +3,11 @@ from contextlib import contextmanager\n from contextlib import ExitStack\n from copy import copy\n from types import TracebackType\n+from urllib.parse import urlsplit\n \n import werkzeug.test\n from click.testing import CliRunner\n from werkzeug.test import Client\n-from werkzeug.urls import url_parse\n from werkzeug.wrappers import Request as BaseRequest\n \n from .cli import ScriptInfo\n@@ -68,7 +68,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n             if url_scheme is None:\n                 url_scheme = app.config[""PREFERRED_URL_SCHEME""]\n \n-            url = url_parse(path)\n+            url = urlsplit(path)\n             base_url = (\n                 f""{url.scheme or url_scheme}://{url.netloc or http_host}""\n                 f""/{app_root.lstrip(\'/\')}""\n'",3.272727272727273,3.272727272727273
CHANGES.rst,CHANGES.rst,b8b410014d85f9861acc87c5f21c9a55a42d09c9,7ee9ceb71e868944a46e1ff00b506772a53a4f1d,'require a non-empty name for blueprints',"'@@ -35,6 +35,8 @@ Unreleased\n -   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n -   ``config.from_file`` can use ``text=False`` to indicate that the parser wants a\n     binary file instead. :issue:`4989`\n+-   If a blueprint is created with an empty name it raises a ``ValueError``.\n+    :issue:`5010`\n \n \n Version 2.2.4\n'",0,0
src/flask/blueprints.py,src/flask/blueprints.py,b8b410014d85f9861acc87c5f21c9a55a42d09c9,7ee9ceb71e868944a46e1ff00b506772a53a4f1d,'require a non-empty name for blueprints',"'@@ -190,6 +190,9 @@ class Blueprint(Scaffold):\n             root_path=root_path,\n         )\n \n+        if not name:\n+            raise ValueError(""\'name\' may not be empty."")\n+\n         if ""."" in name:\n             raise ValueError(""\'name\' may not contain a dot \'.\' character."")\n \n'",2.5,2.53125
tests/test_blueprints.py,tests/test_blueprints.py,b8b410014d85f9861acc87c5f21c9a55a42d09c9,7ee9ceb71e868944a46e1ff00b506772a53a4f1d,'require a non-empty name for blueprints',"'@@ -256,6 +256,11 @@ def test_dotted_name_not_allowed(app, client):\n         flask.Blueprint(""app.ui"", __name__)\n \n \n+def test_empty_name_not_allowed(app, client):\n+    with pytest.raises(ValueError):\n+        flask.Blueprint("""", __name__)\n+\n+\n def test_dotted_names_from_app(app, client):\n     test = flask.Blueprint(""test"", __name__)\n \n'",1.025974025974026,1.0258064516129033
docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,15f2ca2c24c63533219312600942248d3513a670,7ed89d3f9d2207c9a607f5dcdce106c0278e1332,'Update appfactories.rst\n\nRemove unneeded backticks',"'@@ -99,7 +99,7 @@ to the factory like this:\n \n .. code-block:: text\n \n-    $ flask --app hello:create_app(local_auth=True) run``\n+    $ flask --app hello:create_app(local_auth=True) run\n \n Then the ``create_app`` factory in ``myapp`` is called with the keyword\n argument ``local_auth=True``. See :doc:`/cli` for more detail.\n'",1.0,1.0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,29676a273a5b9dc99268850c4fa534f78884cdd3,7ed89d3f9d2207c9a607f5dcdce106c0278e1332,'Bump pypa/gh-action-pypi-publish from 1.6.4 to 1.8.4\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.6.4 to 1.8.4.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/c7f29f7adef1a245bd91520e94867e5c6eedddcc...29930c9cf57955dc1b98162d0d8bc3ec80d9e75c)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -61,12 +61,12 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@c7f29f7adef1a245bd91520e94867e5c6eedddcc\n+      - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n           password: ${{ secrets.TEST_PYPI_TOKEN }}\n           repository_url: https://test.pypi.org/legacy/\n           packages_dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@c7f29f7adef1a245bd91520e94867e5c6eedddcc\n+      - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n           password: ${{ secrets.PYPI_TOKEN }}\n           packages_dir: artifact/\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,6a6c83789f88715329a79d9cb887e25f8e472e94,7ed89d3f9d2207c9a607f5dcdce106c0278e1332,'Bump actions/checkout from 3.3.0 to 3.5.0\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.3.0 to 3.5.0.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/ac593985615ec2ede58e132d2e21d2b1cbd6127c...8f4b7f84864484a7bf31766abe9204da3cbe65b3)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n+      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n       - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n         with:\n           python-version: '3.x'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,6a6c83789f88715329a79d9cb887e25f8e472e94,7ed89d3f9d2207c9a607f5dcdce106c0278e1332,'Bump actions/checkout from 3.3.0 to 3.5.0\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.3.0 to 3.5.0.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/ac593985615ec2ede58e132d2e21d2b1cbd6127c...8f4b7f84864484a7bf31766abe9204da3cbe65b3)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n+      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n       - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n         with:\n           python-version: ${{ matrix.python }}\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,4909e8ff86508c87ba9a77a4adc602e9288c5141,7ed89d3f9d2207c9a607f5dcdce106c0278e1332,'Bump actions/cache from 3.2.6 to 3.3.1\n\nBumps [actions/cache](https://github.com/actions/cache) from 3.2.6 to 3.3.1.\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/69d9d449aced6a2ede0bc19182fadc3a0a42d2b0...88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8)\n\n---\nupdated-dependencies:\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -49,7 +49,7 @@ jobs:\n           pip install -U setuptools\n           python -m pip install -U pip\n       - name: cache mypy\n-        uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0\n+        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ matrix.python }}|${{ hashFiles('pyproject.toml') }}\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,d2a6f5c572f5275bb8c91286cfd24c2c504cc243,cac56a2b537d9ea4f4766d686f6a2f7639ad737a,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 23.1.0 → 23.3.0](https://github.com/psf/black/compare/23.1.0...23.3.0)',"'@@ -15,7 +15,7 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 23.1.0\n+    rev: 23.3.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n'",0,0
requirements/dev.txt,requirements/dev.txt,a30b6e723c4b58356176cc3f6cf63ce7320250e2,c4f754cda37af2af272497000517288a5207e433,'update dependencies',"'@@ -24,25 +24,25 @@ colorama==0.4.6\n     # via tox\n distlib==0.3.6\n     # via virtualenv\n-filelock==3.9.0\n+filelock==3.11.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.19\n+identify==2.5.22\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n pip-compile-multi==2.6.2\n     # via -r requirements/dev.in\n-pip-tools==6.12.3\n+pip-tools==6.13.0\n     # via pip-compile-multi\n-platformdirs==3.1.1\n+platformdirs==3.2.0\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.1.1\n+pre-commit==3.2.2\n     # via -r requirements/dev.in\n-pyproject-api==1.5.0\n+pyproject-api==1.5.1\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n@@ -50,13 +50,13 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.4.6\n+tox==4.4.11\n     # via -r requirements/dev.in\n-virtualenv==20.20.0\n+virtualenv==20.21.0\n     # via\n     #   pre-commit\n     #   tox\n-wheel==0.38.4\n+wheel==0.40.0\n     # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/docs.txt,requirements/docs.txt,a30b6e723c4b58356176cc3f6cf63ce7320250e2,c4f754cda37af2af272497000517288a5207e433,'update dependencies',"'@@ -31,7 +31,7 @@ packaging==23.0\n     #   sphinx\n pallets-sphinx-themes==2.0.3\n     # via -r requirements/docs.in\n-pygments==2.14.0\n+pygments==2.15.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n'",0,0
requirements/tests.txt,requirements/tests.txt,a30b6e723c4b58356176cc3f6cf63ce7320250e2,c4f754cda37af2af272497000517288a5207e433,'update dependencies',"'@@ -7,11 +7,9 @@\n #\n asgiref==3.6.0\n     # via -r requirements/tests.in\n-attrs==22.2.0\n-    # via pytest\n-blinker==1.5\n+blinker==1.6.1\n     # via -r requirements/tests.in\n-exceptiongroup==1.1.0\n+exceptiongroup==1.1.1\n     # via pytest\n greenlet==2.0.2 ; python_version < ""3.11""\n     # via -r requirements/tests.in\n@@ -21,9 +19,11 @@ packaging==23.0\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-pytest==7.2.2\n+pytest==7.3.0\n     # via -r requirements/tests.in\n python-dotenv==1.0.0 ; python_version >= ""3.8""\n     # via -r requirements/tests.in\n tomli==2.0.1\n     # via pytest\n+typing-extensions==4.5.0\n+    # via blinker\n'",0,0
requirements/typing.txt,requirements/typing.txt,a30b6e723c4b58356176cc3f6cf63ce7320250e2,c4f754cda37af2af272497000517288a5207e433,'update dependencies',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==39.0.2\n+cryptography==40.0.1\n     # via -r requirements/typing.in\n-mypy==1.1.1\n+mypy==1.2.0\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -17,11 +17,11 @@ pycparser==2.21\n     # via cffi\n tomli==2.0.1\n     # via mypy\n-types-contextvars==2.4.7.1\n+types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==67.6.0.0\n+types-setuptools==67.6.0.7\n     # via -r requirements/typing.in\n typing-extensions==4.5.0\n     # via mypy\n'",0,0
pyproject.toml,pyproject.toml,67c4c7bac2fcd582ebb3474284a7c8a1e737c878,e39d78a0ad544ac0b518ed85fc40c7a92833dee4,'ignore warning from pytest due to change in Python 3.12 alpha',"'@@ -53,7 +53,11 @@ version = {attr = ""flask.__version__""}\n \n [tool.pytest.ini_options]\n testpaths = [""tests""]\n-filterwarnings = [""error""]\n+filterwarnings = [\n+    ""error"",\n+    # change in Python 3.12 alpha causes warning from inside pytest\n+    ""ignore:onerror argument:DeprecationWarning"",\n+]\n \n [tool.coverage.run]\n branch = true\n'",0,0
src/flask/testing.py,src/flask/testing.py,04c21387dbc454fb59cae9c9bb21a13358cb5a34,a30b6e723c4b58356176cc3f6cf63ce7320250e2,'update test cookie handling for Werkzeug 2.3',"'@@ -11,7 +11,6 @@ from werkzeug.test import Client\n from werkzeug.wrappers import Request as BaseRequest\n \n from .cli import ScriptInfo\n-from .globals import _cv_request\n from .sessions import SessionMixin\n \n if t.TYPE_CHECKING:  # pragma: no cover\n@@ -137,40 +136,45 @@ class FlaskClient(Client):\n         :meth:`~flask.Flask.test_request_context` which are directly\n         passed through.\n         """"""\n-        if self.cookie_jar is None:\n-            raise RuntimeError(\n-                ""Session transactions only make sense with cookies enabled.""\n+        # new cookie interface for Werkzeug >= 2.3\n+        cookie_storage = self._cookies if hasattr(self, ""_cookies"") else self.cookie_jar\n+\n+        if cookie_storage is None:\n+            raise TypeError(\n+                ""Cookies are disabled. Create a client with \'use_cookies=True\'.""\n             )\n+\n         app = self.application\n-        environ_overrides = kwargs.setdefault(""environ_overrides"", {})\n-        self.cookie_jar.inject_wsgi(environ_overrides)\n-        outer_reqctx = _cv_request.get(None)\n-        with app.test_request_context(*args, **kwargs) as c:\n-            session_interface = app.session_interface\n-            sess = session_interface.open_session(app, c.request)\n-            if sess is None:\n-                raise RuntimeError(\n-                    ""Session backend did not open a session. Check the configuration""\n-                )\n-\n-            # Since we have to open a new request context for the session\n-            # handling we want to make sure that we hide out own context\n-            # from the caller.  By pushing the original request context\n-            # (or None) on top of this and popping it we get exactly that\n-            # behavior.  It\'s important to not use the push and pop\n-            # methods of the actual request context object since that would\n-            # mean that cleanup handlers are called\n-            token = _cv_request.set(outer_reqctx)  # type: ignore[arg-type]\n-            try:\n-                yield sess\n-            finally:\n-                _cv_request.reset(token)\n-\n-            resp = app.response_class()\n-            if not session_interface.is_null_session(sess):\n-                session_interface.save_session(app, sess, resp)\n-            headers = resp.get_wsgi_headers(c.request.environ)\n-            self.cookie_jar.extract_wsgi(c.request.environ, headers)\n+        ctx = app.test_request_context(*args, **kwargs)\n+\n+        if hasattr(self, ""_add_cookies_to_wsgi""):\n+            self._add_cookies_to_wsgi(ctx.request.environ)\n+        else:\n+            self.cookie_jar.inject_wsgi(ctx.request.environ)  # type: ignore[union-attr]\n+\n+        with ctx:\n+            sess = app.session_interface.open_session(app, ctx.request)\n+\n+        if sess is None:\n+            raise RuntimeError(""Session backend did not open a session."")\n+\n+        yield sess\n+        resp = app.response_class()\n+\n+        if app.session_interface.is_null_session(sess):\n+            return\n+\n+        with ctx:\n+            app.session_interface.save_session(app, sess, resp)\n+\n+        if hasattr(self, ""_update_cookies_from_response""):\n+            self._update_cookies_from_response(\n+                ctx.request.host.partition("":"")[0], resp.headers.getlist(""Set-Cookie"")\n+            )\n+        else:\n+            self.cookie_jar.extract_wsgi(  # type: ignore[union-attr]\n+                ctx.request.environ, resp.headers\n+            )\n \n     def _copy_environ(self, other):\n         out = {**self.environ_base, **other}\n'",3.272727272727273,3.4545454545454546
tests/test_basic.py,tests/test_basic.py,04c21387dbc454fb59cae9c9bb21a13358cb5a34,a30b6e723c4b58356176cc3f6cf63ce7320250e2,'update test cookie handling for Werkzeug 2.3',"'@@ -261,8 +261,9 @@ def test_session_using_server_name(app, client):\n         return ""Hello World""\n \n     rv = client.get(""/"", ""http://example.com/"")\n-    assert ""domain=.example.com"" in rv.headers[""set-cookie""].lower()\n-    assert ""httponly"" in rv.headers[""set-cookie""].lower()\n+    cookie = rv.headers[""set-cookie""].lower()\n+    # or condition for Werkzeug < 2.3\n+    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n \n \n def test_session_using_server_name_and_port(app, client):\n@@ -274,8 +275,9 @@ def test_session_using_server_name_and_port(app, client):\n         return ""Hello World""\n \n     rv = client.get(""/"", ""http://example.com:8080/"")\n-    assert ""domain=.example.com"" in rv.headers[""set-cookie""].lower()\n-    assert ""httponly"" in rv.headers[""set-cookie""].lower()\n+    cookie = rv.headers[""set-cookie""].lower()\n+    # or condition for Werkzeug < 2.3\n+    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n \n \n def test_session_using_server_name_port_and_path(app, client):\n@@ -337,7 +339,8 @@ def test_session_using_session_settings(app, client):\n \n     rv = client.get(""/"", ""http://www.example.com:8080/test/"")\n     cookie = rv.headers[""set-cookie""].lower()\n-    assert ""domain=.example.com"" in cookie\n+    # or condition for Werkzeug < 2.3\n+    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n     assert ""path=/"" in cookie\n     assert ""secure"" in cookie\n     assert ""httponly"" not in cookie\n@@ -346,7 +349,8 @@ def test_session_using_session_settings(app, client):\n     rv = client.get(""/clear"", ""http://www.example.com:8080/test/"")\n     cookie = rv.headers[""set-cookie""].lower()\n     assert ""session=;"" in cookie\n-    assert ""domain=.example.com"" in cookie\n+    # or condition for Werkzeug < 2.3\n+    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n     assert ""path=/"" in cookie\n     assert ""secure"" in cookie\n     assert ""samesite"" in cookie\n'",1.0748031496062993,1.0905511811023623
tests/test_json.py,tests/test_json.py,04c21387dbc454fb59cae9c9bb21a13358cb5a34,a30b6e723c4b58356176cc3f6cf63ce7320250e2,'update test cookie handling for Werkzeug 2.3',"'@@ -267,25 +267,6 @@ def _has_encoding(name):\n         return False\n \n \n-@pytest.mark.skipif(\n-    not _has_encoding(""euc-kr""), reason=""The euc-kr encoding is required.""\n-)\n-def test_modified_url_encoding(app, client):\n-    class ModifiedRequest(flask.Request):\n-        url_charset = ""euc-kr""\n-\n-    app.request_class = ModifiedRequest\n-    app.url_map.charset = ""euc-kr""\n-\n-    @app.route(""/"")\n-    def index():\n-        return flask.request.args[""foo""]\n-\n-    rv = client.get(""/"", query_string={""foo"": ""정상처리""}, charset=""euc-kr"")\n-    assert rv.status_code == 200\n-    assert rv.get_data(as_text=True) == ""정상처리""\n-\n-\n def test_json_key_sorting(app, client):\n     app.debug = True\n     assert app.json.sort_keys\n'",1.2,1.2105263157894737
tests/test_testing.py,tests/test_testing.py,04c21387dbc454fb59cae9c9bb21a13358cb5a34,a30b6e723c4b58356176cc3f6cf63ce7320250e2,'update test cookie handling for Werkzeug 2.3',"'@@ -206,10 +206,10 @@ def test_session_transactions_keep_context(app, client, req_ctx):\n \n def test_session_transaction_needs_cookies(app):\n     c = app.test_client(use_cookies=False)\n-    with pytest.raises(RuntimeError) as e:\n+\n+    with pytest.raises(TypeError, match=""Cookies are disabled.""):\n         with c.session_transaction():\n             pass\n-    assert ""cookies"" in str(e.value)\n \n \n def test_test_client_context_binding(app, client):\n'",1.0425531914893618,1.0425531914893618
CHANGES.rst,CHANGES.rst,c24f8c8199f8ceda7a7cfb5e91773eba595f5b67,fa0ceb62f26579c3c7d9e18926af3e6f3e6e425c,'no cookie domain by default',"'@@ -37,6 +37,10 @@ Unreleased\n     binary file instead. :issue:`4989`\n -   If a blueprint is created with an empty name it raises a ``ValueError``.\n     :issue:`5010`\n+-   ``SESSION_COOKIE_DOMAIN`` does not fall back to ``SERVER_NAME``. The default is not\n+    to set the domain, which modern browsers interpret as an exact match rather than\n+    a subdomain match. Warnings about ``localhost`` and IP addresses are also removed.\n+    :issue:`5051`\n \n \n Version 2.2.4\n'",0,0
docs/config.rst,docs/config.rst,c24f8c8199f8ceda7a7cfb5e91773eba595f5b67,fa0ceb62f26579c3c7d9e18926af3e6f3e6e425c,'no cookie domain by default',"""@@ -134,12 +134,17 @@ The following configuration values are used internally by Flask:\n \n .. py:data:: SESSION_COOKIE_DOMAIN\n \n-    The domain match rule that the session cookie will be valid for. If not\n-    set, the cookie will be valid for all subdomains of :data:`SERVER_NAME`.\n-    If ``False``, the cookie's domain will not be set.\n+    The value of the ``Domain`` parameter on the session cookie. If not set, browsers\n+    will only send the cookie to the exact domain it was set from. Otherwise, they\n+    will send it to any subdomain of the given value as well.\n+\n+    Not setting this value is more restricted and secure than setting it.\n \n     Default: ``None``\n \n+    .. versionchanged:: 2.3\n+        Not set by default, does not fall back to ``SERVER_NAME``.\n+\n .. py:data:: SESSION_COOKIE_PATH\n \n     The path that the session cookie will be valid for. If not set, the cookie\n@@ -219,19 +224,14 @@ The following configuration values are used internally by Flask:\n     Inform the application what host and port it is bound to. Required\n     for subdomain route matching support.\n \n-    If set, will be used for the session cookie domain if\n-    :data:`SESSION_COOKIE_DOMAIN` is not set. Modern web browsers will\n-    not allow setting cookies for domains without a dot. To use a domain\n-    locally, add any names that should route to the app to your\n-    ``hosts`` file. ::\n-\n-        127.0.0.1 localhost.dev\n-\n     If set, ``url_for`` can generate external URLs with only an application\n     context instead of a request context.\n \n     Default: ``None``\n \n+    .. versionchanged:: 2.3\n+        Does not affect ``SESSION_COOKIE_DOMAIN``.\n+\n .. py:data:: APPLICATION_ROOT\n \n     Inform the application what path it is mounted under by the application /\n""",1.0,1.0
src/flask/helpers.py,src/flask/helpers.py,c24f8c8199f8ceda7a7cfb5e91773eba595f5b67,fa0ceb62f26579c3c7d9e18926af3e6f3e6e425c,'no cookie domain by default',"'@@ -3,6 +3,7 @@ import pkgutil\n import socket\n import sys\n import typing as t\n+import warnings\n from datetime import datetime\n from functools import lru_cache\n from functools import update_wrapper\n@@ -662,7 +663,16 @@ def is_ip(value: str) -> bool:\n \n     :return: True if string is an IP address\n     :rtype: bool\n+\n+    .. deprecated:: 2.3\n+        Will be removed in Flask 2.4.\n     """"""\n+    warnings.warn(\n+        ""The \'is_ip\' function is deprecated and will be removed in Flask 2.4."",\n+        DeprecationWarning,\n+        stacklevel=2,\n+    )\n+\n     for family in (socket.AF_INET, socket.AF_INET6):\n         try:\n             socket.inet_pton(family, value)\n'",2.227272727272727,2.227272727272727
src/flask/sessions.py,src/flask/sessions.py,c24f8c8199f8ceda7a7cfb5e91773eba595f5b67,fa0ceb62f26579c3c7d9e18926af3e6f3e6e425c,'no cookie domain by default',"'@@ -1,6 +1,5 @@\n import hashlib\n import typing as t\n-import warnings\n from collections.abc import MutableMapping\n from datetime import datetime\n from datetime import timezone\n@@ -9,7 +8,6 @@ from itsdangerous import BadSignature\n from itsdangerous import URLSafeTimedSerializer\n from werkzeug.datastructures import CallbackDict\n \n-from .helpers import is_ip\n from .json.tag import TaggedJSONSerializer\n \n if t.TYPE_CHECKING:  # pragma: no cover\n@@ -181,62 +179,17 @@ class SessionInterface:\n         return app.config[""SESSION_COOKIE_NAME""]\n \n     def get_cookie_domain(self, app: ""Flask"") -> t.Optional[str]:\n-        """"""Returns the domain that should be set for the session cookie.\n+        """"""The value of the ``Domain`` parameter on the session cookie. If not set,\n+        browsers will only send the cookie to the exact domain it was set from.\n+        Otherwise, they will send it to any subdomain of the given value as well.\n \n-        Uses ``SESSION_COOKIE_DOMAIN`` if it is configured, otherwise\n-        falls back to detecting the domain based on ``SERVER_NAME``.\n+        Uses the :data:`SESSION_COOKIE_DOMAIN` config.\n \n-        Once detected (or if not set at all), ``SESSION_COOKIE_DOMAIN`` is\n-        updated to avoid re-running the logic.\n+        .. versionchanged:: 2.3\n+            Not set by default, does not fall back to ``SERVER_NAME``.\n         """"""\n-\n         rv = app.config[""SESSION_COOKIE_DOMAIN""]\n-\n-        # set explicitly, or cached from SERVER_NAME detection\n-        # if False, return None\n-        if rv is not None:\n-            return rv if rv else None\n-\n-        rv = app.config[""SERVER_NAME""]\n-\n-        # server name not set, cache False to return none next time\n-        if not rv:\n-            app.config[""SESSION_COOKIE_DOMAIN""] = False\n-            return None\n-\n-        # chop off the port which is usually not supported by browsers\n-        # remove any leading \'.\' since we\'ll add that later\n-        rv = rv.rsplit("":"", 1)[0].lstrip(""."")\n-\n-        if ""."" not in rv:\n-            # Chrome doesn\'t allow names without a \'.\'. This should only\n-            # come up with localhost. Hack around this by not setting\n-            # the name, and show a warning.\n-            warnings.warn(\n-                f""{rv!r} is not a valid cookie domain, it must contain""\n-                "" a \'.\'. Add an entry to your hosts file, for example""\n-                f"" \'{rv}.localdomain\', and use that instead.""\n-            )\n-            app.config[""SESSION_COOKIE_DOMAIN""] = False\n-            return None\n-\n-        ip = is_ip(rv)\n-\n-        if ip:\n-            warnings.warn(\n-                ""The session cookie domain is an IP address. This may not work""\n-                "" as intended in some browsers. Add an entry to your hosts""\n-                \' file, for example ""localhost.localdomain"", and use that\'\n-                "" instead.""\n-            )\n-\n-        # if this is not an ip and app is mounted at the root, allow subdomain\n-        # matching by adding a \'.\' prefix\n-        if self.get_cookie_path(app) == ""/"" and not ip:\n-            rv = f"".{rv}""\n-\n-        app.config[""SESSION_COOKIE_DOMAIN""] = rv\n-        return rv\n+        return rv if rv else None\n \n     def get_cookie_path(self, app: ""Flask"") -> str:\n         """"""Returns the path for which the cookie should be valid.  The\n'",1.826086956521739,1.565217391304348
tests/test_basic.py,tests/test_basic.py,c24f8c8199f8ceda7a7cfb5e91773eba595f5b67,fa0ceb62f26579c3c7d9e18926af3e6f3e6e425c,'no cookie domain by default',"'@@ -251,36 +251,8 @@ def test_session(app, client):\n     assert client.get(""/get"").data == b""42""\n \n \n-def test_session_using_server_name(app, client):\n-    app.config.update(SERVER_NAME=""example.com"")\n-\n-    @app.route(""/"")\n-    def index():\n-        flask.session[""testing""] = 42\n-        return ""Hello World""\n-\n-    rv = client.get(""/"", ""http://example.com/"")\n-    cookie = rv.headers[""set-cookie""].lower()\n-    # or condition for Werkzeug < 2.3\n-    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n-\n-\n-def test_session_using_server_name_and_port(app, client):\n-    app.config.update(SERVER_NAME=""example.com:8080"")\n-\n-    @app.route(""/"")\n-    def index():\n-        flask.session[""testing""] = 42\n-        return ""Hello World""\n-\n-    rv = client.get(""/"", ""http://example.com:8080/"")\n-    cookie = rv.headers[""set-cookie""].lower()\n-    # or condition for Werkzeug < 2.3\n-    assert ""domain=example.com"" in cookie or ""domain=.example.com"" in cookie\n-\n-\n-def test_session_using_server_name_port_and_path(app, client):\n-    app.config.update(SERVER_NAME=""example.com:8080"", APPLICATION_ROOT=""/foo"")\n+def test_session_path(app, client):\n+    app.config.update(APPLICATION_ROOT=""/foo"")\n \n     @app.route(""/"")\n     def index():\n@@ -288,9 +260,7 @@ def test_session_using_server_name_port_and_path(app, client):\n         return ""Hello World""\n \n     rv = client.get(""/"", ""http://example.com:8080/foo"")\n-    assert ""domain=example.com"" in rv.headers[""set-cookie""].lower()\n     assert ""path=/foo"" in rv.headers[""set-cookie""].lower()\n-    assert ""httponly"" in rv.headers[""set-cookie""].lower()\n \n \n def test_session_using_application_root(app, client):\n@@ -382,34 +352,6 @@ def test_session_using_samesite_attribute(app, client):\n     assert ""samesite=lax"" in cookie\n \n \n-def test_session_localhost_warning(recwarn, app, client):\n-    app.config.update(SERVER_NAME=""localhost:5000"")\n-\n-    @app.route(""/"")\n-    def index():\n-        flask.session[""testing""] = 42\n-        return ""testing""\n-\n-    rv = client.get(""/"", ""http://localhost:5000/"")\n-    assert ""domain"" not in rv.headers[""set-cookie""].lower()\n-    w = recwarn.pop(UserWarning)\n-    assert ""\'localhost\' is not a valid cookie domain"" in str(w.message)\n-\n-\n-def test_session_ip_warning(recwarn, app, client):\n-    app.config.update(SERVER_NAME=""127.0.0.1:5000"")\n-\n-    @app.route(""/"")\n-    def index():\n-        flask.session[""testing""] = 42\n-        return ""testing""\n-\n-    rv = client.get(""/"", ""http://127.0.0.1:5000/"")\n-    assert ""domain=127.0.0.1"" in rv.headers[""set-cookie""].lower()\n-    w = recwarn.pop(UserWarning)\n-    assert ""cookie domain is an IP"" in str(w.message)\n-\n-\n def test_missing_session(app):\n     app.secret_key = None\n \n'",1.0923694779116466,1.0871369294605808
docs/deploying/eventlet.rst,docs/deploying/eventlet.rst,c67bfe551d016b15d0a2df89c985d8030387bf1e,694183ce22a0f63f5e5020dd799c2bd4dd5272a1,'fix parentheses',"'@@ -54,7 +54,7 @@ its ``wsgi.server``, as well as your app or app factory.\n     from hello import create_app\n \n     app = create_app()\n-    wsgi.server(eventlet.listen((""127.0.0.1"", 8000), app)\n+    wsgi.server(eventlet.listen((""127.0.0.1"", 8000)), app)\n \n .. code-block:: text\n \n'",0,0
src/flask/wrappers.py,src/flask/wrappers.py,b626a9387900a9f717eb42765275adc0bf0875e3,c9a5660cfd0be150b598325697f6f19019af0ef8,'Allow Response subclasses to set default_mimetype as None\n\nThis matches the type - see https://github.com/pallets/werkzeug/blob/92c6380248c7272ee668e1f8bbd80447027ccce2/src/werkzeug/sansio/response.py#L94.',"'@@ -151,7 +151,7 @@ class Response(ResponseBase):\n         Added :attr:`max_cookie_size`.\n     """"""\n \n-    default_mimetype = ""text/html""\n+    default_mimetype: t.Optional[str] = ""text/html""\n \n     json_module = json\n \n'",2.857142857142857,2.857142857142857
CHANGES.rst,CHANGES.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -28,6 +28,8 @@ Unreleased\n -   The ``app.got_first_request`` property is deprecated. :pr:`4997`\n -   The ``locked_cached_property`` decorator is deprecated. Use a lock inside the\n     decorated function if locking is needed. :issue:`4993`\n+-   Signals are always available. ``blinker>=1.6.2`` is a required dependency. The\n+    ``signals_available`` attribute is deprecated. :issue:`5056`\n -   Remove uses of locks that could cause requests to block each other very briefly.\n     :issue:`4993`\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n'",0,0
docs/api.rst,docs/api.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -333,14 +333,9 @@ Useful Internals\n Signals\n -------\n \n-.. versionadded:: 0.6\n+Signals are provided by the `Blinker`_ library. See :doc:`signals` for an introduction.\n \n-.. data:: signals.signals_available\n-\n-   ``True`` if the signaling system is available. This is the case\n-   when `blinker`_ is installed.\n-\n-The following signals exist in Flask:\n+.. _blinker: https://blinker.readthedocs.io/\n \n .. data:: template_rendered\n \n@@ -507,7 +502,6 @@ The following signals exist in Flask:\n \n    .. versionadded:: 0.10\n \n-\n .. data:: message_flashed\n \n    This signal is sent when the application is flashing a message. The\n@@ -525,22 +519,10 @@ The following signals exist in Flask:\n \n    .. versionadded:: 0.10\n \n-.. class:: signals.Namespace\n-\n-   An alias for :class:`blinker.base.Namespace` if blinker is available,\n-   otherwise a dummy class that creates fake signals. This class is\n-   available for Flask extensions that want to provide the same fallback\n-   system as Flask itself.\n-\n-   .. method:: signal(name, doc=None)\n-\n-      Creates a new signal for this namespace if blinker is available,\n-      otherwise returns a fake signal that has a send method that will\n-      do nothing but will fail with a :exc:`RuntimeError` for all other\n-      operations, including connecting.\n-\n+.. data:: signals.signals_available\n \n-.. _blinker: https://pypi.org/project/blinker/\n+    .. deprecated:: 2.3\n+        Will be removed in Flask 2.4. Signals are always available\n \n \n Class-Based Views\n'",1.5,1.5
docs/appcontext.rst,docs/appcontext.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -140,10 +140,8 @@ Accessing ``db`` will call ``get_db`` internally, in the same way that\n Events and Signals\n ------------------\n \n-The application will call functions registered with\n-:meth:`~Flask.teardown_appcontext` when the application context is\n-popped.\n+The application will call functions registered with :meth:`~Flask.teardown_appcontext`\n+when the application context is popped.\n \n-If :data:`~signals.signals_available` is true, the following signals are\n-sent: :data:`appcontext_pushed`, :data:`appcontext_tearing_down`, and\n-:data:`appcontext_popped`.\n+The following signals are sent: :data:`appcontext_pushed`,\n+:data:`appcontext_tearing_down`, and :data:`appcontext_popped`.\n'",1.6666666666666667,1.6666666666666667
docs/installation.rst,docs/installation.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","""@@ -24,12 +24,14 @@ These distributions will be installed automatically when installing Flask.\n   to protect Flask's session cookie.\n * `Click`_ is a framework for writing command line applications. It provides\n   the ``flask`` command and allows adding custom management commands.\n+* `Blinker`_ provides support for :doc:`signals`.\n \n .. _Werkzeug: https://palletsprojects.com/p/werkzeug/\n .. _Jinja: https://palletsprojects.com/p/jinja/\n .. _MarkupSafe: https://palletsprojects.com/p/markupsafe/\n .. _ItsDangerous: https://palletsprojects.com/p/itsdangerous/\n .. _Click: https://palletsprojects.com/p/click/\n+.. _Blinker: https://blinker.readthedocs.io/\n \n \n Optional dependencies\n@@ -38,13 +40,11 @@ Optional dependencies\n These distributions will not be installed automatically. Flask will detect and\n use them if you install them.\n \n-* `Blinker`_ provides support for :doc:`signals`.\n * `python-dotenv`_ enables support for :ref:`dotenv` when running ``flask``\n   commands.\n * `Watchdog`_ provides a faster, more efficient reloader for the development\n   server.\n \n-.. _Blinker: https://blinker.readthedocs.io/en/stable/\n .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n .. _watchdog: https://pythonhosted.org/watchdog/\n \n""",0,0
docs/reqcontext.rst,docs/reqcontext.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -204,21 +204,16 @@ contexts until the ``with`` block exits.\n Signals\n ~~~~~~~\n \n-If :data:`~signals.signals_available` is true, the following signals are\n-sent:\n-\n-#.  :data:`request_started` is sent before the\n-    :meth:`~Flask.before_request` functions are called.\n-\n-#.  :data:`request_finished` is sent after the\n-    :meth:`~Flask.after_request` functions are called.\n-\n-#.  :data:`got_request_exception` is sent when an exception begins to\n-    be handled, but before an :meth:`~Flask.errorhandler` is looked up or\n-    called.\n-\n-#.  :data:`request_tearing_down` is sent after the\n-    :meth:`~Flask.teardown_request` functions are called.\n+The following signals are sent:\n+\n+#.  :data:`request_started` is sent before the :meth:`~Flask.before_request` functions\n+    are called.\n+#.  :data:`request_finished` is sent after the :meth:`~Flask.after_request` functions\n+    are called.\n+#.  :data:`got_request_exception` is sent when an exception begins to be handled, but\n+    before an :meth:`~Flask.errorhandler` is looked up or called.\n+#.  :data:`request_tearing_down` is sent after the :meth:`~Flask.teardown_request`\n+    functions are called.\n \n \n .. _notes-on-proxies:\n'",0,0
docs/signals.rst,docs/signals.rst,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","""@@ -1,33 +1,28 @@\n Signals\n =======\n \n-.. versionadded:: 0.6\n-\n-Starting with Flask 0.6, there is integrated support for signalling in\n-Flask.  This support is provided by the excellent `blinker`_ library and\n-will gracefully fall back if it is not available.\n-\n-What are signals?  Signals help you decouple applications by sending\n-notifications when actions occur elsewhere in the core framework or\n-another Flask extensions.  In short, signals allow certain senders to\n-notify subscribers that something happened.\n-\n-Flask comes with a couple of signals and other extensions might provide\n-more.  Also keep in mind that signals are intended to notify subscribers\n-and should not encourage subscribers to modify data.  You will notice that\n-there are signals that appear to do the same thing like some of the\n-builtin decorators do (eg: :data:`~flask.request_started` is very similar\n-to :meth:`~flask.Flask.before_request`).  However, there are differences in\n-how they work.  The core :meth:`~flask.Flask.before_request` handler, for\n-example, is executed in a specific order and is able to abort the request\n-early by returning a response.  In contrast all signal handlers are\n-executed in undefined order and do not modify any data.\n-\n-The big advantage of signals over handlers is that you can safely\n-subscribe to them for just a split second.  These temporary\n-subscriptions are helpful for unit testing for example.  Say you want to\n-know what templates were rendered as part of a request: signals allow you\n-to do exactly that.\n+Signals are a lightweight way to notify subscribers of certain events during the\n+lifecycle of the application and each request. When an event occurs, it emits the\n+signal, which calls each subscriber.\n+\n+Signals are implemented by the `Blinker`_ library. See its documentation for detailed\n+information. Flask provides some built-in signals. Extensions may provide their own.\n+\n+Many signals mirror Flask's decorator-based callbacks with similar names. For example,\n+the :data:`.request_started` signal is similar to the :meth:`~.Flask.before_request`\n+decorator. The advantage of signals over handlers is that they can be subscribed to\n+temporarily, and can't directly affect the application. This is useful for testing,\n+metrics, auditing, and more. For example, if you want to know what templates were\n+rendered at what parts of what requests, there is a signal that will notify you of that\n+information.\n+\n+\n+Core Signals\n+------------\n+\n+See :ref:`core-signals-list` for a list of all built-in signals. The :doc:`lifecycle`\n+page also describes the order that signals and decorators execute.\n+\n \n Subscribing to Signals\n ----------------------\n@@ -99,11 +94,6 @@ The example above would then look like this::\n         ...\n         template, context = templates[0]\n \n-.. admonition:: Blinker API Changes\n-\n-   The :meth:`~blinker.base.Signal.connected_to` method arrived in Blinker\n-   with version 1.1.\n-\n Creating Signals\n ----------------\n \n@@ -123,12 +113,6 @@ The name for the signal here makes it unique and also simplifies\n debugging.  You can access the name of the signal with the\n :attr:`~blinker.base.NamedSignal.name` attribute.\n \n-.. admonition:: For Extension Developers\n-\n-   If you are writing a Flask extension and you want to gracefully degrade for\n-   missing blinker installations, you can do so by using the\n-   :class:`flask.signals.Namespace` class.\n-\n .. _signals-sending:\n \n Sending Signals\n@@ -170,7 +154,7 @@ in :ref:`signals-sending` and the :data:`~flask.request_tearing_down` signal.\n Decorator Based Signal Subscriptions\n ------------------------------------\n \n-With Blinker 1.1 you can also easily subscribe to signals by using the new\n+You can also easily subscribe to signals by using the\n :meth:`~blinker.base.NamedSignal.connect_via` decorator::\n \n     from flask import template_rendered\n@@ -179,10 +163,5 @@ With Blinker 1.1 you can also easily subscribe to signals by using the new\n     def when_template_rendered(sender, template, context, **extra):\n         print(f'Template {template.name} is rendered with {context}')\n \n-Core Signals\n-------------\n-\n-Take a look at :ref:`core-signals-list` for a list of all builtin signals.\n-\n \n .. _blinker: https://pypi.org/project/blinker/\n""",1.3333333333333333,1.3333333333333333
examples/javascript/pyproject.toml,examples/javascript/pyproject.toml,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -11,7 +11,7 @@ dependencies = [""flask""]\n Documentation = ""https://flask.palletsprojects.com/patterns/jquery/""\n \n [project.optional-dependencies]\n-test = [""pytest"", ""blinker""]\n+test = [""pytest""]\n \n [build-system]\n requires = [""setuptools""]\n'",0,0
pyproject.toml,pyproject.toml,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -24,6 +24,7 @@ dependencies = [\n     ""Jinja2>=3.0"",\n     ""itsdangerous>=2.0"",\n     ""click>=8.0"",\n+    ""blinker>=1.6.2"",\n     ""importlib-metadata>=3.6.0; python_version < \'3.10\'"",\n ]\n dynamic = [""version""]\n@@ -90,7 +91,6 @@ warn_unused_ignores = true\n [[tool.mypy.overrides]]\n module = [\n     ""asgiref.*"",\n-    ""blinker.*"",\n     ""dotenv.*"",\n     ""cryptography.*"",\n     ""importlib_metadata"",\n'",0,0
requirements/build.txt,requirements/build.txt,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -11,5 +11,3 @@ packaging==23.0\n     # via build\n pyproject-hooks==1.0.0\n     # via build\n-tomli==2.0.1\n-    # via build\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -3,3 +3,4 @@ Jinja2==3.0.0\n MarkupSafe==2.0.0\n itsdangerous==2.0.0\n click==8.0.0\n+blinker==1.6.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -1,10 +1,12 @@\n-# SHA1:4de7d9e6254a945fd97ec10880dd23b6cd43b70d\n+# SHA1:575f86f45391b662630a6080f0a12676215eb0cf\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n #\n #    pip-compile-multi\n #\n+blinker==1.6.2\n+    # via -r requirements/tests-pallets-min.in\n click==8.0.0\n     # via -r requirements/tests-pallets-min.in\n itsdangerous==2.0.0\n'",0,0
requirements/tests.in,requirements/tests.in,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -1,5 +1,4 @@\n pytest\n asgiref\n-blinker\n greenlet ; python_version < ""3.11""\n python-dotenv>=1; python_version >= ""3.8""\n'",0,0
requirements/tests.txt,requirements/tests.txt,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -1,4 +1,4 @@\n-# SHA1:30698f5f4f9cba5088318306829a15b0dc123b38\n+# SHA1:3c8dde35aba20388b22430b17974af8ef8205b4f\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -7,12 +7,6 @@\n #\n asgiref==3.6.0\n     # via -r requirements/tests.in\n-blinker==1.6.1\n-    # via -r requirements/tests.in\n-exceptiongroup==1.1.1\n-    # via pytest\n-greenlet==2.0.2 ; python_version < ""3.11""\n-    # via -r requirements/tests.in\n iniconfig==2.0.0\n     # via pytest\n packaging==23.0\n@@ -23,7 +17,3 @@ pytest==7.3.0\n     # via -r requirements/tests.in\n python-dotenv==1.0.0 ; python_version >= ""3.8""\n     # via -r requirements/tests.in\n-tomli==2.0.1\n-    # via pytest\n-typing-extensions==4.5.0\n-    # via blinker\n'",0,0
requirements/typing.txt,requirements/typing.txt,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -15,8 +15,6 @@ mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n-tomli==2.0.1\n-    # via mypy\n types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -32,7 +32,6 @@ from .signals import message_flashed as message_flashed\n from .signals import request_finished as request_finished\n from .signals import request_started as request_started\n from .signals import request_tearing_down as request_tearing_down\n-from .signals import signals_available as signals_available\n from .signals import template_rendered as template_rendered\n from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n@@ -89,4 +88,15 @@ def __getattr__(name):\n         )\n         return Markup\n \n+    if name == ""signals_available"":\n+        import warnings\n+\n+        warnings.warn(\n+            ""\'signals_available\' is deprecated and will be removed in Flask 2.4.""\n+            "" Signals are always available"",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return True\n+\n     raise AttributeError(name)\n'",5.0,6.0
src/flask/signals.py,src/flask/signals.py,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -1,49 +1,13 @@\n-import typing as t\n-\n-try:\n-    from blinker import Namespace\n-\n-    signals_available = True\n-except ImportError:\n-    signals_available = False\n-\n-    class Namespace:  # type: ignore\n-        def signal(self, name: str, doc: t.Optional[str] = None) -> ""_FakeSignal"":\n-            return _FakeSignal(name, doc)\n-\n-    class _FakeSignal:\n-        """"""If blinker is unavailable, create a fake class with the same\n-        interface that allows sending of signals but will fail with an\n-        error on anything else.  Instead of doing anything on send, it\n-        will just ignore the arguments and do nothing instead.\n-        """"""\n-\n-        def __init__(self, name: str, doc: t.Optional[str] = None) -> None:\n-            self.name = name\n-            self.__doc__ = doc\n-\n-        def send(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n-            pass\n+from __future__ import annotations\n \n-        def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n-            raise RuntimeError(\n-                ""Signalling support is unavailable because the blinker""\n-                "" library is not installed.""\n-            ) from None\n-\n-        connect = connect_via = connected_to = temporarily_connected_to = _fail\n-        disconnect = _fail\n-        has_receivers_for = receivers_for = _fail\n-        del _fail\n+import typing as t\n+import warnings\n \n+from blinker import Namespace\n \n-# The namespace for code signals.  If you are not Flask code, do\n-# not put signals in here.  Create your own namespace instead.\n+# This namespace is only for signals provided by Flask itself.\n _signals = Namespace()\n \n-\n-# Core signals.  For usage examples grep the source code or consult\n-# the API documentation in docs/api.rst as well as docs/signals.rst\n template_rendered = _signals.signal(""template-rendered"")\n before_render_template = _signals.signal(""before-render-template"")\n request_started = _signals.signal(""request-started"")\n@@ -54,3 +18,16 @@ appcontext_tearing_down = _signals.signal(""appcontext-tearing-down"")\n appcontext_pushed = _signals.signal(""appcontext-pushed"")\n appcontext_popped = _signals.signal(""appcontext-popped"")\n message_flashed = _signals.signal(""message-flashed"")\n+\n+\n+def __getattr__(name: str) -> t.Any:\n+    if name == ""signals_available"":\n+        warnings.warn(\n+            ""The \'signals_available\' attribute is deprecated and will be removed in""\n+            "" Flask 2.4. Signals are always available."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return True\n+\n+    raise AttributeError(name)\n'",1.0,2.0
tests/test_signals.py,tests/test_signals.py,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -1,16 +1,5 @@\n-import pytest\n-\n-try:\n-    import blinker\n-except ImportError:\n-    blinker = None\n-\n import flask\n \n-pytestmark = pytest.mark.skipif(\n-    blinker is None, reason=""Signals require the blinker library.""\n-)\n-\n \n def test_template_rendered(app, client):\n     @app.route(""/"")\n'",1.28,1.28
tests/test_testing.py,tests/test_testing.py,9cb1a7a52d7927071e2b737d52f902f006969e82,e1e4e82096efbf25aa3c65b706aec60f1b00dec7,"'blinker is required, signals are always available'","'@@ -10,11 +10,6 @@ from flask.json import jsonify\n from flask.testing import EnvironBuilder\n from flask.testing import FlaskCliRunner\n \n-try:\n-    import blinker\n-except ImportError:\n-    blinker = None\n-\n \n def test_environ_defaults_from_config(app, client):\n     app.config[""SERVER_NAME""] = ""example.com:1234""\n@@ -285,7 +280,6 @@ def test_json_request_and_response(app, client):\n         assert rv.get_json() == json_data\n \n \n-@pytest.mark.skipif(blinker is None, reason=""blinker is not installed"")\n def test_client_json_no_app_context(app, client):\n     @app.route(""/hello"", methods=[""POST""])\n     def hello():\n'",1.0425531914893618,1.0425531914893618
CHANGES.rst,CHANGES.rst,8239765a4410d13d489e299a99e4a4c6951e190b,a05c0c6b7232aac38899234a6c4f071f9005a502,'allow async signal receivers',"'@@ -30,6 +30,7 @@ Unreleased\n     decorated function if locking is needed. :issue:`4993`\n -   Signals are always available. ``blinker>=1.6.2`` is a required dependency. The\n     ``signals_available`` attribute is deprecated. :issue:`5056`\n+-   Signals support ``async`` subscriber functions. :pr:`5049`\n -   Remove uses of locks that could cause requests to block each other very briefly.\n     :issue:`4993`\n -   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n'",0,0
src/flask/app.py,src/flask/app.py,8239765a4410d13d489e299a99e4a4c6951e190b,a05c0c6b7232aac38899234a6c4f071f9005a502,'allow async signal receivers',"'@@ -1389,7 +1389,7 @@ class Flask(Scaffold):\n         .. versionadded:: 0.3\n         """"""\n         exc_info = sys.exc_info()\n-        got_request_exception.send(self, exception=e)\n+        got_request_exception.send(self, _async_wrapper=self.ensure_sync, exception=e)\n         propagate = self.config[""PROPAGATE_EXCEPTIONS""]\n \n         if propagate is None:\n@@ -1493,7 +1493,7 @@ class Flask(Scaffold):\n         self._got_first_request = True\n \n         try:\n-            request_started.send(self)\n+            request_started.send(self, _async_wrapper=self.ensure_sync)\n             rv = self.preprocess_request()\n             if rv is None:\n                 rv = self.dispatch_request()\n@@ -1521,7 +1521,9 @@ class Flask(Scaffold):\n         response = self.make_response(rv)\n         try:\n             response = self.process_response(response)\n-            request_finished.send(self, response=response)\n+            request_finished.send(\n+                self, _async_wrapper=self.ensure_sync, response=response\n+            )\n         except Exception:\n             if not from_error_handler:\n                 raise\n@@ -2052,7 +2054,7 @@ class Flask(Scaffold):\n                 for func in reversed(self.teardown_request_funcs[name]):\n                     self.ensure_sync(func)(exc)\n \n-        request_tearing_down.send(self, exc=exc)\n+        request_tearing_down.send(self, _async_wrapper=self.ensure_sync, exc=exc)\n \n     def do_teardown_appcontext(\n         self, exc: t.Optional[BaseException] = _sentinel  # type: ignore\n@@ -2077,7 +2079,7 @@ class Flask(Scaffold):\n         for func in reversed(self.teardown_appcontext_funcs):\n             self.ensure_sync(func)(exc)\n \n-        appcontext_tearing_down.send(self, exc=exc)\n+        appcontext_tearing_down.send(self, _async_wrapper=self.ensure_sync, exc=exc)\n \n     def app_context(self) -> AppContext:\n         """"""Create an :class:`~flask.ctx.AppContext`. Use as a ``with``\n'",3.3230769230769233,3.3230769230769233
src/flask/ctx.py,src/flask/ctx.py,8239765a4410d13d489e299a99e4a4c6951e190b,a05c0c6b7232aac38899234a6c4f071f9005a502,'allow async signal receivers',"'@@ -242,7 +242,7 @@ class AppContext:\n     def push(self) -> None:\n         """"""Binds the app context to the current context.""""""\n         self._cv_tokens.append(_cv_app.set(self))\n-        appcontext_pushed.send(self.app)\n+        appcontext_pushed.send(self.app, _async_wrapper=self.app.ensure_sync)\n \n     def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         """"""Pops the app context.""""""\n@@ -260,7 +260,7 @@ class AppContext:\n                 f""Popped wrong app context. ({ctx!r} instead of {self!r})""\n             )\n \n-        appcontext_popped.send(self.app)\n+        appcontext_popped.send(self.app, _async_wrapper=self.app.ensure_sync)\n \n     def __enter__(self) -> ""AppContext"":\n         self.push()\n'",1.9259259259259258,1.9259259259259258
src/flask/helpers.py,src/flask/helpers.py,8239765a4410d13d489e299a99e4a4c6951e190b,a05c0c6b7232aac38899234a6c4f071f9005a502,'allow async signal receivers',"'@@ -327,8 +327,10 @@ def flash(message: str, category: str = ""message"") -> None:\n     flashes = session.get(""_flashes"", [])\n     flashes.append((category, message))\n     session[""_flashes""] = flashes\n+    app = current_app._get_current_object()  # type: ignore\n     message_flashed.send(\n-        current_app._get_current_object(),  # type: ignore\n+        app,\n+        _async_wrapper=app.ensure_sync,\n         message=message,\n         category=category,\n     )\n'",2.227272727272727,2.227272727272727
src/flask/templating.py,src/flask/templating.py,8239765a4410d13d489e299a99e4a4c6951e190b,a05c0c6b7232aac38899234a6c4f071f9005a502,'allow async signal receivers',"'@@ -126,9 +126,13 @@ class DispatchingJinjaLoader(BaseLoader):\n \n def _render(app: ""Flask"", template: Template, context: t.Dict[str, t.Any]) -> str:\n     app.update_template_context(context)\n-    before_render_template.send(app, template=template, context=context)\n+    before_render_template.send(\n+        app, _async_wrapper=app.ensure_sync, template=template, context=context\n+    )\n     rv = template.render(context)\n-    template_rendered.send(app, template=template, context=context)\n+    template_rendered.send(\n+        app, _async_wrapper=app.ensure_sync, template=template, context=context\n+    )\n     return rv\n \n \n@@ -163,11 +167,15 @@ def _stream(\n     app: ""Flask"", template: Template, context: t.Dict[str, t.Any]\n ) -> t.Iterator[str]:\n     app.update_template_context(context)\n-    before_render_template.send(app, template=template, context=context)\n+    before_render_template.send(\n+        app, _async_wrapper=app.ensure_sync, template=template, context=context\n+    )\n \n     def generate() -> t.Iterator[str]:\n         yield from template.generate(context)\n-        template_rendered.send(app, template=template, context=context)\n+        template_rendered.send(\n+            app, _async_wrapper=app.ensure_sync, template=template, context=context\n+        )\n \n     rv = generate()\n \n'",2.2,2.2
.github/workflows/publish.yaml,.github/workflows/publish.yaml,f7d9956c0f0e9a80b1d345adac191f6ebd0ffee4,59f81950fe4fb059ad58b8b8c171831ae5214460,'use oidc instead of token',"""@@ -58,15 +58,15 @@ jobs:\n     # files in the draft release.\n     environment: 'publish'\n     runs-on: ubuntu-latest\n+    permissions:\n+      id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n       - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n-          password: ${{ secrets.TEST_PYPI_TOKEN }}\n           repository_url: https://test.pypi.org/legacy/\n           packages_dir: artifact/\n       - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n-          password: ${{ secrets.PYPI_TOKEN }}\n           packages_dir: artifact/\n""",0,0
CHANGES.rst,CHANGES.rst,84c007d34f7f0b8737310fe4d67be12c463e0130,182ce3dd15dfa3537391c3efaf9c3ff407d134d4,'show subdomain or host in routes output',"""@@ -44,6 +44,8 @@ Unreleased\n     to set the domain, which modern browsers interpret as an exact match rather than\n     a subdomain match. Warnings about ``localhost`` and IP addresses are also removed.\n     :issue:`5051`\n+-   The ``routes`` command shows each rule's ``subdomain`` or ``host`` when domain\n+    matching is in use. :issue:`5004`\n \n \n Version 2.2.4\n""",0,0
src/flask/cli.py,src/flask/cli.py,84c007d34f7f0b8737310fe4d67be12c463e0130,182ce3dd15dfa3537391c3efaf9c3ff407d134d4,'show subdomain or host in routes output',"'@@ -9,7 +9,7 @@ import sys\n import traceback\n import typing as t\n from functools import update_wrapper\n-from operator import attrgetter\n+from operator import itemgetter\n \n import click\n from click.core import ParameterSource\n@@ -989,49 +989,62 @@ def shell_command() -> None:\n @click.option(\n     ""--sort"",\n     ""-s"",\n-    type=click.Choice((""endpoint"", ""methods"", ""rule"", ""match"")),\n+    type=click.Choice((""endpoint"", ""methods"", ""domain"", ""rule"", ""match"")),\n     default=""endpoint"",\n     help=(\n-        \'Method to sort routes by. ""match"" is the order that Flask will match \'\n-        ""routes when dispatching a request.""\n+        ""Method to sort routes by. \'match\' is the order that Flask will match routes""\n+        "" when dispatching a request.""\n     ),\n )\n @click.option(""--all-methods"", is_flag=True, help=""Show HEAD and OPTIONS methods."")\n @with_appcontext\n def routes_command(sort: str, all_methods: bool) -> None:\n     """"""Show all registered routes with endpoints and methods.""""""\n-\n     rules = list(current_app.url_map.iter_rules())\n+\n     if not rules:\n         click.echo(""No routes were registered."")\n         return\n \n-    ignored_methods = set(() if all_methods else (""HEAD"", ""OPTIONS""))\n+    ignored_methods = set() if all_methods else {""HEAD"", ""OPTIONS""}\n+    host_matching = current_app.url_map.host_matching\n+    has_domain = any(rule.host if host_matching else rule.subdomain for rule in rules)\n+    rows = []\n \n-    if sort in (""endpoint"", ""rule""):\n-        rules = sorted(rules, key=attrgetter(sort))\n-    elif sort == ""methods"":\n-        rules = sorted(rules, key=lambda rule: sorted(rule.methods))  # type: ignore\n+    for rule in rules:\n+        row = [\n+            rule.endpoint,\n+            "", "".join(sorted((rule.methods or set()) - ignored_methods)),\n+        ]\n \n-    rule_methods = [\n-        "", "".join(sorted(rule.methods - ignored_methods))  # type: ignore\n-        for rule in rules\n-    ]\n+        if has_domain:\n+            row.append((rule.host if host_matching else rule.subdomain) or """")\n \n-    headers = (""Endpoint"", ""Methods"", ""Rule"")\n-    widths = (\n-        max(len(rule.endpoint) for rule in rules),\n-        max(len(methods) for methods in rule_methods),\n-        max(len(rule.rule) for rule in rules),\n-    )\n-    widths = [max(len(h), w) for h, w in zip(headers, widths)]\n-    row = ""{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}"".format(*widths)\n+        row.append(rule.rule)\n+        rows.append(row)\n+\n+    headers = [""Endpoint"", ""Methods""]\n+    sorts = [""endpoint"", ""methods""]\n+\n+    if has_domain:\n+        headers.append(""Host"" if host_matching else ""Subdomain"")\n+        sorts.append(""domain"")\n+\n+    headers.append(""Rule"")\n+    sorts.append(""rule"")\n+\n+    try:\n+        rows.sort(key=itemgetter(sorts.index(sort)))\n+    except ValueError:\n+        pass\n \n-    click.echo(row.format(*headers).strip())\n-    click.echo(row.format(*(""-"" * width for width in widths)))\n+    rows.insert(0, headers)\n+    widths = [max(len(row[i]) for row in rows) for i in range(len(headers))]\n+    rows.insert(1, [""-"" * w for w in widths])\n+    template = ""  "".join(f""{{{i}:<{w}}}"" for i, w in enumerate(widths))\n \n-    for rule, methods in zip(rules, rule_methods):\n-        click.echo(row.format(rule.endpoint, methods, rule.rule).rstrip())\n+    for row in rows:\n+        click.echo(template.format(*row))\n \n \n cli = FlaskGroup(\n'",4.352941176470588,4.529411764705882
tests/test_cli.py,tests/test_cli.py,84c007d34f7f0b8737310fe4d67be12c463e0130,182ce3dd15dfa3537391c3efaf9c3ff407d134d4,'show subdomain or host in routes output',"'@@ -433,16 +433,12 @@ class TestRoutes:\n     @pytest.fixture\n     def app(self):\n         app = Flask(__name__)\n-        app.testing = True\n-\n-        @app.route(""/get_post/<int:x>/<int:y>"", methods=[""GET"", ""POST""])\n-        def yyy_get_post(x, y):\n-            pass\n-\n-        @app.route(""/zzz_post"", methods=[""POST""])\n-        def aaa_post():\n-            pass\n-\n+        app.add_url_rule(\n+            ""/get_post/<int:x>/<int:y>"",\n+            methods=[""GET"", ""POST""],\n+            endpoint=""yyy_get_post"",\n+        )\n+        app.add_url_rule(""/zzz_post"", methods=[""POST""], endpoint=""aaa_post"")\n         return app\n \n     @pytest.fixture\n@@ -450,17 +446,6 @@ class TestRoutes:\n         cli = FlaskGroup(create_app=lambda: app)\n         return partial(runner.invoke, cli)\n \n-    @pytest.fixture\n-    def invoke_no_routes(self, runner):\n-        def create_app():\n-            app = Flask(__name__, static_folder=None)\n-            app.testing = True\n-\n-            return app\n-\n-        cli = FlaskGroup(create_app=create_app)\n-        return partial(runner.invoke, cli)\n-\n     def expect_order(self, order, output):\n         # skip the header and match the start of each row\n         for expect, line in zip(order, output.splitlines()[2:]):\n@@ -493,11 +478,31 @@ class TestRoutes:\n         output = invoke([""routes"", ""--all-methods""]).output\n         assert ""GET, HEAD, OPTIONS, POST"" in output\n \n-    def test_no_routes(self, invoke_no_routes):\n-        result = invoke_no_routes([""routes""])\n+    def test_no_routes(self, runner):\n+        app = Flask(__name__, static_folder=None)\n+        cli = FlaskGroup(create_app=lambda: app)\n+        result = runner.invoke(cli, [""routes""])\n         assert result.exit_code == 0\n         assert ""No routes were registered."" in result.output\n \n+    def test_subdomain(self, runner):\n+        app = Flask(__name__, static_folder=None)\n+        app.add_url_rule(""/a"", subdomain=""a"", endpoint=""a"")\n+        app.add_url_rule(""/b"", subdomain=""b"", endpoint=""b"")\n+        cli = FlaskGroup(create_app=lambda: app)\n+        result = runner.invoke(cli, [""routes""])\n+        assert result.exit_code == 0\n+        assert ""Subdomain"" in result.output\n+\n+    def test_host(self, runner):\n+        app = Flask(__name__, static_folder=None, host_matching=True)\n+        app.add_url_rule(""/a"", host=""a"", endpoint=""a"")\n+        app.add_url_rule(""/b"", host=""b"", endpoint=""b"")\n+        cli = FlaskGroup(create_app=lambda: app)\n+        result = runner.invoke(cli, [""routes""])\n+        assert result.exit_code == 0\n+        assert ""Host"" in result.output\n+\n \n def dotenv_not_available():\n     try:\n'",1.0724637681159421,1.0746268656716418
CONTRIBUTING.rst,CONTRIBUTING.rst,9a4d370ea221b13d7fff5e2120007986c08f85fb,6931b252935188744415b301ab2e3d3bd5ee5498,'fix typo',"'@@ -121,7 +121,7 @@ First time setup in your local environment\n       .. code-block:: text\n \n          > py -3 -m venv .venv\n-         > env\\Scripts\\activate\n+         > .venv\\Scripts\\activate\n \n -   Install the development dependencies, then install Flask in editable mode.\n \n'",0,0
docs/debugging.rst,docs/debugging.rst,5bba529dfc9021a3df8fba96658a05f605e20afe,87698a2d5d67bfd828e268f01884bcbbe33d2076,'document passthrough_errors',"""@@ -66,9 +66,9 @@ be used to step through code during a request before an error is raised,\n or if no error is raised. Some even have a remote mode so you can debug\n code running on another machine.\n \n-When using an external debugger, the app should still be in debug mode,\n-but it can be useful to disable the built-in debugger and reloader,\n-which can interfere.\n+When using an external debugger, the app should still be in debug mode, otherwise Flask\n+turns unhandled errors into generic 500 error pages. However, the built-in debugger and\n+reloader should be disabled so they don't interfere with the external debugger.\n \n .. code-block:: text\n \n@@ -80,8 +80,20 @@ When running from Python:\n \n     app.run(debug=True, use_debugger=False, use_reloader=False)\n \n-Disabling these isn't required, an external debugger will continue to\n-work with the following caveats. If the built-in debugger is not\n-disabled, it will catch unhandled exceptions before the external\n-debugger can. If the reloader is not disabled, it could cause an\n-unexpected reload if code changes during debugging.\n+Disabling these isn't required, an external debugger will continue to work with the\n+following caveats.\n+\n+-   If the built-in debugger is not disabled, it will catch unhandled exceptions before\n+    the external debugger can.\n+-   If the reloader is not disabled, it could cause an unexpected reload if code changes\n+    during a breakpoint.\n+-   The development server will still catch unhandled exceptions if the built-in\n+    debugger is disabled, otherwise it would crash on any error. If you want that (and\n+    usually you don't) pass ``passthrough_errors=True`` to ``app.run``.\n+\n+    .. code-block:: python\n+\n+        app.run(\n+            debug=True, passthrough_errors=True,\n+            use_debugger=False, use_reloader=False\n+        )\n""",0,0
requirements/build.txt,requirements/build.txt,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -11,5 +11,3 @@ packaging==23.0\n     # via build\n pyproject-hooks==1.0.0\n     # via build\n-tomli==2.0.1\n-    # via build\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -1,5 +1,5 @@\n-Werkzeug==2.0.0\n+Werkzeug==2.2.2\n Jinja2==3.0.0\n-MarkupSafe==2.0.0\n+MarkupSafe==2.1.1\n itsdangerous==2.0.0\n click==8.0.0\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -1,4 +1,4 @@\n-# SHA1:4de7d9e6254a945fd97ec10880dd23b6cd43b70d\n+# SHA1:f7109e66098c9e4cb68dc5f0d8e14f429ceed12c\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -11,9 +11,10 @@ itsdangerous==2.0.0\n     # via -r requirements/tests-pallets-min.in\n jinja2==3.0.0\n     # via -r requirements/tests-pallets-min.in\n-markupsafe==2.0.0\n+markupsafe==2.1.1\n     # via\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n-werkzeug==2.0.0\n+    #   werkzeug\n+werkzeug==2.2.2\n     # via -r requirements/tests-pallets-min.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -9,10 +9,6 @@ asgiref==3.6.0\n     # via -r requirements/tests.in\n blinker==1.6.1\n     # via -r requirements/tests.in\n-exceptiongroup==1.1.1\n-    # via pytest\n-greenlet==2.0.2 ; python_version < ""3.11""\n-    # via -r requirements/tests.in\n iniconfig==2.0.0\n     # via pytest\n packaging==23.0\n@@ -23,7 +19,5 @@ pytest==7.3.0\n     # via -r requirements/tests.in\n python-dotenv==1.0.0 ; python_version >= ""3.8""\n     # via -r requirements/tests.in\n-tomli==2.0.1\n-    # via pytest\n typing-extensions==4.5.0\n     # via blinker\n'",0,0
requirements/typing.txt,requirements/typing.txt,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -15,8 +15,6 @@ mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n-tomli==2.0.1\n-    # via mypy\n types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n'",0,0
tox.ini,tox.ini,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,a1d0eda7891917fdea272ac06a85cc2903824d17,'enforce minimum versions in env',"'@@ -13,6 +13,8 @@ skip_missing_interpreters = true\n package = wheel\n wheel_build_env = .pkg\n envtmpdir = {toxworkdir}/tmp/{envname}\n+constrain_package_deps = true\n+use_frozen_constraints = true\n deps =\n     -r requirements/tests.txt\n     min: -r requirements/tests-pallets-min.txt\n@@ -34,11 +36,15 @@ commands = pre-commit run --all-files\n [testenv:typing]\n package = wheel\n wheel_build_env = .pkg\n+constrain_package_deps = true\n+use_frozen_constraints = true\n deps = -r requirements/typing.txt\n commands = mypy\n \n [testenv:docs]\n package = wheel\n wheel_build_env = .pkg\n+constrain_package_deps = true\n+use_frozen_constraints = true\n deps = -r requirements/docs.txt\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n'",0,0
requirements/build.txt,requirements/build.txt,a67195e0598f7fa4481e366527600cf0b46ae78e,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,'update dependencies',"'@@ -7,7 +7,7 @@\n #\n build==0.10.0\n     # via -r requirements/build.in\n-packaging==23.0\n+packaging==23.1\n     # via build\n pyproject-hooks==1.0.0\n     # via build\n'",0,0
requirements/dev.txt,requirements/dev.txt,a67195e0598f7fa4481e366527600cf0b46ae78e,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,'update dependencies',"'@@ -50,7 +50,7 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.4.11\n+tox==4.4.12\n     # via -r requirements/dev.in\n virtualenv==20.21.0\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,a67195e0598f7fa4481e366527600cf0b46ae78e,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,'update dependencies',"'@@ -25,7 +25,7 @@ jinja2==3.1.2\n     # via sphinx\n markupsafe==2.1.2\n     # via jinja2\n-packaging==23.0\n+packaging==23.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,a67195e0598f7fa4481e366527600cf0b46ae78e,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,'update dependencies',"'@@ -7,17 +7,15 @@\n #\n asgiref==3.6.0\n     # via -r requirements/tests.in\n-blinker==1.6.1\n+blinker==1.6.2\n     # via -r requirements/tests.in\n iniconfig==2.0.0\n     # via pytest\n-packaging==23.0\n+packaging==23.1\n     # via pytest\n pluggy==1.0.0\n     # via pytest\n-pytest==7.3.0\n+pytest==7.3.1\n     # via -r requirements/tests.in\n python-dotenv==1.0.0 ; python_version >= ""3.8""\n     # via -r requirements/tests.in\n-typing-extensions==4.5.0\n-    # via blinker\n'",0,0
requirements/typing.txt,requirements/typing.txt,a67195e0598f7fa4481e366527600cf0b46ae78e,7e6e68aed91c4c36142f6f1d32c0d74ac75e65be,'update dependencies',"'@@ -7,7 +7,7 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==40.0.1\n+cryptography==40.0.2\n     # via -r requirements/typing.in\n mypy==1.2.0\n     # via -r requirements/typing.in\n'",0,0
CHANGES.rst,CHANGES.rst,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"""@@ -46,6 +46,7 @@ Unreleased\n     :issue:`5051`\n -   The ``routes`` command shows each rule's ``subdomain`` or ``host`` when domain\n     matching is in use. :issue:`5004`\n+-   Use postponed evaluation of annotations. :pr:`5071`\n \n \n Version 2.2.4\n""",0,0
src/flask/app.py,src/flask/app.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import functools\n import inspect\n import logging\n@@ -95,7 +97,7 @@ else:\n         return inspect.iscoroutinefunction(func)\n \n \n-def _make_timedelta(value: t.Union[timedelta, int, None]) -> t.Optional[timedelta]:\n+def _make_timedelta(value: timedelta | int | None) -> timedelta | None:\n     if value is None or isinstance(value, timedelta):\n         return value\n \n@@ -280,7 +282,7 @@ class Flask(Scaffold):\n         ""PERMANENT_SESSION_LIFETIME"", get_converter=_make_timedelta\n     )\n \n-    json_provider_class: t.Type[JSONProvider] = DefaultJSONProvider\n+    json_provider_class: type[JSONProvider] = DefaultJSONProvider\n     """"""A subclass of :class:`~flask.json.provider.JSONProvider`. An\n     instance is created and assigned to :attr:`app.json` when creating\n     the app.\n@@ -348,7 +350,7 @@ class Flask(Scaffold):\n     #: client class. Defaults to :class:`~flask.testing.FlaskClient`.\n     #:\n     #: .. versionadded:: 0.7\n-    test_client_class: t.Optional[t.Type[""FlaskClient""]] = None\n+    test_client_class: type[FlaskClient] | None = None\n \n     #: The :class:`~click.testing.CliRunner` subclass, by default\n     #: :class:`~flask.testing.FlaskCliRunner` that is used by\n@@ -356,7 +358,7 @@ class Flask(Scaffold):\n     #: Flask app object as the first argument.\n     #:\n     #: .. versionadded:: 1.0\n-    test_cli_runner_class: t.Optional[t.Type[""FlaskCliRunner""]] = None\n+    test_cli_runner_class: type[FlaskCliRunner] | None = None\n \n     #: the session interface to use.  By default an instance of\n     #: :class:`~flask.sessions.SecureCookieSessionInterface` is used here.\n@@ -367,15 +369,15 @@ class Flask(Scaffold):\n     def __init__(\n         self,\n         import_name: str,\n-        static_url_path: t.Optional[str] = None,\n-        static_folder: t.Optional[t.Union[str, os.PathLike]] = ""static"",\n-        static_host: t.Optional[str] = None,\n+        static_url_path: str | None = None,\n+        static_folder: str | os.PathLike | None = ""static"",\n+        static_host: str | None = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n-        template_folder: t.Optional[t.Union[str, os.PathLike]] = ""templates"",\n-        instance_path: t.Optional[str] = None,\n+        template_folder: str | os.PathLike | None = ""templates"",\n+        instance_path: str | None = None,\n         instance_relative_config: bool = False,\n-        root_path: t.Optional[str] = None,\n+        root_path: str | None = None,\n     ):\n         super().__init__(\n             import_name=import_name,\n@@ -435,8 +437,8 @@ class Flask(Scaffold):\n         #: Otherwise, its return value is returned by ``url_for``.\n         #:\n         #: .. versionadded:: 0.9\n-        self.url_build_error_handlers: t.List[\n-            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n+        self.url_build_error_handlers: list[\n+            t.Callable[[Exception, str, dict[str, t.Any]], str]\n         ] = []\n \n         #: A list of functions that are called when the application context\n@@ -445,13 +447,13 @@ class Flask(Scaffold):\n         #: from databases.\n         #:\n         #: .. versionadded:: 0.9\n-        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n+        self.teardown_appcontext_funcs: list[ft.TeardownCallable] = []\n \n         #: A list of shell context processor functions that should be run\n         #: when a shell context is created.\n         #:\n         #: .. versionadded:: 0.11\n-        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n+        self.shell_context_processors: list[ft.ShellContextProcessorCallable] = []\n \n         #: Maps registered blueprint names to blueprint objects. The\n         #: dict retains the order the blueprints were registered in.\n@@ -459,7 +461,7 @@ class Flask(Scaffold):\n         #: not track how often they were attached.\n         #:\n         #: .. versionadded:: 0.7\n-        self.blueprints: t.Dict[str, ""Blueprint""] = {}\n+        self.blueprints: dict[str, Blueprint] = {}\n \n         #: a place where extensions can store application specific state.  For\n         #: example this is where an extension could store database engines and\n@@ -734,7 +736,7 @@ class Flask(Scaffold):\n         :param context: the context as a dictionary that is updated in place\n                         to add extra variables.\n         """"""\n-        names: t.Iterable[t.Optional[str]] = (None,)\n+        names: t.Iterable[str | None] = (None,)\n \n         # A template may be rendered outside a request context.\n         if request:\n@@ -785,9 +787,9 @@ class Flask(Scaffold):\n \n     def run(\n         self,\n-        host: t.Optional[str] = None,\n-        port: t.Optional[int] = None,\n-        debug: t.Optional[bool] = None,\n+        host: str | None = None,\n+        port: int | None = None,\n+        debug: bool | None = None,\n         load_dotenv: bool = True,\n         **options: t.Any,\n     ) -> None:\n@@ -906,7 +908,7 @@ class Flask(Scaffold):\n             # without reloader and that stuff from an interactive shell.\n             self._got_first_request = False\n \n-    def test_client(self, use_cookies: bool = True, **kwargs: t.Any) -> ""FlaskClient"":\n+    def test_client(self, use_cookies: bool = True, **kwargs: t.Any) -> FlaskClient:\n         """"""Creates a test client for this application.  For information\n         about unit testing head over to :doc:`/testing`.\n \n@@ -964,7 +966,7 @@ class Flask(Scaffold):\n             self, self.response_class, use_cookies=use_cookies, **kwargs\n         )\n \n-    def test_cli_runner(self, **kwargs: t.Any) -> ""FlaskCliRunner"":\n+    def test_cli_runner(self, **kwargs: t.Any) -> FlaskCliRunner:\n         """"""Create a CLI runner for testing CLI commands.\n         See :ref:`testing-cli`.\n \n@@ -982,7 +984,7 @@ class Flask(Scaffold):\n         return cls(self, **kwargs)  # type: ignore\n \n     @setupmethod\n-    def register_blueprint(self, blueprint: ""Blueprint"", **options: t.Any) -> None:\n+    def register_blueprint(self, blueprint: Blueprint, **options: t.Any) -> None:\n         """"""Register a :class:`~flask.Blueprint` on the application. Keyword\n         arguments passed to this method will override the defaults set on the\n         blueprint.\n@@ -1009,7 +1011,7 @@ class Flask(Scaffold):\n         """"""\n         blueprint.register(self, options)\n \n-    def iter_blueprints(self) -> t.ValuesView[""Blueprint""]:\n+    def iter_blueprints(self) -> t.ValuesView[Blueprint]:\n         """"""Iterates over all blueprints by the order they were registered.\n \n         .. versionadded:: 0.11\n@@ -1020,9 +1022,9 @@ class Flask(Scaffold):\n     def add_url_rule(\n         self,\n         rule: str,\n-        endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.RouteCallable] = None,\n-        provide_automatic_options: t.Optional[bool] = None,\n+        endpoint: str | None = None,\n+        view_func: ft.RouteCallable | None = None,\n+        provide_automatic_options: bool | None = None,\n         **options: t.Any,\n     ) -> None:\n         if endpoint is None:\n@@ -1077,7 +1079,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def template_filter(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_filter], T_template_filter]:\n         """"""A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n@@ -1099,7 +1101,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_filter(\n-        self, f: ft.TemplateFilterCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateFilterCallable, name: str | None = None\n     ) -> None:\n         """"""Register a custom template filter.  Works exactly like the\n         :meth:`template_filter` decorator.\n@@ -1111,7 +1113,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def template_test(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_test], T_template_test]:\n         """"""A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n@@ -1140,7 +1142,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_test(\n-        self, f: ft.TemplateTestCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateTestCallable, name: str | None = None\n     ) -> None:\n         """"""Register a custom template test.  Works exactly like the\n         :meth:`template_test` decorator.\n@@ -1154,7 +1156,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def template_global(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_global], T_template_global]:\n         """"""A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n@@ -1178,7 +1180,7 @@ class Flask(Scaffold):\n \n     @setupmethod\n     def add_template_global(\n-        self, f: ft.TemplateGlobalCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateGlobalCallable, name: str | None = None\n     ) -> None:\n         """"""Register a custom template global function. Works exactly like the\n         :meth:`template_global` decorator.\n@@ -1235,7 +1237,7 @@ class Flask(Scaffold):\n         self.shell_context_processors.append(f)\n         return f\n \n-    def _find_error_handler(self, e: Exception) -> t.Optional[ft.ErrorHandlerCallable]:\n+    def _find_error_handler(self, e: Exception) -> ft.ErrorHandlerCallable | None:\n         """"""Return a registered error handler for an exception in this order:\n         blueprint handler for a specific code, app handler for a specific code,\n         blueprint handler for an exception class, app handler for an exception\n@@ -1260,7 +1262,7 @@ class Flask(Scaffold):\n \n     def handle_http_exception(\n         self, e: HTTPException\n-    ) -> t.Union[HTTPException, ft.ResponseReturnValue]:\n+    ) -> HTTPException | ft.ResponseReturnValue:\n         """"""Handles an HTTP exception.  By default this will invoke the\n         registered error handlers and fall back to returning the\n         exception as response.\n@@ -1330,7 +1332,7 @@ class Flask(Scaffold):\n \n     def handle_user_exception(\n         self, e: Exception\n-    ) -> t.Union[HTTPException, ft.ResponseReturnValue]:\n+    ) -> HTTPException | ft.ResponseReturnValue:\n         """"""This method is called whenever an exception occurs that\n         should be handled. A special case is :class:`~werkzeug\n         .exceptions.HTTPException` which is forwarded to the\n@@ -1404,7 +1406,7 @@ class Flask(Scaffold):\n             raise e\n \n         self.log_exception(exc_info)\n-        server_error: t.Union[InternalServerError, ft.ResponseReturnValue]\n+        server_error: InternalServerError | ft.ResponseReturnValue\n         server_error = InternalServerError(original_exception=e)\n         handler = self._find_error_handler(server_error)\n \n@@ -1415,9 +1417,7 @@ class Flask(Scaffold):\n \n     def log_exception(\n         self,\n-        exc_info: t.Union[\n-            t.Tuple[type, BaseException, TracebackType], t.Tuple[None, None, None]\n-        ],\n+        exc_info: (tuple[type, BaseException, TracebackType] | tuple[None, None, None]),\n     ) -> None:\n         """"""Logs an exception.  This is called by :meth:`handle_exception`\n         if debugging is disabled and right before the handler is called.\n@@ -1430,7 +1430,7 @@ class Flask(Scaffold):\n             f""Exception on {request.path} [{request.method}]"", exc_info=exc_info\n         )\n \n-    def raise_routing_exception(self, request: Request) -> ""te.NoReturn"":\n+    def raise_routing_exception(self, request: Request) -> te.NoReturn:\n         """"""Intercept routing exceptions and possibly do something else.\n \n         In debug mode, intercept a routing redirect and replace it with\n@@ -1480,7 +1480,7 @@ class Flask(Scaffold):\n         ):\n             return self.make_default_options_response()\n         # otherwise dispatch to the handler for that endpoint\n-        view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]\n+        view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]\n         return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n \n     def full_dispatch_request(self) -> Response:\n@@ -1503,7 +1503,7 @@ class Flask(Scaffold):\n \n     def finalize_request(\n         self,\n-        rv: t.Union[ft.ResponseReturnValue, HTTPException],\n+        rv: ft.ResponseReturnValue | HTTPException,\n         from_error_handler: bool = False,\n     ) -> Response:\n         """"""Given the return value from a view function this finalizes\n@@ -1545,7 +1545,7 @@ class Flask(Scaffold):\n         rv.allow.update(methods)\n         return rv\n \n-    def should_ignore_error(self, error: t.Optional[BaseException]) -> bool:\n+    def should_ignore_error(self, error: BaseException | None) -> bool:\n         """"""This is called to figure out if an error should be ignored\n         or not as far as the teardown system is concerned.  If this\n         function returns ``True`` then the teardown handlers will not be\n@@ -1596,10 +1596,10 @@ class Flask(Scaffold):\n         self,\n         endpoint: str,\n         *,\n-        _anchor: t.Optional[str] = None,\n-        _method: t.Optional[str] = None,\n-        _scheme: t.Optional[str] = None,\n-        _external: t.Optional[bool] = None,\n+        _anchor: str | None = None,\n+        _method: str | None = None,\n+        _scheme: str | None = None,\n+        _external: bool | None = None,\n         **values: t.Any,\n     ) -> str:\n         """"""Generate a URL to the given endpoint with the given values.\n@@ -1871,9 +1871,7 @@ class Flask(Scaffold):\n \n         return rv\n \n-    def create_url_adapter(\n-        self, request: t.Optional[Request]\n-    ) -> t.Optional[MapAdapter]:\n+    def create_url_adapter(self, request: Request | None) -> MapAdapter | None:\n         """"""Creates a URL adapter for the given request. The URL adapter\n         is created at a point where the request context is not yet set\n         up so the request is passed explicitly.\n@@ -1920,7 +1918,7 @@ class Flask(Scaffold):\n \n         .. versionadded:: 0.7\n         """"""\n-        names: t.Iterable[t.Optional[str]] = (None,)\n+        names: t.Iterable[str | None] = (None,)\n \n         # url_for may be called outside a request context, parse the\n         # passed endpoint instead of using request.blueprints.\n@@ -1935,7 +1933,7 @@ class Flask(Scaffold):\n                     func(endpoint, values)\n \n     def handle_url_build_error(\n-        self, error: BuildError, endpoint: str, values: t.Dict[str, t.Any]\n+        self, error: BuildError, endpoint: str, values: dict[str, t.Any]\n     ) -> str:\n         """"""Called by :meth:`.url_for` if a\n         :exc:`~werkzeug.routing.BuildError` was raised. If this returns\n@@ -1968,7 +1966,7 @@ class Flask(Scaffold):\n \n         raise error\n \n-    def preprocess_request(self) -> t.Optional[ft.ResponseReturnValue]:\n+    def preprocess_request(self) -> ft.ResponseReturnValue | None:\n         """"""Called before the request is dispatched. Calls\n         :attr:`url_value_preprocessors` registered with the app and the\n         current blueprint (if any). Then calls :attr:`before_request_funcs`\n@@ -2024,7 +2022,7 @@ class Flask(Scaffold):\n         return response\n \n     def do_teardown_request(\n-        self, exc: t.Optional[BaseException] = _sentinel  # type: ignore\n+        self, exc: BaseException | None = _sentinel  # type: ignore\n     ) -> None:\n         """"""Called after the request is dispatched and the response is\n         returned, right before the request context is popped.\n@@ -2057,7 +2055,7 @@ class Flask(Scaffold):\n         request_tearing_down.send(self, _async_wrapper=self.ensure_sync, exc=exc)\n \n     def do_teardown_appcontext(\n-        self, exc: t.Optional[BaseException] = _sentinel  # type: ignore\n+        self, exc: BaseException | None = _sentinel  # type: ignore\n     ) -> None:\n         """"""Called right before the application context is popped.\n \n@@ -2200,7 +2198,7 @@ class Flask(Scaffold):\n             start the response.\n         """"""\n         ctx = self.request_context(environ)\n-        error: t.Optional[BaseException] = None\n+        error: BaseException | None = None\n         try:\n             try:\n                 ctx.push()\n'",3.3230769230769233,3.3230769230769233
src/flask/blueprints.py,src/flask/blueprints.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import os\n import typing as t\n from collections import defaultdict\n@@ -38,8 +40,8 @@ class BlueprintSetupState:\n \n     def __init__(\n         self,\n-        blueprint: ""Blueprint"",\n-        app: ""Flask"",\n+        blueprint: Blueprint,\n+        app: Flask,\n         options: t.Any,\n         first_registration: bool,\n     ) -> None:\n@@ -85,8 +87,8 @@ class BlueprintSetupState:\n     def add_url_rule(\n         self,\n         rule: str,\n-        endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[t.Callable] = None,\n+        endpoint: str | None = None,\n+        view_func: t.Callable | None = None,\n         **options: t.Any,\n     ) -> None:\n         """"""A helper method to register a rule (and optionally a view function)\n@@ -173,14 +175,14 @@ class Blueprint(Scaffold):\n         self,\n         name: str,\n         import_name: str,\n-        static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n-        static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n-        url_prefix: t.Optional[str] = None,\n-        subdomain: t.Optional[str] = None,\n-        url_defaults: t.Optional[dict] = None,\n-        root_path: t.Optional[str] = None,\n-        cli_group: t.Optional[str] = _sentinel,  # type: ignore\n+        static_folder: str | os.PathLike | None = None,\n+        static_url_path: str | None = None,\n+        template_folder: str | os.PathLike | None = None,\n+        url_prefix: str | None = None,\n+        subdomain: str | None = None,\n+        url_defaults: dict | None = None,\n+        root_path: str | None = None,\n+        cli_group: str | None = _sentinel,  # type: ignore\n     ):\n         super().__init__(\n             import_name=import_name,\n@@ -199,14 +201,14 @@ class Blueprint(Scaffold):\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n-        self.deferred_functions: t.List[DeferredSetupFunction] = []\n+        self.deferred_functions: list[DeferredSetupFunction] = []\n \n         if url_defaults is None:\n             url_defaults = {}\n \n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n-        self._blueprints: t.List[t.Tuple[""Blueprint"", dict]] = []\n+        self._blueprints: list[tuple[Blueprint, dict]] = []\n \n     def _check_setup_finished(self, f_name: str) -> None:\n         if self._got_registered_once:\n@@ -242,7 +244,7 @@ class Blueprint(Scaffold):\n         self.record(update_wrapper(wrapper, func))\n \n     def make_setup_state(\n-        self, app: ""Flask"", options: dict, first_registration: bool = False\n+        self, app: Flask, options: dict, first_registration: bool = False\n     ) -> BlueprintSetupState:\n         """"""Creates an instance of :meth:`~flask.blueprints.BlueprintSetupState`\n         object that is later passed to the register callback functions.\n@@ -251,7 +253,7 @@ class Blueprint(Scaffold):\n         return BlueprintSetupState(self, app, options, first_registration)\n \n     @setupmethod\n-    def register_blueprint(self, blueprint: ""Blueprint"", **options: t.Any) -> None:\n+    def register_blueprint(self, blueprint: Blueprint, **options: t.Any) -> None:\n         """"""Register a :class:`~flask.Blueprint` on this blueprint. Keyword\n         arguments passed to this method will override the defaults set\n         on the blueprint.\n@@ -268,7 +270,7 @@ class Blueprint(Scaffold):\n             raise ValueError(""Cannot register a blueprint on itself"")\n         self._blueprints.append((blueprint, options))\n \n-    def register(self, app: ""Flask"", options: dict) -> None:\n+    def register(self, app: Flask, options: dict) -> None:\n         """"""Called by :meth:`Flask.register_blueprint` to register all\n         views and callbacks registered on the blueprint with the\n         application. Creates a :class:`.BlueprintSetupState` and calls\n@@ -408,9 +410,9 @@ class Blueprint(Scaffold):\n     def add_url_rule(\n         self,\n         rule: str,\n-        endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.RouteCallable] = None,\n-        provide_automatic_options: t.Optional[bool] = None,\n+        endpoint: str | None = None,\n+        view_func: ft.RouteCallable | None = None,\n+        provide_automatic_options: bool | None = None,\n         **options: t.Any,\n     ) -> None:\n         """"""Register a URL rule with the blueprint. See :meth:`.Flask.add_url_rule` for\n@@ -437,7 +439,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_template_filter(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_filter], T_template_filter]:\n         """"""Register a template filter, available in any template rendered by the\n         application. Equivalent to :meth:`.Flask.template_filter`.\n@@ -454,7 +456,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def add_app_template_filter(\n-        self, f: ft.TemplateFilterCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateFilterCallable, name: str | None = None\n     ) -> None:\n         """"""Register a template filter, available in any template rendered by the\n         application. Works like the :meth:`app_template_filter` decorator. Equivalent to\n@@ -471,7 +473,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_template_test(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_test], T_template_test]:\n         """"""Register a template test, available in any template rendered by the\n         application. Equivalent to :meth:`.Flask.template_test`.\n@@ -490,7 +492,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def add_app_template_test(\n-        self, f: ft.TemplateTestCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateTestCallable, name: str | None = None\n     ) -> None:\n         """"""Register a template test, available in any template rendered by the\n         application. Works like the :meth:`app_template_test` decorator. Equivalent to\n@@ -509,7 +511,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_template_global(\n-        self, name: t.Optional[str] = None\n+        self, name: str | None = None\n     ) -> t.Callable[[T_template_global], T_template_global]:\n         """"""Register a template global, available in any template rendered by the\n         application. Equivalent to :meth:`.Flask.template_global`.\n@@ -528,7 +530,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def add_app_template_global(\n-        self, f: ft.TemplateGlobalCallable, name: t.Optional[str] = None\n+        self, f: ft.TemplateGlobalCallable, name: str | None = None\n     ) -> None:\n         """"""Register a template global, available in any template rendered by the\n         application. Works like the :meth:`app_template_global` decorator. Equivalent to\n@@ -589,7 +591,7 @@ class Blueprint(Scaffold):\n \n     @setupmethod\n     def app_errorhandler(\n-        self, code: t.Union[t.Type[Exception], int]\n+        self, code: type[Exception] | int\n     ) -> t.Callable[[T_error_handler], T_error_handler]:\n         """"""Like :meth:`errorhandler`, but for every request, not only those handled by\n         the blueprint. Equivalent to :meth:`.Flask.errorhandler`.\n'",2.53125,2.53125
src/flask/cli.py,src/flask/cli.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -285,7 +285,7 @@ class ScriptInfo:\n         self.create_app = create_app\n         #: A dictionary with arbitrary data that can be associated with\n         #: this script info.\n-        self.data: t.Dict[t.Any, t.Any] = {}\n+        self.data: dict[t.Any, t.Any] = {}\n         self.set_debug_flag = set_debug_flag\n         self._loaded_app: Flask | None = None\n \n'",4.529411764705882,4.529411764705882
src/flask/config.py,src/flask/config.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import errno\n import json\n import os\n@@ -10,7 +12,7 @@ from werkzeug.utils import import_string\n class ConfigAttribute:\n     """"""Makes an attribute forward to the config""""""\n \n-    def __init__(self, name: str, get_converter: t.Optional[t.Callable] = None) -> None:\n+    def __init__(self, name: str, get_converter: t.Callable | None = None) -> None:\n         self.__name__ = name\n         self.get_converter = get_converter\n \n@@ -70,7 +72,7 @@ class Config(dict):\n     :param defaults: an optional dictionary of default values\n     """"""\n \n-    def __init__(self, root_path: str, defaults: t.Optional[dict] = None) -> None:\n+    def __init__(self, root_path: str, defaults: dict | None = None) -> None:\n         super().__init__(defaults or {})\n         self.root_path = root_path\n \n@@ -191,7 +193,7 @@ class Config(dict):\n         self.from_object(d)\n         return True\n \n-    def from_object(self, obj: t.Union[object, str]) -> None:\n+    def from_object(self, obj: object | str) -> None:\n         """"""Updates the values from the given object.  An object can be of one\n         of the following two types:\n \n@@ -278,7 +280,7 @@ class Config(dict):\n         return self.from_mapping(obj)\n \n     def from_mapping(\n-        self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n+        self, mapping: t.Mapping[str, t.Any] | None = None, **kwargs: t.Any\n     ) -> bool:\n         """"""Updates the config like :meth:`update` ignoring items with\n         non-upper keys.\n@@ -287,7 +289,7 @@ class Config(dict):\n \n         .. versionadded:: 0.11\n         """"""\n-        mappings: t.Dict[str, t.Any] = {}\n+        mappings: dict[str, t.Any] = {}\n         if mapping is not None:\n             mappings.update(mapping)\n         mappings.update(kwargs)\n@@ -298,7 +300,7 @@ class Config(dict):\n \n     def get_namespace(\n         self, namespace: str, lowercase: bool = True, trim_namespace: bool = True\n-    ) -> t.Dict[str, t.Any]:\n+    ) -> dict[str, t.Any]:\n         """"""Returns a dictionary containing a subset of configuration options\n         that match the specified namespace/prefix. Example usage::\n \n'",3.3333333333333335,3.3333333333333335
src/flask/ctx.py,src/flask/ctx.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import contextvars\n import sys\n import typing as t\n@@ -60,7 +62,7 @@ class _AppCtxGlobals:\n         except KeyError:\n             raise AttributeError(name) from None\n \n-    def get(self, name: str, default: t.Optional[t.Any] = None) -> t.Any:\n+    def get(self, name: str, default: t.Any | None = None) -> t.Any:\n         """"""Get an attribute by name, or a default value. Like\n         :meth:`dict.get`.\n \n@@ -233,18 +235,18 @@ class AppContext:\n     running CLI commands.\n     """"""\n \n-    def __init__(self, app: ""Flask"") -> None:\n+    def __init__(self, app: Flask) -> None:\n         self.app = app\n         self.url_adapter = app.create_url_adapter(None)\n         self.g: _AppCtxGlobals = app.app_ctx_globals_class()\n-        self._cv_tokens: t.List[contextvars.Token] = []\n+        self._cv_tokens: list[contextvars.Token] = []\n \n     def push(self) -> None:\n         """"""Binds the app context to the current context.""""""\n         self._cv_tokens.append(_cv_app.set(self))\n         appcontext_pushed.send(self.app, _async_wrapper=self.app.ensure_sync)\n \n-    def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n+    def pop(self, exc: BaseException | None = _sentinel) -> None:  # type: ignore\n         """"""Pops the app context.""""""\n         try:\n             if len(self._cv_tokens) == 1:\n@@ -262,15 +264,15 @@ class AppContext:\n \n         appcontext_popped.send(self.app, _async_wrapper=self.app.ensure_sync)\n \n-    def __enter__(self) -> ""AppContext"":\n+    def __enter__(self) -> AppContext:\n         self.push()\n         return self\n \n     def __exit__(\n         self,\n-        exc_type: t.Optional[type],\n-        exc_value: t.Optional[BaseException],\n-        tb: t.Optional[TracebackType],\n+        exc_type: type | None,\n+        exc_value: BaseException | None,\n+        tb: TracebackType | None,\n     ) -> None:\n         self.pop(exc_value)\n \n@@ -299,10 +301,10 @@ class RequestContext:\n \n     def __init__(\n         self,\n-        app: ""Flask"",\n+        app: Flask,\n         environ: dict,\n-        request: t.Optional[""Request""] = None,\n-        session: t.Optional[""SessionMixin""] = None,\n+        request: Request | None = None,\n+        session: SessionMixin | None = None,\n     ) -> None:\n         self.app = app\n         if request is None:\n@@ -314,16 +316,16 @@ class RequestContext:\n             self.url_adapter = app.create_url_adapter(self.request)\n         except HTTPException as e:\n             self.request.routing_exception = e\n-        self.flashes: t.Optional[t.List[t.Tuple[str, str]]] = None\n-        self.session: t.Optional[""SessionMixin""] = session\n+        self.flashes: list[tuple[str, str]] | None = None\n+        self.session: SessionMixin | None = session\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n-        self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n+        self._after_request_functions: list[ft.AfterRequestCallable] = []\n \n-        self._cv_tokens: t.List[t.Tuple[contextvars.Token, t.Optional[AppContext]]] = []\n+        self._cv_tokens: list[tuple[contextvars.Token, AppContext | None]] = []\n \n-    def copy(self) -> ""RequestContext"":\n+    def copy(self) -> RequestContext:\n         """"""Creates a copy of this request context with the same request object.\n         This can be used to move a request context to a different greenlet.\n         Because the actual request object is the same this cannot be used to\n@@ -382,7 +384,7 @@ class RequestContext:\n         if self.url_adapter is not None:\n             self.match_request()\n \n-    def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n+    def pop(self, exc: BaseException | None = _sentinel) -> None:  # type: ignore\n         """"""Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n         :meth:`~flask.Flask.teardown_request` decorator.\n@@ -419,15 +421,15 @@ class RequestContext:\n                     f""Popped wrong request context. ({ctx!r} instead of {self!r})""\n                 )\n \n-    def __enter__(self) -> ""RequestContext"":\n+    def __enter__(self) -> RequestContext:\n         self.push()\n         return self\n \n     def __exit__(\n         self,\n-        exc_type: t.Optional[type],\n-        exc_value: t.Optional[BaseException],\n-        tb: t.Optional[TracebackType],\n+        exc_type: type | None,\n+        exc_value: BaseException | None,\n+        tb: TracebackType | None,\n     ) -> None:\n         self.pop(exc_value)\n \n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n \n from .app import Flask\n'",4.285714285714286,4.285714285714286
src/flask/globals.py,src/flask/globals.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n from contextvars import ContextVar\n \n@@ -18,7 +20,7 @@ class _FakeStack:\n         self.cv = cv\n \n     @property\n-    def top(self) -> t.Optional[t.Any]:\n+    def top(self) -> t.Any | None:\n         import warnings\n \n         warnings.warn(\n@@ -38,15 +40,15 @@ This typically means that you attempted to use functionality that needed\n the current application. To solve this, set up an application context\n with app.app_context(). See the documentation for more information.\\\n """"""\n-_cv_app: ContextVar[""AppContext""] = ContextVar(""flask.app_ctx"")\n+_cv_app: ContextVar[AppContext] = ContextVar(""flask.app_ctx"")\n __app_ctx_stack = _FakeStack(""app"", _cv_app)\n-app_ctx: ""AppContext"" = LocalProxy(  # type: ignore[assignment]\n+app_ctx: AppContext = LocalProxy(  # type: ignore[assignment]\n     _cv_app, unbound_message=_no_app_msg\n )\n-current_app: ""Flask"" = LocalProxy(  # type: ignore[assignment]\n+current_app: Flask = LocalProxy(  # type: ignore[assignment]\n     _cv_app, ""app"", unbound_message=_no_app_msg\n )\n-g: ""_AppCtxGlobals"" = LocalProxy(  # type: ignore[assignment]\n+g: _AppCtxGlobals = LocalProxy(  # type: ignore[assignment]\n     _cv_app, ""g"", unbound_message=_no_app_msg\n )\n \n@@ -57,15 +59,15 @@ This typically means that you attempted to use functionality that needed\n an active HTTP request. Consult the documentation on testing for\n information about how to avoid this problem.\\\n """"""\n-_cv_request: ContextVar[""RequestContext""] = ContextVar(""flask.request_ctx"")\n+_cv_request: ContextVar[RequestContext] = ContextVar(""flask.request_ctx"")\n __request_ctx_stack = _FakeStack(""request"", _cv_request)\n-request_ctx: ""RequestContext"" = LocalProxy(  # type: ignore[assignment]\n+request_ctx: RequestContext = LocalProxy(  # type: ignore[assignment]\n     _cv_request, unbound_message=_no_req_msg\n )\n-request: ""Request"" = LocalProxy(  # type: ignore[assignment]\n+request: Request = LocalProxy(  # type: ignore[assignment]\n     _cv_request, ""request"", unbound_message=_no_req_msg\n )\n-session: ""SessionMixin"" = LocalProxy(  # type: ignore[assignment]\n+session: SessionMixin = LocalProxy(  # type: ignore[assignment]\n     _cv_request, ""session"", unbound_message=_no_req_msg\n )\n \n'",1.6666666666666667,1.6666666666666667
src/flask/helpers.py,src/flask/helpers.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import os\n import pkgutil\n import socket\n@@ -50,9 +52,9 @@ def get_load_dotenv(default: bool = True) -> bool:\n \n \n def stream_with_context(\n-    generator_or_function: t.Union[\n-        t.Iterator[t.AnyStr], t.Callable[..., t.Iterator[t.AnyStr]]\n-    ]\n+    generator_or_function: (\n+        t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]]\n+    )\n ) -> t.Iterator[t.AnyStr]:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n@@ -128,7 +130,7 @@ def stream_with_context(\n     return wrapped_g\n \n \n-def make_response(*args: t.Any) -> ""Response"":\n+def make_response(*args: t.Any) -> Response:\n     """"""Sometimes it is necessary to set additional headers in a view.  Because\n     views do not have to return response objects but can return a value that\n     is converted into a response object by Flask itself, it becomes tricky to\n@@ -180,10 +182,10 @@ def make_response(*args: t.Any) -> ""Response"":\n def url_for(\n     endpoint: str,\n     *,\n-    _anchor: t.Optional[str] = None,\n-    _method: t.Optional[str] = None,\n-    _scheme: t.Optional[str] = None,\n-    _external: t.Optional[bool] = None,\n+    _anchor: str | None = None,\n+    _method: str | None = None,\n+    _scheme: str | None = None,\n+    _external: bool | None = None,\n     **values: t.Any,\n ) -> str:\n     """"""Generate a URL to the given endpoint with the given values.\n@@ -232,8 +234,8 @@ def url_for(\n \n \n def redirect(\n-    location: str, code: int = 302, Response: t.Optional[t.Type[""BaseResponse""]] = None\n-) -> ""BaseResponse"":\n+    location: str, code: int = 302, Response: type[BaseResponse] | None = None\n+) -> BaseResponse:\n     """"""Create a redirect response object.\n \n     If :data:`~flask.current_app` is available, it will use its\n@@ -255,9 +257,7 @@ def redirect(\n     return _wz_redirect(location, code=code, Response=Response)\n \n \n-def abort(\n-    code: t.Union[int, ""BaseResponse""], *args: t.Any, **kwargs: t.Any\n-) -> ""te.NoReturn"":\n+def abort(code: int | BaseResponse, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n     """"""Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given\n     status code.\n \n@@ -338,7 +338,7 @@ def flash(message: str, category: str = ""message"") -> None:\n \n def get_flashed_messages(\n     with_categories: bool = False, category_filter: t.Iterable[str] = ()\n-) -> t.Union[t.List[str], t.List[t.Tuple[str, str]]]:\n+) -> list[str] | list[tuple[str, str]]:\n     """"""Pulls all flashed messages from the session and returns them.\n     Further calls in the same request to the function will return\n     the same messages.  By default just the messages are returned,\n@@ -378,7 +378,7 @@ def get_flashed_messages(\n     return flashes\n \n \n-def _prepare_send_file_kwargs(**kwargs: t.Any) -> t.Dict[str, t.Any]:\n+def _prepare_send_file_kwargs(**kwargs: t.Any) -> dict[str, t.Any]:\n     if kwargs.get(""max_age"") is None:\n         kwargs[""max_age""] = current_app.get_send_file_max_age\n \n@@ -392,17 +392,15 @@ def _prepare_send_file_kwargs(**kwargs: t.Any) -> t.Dict[str, t.Any]:\n \n \n def send_file(\n-    path_or_file: t.Union[os.PathLike, str, t.BinaryIO],\n-    mimetype: t.Optional[str] = None,\n+    path_or_file: os.PathLike | str | t.BinaryIO,\n+    mimetype: str | None = None,\n     as_attachment: bool = False,\n-    download_name: t.Optional[str] = None,\n+    download_name: str | None = None,\n     conditional: bool = True,\n-    etag: t.Union[bool, str] = True,\n-    last_modified: t.Optional[t.Union[datetime, int, float]] = None,\n-    max_age: t.Optional[\n-        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n-    ] = None,\n-) -> ""Response"":\n+    etag: bool | str = True,\n+    last_modified: datetime | int | float | None = None,\n+    max_age: None | (int | t.Callable[[str | None], int | None]) = None,\n+) -> Response:\n     """"""Send the contents of a file to the client.\n \n     The first argument can be a file path or a file-like object. Paths\n@@ -520,10 +518,10 @@ def send_file(\n \n \n def send_from_directory(\n-    directory: t.Union[os.PathLike, str],\n-    path: t.Union[os.PathLike, str],\n+    directory: os.PathLike | str,\n+    path: os.PathLike | str,\n     **kwargs: t.Any,\n-) -> ""Response"":\n+) -> Response:\n     """"""Send a file from within a directory using :func:`send_file`.\n \n     .. code-block:: python\n@@ -627,8 +625,8 @@ class locked_cached_property(werkzeug.utils.cached_property):\n     def __init__(\n         self,\n         fget: t.Callable[[t.Any], t.Any],\n-        name: t.Optional[str] = None,\n-        doc: t.Optional[str] = None,\n+        name: str | None = None,\n+        doc: str | None = None,\n     ) -> None:\n         import warnings\n \n@@ -687,8 +685,8 @@ def is_ip(value: str) -> bool:\n \n \n @lru_cache(maxsize=None)\n-def _split_blueprint_path(name: str) -> t.List[str]:\n-    out: t.List[str] = [name]\n+def _split_blueprint_path(name: str) -> list[str]:\n+    out: list[str] = [name]\n \n     if ""."" in name:\n         out.extend(_split_blueprint_path(name.rpartition(""."")[0]))\n'",2.227272727272727,2.227272727272727
src/flask/json/provider.py,src/flask/json/provider.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -72,7 +72,7 @@ class JSONProvider:\n         return self.loads(fp.read(), **kwargs)\n \n     def _prepare_response_obj(\n-        self, args: t.Tuple[t.Any, ...], kwargs: t.Dict[str, t.Any]\n+        self, args: tuple[t.Any, ...], kwargs: dict[str, t.Any]\n     ) -> t.Any:\n         if args and kwargs:\n             raise TypeError(""app.json.response() takes either args or kwargs, not both"")\n@@ -204,7 +204,7 @@ class DefaultJSONProvider(JSONProvider):\n         :param kwargs: Treat as a dict to serialize.\n         """"""\n         obj = self._prepare_response_obj(args, kwargs)\n-        dump_args: t.Dict[str, t.Any] = {}\n+        dump_args: dict[str, t.Any] = {}\n \n         if (self.compact is None and self._app.debug) or self.compact is False:\n             dump_args.setdefault(""indent"", 2)\n'",2.272727272727273,2.272727272727273
src/flask/json/tag.py,src/flask/json/tag.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -40,6 +40,8 @@ be processed before ``dict``.\n \n     app.session_interface.serializer.register(TagOrderedDict, index=0)\n """"""\n+from __future__ import annotations\n+\n import typing as t\n from base64 import b64decode\n from base64 import b64encode\n@@ -61,9 +63,9 @@ class JSONTag:\n \n     #: The tag to mark the serialized object with. If ``None``, this tag is\n     #: only used as an intermediate step during tagging.\n-    key: t.Optional[str] = None\n+    key: str | None = None\n \n-    def __init__(self, serializer: ""TaggedJSONSerializer"") -> None:\n+    def __init__(self, serializer: TaggedJSONSerializer) -> None:\n         """"""Create a tagger for the given serializer.""""""\n         self.serializer = serializer\n \n@@ -244,17 +246,17 @@ class TaggedJSONSerializer:\n     ]\n \n     def __init__(self) -> None:\n-        self.tags: t.Dict[str, JSONTag] = {}\n-        self.order: t.List[JSONTag] = []\n+        self.tags: dict[str, JSONTag] = {}\n+        self.order: list[JSONTag] = []\n \n         for cls in self.default_tags:\n             self.register(cls)\n \n     def register(\n         self,\n-        tag_class: t.Type[JSONTag],\n+        tag_class: type[JSONTag],\n         force: bool = False,\n-        index: t.Optional[int] = None,\n+        index: int | None = None,\n     ) -> None:\n         """"""Register a new tag with this serializer.\n \n@@ -283,7 +285,7 @@ class TaggedJSONSerializer:\n         else:\n             self.order.insert(index, tag)\n \n-    def tag(self, value: t.Any) -> t.Dict[str, t.Any]:\n+    def tag(self, value: t.Any) -> dict[str, t.Any]:\n         """"""Convert a value to a tagged representation if necessary.""""""\n         for tag in self.order:\n             if tag.check(value):\n@@ -291,7 +293,7 @@ class TaggedJSONSerializer:\n \n         return value\n \n-    def untag(self, value: t.Dict[str, t.Any]) -> t.Any:\n+    def untag(self, value: dict[str, t.Any]) -> t.Any:\n         """"""Convert a tagged representation back to the original type.""""""\n         if len(value) != 1:\n             return value\n'",1.4242424242424243,1.4242424242424243
src/flask/logging.py,src/flask/logging.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import logging\n import sys\n import typing as t\n@@ -50,7 +52,7 @@ default_handler.setFormatter(\n )\n \n \n-def create_logger(app: ""Flask"") -> logging.Logger:\n+def create_logger(app: Flask) -> logging.Logger:\n     """"""Get the Flask app\'s logger and configure it if needed.\n \n     The logger name will be the same as\n'",3.6666666666666665,3.6666666666666665
src/flask/scaffold.py,src/flask/scaffold.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import importlib.util\n import os\n import pathlib\n@@ -70,16 +72,16 @@ class Scaffold:\n     """"""\n \n     name: str\n-    _static_folder: t.Optional[str] = None\n-    _static_url_path: t.Optional[str] = None\n+    _static_folder: str | None = None\n+    _static_url_path: str | None = None\n \n     def __init__(\n         self,\n         import_name: str,\n-        static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n-        static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n-        root_path: t.Optional[str] = None,\n+        static_folder: str | os.PathLike | None = None,\n+        static_url_path: str | None = None,\n+        template_folder: str | os.PathLike | None = None,\n+        root_path: str | None = None,\n     ):\n         #: The name of the package or module that this object belongs\n         #: to. Do not change this once it is set by the constructor.\n@@ -112,7 +114,7 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.view_functions: t.Dict[str, t.Callable] = {}\n+        self.view_functions: dict[str, t.Callable] = {}\n \n         #: A data structure of registered error handlers, in the format\n         #: ``{scope: {code: {class: handler}}}``. The ``scope`` key is\n@@ -127,9 +129,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.error_handler_spec: t.Dict[\n+        self.error_handler_spec: dict[\n             ft.AppOrBlueprintKey,\n-            t.Dict[t.Optional[int], t.Dict[t.Type[Exception], ft.ErrorHandlerCallable]],\n+            dict[int | None, dict[type[Exception], ft.ErrorHandlerCallable]],\n         ] = defaultdict(lambda: defaultdict(dict))\n \n         #: A data structure of functions to call at the beginning of\n@@ -142,8 +144,8 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.before_request_funcs: t.Dict[\n-            ft.AppOrBlueprintKey, t.List[ft.BeforeRequestCallable]\n+        self.before_request_funcs: dict[\n+            ft.AppOrBlueprintKey, list[ft.BeforeRequestCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n@@ -156,8 +158,8 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.after_request_funcs: t.Dict[\n-            ft.AppOrBlueprintKey, t.List[ft.AfterRequestCallable]\n+        self.after_request_funcs: dict[\n+            ft.AppOrBlueprintKey, list[ft.AfterRequestCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n@@ -171,8 +173,8 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.teardown_request_funcs: t.Dict[\n-            ft.AppOrBlueprintKey, t.List[ft.TeardownCallable]\n+        self.teardown_request_funcs: dict[\n+            ft.AppOrBlueprintKey, list[ft.TeardownCallable]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call to pass extra context\n@@ -186,8 +188,8 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.template_context_processors: t.Dict[\n-            ft.AppOrBlueprintKey, t.List[ft.TemplateContextProcessorCallable]\n+        self.template_context_processors: dict[\n+            ft.AppOrBlueprintKey, list[ft.TemplateContextProcessorCallable]\n         ] = defaultdict(list, {None: [_default_template_ctx_processor]})\n \n         #: A data structure of functions to call to modify the keyword\n@@ -201,9 +203,9 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.url_value_preprocessors: t.Dict[\n+        self.url_value_preprocessors: dict[\n             ft.AppOrBlueprintKey,\n-            t.List[ft.URLValuePreprocessorCallable],\n+            list[ft.URLValuePreprocessorCallable],\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call to modify the keyword\n@@ -217,8 +219,8 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.url_default_functions: t.Dict[\n-            ft.AppOrBlueprintKey, t.List[ft.URLDefaultCallable]\n+        self.url_default_functions: dict[\n+            ft.AppOrBlueprintKey, list[ft.URLDefaultCallable]\n         ] = defaultdict(list)\n \n     def __repr__(self) -> str:\n@@ -228,7 +230,7 @@ class Scaffold:\n         raise NotImplementedError\n \n     @property\n-    def static_folder(self) -> t.Optional[str]:\n+    def static_folder(self) -> str | None:\n         """"""The absolute path to the configured static folder. ``None``\n         if no static folder is set.\n         """"""\n@@ -238,7 +240,7 @@ class Scaffold:\n             return None\n \n     @static_folder.setter\n-    def static_folder(self, value: t.Optional[t.Union[str, os.PathLike]]) -> None:\n+    def static_folder(self, value: str | os.PathLike | None) -> None:\n         if value is not None:\n             value = os.fspath(value).rstrip(r""\\/"")\n \n@@ -253,7 +255,7 @@ class Scaffold:\n         return self.static_folder is not None\n \n     @property\n-    def static_url_path(self) -> t.Optional[str]:\n+    def static_url_path(self) -> str | None:\n         """"""The URL prefix that the static route will be accessible from.\n \n         If it was not configured during init, it is derived from\n@@ -269,13 +271,13 @@ class Scaffold:\n         return None\n \n     @static_url_path.setter\n-    def static_url_path(self, value: t.Optional[str]) -> None:\n+    def static_url_path(self, value: str | None) -> None:\n         if value is not None:\n             value = value.rstrip(""/"")\n \n         self._static_url_path = value\n \n-    def get_send_file_max_age(self, filename: t.Optional[str]) -> t.Optional[int]:\n+    def get_send_file_max_age(self, filename: str | None) -> int | None:\n         """"""Used by :func:`send_file` to determine the ``max_age`` cache\n         value for a given file path if it wasn\'t passed.\n \n@@ -299,7 +301,7 @@ class Scaffold:\n \n         return value\n \n-    def send_static_file(self, filename: str) -> ""Response"":\n+    def send_static_file(self, filename: str) -> Response:\n         """"""The view function used to serve files from\n         :attr:`static_folder`. A route is automatically registered for\n         this view at :attr:`static_url_path` if :attr:`static_folder` is\n@@ -318,7 +320,7 @@ class Scaffold:\n         )\n \n     @cached_property\n-    def jinja_loader(self) -> t.Optional[FileSystemLoader]:\n+    def jinja_loader(self) -> FileSystemLoader | None:\n         """"""The Jinja loader for this object\'s templates. By default this\n         is a class :class:`jinja2.loaders.FileSystemLoader` to\n         :attr:`template_folder` if it is set.\n@@ -440,9 +442,9 @@ class Scaffold:\n     def add_url_rule(\n         self,\n         rule: str,\n-        endpoint: t.Optional[str] = None,\n-        view_func: t.Optional[ft.RouteCallable] = None,\n-        provide_automatic_options: t.Optional[bool] = None,\n+        endpoint: str | None = None,\n+        view_func: ft.RouteCallable | None = None,\n+        provide_automatic_options: bool | None = None,\n         **options: t.Any,\n     ) -> None:\n         """"""Register a rule for routing incoming requests and building\n@@ -668,7 +670,7 @@ class Scaffold:\n \n     @setupmethod\n     def errorhandler(\n-        self, code_or_exception: t.Union[t.Type[Exception], int]\n+        self, code_or_exception: type[Exception] | int\n     ) -> t.Callable[[T_error_handler], T_error_handler]:\n         """"""Register a function to handle errors by code or exception class.\n \n@@ -713,7 +715,7 @@ class Scaffold:\n     @setupmethod\n     def register_error_handler(\n         self,\n-        code_or_exception: t.Union[t.Type[Exception], int],\n+        code_or_exception: type[Exception] | int,\n         f: ft.ErrorHandlerCallable,\n     ) -> None:\n         """"""Alternative error attach function to the :meth:`errorhandler`\n@@ -727,8 +729,8 @@ class Scaffold:\n \n     @staticmethod\n     def _get_exc_class_and_code(\n-        exc_class_or_code: t.Union[t.Type[Exception], int]\n-    ) -> t.Tuple[t.Type[Exception], t.Optional[int]]:\n+        exc_class_or_code: type[Exception] | int,\n+    ) -> tuple[type[Exception], int | None]:\n         """"""Get the exception class being handled. For HTTP status codes\n         or ``HTTPException`` subclasses, return both the exception and\n         status code.\n@@ -736,7 +738,7 @@ class Scaffold:\n         :param exc_class_or_code: Any exception class, or an HTTP status\n             code as an integer.\n         """"""\n-        exc_class: t.Type[Exception]\n+        exc_class: type[Exception]\n \n         if isinstance(exc_class_or_code, int):\n             try:\n'",1.95,1.95
src/flask/sessions.py,src/flask/sessions.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import hashlib\n import typing as t\n from collections.abc import MutableMapping\n@@ -92,7 +94,7 @@ class NullSession(SecureCookieSession):\n     but fail on setting.\n     """"""\n \n-    def _fail(self, *args: t.Any, **kwargs: t.Any) -> ""te.NoReturn"":\n+    def _fail(self, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n         raise RuntimeError(\n             ""The session is unavailable because no secret ""\n             ""key was set.  Set the secret_key on the ""\n@@ -153,7 +155,7 @@ class SessionInterface:\n     #: .. versionadded:: 0.10\n     pickle_based = False\n \n-    def make_null_session(self, app: ""Flask"") -> NullSession:\n+    def make_null_session(self, app: Flask) -> NullSession:\n         """"""Creates a null session which acts as a replacement object if the\n         real session support could not be loaded due to a configuration\n         error.  This mainly aids the user experience because the job of the\n@@ -174,11 +176,11 @@ class SessionInterface:\n         """"""\n         return isinstance(obj, self.null_session_class)\n \n-    def get_cookie_name(self, app: ""Flask"") -> str:\n+    def get_cookie_name(self, app: Flask) -> str:\n         """"""The name of the session cookie. Uses``app.config[""SESSION_COOKIE_NAME""]``.""""""\n         return app.config[""SESSION_COOKIE_NAME""]\n \n-    def get_cookie_domain(self, app: ""Flask"") -> t.Optional[str]:\n+    def get_cookie_domain(self, app: Flask) -> str | None:\n         """"""The value of the ``Domain`` parameter on the session cookie. If not set,\n         browsers will only send the cookie to the exact domain it was set from.\n         Otherwise, they will send it to any subdomain of the given value as well.\n@@ -191,7 +193,7 @@ class SessionInterface:\n         rv = app.config[""SESSION_COOKIE_DOMAIN""]\n         return rv if rv else None\n \n-    def get_cookie_path(self, app: ""Flask"") -> str:\n+    def get_cookie_path(self, app: Flask) -> str:\n         """"""Returns the path for which the cookie should be valid.  The\n         default implementation uses the value from the ``SESSION_COOKIE_PATH``\n         config var if it\'s set, and falls back to ``APPLICATION_ROOT`` or\n@@ -199,29 +201,27 @@ class SessionInterface:\n         """"""\n         return app.config[""SESSION_COOKIE_PATH""] or app.config[""APPLICATION_ROOT""]\n \n-    def get_cookie_httponly(self, app: ""Flask"") -> bool:\n+    def get_cookie_httponly(self, app: Flask) -> bool:\n         """"""Returns True if the session cookie should be httponly.  This\n         currently just returns the value of the ``SESSION_COOKIE_HTTPONLY``\n         config var.\n         """"""\n         return app.config[""SESSION_COOKIE_HTTPONLY""]\n \n-    def get_cookie_secure(self, app: ""Flask"") -> bool:\n+    def get_cookie_secure(self, app: Flask) -> bool:\n         """"""Returns True if the cookie should be secure.  This currently\n         just returns the value of the ``SESSION_COOKIE_SECURE`` setting.\n         """"""\n         return app.config[""SESSION_COOKIE_SECURE""]\n \n-    def get_cookie_samesite(self, app: ""Flask"") -> str:\n+    def get_cookie_samesite(self, app: Flask) -> str:\n         """"""Return ``\'Strict\'`` or ``\'Lax\'`` if the cookie should use the\n         ``SameSite`` attribute. This currently just returns the value of\n         the :data:`SESSION_COOKIE_SAMESITE` setting.\n         """"""\n         return app.config[""SESSION_COOKIE_SAMESITE""]\n \n-    def get_expiration_time(\n-        self, app: ""Flask"", session: SessionMixin\n-    ) -> t.Optional[datetime]:\n+    def get_expiration_time(self, app: Flask, session: SessionMixin) -> datetime | None:\n         """"""A helper method that returns an expiration date for the session\n         or ``None`` if the session is linked to the browser session.  The\n         default implementation returns now + the permanent session\n@@ -231,7 +231,7 @@ class SessionInterface:\n             return datetime.now(timezone.utc) + app.permanent_session_lifetime\n         return None\n \n-    def should_set_cookie(self, app: ""Flask"", session: SessionMixin) -> bool:\n+    def should_set_cookie(self, app: Flask, session: SessionMixin) -> bool:\n         """"""Used by session backends to determine if a ``Set-Cookie`` header\n         should be set for this session cookie for this response. If the session\n         has been modified, the cookie is set. If the session is permanent and\n@@ -247,9 +247,7 @@ class SessionInterface:\n             session.permanent and app.config[""SESSION_REFRESH_EACH_REQUEST""]\n         )\n \n-    def open_session(\n-        self, app: ""Flask"", request: ""Request""\n-    ) -> t.Optional[SessionMixin]:\n+    def open_session(self, app: Flask, request: Request) -> SessionMixin | None:\n         """"""This is called at the beginning of each request, after\n         pushing the request context, before matching the URL.\n \n@@ -264,7 +262,7 @@ class SessionInterface:\n         raise NotImplementedError()\n \n     def save_session(\n-        self, app: ""Flask"", session: SessionMixin, response: ""Response""\n+        self, app: Flask, session: SessionMixin, response: Response\n     ) -> None:\n         """"""This is called at the end of each request, after generating\n         a response, before removing the request context. It is skipped\n@@ -295,9 +293,7 @@ class SecureCookieSessionInterface(SessionInterface):\n     serializer = session_json_serializer\n     session_class = SecureCookieSession\n \n-    def get_signing_serializer(\n-        self, app: ""Flask""\n-    ) -> t.Optional[URLSafeTimedSerializer]:\n+    def get_signing_serializer(self, app: Flask) -> URLSafeTimedSerializer | None:\n         if not app.secret_key:\n             return None\n         signer_kwargs = dict(\n@@ -310,9 +306,7 @@ class SecureCookieSessionInterface(SessionInterface):\n             signer_kwargs=signer_kwargs,\n         )\n \n-    def open_session(\n-        self, app: ""Flask"", request: ""Request""\n-    ) -> t.Optional[SecureCookieSession]:\n+    def open_session(self, app: Flask, request: Request) -> SecureCookieSession | None:\n         s = self.get_signing_serializer(app)\n         if s is None:\n             return None\n@@ -327,7 +321,7 @@ class SecureCookieSessionInterface(SessionInterface):\n             return self.session_class()\n \n     def save_session(\n-        self, app: ""Flask"", session: SessionMixin, response: ""Response""\n+        self, app: Flask, session: SessionMixin, response: Response\n     ) -> None:\n         name = self.get_cookie_name(app)\n         domain = self.get_cookie_domain(app)\n'",1.565217391304348,1.565217391304348
src/flask/templating.py,src/flask/templating.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n \n from jinja2 import BaseLoader\n@@ -18,13 +20,13 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .scaffold import Scaffold\n \n \n-def _default_template_ctx_processor() -> t.Dict[str, t.Any]:\n+def _default_template_ctx_processor() -> dict[str, t.Any]:\n     """"""Default template context processor.  Injects `request`,\n     `session` and `g`.\n     """"""\n     appctx = _cv_app.get(None)\n     reqctx = _cv_request.get(None)\n-    rv: t.Dict[str, t.Any] = {}\n+    rv: dict[str, t.Any] = {}\n     if appctx is not None:\n         rv[""g""] = appctx.g\n     if reqctx is not None:\n@@ -39,7 +41,7 @@ class Environment(BaseEnvironment):\n     name of the blueprint to referenced templates if necessary.\n     """"""\n \n-    def __init__(self, app: ""Flask"", **options: t.Any) -> None:\n+    def __init__(self, app: Flask, **options: t.Any) -> None:\n         if ""loader"" not in options:\n             options[""loader""] = app.create_global_jinja_loader()\n         BaseEnvironment.__init__(self, **options)\n@@ -51,24 +53,22 @@ class DispatchingJinjaLoader(BaseLoader):\n     the blueprint folders.\n     """"""\n \n-    def __init__(self, app: ""Flask"") -> None:\n+    def __init__(self, app: Flask) -> None:\n         self.app = app\n \n     def get_source(  # type: ignore\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n+    ) -> tuple[str, str | None, t.Callable | None]:\n         if self.app.config[""EXPLAIN_TEMPLATE_LOADING""]:\n             return self._get_source_explained(environment, template)\n         return self._get_source_fast(environment, template)\n \n     def _get_source_explained(\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n+    ) -> tuple[str, str | None, t.Callable | None]:\n         attempts = []\n-        rv: t.Optional[t.Tuple[str, t.Optional[str], t.Optional[t.Callable[[], bool]]]]\n-        trv: t.Optional[\n-            t.Tuple[str, t.Optional[str], t.Optional[t.Callable[[], bool]]]\n-        ] = None\n+        rv: tuple[str, str | None, t.Callable[[], bool] | None] | None\n+        trv: None | (tuple[str, str | None, t.Callable[[], bool] | None]) = None\n \n         for srcobj, loader in self._iter_loaders(template):\n             try:\n@@ -89,7 +89,7 @@ class DispatchingJinjaLoader(BaseLoader):\n \n     def _get_source_fast(\n         self, environment: Environment, template: str\n-    ) -> t.Tuple[str, t.Optional[str], t.Optional[t.Callable]]:\n+    ) -> tuple[str, str | None, t.Callable | None]:\n         for _srcobj, loader in self._iter_loaders(template):\n             try:\n                 return loader.get_source(environment, template)\n@@ -99,7 +99,7 @@ class DispatchingJinjaLoader(BaseLoader):\n \n     def _iter_loaders(\n         self, template: str\n-    ) -> t.Generator[t.Tuple[""Scaffold"", BaseLoader], None, None]:\n+    ) -> t.Generator[tuple[Scaffold, BaseLoader], None, None]:\n         loader = self.app.jinja_loader\n         if loader is not None:\n             yield self.app, loader\n@@ -109,7 +109,7 @@ class DispatchingJinjaLoader(BaseLoader):\n             if loader is not None:\n                 yield blueprint, loader\n \n-    def list_templates(self) -> t.List[str]:\n+    def list_templates(self) -> list[str]:\n         result = set()\n         loader = self.app.jinja_loader\n         if loader is not None:\n@@ -124,7 +124,7 @@ class DispatchingJinjaLoader(BaseLoader):\n         return list(result)\n \n \n-def _render(app: ""Flask"", template: Template, context: t.Dict[str, t.Any]) -> str:\n+def _render(app: Flask, template: Template, context: dict[str, t.Any]) -> str:\n     app.update_template_context(context)\n     before_render_template.send(\n         app, _async_wrapper=app.ensure_sync, template=template, context=context\n@@ -137,7 +137,7 @@ def _render(app: ""Flask"", template: Template, context: t.Dict[str, t.Any]) -> st\n \n \n def render_template(\n-    template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n+    template_name_or_list: str | Template | list[str | Template],\n     **context: t.Any,\n ) -> str:\n     """"""Render a template by name with the given context.\n@@ -164,7 +164,7 @@ def render_template_string(source: str, **context: t.Any) -> str:\n \n \n def _stream(\n-    app: ""Flask"", template: Template, context: t.Dict[str, t.Any]\n+    app: Flask, template: Template, context: dict[str, t.Any]\n ) -> t.Iterator[str]:\n     app.update_template_context(context)\n     before_render_template.send(\n@@ -187,7 +187,7 @@ def _stream(\n \n \n def stream_template(\n-    template_name_or_list: t.Union[str, Template, t.List[t.Union[str, Template]]],\n+    template_name_or_list: str | Template | list[str | Template],\n     **context: t.Any,\n ) -> t.Iterator[str]:\n     """"""Render a template by name with the given context as a stream.\n'",2.2,2.2
src/flask/testing.py,src/flask/testing.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n from contextlib import contextmanager\n from contextlib import ExitStack\n@@ -43,11 +45,11 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n \n     def __init__(\n         self,\n-        app: ""Flask"",\n+        app: Flask,\n         path: str = ""/"",\n-        base_url: t.Optional[str] = None,\n-        subdomain: t.Optional[str] = None,\n-        url_scheme: t.Optional[str] = None,\n+        base_url: str | None = None,\n+        subdomain: str | None = None,\n+        url_scheme: str | None = None,\n         *args: t.Any,\n         **kwargs: t.Any,\n     ) -> None:\n@@ -104,12 +106,12 @@ class FlaskClient(Client):\n     Basic usage is outlined in the :doc:`/testing` chapter.\n     """"""\n \n-    application: ""Flask""\n+    application: Flask\n \n     def __init__(self, *args: t.Any, **kwargs: t.Any) -> None:\n         super().__init__(*args, **kwargs)\n         self.preserve_context = False\n-        self._new_contexts: t.List[t.ContextManager[t.Any]] = []\n+        self._new_contexts: list[t.ContextManager[t.Any]] = []\n         self._context_stack = ExitStack()\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n@@ -199,7 +201,7 @@ class FlaskClient(Client):\n         buffered: bool = False,\n         follow_redirects: bool = False,\n         **kwargs: t.Any,\n-    ) -> ""TestResponse"":\n+    ) -> TestResponse:\n         if args and isinstance(\n             args[0], (werkzeug.test.EnvironBuilder, dict, BaseRequest)\n         ):\n@@ -238,7 +240,7 @@ class FlaskClient(Client):\n \n         return response\n \n-    def __enter__(self) -> ""FlaskClient"":\n+    def __enter__(self) -> FlaskClient:\n         if self.preserve_context:\n             raise RuntimeError(""Cannot nest client invocations"")\n         self.preserve_context = True\n@@ -246,9 +248,9 @@ class FlaskClient(Client):\n \n     def __exit__(\n         self,\n-        exc_type: t.Optional[type],\n-        exc_value: t.Optional[BaseException],\n-        tb: t.Optional[TracebackType],\n+        exc_type: type | None,\n+        exc_value: BaseException | None,\n+        tb: TracebackType | None,\n     ) -> None:\n         self.preserve_context = False\n         self._context_stack.close()\n@@ -260,7 +262,7 @@ class FlaskCliRunner(CliRunner):\n     :meth:`~flask.Flask.test_cli_runner`. See :ref:`testing-cli`.\n     """"""\n \n-    def __init__(self, app: ""Flask"", **kwargs: t.Any) -> None:\n+    def __init__(self, app: Flask, **kwargs: t.Any) -> None:\n         self.app = app\n         super().__init__(**kwargs)\n \n'",3.4545454545454546,3.4545454545454546
src/flask/typing.py,src/flask/typing.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n \n if t.TYPE_CHECKING:  # pragma: no cover\n'",0,0
src/flask/views.py,src/flask/views.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n \n from . import typing as ft\n@@ -45,12 +47,12 @@ class View:\n     #: The methods this view is registered for. Uses the same default\n     #: (``[""GET"", ""HEAD"", ""OPTIONS""]``) as ``route`` and\n     #: ``add_url_rule`` by default.\n-    methods: t.ClassVar[t.Optional[t.Collection[str]]] = None\n+    methods: t.ClassVar[t.Collection[str] | None] = None\n \n     #: Control whether the ``OPTIONS`` method is handled automatically.\n     #: Uses the same default (``True``) as ``route`` and\n     #: ``add_url_rule`` by default.\n-    provide_automatic_options: t.ClassVar[t.Optional[bool]] = None\n+    provide_automatic_options: t.ClassVar[bool | None] = None\n \n     #: A list of decorators to apply, in order, to the generated view\n     #: function. Remember that ``@decorator`` syntax is applied bottom\n@@ -58,7 +60,7 @@ class View:\n     #: decorator.\n     #:\n     #: .. versionadded:: 0.8\n-    decorators: t.ClassVar[t.List[t.Callable]] = []\n+    decorators: t.ClassVar[list[t.Callable]] = []\n \n     #: Create a new instance of this view class for every request by\n     #: default. If a view subclass sets this to ``False``, the same\n'",2.8333333333333335,2.8333333333333335
src/flask/wrappers.py,src/flask/wrappers.py,44ffe6c6d6c90a414de32db1b03d5978f8770271,cfa863c357c4a40cfc11fe1b9a4f36d8e75cf52f,'add __future__ annotations',"'@@ -1,3 +1,5 @@\n+from __future__ import annotations\n+\n import typing as t\n \n from werkzeug.exceptions import BadRequest\n@@ -37,20 +39,20 @@ class Request(RequestBase):\n     #: because the request was never internally bound.\n     #:\n     #: .. versionadded:: 0.6\n-    url_rule: t.Optional[""Rule""] = None\n+    url_rule: Rule | None = None\n \n     #: A dict of view arguments that matched the request.  If an exception\n     #: happened when matching, this will be ``None``.\n-    view_args: t.Optional[t.Dict[str, t.Any]] = None\n+    view_args: dict[str, t.Any] | None = None\n \n     #: If matching the URL failed, this is the exception that will be\n     #: raised / was raised as part of the request handling.  This is\n     #: usually a :exc:`~werkzeug.exceptions.NotFound` exception or\n     #: something similar.\n-    routing_exception: t.Optional[Exception] = None\n+    routing_exception: Exception | None = None\n \n     @property\n-    def max_content_length(self) -> t.Optional[int]:  # type: ignore\n+    def max_content_length(self) -> int | None:  # type: ignore\n         """"""Read-only view of the ``MAX_CONTENT_LENGTH`` config key.""""""\n         if current_app:\n             return current_app.config[""MAX_CONTENT_LENGTH""]\n@@ -58,7 +60,7 @@ class Request(RequestBase):\n             return None\n \n     @property\n-    def endpoint(self) -> t.Optional[str]:\n+    def endpoint(self) -> str | None:\n         """"""The endpoint that matched the request URL.\n \n         This will be ``None`` if matching failed or has not been\n@@ -73,7 +75,7 @@ class Request(RequestBase):\n         return None\n \n     @property\n-    def blueprint(self) -> t.Optional[str]:\n+    def blueprint(self) -> str | None:\n         """"""The registered name of the current blueprint.\n \n         This will be ``None`` if the endpoint is not part of a\n@@ -92,7 +94,7 @@ class Request(RequestBase):\n         return None\n \n     @property\n-    def blueprints(self) -> t.List[str]:\n+    def blueprints(self) -> list[str]:\n         """"""The registered names of the current blueprint upwards through\n         parent blueprints.\n \n@@ -123,7 +125,7 @@ class Request(RequestBase):\n \n             attach_enctype_error_multidict(self)\n \n-    def on_json_loading_failed(self, e: t.Optional[ValueError]) -> t.Any:\n+    def on_json_loading_failed(self, e: ValueError | None) -> t.Any:\n         try:\n             return super().on_json_loading_failed(e)\n         except BadRequest as e:\n@@ -151,7 +153,7 @@ class Response(ResponseBase):\n         Added :attr:`max_cookie_size`.\n     """"""\n \n-    default_mimetype: t.Optional[str] = ""text/html""\n+    default_mimetype: str | None = ""text/html""\n \n     json_module = json\n \n'",2.857142857142857,2.857142857142857
README.rst,README.rst,f139024b1ca637cc6df694f49817bdb8ec294561,a4ea5df5d565128118b6ceaaf372233eef23e238,'remove old links',"'@@ -77,6 +77,4 @@ Links\n -   PyPI Releases: https://pypi.org/project/Flask/\n -   Source Code: https://github.com/pallets/flask/\n -   Issue Tracker: https://github.com/pallets/flask/issues/\n--   Website: https://palletsprojects.com/p/flask/\n--   Twitter: https://twitter.com/PalletsTeam\n -   Chat: https://discord.gg/pallets\n'",1.0,1.0
docs/conf.py,docs/conf.py,f139024b1ca637cc6df694f49817bdb8ec294561,a4ea5df5d565128118b6ceaaf372233eef23e238,'remove old links',"'@@ -43,8 +43,6 @@ html_context = {\n         ProjectLink(""PyPI Releases"", ""https://pypi.org/project/Flask/""),\n         ProjectLink(""Source Code"", ""https://github.com/pallets/flask/""),\n         ProjectLink(""Issue Tracker"", ""https://github.com/pallets/flask/issues/""),\n-        ProjectLink(""Website"", ""https://palletsprojects.com/p/flask/""),\n-        ProjectLink(""Twitter"", ""https://twitter.com/PalletsTeam""),\n         ProjectLink(""Chat"", ""https://discord.gg/pallets""),\n     ]\n }\n'",3.0,3.0
pyproject.toml,pyproject.toml,f139024b1ca637cc6df694f49817bdb8ec294561,a4ea5df5d565128118b6ceaaf372233eef23e238,'remove old links',"'@@ -35,7 +35,6 @@ Documentation = ""https://flask.palletsprojects.com/""\n Changes = ""https://flask.palletsprojects.com/changes/""\n ""Source Code"" = ""https://github.com/pallets/flask/""\n ""Issue Tracker"" = ""https://github.com/pallets/flask/issues/""\n-Twitter = ""https://twitter.com/PalletsTeam""\n Chat = ""https://discord.gg/pallets""\n \n [project.optional-dependencies]\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,9659b11a45281662c6aa1194dc95b46b1f566ba6,f139024b1ca637cc6df694f49817bdb8ec294561,'remove pypy 3.8 and 3.7 from tests',"""@@ -33,8 +33,8 @@ jobs:\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: 'PyPy', python: 'pypy-3.9', os: ubuntu-latest, tox: pypy39}\n-          - {name: 'Pallets Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n-          - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n+          - {name: 'Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n+          - {name: 'Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n""",0,0
tox.ini,tox.ini,9659b11a45281662c6aa1194dc95b46b1f566ba6,f139024b1ca637cc6df694f49817bdb8ec294561,'remove pypy 3.8 and 3.7 from tests',"'@@ -1,7 +1,7 @@\n [tox]\n envlist =\n     py3{12,11,10,9,8,7}\n-    pypy3{9,8,7}\n+    pypy39\n     py311-min\n     py37-dev\n     style\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"""@@ -31,10 +31,9 @@ jobs:\n           - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n-          - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: 'PyPy', python: 'pypy-3.9', os: ubuntu-latest, tox: pypy39}\n           - {name: 'Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n-          - {name: 'Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n+          - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -6,7 +6,7 @@ repos:\n     rev: v3.3.1\n     hooks:\n       - id: pyupgrade\n-        args: [""--py37-plus""]\n+        args: [""--py38-plus""]\n   - repo: https://github.com/asottile/reorder_python_imports\n     rev: v3.9.0\n     hooks:\n'",0,0
CHANGES.rst,CHANGES.rst,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -3,6 +3,7 @@ Version 2.3.0\n \n Unreleased\n \n+-   Drop support for Python 3.7. :pr:`5072`\n -   Remove previously deprecated code. :pr:`4995`\n \n     -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and\n'",0,0
docs/extensiondev.rst,docs/extensiondev.rst,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -293,9 +293,8 @@ ecosystem remain consistent and compatible.\n     any particular version scheme, but should use lower bounds to\n     indicate minimum compatibility support. For example,\n     ``sqlalchemy>=1.4``.\n-9.  Indicate the versions of Python supported using\n-    ``python_requires="">=version""``. Flask itself supports Python >=3.7\n-    as of December 2021, but this will update over time.\n+9.  Indicate the versions of Python supported using ``python_requires="">=version""``.\n+    Flask itself supports Python >=3.8 as of April 2023, but this will update over time.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _Discord Chat: https://discord.gg/pallets\n'",1.1428571428571428,1.1428571428571428
docs/installation.rst,docs/installation.rst,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -5,8 +5,7 @@ Installation\n Python Version\n --------------\n \n-We recommend using the latest version of Python. Flask supports Python\n-3.7 and newer.\n+We recommend using the latest version of Python. Flask supports Python 3.8 and newer.\n \n \n Dependencies\n'",0,0
examples/celery/pyproject.toml,examples/celery/pyproject.toml,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -3,7 +3,7 @@ name = ""flask-example-celery""\n version = ""1.0.0""\n description = ""Example Flask application with Celery background tasks.""\n readme = ""README.md""\n-requires-python = "">=3.7""\n+requires-python = "">=3.8""\n dependencies = [""flask>=2.2.2"", ""celery[redis]>=5.2.7""]\n \n [build-system]\n'",0,0
pyproject.toml,pyproject.toml,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -18,7 +18,7 @@ classifiers = [\n     ""Topic :: Internet :: WWW/HTTP :: WSGI :: Application"",\n     ""Topic :: Software Development :: Libraries :: Application Frameworks"",\n ]\n-requires-python = "">=3.7""\n+requires-python = "">=3.8""\n dependencies = [\n     ""Werkzeug>=2.2.2"",\n     ""Jinja2>=3.0"",\n@@ -67,7 +67,7 @@ source = [""flask"", ""tests""]\n source = [""src"", ""*/site-packages""]\n \n [tool.mypy]\n-python_version = ""3.7""\n+python_version = ""3.8""\n files = [""src/flask""]\n show_error_codes = true\n pretty = true\n'",0,0
requirements/tests.in,requirements/tests.in,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -1,4 +1,4 @@\n pytest\n asgiref\n greenlet ; python_version < ""3.11""\n-python-dotenv>=1; python_version >= ""3.8""\n+python-dotenv\n'",0,0
requirements/tests.txt,requirements/tests.txt,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -1,4 +1,4 @@\n-# SHA1:3c8dde35aba20388b22430b17974af8ef8205b4f\n+# SHA1:42d37aff22e2f1fc447e20d483e13d6d4e066b10\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -15,5 +15,5 @@ pluggy==1.0.0\n     # via pytest\n pytest==7.3.1\n     # via -r requirements/tests.in\n-python-dotenv==1.0.0 ; python_version >= ""3.8""\n+python-dotenv==1.0.0\n     # via -r requirements/tests.in\n'",0,0
src/flask/app.py,src/flask/app.py,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -1,7 +1,5 @@\n from __future__ import annotations\n \n-import functools\n-import inspect\n import logging\n import os\n import sys\n@@ -9,6 +7,7 @@ import typing as t\n import weakref\n from collections.abc import Iterator as _abc_Iterator\n from datetime import timedelta\n+from inspect import iscoroutinefunction\n from itertools import chain\n from types import TracebackType\n from urllib.parse import quote as _url_quote\n@@ -70,7 +69,6 @@ from .wrappers import Request\n from .wrappers import Response\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    import typing_extensions as te\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n@@ -83,19 +81,6 @@ T_template_filter = t.TypeVar(""T_template_filter"", bound=ft.TemplateFilterCallab\n T_template_global = t.TypeVar(""T_template_global"", bound=ft.TemplateGlobalCallable)\n T_template_test = t.TypeVar(""T_template_test"", bound=ft.TemplateTestCallable)\n \n-if sys.version_info >= (3, 8):\n-    iscoroutinefunction = inspect.iscoroutinefunction\n-else:\n-\n-    def iscoroutinefunction(func: t.Any) -> bool:\n-        while inspect.ismethod(func):\n-            func = func.__func__\n-\n-        while isinstance(func, functools.partial):\n-            func = func.func\n-\n-        return inspect.iscoroutinefunction(func)\n-\n \n def _make_timedelta(value: timedelta | int | None) -> timedelta | None:\n     if value is None or isinstance(value, timedelta):\n@@ -1430,7 +1415,7 @@ class Flask(Scaffold):\n             f""Exception on {request.path} [{request.method}]"", exc_info=exc_info\n         )\n \n-    def raise_routing_exception(self, request: Request) -> te.NoReturn:\n+    def raise_routing_exception(self, request: Request) -> t.NoReturn:\n         """"""Intercept routing exceptions and possibly do something else.\n \n         In debug mode, intercept a routing redirect and replace it with\n'",3.3230769230769233,3.328125
src/flask/helpers.py,src/flask/helpers.py,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -25,7 +25,6 @@ from .signals import message_flashed\n if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.wrappers import Response as BaseResponse\n     from .wrappers import Response\n-    import typing_extensions as te\n \n \n def get_debug_flag() -> bool:\n@@ -257,7 +256,7 @@ def redirect(\n     return _wz_redirect(location, code=code, Response=Response)\n \n \n-def abort(code: int | BaseResponse, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n+def abort(code: int | BaseResponse, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n     """"""Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given\n     status code.\n \n'",2.227272727272727,2.227272727272727
src/flask/sessions.py,src/flask/sessions.py,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -13,7 +13,6 @@ from werkzeug.datastructures import CallbackDict\n from .json.tag import TaggedJSONSerializer\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    import typing_extensions as te\n     from .app import Flask\n     from .wrappers import Request, Response\n \n@@ -94,7 +93,7 @@ class NullSession(SecureCookieSession):\n     but fail on setting.\n     """"""\n \n-    def _fail(self, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n+    def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n         raise RuntimeError(\n             ""The session is unavailable because no secret ""\n             ""key was set.  Set the secret_key on the ""\n'",1.565217391304348,1.565217391304348
tests/typing/typing_route.py,tests/typing/typing_route.py,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -3,8 +3,6 @@ from __future__ import annotations\n import typing as t\n from http import HTTPStatus\n \n-import typing_extensions as te\n-\n from flask import Flask\n from flask import jsonify\n from flask import stream_template\n@@ -40,7 +38,7 @@ def hello_json_list() -> t.List[t.Any]:\n     return [{""message"": ""Hello""}, {""message"": ""World""}]\n \n \n-class StatusJSON(te.TypedDict):\n+class StatusJSON(t.TypedDict):\n     status: str\n \n \n'",1.1666666666666667,1.1666666666666667
tox.ini,tox.ini,2e8fe7b2f2b541a60c90c625446647b22c5cacc2,9659b11a45281662c6aa1194dc95b46b1f566ba6,'drop support for python 3.7',"'@@ -1,9 +1,9 @@\n [tox]\n envlist =\n-    py3{12,11,10,9,8,7}\n+    py3{12,11,10,9,8}\n     pypy39\n     py311-min\n-    py37-dev\n+    py38-dev\n     style\n     typing\n     docs\n'",0,0
docs/signals.rst,docs/signals.rst,d48deba27331f11e19599af2a5b6e64476fd90da,2b2a7641430bc7d40dba3c8d701636fc9b16530c,'Remove double period in signals documentation page',"'@@ -99,7 +99,7 @@ Creating Signals\n \n If you want to use signals in your own application, you can use the\n blinker library directly.  The most common use case are named signals in a\n-custom :class:`~blinker.base.Namespace`..  This is what is recommended\n+custom :class:`~blinker.base.Namespace`.  This is what is recommended\n most of the time::\n \n     from blinker import Namespace\n'",1.3333333333333333,1.3333333333333333
tox.ini,tox.ini,427e5dc4f3d82b67a75f4be21360818fd4fbf05e,db7d2d2d685c004ea8da6cbcc7c56ecc36276632,'update dev env',"'@@ -3,7 +3,7 @@ envlist =\n     py3{12,11,10,9,8,7}\n     pypy3{9,8,7}\n     py311-min\n-    py37-dev\n+    py38-dev\n     style\n     typing\n     docs\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,64bc45874daf4b9828830ea0037a19beb8364ee3,427e5dc4f3d82b67a75f4be21360818fd4fbf05e,'update dev dependencies',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.1\n+    rev: v3.3.2\n     hooks:\n       - id: pyupgrade\n         args: [""--py37-plus""]\n'",0,0
requirements/dev.txt,requirements/dev.txt,64bc45874daf4b9828830ea0037a19beb8364ee3,427e5dc4f3d82b67a75f4be21360818fd4fbf05e,'update dev dependencies',"'@@ -24,7 +24,7 @@ colorama==0.4.6\n     # via tox\n distlib==0.3.6\n     # via virtualenv\n-filelock==3.11.0\n+filelock==3.12.0\n     # via\n     #   tox\n     #   virtualenv\n@@ -36,7 +36,7 @@ pip-compile-multi==2.6.2\n     # via -r requirements/dev.in\n pip-tools==6.13.0\n     # via pip-compile-multi\n-platformdirs==3.2.0\n+platformdirs==3.3.0\n     # via\n     #   tox\n     #   virtualenv\n@@ -50,9 +50,9 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.4.12\n+tox==4.5.0\n     # via -r requirements/dev.in\n-virtualenv==20.21.0\n+virtualenv==20.22.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,64bc45874daf4b9828830ea0037a19beb8364ee3,427e5dc4f3d82b67a75f4be21360818fd4fbf05e,'update dev dependencies',"'@@ -29,9 +29,9 @@ packaging==23.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.0.3\n+pallets-sphinx-themes==2.1.0\n     # via -r requirements/docs.in\n-pygments==2.15.0\n+pygments==2.15.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n'",0,0
requirements/typing.txt,requirements/typing.txt,64bc45874daf4b9828830ea0037a19beb8364ee3,427e5dc4f3d82b67a75f4be21360818fd4fbf05e,'update dev dependencies',"'@@ -19,7 +19,7 @@ types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==67.6.0.7\n+types-setuptools==67.7.0.0\n     # via -r requirements/typing.in\n typing-extensions==4.5.0\n     # via mypy\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,2d460685b1b3d66c713739ee91183c22fb2e5dc8,64bc45874daf4b9828830ea0037a19beb8364ee3,'update dev env',"""@@ -34,7 +34,7 @@ jobs:\n           - {name: '3.7', python: '3.7', os: ubuntu-latest, tox: py37}\n           - {name: 'PyPy', python: 'pypy-3.9', os: ubuntu-latest, tox: pypy39}\n           - {name: 'Pallets Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n-          - {name: 'Pallets Development Versions', python: '3.7', os: ubuntu-latest, tox: py37-dev}\n+          - {name: 'Pallets Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c\n""",0,0
CHANGES.rst,CHANGES.rst,74e03298200e33951ca350a35aa3a8c0b4ff8177,2d460685b1b3d66c713739ee91183c22fb2e5dc8,'release version 2.2.4',"'@@ -1,7 +1,7 @@\n Version 2.2.4\n -------------\n \n-Unreleased\n+Released 2023-04-25\n \n -   Update for compatibility with Werkzeug 2.3.\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,74e03298200e33951ca350a35aa3a8c0b4ff8177,2d460685b1b3d66c713739ee91183c22fb2e5dc8,'release version 2.2.4',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.3""\n+__version__ = ""2.2.4""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,79ebf6c39cba01b240a926b899b7d0828e63fc4b,73739a29f4c16cf539b57e711a4ea2a686cd707a,'update minimum requirements',"'@@ -4,6 +4,8 @@ Version 2.3.0\n Unreleased\n \n -   Drop support for Python 3.7. :pr:`5072`\n+-   Update minimum requirements to the latest versions: Werkzeug>=2.3.0, Jinja2>3.1.2,\n+    itsdangerous>=2.1.2, click>=8.1.3.\n -   Remove previously deprecated code. :pr:`4995`\n \n     -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and\n'",0,0
pyproject.toml,pyproject.toml,79ebf6c39cba01b240a926b899b7d0828e63fc4b,73739a29f4c16cf539b57e711a4ea2a686cd707a,'update minimum requirements',"'@@ -20,10 +20,10 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.2.2"",\n-    ""Jinja2>=3.0"",\n-    ""itsdangerous>=2.0"",\n-    ""click>=8.0"",\n+    ""Werkzeug>=2.3.0"",\n+    ""Jinja2>=3.1.2"",\n+    ""itsdangerous>=2.1.2"",\n+    ""click>=8.1.3"",\n     ""blinker>=1.6.2"",\n     ""importlib-metadata>=3.6.0; python_version < \'3.10\'"",\n ]\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,79ebf6c39cba01b240a926b899b7d0828e63fc4b,73739a29f4c16cf539b57e711a4ea2a686cd707a,'update minimum requirements',"'@@ -1,6 +1,6 @@\n-Werkzeug==2.2.2\n-Jinja2==3.0.0\n+Werkzeug==2.3.0\n+Jinja2==3.1.2\n MarkupSafe==2.1.1\n-itsdangerous==2.0.0\n-click==8.0.0\n+itsdangerous==2.1.2\n+click==8.1.3\n blinker==1.6.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,79ebf6c39cba01b240a926b899b7d0828e63fc4b,73739a29f4c16cf539b57e711a4ea2a686cd707a,'update minimum requirements',"'@@ -1,4 +1,4 @@\n-# SHA1:3f343e92214ba64bc3fc9e3667c8a7d5a2d8ccd6\n+# SHA1:93a20a0c3518e8617dd501183caffc1364455d8d\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -7,16 +7,16 @@\n #\n blinker==1.6.2\n     # via -r requirements/tests-pallets-min.in\n-click==8.0.0\n+click==8.1.3\n     # via -r requirements/tests-pallets-min.in\n-itsdangerous==2.0.0\n+itsdangerous==2.1.2\n     # via -r requirements/tests-pallets-min.in\n-jinja2==3.0.0\n+jinja2==3.1.2\n     # via -r requirements/tests-pallets-min.in\n markupsafe==2.1.1\n     # via\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.2.2\n+werkzeug==2.3.0\n     # via -r requirements/tests-pallets-min.in\n'",0,0
src/flask/app.py,src/flask/app.py,79ebf6c39cba01b240a926b899b7d0828e63fc4b,73739a29f4c16cf539b57e711a4ea2a686cd707a,'update minimum requirements',"'@@ -1852,7 +1852,7 @@ class Flask(Scaffold):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)  # type: ignore[arg-type]\n+            rv.headers.update(headers)\n \n         return rv\n \n'",3.328125,3.328125
CHANGES.rst,CHANGES.rst,8728c3e4cd4e929a4327d917acd4b96c75f963d0,eb33b8c8096322becac743fb6eb466aebf7af6b9,'release version 2.3.0',"'@@ -1,7 +1,7 @@\n Version 2.3.0\n -------------\n \n-Unreleased\n+Released 2023-04-25\n \n -   Drop support for Python 3.7. :pr:`5072`\n -   Update minimum requirements to the latest versions: Werkzeug>=2.3.0, Jinja2>3.1.2,\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,8728c3e4cd4e929a4327d917acd4b96c75f963d0,eb33b8c8096322becac743fb6eb466aebf7af6b9,'release version 2.3.0',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.0.dev""\n+__version__ = ""2.3.0""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,345f18442ceb29f9e365af99fc85bdc5986323d2,5f4072423ec6ee0c71d5995bec41e59d044e7737,'start version 2.3.1',"'@@ -1,3 +1,9 @@\n+Version 2.3.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.3.0\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,345f18442ceb29f9e365af99fc85bdc5986323d2,5f4072423ec6ee0c71d5995bec41e59d044e7737,'start version 2.3.1',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.0""\n+__version__ = ""2.3.1.dev""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,0ec9192cf25f5187d6521f2539489fa8d55336bb,345f18442ceb29f9e365af99fc85bdc5986323d2,'fix importing Markup from flask',"'@@ -3,6 +3,8 @@ Version 2.3.1\n \n Unreleased\n \n+-   Restore deprecated ``from flask import Markup``. :issue:`5084`\n+\n \n Version 2.3.0\n -------------\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,0ec9192cf25f5187d6521f2539489fa8d55336bb,345f18442ceb29f9e365af99fc85bdc5986323d2,'fix importing Markup from flask',"'@@ -76,7 +76,7 @@ def __getattr__(name):\n         )\n         return escape\n \n-    if name == ""escape"":\n+    if name == ""Markup"":\n         import warnings\n         from markupsafe import Markup\n \n'",6.0,6.0
CHANGES.rst,CHANGES.rst,721abdc3810057269503a72d2db80fb826f3c85c,0867dce42c1a193bfe7fb5f92f0ccaa622643f48,'release version 2.3.1',"'@@ -1,7 +1,7 @@\n Version 2.3.1\n -------------\n \n-Unreleased\n+Released 2023-04-25\n \n -   Restore deprecated ``from flask import Markup``. :issue:`5084`\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,721abdc3810057269503a72d2db80fb826f3c85c,0867dce42c1a193bfe7fb5f92f0ccaa622643f48,'release version 2.3.1',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.1.dev""\n+__version__ = ""2.3.1""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,0bc7356ce1ae11e633426902aba76d525f4523da,f07fb2b607c1eaa724ca9bfe43e2dc20d97d34de,'start version 2.3.2',"'@@ -1,3 +1,9 @@\n+Version 2.3.2\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.3.1\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,0bc7356ce1ae11e633426902aba76d525f4523da,f07fb2b607c1eaa724ca9bfe43e2dc20d97d34de,'start version 2.3.2',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.1""\n+__version__ = ""2.3.2.dev""\n \n \n def __getattr__(name):\n'",6.0,6.0
src/flask/app.py,src/flask/app.py,9532cba45d2339e90ebf04f178b1e4f2064e7328,0bc7356ce1ae11e633426902aba76d525f4523da,'fix mypy finding',"'@@ -1852,7 +1852,7 @@ class Flask(Scaffold):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)\n+            rv.headers.update(headers)  # type: ignore[arg-type]\n \n         return rv\n \n'",3.328125,3.328125
src/flask/sessions.py,src/flask/sessions.py,8705dd39c4fa563ea0fe0bf84c85da8fcc98b88d,9532cba45d2339e90ebf04f178b1e4f2064e7328,'set `Vary: Cookie` header consistently for session',"'@@ -329,6 +329,10 @@ class SecureCookieSessionInterface(SessionInterface):\n         samesite = self.get_cookie_samesite(app)\n         httponly = self.get_cookie_httponly(app)\n \n+        # Add a ""Vary: Cookie"" header if the session was accessed at all.\n+        if session.accessed:\n+            response.vary.add(""Cookie"")\n+\n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n@@ -341,13 +345,10 @@ class SecureCookieSessionInterface(SessionInterface):\n                     samesite=samesite,\n                     httponly=httponly,\n                 )\n+                response.vary.add(""Cookie"")\n \n             return\n \n-        # Add a ""Vary: Cookie"" header if the session was accessed at all.\n-        if session.accessed:\n-            response.vary.add(""Cookie"")\n-\n         if not self.should_set_cookie(app, session):\n             return\n \n@@ -363,3 +364,4 @@ class SecureCookieSessionInterface(SessionInterface):\n             secure=secure,\n             samesite=samesite,\n         )\n+        response.vary.add(""Cookie"")\n'",1.565217391304348,1.565217391304348
tests/test_basic.py,tests/test_basic.py,8705dd39c4fa563ea0fe0bf84c85da8fcc98b88d,9532cba45d2339e90ebf04f178b1e4f2064e7328,'set `Vary: Cookie` header consistently for session',"'@@ -501,6 +501,11 @@ def test_session_vary_cookie(app, client):\n     def setdefault():\n         return flask.session.setdefault(""test"", ""default"")\n \n+    @app.route(""/clear"")\n+    def clear():\n+        flask.session.clear()\n+        return """"\n+\n     @app.route(""/vary-cookie-header-set"")\n     def vary_cookie_header_set():\n         response = flask.Response()\n@@ -533,11 +538,29 @@ def test_session_vary_cookie(app, client):\n     expect(""/get"")\n     expect(""/getitem"")\n     expect(""/setdefault"")\n+    expect(""/clear"")\n     expect(""/vary-cookie-header-set"")\n     expect(""/vary-header-set"", ""Accept-Encoding, Accept-Language, Cookie"")\n     expect(""/no-vary-header"", None)\n \n \n+def test_session_refresh_vary(app, client):\n+    @app.get(""/login"")\n+    def login():\n+        flask.session[""user_id""] = 1\n+        flask.session.permanent = True\n+        return """"\n+\n+    @app.get(""/ignored"")\n+    def ignored():\n+        return """"\n+\n+    rv = client.get(""/login"")\n+    assert rv.headers[""Vary""] == ""Cookie""\n+    rv = client.get(""/ignored"")\n+    assert rv.headers[""Vary""] == ""Cookie""\n+\n+\n def test_flashes(app, req_ctx):\n     assert not flask.session.modified\n     flask.flash(""Zap"")\n'",1.0871369294605808,1.0857142857142856
CHANGES.rst,CHANGES.rst,37badc3ce8b0665e3454547839196a676729309f,70f906c51ce49c485f1d355703e9cc3386b1cc2b,'update changelog',"'@@ -3,6 +3,9 @@ Version 2.3.2\n \n Unreleased\n \n+-   Session cookie sets ``Vary: Cookie`` header when it is accessed, modified, cleared,\n+    or refreshed.\n+\n \n Version 2.3.1\n -------------\n'",0,0
CHANGES.rst,CHANGES.rst,e1aedecdc689cc9a79131851dbdabf6c3bc49c9e,37badc3ce8b0665e3454547839196a676729309f,'update werkzeug',"'@@ -3,8 +3,8 @@ Version 2.3.2\n \n Unreleased\n \n--   Session cookie sets ``Vary: Cookie`` header when it is accessed, modified, cleared,\n-    or refreshed.\n+-   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n+-   Update Werkzeug requirement to >=2.3.3 to apply recent bug fixes.\n \n \n Version 2.3.1\n'",0,0
pyproject.toml,pyproject.toml,e1aedecdc689cc9a79131851dbdabf6c3bc49c9e,37badc3ce8b0665e3454547839196a676729309f,'update werkzeug',"'@@ -20,7 +20,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.0"",\n+    ""Werkzeug>=2.3.3"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
src/flask/testing.py,src/flask/testing.py,e1aedecdc689cc9a79131851dbdabf6c3bc49c9e,37badc3ce8b0665e3454547839196a676729309f,'update werkzeug',"'@@ -138,21 +138,14 @@ class FlaskClient(Client):\n         :meth:`~flask.Flask.test_request_context` which are directly\n         passed through.\n         """"""\n-        # new cookie interface for Werkzeug >= 2.3\n-        cookie_storage = self._cookies if hasattr(self, ""_cookies"") else self.cookie_jar\n-\n-        if cookie_storage is None:\n+        if self._cookies is None:\n             raise TypeError(\n                 ""Cookies are disabled. Create a client with \'use_cookies=True\'.""\n             )\n \n         app = self.application\n         ctx = app.test_request_context(*args, **kwargs)\n-\n-        if hasattr(self, ""_add_cookies_to_wsgi""):\n-            self._add_cookies_to_wsgi(ctx.request.environ)\n-        else:\n-            self.cookie_jar.inject_wsgi(ctx.request.environ)  # type: ignore[union-attr]\n+        self._add_cookies_to_wsgi(ctx.request.environ)\n \n         with ctx:\n             sess = app.session_interface.open_session(app, ctx.request)\n@@ -169,14 +162,11 @@ class FlaskClient(Client):\n         with ctx:\n             app.session_interface.save_session(app, sess, resp)\n \n-        if hasattr(self, ""_update_cookies_from_response""):\n-            self._update_cookies_from_response(\n-                ctx.request.host.partition("":"")[0], resp.headers.getlist(""Set-Cookie"")\n-            )\n-        else:\n-            self.cookie_jar.extract_wsgi(  # type: ignore[union-attr]\n-                ctx.request.environ, resp.headers\n-            )\n+        self._update_cookies_from_response(\n+            ctx.request.host.partition("":"")[0],\n+            ctx.request.path,\n+            resp.headers.getlist(""Set-Cookie""),\n+        )\n \n     def _copy_environ(self, other):\n         out = {**self.environ_base, **other}\n'",3.4545454545454546,3.1818181818181817
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,c990bba94ab9bc81adf2d33e83c9a9628a2098f2,adedb2a64ea7703369bc89021710b439ee79f8dc,'update min test env',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.0\n+Werkzeug==2.3.3\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,c990bba94ab9bc81adf2d33e83c9a9628a2098f2,adedb2a64ea7703369bc89021710b439ee79f8dc,'update min test env',"'@@ -1,4 +1,4 @@\n-# SHA1:93a20a0c3518e8617dd501183caffc1364455d8d\n+# SHA1:0b58503b99aabc227b7f39357216d676d9987a12\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.0\n+werkzeug==2.3.3\n     # via -r requirements/tests-pallets-min.in\n'",0,0
CHANGES.rst,CHANGES.rst,f3b8f570545200c87465d18386f3fc9f2258307a,c990bba94ab9bc81adf2d33e83c9a9628a2098f2,'release version 2.3.2',"'@@ -1,7 +1,7 @@\n Version 2.3.2\n -------------\n \n-Unreleased\n+Released 2022-05-01\n \n -   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n -   Update Werkzeug requirement to >=2.3.3 to apply recent bug fixes.\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,f3b8f570545200c87465d18386f3fc9f2258307a,c990bba94ab9bc81adf2d33e83c9a9628a2098f2,'release version 2.3.2',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.2.dev""\n+__version__ = ""2.3.2""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,4cf8b78c6c674048a393acf0280f08761a5cb2a5,'fix release date',"'@@ -1,7 +1,7 @@\n Version 2.3.2\n -------------\n \n-Released 2022-05-01\n+Released 2023-05-01\n \n -   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n -   Update Werkzeug requirement to >=2.3.3 to apply recent bug fixes.\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,b7b753b96c36f0704c7c2729f6564aa6c34797a6,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'Bump actions/setup-python from 4.5.0 to 4.6.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.5.0 to 4.6.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435...57ded4d7d5e986d7296eab16560982c6dd7c923b)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -10,7 +10,7 @@ jobs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n       - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n-      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n+      - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n         with:\n           python-version: '3.x'\n           cache: 'pip'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,b7b753b96c36f0704c7c2729f6564aa6c34797a6,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'Bump actions/setup-python from 4.5.0 to 4.6.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.5.0 to 4.6.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435...57ded4d7d5e986d7296eab16560982c6dd7c923b)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n-      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435\n+      - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,ec8ca69195174a6526a6006d804841c0124eeccf,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'Bump pypa/gh-action-pypi-publish from 1.8.4 to 1.8.5\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.4 to 1.8.5.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/29930c9cf57955dc1b98162d0d8bc3ec80d9e75c...0bf742be3ebe032c25dd15117957dc15d0cfc38d)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,10 +63,10 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n+      - uses: pypa/gh-action-pypi-publish@0bf742be3ebe032c25dd15117957dc15d0cfc38d\n         with:\n           repository_url: https://test.pypi.org/legacy/\n           packages_dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n+      - uses: pypa/gh-action-pypi-publish@0bf742be3ebe032c25dd15117957dc15d0cfc38d\n         with:\n           packages_dir: artifact/\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,dcd25d8f07be14508c7f8182d9f9cc4365eb96fe,1e160c199bc5e76133e77f7cf0a16d21ae956078,'Bump actions/checkout from 3.5.0 to 3.5.2\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.0 to 3.5.2.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/8f4b7f84864484a7bf31766abe9204da3cbe65b3...8e5e7e5ab8b370d6c329ec480221332ada57f0ab)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n+      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n       - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n         with:\n           python-version: '3.x'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,dcd25d8f07be14508c7f8182d9f9cc4365eb96fe,1e160c199bc5e76133e77f7cf0a16d21ae956078,'Bump actions/checkout from 3.5.0 to 3.5.2\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.0 to 3.5.2.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/8f4b7f84864484a7bf31766abe9204da3cbe65b3...8e5e7e5ab8b370d6c329ec480221332ada57f0ab)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -36,7 +36,7 @@ jobs:\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3\n+      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n       - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n         with:\n           python-version: ${{ matrix.python }}\n""",0,0
CHANGES.rst,CHANGES.rst,726d3f4fa9e8a2960541debc2d2713571da54441,ddc7accaa2e83b328f969c120af2ce0804876b4a,'start version 2.2.5',"'@@ -1,3 +1,9 @@\n+Version 2.2.5\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.2.4\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,726d3f4fa9e8a2960541debc2d2713571da54441,ddc7accaa2e83b328f969c120af2ce0804876b4a,'start version 2.2.5',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.4""\n+__version__ = ""2.2.5.dev""\n \n \n def __getattr__(name):\n'",3.0,3.0
CHANGES.rst,CHANGES.rst,3fbfbad79fe294918459b70eb409d555b20de2c8,726d3f4fa9e8a2960541debc2d2713571da54441,'werkzeug 2.3.3 compatibility',"'@@ -3,6 +3,8 @@ Version 2.2.5\n \n Unreleased\n \n+-   Update for compatibility with Werkzeug 2.3.3.\n+\n \n Version 2.2.4\n -------------\n'",0,0
src/flask/testing.py,src/flask/testing.py,3fbfbad79fe294918459b70eb409d555b20de2c8,726d3f4fa9e8a2960541debc2d2713571da54441,'werkzeug 2.3.3 compatibility',"'@@ -168,10 +168,21 @@ class FlaskClient(Client):\n             app.session_interface.save_session(app, sess, resp)\n \n         if hasattr(self, ""_update_cookies_from_response""):\n-            self._update_cookies_from_response(\n-                ctx.request.host.partition("":"")[0], resp.headers.getlist(""Set-Cookie"")\n-            )\n+            try:\n+                # Werkzeug>=2.3.3\n+                self._update_cookies_from_response(\n+                    ctx.request.host.partition("":"")[0],\n+                    ctx.request.path,\n+                    resp.headers.getlist(""Set-Cookie""),\n+                )\n+            except TypeError:\n+                # Werkzeug>=2.3.0,<2.3.3\n+                self._update_cookies_from_response(  # type: ignore[call-arg]\n+                    ctx.request.host.partition("":"")[0],\n+                    resp.headers.getlist(""Set-Cookie""),  # type: ignore[arg-type]\n+                )\n         else:\n+            # Werkzeug<2.3.0\n             self.cookie_jar.extract_wsgi(  # type: ignore[union-attr]\n                 ctx.request.environ, resp.headers\n             )\n'",3.4545454545454546,3.5454545454545454
CHANGES.rst,CHANGES.rst,8646edca6f47e2cd57464081b3911218d4734f8d,a6367dac747c1e149c60767eee7e8aa9c281c58e,'set `Vary: Cookie` header consistently for session',"'@@ -4,6 +4,7 @@ Version 2.2.5\n Unreleased\n \n -   Update for compatibility with Werkzeug 2.3.3.\n+-   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n \n \n Version 2.2.4\n'",0,0
src/flask/sessions.py,src/flask/sessions.py,8646edca6f47e2cd57464081b3911218d4734f8d,a6367dac747c1e149c60767eee7e8aa9c281c58e,'set `Vary: Cookie` header consistently for session',"'@@ -383,6 +383,10 @@ class SecureCookieSessionInterface(SessionInterface):\n         samesite = self.get_cookie_samesite(app)\n         httponly = self.get_cookie_httponly(app)\n \n+        # Add a ""Vary: Cookie"" header if the session was accessed at all.\n+        if session.accessed:\n+            response.vary.add(""Cookie"")\n+\n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n@@ -395,13 +399,10 @@ class SecureCookieSessionInterface(SessionInterface):\n                     samesite=samesite,\n                     httponly=httponly,\n                 )\n+                response.vary.add(""Cookie"")\n \n             return\n \n-        # Add a ""Vary: Cookie"" header if the session was accessed at all.\n-        if session.accessed:\n-            response.vary.add(""Cookie"")\n-\n         if not self.should_set_cookie(app, session):\n             return\n \n@@ -417,3 +418,4 @@ class SecureCookieSessionInterface(SessionInterface):\n             secure=secure,\n             samesite=samesite,\n         )\n+        response.vary.add(""Cookie"")\n'",1.826086956521739,1.826086956521739
tests/test_basic.py,tests/test_basic.py,8646edca6f47e2cd57464081b3911218d4734f8d,a6367dac747c1e149c60767eee7e8aa9c281c58e,'set `Vary: Cookie` header consistently for session',"'@@ -560,6 +560,11 @@ def test_session_vary_cookie(app, client):\n     def setdefault():\n         return flask.session.setdefault(""test"", ""default"")\n \n+    @app.route(""/clear"")\n+    def clear():\n+        flask.session.clear()\n+        return """"\n+\n     @app.route(""/vary-cookie-header-set"")\n     def vary_cookie_header_set():\n         response = flask.Response()\n@@ -592,11 +597,29 @@ def test_session_vary_cookie(app, client):\n     expect(""/get"")\n     expect(""/getitem"")\n     expect(""/setdefault"")\n+    expect(""/clear"")\n     expect(""/vary-cookie-header-set"")\n     expect(""/vary-header-set"", ""Accept-Encoding, Accept-Language, Cookie"")\n     expect(""/no-vary-header"", None)\n \n \n+def test_session_refresh_vary(app, client):\n+    @app.get(""/login"")\n+    def login():\n+        flask.session[""user_id""] = 1\n+        flask.session.permanent = True\n+        return """"\n+\n+    @app.get(""/ignored"")\n+    def ignored():\n+        return """"\n+\n+    rv = client.get(""/login"")\n+    assert rv.headers[""Vary""] == ""Cookie""\n+    rv = client.get(""/ignored"")\n+    assert rv.headers[""Vary""] == ""Cookie""\n+\n+\n def test_flashes(app, req_ctx):\n     assert not flask.session.modified\n     flask.flash(""Zap"")\n'",1.0905511811023623,1.0891472868217054
examples/celery/requirements.txt,examples/celery/requirements.txt,ca12e8ebb7753d4a982584c2909ad9c7e5c2b029,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'update dependencies',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.10\n+# This file is autogenerated by pip-compile with Python 3.11\n # by the following command:\n #\n #    pip-compile --resolver=backtracking pyproject.toml\n@@ -10,6 +10,8 @@ async-timeout==4.0.2\n     # via redis\n billiard==3.6.4.0\n     # via celery\n+blinker==1.6.2\n+    # via flask\n celery[redis]==5.2.7\n     # via flask-example-celery (pyproject.toml)\n click==8.1.3\n@@ -25,7 +27,7 @@ click-plugins==1.1.1\n     # via celery\n click-repl==0.2.0\n     # via celery\n-flask==2.2.3\n+flask==2.3.2\n     # via flask-example-celery (pyproject.toml)\n itsdangerous==2.1.2\n     # via flask\n@@ -37,11 +39,11 @@ markupsafe==2.1.2\n     # via\n     #   jinja2\n     #   werkzeug\n-prompt-toolkit==3.0.37\n+prompt-toolkit==3.0.38\n     # via click-repl\n-pytz==2022.7.1\n+pytz==2023.3\n     # via celery\n-redis==4.5.1\n+redis==4.5.4\n     # via celery\n six==1.16.0\n     # via click-repl\n@@ -52,5 +54,5 @@ vine==5.0.0\n     #   kombu\n wcwidth==0.2.6\n     # via prompt-toolkit\n-werkzeug==2.2.3\n+werkzeug==2.3.3\n     # via flask\n'",0,0
requirements/dev.txt,requirements/dev.txt,ca12e8ebb7753d4a982584c2909ad9c7e5c2b029,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'update dependencies',"'@@ -28,7 +28,7 @@ filelock==3.12.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.22\n+identify==2.5.23\n     # via pre-commit\n nodeenv==1.7.0\n     # via pre-commit\n@@ -36,11 +36,11 @@ pip-compile-multi==2.6.2\n     # via -r requirements/dev.in\n pip-tools==6.13.0\n     # via pip-compile-multi\n-platformdirs==3.3.0\n+platformdirs==3.5.0\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.2.2\n+pre-commit==3.3.1\n     # via -r requirements/dev.in\n pyproject-api==1.5.1\n     # via tox\n@@ -50,9 +50,9 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.5.0\n+tox==4.5.1\n     # via -r requirements/dev.in\n-virtualenv==20.22.0\n+virtualenv==20.23.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,ca12e8ebb7753d4a982584c2909ad9c7e5c2b029,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'update dependencies',"'@@ -35,7 +35,7 @@ pygments==2.15.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-requests==2.28.2\n+requests==2.29.0\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n'",0,0
requirements/typing.txt,requirements/typing.txt,ca12e8ebb7753d4a982584c2909ad9c7e5c2b029,0afeb1d11cad9aa42ef25cc20b10dcd67c8cf3c9,'update dependencies',"'@@ -19,7 +19,7 @@ types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==67.7.0.0\n+types-setuptools==67.7.0.1\n     # via -r requirements/typing.in\n typing-extensions==4.5.0\n     # via mypy\n'",0,0
CHANGES.rst,CHANGES.rst,47af817c8fe01045c641b97f8fb784c7ad864eee,afd63b16170b7c047f5758eb910c416511e9c965,'release version 2.2.5',"'@@ -1,7 +1,7 @@\n Version 2.2.5\n -------------\n \n-Unreleased\n+Released 2023-05-02\n \n -   Update for compatibility with Werkzeug 2.3.3.\n -   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,47af817c8fe01045c641b97f8fb784c7ad864eee,afd63b16170b7c047f5758eb910c416511e9c965,'release version 2.2.5',"'@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.2.5.dev""\n+__version__ = ""2.2.5""\n \n \n def __getattr__(name):\n'",3.0,3.0
src/flask/scaffold.py,src/flask/scaffold.py,1d7281fe0770a97229a2a75189a712cff866b448,97c830190ff839b89b85c93781f3603f95365384,"""remove egg test\n\neggs aren't supported, and Python 3.12 removes setuptools""","'@@ -865,7 +865,7 @@ def _find_package_path(import_name):\n     if hasattr(loader, ""get_filename""):\n         filename = loader.get_filename(root_mod_name)\n     elif hasattr(loader, ""archive""):\n-        # zipimporter\'s loader.archive points to the .egg or .zip file.\n+        # zipimporter\'s loader.archive points to the .zip file.\n         filename = loader.archive\n     else:\n         # At least one loader is missing both get_filename and archive:\n'",1.95,1.95
tests/conftest.py,tests/conftest.py,1d7281fe0770a97229a2a75189a712cff866b448,97c830190ff839b89b85c93781f3603f95365384,"""remove egg test\n\neggs aren't supported, and Python 3.12 removes setuptools""","'@@ -1,7 +1,6 @@\n import os\n import pkgutil\n import sys\n-import textwrap\n \n import pytest\n from _pytest import monkeypatch\n@@ -154,42 +153,6 @@ def site_packages(modules_tmpdir, monkeypatch):\n     return rv\n \n \n-@pytest.fixture\n-def install_egg(modules_tmpdir, monkeypatch):\n-    """"""Generate egg from package name inside base and put the egg into\n-    sys.path.""""""\n-\n-    def inner(name, base=modules_tmpdir):\n-        base.join(name).ensure_dir()\n-        base.join(name).join(""__init__.py"").ensure()\n-\n-        egg_setup = base.join(""setup.py"")\n-        egg_setup.write(\n-            textwrap.dedent(\n-                f""""""\n-                from setuptools import setup\n-                setup(\n-                    name=""{name}"",\n-                    version=""1.0"",\n-                    packages=[""site_egg""],\n-                    zip_safe=True,\n-                )\n-                """"""\n-            )\n-        )\n-\n-        import subprocess\n-\n-        subprocess.check_call(\n-            [sys.executable, ""setup.py"", ""bdist_egg""], cwd=str(modules_tmpdir)\n-        )\n-        (egg_path,) = modules_tmpdir.join(""dist/"").listdir()\n-        monkeypatch.syspath_prepend(str(egg_path))\n-        return egg_path\n-\n-    return inner\n-\n-\n @pytest.fixture\n def purge_module(request):\n     def inner(name):\n'",1.3157894736842106,1.3529411764705883
tests/test_instance_config.py,tests/test_instance_config.py,1d7281fe0770a97229a2a75189a712cff866b448,97c830190ff839b89b85c93781f3603f95365384,"""remove egg test\n\neggs aren't supported, and Python 3.12 removes setuptools""","'@@ -1,5 +1,3 @@\n-import sys\n-\n import pytest\n \n import flask\n@@ -107,19 +105,3 @@ def test_prefix_package_paths(\n     assert site_package.app.instance_path == modules_tmpdir.join(""var"").join(\n         ""site_package-instance""\n     )\n-\n-\n-def test_egg_installed_paths(install_egg, modules_tmpdir, modules_tmpdir_prefix):\n-    modules_tmpdir.mkdir(""site_egg"").join(""__init__.py"").write(\n-        ""import flask\\n\\napp = flask.Flask(__name__)""\n-    )\n-    install_egg(""site_egg"")\n-    try:\n-        import site_egg\n-\n-        assert site_egg.app.instance_path == str(\n-            modules_tmpdir.join(""var/"").join(""site_egg-instance"")\n-        )\n-    finally:\n-        if ""site_egg"" in sys.modules:\n-            del sys.modules[""site_egg""]\n'",1.2222222222222223,1.0
tests/conftest.py,tests/conftest.py,0a00e1b6085f62fb776a95ef676ea661bff565f6,1d7281fe0770a97229a2a75189a712cff866b448,'use tmp_path instead of tmpdir',"'@@ -128,28 +128,27 @@ def limit_loader(request, monkeypatch):\n \n \n @pytest.fixture\n-def modules_tmpdir(tmpdir, monkeypatch):\n-    """"""A tmpdir added to sys.path.""""""\n-    rv = tmpdir.mkdir(""modules_tmpdir"")\n-    monkeypatch.syspath_prepend(str(rv))\n+def modules_tmp_path(tmp_path, monkeypatch):\n+    """"""A temporary directory added to sys.path.""""""\n+    rv = tmp_path / ""modules_tmp""\n+    rv.mkdir()\n+    monkeypatch.syspath_prepend(os.fspath(rv))\n     return rv\n \n \n @pytest.fixture\n-def modules_tmpdir_prefix(modules_tmpdir, monkeypatch):\n-    monkeypatch.setattr(sys, ""prefix"", str(modules_tmpdir))\n-    return modules_tmpdir\n+def modules_tmp_path_prefix(modules_tmp_path, monkeypatch):\n+    monkeypatch.setattr(sys, ""prefix"", os.fspath(modules_tmp_path))\n+    return modules_tmp_path\n \n \n @pytest.fixture\n-def site_packages(modules_tmpdir, monkeypatch):\n+def site_packages(modules_tmp_path, monkeypatch):\n     """"""Create a fake site-packages.""""""\n-    rv = (\n-        modules_tmpdir.mkdir(""lib"")\n-        .mkdir(f""python{sys.version_info.major}.{sys.version_info.minor}"")\n-        .mkdir(""site-packages"")\n-    )\n-    monkeypatch.syspath_prepend(str(rv))\n+    py_dir = f""python{sys.version_info.major}.{sys.version_info.minor}""\n+    rv = modules_tmp_path / ""lib"" / py_dir / ""site-packages""\n+    rv.mkdir(parents=True)\n+    monkeypatch.syspath_prepend(os.fspath(rv))\n     return rv\n \n \n'",1.3529411764705883,1.3529411764705883
tests/test_config.py,tests/test_config.py,0a00e1b6085f62fb776a95ef676ea661bff565f6,1d7281fe0770a97229a2a75189a712cff866b448,'use tmp_path instead of tmpdir',"'@@ -1,6 +1,5 @@\n import json\n import os\n-import textwrap\n \n import pytest\n \n@@ -242,17 +241,10 @@ def test_get_namespace():\n \n \n @pytest.mark.parametrize(""encoding"", [""utf-8"", ""iso-8859-15"", ""latin-1""])\n-def test_from_pyfile_weird_encoding(tmpdir, encoding):\n-    f = tmpdir.join(""my_config.py"")\n-    f.write_binary(\n-        textwrap.dedent(\n-            f""""""\n-            # -*- coding: {encoding} -*-\n-            TEST_VALUE = ""föö""\n-            """"""\n-        ).encode(encoding)\n-    )\n+def test_from_pyfile_weird_encoding(tmp_path, encoding):\n+    f = tmp_path / ""my_config.py""\n+    f.write_text(f\'# -*- coding: {encoding} -*-\\nTEST_VALUE = ""föö""\\n\', encoding)\n     app = flask.Flask(__name__)\n-    app.config.from_pyfile(str(f))\n+    app.config.from_pyfile(os.fspath(f))\n     value = app.config[""TEST_VALUE""]\n     assert value == ""föö""\n'",1.0555555555555556,1.0555555555555556
tests/test_helpers.py,tests/test_helpers.py,0a00e1b6085f62fb776a95ef676ea661bff565f6,1d7281fe0770a97229a2a75189a712cff866b448,'use tmp_path instead of tmpdir',"'@@ -218,8 +218,8 @@ class TestNoImports:\n     imp modules in the Python standard library.\n     """"""\n \n-    def test_name_with_import_error(self, modules_tmpdir):\n-        modules_tmpdir.join(""importerror.py"").write(""raise NotImplementedError()"")\n+    def test_name_with_import_error(self, modules_tmp_path):\n+        (modules_tmp_path / ""importerror.py"").write_text(""raise NotImplementedError()"")\n         try:\n             flask.Flask(""importerror"")\n         except NotImplementedError:\n'",1.0444444444444445,1.0444444444444445
tests/test_instance_config.py,tests/test_instance_config.py,0a00e1b6085f62fb776a95ef676ea661bff565f6,1d7281fe0770a97229a2a75189a712cff866b448,'use tmp_path instead of tmpdir',"'@@ -1,19 +1,20 @@\n+import os\n+\n import pytest\n \n import flask\n \n \n-def test_explicit_instance_paths(modules_tmpdir):\n-    with pytest.raises(ValueError) as excinfo:\n+def test_explicit_instance_paths(modules_tmp_path):\n+    with pytest.raises(ValueError, match="".*must be absolute""):\n         flask.Flask(__name__, instance_path=""instance"")\n-    assert ""must be absolute"" in str(excinfo.value)\n \n-    app = flask.Flask(__name__, instance_path=str(modules_tmpdir))\n-    assert app.instance_path == str(modules_tmpdir)\n+    app = flask.Flask(__name__, instance_path=os.fspath(modules_tmp_path))\n+    assert app.instance_path == os.fspath(modules_tmp_path)\n \n \n-def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n-    app = modules_tmpdir.join(""config_module_app.py"").write(\n+def test_uninstalled_module_paths(modules_tmp_path, purge_module):\n+    (modules_tmp_path / ""config_module_app.py"").write_text(\n         ""import os\\n""\n         ""import flask\\n""\n         ""here = os.path.abspath(os.path.dirname(__file__))\\n""\n@@ -23,13 +24,13 @@ def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n \n     from config_module_app import app\n \n-    assert app.instance_path == str(modules_tmpdir.join(""instance""))\n+    assert app.instance_path == os.fspath(modules_tmp_path / ""instance"")\n \n \n-def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n-    app = modules_tmpdir.mkdir(""config_package_app"")\n-    init = app.join(""__init__.py"")\n-    init.write(\n+def test_uninstalled_package_paths(modules_tmp_path, purge_module):\n+    app = modules_tmp_path / ""config_package_app""\n+    app.mkdir()\n+    (app / ""__init__.py"").write_text(\n         ""import os\\n""\n         ""import flask\\n""\n         ""here = os.path.abspath(os.path.dirname(__file__))\\n""\n@@ -39,16 +40,16 @@ def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n \n     from config_package_app import app\n \n-    assert app.instance_path == str(modules_tmpdir.join(""instance""))\n+    assert app.instance_path == os.fspath(modules_tmp_path / ""instance"")\n \n \n-def test_uninstalled_namespace_paths(tmpdir, monkeypatch, purge_module):\n+def test_uninstalled_namespace_paths(tmp_path, monkeypatch, purge_module):\n     def create_namespace(package):\n-        project = tmpdir.join(f""project-{package}"")\n-        monkeypatch.syspath_prepend(str(project))\n-        project.join(""namespace"").join(package).join(""__init__.py"").write(\n-            ""import flask\\napp = flask.Flask(__name__)\\n"", ensure=True\n-        )\n+        project = tmp_path / f""project-{package}""\n+        monkeypatch.syspath_prepend(os.fspath(project))\n+        ns = project / ""namespace"" / package\n+        ns.mkdir(parents=True)\n+        (ns / ""__init__.py"").write_text(""import flask\\napp = flask.Flask(__name__)\\n"")\n         return project\n \n     _ = create_namespace(""package1"")\n@@ -58,50 +59,53 @@ def test_uninstalled_namespace_paths(tmpdir, monkeypatch, purge_module):\n \n     from namespace.package2 import app\n \n-    assert app.instance_path == str(project2.join(""instance""))\n+    assert app.instance_path == os.fspath(project2 / ""instance"")\n \n \n def test_installed_module_paths(\n-    modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n+    modules_tmp_path, modules_tmp_path_prefix, purge_module, site_packages, limit_loader\n ):\n-    site_packages.join(""site_app.py"").write(\n+    (site_packages / ""site_app.py"").write_text(\n         ""import flask\\napp = flask.Flask(__name__)\\n""\n     )\n     purge_module(""site_app"")\n \n     from site_app import app\n \n-    assert app.instance_path == modules_tmpdir.join(""var"").join(""site_app-instance"")\n+    assert app.instance_path == os.fspath(\n+        modules_tmp_path / ""var"" / ""site_app-instance""\n+    )\n \n \n def test_installed_package_paths(\n-    limit_loader, modules_tmpdir, modules_tmpdir_prefix, purge_module, monkeypatch\n+    limit_loader, modules_tmp_path, modules_tmp_path_prefix, purge_module, monkeypatch\n ):\n-    installed_path = modules_tmpdir.mkdir(""path"")\n+    installed_path = modules_tmp_path / ""path""\n+    installed_path.mkdir()\n     monkeypatch.syspath_prepend(installed_path)\n \n-    app = installed_path.mkdir(""installed_package"")\n-    init = app.join(""__init__.py"")\n-    init.write(""import flask\\napp = flask.Flask(__name__)"")\n+    app = installed_path / ""installed_package""\n+    app.mkdir()\n+    (app / ""__init__.py"").write_text(""import flask\\napp = flask.Flask(__name__)\\n"")\n     purge_module(""installed_package"")\n \n     from installed_package import app\n \n-    assert app.instance_path == modules_tmpdir.join(""var"").join(\n-        ""installed_package-instance""\n+    assert app.instance_path == os.fspath(\n+        modules_tmp_path / ""var"" / ""installed_package-instance""\n     )\n \n \n def test_prefix_package_paths(\n-    limit_loader, modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages\n+    limit_loader, modules_tmp_path, modules_tmp_path_prefix, purge_module, site_packages\n ):\n-    app = site_packages.mkdir(""site_package"")\n-    init = app.join(""__init__.py"")\n-    init.write(""import flask\\napp = flask.Flask(__name__)"")\n+    app = site_packages / ""site_package""\n+    app.mkdir()\n+    (app / ""__init__.py"").write_text(""import flask\\napp = flask.Flask(__name__)\\n"")\n     purge_module(""site_package"")\n \n     import site_package\n \n-    assert site_package.app.instance_path == modules_tmpdir.join(""var"").join(\n-        ""site_package-instance""\n+    assert site_package.app.instance_path == os.fspath(\n+        modules_tmp_path / ""var"" / ""site_package-instance""\n     )\n'",1.0,1.0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,4911012cf426af25668e5d9beb756a732ca1a4f4,859d63902e5c9549fda4c167e9787a42c0136413,'update workflows\n\nupdate publish parameter names\nremove pip update',"'@@ -65,8 +65,8 @@ jobs:\n       # Try uploading to Test PyPI first, in case something fails.\n       - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n-          repository_url: https://test.pypi.org/legacy/\n-          packages_dir: artifact/\n+          repository-url: https://test.pypi.org/legacy/\n+          packages-dir: artifact/\n       - uses: pypa/gh-action-pypi-publish@29930c9cf57955dc1b98162d0d8bc3ec80d9e75c\n         with:\n-          packages_dir: artifact/\n+          packages-dir: artifact/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,4911012cf426af25668e5d9beb756a732ca1a4f4,859d63902e5c9549fda4c167e9787a42c0136413,'update workflows\n\nupdate publish parameter names\nremove pip update',"""@@ -42,11 +42,6 @@ jobs:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n           cache-dependency-path: 'requirements/*.txt'\n-      - name: update pip\n-        run: |\n-          pip install -U wheel\n-          pip install -U setuptools\n-          python -m pip install -U pip\n       - name: cache mypy\n         uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n         with:\n""",0,0
src/flask/config.py,src/flask/config.py,2abb7513dc52e9d9f2c73dde91f3b89d8f9492e4,4911012cf426af25668e5d9beb756a732ca1a4f4,'Allow for PathLike types for config file variables\n\nThis follows the Flask practice elsewhere and makes it clear PathLike\nfilenames are valid.',"'@@ -72,7 +72,9 @@ class Config(dict):\n     :param defaults: an optional dictionary of default values\n     """"""\n \n-    def __init__(self, root_path: str, defaults: dict | None = None) -> None:\n+    def __init__(\n+        self, root_path: str | os.PathLike, defaults: dict | None = None\n+    ) -> None:\n         super().__init__(defaults or {})\n         self.root_path = root_path\n \n@@ -164,7 +166,7 @@ class Config(dict):\n \n         return True\n \n-    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n+    def from_pyfile(self, filename: str | os.PathLike, silent: bool = False) -> bool:\n         """"""Updates the values in the config from a Python file.  This function\n         behaves as if the file was imported as module with the\n         :meth:`from_object` function.\n@@ -233,7 +235,7 @@ class Config(dict):\n \n     def from_file(\n         self,\n-        filename: str,\n+        filename: str | os.PathLike,\n         load: t.Callable[[t.IO[t.Any]], t.Mapping],\n         silent: bool = False,\n         text: bool = True,\n'",3.3333333333333335,3.3333333333333335
docs/patterns/javascript.rst,docs/patterns/javascript.rst,55332be325a9f1a5882a309951f1f7db510036dd,b80baaf35985a9a48f2db903a21b6ee7e7cc7340,'docs: fix wrong JS syntax (#5136)',"'@@ -125,8 +125,8 @@ in a Flask view.\n .. code-block:: javascript\n \n     let data = new FormData()\n-    data.append(""name"": ""Flask Room"")\n-    data.append(""description"": ""Talk about Flask here."")\n+    data.append(""name"", ""Flask Room"")\n+    data.append(""description"", ""Talk about Flask here."")\n     fetch(room_url, {\n         ""method"": ""POST"",\n         ""body"": data,\n'",1.0,1.0
docs/config.rst,docs/config.rst,0f477df86a8c953cb5e4df0bd90266345140b114,55332be325a9f1a5882a309951f1f7db510036dd,'Config from Data Files to match from_file API\n\nIn the API docs using a TOML file to load config is referred to as https://flask.palletsprojects.com/en/2.3.x/api/#flask.Config.from_file\r\n\r\nTo keep docs consistent a small change to the config docs.',"'@@ -410,8 +410,8 @@ from a TOML file:\n \n .. code-block:: python\n \n-    import toml\n-    app.config.from_file(""config.toml"", load=toml.load)\n+    import tomllib\n+    app.config.from_file(""config.toml"", load=tomllib.load, text=False)\n \n Or from a JSON file:\n \n'",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,e7264776bd1373e6283407a75f287b309eeebbae,ae07dead24d5aa81b4ee9e3f0550eabb173f5455,'update dependencies',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.4.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n@@ -26,7 +26,7 @@ repos:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n   - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.6.2\n+    rev: v2.6.3\n     hooks:\n       - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n'",0,0
requirements/dev.txt,requirements/dev.txt,e7264776bd1373e6283407a75f287b309eeebbae,ae07dead24d5aa81b4ee9e3f0550eabb173f5455,'update dependencies',"'@@ -10,7 +10,7 @@\n -r typing.txt\n build==0.10.0\n     # via pip-tools\n-cachetools==5.3.0\n+cachetools==5.3.1\n     # via tox\n cfgv==3.3.1\n     # via pre-commit\n@@ -28,19 +28,19 @@ filelock==3.12.0\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.23\n+identify==2.5.24\n     # via pre-commit\n-nodeenv==1.7.0\n+nodeenv==1.8.0\n     # via pre-commit\n-pip-compile-multi==2.6.2\n+pip-compile-multi==2.6.3\n     # via -r requirements/dev.in\n pip-tools==6.13.0\n     # via pip-compile-multi\n-platformdirs==3.5.0\n+platformdirs==3.5.1\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.3.1\n+pre-commit==3.3.2\n     # via -r requirements/dev.in\n pyproject-api==1.5.1\n     # via tox\n@@ -50,7 +50,7 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.5.1\n+tox==4.5.2\n     # via -r requirements/dev.in\n virtualenv==20.23.0\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,e7264776bd1373e6283407a75f287b309eeebbae,ae07dead24d5aa81b4ee9e3f0550eabb173f5455,'update dependencies',"'@@ -9,7 +9,7 @@ alabaster==0.7.13\n     # via sphinx\n babel==2.12.1\n     # via sphinx\n-certifi==2022.12.7\n+certifi==2023.5.7\n     # via requests\n charset-normalizer==3.1.0\n     # via requests\n@@ -35,7 +35,7 @@ pygments==2.15.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-requests==2.29.0\n+requests==2.31.0\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n@@ -64,5 +64,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==1.26.15\n+urllib3==2.0.2\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,e7264776bd1373e6283407a75f287b309eeebbae,ae07dead24d5aa81b4ee9e3f0550eabb173f5455,'update dependencies',"'@@ -5,7 +5,7 @@\n #\n #    pip-compile-multi\n #\n-asgiref==3.6.0\n+asgiref==3.7.2\n     # via -r requirements/tests.in\n iniconfig==2.0.0\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,e7264776bd1373e6283407a75f287b309eeebbae,ae07dead24d5aa81b4ee9e3f0550eabb173f5455,'update dependencies',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==40.0.2\n+cryptography==41.0.0\n     # via -r requirements/typing.in\n-mypy==1.2.0\n+mypy==1.3.0\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -19,7 +19,7 @@ types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==67.7.0.1\n+types-setuptools==67.8.0.0\n     # via -r requirements/typing.in\n-typing-extensions==4.5.0\n+typing-extensions==4.6.2\n     # via mypy\n'",0,0
pyproject.toml,pyproject.toml,38f02e04f4765a2820a2ed4f63ac757598cb02e4,e7264776bd1373e6283407a75f287b309eeebbae,'update metadata',"'@@ -4,7 +4,6 @@ description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {text = ""BSD-3-Clause""}\n maintainers = [{name = ""Pallets"", email = ""contact@palletsprojects.com""}]\n-authors = [{name = ""Armin Ronacher"", email = ""armin.ronacher@active-4.com""}]\n classifiers = [\n     ""Development Status :: 5 - Production/Stable"",\n     ""Environment :: Web Environment"",\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,40f31c307848e560336fc8b336fbc2fdc1a478ee,31fd9c87912a7020a00d83d2135559433173708c,'Bump slsa-framework/slsa-github-generator from 1.5.0 to 1.6.0\n\nBumps [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) from 1.5.0 to 1.6.0.\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.5.0...v1.6.0)\n\n---\nupdated-dependencies:\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can't pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.5.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.6.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,fc74a114b3afe87284467f2ccdbeb7a4a8badbc4,31fd9c87912a7020a00d83d2135559433173708c,'Bump pypa/gh-action-pypi-publish from 1.8.5 to 1.8.6\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.5 to 1.8.6.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/0bf742be3ebe032c25dd15117957dc15d0cfc38d...a56da0b891b3dc519c7ee3284aff1fad93cc8598)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,10 +63,10 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@0bf742be3ebe032c25dd15117957dc15d0cfc38d\n+      - uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@0bf742be3ebe032c25dd15117957dc15d0cfc38d\n+      - uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598\n         with:\n           packages-dir: artifact/\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,18e703bc9341b8066e2b277af5d37b13f5bd3aef,31fd9c87912a7020a00d83d2135559433173708c,'Bump actions/setup-python from 4.6.0 to 4.6.1\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.6.0 to 4.6.1.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/57ded4d7d5e986d7296eab16560982c6dd7c923b...bd6b4b6205c4dbad673328db7b31b7fab9e241c0)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -10,7 +10,7 @@ jobs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n       - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n-      - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n+      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n         with:\n           python-version: '3.x'\n           cache: 'pip'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,18e703bc9341b8066e2b277af5d37b13f5bd3aef,31fd9c87912a7020a00d83d2135559433173708c,'Bump actions/setup-python from 4.6.0 to 4.6.1\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.6.0 to 4.6.1.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/57ded4d7d5e986d7296eab16560982c6dd7c923b...bd6b4b6205c4dbad673328db7b31b7fab9e241c0)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n-      - uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b\n+      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,7dbb2f7e05d2c0963e90016b1f7a3a45e98a865a,38f02e04f4765a2820a2ed4f63ac757598cb02e4,'retarget pre-commit.ci',"'@@ -1,5 +1,5 @@\n ci:\n-  autoupdate_branch: ""2.2.x""\n+  autoupdate_branch: ""2.3.x""\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,32d2f47ed1bf3f27fd46e1a54dd136688de9ab81,7dbb2f7e05d2c0963e90016b1f7a3a45e98a865a,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- https://github.com/asottile/reorder_python_imports → https://github.com/asottile/reorder-python-imports',"'@@ -7,7 +7,7 @@ repos:\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n-  - repo: https://github.com/asottile/reorder_python_imports\n+  - repo: https://github.com/asottile/reorder-python-imports\n     rev: v3.9.0\n     hooks:\n       - id: reorder-python-imports\n'",0,0
pyproject.toml,pyproject.toml,d614d6bf8c7b6db6f817648836f9044b13dc42b4,32d2f47ed1bf3f27fd46e1a54dd136688de9ab81,'ignore pytest ast warnings',"'@@ -54,8 +54,8 @@ version = {attr = ""flask.__version__""}\n testpaths = [""tests""]\n filterwarnings = [\n     ""error"",\n-    # change in Python 3.12 alpha causes warning from inside pytest\n-    ""ignore:onerror argument:DeprecationWarning"",\n+    # change in Python 3.12 causes warning from inside pytest\n+    ""ignore:ast:DeprecationWarning"",\n ]\n \n [tool.coverage.run]\n'",0,0
CHANGES.rst,CHANGES.rst,367e1df785a71e9004d9a87a221652bfc5a964ac,2be71d323d87ec5e9f269666f8d08ec5af77eeb8,'start version 2.3.3',"'@@ -1,3 +1,9 @@\n+Version 2.3.3\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.3.2\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,367e1df785a71e9004d9a87a221652bfc5a964ac,2be71d323d87ec5e9f269666f8d08ec5af77eeb8,'start version 2.3.3',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.2""\n+__version__ = ""2.3.3.dev""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,367e1df785a71e9004d9a87a221652bfc5a964ac,'use importlib instead of pkgutil',"'@@ -3,6 +3,8 @@ Version 2.3.3\n \n Unreleased\n \n+-   Python 3.12 compatibility.\n+\n \n Version 2.3.2\n -------------\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,367e1df785a71e9004d9a87a221652bfc5a964ac,'use importlib instead of pkgutil',"""@@ -1,7 +1,7 @@\n from __future__ import annotations\n \n+import importlib.util\n import os\n-import pkgutil\n import socket\n import sys\n import typing as t\n@@ -575,7 +575,8 @@ def get_root_path(import_name: str) -> str:\n         return os.path.dirname(os.path.abspath(mod.__file__))\n \n     # Next attempt: check the loader.\n-    loader = pkgutil.get_loader(import_name)\n+    spec = importlib.util.find_spec(import_name)\n+    loader = spec.loader if spec is not None else None\n \n     # Loader does not exist or we're referring to an unloaded main\n     # module or a main module without path (interactive sessions), go\n""",2.227272727272727,2.272727272727273
src/flask/scaffold.py,src/flask/scaffold.py,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,367e1df785a71e9004d9a87a221652bfc5a964ac,'use importlib instead of pkgutil',"'@@ -3,7 +3,6 @@ from __future__ import annotations\n import importlib.util\n import os\n import pathlib\n-import pkgutil\n import sys\n import typing as t\n from collections import defaultdict\n@@ -856,7 +855,8 @@ def _find_package_path(import_name):\n             return os.path.dirname(root_spec.origin)\n \n     # we were unable to find the `package_path` using PEP 451 loaders\n-    loader = pkgutil.get_loader(root_mod_name)\n+    spec = importlib.util.find_spec(root_mod_name)\n+    loader = spec.loader if spec is not None else None\n \n     if loader is None or root_mod_name == ""__main__"":\n         # import name is not found, or interactive/main module\n'",1.95,1.975
CHANGES.rst,CHANGES.rst,ed8ddb6a3a14ae332823b0a266b02a5ef024cbb3,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,'update werkzeug to 2.3.5',"'@@ -4,6 +4,7 @@ Version 2.3.3\n Unreleased\n \n -   Python 3.12 compatibility.\n+-   Update Werkzeug requirement to >=2.3.5.\n \n \n Version 2.3.2\n'",0,0
pyproject.toml,pyproject.toml,ed8ddb6a3a14ae332823b0a266b02a5ef024cbb3,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,'update werkzeug to 2.3.5',"'@@ -19,7 +19,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.3"",\n+    ""Werkzeug>=2.3.5"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,ed8ddb6a3a14ae332823b0a266b02a5ef024cbb3,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,'update werkzeug to 2.3.5',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.3\n+Werkzeug==2.3.5\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,ed8ddb6a3a14ae332823b0a266b02a5ef024cbb3,84e11a1e827c0f55f9b9ee15952eddcf8a6492e0,'update werkzeug to 2.3.5',"'@@ -1,4 +1,4 @@\n-# SHA1:0b58503b99aabc227b7f39357216d676d9987a12\n+# SHA1:c4bfd085a9d4e81c583daf70671803d5e388c656\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.3\n+werkzeug==2.3.5\n     # via -r requirements/tests-pallets-min.in\n'",0,0
requirements/docs.in,requirements/docs.in,c8cf4694c60f0d81809468a1b45ec730496cc546,9930b0fe8e739ceb312f9554f9d41b73c2aaa733,'unpin sphinx and sphinx-tabs',"'@@ -1,7 +1,5 @@\n Pallets-Sphinx-Themes\n-# sphinx 5 introduced error in references from werkzeug in docstrings\n-Sphinx < 5\n+Sphinx\n sphinx-issues\n sphinxcontrib-log-cabinet\n-# sphinx-tabs 3.4 requires docutils 0.18, sphinx < 5 requires < 0.18\n-sphinx-tabs < 3.4\n+sphinx-tabs\n'",0,0
requirements/docs.txt,requirements/docs.txt,c8cf4694c60f0d81809468a1b45ec730496cc546,9930b0fe8e739ceb312f9554f9d41b73c2aaa733,'unpin sphinx and sphinx-tabs',"'@@ -1,4 +1,4 @@\n-# SHA1:323f1c1134d78952ea63131c187303def63b56bd\n+# SHA1:34fd4ca6516e97c7348e6facdd9c4ebb68209d1c\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -13,7 +13,7 @@ certifi==2023.5.7\n     # via requests\n charset-normalizer==3.1.0\n     # via requests\n-docutils==0.17.1\n+docutils==0.18.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -23,13 +23,13 @@ imagesize==1.4.1\n     # via sphinx\n jinja2==3.1.2\n     # via sphinx\n-markupsafe==2.1.2\n+markupsafe==2.1.3\n     # via jinja2\n packaging==23.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.1.0\n+pallets-sphinx-themes==2.1.1\n     # via -r requirements/docs.in\n pygments==2.15.1\n     # via\n@@ -39,7 +39,7 @@ requests==2.31.0\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==4.5.0\n+sphinx==7.0.1\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n@@ -48,7 +48,7 @@ sphinx==4.5.0\n     #   sphinxcontrib-log-cabinet\n sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n-sphinx-tabs==3.3.1\n+sphinx-tabs==3.4.1\n     # via -r requirements/docs.in\n sphinxcontrib-applehelp==1.0.4\n     # via sphinx\n@@ -64,5 +64,5 @@ sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n-urllib3==2.0.2\n+urllib3==2.0.3\n     # via requests\n'",0,0
CHANGES.rst,CHANGES.rst,bda295d37fa3809c95a93d01dd605d0222109889,c8cf4694c60f0d81809468a1b45ec730496cc546,'fix use of importlib.util.find_spec',"""@@ -5,6 +5,7 @@ Unreleased\n \n -   Python 3.12 compatibility.\n -   Update Werkzeug requirement to >=2.3.5.\n+-   Refactor how an app's root and instance paths are determined. :issue:`5160`\n \n \n Version 2.3.2\n""",0,0
src/flask/helpers.py,src/flask/helpers.py,bda295d37fa3809c95a93d01dd605d0222109889,c8cf4694c60f0d81809468a1b45ec730496cc546,'fix use of importlib.util.find_spec',"'@@ -575,13 +575,20 @@ def get_root_path(import_name: str) -> str:\n         return os.path.dirname(os.path.abspath(mod.__file__))\n \n     # Next attempt: check the loader.\n-    spec = importlib.util.find_spec(import_name)\n-    loader = spec.loader if spec is not None else None\n+    try:\n+        spec = importlib.util.find_spec(import_name)\n+\n+        if spec is None:\n+            raise ValueError\n+    except (ImportError, ValueError):\n+        loader = None\n+    else:\n+        loader = spec.loader\n \n     # Loader does not exist or we\'re referring to an unloaded main\n     # module or a main module without path (interactive sessions), go\n     # with the current working directory.\n-    if loader is None or import_name == ""__main__"":\n+    if loader is None:\n         return os.getcwd()\n \n     if hasattr(loader, ""get_filename""):\n'",2.272727272727273,2.272727272727273
src/flask/scaffold.py,src/flask/scaffold.py,bda295d37fa3809c95a93d01dd605d0222109889,c8cf4694c60f0d81809468a1b45ec730496cc546,'fix use of importlib.util.find_spec',"'@@ -779,31 +779,6 @@ def _endpoint_from_view_func(view_func: t.Callable) -> str:\n     return view_func.__name__\n \n \n-def _matching_loader_thinks_module_is_package(loader, mod_name):\n-    """"""Attempt to figure out if the given name is a package or a module.\n-\n-    :param: loader: The loader that handled the name.\n-    :param mod_name: The name of the package or module.\n-    """"""\n-    # Use loader.is_package if it\'s available.\n-    if hasattr(loader, ""is_package""):\n-        return loader.is_package(mod_name)\n-\n-    cls = type(loader)\n-\n-    # NamespaceLoader doesn\'t implement is_package, but all names it\n-    # loads must be packages.\n-    if cls.__module__ == ""_frozen_importlib"" and cls.__name__ == ""NamespaceLoader"":\n-        return True\n-\n-    # Otherwise we need to fail with an error that explains what went\n-    # wrong.\n-    raise AttributeError(\n-        f""\'{cls.__name__}.is_package()\' must be implemented for PEP 302""\n-        f"" import hooks.""\n-    )\n-\n-\n def _path_is_relative_to(path: pathlib.PurePath, base: str) -> bool:\n     # Path.is_relative_to doesn\'t exist until Python 3.9\n     try:\n@@ -822,64 +797,39 @@ def _find_package_path(import_name):\n \n         if root_spec is None:\n             raise ValueError(""not found"")\n-    # ImportError: the machinery told us it does not exist\n-    # ValueError:\n-    #    - the module name was invalid\n-    #    - the module name is __main__\n-    #    - *we* raised `ValueError` due to `root_spec` being `None`\n     except (ImportError, ValueError):\n-        pass  # handled below\n-    else:\n-        # namespace package\n-        if root_spec.origin in {""namespace"", None}:\n-            package_spec = importlib.util.find_spec(import_name)\n-            if package_spec is not None and package_spec.submodule_search_locations:\n-                # Pick the path in the namespace that contains the submodule.\n-                package_path = pathlib.Path(\n-                    os.path.commonpath(package_spec.submodule_search_locations)\n-                )\n-                search_locations = (\n-                    location\n-                    for location in root_spec.submodule_search_locations\n-                    if _path_is_relative_to(package_path, location)\n-                )\n-            else:\n-                # Pick the first path.\n-                search_locations = iter(root_spec.submodule_search_locations)\n-            return os.path.dirname(next(search_locations))\n-        # a package (with __init__.py)\n-        elif root_spec.submodule_search_locations:\n-            return os.path.dirname(os.path.dirname(root_spec.origin))\n-        # just a normal module\n-        else:\n-            return os.path.dirname(root_spec.origin)\n-\n-    # we were unable to find the `package_path` using PEP 451 loaders\n-    spec = importlib.util.find_spec(root_mod_name)\n-    loader = spec.loader if spec is not None else None\n-\n-    if loader is None or root_mod_name == ""__main__"":\n-        # import name is not found, or interactive/main module\n+        # ImportError: the machinery told us it does not exist\n+        # ValueError:\n+        #    - the module name was invalid\n+        #    - the module name is __main__\n+        #    - we raised `ValueError` due to `root_spec` being `None`\n         return os.getcwd()\n \n-    if hasattr(loader, ""get_filename""):\n-        filename = loader.get_filename(root_mod_name)\n-    elif hasattr(loader, ""archive""):\n-        # zipimporter\'s loader.archive points to the .zip file.\n-        filename = loader.archive\n-    else:\n-        # At least one loader is missing both get_filename and archive:\n-        # Google App Engine\'s HardenedModulesHook, use __file__.\n-        filename = importlib.import_module(root_mod_name).__file__\n-\n-    package_path = os.path.abspath(os.path.dirname(filename))\n+    if root_spec.origin in {""namespace"", None}:\n+        # namespace package\n+        package_spec = importlib.util.find_spec(import_name)\n \n-    # If the imported name is a package, filename is currently pointing\n-    # to the root of the package, need to get the current directory.\n-    if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n-        package_path = os.path.dirname(package_path)\n+        if package_spec is not None and package_spec.submodule_search_locations:\n+            # Pick the path in the namespace that contains the submodule.\n+            package_path = pathlib.Path(\n+                os.path.commonpath(package_spec.submodule_search_locations)\n+            )\n+            search_location = next(\n+                location\n+                for location in root_spec.submodule_search_locations\n+                if _path_is_relative_to(package_path, location)\n+            )\n+        else:\n+            # Pick the first path.\n+            search_location = root_spec.submodule_search_locations[0]\n \n-    return package_path\n+        return os.path.dirname(search_location)\n+    elif root_spec.submodule_search_locations:\n+        # package with __init__.py\n+        return os.path.dirname(os.path.dirname(root_spec.origin))\n+    else:\n+        # module\n+        return os.path.dirname(root_spec.origin)\n \n \n def find_package(import_name: str):\n'",1.975,1.7692307692307692
CHANGES.rst,CHANGES.rst,8e33b7b3e254f2a93101bcce21f85ff203831a4c,4be9f521425b7ad659b182c319dc3afb8fe64f53,'update werkzeug requirement',"""@@ -4,7 +4,7 @@ Version 2.3.3\n Unreleased\n \n -   Python 3.12 compatibility.\n--   Update Werkzeug requirement to >=2.3.5.\n+-   Require Werkzeug >= 2.3.6.\n -   Refactor how an app's root and instance paths are determined. :issue:`5160`\n \n \n""",0,0
pyproject.toml,pyproject.toml,8e33b7b3e254f2a93101bcce21f85ff203831a4c,4be9f521425b7ad659b182c319dc3afb8fe64f53,'update werkzeug requirement',"'@@ -19,7 +19,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.5"",\n+    ""Werkzeug>=2.3.6"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,a7ae372f2f58343a7eb56209f29eb9879e171b58,8e33b7b3e254f2a93101bcce21f85ff203831a4c,'update import of declarative_base from SQLAlchemy',"""@@ -34,8 +34,7 @@ official documentation on the `declarative`_ extension.\n Here's the example :file:`database.py` module for your application::\n \n     from sqlalchemy import create_engine\n-    from sqlalchemy.orm import scoped_session, sessionmaker\n-    from sqlalchemy.ext.declarative import declarative_base\n+    from sqlalchemy.orm import scoped_session, sessionmaker, declarative_base\n \n     engine = create_engine('sqlite:////tmp/test.db')\n     db_session = scoped_session(sessionmaker(autocommit=False,\n""",1.0,1.0
.pre-commit-config.yaml,.pre-commit-config.yaml,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -3,12 +3,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.4.0\n+    rev: v3.7.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n   - repo: https://github.com/asottile/reorder-python-imports\n-    rev: v3.9.0\n+    rev: v3.10.0\n     hooks:\n       - id: reorder-python-imports\n         name: Reorder Python imports (src, tests)\n'",0,0
pyproject.toml,pyproject.toml,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -54,8 +54,6 @@ version = {attr = ""flask.__version__""}\n testpaths = [""tests""]\n filterwarnings = [\n     ""error"",\n-    # change in Python 3.12 causes warning from inside pytest\n-    ""ignore:ast:DeprecationWarning"",\n ]\n \n [tool.coverage.run]\n'",0,0
requirements/dev.txt,requirements/dev.txt,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -24,7 +24,7 @@ colorama==0.4.6\n     # via tox\n distlib==0.3.6\n     # via virtualenv\n-filelock==3.12.0\n+filelock==3.12.2\n     # via\n     #   tox\n     #   virtualenv\n@@ -36,13 +36,13 @@ pip-compile-multi==2.6.3\n     # via -r requirements/dev.in\n pip-tools==6.13.0\n     # via pip-compile-multi\n-platformdirs==3.5.1\n+platformdirs==3.8.0\n     # via\n     #   tox\n     #   virtualenv\n-pre-commit==3.3.2\n+pre-commit==3.3.3\n     # via -r requirements/dev.in\n-pyproject-api==1.5.1\n+pyproject-api==1.5.2\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n@@ -50,9 +50,9 @@ pyyaml==6.0\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.5.2\n+tox==4.6.3\n     # via -r requirements/dev.in\n-virtualenv==20.23.0\n+virtualenv==20.23.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.5\n+Werkzeug==2.3.6\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -1,4 +1,4 @@\n-# SHA1:c4bfd085a9d4e81c583daf70671803d5e388c656\n+# SHA1:5bd33f1c06b3fb16f7ab50e80ed309655d110713\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.5\n+werkzeug==2.3.6\n     # via -r requirements/tests-pallets-min.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -11,9 +11,9 @@ iniconfig==2.0.0\n     # via pytest\n packaging==23.1\n     # via pytest\n-pluggy==1.0.0\n+pluggy==1.2.0\n     # via pytest\n-pytest==7.3.1\n+pytest==7.4.0\n     # via -r requirements/tests.in\n python-dotenv==1.0.0\n     # via -r requirements/tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,aca7d5637d0c1c95b961e3396039869c6e981e23,ec2b2394dccb02dac919b024608e9980f16459f6,'update dependencies',"'@@ -7,9 +7,9 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==41.0.0\n+cryptography==41.0.1\n     # via -r requirements/typing.in\n-mypy==1.3.0\n+mypy==1.4.1\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -19,7 +19,7 @@ types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==67.8.0.0\n+types-setuptools==68.0.0.0\n     # via -r requirements/typing.in\n-typing-extensions==4.6.2\n+typing-extensions==4.6.3\n     # via mypy\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,8933d7544395aeaa91c66d9f26d10b4fe2e92d7b,aca7d5637d0c1c95b961e3396039869c6e981e23,'update pypy test version',"""@@ -31,7 +31,7 @@ jobs:\n           - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n-          - {name: 'PyPy', python: 'pypy-3.9', os: ubuntu-latest, tox: pypy39}\n+          - {name: 'PyPy', python: 'pypy-3.10', os: ubuntu-latest, tox: pypy310}\n           - {name: 'Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n""",0,0
tox.ini,tox.ini,8933d7544395aeaa91c66d9f26d10b4fe2e92d7b,aca7d5637d0c1c95b961e3396039869c6e981e23,'update pypy test version',"'@@ -1,7 +1,7 @@\n [tox]\n envlist =\n     py3{12,11,10,9,8}\n-    pypy39\n+    pypy310\n     py311-min\n     py38-dev\n     style\n'",0,0
tox.ini,tox.ini,d67c47b81f4cbfda79f108a8ee4a183855127efb,8933d7544395aeaa91c66d9f26d10b4fe2e92d7b,'simplify tox config\n\nenvs inherit base testenv',"'@@ -34,17 +34,9 @@ skip_install = true\n commands = pre-commit run --all-files\n \n [testenv:typing]\n-package = wheel\n-wheel_build_env = .pkg\n-constrain_package_deps = true\n-use_frozen_constraints = true\n deps = -r requirements/typing.txt\n commands = mypy\n \n [testenv:docs]\n-package = wheel\n-wheel_build_env = .pkg\n-constrain_package_deps = true\n-use_frozen_constraints = true\n deps = -r requirements/docs.txt\n commands = sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n'",0,0
CHANGES.rst,CHANGES.rst,f38f3a745ab2f90084f495403ed28d4fc27e4b50,d67c47b81f4cbfda79f108a8ee4a183855127efb,'switch to flit build backend',"""@@ -5,6 +5,7 @@ Unreleased\n \n -   Python 3.12 compatibility.\n -   Require Werkzeug >= 2.3.6.\n+-   Use ``flit_core`` instead of ``setuptools`` as build backend.\n -   Refactor how an app's root and instance paths are determined. :issue:`5160`\n \n \n""",0,0
pyproject.toml,pyproject.toml,f38f3a745ab2f90084f495403ed28d4fc27e4b50,d67c47b81f4cbfda79f108a8ee4a183855127efb,'switch to flit build backend',"'@@ -2,7 +2,7 @@\n name = ""Flask""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n-license = {text = ""BSD-3-Clause""}\n+license = {file = ""LICENSE.rst""}\n maintainers = [{name = ""Pallets"", email = ""contact@palletsprojects.com""}]\n classifiers = [\n     ""Development Status :: 5 - Production/Stable"",\n@@ -44,11 +44,25 @@ dotenv = [""python-dotenv""]\n flask = ""flask.cli:main""\n \n [build-system]\n-requires = [""setuptools""]\n-build-backend = ""setuptools.build_meta""\n+requires = [""flit_core<4""]\n+build-backend = ""flit_core.buildapi""\n \n-[tool.setuptools.dynamic]\n-version = {attr = ""flask.__version__""}\n+[tool.flit.module]\n+name = ""flask""\n+\n+[tool.flit.sdist]\n+include = [\n+    ""docs/"",\n+    ""examples/"",\n+    ""requirements/"",\n+    ""tests/"",\n+    ""CHANGES.rst"",\n+    ""CONTRIBUTING.rst"",\n+    ""tox.ini"",\n+]\n+exclude = [\n+    ""docs/_build/"",\n+]\n \n [tool.pytest.ini_options]\n testpaths = [""tests""]\n'",0,0
examples/celery/pyproject.toml,examples/celery/pyproject.toml,46b328854a1ec1e892da02f523b2ed0745fe69e2,f38f3a745ab2f90084f495403ed28d4fc27e4b50,'switch examples to flit',"'@@ -7,5 +7,8 @@ requires-python = "">=3.8""\n dependencies = [""flask>=2.2.2"", ""celery[redis]>=5.2.7""]\n \n [build-system]\n-requires = [""setuptools""]\n-build-backend = ""setuptools.build_meta""\n+requires = [""flit_core<4""]\n+build-backend = ""flit_core.buildapi""\n+\n+[tool.flit.module]\n+name = ""task_app""\n'",0,0
.devcontainer/on-create-command.sh,.devcontainer/on-create-command.sh,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -3,7 +3,7 @@ set -e\n \n python3 -m venv .venv\n . .venv/bin/activate\n-pip install -U pip setuptools wheel\n+pip install -U pip\n pip install -r requirements/dev.txt\n pip install -e .\n pre-commit install --install-hooks\n'",0,0
CHANGES.rst,CHANGES.rst,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -309,7 +309,7 @@ Released 2022-03-28\n     or ``AppContext.g`` instead. :issue:`3898`\n -   ``copy_current_request_context`` can decorate async functions.\n     :pr:`4303`\n--   The CLI uses ``importlib.metadata`` instead of ``setuptools`` to\n+-   The CLI uses ``importlib.metadata`` instead of ``pkg_resources`` to\n     load command entry points. :issue:`4419`\n -   Overriding ``FlaskClient.open`` will not cause an error on redirect.\n     :issue:`3396`\n'",0,0
CONTRIBUTING.rst,CONTRIBUTING.rst,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -127,7 +127,7 @@ First time setup in your local environment\n \n     .. code-block:: text\n \n-        $ python -m pip install -U pip setuptools wheel\n+        $ python -m pip install -U pip\n         $ pip install -r requirements/dev.txt && pip install -e .\n \n -   Install the pre-commit hooks.\n'",0,0
docs/patterns/packages.rst,docs/patterns/packages.rst,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -54,8 +54,8 @@ a big problem, just add a new file called :file:`pyproject.toml` next to the inn\n     ]\n \n     [build-system]\n-    requires = [""setuptools""]\n-    build-backend = ""setuptools.build_meta""\n+    requires = [""flit_core<4""]\n+    build-backend = ""flit_core.buildapi""\n \n Install your application so it is importable:\n \n'",0,0
docs/tutorial/install.rst,docs/tutorial/install.rst,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -40,30 +40,13 @@ The ``pyproject.toml`` file describes your project and how to build it.\n     ]\n \n     [build-system]\n-    requires = [""setuptools""]\n-    build-backend = ""setuptools.build_meta""\n+    requires = [""flit_core<4""]\n+    build-backend = ""flit_core.buildapi""\n \n-\n-The setuptools build backend needs another file named ``MANIFEST.in`` to tell it about\n-non-Python files to include.\n-\n-.. code-block:: none\n-    :caption: ``MANIFEST.in``\n-\n-    include flaskr/schema.sql\n-    graft flaskr/static\n-    graft flaskr/templates\n-    global-exclude *.pyc\n-\n-This tells the build to copy everything in the ``static`` and ``templates`` directories,\n-and the ``schema.sql`` file, but to exclude all bytecode files.\n-\n-See the official `Packaging tutorial <packaging tutorial_>`_ and\n-`detailed guide <packaging guide_>`_ for more explanation of the files\n-and options used.\n+See the official `Packaging tutorial <packaging tutorial_>`_ for more\n+explanation of the files and options used.\n \n .. _packaging tutorial: https://packaging.python.org/tutorials/packaging-projects/\n-.. _packaging guide: https://packaging.python.org/guides/distributing-packages-using-setuptools/\n \n \n Install the Project\n@@ -95,9 +78,7 @@ You can observe that the project is now installed with ``pip list``.\n     Jinja2         2.10\n     MarkupSafe     1.0\n     pip            9.0.3\n-    setuptools     39.0.1\n     Werkzeug       0.14.1\n-    wheel          0.30.0\n \n Nothing changes from how you\'ve been running your project so far.\n ``--app`` is still set to ``flaskr`` and ``flask run`` still runs\n'",0,0
requirements/typing.in,requirements/typing.in,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -1,5 +1,4 @@\n mypy\n types-contextvars\n types-dataclasses\n-types-setuptools\n cryptography\n'",0,0
requirements/typing.txt,requirements/typing.txt,6b9acd565cded9c805760037b69754c11749c830,46b328854a1ec1e892da02f523b2ed0745fe69e2,'switch docs to flit',"'@@ -1,4 +1,4 @@\n-# SHA1:7cc3f64d4e78db89d81680ac81503d5ac35d31a9\n+# SHA1:6a354b832686fd3ec017455769a0270953a1e225\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -19,7 +19,5 @@ types-contextvars==2.4.7.2\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-types-setuptools==68.0.0.0\n-    # via -r requirements/typing.in\n typing-extensions==4.6.3\n     # via mypy\n'",0,0
docs/errorhandling.rst,docs/errorhandling.rst,aea13d5a100b03758fecb88a34daeab4f8aa8426,f39c71609e9372bec8beb01c5aea3957ec2d1a9b,'fix typo in errorhandling doc',"'@@ -231,7 +231,7 @@ responses, you could also pass them through directly.\n Error handlers still respect the exception class hierarchy. If you\n register handlers for both ``HTTPException`` and ``Exception``, the\n ``Exception`` handler will not handle ``HTTPException`` subclasses\n-because it the ``HTTPException`` handler is more specific.\n+because the ``HTTPException`` handler is more specific.\n \n \n Unhandled Exceptions\n'",1.5714285714285714,1.5714285714285714
.github/workflows/publish.yaml,.github/workflows/publish.yaml,47a89da558e240148ced28ddcc4e709a4be4955a,15a0d4afd481a7f8f7dcf3b45da7175ed14226c5,'Bump pypa/gh-action-pypi-publish from 1.8.6 to 1.8.7\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.6 to 1.8.7.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/a56da0b891b3dc519c7ee3284aff1fad93cc8598...f5622bde02b04381239da3573277701ceca8f6a0)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,10 +63,10 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598\n+      - uses: pypa/gh-action-pypi-publish@f5622bde02b04381239da3573277701ceca8f6a0\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598\n+      - uses: pypa/gh-action-pypi-publish@f5622bde02b04381239da3573277701ceca8f6a0\n         with:\n           packages-dir: artifact/\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,f62580b947e3be4d8b5ef5fa486d1472884aacd5,15a0d4afd481a7f8f7dcf3b45da7175ed14226c5,'Bump dessant/lock-threads from 4.0.0 to 4.0.1\n\nBumps [dessant/lock-threads](https://github.com/dessant/lock-threads) from 4.0.0 to 4.0.1.\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/c1b35aecc5cdb1a34539d14196df55838bb2f836...be8aa5be94131386884a6da4189effda9b14aa21)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -19,7 +19,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@c1b35aecc5cdb1a34539d14196df55838bb2f836\n+      - uses: dessant/lock-threads@be8aa5be94131386884a6da4189effda9b14aa21\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,1fb188636e6a21e9c1fefdf4dd8c671dd3f332d6,15a0d4afd481a7f8f7dcf3b45da7175ed14226c5,'Bump slsa-framework/slsa-github-generator from 1.6.0 to 1.7.0\n\nBumps [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) from 1.6.0 to 1.7.0.\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.6.0...v1.7.0)\n\n---\nupdated-dependencies:\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can't pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.6.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.7.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,1ce4d95de92fdd9423c295bf9b63117817fab3bf,15a0d4afd481a7f8f7dcf3b45da7175ed14226c5,'Bump actions/checkout from 3.5.2 to 3.5.3\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.2 to 3.5.3.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/8e5e7e5ab8b370d6c329ec480221332ada57f0ab...c85c95e3d7251135ab7dc9ce3241c5835cc595a9)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n+      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n       - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n         with:\n           python-version: '3.x'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,1ce4d95de92fdd9423c295bf9b63117817fab3bf,15a0d4afd481a7f8f7dcf3b45da7175ed14226c5,'Bump actions/checkout from 3.5.2 to 3.5.3\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.2 to 3.5.3.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/8e5e7e5ab8b370d6c329ec480221332ada57f0ab...c85c95e3d7251135ab7dc9ce3241c5835cc595a9)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -36,7 +36,7 @@ jobs:\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab\n+      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n       - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n         with:\n           python-version: ${{ matrix.python }}\n""",0,0
docs/tutorial/install.rst,docs/tutorial/install.rst,11da927fd993c941618a67b443cc0649402f4de0,09789f2a34633be446f7fa04955e55a373b36302,'Update install.rst with required description',"'@@ -35,6 +35,7 @@ The ``pyproject.toml`` file describes your project and how to build it.\n     [project]\n     name = ""flaskr""\n     version = ""1.0.0""\n+    description = ""The basic blog app built in the Flask tutorial.""\n     dependencies = [\n         ""flask"",\n     ]\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,65bc7636348a9ca32ccafb9f685ab4377e1e446d,a0db8908530769e83f388d6b61438a6a2ee0bded,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.7.0 → v3.8.0](https://github.com/asottile/pyupgrade/compare/v3.7.0...v3.8.0)',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.7.0\n+    rev: v3.8.0\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,7255be9626ab56d81bc0ab86db939fcc1da9bca1,f215de030e4bb66205e39c786437b41aa86a5dd6,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.8.0 → v3.10.1](https://github.com/asottile/pyupgrade/compare/v3.8.0...v3.10.1)\n- [github.com/psf/black: 23.3.0 → 23.7.0](https://github.com/psf/black/compare/23.3.0...23.7.0)\n- [github.com/PyCQA/flake8: 6.0.0 → 6.1.0](https://github.com/PyCQA/flake8/compare/6.0.0...6.1.0)',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.8.0\n+    rev: v3.10.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n@@ -15,11 +15,11 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 23.7.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 6.1.0\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,180ff8853c69240a3d214734da8d78f8d4d6f0bc,cb825687a592709f902f3d320d93987a0546fd28,'Bump actions/setup-python from 4.6.1 to 4.7.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.6.1 to 4.7.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/bd6b4b6205c4dbad673328db7b31b7fab9e241c0...61a6322f88396a6271a6ee3565807d608ecaddd1)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -10,7 +10,7 @@ jobs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n       - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n-      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n+      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: '3.x'\n           cache: 'pip'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,180ff8853c69240a3d214734da8d78f8d4d6f0bc,cb825687a592709f902f3d320d93987a0546fd28,'Bump actions/setup-python from 4.6.1 to 4.7.0\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4.6.1 to 4.7.0.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/bd6b4b6205c4dbad673328db7b31b7fab9e241c0...61a6322f88396a6271a6ee3565807d608ecaddd1)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -37,7 +37,7 @@ jobs:\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n-      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0\n+      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,dcc86ebfce71bf2829bce429134d6424355f159a,cb825687a592709f902f3d320d93987a0546fd28,'Bump pypa/gh-action-pypi-publish from 1.8.7 to 1.8.8\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.7 to 1.8.8.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/f5622bde02b04381239da3573277701ceca8f6a0...f8c70e705ffc13c3b4d1221169b84f12a75d6ca8)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,10 +63,10 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@f5622bde02b04381239da3573277701ceca8f6a0\n+      - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@f5622bde02b04381239da3573277701ceca8f6a0\n+      - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\n         with:\n           packages-dir: artifact/\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,80ae10f402facf375be30eb62fdaf0d34d57a66d,7d399e80c34df8daff66f45b74fdde0edd58d63c,'update dev requirements',"'@@ -3,7 +3,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/asottile/pyupgrade\n-    rev: v3.8.0\n+    rev: v3.10.1\n     hooks:\n       - id: pyupgrade\n         args: [""--py38-plus""]\n@@ -15,11 +15,11 @@ repos:\n         files: ""^(?!examples/)""\n         args: [""--application-directories"", ""src""]\n   - repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 23.7.0\n     hooks:\n       - id: black\n   - repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 6.1.0\n     hooks:\n       - id: flake8\n         additional_dependencies:\n'",0,0
requirements/dev.txt,requirements/dev.txt,80ae10f402facf375be30eb62fdaf0d34d57a66d,7d399e80c34df8daff66f45b74fdde0edd58d63c,'update dev requirements',"'@@ -12,51 +12,51 @@ build==0.10.0\n     # via pip-tools\n cachetools==5.3.1\n     # via tox\n-cfgv==3.3.1\n+cfgv==3.4.0\n     # via pre-commit\n-chardet==5.1.0\n+chardet==5.2.0\n     # via tox\n-click==8.1.3\n+click==8.1.6\n     # via\n     #   pip-compile-multi\n     #   pip-tools\n colorama==0.4.6\n     # via tox\n-distlib==0.3.6\n+distlib==0.3.7\n     # via virtualenv\n filelock==3.12.2\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.24\n+identify==2.5.26\n     # via pre-commit\n nodeenv==1.8.0\n     # via pre-commit\n pip-compile-multi==2.6.3\n     # via -r requirements/dev.in\n-pip-tools==6.13.0\n+pip-tools==7.3.0\n     # via pip-compile-multi\n-platformdirs==3.8.0\n+platformdirs==3.10.0\n     # via\n     #   tox\n     #   virtualenv\n pre-commit==3.3.3\n     # via -r requirements/dev.in\n-pyproject-api==1.5.2\n+pyproject-api==1.5.3\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n-pyyaml==6.0\n+pyyaml==6.0.1\n     # via pre-commit\n toposort==1.10\n     # via pip-compile-multi\n-tox==4.6.3\n+tox==4.9.0\n     # via -r requirements/dev.in\n-virtualenv==20.23.1\n+virtualenv==20.24.3\n     # via\n     #   pre-commit\n     #   tox\n-wheel==0.40.0\n+wheel==0.41.1\n     # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/docs.txt,requirements/docs.txt,80ae10f402facf375be30eb62fdaf0d34d57a66d,7d399e80c34df8daff66f45b74fdde0edd58d63c,'update dev requirements',"'@@ -9,9 +9,9 @@ alabaster==0.7.13\n     # via sphinx\n babel==2.12.1\n     # via sphinx\n-certifi==2023.5.7\n+certifi==2023.7.22\n     # via requests\n-charset-normalizer==3.1.0\n+charset-normalizer==3.2.0\n     # via requests\n docutils==0.18.1\n     # via\n@@ -31,7 +31,7 @@ packaging==23.1\n     #   sphinx\n pallets-sphinx-themes==2.1.1\n     # via -r requirements/docs.in\n-pygments==2.15.1\n+pygments==2.16.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -39,30 +39,35 @@ requests==2.31.0\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==7.0.1\n+sphinx==7.1.2\n     # via\n     #   -r requirements/docs.in\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n+    #   sphinxcontrib-applehelp\n+    #   sphinxcontrib-devhelp\n+    #   sphinxcontrib-htmlhelp\n     #   sphinxcontrib-log-cabinet\n+    #   sphinxcontrib-qthelp\n+    #   sphinxcontrib-serializinghtml\n sphinx-issues==3.0.1\n     # via -r requirements/docs.in\n sphinx-tabs==3.4.1\n     # via -r requirements/docs.in\n-sphinxcontrib-applehelp==1.0.4\n+sphinxcontrib-applehelp==1.0.7\n     # via sphinx\n-sphinxcontrib-devhelp==1.0.2\n+sphinxcontrib-devhelp==1.0.5\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.1\n+sphinxcontrib-htmlhelp==2.0.4\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r requirements/docs.in\n-sphinxcontrib-qthelp==1.0.3\n+sphinxcontrib-qthelp==1.0.6\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.5\n+sphinxcontrib-serializinghtml==1.1.8\n     # via sphinx\n-urllib3==2.0.3\n+urllib3==2.0.4\n     # via requests\n'",0,0
requirements/typing.txt,requirements/typing.txt,80ae10f402facf375be30eb62fdaf0d34d57a66d,7d399e80c34df8daff66f45b74fdde0edd58d63c,'update dev requirements',"'@@ -7,17 +7,17 @@\n #\n cffi==1.15.1\n     # via cryptography\n-cryptography==41.0.1\n+cryptography==41.0.3\n     # via -r requirements/typing.in\n-mypy==1.4.1\n+mypy==1.5.1\n     # via -r requirements/typing.in\n mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n-types-contextvars==2.4.7.2\n+types-contextvars==2.4.7.3\n     # via -r requirements/typing.in\n types-dataclasses==0.6.6\n     # via -r requirements/typing.in\n-typing-extensions==4.6.3\n+typing-extensions==4.7.1\n     # via mypy\n'",0,0
src/flask/cli.py,src/flask/cli.py,17e146ad949b3d80438faf95e81b53c543cb50f5,8a72b741616556b4f739ea79ab502c2d2038844a,'Pass maxsplit via kwarg to re.split',"'@@ -302,7 +302,7 @@ class ScriptInfo:\n         else:\n             if self.app_import_path:\n                 path, name = (\n-                    re.split(r"":(?![\\\\/])"", self.app_import_path, 1) + [None]\n+                    re.split(r"":(?![\\\\/])"", self.app_import_path, maxsplit=1) + [None]\n                 )[:2]\n                 import_name = prepare_import(path)\n                 app = locate_app(import_name, name)\n'",4.529411764705882,4.529411764705882
tests/test_basic.py,tests/test_basic.py,c49ce2e1eb8b598e724388bead0943837bab8027,3237fff4b86227a84913d3885b600738bb9479a0,'fix flake8 bugbear findings',"'@@ -431,9 +431,9 @@ def test_session_special_types(app, client):\n         client.get(""/"")\n         s = flask.session\n         assert s[""t""] == (1, 2, 3)\n-        assert type(s[""b""]) == bytes\n+        assert type(s[""b""]) is bytes\n         assert s[""b""] == b""\\xff""\n-        assert type(s[""m""]) == Markup\n+        assert type(s[""m""]) is Markup\n         assert s[""m""] == Markup(""<html>"")\n         assert s[""u""] == the_uuid\n         assert s[""d""] == now\n@@ -760,7 +760,7 @@ def test_teardown_request_handler_error(app, client):\n \n     @app.teardown_request\n     def teardown_request1(exc):\n-        assert type(exc) == ZeroDivisionError\n+        assert type(exc) is ZeroDivisionError\n         called.append(True)\n         # This raises a new error and blows away sys.exc_info(), so we can\n         # test that all teardown_requests get passed the same original\n@@ -772,7 +772,7 @@ def test_teardown_request_handler_error(app, client):\n \n     @app.teardown_request\n     def teardown_request2(exc):\n-        assert type(exc) == ZeroDivisionError\n+        assert type(exc) is ZeroDivisionError\n         called.append(True)\n         # This raises a new error and blows away sys.exc_info(), so we can\n         # test that all teardown_requests get passed the same original\n'",1.0857142857142856,1.0857142857142856
tests/test_basic.py,tests/test_basic.py,826514b8eb18f6c314cf566630253d35c89e42c3,6d266f63633f5f127165d4ef836db14a59bbc106,'fix flake8 bugbear findings',"'@@ -431,9 +431,9 @@ def test_session_special_types(app, client):\n         client.get(""/"")\n         s = flask.session\n         assert s[""t""] == (1, 2, 3)\n-        assert type(s[""b""]) == bytes\n+        assert type(s[""b""]) is bytes\n         assert s[""b""] == b""\\xff""\n-        assert type(s[""m""]) == Markup\n+        assert type(s[""m""]) is Markup\n         assert s[""m""] == Markup(""<html>"")\n         assert s[""u""] == the_uuid\n         assert s[""d""] == now\n@@ -760,7 +760,7 @@ def test_teardown_request_handler_error(app, client):\n \n     @app.teardown_request\n     def teardown_request1(exc):\n-        assert type(exc) == ZeroDivisionError\n+        assert type(exc) is ZeroDivisionError\n         called.append(True)\n         # This raises a new error and blows away sys.exc_info(), so we can\n         # test that all teardown_requests get passed the same original\n@@ -772,7 +772,7 @@ def test_teardown_request_handler_error(app, client):\n \n     @app.teardown_request\n     def teardown_request2(exc):\n-        assert type(exc) == ZeroDivisionError\n+        assert type(exc) is ZeroDivisionError\n         called.append(True)\n         # This raises a new error and blows away sys.exc_info(), so we can\n         # test that all teardown_requests get passed the same original\n'",1.0857142857142856,1.0857142857142856
docs/patterns/appdispatch.rst,docs/patterns/appdispatch.rst,aa6d4c3e92bd11a7d449f49f524e54bbb88b89c0,826514b8eb18f6c314cf566630253d35c89e42c3,'update dispatch-by-path example',"'@@ -146,7 +146,7 @@ the ``Host`` header to figure out the subdomain one simply looks at the\n request path up to the first slash::\n \n     from threading import Lock\n-    from werkzeug.wsgi import pop_path_info, peek_path_info\n+    from wsgiref.util import shift_path_info\n \n     class PathDispatcher:\n \n@@ -166,13 +166,20 @@ request path up to the first slash::\n                 return app\n \n         def __call__(self, environ, start_response):\n-            app = self.get_application(peek_path_info(environ))\n+            app = self.get_application(self._peek_path_info(environ))\n             if app is not None:\n-                pop_path_info(environ)\n+                shift_path_info(environ)\n             else:\n                 app = self.default_app\n             return app(environ, start_response)\n \n+    def _peek_path_info(environ):\n+        segments = environ.get(""PATH_INFO"", """").lstrip(""/"").split(""/"", 1)\n+        if segments:\n+            return segments[0]\n+\n+        return None\n+\n The big difference between this and the subdomain one is that this one\n falls back to another application if the creator function returns ``None``::\n \n'",1.6666666666666667,1.7
docs/patterns/appdispatch.rst,docs/patterns/appdispatch.rst,a887e179b8af6a9c582a7918f9f8499ab58032cc,aa6d4c3e92bd11a7d449f49f524e54bbb88b89c0,'clean up',"'@@ -18,34 +18,20 @@ Working with this Document\n --------------------------\n \n Each of the techniques and examples below results in an ``application``\n-object that can be run with any WSGI server. For production, see\n-:doc:`/deploying/index`. For development, Werkzeug provides a server\n-through :func:`werkzeug.serving.run_simple`::\n+object that can be run with any WSGI server. For development, use the\n+``flask run`` command to start a development server. For production, see\n+:doc:`/deploying/index`.\n \n-    from werkzeug.serving import run_simple\n-    run_simple(\'localhost\', 5000, application, use_reloader=True)\n-\n-Note that :func:`run_simple <werkzeug.serving.run_simple>` is not intended for\n-use in production.  Use a production WSGI server. See :doc:`/deploying/index`.\n-\n-In order to use the interactive debugger, debugging must be enabled both on\n-the application and the simple server. Here is the ""hello world"" example with\n-debugging and :func:`run_simple <werkzeug.serving.run_simple>`::\n+.. code-block:: python\n \n     from flask import Flask\n-    from werkzeug.serving import run_simple\n \n     app = Flask(__name__)\n-    app.debug = True\n \n     @app.route(\'/\')\n     def hello_world():\n         return \'Hello World!\'\n \n-    if __name__ == \'__main__\':\n-        run_simple(\'localhost\', 5000, app,\n-                   use_reloader=True, use_debugger=True, use_evalex=True)\n-\n \n Combining Applications\n ----------------------\n@@ -58,7 +44,9 @@ are combined by the dispatcher middleware into a larger one that is\n dispatched based on prefix.\n \n For example you could have your main application run on ``/`` and your\n-backend interface on ``/backend``::\n+backend interface on ``/backend``.\n+\n+.. code-block:: python\n \n     from werkzeug.middleware.dispatcher import DispatcherMiddleware\n     from frontend_app import application as frontend\n@@ -89,7 +77,9 @@ the dynamic application creation.\n The perfect level for abstraction in that regard is the WSGI layer.  You\n write your own WSGI application that looks at the request that comes and\n delegates it to your Flask application.  If that application does not\n-exist yet, it is dynamically created and remembered::\n+exist yet, it is dynamically created and remembered.\n+\n+.. code-block:: python\n \n     from threading import Lock\n \n@@ -117,7 +107,9 @@ exist yet, it is dynamically created and remembered::\n             return app(environ, start_response)\n \n \n-This dispatcher can then be used like this::\n+This dispatcher can then be used like this:\n+\n+.. code-block:: python\n \n     from myapplication import create_app, get_user_for_subdomain\n     from werkzeug.exceptions import NotFound\n@@ -143,7 +135,9 @@ Dispatch by Path\n \n Dispatching by a path on the URL is very similar.  Instead of looking at\n the ``Host`` header to figure out the subdomain one simply looks at the\n-request path up to the first slash::\n+request path up to the first slash.\n+\n+.. code-block:: python\n \n     from threading import Lock\n     from wsgiref.util import shift_path_info\n@@ -166,7 +160,7 @@ request path up to the first slash::\n                 return app\n \n         def __call__(self, environ, start_response):\n-            app = self.get_application(self._peek_path_info(environ))\n+            app = self.get_application(_peek_path_info(environ))\n             if app is not None:\n                 shift_path_info(environ)\n             else:\n@@ -181,7 +175,9 @@ request path up to the first slash::\n         return None\n \n The big difference between this and the subdomain one is that this one\n-falls back to another application if the creator function returns ``None``::\n+falls back to another application if the creator function returns ``None``.\n+\n+.. code-block:: python\n \n     from myapplication import create_app, default_app, get_user_for_prefix\n \n'",1.7,1.7
CHANGES.rst,CHANGES.rst,6a12b191f7058a179237b4b3dfc146e559777d9b,9e9acfb3fe5cf33549da1a8324b395e1fb4145b0,'start version 3.0.0',"'@@ -1,3 +1,9 @@\n+Version 3.0.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 2.3.3\n -------------\n \n'",0,0
src/flask/__init__.py,src/flask/__init__.py,6a12b191f7058a179237b4b3dfc146e559777d9b,9e9acfb3fe5cf33549da1a8324b395e1fb4145b0,'start version 3.0.0',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.3.dev""\n+__version__ = ""3.0.0.dev""\n \n \n def __getattr__(name):\n'",6.0,6.0
CHANGES.rst,CHANGES.rst,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -3,6 +3,8 @@ Version 3.0.0\n \n Unreleased\n \n+-   Remove previously deprecated code. :pr:`5223`\n+\n \n Version 2.3.3\n -------------\n'",0,0
docs/api.rst,docs/api.rst,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -519,11 +519,6 @@ Signals are provided by the `Blinker`_ library. See :doc:`signals` for an introd\n \n    .. versionadded:: 0.10\n \n-.. data:: signals.signals_available\n-\n-    .. deprecated:: 2.3\n-        Will be removed in Flask 2.4. Signals are always available\n-\n \n Class-Based Views\n -----------------\n'",1.5,1.5
src/flask/__init__.py,src/flask/__init__.py,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -39,64 +39,3 @@ from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n __version__ = ""3.0.0.dev""\n-\n-\n-def __getattr__(name):\n-    if name == ""_app_ctx_stack"":\n-        import warnings\n-        from .globals import __app_ctx_stack\n-\n-        warnings.warn(\n-            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return __app_ctx_stack\n-\n-    if name == ""_request_ctx_stack"":\n-        import warnings\n-        from .globals import __request_ctx_stack\n-\n-        warnings.warn(\n-            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return __request_ctx_stack\n-\n-    if name == ""escape"":\n-        import warnings\n-        from markupsafe import escape\n-\n-        warnings.warn(\n-            ""\'flask.escape\' is deprecated and will be removed in Flask 2.4. Import""\n-            "" \'markupsafe.escape\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return escape\n-\n-    if name == ""Markup"":\n-        import warnings\n-        from markupsafe import Markup\n-\n-        warnings.warn(\n-            ""\'flask.Markup\' is deprecated and will be removed in Flask 2.4. Import""\n-            "" \'markupsafe.Markup\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return Markup\n-\n-    if name == ""signals_available"":\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'signals_available\' is deprecated and will be removed in Flask 2.4.""\n-            "" Signals are always available"",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return True\n-\n-    raise AttributeError(name)\n'",6.0,0
src/flask/app.py,src/flask/app.py,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -572,25 +572,6 @@ class Flask(Scaffold):\n         """"""\n         return self.create_jinja_environment()\n \n-    @property\n-    def got_first_request(self) -> bool:\n-        """"""This attribute is set to ``True`` if the application started\n-        handling the first request.\n-\n-        .. deprecated:: 2.3\n-            Will be removed in Flask 2.4.\n-\n-        .. versionadded:: 0.8\n-        """"""\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'got_first_request\' is deprecated and will be removed in Flask 2.4."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self._got_first_request\n-\n     def make_config(self, instance_relative: bool = False) -> Config:\n         """"""Used to create the config attribute by the Flask constructor.\n         The `instance_relative` parameter is passed in from the constructor\n'",3.328125,3.365079365079365
src/flask/globals.py,src/flask/globals.py,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -14,25 +14,6 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .wrappers import Request\n \n \n-class _FakeStack:\n-    def __init__(self, name: str, cv: ContextVar[t.Any]) -> None:\n-        self.name = name\n-        self.cv = cv\n-\n-    @property\n-    def top(self) -> t.Any | None:\n-        import warnings\n-\n-        warnings.warn(\n-            f""\'_{self.name}_ctx_stack\' is deprecated and will be removed in Flask 2.4.""\n-            f"" Use \'g\' to store data, or \'{self.name}_ctx\' to access the current""\n-            "" context."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return self.cv.get(None)\n-\n-\n _no_app_msg = """"""\\\n Working outside of application context.\n \n@@ -41,7 +22,6 @@ the current application. To solve this, set up an application context\n with app.app_context(). See the documentation for more information.\\\n """"""\n _cv_app: ContextVar[AppContext] = ContextVar(""flask.app_ctx"")\n-__app_ctx_stack = _FakeStack(""app"", _cv_app)\n app_ctx: AppContext = LocalProxy(  # type: ignore[assignment]\n     _cv_app, unbound_message=_no_app_msg\n )\n@@ -60,7 +40,6 @@ an active HTTP request. Consult the documentation on testing for\n information about how to avoid this problem.\\\n """"""\n _cv_request: ContextVar[RequestContext] = ContextVar(""flask.request_ctx"")\n-__request_ctx_stack = _FakeStack(""request"", _cv_request)\n request_ctx: RequestContext = LocalProxy(  # type: ignore[assignment]\n     _cv_request, unbound_message=_no_req_msg\n )\n@@ -70,27 +49,3 @@ request: Request = LocalProxy(  # type: ignore[assignment]\n session: SessionMixin = LocalProxy(  # type: ignore[assignment]\n     _cv_request, ""session"", unbound_message=_no_req_msg\n )\n-\n-\n-def __getattr__(name: str) -> t.Any:\n-    if name == ""_app_ctx_stack"":\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'_app_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return __app_ctx_stack\n-\n-    if name == ""_request_ctx_stack"":\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'_request_ctx_stack\' is deprecated and will be removed in Flask 2.4."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return __request_ctx_stack\n-\n-    raise AttributeError(name)\n'",1.6666666666666667,0
src/flask/helpers.py,src/flask/helpers.py,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -2,14 +2,11 @@ from __future__ import annotations\n \n import importlib.util\n import os\n-import socket\n import sys\n import typing as t\n-import warnings\n from datetime import datetime\n from functools import lru_cache\n from functools import update_wrapper\n-from threading import RLock\n \n import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n@@ -492,7 +489,7 @@ def send_file(\n \n     .. versionchanged:: 0.7\n         MIME guessing and etag support for file-like objects was\n-        deprecated because it was unreliable. Pass a filename if you are\n+        removed because it was unreliable. Pass a filename if you are\n         able to, otherwise attach an etag yourself.\n \n     .. versionchanged:: 0.5\n@@ -616,81 +613,6 @@ def get_root_path(import_name: str) -> str:\n     return os.path.dirname(os.path.abspath(filepath))\n \n \n-class locked_cached_property(werkzeug.utils.cached_property):\n-    """"""A :func:`property` that is only evaluated once. Like\n-    :class:`werkzeug.utils.cached_property` except access uses a lock\n-    for thread safety.\n-\n-    .. deprecated:: 2.3\n-        Will be removed in Flask 2.4. Use a lock inside the decorated function if\n-        locking is needed.\n-\n-    .. versionchanged:: 2.0\n-        Inherits from Werkzeug\'s ``cached_property`` (and ``property``).\n-    """"""\n-\n-    def __init__(\n-        self,\n-        fget: t.Callable[[t.Any], t.Any],\n-        name: str | None = None,\n-        doc: str | None = None,\n-    ) -> None:\n-        import warnings\n-\n-        warnings.warn(\n-            ""\'locked_cached_property\' is deprecated and will be removed in Flask 2.4.""\n-            "" Use a lock inside the decorated function if locking is needed."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        super().__init__(fget, name=name, doc=doc)\n-        self.lock = RLock()\n-\n-    def __get__(self, obj: object, type: type = None) -> t.Any:  # type: ignore\n-        if obj is None:\n-            return self\n-\n-        with self.lock:\n-            return super().__get__(obj, type=type)\n-\n-    def __set__(self, obj: object, value: t.Any) -> None:\n-        with self.lock:\n-            super().__set__(obj, value)\n-\n-    def __delete__(self, obj: object) -> None:\n-        with self.lock:\n-            super().__delete__(obj)\n-\n-\n-def is_ip(value: str) -> bool:\n-    """"""Determine if the given string is an IP address.\n-\n-    :param value: value to check\n-    :type value: str\n-\n-    :return: True if string is an IP address\n-    :rtype: bool\n-\n-    .. deprecated:: 2.3\n-        Will be removed in Flask 2.4.\n-    """"""\n-    warnings.warn(\n-        ""The \'is_ip\' function is deprecated and will be removed in Flask 2.4."",\n-        DeprecationWarning,\n-        stacklevel=2,\n-    )\n-\n-    for family in (socket.AF_INET, socket.AF_INET6):\n-        try:\n-            socket.inet_pton(family, value)\n-        except OSError:\n-            pass\n-        else:\n-            return True\n-\n-    return False\n-\n-\n @lru_cache(maxsize=None)\n def _split_blueprint_path(name: str) -> list[str]:\n     out: list[str] = [name]\n'",2.272727272727273,2.4705882352941178
src/flask/signals.py,src/flask/signals.py,04994df59f2f642e52ba46ca656088bcdb931262,6a12b191f7058a179237b4b3dfc146e559777d9b,'remove deprecated code',"'@@ -1,8 +1,5 @@\n from __future__ import annotations\n \n-import typing as t\n-import warnings\n-\n from blinker import Namespace\n \n # This namespace is only for signals provided by Flask itself.\n@@ -18,16 +15,3 @@ appcontext_tearing_down = _signals.signal(""appcontext-tearing-down"")\n appcontext_pushed = _signals.signal(""appcontext-pushed"")\n appcontext_popped = _signals.signal(""appcontext-popped"")\n message_flashed = _signals.signal(""message-flashed"")\n-\n-\n-def __getattr__(name: str) -> t.Any:\n-    if name == ""signals_available"":\n-        warnings.warn(\n-            ""The \'signals_available\' attribute is deprecated and will be removed in""\n-            "" Flask 2.4. Signals are always available."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return True\n-\n-    raise AttributeError(name)\n'",2.0,0
src/flask/__init__.py,src/flask/__init__.py,0ec7f713d679ceed2c605e62ac5d38d579f29fa0,a64588f87a2bd7ba557814ec039e3b2af2ce842d,"""Split the App and Blueprint into Sansio and IO parts\n\nThis follows a similar structure in Werkzeug and allows for async\nbased IO projects, specifically Quart, to base themselves on\nFlask.\n\nNote that the globals, and signals are specific to Flask and hence\nspecific to Flask's IO. This means they cannot be moved to the sansio\npart of the codebase.""","'@@ -1,7 +1,5 @@\n from . import json as json\n from .app import Flask as Flask\n-from .app import Request as Request\n-from .app import Response as Response\n from .blueprints import Blueprint as Blueprint\n from .config import Config as Config\n from .ctx import after_this_request as after_this_request\n@@ -37,5 +35,7 @@ from .templating import render_template as render_template\n from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n+from .wrappers import Request as Request\n+from .wrappers import Response as Response\n \n __version__ = ""3.0.0.dev""\n'",0,0
src/flask/sansio/blueprints.py,src/flask/sansio/blueprints.py,72c85e80c8ef9e6d5b5644f7bb23cdc175ca3873,0ec7f713d679ceed2c605e62ac5d38d579f29fa0,"'Provide an extendable merge blueprint funcs method\n\nThis allows a Blueprint implementation that has additional funcs, such\nas Quart with its before_websocket_funcs (as example), to extend the\nmerge method to also merge these functions.'","'@@ -329,37 +329,7 @@ class Blueprint(Scaffold):\n \n         # Merge blueprint data into parent.\n         if first_bp_registration or first_name_registration:\n-\n-            def extend(bp_dict, parent_dict):\n-                for key, values in bp_dict.items():\n-                    key = name if key is None else f""{name}.{key}""\n-                    parent_dict[key].extend(values)\n-\n-            for key, value in self.error_handler_spec.items():\n-                key = name if key is None else f""{name}.{key}""\n-                value = defaultdict(\n-                    dict,\n-                    {\n-                        code: {\n-                            exc_class: func for exc_class, func in code_values.items()\n-                        }\n-                        for code, code_values in value.items()\n-                    },\n-                )\n-                app.error_handler_spec[key] = value\n-\n-            for endpoint, func in self.view_functions.items():\n-                app.view_functions[endpoint] = func\n-\n-            extend(self.before_request_funcs, app.before_request_funcs)\n-            extend(self.after_request_funcs, app.after_request_funcs)\n-            extend(\n-                self.teardown_request_funcs,\n-                app.teardown_request_funcs,\n-            )\n-            extend(self.url_default_functions, app.url_default_functions)\n-            extend(self.url_value_preprocessors, app.url_value_preprocessors)\n-            extend(self.template_context_processors, app.template_context_processors)\n+            self._merge_blueprint_funcs(app, name)\n \n         for deferred in self.deferred_functions:\n             deferred(state)\n@@ -406,6 +376,36 @@ class Blueprint(Scaffold):\n             bp_options[""name_prefix""] = name\n             blueprint.register(app, bp_options)\n \n+    def _merge_blueprint_funcs(self, app: App, name: str) -> None:\n+        def extend(bp_dict, parent_dict):\n+            for key, values in bp_dict.items():\n+                key = name if key is None else f""{name}.{key}""\n+                parent_dict[key].extend(values)\n+\n+        for key, value in self.error_handler_spec.items():\n+            key = name if key is None else f""{name}.{key}""\n+            value = defaultdict(\n+                dict,\n+                {\n+                    code: {exc_class: func for exc_class, func in code_values.items()}\n+                    for code, code_values in value.items()\n+                },\n+            )\n+            app.error_handler_spec[key] = value\n+\n+        for endpoint, func in self.view_functions.items():\n+            app.view_functions[endpoint] = func\n+\n+        extend(self.before_request_funcs, app.before_request_funcs)\n+        extend(self.after_request_funcs, app.after_request_funcs)\n+        extend(\n+            self.teardown_request_funcs,\n+            app.teardown_request_funcs,\n+        )\n+        extend(self.url_default_functions, app.url_default_functions)\n+        extend(self.url_value_preprocessors, app.url_value_preprocessors)\n+        extend(self.template_context_processors, app.template_context_processors)\n+\n     @setupmethod\n     def add_url_rule(\n         self,\n'",2.53125,2.484848484848485
src/flask/app.py,src/flask/app.py,3f6b243cec6859185ea4064e84b33c07cc7febf6,72c85e80c8ef9e6d5b5644f7bb23cdc175ca3873,'Support async template context processors\n\nThis is useful as there is contextual information that could be loaded\nvia IO e.g. information from a database. This also matches Quart and\nhence makes the shared signature easier to manage.',"'@@ -478,7 +478,7 @@ class Flask(App):\n         for name in names:\n             if name in self.template_context_processors:\n                 for func in self.template_context_processors[name]:\n-                    context.update(func())\n+                    context.update(self.ensure_sync(func)())\n \n         context.update(orig_ctx)\n \n'",4.171428571428572,4.171428571428572
src/flask/typing.py,src/flask/typing.py,3f6b243cec6859185ea4064e84b33c07cc7febf6,72c85e80c8ef9e6d5b5644f7bb23cdc175ca3873,'Support async template context processors\n\nThis is useful as there is contextual information that could be loaded\nvia IO e.g. information from a database. This also matches Quart and\nhence makes the shared signature easier to manage.',"'@@ -61,7 +61,10 @@ TeardownCallable = t.Union[\n     t.Callable[[t.Optional[BaseException]], None],\n     t.Callable[[t.Optional[BaseException]], t.Awaitable[None]],\n ]\n-TemplateContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n+TemplateContextProcessorCallable = t.Union[\n+    t.Callable[[], t.Dict[str, t.Any]],\n+    t.Callable[[], t.Awaitable[t.Dict[str, t.Any]]],\n+]\n TemplateFilterCallable = t.Callable[..., t.Any]\n TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n'",0,0
src/flask/typing.py,src/flask/typing.py,cc80a47f5be6c60e53c42ef9378e6db3b0e183b1,3f6b243cec6859185ea4064e84b33c07cc7febf6,"'Widen the response typing\n\nWhilst not strictly true for Flask, it is true for Flask and Quart and\nhence makes it much easier for Quart to extend Flask classes. The\nalternatives are generic usage in the sansio codebase or mixed usage\nwithin Flask. I think this is a good compromise.'","'@@ -5,7 +5,7 @@ import typing as t\n if t.TYPE_CHECKING:  # pragma: no cover\n     from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n-    from werkzeug.wrappers import Response  # noqa: F401\n+    from werkzeug.sansio.response import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n ResponseValue = t.Union[\n'",0,0
src/flask/typing.py,src/flask/typing.py,80cf589a26d792820f135591eb8007bca891bf4f,cc80a47f5be6c60e53c42ef9378e6db3b0e183b1,"'Correct the error handler typing\n\nIt may also be awaitable, as invocations are wrapped in ensure_sync.'","'@@ -77,7 +77,10 @@ URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], N\n # https://github.com/pallets/flask/issues/4095\n # https://github.com/pallets/flask/issues/4295\n # https://github.com/pallets/flask/issues/4297\n-ErrorHandlerCallable = t.Callable[[t.Any], ResponseReturnValue]\n+ErrorHandlerCallable = t.Union[\n+    t.Callable[[t.Any], ResponseReturnValue],\n+    t.Callable[[t.Any], t.Awaitable[ResponseReturnValue]],\n+]\n \n RouteCallable = t.Union[\n     t.Callable[..., ResponseReturnValue],\n'",0,0
CHANGES.rst,CHANGES.rst,bc5dd3894b4b19e07abfe6a23d87d66c02e4061f,318592511c9c7156599fd02e3edf625097ecb434,'Add a changelog for the sans-io changes',"'@@ -4,6 +4,8 @@ Version 3.0.0\n Unreleased\n \n -   Remove previously deprecated code. :pr:`5223`\n+-   Restructure the code such that the Flask (app) and Blueprint\n+    classes have Sans-IO bases. :pr:`5127`\n \n \n Version 2.3.3\n'",0,0
CHANGES.rst,CHANGES.rst,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"""@@ -4,7 +4,7 @@ Version 2.3.3\n Unreleased\n \n -   Python 3.12 compatibility.\n--   Require Werkzeug >= 2.3.6.\n+-   Require Werkzeug >= 2.3.7.\n -   Use ``flit_core`` instead of ``setuptools`` as build backend.\n -   Refactor how an app's root and instance paths are determined. :issue:`5160`\n \n""",0,0
pyproject.toml,pyproject.toml,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -19,7 +19,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.6"",\n+    ""Werkzeug>=2.3.7"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.6\n+Werkzeug==2.3.7\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,4 +1,4 @@\n-# SHA1:5bd33f1c06b3fb16f7ab50e80ed309655d110713\n+# SHA1:fe057f95a98251b053eec8fa27df0feb722c70e8\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.6\n+werkzeug==2.3.7\n     # via -r requirements/tests-pallets-min.in\n'",0,0
src/flask/cli.py,src/flask/cli.py,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,7 @@\n from __future__ import annotations\n \n import ast\n+import importlib.metadata\n import inspect\n import os\n import platform\n@@ -241,13 +242,13 @@ def get_version(ctx, param, value):\n     if not value or ctx.resilient_parsing:\n         return\n \n-    import werkzeug\n-    from . import __version__\n+    flask_version = importlib.metadata.version(""flask"")\n+    werkzeug_version = importlib.metadata.version(""werkzeug"")\n \n     click.echo(\n         f""Python {platform.python_version()}\\n""\n-        f""Flask {__version__}\\n""\n-        f""Werkzeug {werkzeug.__version__}"",\n+        f""Flask {flask_version}\\n""\n+        f""Werkzeug {werkzeug_version}"",\n         color=ctx.color,\n     )\n     ctx.exit()\n'",4.529411764705882,4.529411764705882
src/flask/testing.py,src/flask/testing.py,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,5 +1,6 @@\n from __future__ import annotations\n \n+import importlib.metadata\n import typing as t\n from contextlib import contextmanager\n from contextlib import ExitStack\n@@ -92,6 +93,18 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         return self.app.json.dumps(obj, **kwargs)\n \n \n+_werkzeug_version = """"\n+\n+\n+def _get_werkzeug_version() -> str:\n+    global _werkzeug_version\n+\n+    if not _werkzeug_version:\n+        _werkzeug_version = importlib.metadata.version(""werkzeug"")\n+\n+    return _werkzeug_version\n+\n+\n class FlaskClient(Client):\n     """"""Works like a regular Werkzeug test client but has knowledge about\n     Flask\'s contexts to defer the cleanup of the request context until\n@@ -115,7 +128,7 @@ class FlaskClient(Client):\n         self._context_stack = ExitStack()\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n-            ""HTTP_USER_AGENT"": f""werkzeug/{werkzeug.__version__}"",\n+            ""HTTP_USER_AGENT"": f""Werkzeug/{_get_werkzeug_version()}"",\n         }\n \n     @contextmanager\n'",3.1818181818181817,3.0833333333333335
tests/test_cli.py,tests/test_cli.py,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,8 @@\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n+import importlib.metadata\n import os\n+import platform\n import ssl\n import sys\n import types\n@@ -227,10 +229,6 @@ def test_locate_app_suppress_raise(test_apps):\n \n \n def test_get_version(test_apps, capsys):\n-    from flask import __version__ as flask_version\n-    from werkzeug import __version__ as werkzeug_version\n-    from platform import python_version\n-\n     class MockCtx:\n         resilient_parsing = False\n         color = None\n@@ -241,9 +239,9 @@ def test_get_version(test_apps, capsys):\n     ctx = MockCtx()\n     get_version(ctx, None, ""test"")\n     out, err = capsys.readouterr()\n-    assert f""Python {python_version()}"" in out\n-    assert f""Flask {flask_version}"" in out\n-    assert f""Werkzeug {werkzeug_version}"" in out\n+    assert f""Python {platform.python_version()}"" in out\n+    assert f""Flask {importlib.metadata.version(\'flask\')}"" in out\n+    assert f""Werkzeug {importlib.metadata.version(\'werkzeug\')}"" in out\n \n \n def test_scriptinfo(test_apps, monkeypatch):\n'",1.0746268656716418,1.0746268656716418
tests/test_testing.py,tests/test_testing.py,5bb30270d2e68d8d9278ac6f5abf67049acba662,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,7 @@\n+import importlib.metadata\n+\n import click\n import pytest\n-import werkzeug\n \n import flask\n from flask import appcontext_popped\n@@ -38,34 +39,35 @@ def test_environ_defaults(app, client, app_ctx, req_ctx):\n         assert rv.data == b""http://localhost/""\n \n \n-def test_environ_base_default(app, client, app_ctx):\n+def test_environ_base_default(app, client):\n     @app.route(""/"")\n     def index():\n-        flask.g.user_agent = flask.request.headers[""User-Agent""]\n-        return flask.request.remote_addr\n+        flask.g.remote_addr = flask.request.remote_addr\n+        flask.g.user_agent = flask.request.user_agent.string\n+        return """"\n \n-    rv = client.get(""/"")\n-    assert rv.data == b""127.0.0.1""\n-    assert flask.g.user_agent == f""werkzeug/{werkzeug.__version__}""\n+    with client:\n+        client.get(""/"")\n+        assert flask.g.remote_addr == ""127.0.0.1""\n+        assert flask.g.user_agent == (\n+            f""Werkzeug/{importlib.metadata.version(\'werkzeug\')}""\n+        )\n \n \n-def test_environ_base_modified(app, client, app_ctx):\n+def test_environ_base_modified(app, client):\n     @app.route(""/"")\n     def index():\n-        flask.g.user_agent = flask.request.headers[""User-Agent""]\n-        return flask.request.remote_addr\n+        flask.g.remote_addr = flask.request.remote_addr\n+        flask.g.user_agent = flask.request.user_agent.string\n+        return """"\n \n-    client.environ_base[""REMOTE_ADDR""] = ""0.0.0.0""\n+    client.environ_base[""REMOTE_ADDR""] = ""192.168.0.22""\n     client.environ_base[""HTTP_USER_AGENT""] = ""Foo""\n-    rv = client.get(""/"")\n-    assert rv.data == b""0.0.0.0""\n-    assert flask.g.user_agent == ""Foo""\n \n-    client.environ_base[""REMOTE_ADDR""] = ""0.0.0.1""\n-    client.environ_base[""HTTP_USER_AGENT""] = ""Bar""\n-    rv = client.get(""/"")\n-    assert rv.data == b""0.0.0.1""\n-    assert flask.g.user_agent == ""Bar""\n+    with client:\n+        client.get(""/"")\n+        assert flask.g.remote_addr == ""192.168.0.22""\n+        assert flask.g.user_agent == ""Foo""\n \n \n def test_client_open_environ(app, client, request):\n'",1.0425531914893618,1.0425531914893618
CHANGES.rst,CHANGES.rst,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"""@@ -4,7 +4,7 @@ Version 2.3.3\n Unreleased\n \n -   Python 3.12 compatibility.\n--   Require Werkzeug >= 2.3.6.\n+-   Require Werkzeug >= 2.3.7.\n -   Use ``flit_core`` instead of ``setuptools`` as build backend.\n -   Refactor how an app's root and instance paths are determined. :issue:`5160`\n \n""",0,0
pyproject.toml,pyproject.toml,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -19,7 +19,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.6"",\n+    ""Werkzeug>=2.3.7"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.6\n+Werkzeug==2.3.7\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,4 +1,4 @@\n-# SHA1:5bd33f1c06b3fb16f7ab50e80ed309655d110713\n+# SHA1:fe057f95a98251b053eec8fa27df0feb722c70e8\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.6\n+werkzeug==2.3.7\n     # via -r requirements/tests-pallets-min.in\n'",0,0
src/flask/cli.py,src/flask/cli.py,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,7 @@\n from __future__ import annotations\n \n import ast\n+import importlib.metadata\n import inspect\n import os\n import platform\n@@ -241,13 +242,13 @@ def get_version(ctx, param, value):\n     if not value or ctx.resilient_parsing:\n         return\n \n-    import werkzeug\n-    from . import __version__\n+    flask_version = importlib.metadata.version(""flask"")\n+    werkzeug_version = importlib.metadata.version(""werkzeug"")\n \n     click.echo(\n         f""Python {platform.python_version()}\\n""\n-        f""Flask {__version__}\\n""\n-        f""Werkzeug {werkzeug.__version__}"",\n+        f""Flask {flask_version}\\n""\n+        f""Werkzeug {werkzeug_version}"",\n         color=ctx.color,\n     )\n     ctx.exit()\n'",4.529411764705882,4.529411764705882
src/flask/testing.py,src/flask/testing.py,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,5 +1,6 @@\n from __future__ import annotations\n \n+import importlib.metadata\n import typing as t\n from contextlib import contextmanager\n from contextlib import ExitStack\n@@ -92,6 +93,18 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         return self.app.json.dumps(obj, **kwargs)\n \n \n+_werkzeug_version = """"\n+\n+\n+def _get_werkzeug_version() -> str:\n+    global _werkzeug_version\n+\n+    if not _werkzeug_version:\n+        _werkzeug_version = importlib.metadata.version(""werkzeug"")\n+\n+    return _werkzeug_version\n+\n+\n class FlaskClient(Client):\n     """"""Works like a regular Werkzeug test client but has knowledge about\n     Flask\'s contexts to defer the cleanup of the request context until\n@@ -115,7 +128,7 @@ class FlaskClient(Client):\n         self._context_stack = ExitStack()\n         self.environ_base = {\n             ""REMOTE_ADDR"": ""127.0.0.1"",\n-            ""HTTP_USER_AGENT"": f""werkzeug/{werkzeug.__version__}"",\n+            ""HTTP_USER_AGENT"": f""Werkzeug/{_get_werkzeug_version()}"",\n         }\n \n     @contextmanager\n'",3.1818181818181817,3.0833333333333335
tests/test_cli.py,tests/test_cli.py,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,8 @@\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n+import importlib.metadata\n import os\n+import platform\n import ssl\n import sys\n import types\n@@ -227,10 +229,6 @@ def test_locate_app_suppress_raise(test_apps):\n \n \n def test_get_version(test_apps, capsys):\n-    from flask import __version__ as flask_version\n-    from werkzeug import __version__ as werkzeug_version\n-    from platform import python_version\n-\n     class MockCtx:\n         resilient_parsing = False\n         color = None\n@@ -241,9 +239,9 @@ def test_get_version(test_apps, capsys):\n     ctx = MockCtx()\n     get_version(ctx, None, ""test"")\n     out, err = capsys.readouterr()\n-    assert f""Python {python_version()}"" in out\n-    assert f""Flask {flask_version}"" in out\n-    assert f""Werkzeug {werkzeug_version}"" in out\n+    assert f""Python {platform.python_version()}"" in out\n+    assert f""Flask {importlib.metadata.version(\'flask\')}"" in out\n+    assert f""Werkzeug {importlib.metadata.version(\'werkzeug\')}"" in out\n \n \n def test_scriptinfo(test_apps, monkeypatch):\n'",1.0746268656716418,1.0746268656716418
tests/test_testing.py,tests/test_testing.py,9f9550247a2798b9dcc28081c15e266442f4e28a,02736640095ed6d5a4a409a9658eaca373fd1d48,'bump werkzeug 2.3.7\n\nuse importlib.metadata.version',"'@@ -1,6 +1,7 @@\n+import importlib.metadata\n+\n import click\n import pytest\n-import werkzeug\n \n import flask\n from flask import appcontext_popped\n@@ -38,34 +39,35 @@ def test_environ_defaults(app, client, app_ctx, req_ctx):\n         assert rv.data == b""http://localhost/""\n \n \n-def test_environ_base_default(app, client, app_ctx):\n+def test_environ_base_default(app, client):\n     @app.route(""/"")\n     def index():\n-        flask.g.user_agent = flask.request.headers[""User-Agent""]\n-        return flask.request.remote_addr\n+        flask.g.remote_addr = flask.request.remote_addr\n+        flask.g.user_agent = flask.request.user_agent.string\n+        return """"\n \n-    rv = client.get(""/"")\n-    assert rv.data == b""127.0.0.1""\n-    assert flask.g.user_agent == f""werkzeug/{werkzeug.__version__}""\n+    with client:\n+        client.get(""/"")\n+        assert flask.g.remote_addr == ""127.0.0.1""\n+        assert flask.g.user_agent == (\n+            f""Werkzeug/{importlib.metadata.version(\'werkzeug\')}""\n+        )\n \n \n-def test_environ_base_modified(app, client, app_ctx):\n+def test_environ_base_modified(app, client):\n     @app.route(""/"")\n     def index():\n-        flask.g.user_agent = flask.request.headers[""User-Agent""]\n-        return flask.request.remote_addr\n+        flask.g.remote_addr = flask.request.remote_addr\n+        flask.g.user_agent = flask.request.user_agent.string\n+        return """"\n \n-    client.environ_base[""REMOTE_ADDR""] = ""0.0.0.0""\n+    client.environ_base[""REMOTE_ADDR""] = ""192.168.0.22""\n     client.environ_base[""HTTP_USER_AGENT""] = ""Foo""\n-    rv = client.get(""/"")\n-    assert rv.data == b""0.0.0.0""\n-    assert flask.g.user_agent == ""Foo""\n \n-    client.environ_base[""REMOTE_ADDR""] = ""0.0.0.1""\n-    client.environ_base[""HTTP_USER_AGENT""] = ""Bar""\n-    rv = client.get(""/"")\n-    assert rv.data == b""0.0.0.1""\n-    assert flask.g.user_agent == ""Bar""\n+    with client:\n+        client.get(""/"")\n+        assert flask.g.remote_addr == ""192.168.0.22""\n+        assert flask.g.user_agent == ""Foo""\n \n \n def test_client_open_environ(app, client, request):\n'",1.0425531914893618,1.0425531914893618
CHANGES.rst,CHANGES.rst,3205b53c7cf69d17fee49cac6b84978175b7dd73,9f9550247a2798b9dcc28081c15e266442f4e28a,'release version 2.3.3',"'@@ -1,7 +1,7 @@\n Version 2.3.3\n -------------\n \n-Unreleased\n+Released 2023-08-21\n \n -   Python 3.12 compatibility.\n -   Require Werkzeug >= 2.3.7.\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,3205b53c7cf69d17fee49cac6b84978175b7dd73,9f9550247a2798b9dcc28081c15e266442f4e28a,'release version 2.3.3',"'@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = ""2.3.3.dev""\n+__version__ = ""2.3.3""\n \n \n def __getattr__(name):\n'",6.0,6.0
src/flask/app.py,src/flask/app.py,65271c105f7c247ecffc9a7121815276e092bd10,90967ccb9ab1f757c2637a68ea2e16b8da2605f4,'Remove print left in by accident\n\nThis was added as per 0ec7f713d679ceed2c605e62ac5d38d579f29fa0 by\nmistake.',"'@@ -409,7 +409,6 @@ class Flask(App):\n             else:\n                 subdomain = None\n \n-            print(self.config[""SERVER_NAME""], subdomain)\n             return self.url_map.bind_to_environ(\n                 request.environ,\n                 server_name=self.config[""SERVER_NAME""],\n'",4.171428571428572,4.171428571428572
CHANGES.rst,CHANGES.rst,293041a290178dc1d526075372960c3ca589d366,153433f612585409f3494a3c44160d888c02612d,'deprecate __version__ attribute',"'@@ -4,6 +4,8 @@ Version 3.0.0\n Unreleased\n \n -   Remove previously deprecated code. :pr:`5223`\n+-   Deprecate the ``__version__`` attribute. Use feature detection, or\n+    ``importlib.metadata.version(""flask"")``, instead. :issue:`5230`\n -   Restructure the code such that the Flask (app) and Blueprint\n     classes have Sans-IO bases. :pr:`5127`\n \n'",0,0
pyproject.toml,pyproject.toml,293041a290178dc1d526075372960c3ca589d366,153433f612585409f3494a3c44160d888c02612d,'deprecate __version__ attribute',"'@@ -1,5 +1,6 @@\n [project]\n name = ""Flask""\n+version = ""3.0.0.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n@@ -26,7 +27,6 @@ dependencies = [\n     ""blinker>=1.6.2"",\n     ""importlib-metadata>=3.6.0; python_version < \'3.10\'"",\n ]\n-dynamic = [""version""]\n \n [project.urls]\n Donate = ""https://palletsprojects.com/donate""\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,293041a290178dc1d526075372960c3ca589d366,153433f612585409f3494a3c44160d888c02612d,'deprecate __version__ attribute',"'@@ -1,3 +1,7 @@\n+from __future__ import annotations\n+\n+import typing as t\n+\n from . import json as json\n from .app import Flask as Flask\n from .blueprints import Blueprint as Blueprint\n@@ -38,4 +42,19 @@ from .templating import stream_template_string as stream_template_string\n from .wrappers import Request as Request\n from .wrappers import Response as Response\n \n-__version__ = ""3.0.0.dev""\n+\n+def __getattr__(name: str) -> t.Any:\n+    if name == ""__version__"":\n+        import importlib.metadata\n+        import warnings\n+\n+        warnings.warn(\n+            ""The \'__version__\' attribute is deprecated and will be removed in""\n+            "" Flask 3.1. Use feature detection or""\n+            "" \'importlib.metadata.version(\\""flask\\"")\' instead."",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return importlib.metadata.version(""flask"")\n+\n+    raise AttributeError(name)\n'",0,2.0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,0c97a411b430f96694e9980515b5e253ad999327,faef9a0fcef307f1a1c380a477b392fa4371d83d,'Bump actions/checkout from 3.5.3 to 3.6.0\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.3 to 3.6.0.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/c85c95e3d7251135ab7dc9ce3241c5835cc595a9...f43a0e5ff2bd294095638e18286ca9a3d1956744)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n+      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: '3.x'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,0c97a411b430f96694e9980515b5e253ad999327,faef9a0fcef307f1a1c380a477b392fa4371d83d,'Bump actions/checkout from 3.5.3 to 3.6.0\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3.5.3 to 3.6.0.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/c85c95e3d7251135ab7dc9ce3241c5835cc595a9...f43a0e5ff2bd294095638e18286ca9a3d1956744)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -36,7 +36,7 @@ jobs:\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9\n+      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: ${{ matrix.python }}\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,98cef9fcca23677f436b2d6d7297d14bb93b59fc,faef9a0fcef307f1a1c380a477b392fa4371d83d,'Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0\n\nBumps [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) from 1.7.0 to 1.9.0.\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.7.0...v1.9.0)\n\n---\nupdated-dependencies:\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can't pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.7.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,24c6508d39ad7fabd4c017b9a47d12539ea6b708,faef9a0fcef307f1a1c380a477b392fa4371d83d,'Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.8 to 1.8.10.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/f8c70e705ffc13c3b4d1221169b84f12a75d6ca8...b7f401de30cb6434a1e19f805ff006643653240e)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,10 +63,10 @@ jobs:\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       # Try uploading to Test PyPI first, in case something fails.\n-      - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\n+      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\n+      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n         with:\n           packages-dir: artifact/\n'",0,0
docs/patterns/javascript.rst,docs/patterns/javascript.rst,b7c1290528f907c9f41afcdfd33a2227c73e26d3,8037487165a196015a646de25cbce6d0351c8fc4,'Fix wrong spelling of JS method .innerHTML',"'@@ -197,7 +197,7 @@ in the previous section. The following example shows how to replace a\n         const geology_div = getElementById(""geology-fact"")\n         fetch(geology_url)\n             .then(response => response.text)\n-            .then(text => geology_div.innerHtml = text)\n+            .then(text => geology_div.innerHTML = text)\n     </script>\n \n \n'",1.0,1.0
CHANGES.rst,CHANGES.rst,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,b7c1290528f907c9f41afcdfd33a2227c73e26d3,'Allow self as an argument to url_for\n\nThis makes the Flask.url_for self argument positional only (Flask\nsupports Python 3.8+) thereby restoring the ability to pass self as a\nvalue argument to url_for.',"'@@ -8,6 +8,7 @@ Unreleased\n     ``importlib.metadata.version(""flask"")``, instead. :issue:`5230`\n -   Restructure the code such that the Flask (app) and Blueprint\n     classes have Sans-IO bases. :pr:`5127`\n+-   Allow self as an argument to url_for. :pr:`5264`\n \n \n Version 2.3.3\n'",0,0
src/flask/app.py,src/flask/app.py,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,b7c1290528f907c9f41afcdfd33a2227c73e26d3,'Allow self as an argument to url_for\n\nThis makes the Flask.url_for self argument positional only (Flask\nsupports Python 3.8+) thereby restoring the ability to pass self as a\nvalue argument to url_for.',"'@@ -952,6 +952,7 @@ class Flask(App):\n \n     def url_for(\n         self,\n+        /,\n         endpoint: str,\n         *,\n         _anchor: str | None = None,\n'",4.171428571428572,4.171428571428572
tests/test_helpers.py,tests/test_helpers.py,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,b7c1290528f907c9f41afcdfd33a2227c73e26d3,'Allow self as an argument to url_for\n\nThis makes the Flask.url_for self argument positional only (Flask\nsupports Python 3.8+) thereby restoring the ability to pass self as a\nvalue argument to url_for.',"'@@ -161,6 +161,13 @@ class TestUrlFor:\n         assert flask.url_for(""myview"", id=42, _method=""GET"") == ""/myview/42""\n         assert flask.url_for(""myview"", _method=""POST"") == ""/myview/create""\n \n+    def test_url_for_with_self(self, app, req_ctx):\n+        @app.route(""/<self>"")\n+        def index(self):\n+            return ""42""\n+\n+        assert flask.url_for(""index"", self=""2"") == ""/2""\n+\n \n def test_redirect_no_app():\n     response = flask.redirect(""https://localhost"", 307)\n'",1.0444444444444445,1.0425531914893618
CHANGES.rst,CHANGES.rst,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,'Bump Werkzeug 3.0.0',"'@@ -9,6 +9,7 @@ Unreleased\n -   Restructure the code such that the Flask (app) and Blueprint\n     classes have Sans-IO bases. :pr:`5127`\n -   Allow self as an argument to url_for. :pr:`5264`\n+-   Require Werkzeug >= 3.0.0.\n \n \n Version 2.3.3\n'",0,0
pyproject.toml,pyproject.toml,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,'Bump Werkzeug 3.0.0',"'@@ -20,7 +20,7 @@ classifiers = [\n ]\n requires-python = "">=3.8""\n dependencies = [\n-    ""Werkzeug>=2.3.7"",\n+    ""Werkzeug>=3.0.0"",\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.1.2"",\n     ""click>=8.1.3"",\n'",0,0
requirements/tests-pallets-min.in,requirements/tests-pallets-min.in,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,'Bump Werkzeug 3.0.0',"'@@ -1,4 +1,4 @@\n-Werkzeug==2.3.7\n+Werkzeug==3.0.0\n Jinja2==3.1.2\n MarkupSafe==2.1.1\n itsdangerous==2.1.2\n'",0,0
requirements/tests-pallets-min.txt,requirements/tests-pallets-min.txt,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,438edcdf01c392619449a6bdbb18f6cf72ef7bb9,'Bump Werkzeug 3.0.0',"'@@ -1,4 +1,4 @@\n-# SHA1:fe057f95a98251b053eec8fa27df0feb722c70e8\n+# SHA1:fbb9fae044c2e7d895de9b3d7cbb40a11a822f04\n #\n # This file is autogenerated by pip-compile-multi\n # To update, run:\n@@ -18,5 +18,5 @@ markupsafe==2.1.1\n     #   -r requirements/tests-pallets-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==2.3.7\n+werkzeug==3.0.0\n     # via -r requirements/tests-pallets-min.in\n'",0,0
CHANGES.rst,CHANGES.rst,14232513fd618be02e0ab4b223f3105fcdde3cfe,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,'Release version 3.0.0',"'@@ -1,7 +1,7 @@\n Version 3.0.0\n -------------\n \n-Unreleased\n+Released 2023-09-30\n \n -   Remove previously deprecated code. :pr:`5223`\n -   Deprecate the ``__version__`` attribute. Use feature detection, or\n'",0,0
pyproject.toml,pyproject.toml,14232513fd618be02e0ab4b223f3105fcdde3cfe,3252f2bc546759a94f7a4c4938ef561d7bb6a6ec,'Release version 3.0.0',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.0.dev""\n+version = ""3.0.0""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n'",0,0
docs/index.rst,docs/index.rst,3652ecd9e0a3aa6595a559e2a231b11ead8a156c,14232513fd618be02e0ab4b223f3105fcdde3cfe,'Update index.rst (#5291)\n\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>',"""@@ -6,7 +6,11 @@ Welcome to Flask\n .. image:: _static/flask-horizontal.png\n     :align: center\n \n-Welcome to Flask's documentation. Get started with :doc:`installation`\n+Welcome to Flask's documentation. Flask is a lightweight WSGI web application framework.\n+It is designed to make getting started quick and easy, with the ability to scale up to\n+complex applications.\n+\n+Get started with :doc:`installation`\n and then get an overview with the :doc:`quickstart`. There is also a\n more detailed :doc:`tutorial/index` that shows how to create a small but\n complete application with Flask. Common patterns are described in the\n""",0,0
examples/javascript/README.rst,examples/javascript/README.rst,541bc8dfc2263cfa1ab2f209ce6132e1835cac9b,3652ecd9e0a3aa6595a559e2a231b11ead8a156c,'examples/javascript: replace obsolete link (#5287)',"'@@ -15,7 +15,7 @@ page. Demonstrates using |fetch|_, |XMLHttpRequest|_,  and\n .. |jQuery.ajax| replace:: ``jQuery.ajax``\n .. _jQuery.ajax: https://api.jquery.com/jQuery.ajax/\n \n-.. _Flask docs: https://flask.palletsprojects.com/patterns/jquery/\n+.. _Flask docs: https://flask.palletsprojects.com/patterns/javascript/\n \n \n Install\n'",0,0
docs/testing.rst,docs/testing.rst,bb9937593de3917d17c2da1fc55489f10bb3c8b2,541bc8dfc2263cfa1ab2f209ce6132e1835cac9b,'docs/testing.rst: fix follow_redirects sample code',"'@@ -192,7 +192,7 @@ which records the request that produced that response.\n .. code-block:: python\n \n     def test_logout_redirect(client):\n-        response = client.get(""/logout"")\n+        response = client.get(""/logout"", follow_redirects=True)\n         # Check that there was one redirect response.\n         assert len(response.history) == 1\n         # Check that the second request was to the index page.\n'",1.0,1.0
docs/deploying/asgi.rst,docs/deploying/asgi.rst,be6ec06894b55b1b5a360ce3f8178c7963332ccd,14232513fd618be02e0ab4b223f3105fcdde3cfe,'Fix link to Hypercorn in docs/deploying/asgi.rst - they moved from gitlab from github.',"'@@ -20,7 +20,7 @@ wrapping the Flask app,\n     asgi_app = WsgiToAsgi(app)\n \n and then serving the ``asgi_app`` with the ASGI server, e.g. using\n-`Hypercorn <https://gitlab.com/pgjones/hypercorn>`_,\n+`Hypercorn <https://github.com/pgjones/hypercorn>`_,\n \n .. sourcecode:: text\n \n'",0,0
.readthedocs.yaml,.readthedocs.yaml,29f1bd22d75cab1b0433339425fabd21b8229228,8d9519df093864ff90ca446d4af2dc8facd3c542,'update read the docs env',"'@@ -1,8 +1,8 @@\n version: 2\n build:\n-  os: ubuntu-20.04\n+  os: ubuntu-22.04\n   tools:\n-    python: ""3.10""\n+    python: ""3.12""\n python:\n   install:\n     - requirements: requirements/docs.txt\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,c4bfd367e2f1f26838de46d0cfa2d512985f42a3,29f1bd22d75cab1b0433339425fabd21b8229228,'update description',"""@@ -1,8 +1,8 @@\n-name: 'Lock threads'\n-# Lock closed issues that have not received any further activity for\n-# two weeks. This does not close open issues, only humans may do that.\n-# We find that it is easier to respond to new issues with fresh examples\n-# rather than continuing discussions on old issues.\n+name: 'Lock inactive closed issues'\n+# Lock closed issues that have not received any further activity for two weeks.\n+# This does not close open issues, only humans may do that. We find that it is\n+# easier to respond to new issues with fresh examples rather than continuing\n+# discussions on old issues.\n \n on:\n   schedule:\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,6ee5dcc0ec93e8c11e5362f1e151d99168d6d2e6,c4bfd367e2f1f26838de46d0cfa2d512985f42a3,'update python version matrix',"""@@ -9,9 +9,6 @@ on:\n       - '*.md'\n       - '*.rst'\n   pull_request:\n-    branches:\n-      - main\n-      - '*.x'\n     paths-ignore:\n       - 'docs/**'\n       - '*.md'\n@@ -24,17 +21,17 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - {name: Linux, python: '3.11', os: ubuntu-latest, tox: py311}\n-          - {name: Windows, python: '3.11', os: windows-latest, tox: py311}\n-          - {name: Mac, python: '3.11', os: macos-latest, tox: py311}\n-          - {name: '3.12-dev', python: '3.12-dev', os: ubuntu-latest, tox: py312}\n+          - {name: Linux, python: '3.12', os: ubuntu-latest, tox: py312}\n+          - {name: Windows, python: '3.12', os: windows-latest, tox: py312}\n+          - {name: Mac, python: '3.12', os: macos-latest, tox: py312}\n+          - {name: '3.11', python: '3.11', os: ubuntu-latest, tox: py311}\n           - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: 'PyPy', python: 'pypy-3.10', os: ubuntu-latest, tox: pypy310}\n-          - {name: 'Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n+          - {name: 'Minimum Versions', python: '3.12', os: ubuntu-latest, tox: py312-min}\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n-          - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n+          - {name: Typing, python: '3.12', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,04920b30765a5884c5b6516c66feea6df0b5282f,6ee5dcc0ec93e8c11e5362f1e151d99168d6d2e6,'use pip-compile instead of pip-compile-multi',"'@@ -13,8 +13,8 @@ jobs:\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: \'3.x\'\n-          cache: \'pip\'\n-          cache-dependency-path: \'requirements/*.txt\'\n+          cache: pip\n+          cache-dependency-path: requirements*/*.txt\n       - run: pip install -r requirements/build.txt\n       # Use the commit date instead of the current date during the build.\n       - run: echo ""SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)"" >> $GITHUB_ENV\n@@ -27,7 +27,7 @@ jobs:\n         with:\n           path: ./dist\n   provenance:\n-    needs: [\'build\']\n+    needs: [build]\n     permissions:\n       actions: read\n       id-token: write\n@@ -39,7 +39,7 @@ jobs:\n   create-release:\n     # Upload the sdist, wheels, and provenance to a GitHub release. They remain\n     # available as build artifacts for a while as well.\n-    needs: [\'provenance\']\n+    needs: [provenance]\n     runs-on: ubuntu-latest\n     permissions:\n       contents: write\n@@ -53,16 +53,15 @@ jobs:\n         env:\n           GH_TOKEN: ${{ github.token }}\n   publish-pypi:\n-    needs: [\'provenance\']\n+    needs: [provenance]\n     # Wait for approval before attempting to upload to PyPI. This allows reviewing the\n     # files in the draft release.\n-    environment: \'publish\'\n+    environment: publish\n     runs-on: ubuntu-latest\n     permissions:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n-      # Try uploading to Test PyPI first, in case something fails.\n       - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n         with:\n           repository-url: https://test.pypi.org/legacy/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,04920b30765a5884c5b6516c66feea6df0b5282f,6ee5dcc0ec93e8c11e5362f1e151d99168d6d2e6,'use pip-compile instead of pip-compile-multi',"""@@ -38,7 +38,7 @@ jobs:\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n-          cache-dependency-path: 'requirements/*.txt'\n+          cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n         uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n         with:\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,04920b30765a5884c5b6516c66feea6df0b5282f,6ee5dcc0ec93e8c11e5362f1e151d99168d6d2e6,'use pip-compile instead of pip-compile-multi',"'@@ -25,10 +25,6 @@ repos:\n         additional_dependencies:\n           - flake8-bugbear\n           - flake8-implicit-str-concat\n-  - repo: https://github.com/peterdemin/pip-compile-multi\n-    rev: v2.6.3\n-    hooks:\n-      - id: pip-compile-multi-verify\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n     rev: v4.4.0\n     hooks:\n'",0,0
.github/dependabot.yml,.github/dependabot.yml,33d888622676073a5cd9d5f268933de82a0345c0,04920b30765a5884c5b6516c66feea6df0b5282f,'enable grouped updates for actions and python',"'@@ -1,9 +1,18 @@\n version: 2\n updates:\n-- package-ecosystem: ""github-actions""\n-  directory: ""/""\n-  schedule:\n-    interval: ""monthly""\n-    day: ""monday""\n-    time: ""16:00""\n-    timezone: ""UTC""\n+  - package-ecosystem: github-actions\n+    directory: /\n+    schedule:\n+      interval: monthly\n+    groups:\n+      github-actions:\n+        patterns:\n+          - \'*\'\n+  - package-ecosystem: pip\n+    directory: /requirements/\n+    schedule:\n+      interval: monthly\n+    groups:\n+      python-requirements:\n+        patterns:\n+          - \'*\'\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,4431ada1a2615c30fedf200b28cbb80c38250e7c,24653528ccb2b5ff017dd9b0d4afabfe93e2ea43,"'Bump the github-actions group with 4 updates\n\nBumps the github-actions group with 4 updates: [actions/checkout](https://github.com/actions/checkout), [actions/setup-python](https://github.com/actions/setup-python), [actions/upload-artifact](https://github.com/actions/upload-artifact) and [actions/cache](https://github.com/actions/cache).\n\n\nUpdates `actions/checkout` from 3.6.0 to 4.1.1\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/f43a0e5ff2bd294095638e18286ca9a3d1956744...b4ffde65f46336ab88eb53be808477a3936bae11)\n\nUpdates `actions/setup-python` from 4.7.0 to 4.7.1\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/61a6322f88396a6271a6ee3565807d608ecaddd1...65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236)\n\nUpdates `actions/upload-artifact` from 3.1.2 to 3.1.3\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/0b7f8abb1508181956e8e162db84b466c27e18ce...a8a3f3ad30e3422c9c7b888a15615d19a852ae32)\n\nUpdates `actions/cache` from 3.3.1 to 3.3.2\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8...704facf57e6136b1bc63b828d79edcd491f0ee84)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -9,8 +9,8 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n-      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n+      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11\n+      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236\n         with:\n           python-version: \'3.x\'\n           cache: pip\n@@ -23,7 +23,7 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce\n+      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32\n         with:\n           path: ./dist\n   provenance:\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,4431ada1a2615c30fedf200b28cbb80c38250e7c,24653528ccb2b5ff017dd9b0d4afabfe93e2ea43,"'Bump the github-actions group with 4 updates\n\nBumps the github-actions group with 4 updates: [actions/checkout](https://github.com/actions/checkout), [actions/setup-python](https://github.com/actions/setup-python), [actions/upload-artifact](https://github.com/actions/upload-artifact) and [actions/cache](https://github.com/actions/cache).\n\n\nUpdates `actions/checkout` from 3.6.0 to 4.1.1\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/f43a0e5ff2bd294095638e18286ca9a3d1956744...b4ffde65f46336ab88eb53be808477a3936bae11)\n\nUpdates `actions/setup-python` from 4.7.0 to 4.7.1\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/61a6322f88396a6271a6ee3565807d608ecaddd1...65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236)\n\nUpdates `actions/upload-artifact` from 3.1.2 to 3.1.3\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/0b7f8abb1508181956e8e162db84b466c27e18ce...a8a3f3ad30e3422c9c7b888a15615d19a852ae32)\n\nUpdates `actions/cache` from 3.3.1 to 3.3.2\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8...704facf57e6136b1bc63b828d79edcd491f0ee84)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","""@@ -33,14 +33,14 @@ jobs:\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.12', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n-      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n+      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11\n+      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n           cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n-        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n+        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ matrix.python }}|${{ hashFiles('pyproject.toml') }}\n""",0,0
.readthedocs.yaml,.readthedocs.yaml,627703656714c7011a5c7b65214cbf6ee07e3c23,54e05a282428e9a44dbd414ca70231a83ebd710d,'update read the docs env\n\n(cherry picked from commit 29f1bd22d75cab1b0433339425fabd21b8229228)',"'@@ -1,8 +1,8 @@\n version: 2\n build:\n-  os: ubuntu-20.04\n+  os: ubuntu-22.04\n   tools:\n-    python: ""3.10""\n+    python: ""3.12""\n python:\n   install:\n     - requirements: requirements/docs.txt\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,560383fe14b29d05e62d1242fd2713a3b7f84c8e,627703656714c7011a5c7b65214cbf6ee07e3c23,'update python version matrix\n\n(cherry picked from commit 6ee5dcc0ec93e8c11e5362f1e151d99168d6d2e6)',"""@@ -9,9 +9,6 @@ on:\n       - '*.md'\n       - '*.rst'\n   pull_request:\n-    branches:\n-      - main\n-      - '*.x'\n     paths-ignore:\n       - 'docs/**'\n       - '*.md'\n@@ -24,17 +21,17 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - {name: Linux, python: '3.11', os: ubuntu-latest, tox: py311}\n-          - {name: Windows, python: '3.11', os: windows-latest, tox: py311}\n-          - {name: Mac, python: '3.11', os: macos-latest, tox: py311}\n-          - {name: '3.12-dev', python: '3.12-dev', os: ubuntu-latest, tox: py312}\n+          - {name: Linux, python: '3.12', os: ubuntu-latest, tox: py312}\n+          - {name: Windows, python: '3.12', os: windows-latest, tox: py312}\n+          - {name: Mac, python: '3.12', os: macos-latest, tox: py312}\n+          - {name: '3.11', python: '3.11', os: ubuntu-latest, tox: py311}\n           - {name: '3.10', python: '3.10', os: ubuntu-latest, tox: py310}\n           - {name: '3.9', python: '3.9', os: ubuntu-latest, tox: py39}\n           - {name: '3.8', python: '3.8', os: ubuntu-latest, tox: py38}\n           - {name: 'PyPy', python: 'pypy-3.10', os: ubuntu-latest, tox: pypy310}\n-          - {name: 'Minimum Versions', python: '3.11', os: ubuntu-latest, tox: py311-min}\n+          - {name: 'Minimum Versions', python: '3.12', os: ubuntu-latest, tox: py312-min}\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n-          - {name: Typing, python: '3.11', os: ubuntu-latest, tox: typing}\n+          - {name: Typing, python: '3.12', os: ubuntu-latest, tox: typing}\n     steps:\n       - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,59fd6aa1049808f2bf2c6b3bd309ddfe9d9f6809,560383fe14b29d05e62d1242fd2713a3b7f84c8e,'use pip-compile instead of pip-compile-multi',"'@@ -13,8 +13,8 @@ jobs:\n       - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n         with:\n           python-version: \'3.x\'\n-          cache: \'pip\'\n-          cache-dependency-path: \'requirements/*.txt\'\n+          cache: pip\n+          cache-dependency-path: requirements*/*.txt\n       - run: pip install -r requirements/build.txt\n       # Use the commit date instead of the current date during the build.\n       - run: echo ""SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)"" >> $GITHUB_ENV\n@@ -27,7 +27,7 @@ jobs:\n         with:\n           path: ./dist\n   provenance:\n-    needs: [\'build\']\n+    needs: [build]\n     permissions:\n       actions: read\n       id-token: write\n@@ -39,7 +39,7 @@ jobs:\n   create-release:\n     # Upload the sdist, wheels, and provenance to a GitHub release. They remain\n     # available as build artifacts for a while as well.\n-    needs: [\'provenance\']\n+    needs: [provenance]\n     runs-on: ubuntu-latest\n     permissions:\n       contents: write\n@@ -53,16 +53,15 @@ jobs:\n         env:\n           GH_TOKEN: ${{ github.token }}\n   publish-pypi:\n-    needs: [\'provenance\']\n+    needs: [provenance]\n     # Wait for approval before attempting to upload to PyPI. This allows reviewing the\n     # files in the draft release.\n-    environment: \'publish\'\n+    environment: publish\n     runs-on: ubuntu-latest\n     permissions:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n-      # Try uploading to Test PyPI first, in case something fails.\n       - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n         with:\n           repository-url: https://test.pypi.org/legacy/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,59fd6aa1049808f2bf2c6b3bd309ddfe9d9f6809,560383fe14b29d05e62d1242fd2713a3b7f84c8e,'use pip-compile instead of pip-compile-multi',"""@@ -38,7 +38,7 @@ jobs:\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n-          cache-dependency-path: 'requirements/*.txt'\n+          cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n         uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n         with:\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,5308db0637dcc4592286ab0e6accbdd0604db494,59fd6aa1049808f2bf2c6b3bd309ddfe9d9f6809,'update pre-commit hooks',"'@@ -2,12 +2,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.1.3\n+    rev: v0.1.5\n     hooks:\n       - id: ruff\n       - id: ruff-format\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.4.0\n+    rev: v4.5.0\n     hooks:\n       - id: check-merge-conflict\n       - id: debug-statements\n'",0,0
CHANGES.rst,CHANGES.rst,66743d4f9d865775258c845db339d3fcccd016b5,5308db0637dcc4592286ab0e6accbdd0604db494,'start version 3.0.1',"'@@ -1,3 +1,9 @@\n+Version 3.0.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.0.0\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,66743d4f9d865775258c845db339d3fcccd016b5,5308db0637dcc4592286ab0e6accbdd0604db494,'start version 3.0.1',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.0""\n+version = ""3.0.1.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n'",0,0
CHANGES.rst,CHANGES.rst,4104f29956b16f3e351462651ec3c6cc5a0dd069,66743d4f9d865775258c845db339d3fcccd016b5,'type hint fix for flask.send_file',"'@@ -3,6 +3,8 @@ Version 3.0.1\n \n Unreleased\n \n+-   Correct type for ``path`` argument to ``send_file``. :issue:`5230`\n+\n \n Version 3.0.0\n -------------\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,4104f29956b16f3e351462651ec3c6cc5a0dd069,66743d4f9d865775258c845db339d3fcccd016b5,'type hint fix for flask.send_file',"'@@ -387,7 +387,7 @@ def _prepare_send_file_kwargs(**kwargs: t.Any) -> dict[str, t.Any]:\n \n \n def send_file(\n-    path_or_file: os.PathLike | str | t.BinaryIO,\n+    path_or_file: os.PathLike[t.AnyStr] | str | t.BinaryIO,\n     mimetype: str | None = None,\n     as_attachment: bool = False,\n     download_name: str | None = None,\n'",2.4705882352941178,2.4705882352941178
.github/workflows/lock.yaml,.github/workflows/lock.yaml,78ced0093ade22a5de43ce3da98a4c2526022fbf,d61198941adcb191ddb591f08d7d912e40bde8bc,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 4.0.1 to 5.0.1\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/be8aa5be94131386884a6da4189effda9b14aa21...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `pypa/gh-action-pypi-publish` from 1.8.10 to 1.8.11\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/b7f401de30cb6434a1e19f805ff006643653240e...2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -19,7 +19,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@be8aa5be94131386884a6da4189effda9b14aa21\n+      - uses: dessant/lock-threads@1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,78ced0093ade22a5de43ce3da98a4c2526022fbf,d61198941adcb191ddb591f08d7d912e40bde8bc,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 4.0.1 to 5.0.1\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/be8aa5be94131386884a6da4189effda9b14aa21...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `pypa/gh-action-pypi-publish` from 1.8.10 to 1.8.11\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/b7f401de30cb6434a1e19f805ff006643653240e...2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -62,10 +62,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n-      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n+      - uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n+      - uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n         with:\n           packages-dir: artifact/\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,452b78f24331c9805075cc0572128a91f4345e32,d61198941adcb191ddb591f08d7d912e40bde8bc,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.5 → v0.1.6](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.5...v0.1.6)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.1.5\n+    rev: v0.1.6\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
requirements/dev.txt,requirements/dev.txt,b55ccae72aba110ae08e8ef0a9cfb8649750594a,089f6a1c50ea2b18287106ecd357522bab200510,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [cryptography](https://github.com/pyca/cryptography), [mypy](https://github.com/python/mypy) and [tox](https://github.com/tox-dev/tox).\n\nUpdates `cryptography` from 41.0.5 to 41.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.5...41.0.7)\n\nUpdates `mypy` from 1.6.1 to 1.7.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.6.1...v1.7.1)\n\nUpdates `tox` from 4.11.3 to 4.11.4\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.11.3...4.11.4)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -28,7 +28,7 @@ click==8.1.7\n     # via pip-tools\n colorama==0.4.6\n     # via tox\n-cryptography==41.0.5\n+cryptography==41.0.7\n     # via -r typing.in\n distlib==0.3.7\n     # via virtualenv\n@@ -52,7 +52,7 @@ jinja2==3.1.2\n     # via sphinx\n markupsafe==2.1.3\n     # via jinja2\n-mypy==1.6.1\n+mypy==1.7.1\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -130,7 +130,7 @@ sphinxcontrib-qthelp==1.0.6\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.9\n     # via sphinx\n-tox==4.11.3\n+tox==4.11.4\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,b55ccae72aba110ae08e8ef0a9cfb8649750594a,089f6a1c50ea2b18287106ecd357522bab200510,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [cryptography](https://github.com/pyca/cryptography), [mypy](https://github.com/python/mypy) and [tox](https://github.com/tox-dev/tox).\n\nUpdates `cryptography` from 41.0.5 to 41.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.5...41.0.7)\n\nUpdates `mypy` from 1.6.1 to 1.7.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.6.1...v1.7.1)\n\nUpdates `tox` from 4.11.3 to 4.11.4\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.11.3...4.11.4)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -6,9 +6,9 @@\n #\n cffi==1.16.0\n     # via cryptography\n-cryptography==41.0.5\n+cryptography==41.0.7\n     # via -r typing.in\n-mypy==1.6.1\n+mypy==1.7.1\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,b55ccae72aba110ae08e8ef0a9cfb8649750594a,089f6a1c50ea2b18287106ecd357522bab200510,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [cryptography](https://github.com/pyca/cryptography), [mypy](https://github.com/python/mypy) and [tox](https://github.com/tox-dev/tox).\n\nUpdates `cryptography` from 41.0.5 to 41.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.5...41.0.7)\n\nUpdates `mypy` from 1.6.1 to 1.7.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.6.1...v1.7.1)\n\nUpdates `tox` from 4.11.3 to 4.11.4\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.11.3...4.11.4)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -171,7 +171,7 @@ def make_response(*args: t.Any) -> Response:\n         return current_app.response_class()\n     if len(args) == 1:\n         args = args[0]\n-    return current_app.make_response(args)  # type: ignore\n+    return current_app.make_response(args)\n \n \n def url_for(\n'",2.4705882352941178,2.4705882352941178
CHANGES.rst,CHANGES.rst,1d5abfadd7132c9a78e14e5ba6c07aed47115280,b97165db75c6f4e99c3307b4a5a1f3b0d9f4de25,"""Fixing issue 5342: 'The double quote is missing in the string'""","'@@ -4,6 +4,7 @@ Version 3.0.1\n Unreleased\n \n -   Correct type for ``path`` argument to ``send_file``. :issue:`5230`\n+-   Fix a typo in an error message for the ``flask run --key`` option. :pr:`5344`\n \n \n Version 3.0.0\n'",0,0
src/flask/cli.py,src/flask/cli.py,1d5abfadd7132c9a78e14e5ba6c07aed47115280,b97165db75c6f4e99c3307b4a5a1f3b0d9f4de25,"""Fixing issue 5342: 'The double quote is missing in the string'""","'@@ -795,7 +795,9 @@ def _validate_key(ctx, param, value):\n \n         if is_context:\n             raise click.BadParameter(\n-                \'When ""--cert"" is an SSLContext object, ""--key is not used.\', ctx, param\n+                \'When ""--cert"" is an SSLContext object, ""--key"" is not used.\',\n+                ctx,\n+                param,\n             )\n \n         if not cert:\n'",4.529411764705882,4.529411764705882
docs/server.rst,docs/server.rst,8a66990c6161b30422359244a052805dc98a5059,05eebe36abe923d065133792f14d4ab6c07336a0,'Update docs to address redesigned macOS settings app',"'@@ -76,8 +76,8 @@ following example shows that process id 6847 is using port 5000.\n             TCP 127.0.0.1:5000 0.0.0.0:0 LISTENING 6847\n \n macOS Monterey and later automatically starts a service that uses port\n-5000. To disable the service, go to System Preferences, Sharing, and\n-disable ""AirPlay Receiver"".\n+5000. You can choose to disable this service instead of using a different port by\n+searching for ""AirPlay Receiver"" in System Preferences and toggling it off.\n \n \n Deferred Errors on Reload\n'",0,0
pyproject.toml,pyproject.toml,c275573147b426fbe1a37c6bce143f7895b603b2,77f6c72cf930ae2e3c5d4dd63e7cbc4699382916,'run typing tests',"'@@ -79,7 +79,7 @@ source = [""src"", ""*/site-packages""]\n \n [tool.mypy]\n python_version = ""3.8""\n-files = [""src/flask""]\n+files = [""src/flask"", ""tests/typing""]\n show_error_codes = true\n pretty = true\n #strict = true\n'",0,0
requirements/dev.txt,requirements/dev.txt,63ff4185f9d1306c3bd54489f1adb88e7b48e588,708d62d7172a30c5b0ace1d212c5a3bc2b53b98c,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pytest](https://github.com/pytest-dev/pytest), [mypy](https://github.com/python/mypy) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pytest` from 7.4.3 to 7.4.4\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.3...7.4.4)\n\nUpdates `mypy` from 1.7.1 to 1.8.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.7.1...v1.8.0)\n\nUpdates `pre-commit` from 3.5.0 to 3.6.0\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.5.0...v3.6.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -52,7 +52,7 @@ jinja2==3.1.2\n     # via sphinx\n markupsafe==2.1.3\n     # via jinja2\n-mypy==1.7.1\n+mypy==1.8.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -78,7 +78,7 @@ pluggy==1.3.0\n     # via\n     #   pytest\n     #   tox\n-pre-commit==3.5.0\n+pre-commit==3.6.0\n     # via -r dev.in\n pycparser==2.21\n     # via cffi\n@@ -90,7 +90,7 @@ pyproject-api==1.6.1\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n-pytest==7.4.3\n+pytest==7.4.4\n     # via -r tests.in\n python-dotenv==1.0.0\n     # via -r tests.in\n'",0,0
requirements/tests.txt,requirements/tests.txt,63ff4185f9d1306c3bd54489f1adb88e7b48e588,708d62d7172a30c5b0ace1d212c5a3bc2b53b98c,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pytest](https://github.com/pytest-dev/pytest), [mypy](https://github.com/python/mypy) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pytest` from 7.4.3 to 7.4.4\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.3...7.4.4)\n\nUpdates `mypy` from 1.7.1 to 1.8.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.7.1...v1.8.0)\n\nUpdates `pre-commit` from 3.5.0 to 3.6.0\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.5.0...v3.6.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -12,7 +12,7 @@ packaging==23.2\n     # via pytest\n pluggy==1.3.0\n     # via pytest\n-pytest==7.4.3\n+pytest==7.4.4\n     # via -r tests.in\n python-dotenv==1.0.0\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,63ff4185f9d1306c3bd54489f1adb88e7b48e588,708d62d7172a30c5b0ace1d212c5a3bc2b53b98c,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pytest](https://github.com/pytest-dev/pytest), [mypy](https://github.com/python/mypy) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pytest` from 7.4.3 to 7.4.4\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.3...7.4.4)\n\nUpdates `mypy` from 1.7.1 to 1.8.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.7.1...v1.8.0)\n\nUpdates `pre-commit` from 3.5.0 to 3.6.0\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.5.0...v3.6.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -8,7 +8,7 @@ cffi==1.16.0\n     # via cryptography\n cryptography==41.0.7\n     # via -r typing.in\n-mypy==1.7.1\n+mypy==1.8.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,24ec38d6a0686f1a147420ebf4b31f5243e1cb42,c2f65dd1cfff0672b902fd5b30815f0b4137214c,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.6 → v0.1.9](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.6...v0.1.9)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.1.6\n+    rev: v0.1.9\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,8fdab74cc80c39f45aa65da5dd029c8d262756c3,24ec38d6a0686f1a147420ebf4b31f5243e1cb42,"'[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci'","'@@ -49,7 +49,7 @@ def get_load_dotenv(default: bool = True) -> bool:\n \n \n def stream_with_context(\n-    generator_or_function: t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]]\n+    generator_or_function: t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]],\n ) -> t.Iterator[t.AnyStr]:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n'",2.4705882352941178,2.4705882352941178
CHANGES.rst,CHANGES.rst,700fc7d928b7a625b04e6865b3eb282043e90f7d,c275573147b426fbe1a37c6bce143f7895b603b2,'untag without object_hook',"""@@ -5,6 +5,9 @@ Unreleased\n \n -   Correct type for ``path`` argument to ``send_file``. :issue:`5230`\n -   Fix a typo in an error message for the ``flask run --key`` option. :pr:`5344`\n+-   Session data is untagged without relying on the built-in ``json.loads``\n+    ``object_hook``. This allows other JSON providers that don't implement that.\n+    :issue:`5381`\n \n \n Version 3.0.0\n""",0,0
src/flask/json/tag.py,src/flask/json/tag.py,700fc7d928b7a625b04e6865b3eb282043e90f7d,c275573147b426fbe1a37c6bce143f7895b603b2,'untag without object_hook',"'@@ -305,10 +305,22 @@ class TaggedJSONSerializer:\n \n         return self.tags[key].to_python(value[key])\n \n+    def _untag_scan(self, value: t.Any) -> t.Any:\n+        if isinstance(value, dict):\n+            # untag each item recursively\n+            value = {k: self._untag_scan(v) for k, v in value.items()}\n+            # untag the dict itself\n+            value = self.untag(value)\n+        elif isinstance(value, list):\n+            # untag each item recursively\n+            value = [self._untag_scan(item) for item in value]\n+\n+        return value\n+\n     def dumps(self, value: t.Any) -> str:\n         """"""Tag the value and dump it to a compact JSON string.""""""\n         return dumps(self.tag(value), separators=("","", "":""))\n \n     def loads(self, value: str) -> t.Any:\n         """"""Load data from a JSON string and deserialized any tagged objects.""""""\n-        return loads(value, object_hook=self.untag)\n+        return self._untag_scan(loads(value))\n'",1.4242424242424243,1.5294117647058822
CHANGES.rst,CHANGES.rst,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"""@@ -8,6 +8,7 @@ Unreleased\n -   Session data is untagged without relying on the built-in ``json.loads``\n     ``object_hook``. This allows other JSON providers that don't implement that.\n     :issue:`5381`\n+-   Address more type findings when using mypy strict mode. :pr:`5383`\n \n \n Version 3.0.0\n""",0,0
pyproject.toml,pyproject.toml,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -82,21 +82,7 @@ python_version = ""3.8""\n files = [""src/flask"", ""tests/typing""]\n show_error_codes = true\n pretty = true\n-#strict = true\n-allow_redefinition = true\n-disallow_subclassing_any = true\n-#disallow_untyped_calls = true\n-#disallow_untyped_defs = true\n-#disallow_incomplete_defs = true\n-no_implicit_optional = true\n-local_partial_types = true\n-#no_implicit_reexport = true\n-strict_equality = true\n-warn_redundant_casts = true\n-warn_unused_configs = true\n-warn_unused_ignores = true\n-#warn_return_any = true\n-#warn_unreachable = true\n+strict = true\n \n [[tool.mypy.overrides]]\n module = [\n'",0,0
requirements/typing.in,requirements/typing.in,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -1,4 +1,6 @@\n mypy\n types-contextvars\n types-dataclasses\n+asgiref\n cryptography\n+python-dotenv\n'",0,0
requirements/typing.txt,requirements/typing.txt,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -4,19 +4,23 @@\n #\n #    pip-compile typing.in\n #\n+asgiref==3.7.2\n+    # via -r typing.in\n cffi==1.16.0\n     # via cryptography\n-cryptography==41.0.5\n+cryptography==41.0.7\n     # via -r typing.in\n-mypy==1.6.1\n+mypy==1.8.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n+python-dotenv==1.0.0\n+    # via -r typing.in\n types-contextvars==2.4.7.3\n     # via -r typing.in\n types-dataclasses==0.6.6\n     # via -r typing.in\n-typing-extensions==4.8.0\n+typing-extensions==4.9.0\n     # via mypy\n'",0,0
src/flask/app.py,src/flask/app.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -1,10 +1,10 @@\n from __future__ import annotations\n \n+import collections.abc as cabc\n import os\n import sys\n import typing as t\n import weakref\n-from collections.abc import Iterator as _abc_Iterator\n from datetime import timedelta\n from inspect import iscoroutinefunction\n from itertools import chain\n@@ -54,6 +54,9 @@ from .wrappers import Request\n from .wrappers import Response\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    from _typeshed.wsgi import StartResponse\n+    from _typeshed.wsgi import WSGIEnvironment\n+\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n \n@@ -200,11 +203,11 @@ class Flask(App):\n \n     #: The class that is used for request objects.  See :class:`~flask.Request`\n     #: for more information.\n-    request_class = Request\n+    request_class: type[Request] = Request\n \n     #: The class that is used for response objects.  See\n     #: :class:`~flask.Response` for more information.\n-    response_class = Response\n+    response_class: type[Response] = Response\n \n     #: the session interface to use.  By default an instance of\n     #: :class:`~flask.sessions.SecureCookieSessionInterface` is used here.\n@@ -216,11 +219,11 @@ class Flask(App):\n         self,\n         import_name: str,\n         static_url_path: str | None = None,\n-        static_folder: str | os.PathLike | None = ""static"",\n+        static_folder: str | os.PathLike[str] | None = ""static"",\n         static_host: str | None = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n-        template_folder: str | os.PathLike | None = ""templates"",\n+        template_folder: str | os.PathLike[str] | None = ""templates"",\n         instance_path: str | None = None,\n         instance_relative_config: bool = False,\n         root_path: str | None = None,\n@@ -282,7 +285,7 @@ class Flask(App):\n         if isinstance(value, timedelta):\n             return int(value.total_seconds())\n \n-        return value\n+        return value  # type: ignore[no-any-return]\n \n     def send_static_file(self, filename: str) -> Response:\n         """"""The view function used to serve files from\n@@ -447,13 +450,13 @@ class Flask(App):\n             or request.routing_exception.code in {307, 308}\n             or request.method in {""GET"", ""HEAD"", ""OPTIONS""}\n         ):\n-            raise request.routing_exception  # type: ignore\n+            raise request.routing_exception  # type: ignore[misc]\n \n         from .debughelpers import FormDataRoutingRedirect\n \n         raise FormDataRoutingRedirect(request)\n \n-    def update_template_context(self, context: dict) -> None:\n+    def update_template_context(self, context: dict[str, t.Any]) -> None:\n         """"""Update the template context with some commonly used variables.\n         This injects request, session, config and g into the template\n         context as well as everything template context processors want\n@@ -481,7 +484,7 @@ class Flask(App):\n \n         context.update(orig_ctx)\n \n-    def make_shell_context(self) -> dict:\n+    def make_shell_context(self) -> dict[str, t.Any]:\n         """"""Returns the shell context for an interactive shell for this\n         application.  This runs all the registered shell context\n         processors.\n@@ -724,7 +727,7 @@ class Flask(App):\n         handler = self._find_error_handler(e, request.blueprints)\n         if handler is None:\n             return e\n-        return self.ensure_sync(handler)(e)\n+        return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]\n \n     def handle_user_exception(\n         self, e: Exception\n@@ -756,7 +759,7 @@ class Flask(App):\n         if handler is None:\n             raise\n \n-        return self.ensure_sync(handler)(e)\n+        return self.ensure_sync(handler)(e)  # type: ignore[no-any-return]\n \n     def handle_exception(self, e: Exception) -> Response:\n         """"""Handle an exception that did not have an error handler\n@@ -849,7 +852,7 @@ class Flask(App):\n             return self.make_default_options_response()\n         # otherwise dispatch to the handler for that endpoint\n         view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]\n-        return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n+        return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n \n     def full_dispatch_request(self) -> Response:\n         """"""Dispatches the request and on top of that performs request\n@@ -913,7 +916,7 @@ class Flask(App):\n         rv.allow.update(methods)\n         return rv\n \n-    def ensure_sync(self, func: t.Callable) -> t.Callable:\n+    def ensure_sync(self, func: t.Callable[..., t.Any]) -> t.Callable[..., t.Any]:\n         """"""Ensure that the function is synchronous for WSGI workers.\n         Plain ``def`` functions are returned as-is. ``async def``\n         functions are wrapped to run and wait for the response.\n@@ -928,7 +931,7 @@ class Flask(App):\n         return func\n \n     def async_to_sync(\n-        self, func: t.Callable[..., t.Coroutine]\n+        self, func: t.Callable[..., t.Coroutine[t.Any, t.Any, t.Any]]\n     ) -> t.Callable[..., t.Any]:\n         """"""Return a sync function that will run the coroutine function.\n \n@@ -1166,7 +1169,7 @@ class Flask(App):\n \n         # make sure the body is an instance of the response class\n         if not isinstance(rv, self.response_class):\n-            if isinstance(rv, (str, bytes, bytearray)) or isinstance(rv, _abc_Iterator):\n+            if isinstance(rv, (str, bytes, bytearray)) or isinstance(rv, cabc.Iterator):\n                 # let the response class set the status and headers instead of\n                 # waiting to do it manually, so that the class can handle any\n                 # special logic\n@@ -1240,7 +1243,7 @@ class Flask(App):\n                     rv = self.ensure_sync(before_func)()\n \n                     if rv is not None:\n-                        return rv\n+                        return rv  # type: ignore[no-any-return]\n \n         return None\n \n@@ -1353,7 +1356,7 @@ class Flask(App):\n         """"""\n         return AppContext(self)\n \n-    def request_context(self, environ: dict) -> RequestContext:\n+    def request_context(self, environ: WSGIEnvironment) -> RequestContext:\n         """"""Create a :class:`~flask.ctx.RequestContext` representing a\n         WSGI environment. Use a ``with`` block to push the context,\n         which will make :data:`request` point at this request.\n@@ -1425,7 +1428,9 @@ class Flask(App):\n         finally:\n             builder.close()\n \n-    def wsgi_app(self, environ: dict, start_response: t.Callable) -> t.Any:\n+    def wsgi_app(\n+        self, environ: WSGIEnvironment, start_response: StartResponse\n+    ) -> cabc.Iterable[bytes]:\n         """"""The actual WSGI application. This is not implemented in\n         :meth:`__call__` so that middlewares can be applied without\n         losing a reference to the app object. Instead of doing this::\n@@ -1473,7 +1478,9 @@ class Flask(App):\n \n             ctx.pop(error)\n \n-    def __call__(self, environ: dict, start_response: t.Callable) -> t.Any:\n+    def __call__(\n+        self, environ: WSGIEnvironment, start_response: StartResponse\n+    ) -> cabc.Iterable[bytes]:\n         """"""The WSGI server calls the Flask application object as the\n         WSGI application. This calls :meth:`wsgi_app`, which can be\n         wrapped to apply middleware.\n'",4.171428571428572,4.171428571428572
src/flask/blueprints.py,src/flask/blueprints.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -39,7 +39,7 @@ class Blueprint(SansioBlueprint):\n         if isinstance(value, timedelta):\n             return int(value.total_seconds())\n \n-        return value\n+        return value  # type: ignore[no-any-return]\n \n     def send_static_file(self, filename: str) -> Response:\n         """"""The view function used to serve files from\n'",2.3333333333333335,2.3333333333333335
src/flask/cli.py,src/flask/cli.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -1,6 +1,7 @@\n from __future__ import annotations\n \n import ast\n+import collections.abc as cabc\n import importlib.metadata\n import inspect\n import os\n@@ -11,6 +12,7 @@ import traceback\n import typing as t\n from functools import update_wrapper\n from operator import itemgetter\n+from types import ModuleType\n \n import click\n from click.core import ParameterSource\n@@ -23,6 +25,12 @@ from .helpers import get_debug_flag\n from .helpers import get_load_dotenv\n \n if t.TYPE_CHECKING:\n+    import ssl\n+\n+    from _typeshed.wsgi import StartResponse\n+    from _typeshed.wsgi import WSGIApplication\n+    from _typeshed.wsgi import WSGIEnvironment\n+\n     from .app import Flask\n \n \n@@ -30,7 +38,7 @@ class NoAppException(click.UsageError):\n     """"""Raised if an application cannot be found or loaded.""""""\n \n \n-def find_best_app(module):\n+def find_best_app(module: ModuleType) -> Flask:\n     """"""Given a module instance this tries to find the best possible\n     application in the module or raises an exception.\n     """"""\n@@ -83,7 +91,7 @@ def find_best_app(module):\n     )\n \n \n-def _called_with_wrong_args(f):\n+def _called_with_wrong_args(f: t.Callable[..., Flask]) -> bool:\n     """"""Check whether calling a function raised a ``TypeError`` because\n     the call failed or because something in the factory raised the\n     error.\n@@ -109,7 +117,7 @@ def _called_with_wrong_args(f):\n         del tb\n \n \n-def find_app_by_string(module, app_name):\n+def find_app_by_string(module: ModuleType, app_name: str) -> Flask:\n     """"""Check if the given string is a variable name or a function. Call\n     a function to get the app instance, or return the variable directly.\n     """"""\n@@ -140,7 +148,11 @@ def find_app_by_string(module, app_name):\n         # Parse the positional and keyword arguments as literals.\n         try:\n             args = [ast.literal_eval(arg) for arg in expr.args]\n-            kwargs = {kw.arg: ast.literal_eval(kw.value) for kw in expr.keywords}\n+            kwargs = {\n+                kw.arg: ast.literal_eval(kw.value)\n+                for kw in expr.keywords\n+                if kw.arg is not None\n+            }\n         except ValueError:\n             # literal_eval gives cryptic error messages, show a generic\n             # message with the full expression instead.\n@@ -185,7 +197,7 @@ def find_app_by_string(module, app_name):\n     )\n \n \n-def prepare_import(path):\n+def prepare_import(path: str) -> str:\n     """"""Given a filename this will try to calculate the python path, add it\n     to the search path and return the actual module name that is expected.\n     """"""\n@@ -214,13 +226,29 @@ def prepare_import(path):\n     return ""."".join(module_name[::-1])\n \n \n-def locate_app(module_name, app_name, raise_if_not_found=True):\n+@t.overload\n+def locate_app(\n+    module_name: str, app_name: str | None, raise_if_not_found: t.Literal[True] = True\n+) -> Flask:\n+    ...\n+\n+\n+@t.overload\n+def locate_app(\n+    module_name: str, app_name: str | None, raise_if_not_found: t.Literal[False] = ...\n+) -> Flask | None:\n+    ...\n+\n+\n+def locate_app(\n+    module_name: str, app_name: str | None, raise_if_not_found: bool = True\n+) -> Flask | None:\n     try:\n         __import__(module_name)\n     except ImportError:\n         # Reraise the ImportError if it occurred within the imported module.\n         # Determine this by checking whether the trace has a depth > 1.\n-        if sys.exc_info()[2].tb_next:\n+        if sys.exc_info()[2].tb_next:  # type: ignore[union-attr]\n             raise NoAppException(\n                 f""While importing {module_name!r}, an ImportError was""\n                 f"" raised:\\n\\n{traceback.format_exc()}""\n@@ -228,7 +256,7 @@ def locate_app(module_name, app_name, raise_if_not_found=True):\n         elif raise_if_not_found:\n             raise NoAppException(f""Could not import {module_name!r}."") from None\n         else:\n-            return\n+            return None\n \n     module = sys.modules[module_name]\n \n@@ -238,7 +266,7 @@ def locate_app(module_name, app_name, raise_if_not_found=True):\n         return find_app_by_string(module, app_name)\n \n \n-def get_version(ctx, param, value):\n+def get_version(ctx: click.Context, param: click.Parameter, value: t.Any) -> None:\n     if not value or ctx.resilient_parsing:\n         return\n \n@@ -299,7 +327,7 @@ class ScriptInfo:\n             return self._loaded_app\n \n         if self.create_app is not None:\n-            app = self.create_app()\n+            app: Flask | None = self.create_app()\n         else:\n             if self.app_import_path:\n                 path, name = (\n@@ -312,10 +340,10 @@ class ScriptInfo:\n                     import_name = prepare_import(path)\n                     app = locate_app(import_name, None, raise_if_not_found=False)\n \n-                    if app:\n+                    if app is not None:\n                         break\n \n-        if not app:\n+        if app is None:\n             raise NoAppException(\n                 ""Could not locate a Flask application. Use the""\n                 "" \'flask --app\' option, \'FLASK_APP\' environment""\n@@ -334,8 +362,10 @@ class ScriptInfo:\n \n pass_script_info = click.make_pass_decorator(ScriptInfo, ensure=True)\n \n+F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n \n-def with_appcontext(f):\n+\n+def with_appcontext(f: F) -> F:\n     """"""Wraps a callback so that it\'s guaranteed to be executed with the\n     script\'s application context.\n \n@@ -350,14 +380,14 @@ def with_appcontext(f):\n     """"""\n \n     @click.pass_context\n-    def decorator(__ctx, *args, **kwargs):\n+    def decorator(ctx: click.Context, /, *args: t.Any, **kwargs: t.Any) -> t.Any:\n         if not current_app:\n-            app = __ctx.ensure_object(ScriptInfo).load_app()\n-            __ctx.with_resource(app.app_context())\n+            app = ctx.ensure_object(ScriptInfo).load_app()\n+            ctx.with_resource(app.app_context())\n \n-        return __ctx.invoke(f, *args, **kwargs)\n+        return ctx.invoke(f, *args, **kwargs)\n \n-    return update_wrapper(decorator, f)\n+    return update_wrapper(decorator, f)  # type: ignore[return-value]\n \n \n class AppGroup(click.Group):\n@@ -368,27 +398,31 @@ class AppGroup(click.Group):\n     Not to be confused with :class:`FlaskGroup`.\n     """"""\n \n-    def command(self, *args, **kwargs):\n+    def command(  # type: ignore[override]\n+        self, *args: t.Any, **kwargs: t.Any\n+    ) -> t.Callable[[t.Callable[..., t.Any]], click.Command]:\n         """"""This works exactly like the method of the same name on a regular\n         :class:`click.Group` but it wraps callbacks in :func:`with_appcontext`\n         unless it\'s disabled by passing ``with_appcontext=False``.\n         """"""\n         wrap_for_ctx = kwargs.pop(""with_appcontext"", True)\n \n-        def decorator(f):\n+        def decorator(f: t.Callable[..., t.Any]) -> click.Command:\n             if wrap_for_ctx:\n                 f = with_appcontext(f)\n-            return click.Group.command(self, *args, **kwargs)(f)\n+            return super(AppGroup, self).command(*args, **kwargs)(f)  # type: ignore[no-any-return]\n \n         return decorator\n \n-    def group(self, *args, **kwargs):\n+    def group(  # type: ignore[override]\n+        self, *args: t.Any, **kwargs: t.Any\n+    ) -> t.Callable[[t.Callable[..., t.Any]], click.Group]:\n         """"""This works exactly like the method of the same name on a regular\n         :class:`click.Group` but it defaults the group class to\n         :class:`AppGroup`.\n         """"""\n         kwargs.setdefault(""cls"", AppGroup)\n-        return click.Group.group(self, *args, **kwargs)\n+        return super().group(*args, **kwargs)  # type: ignore[no-any-return]\n \n \n def _set_app(ctx: click.Context, param: click.Option, value: str | None) -> str | None:\n@@ -545,7 +579,7 @@ class FlaskGroup(AppGroup):\n \n         self._loaded_plugin_commands = False\n \n-    def _load_plugin_commands(self):\n+    def _load_plugin_commands(self) -> None:\n         if self._loaded_plugin_commands:\n             return\n \n@@ -562,7 +596,7 @@ class FlaskGroup(AppGroup):\n \n         self._loaded_plugin_commands = True\n \n-    def get_command(self, ctx, name):\n+    def get_command(self, ctx: click.Context, name: str) -> click.Command | None:\n         self._load_plugin_commands()\n         # Look up built-in and plugin commands, which should be\n         # available even if the app fails to load.\n@@ -584,12 +618,12 @@ class FlaskGroup(AppGroup):\n         # Push an app context for the loaded app unless it is already\n         # active somehow. This makes the context available to parameter\n         # and command callbacks without needing @with_appcontext.\n-        if not current_app or current_app._get_current_object() is not app:\n+        if not current_app or current_app._get_current_object() is not app:  # type: ignore[attr-defined]\n             ctx.with_resource(app.app_context())\n \n         return app.cli.get_command(ctx, name)\n \n-    def list_commands(self, ctx):\n+    def list_commands(self, ctx: click.Context) -> list[str]:\n         self._load_plugin_commands()\n         # Start with the built-in and plugin commands.\n         rv = set(super().list_commands(ctx))\n@@ -645,14 +679,14 @@ class FlaskGroup(AppGroup):\n         return super().parse_args(ctx, args)\n \n \n-def _path_is_ancestor(path, other):\n+def _path_is_ancestor(path: str, other: str) -> bool:\n     """"""Take ``other`` and remove the length of ``path`` from it. Then join it\n     to ``path``. If it is the original value, ``path`` is an ancestor of\n     ``other``.""""""\n     return os.path.join(path, other[len(path) :].lstrip(os.sep)) == other\n \n \n-def load_dotenv(path: str | os.PathLike | None = None) -> bool:\n+def load_dotenv(path: str | os.PathLike[str] | None = None) -> bool:\n     """"""Load ""dotenv"" files in order of precedence to set environment variables.\n \n     If an env var is already set it is not overwritten, so earlier files in the\n@@ -713,7 +747,7 @@ def load_dotenv(path: str | os.PathLike | None = None) -> bool:\n     return loaded  # True if at least one file was located and loaded.\n \n \n-def show_server_banner(debug, app_import_path):\n+def show_server_banner(debug: bool, app_import_path: str | None) -> None:\n     """"""Show extra startup messages the first time the server is run,\n     ignoring the reloader.\n     """"""\n@@ -735,10 +769,12 @@ class CertParamType(click.ParamType):\n \n     name = ""path""\n \n-    def __init__(self):\n+    def __init__(self) -> None:\n         self.path_type = click.Path(exists=True, dir_okay=False, resolve_path=True)\n \n-    def convert(self, value, param, ctx):\n+    def convert(\n+        self, value: t.Any, param: click.Parameter | None, ctx: click.Context | None\n+    ) -> t.Any:\n         try:\n             import ssl\n         except ImportError:\n@@ -773,7 +809,7 @@ class CertParamType(click.ParamType):\n             raise\n \n \n-def _validate_key(ctx, param, value):\n+def _validate_key(ctx: click.Context, param: click.Parameter, value: t.Any) -> t.Any:\n     """"""The ``--key`` option must be specified when ``--cert`` is a file.\n     Modifies the ``cert`` param to be a ``(cert, key)`` pair if needed.\n     """"""\n@@ -818,10 +854,11 @@ class SeparatedPathType(click.Path):\n     validated as a :class:`click.Path` type.\n     """"""\n \n-    def convert(self, value, param, ctx):\n+    def convert(\n+        self, value: t.Any, param: click.Parameter | None, ctx: click.Context | None\n+    ) -> t.Any:\n         items = self.split_envvar_value(value)\n-        super_convert = super().convert\n-        return [super_convert(item, param, ctx) for item in items]\n+        return [super().convert(item, param, ctx) for item in items]\n \n \n @click.command(""run"", short_help=""Run a development server."")\n@@ -878,16 +915,16 @@ class SeparatedPathType(click.Path):\n )\n @pass_script_info\n def run_command(\n-    info,\n-    host,\n-    port,\n-    reload,\n-    debugger,\n-    with_threads,\n-    cert,\n-    extra_files,\n-    exclude_patterns,\n-):\n+    info: ScriptInfo,\n+    host: str,\n+    port: int,\n+    reload: bool,\n+    debugger: bool,\n+    with_threads: bool,\n+    cert: ssl.SSLContext | tuple[str, str | None] | t.Literal[""adhoc""] | None,\n+    extra_files: list[str] | None,\n+    exclude_patterns: list[str] | None,\n+) -> None:\n     """"""Run a local development server.\n \n     This server is for development purposes only. It does not provide\n@@ -897,7 +934,7 @@ def run_command(\n     option.\n     """"""\n     try:\n-        app = info.load_app()\n+        app: WSGIApplication = info.load_app()\n     except Exception as e:\n         if is_running_from_reloader():\n             # When reloading, print out the error immediately, but raise\n@@ -905,7 +942,9 @@ def run_command(\n             traceback.print_exc()\n             err = e\n \n-            def app(environ, start_response):\n+            def app(\n+                environ: WSGIEnvironment, start_response: StartResponse\n+            ) -> cabc.Iterable[bytes]:\n                 raise err from None\n \n         else:\n@@ -956,7 +995,7 @@ def shell_command() -> None:\n         f""App: {current_app.import_name}\\n""\n         f""Instance: {current_app.instance_path}""\n     )\n-    ctx: dict = {}\n+    ctx: dict[str, t.Any] = {}\n \n     # Support the regular Python interpreter startup script if someone\n     # is using it.\n'",4.529411764705882,4.361111111111111
src/flask/config.py,src/flask/config.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -8,27 +8,48 @@ import typing as t\n \n from werkzeug.utils import import_string\n \n+if t.TYPE_CHECKING:\n+    import typing_extensions as te\n \n-class ConfigAttribute:\n+    from .sansio.app import App\n+\n+\n+T = t.TypeVar(""T"")\n+\n+\n+class ConfigAttribute(t.Generic[T]):\n     """"""Makes an attribute forward to the config""""""\n \n-    def __init__(self, name: str, get_converter: t.Callable | None = None) -> None:\n+    def __init__(\n+        self, name: str, get_converter: t.Callable[[t.Any], T] | None = None\n+    ) -> None:\n         self.__name__ = name\n         self.get_converter = get_converter\n \n-    def __get__(self, obj: t.Any, owner: t.Any = None) -> t.Any:\n+    @t.overload\n+    def __get__(self, obj: None, owner: None) -> te.Self:\n+        ...\n+\n+    @t.overload\n+    def __get__(self, obj: App, owner: type[App]) -> T:\n+        ...\n+\n+    def __get__(self, obj: App | None, owner: type[App] | None = None) -> T | te.Self:\n         if obj is None:\n             return self\n+\n         rv = obj.config[self.__name__]\n+\n         if self.get_converter is not None:\n             rv = self.get_converter(rv)\n-        return rv\n \n-    def __set__(self, obj: t.Any, value: t.Any) -> None:\n+        return rv  # type: ignore[no-any-return]\n+\n+    def __set__(self, obj: App, value: t.Any) -> None:\n         obj.config[self.__name__] = value\n \n \n-class Config(dict):\n+class Config(dict):  # type: ignore[type-arg]\n     """"""Works exactly like a dict but provides ways to fill it from files\n     or special dictionaries.  There are two common patterns to populate the\n     config.\n@@ -73,7 +94,9 @@ class Config(dict):\n     """"""\n \n     def __init__(\n-        self, root_path: str | os.PathLike, defaults: dict | None = None\n+        self,\n+        root_path: str | os.PathLike[str],\n+        defaults: dict[str, t.Any] | None = None,\n     ) -> None:\n         super().__init__(defaults or {})\n         self.root_path = root_path\n@@ -166,7 +189,9 @@ class Config(dict):\n \n         return True\n \n-    def from_pyfile(self, filename: str | os.PathLike, silent: bool = False) -> bool:\n+    def from_pyfile(\n+        self, filename: str | os.PathLike[str], silent: bool = False\n+    ) -> bool:\n         """"""Updates the values in the config from a Python file.  This function\n         behaves as if the file was imported as module with the\n         :meth:`from_object` function.\n@@ -235,8 +260,8 @@ class Config(dict):\n \n     def from_file(\n         self,\n-        filename: str | os.PathLike,\n-        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n+        filename: str | os.PathLike[str],\n+        load: t.Callable[[t.IO[t.Any]], t.Mapping[str, t.Any]],\n         silent: bool = False,\n         text: bool = True,\n     ) -> bool:\n'",3.3333333333333335,3.0
src/flask/ctx.py,src/flask/ctx.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -15,6 +15,8 @@ from .signals import appcontext_popped\n from .signals import appcontext_pushed\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    from _typeshed.wsgi import WSGIEnvironment\n+\n     from .app import Flask\n     from .sessions import SessionMixin\n     from .wrappers import Request\n@@ -112,7 +114,9 @@ class _AppCtxGlobals:\n         return object.__repr__(self)\n \n \n-def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n+def after_this_request(\n+    f: ft.AfterRequestCallable[t.Any]\n+) -> ft.AfterRequestCallable[t.Any]:\n     """"""Executes a function after this request.  This is useful to modify\n     response objects.  The function is passed the response object and has\n     to return the same or a new one.\n@@ -145,7 +149,10 @@ def after_this_request(f: ft.AfterRequestCallable) -> ft.AfterRequestCallable:\n     return f\n \n \n-def copy_current_request_context(f: t.Callable) -> t.Callable:\n+F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n+\n+\n+def copy_current_request_context(f: F) -> F:\n     """"""A helper function that decorates a function to retain the current\n     request context.  This is useful when working with greenlets.  The moment\n     the function is decorated a copy of the request context is created and\n@@ -179,11 +186,11 @@ def copy_current_request_context(f: t.Callable) -> t.Callable:\n \n     ctx = ctx.copy()\n \n-    def wrapper(*args, **kwargs):\n-        with ctx:\n-            return ctx.app.ensure_sync(f)(*args, **kwargs)\n+    def wrapper(*args: t.Any, **kwargs: t.Any) -> t.Any:\n+        with ctx:  # type: ignore[union-attr]\n+            return ctx.app.ensure_sync(f)(*args, **kwargs)  # type: ignore[union-attr]\n \n-    return update_wrapper(wrapper, f)\n+    return update_wrapper(wrapper, f)  # type: ignore[return-value]\n \n \n def has_request_context() -> bool:\n@@ -239,7 +246,7 @@ class AppContext:\n         self.app = app\n         self.url_adapter = app.create_url_adapter(None)\n         self.g: _AppCtxGlobals = app.app_ctx_globals_class()\n-        self._cv_tokens: list[contextvars.Token] = []\n+        self._cv_tokens: list[contextvars.Token[AppContext]] = []\n \n     def push(self) -> None:\n         """"""Binds the app context to the current context.""""""\n@@ -302,7 +309,7 @@ class RequestContext:\n     def __init__(\n         self,\n         app: Flask,\n-        environ: dict,\n+        environ: WSGIEnvironment,\n         request: Request | None = None,\n         session: SessionMixin | None = None,\n     ) -> None:\n@@ -321,9 +328,11 @@ class RequestContext:\n         # Functions that should be executed after the request on the response\n         # object.  These will be called before the regular ""after_request""\n         # functions.\n-        self._after_request_functions: list[ft.AfterRequestCallable] = []\n+        self._after_request_functions: list[ft.AfterRequestCallable[t.Any]] = []\n \n-        self._cv_tokens: list[tuple[contextvars.Token, AppContext | None]] = []\n+        self._cv_tokens: list[\n+            tuple[contextvars.Token[RequestContext], AppContext | None]\n+        ] = []\n \n     def copy(self) -> RequestContext:\n         """"""Creates a copy of this request context with the same request object.\n'",1.9259259259259258,1.9259259259259258
src/flask/debughelpers.py,src/flask/debughelpers.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -2,10 +2,17 @@ from __future__ import annotations\n \n import typing as t\n \n+from jinja2.loaders import BaseLoader\n+from werkzeug.routing import RequestRedirect\n+\n from .blueprints import Blueprint\n from .globals import request_ctx\n from .sansio.app import App\n \n+if t.TYPE_CHECKING:\n+    from .sansio.scaffold import Scaffold\n+    from .wrappers import Request\n+\n \n class UnexpectedUnicodeError(AssertionError, UnicodeError):\n     """"""Raised in places where we want some better error reporting for\n@@ -18,7 +25,7 @@ class DebugFilesKeyError(KeyError, AssertionError):\n     provide a better error message than just a generic KeyError/BadRequest.\n     """"""\n \n-    def __init__(self, request, key):\n+    def __init__(self, request: Request, key: str) -> None:\n         form_matches = request.form.getlist(key)\n         buf = [\n             f""You tried to access the file {key!r} in the request.files""\n@@ -36,7 +43,7 @@ class DebugFilesKeyError(KeyError, AssertionError):\n             )\n         self.msg = """".join(buf)\n \n-    def __str__(self):\n+    def __str__(self) -> str:\n         return self.msg\n \n \n@@ -47,8 +54,9 @@ class FormDataRoutingRedirect(AssertionError):\n     307 or 308.\n     """"""\n \n-    def __init__(self, request):\n+    def __init__(self, request: Request) -> None:\n         exc = request.routing_exception\n+        assert isinstance(exc, RequestRedirect)\n         buf = [\n             f""A request was sent to \'{request.url}\', but routing issued""\n             f"" a redirect to the canonical URL \'{exc.new_url}\'.""\n@@ -70,7 +78,7 @@ class FormDataRoutingRedirect(AssertionError):\n         super().__init__("""".join(buf))\n \n \n-def attach_enctype_error_multidict(request):\n+def attach_enctype_error_multidict(request: Request) -> None:\n     """"""Patch ``request.files.__getitem__`` to raise a descriptive error\n     about ``enctype=multipart/form-data``.\n \n@@ -79,8 +87,8 @@ def attach_enctype_error_multidict(request):\n     """"""\n     oldcls = request.files.__class__\n \n-    class newcls(oldcls):\n-        def __getitem__(self, key):\n+    class newcls(oldcls):  # type: ignore[valid-type, misc]\n+        def __getitem__(self, key: str) -> t.Any:\n             try:\n                 return super().__getitem__(key)\n             except KeyError as e:\n@@ -96,7 +104,7 @@ def attach_enctype_error_multidict(request):\n     request.files.__class__ = newcls\n \n \n-def _dump_loader_info(loader) -> t.Generator:\n+def _dump_loader_info(loader: BaseLoader) -> t.Iterator[str]:\n     yield f""class: {type(loader).__module__}.{type(loader).__name__}""\n     for key, value in sorted(loader.__dict__.items()):\n         if key.startswith(""_""):\n@@ -113,7 +121,17 @@ def _dump_loader_info(loader) -> t.Generator:\n         yield f""{key}: {value!r}""\n \n \n-def explain_template_loading_attempts(app: App, template, attempts) -> None:\n+def explain_template_loading_attempts(\n+    app: App,\n+    template: str,\n+    attempts: list[\n+        tuple[\n+            BaseLoader,\n+            Scaffold,\n+            tuple[str, str | None, t.Callable[[], bool] | None] | None,\n+        ]\n+    ],\n+) -> None:\n     """"""This should help developers understand what failed""""""\n     info = [f""Locating template {template!r}:""]\n     total_found = 0\n'",4.285714285714286,4.285714285714286
src/flask/helpers.py,src/flask/helpers.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -11,6 +11,7 @@ from functools import update_wrapper\n import werkzeug.utils\n from werkzeug.exceptions import abort as _wz_abort\n from werkzeug.utils import redirect as _wz_redirect\n+from werkzeug.wrappers import Response as BaseResponse\n \n from .globals import _cv_request\n from .globals import current_app\n@@ -20,8 +21,6 @@ from .globals import session\n from .signals import message_flashed\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    from werkzeug.wrappers import Response as BaseResponse\n-\n     from .wrappers import Response\n \n \n@@ -85,16 +84,16 @@ def stream_with_context(\n     .. versionadded:: 0.9\n     """"""\n     try:\n-        gen = iter(generator_or_function)  # type: ignore\n+        gen = iter(generator_or_function)  # type: ignore[arg-type]\n     except TypeError:\n \n         def decorator(*args: t.Any, **kwargs: t.Any) -> t.Any:\n-            gen = generator_or_function(*args, **kwargs)  # type: ignore\n+            gen = generator_or_function(*args, **kwargs)  # type: ignore[operator]\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)  # type: ignore\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]\n \n-    def generator() -> t.Generator:\n+    def generator() -> t.Iterator[t.AnyStr | None]:\n         ctx = _cv_request.get(None)\n         if ctx is None:\n             raise RuntimeError(\n@@ -122,7 +121,7 @@ def stream_with_context(\n     # real generator is executed.\n     wrapped_g = generator()\n     next(wrapped_g)\n-    return wrapped_g\n+    return wrapped_g  # type: ignore[return-value]\n \n \n def make_response(*args: t.Any) -> Response:\n@@ -171,7 +170,7 @@ def make_response(*args: t.Any) -> Response:\n         return current_app.response_class()\n     if len(args) == 1:\n         args = args[0]\n-    return current_app.make_response(args)  # type: ignore\n+    return current_app.make_response(args)\n \n \n def url_for(\n@@ -513,8 +512,8 @@ def send_file(\n \n \n def send_from_directory(\n-    directory: os.PathLike | str,\n-    path: os.PathLike | str,\n+    directory: os.PathLike[str] | str,\n+    path: os.PathLike[str] | str,\n     **kwargs: t.Any,\n ) -> Response:\n     """"""Send a file from within a directory using :func:`send_file`.\n@@ -609,7 +608,7 @@ def get_root_path(import_name: str) -> str:\n             )\n \n     # filepath is import_name.py for a module, or __init__.py for a package.\n-    return os.path.dirname(os.path.abspath(filepath))\n+    return os.path.dirname(os.path.abspath(filepath))  # type: ignore[no-any-return]\n \n \n @lru_cache(maxsize=None)\n'",2.4705882352941178,2.4705882352941178
src/flask/json/__init__.py,src/flask/json/__init__.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -167,4 +167,4 @@ def jsonify(*args: t.Any, **kwargs: t.Any) -> Response:\n \n     .. versionadded:: 0.2\n     """"""\n-    return current_app.json.response(*args, **kwargs)\n+    return current_app.json.response(*args, **kwargs)  # type: ignore[return-value]\n'",1.8,1.8
src/flask/json/provider.py,src/flask/json/provider.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -11,8 +11,9 @@ from datetime import date\n from werkzeug.http import http_date\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    from werkzeug.sansio.response import Response\n+\n     from ..sansio.app import App\n-    from ..wrappers import Response\n \n \n class JSONProvider:\n@@ -35,7 +36,7 @@ class JSONProvider:\n     """"""\n \n     def __init__(self, app: App) -> None:\n-        self._app = weakref.proxy(app)\n+        self._app: App = weakref.proxy(app)\n \n     def dumps(self, obj: t.Any, **kwargs: t.Any) -> str:\n         """"""Serialize data as JSON.\n'",2.272727272727273,2.272727272727273
src/flask/json/tag.py,src/flask/json/tag.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -61,9 +61,9 @@ class JSONTag:\n \n     __slots__ = (""serializer"",)\n \n-    #: The tag to mark the serialized object with. If ``None``, this tag is\n+    #: The tag to mark the serialized object with. If empty, this tag is\n     #: only used as an intermediate step during tagging.\n-    key: str | None = None\n+    key: str = """"\n \n     def __init__(self, serializer: TaggedJSONSerializer) -> None:\n         """"""Create a tagger for the given serializer.""""""\n@@ -83,7 +83,7 @@ class JSONTag:\n         will already be removed.""""""\n         raise NotImplementedError\n \n-    def tag(self, value: t.Any) -> t.Any:\n+    def tag(self, value: t.Any) -> dict[str, t.Any]:\n         """"""Convert the value to a valid JSON type and add the tag structure\n         around it.""""""\n         return {self.key: self.to_json(value)}\n@@ -274,7 +274,7 @@ class TaggedJSONSerializer:\n         tag = tag_class(self)\n         key = tag.key\n \n-        if key is not None:\n+        if key:\n             if not force and key in self.tags:\n                 raise KeyError(f""Tag \'{key}\' is already registered."")\n \n@@ -285,7 +285,7 @@ class TaggedJSONSerializer:\n         else:\n             self.order.insert(index, tag)\n \n-    def tag(self, value: t.Any) -> dict[str, t.Any]:\n+    def tag(self, value: t.Any) -> t.Any:\n         """"""Convert a value to a tagged representation if necessary.""""""\n         for tag in self.order:\n             if tag.check(value):\n'",1.5294117647058822,1.5294117647058822
src/flask/logging.py,src/flask/logging.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -22,7 +22,10 @@ def wsgi_errors_stream() -> t.TextIO:\n     can\'t import this directly, you can refer to it as\n     ``ext://flask.logging.wsgi_errors_stream``.\n     """"""\n-    return request.environ[""wsgi.errors""] if request else sys.stderr\n+    if request:\n+        return request.environ[""wsgi.errors""]  # type: ignore[no-any-return]\n+\n+    return sys.stderr\n \n \n def has_level_handler(logger: logging.Logger) -> bool:\n'",3.6666666666666665,3.6666666666666665
src/flask/sansio/app.py,src/flask/sansio/app.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -205,7 +205,7 @@ class App(Scaffold):\n     #:\n     #: This attribute can also be configured from the config with the\n     #: ``TESTING`` configuration key.  Defaults to ``False``.\n-    testing = ConfigAttribute(""TESTING"")\n+    testing = ConfigAttribute[bool](""TESTING"")\n \n     #: If a secret key is set, cryptographic components can use this to\n     #: sign cookies and other things. Set this to a complex random value\n@@ -213,7 +213,7 @@ class App(Scaffold):\n     #:\n     #: This attribute can also be configured from the config with the\n     #: :data:`SECRET_KEY` configuration key. Defaults to ``None``.\n-    secret_key = ConfigAttribute(""SECRET_KEY"")\n+    secret_key = ConfigAttribute[t.Union[str, bytes, None]](""SECRET_KEY"")\n \n     #: A :class:`~datetime.timedelta` which is used to set the expiration\n     #: date of a permanent session.  The default is 31 days which makes a\n@@ -222,8 +222,9 @@ class App(Scaffold):\n     #: This attribute can also be configured from the config with the\n     #: ``PERMANENT_SESSION_LIFETIME`` configuration key.  Defaults to\n     #: ``timedelta(days=31)``\n-    permanent_session_lifetime = ConfigAttribute(\n-        ""PERMANENT_SESSION_LIFETIME"", get_converter=_make_timedelta\n+    permanent_session_lifetime = ConfigAttribute[timedelta](\n+        ""PERMANENT_SESSION_LIFETIME"",\n+        get_converter=_make_timedelta,  # type: ignore[arg-type]\n     )\n \n     json_provider_class: type[JSONProvider] = DefaultJSONProvider\n@@ -247,7 +248,7 @@ class App(Scaffold):\n     #:     This is a ``dict`` instead of an ``ImmutableDict`` to allow\n     #:     easier configuration.\n     #:\n-    jinja_options: dict = {}\n+    jinja_options: dict[str, t.Any] = {}\n \n     #: The rule object to use for URL rules created.  This is used by\n     #: :meth:`add_url_rule`.  Defaults to :class:`werkzeug.routing.Rule`.\n@@ -275,18 +276,18 @@ class App(Scaffold):\n     #: .. versionadded:: 1.0\n     test_cli_runner_class: type[FlaskCliRunner] | None = None\n \n-    default_config: dict\n+    default_config: dict[str, t.Any]\n     response_class: type[Response]\n \n     def __init__(\n         self,\n         import_name: str,\n         static_url_path: str | None = None,\n-        static_folder: str | os.PathLike | None = ""static"",\n+        static_folder: str | os.PathLike[str] | None = ""static"",\n         static_host: str | None = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n-        template_folder: str | os.PathLike | None = ""templates"",\n+        template_folder: str | os.PathLike[str] | None = ""templates"",\n         instance_path: str | None = None,\n         instance_relative_config: bool = False,\n         root_path: str | None = None,\n@@ -384,7 +385,7 @@ class App(Scaffold):\n         #: ``\'foo\'``.\n         #:\n         #: .. versionadded:: 0.7\n-        self.extensions: dict = {}\n+        self.extensions: dict[str, t.Any] = {}\n \n         #: The :class:`~werkzeug.routing.Map` for this instance.  You can use\n         #: this to change the routing converters after the class was created\n@@ -436,7 +437,7 @@ class App(Scaffold):\n         .. versionadded:: 0.8\n         """"""\n         if self.import_name == ""__main__"":\n-            fn = getattr(sys.modules[""__main__""], ""__file__"", None)\n+            fn: str | None = getattr(sys.modules[""__main__""], ""__file__"", None)\n             if fn is None:\n                 return ""__main__""\n             return os.path.splitext(os.path.basename(fn))[0]\n@@ -560,7 +561,7 @@ class App(Scaffold):\n \n         Default: ``False``\n         """"""\n-        return self.config[""DEBUG""]\n+        return self.config[""DEBUG""]  # type: ignore[no-any-return]\n \n     @debug.setter\n     def debug(self, value: bool) -> None:\n@@ -650,10 +651,10 @@ class App(Scaffold):\n         # Add the required methods now.\n         methods |= required_methods\n \n-        rule = self.url_rule_class(rule, methods=methods, **options)\n-        rule.provide_automatic_options = provide_automatic_options  # type: ignore\n+        rule_obj = self.url_rule_class(rule, methods=methods, **options)\n+        rule_obj.provide_automatic_options = provide_automatic_options  # type: ignore[attr-defined]\n \n-        self.url_map.add(rule)\n+        self.url_map.add(rule_obj)\n         if view_func is not None:\n             old_func = self.view_functions.get(endpoint)\n             if old_func is not None and old_func != view_func:\n@@ -911,7 +912,7 @@ class App(Scaffold):\n             Response=self.response_class,  # type: ignore[arg-type]\n         )\n \n-    def inject_url_defaults(self, endpoint: str, values: dict) -> None:\n+    def inject_url_defaults(self, endpoint: str, values: dict[str, t.Any]) -> None:\n         """"""Injects the URL defaults for the given endpoint directly into\n         the values dictionary passed.  This is used internally and\n         automatically called on URL building.\n'",2.2941176470588234,2.2941176470588234
src/flask/sansio/blueprints.py,src/flask/sansio/blueprints.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -14,8 +14,8 @@ from .scaffold import setupmethod\n if t.TYPE_CHECKING:  # pragma: no cover\n     from .app import App\n \n-DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], t.Callable]\n-T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable)\n+DeferredSetupFunction = t.Callable[[""BlueprintSetupState""], None]\n+T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable[t.Any])\n T_before_request = t.TypeVar(""T_before_request"", bound=ft.BeforeRequestCallable)\n T_error_handler = t.TypeVar(""T_error_handler"", bound=ft.ErrorHandlerCallable)\n T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n@@ -88,7 +88,7 @@ class BlueprintSetupState:\n         self,\n         rule: str,\n         endpoint: str | None = None,\n-        view_func: t.Callable | None = None,\n+        view_func: ft.RouteCallable | None = None,\n         **options: t.Any,\n     ) -> None:\n         """"""A helper method to register a rule (and optionally a view function)\n@@ -175,14 +175,14 @@ class Blueprint(Scaffold):\n         self,\n         name: str,\n         import_name: str,\n-        static_folder: str | os.PathLike | None = None,\n+        static_folder: str | os.PathLike[str] | None = None,\n         static_url_path: str | None = None,\n-        template_folder: str | os.PathLike | None = None,\n+        template_folder: str | os.PathLike[str] | None = None,\n         url_prefix: str | None = None,\n         subdomain: str | None = None,\n-        url_defaults: dict | None = None,\n+        url_defaults: dict[str, t.Any] | None = None,\n         root_path: str | None = None,\n-        cli_group: str | None = _sentinel,  # type: ignore\n+        cli_group: str | None = _sentinel,  # type: ignore[assignment]\n     ):\n         super().__init__(\n             import_name=import_name,\n@@ -208,7 +208,7 @@ class Blueprint(Scaffold):\n \n         self.url_values_defaults = url_defaults\n         self.cli_group = cli_group\n-        self._blueprints: list[tuple[Blueprint, dict]] = []\n+        self._blueprints: list[tuple[Blueprint, dict[str, t.Any]]] = []\n \n     def _check_setup_finished(self, f_name: str) -> None:\n         if self._got_registered_once:\n@@ -221,7 +221,7 @@ class Blueprint(Scaffold):\n             )\n \n     @setupmethod\n-    def record(self, func: t.Callable) -> None:\n+    def record(self, func: DeferredSetupFunction) -> None:\n         """"""Registers a function that is called when the blueprint is\n         registered on the application.  This function is called with the\n         state as argument as returned by the :meth:`make_setup_state`\n@@ -230,7 +230,7 @@ class Blueprint(Scaffold):\n         self.deferred_functions.append(func)\n \n     @setupmethod\n-    def record_once(self, func: t.Callable) -> None:\n+    def record_once(self, func: DeferredSetupFunction) -> None:\n         """"""Works like :meth:`record` but wraps the function in another\n         function that will ensure the function is only called once.  If the\n         blueprint is registered a second time on the application, the\n@@ -244,7 +244,7 @@ class Blueprint(Scaffold):\n         self.record(update_wrapper(wrapper, func))\n \n     def make_setup_state(\n-        self, app: App, options: dict, first_registration: bool = False\n+        self, app: App, options: dict[str, t.Any], first_registration: bool = False\n     ) -> BlueprintSetupState:\n         """"""Creates an instance of :meth:`~flask.blueprints.BlueprintSetupState`\n         object that is later passed to the register callback functions.\n@@ -270,7 +270,7 @@ class Blueprint(Scaffold):\n             raise ValueError(""Cannot register a blueprint on itself"")\n         self._blueprints.append((blueprint, options))\n \n-    def register(self, app: App, options: dict) -> None:\n+    def register(self, app: App, options: dict[str, t.Any]) -> None:\n         """"""Called by :meth:`Flask.register_blueprint` to register all\n         views and callbacks registered on the blueprint with the\n         application. Creates a :class:`.BlueprintSetupState` and calls\n@@ -377,7 +377,10 @@ class Blueprint(Scaffold):\n             blueprint.register(app, bp_options)\n \n     def _merge_blueprint_funcs(self, app: App, name: str) -> None:\n-        def extend(bp_dict, parent_dict):\n+        def extend(\n+            bp_dict: dict[ft.AppOrBlueprintKey, list[t.Any]],\n+            parent_dict: dict[ft.AppOrBlueprintKey, list[t.Any]],\n+        ) -> None:\n             for key, values in bp_dict.items():\n                 key = name if key is None else f""{name}.{key}""\n                 parent_dict[key].extend(values)\n@@ -598,7 +601,10 @@ class Blueprint(Scaffold):\n         """"""\n \n         def decorator(f: T_error_handler) -> T_error_handler:\n-            self.record_once(lambda s: s.app.errorhandler(code)(f))\n+            def from_blueprint(state: BlueprintSetupState) -> None:\n+                state.app.errorhandler(code)(f)\n+\n+            self.record_once(from_blueprint)\n             return f\n \n         return decorator\n'",2.484848484848485,2.4411764705882355
src/flask/sansio/scaffold.py,src/flask/sansio/scaffold.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -8,6 +8,7 @@ import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n \n+import click\n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n@@ -22,7 +23,7 @@ from ..templating import _default_template_ctx_processor\n _sentinel = object()\n \n F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n-T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable)\n+T_after_request = t.TypeVar(""T_after_request"", bound=ft.AfterRequestCallable[t.Any])\n T_before_request = t.TypeVar(""T_before_request"", bound=ft.BeforeRequestCallable)\n T_error_handler = t.TypeVar(""T_error_handler"", bound=ft.ErrorHandlerCallable)\n T_teardown = t.TypeVar(""T_teardown"", bound=ft.TeardownCallable)\n@@ -39,7 +40,7 @@ T_route = t.TypeVar(""T_route"", bound=ft.RouteCallable)\n def setupmethod(f: F) -> F:\n     f_name = f.__name__\n \n-    def wrapper_func(self, *args: t.Any, **kwargs: t.Any) -> t.Any:\n+    def wrapper_func(self: Scaffold, *args: t.Any, **kwargs: t.Any) -> t.Any:\n         self._check_setup_finished(f_name)\n         return f(self, *args, **kwargs)\n \n@@ -71,9 +72,9 @@ class Scaffold:\n     def __init__(\n         self,\n         import_name: str,\n-        static_folder: str | os.PathLike | None = None,\n+        static_folder: str | os.PathLike[str] | None = None,\n         static_url_path: str | None = None,\n-        template_folder: str | os.PathLike | None = None,\n+        template_folder: str | os.PathLike[str] | None = None,\n         root_path: str | None = None,\n     ):\n         #: The name of the package or module that this object belongs\n@@ -99,7 +100,7 @@ class Scaffold:\n         #: object. The commands are available from the ``flask`` command\n         #: once the application has been discovered and blueprints have\n         #: been registered.\n-        self.cli = AppGroup()\n+        self.cli: click.Group = AppGroup()\n \n         #: A dictionary mapping endpoint names to view functions.\n         #:\n@@ -107,7 +108,7 @@ class Scaffold:\n         #:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n-        self.view_functions: dict[str, t.Callable] = {}\n+        self.view_functions: dict[str, ft.RouteCallable] = {}\n \n         #: A data structure of registered error handlers, in the format\n         #: ``{scope: {code: {class: handler}}}``. The ``scope`` key is\n@@ -152,7 +153,7 @@ class Scaffold:\n         #: This data structure is internal. It should not be modified\n         #: directly and its format may change at any time.\n         self.after_request_funcs: dict[\n-            ft.AppOrBlueprintKey, list[ft.AfterRequestCallable]\n+            ft.AppOrBlueprintKey, list[ft.AfterRequestCallable[t.Any]]\n         ] = defaultdict(list)\n \n         #: A data structure of functions to call at the end of each\n@@ -233,7 +234,7 @@ class Scaffold:\n             return None\n \n     @static_folder.setter\n-    def static_folder(self, value: str | os.PathLike | None) -> None:\n+    def static_folder(self, value: str | os.PathLike[str] | None) -> None:\n         if value is not None:\n             value = os.fspath(value).rstrip(r""\\/"")\n \n@@ -287,7 +288,7 @@ class Scaffold:\n         self,\n         method: str,\n         rule: str,\n-        options: dict,\n+        options: dict[str, t.Any],\n     ) -> t.Callable[[T_route], T_route]:\n         if ""methods"" in options:\n             raise TypeError(""Use the \'route\' decorator to use the \'methods\' argument."")\n@@ -700,7 +701,7 @@ class Scaffold:\n             return exc_class, None\n \n \n-def _endpoint_from_view_func(view_func: t.Callable) -> str:\n+def _endpoint_from_view_func(view_func: ft.RouteCallable) -> str:\n     """"""Internal helper that returns the default endpoint for a given\n     function.  This always is the function name.\n     """"""\n@@ -717,7 +718,7 @@ def _path_is_relative_to(path: pathlib.PurePath, base: str) -> bool:\n         return False\n \n \n-def _find_package_path(import_name):\n+def _find_package_path(import_name: str) -> str:\n     """"""Find the path that contains the package or module.""""""\n     root_mod_name, _, _ = import_name.partition(""."")\n \n@@ -734,34 +735,35 @@ def _find_package_path(import_name):\n         #    - we raised `ValueError` due to `root_spec` being `None`\n         return os.getcwd()\n \n-    if root_spec.origin in {""namespace"", None}:\n-        # namespace package\n-        package_spec = importlib.util.find_spec(import_name)\n-\n-        if package_spec is not None and package_spec.submodule_search_locations:\n-            # Pick the path in the namespace that contains the submodule.\n-            package_path = pathlib.Path(\n-                os.path.commonpath(package_spec.submodule_search_locations)\n-            )\n-            search_location = next(\n-                location\n-                for location in root_spec.submodule_search_locations\n-                if _path_is_relative_to(package_path, location)\n-            )\n+    if root_spec.submodule_search_locations:\n+        if root_spec.origin is None or root_spec.origin == ""namespace"":\n+            # namespace package\n+            package_spec = importlib.util.find_spec(import_name)\n+\n+            if package_spec is not None and package_spec.submodule_search_locations:\n+                # Pick the path in the namespace that contains the submodule.\n+                package_path = pathlib.Path(\n+                    os.path.commonpath(package_spec.submodule_search_locations)\n+                )\n+                search_location = next(\n+                    location\n+                    for location in root_spec.submodule_search_locations\n+                    if _path_is_relative_to(package_path, location)\n+                )\n+            else:\n+                # Pick the first path.\n+                search_location = root_spec.submodule_search_locations[0]\n+\n+            return os.path.dirname(search_location)\n         else:\n-            # Pick the first path.\n-            search_location = root_spec.submodule_search_locations[0]\n-\n-        return os.path.dirname(search_location)\n-    elif root_spec.submodule_search_locations:\n-        # package with __init__.py\n-        return os.path.dirname(os.path.dirname(root_spec.origin))\n+            # package with __init__.py\n+            return os.path.dirname(os.path.dirname(root_spec.origin))\n     else:\n         # module\n-        return os.path.dirname(root_spec.origin)\n+        return os.path.dirname(root_spec.origin)  # type: ignore[type-var, return-value]\n \n \n-def find_package(import_name: str):\n+def find_package(import_name: str) -> tuple[str | None, str]:\n     """"""Find the prefix that a package is installed under, and the path\n     that it would be imported from.\n \n'",1.7222222222222223,1.75
src/flask/sessions.py,src/flask/sessions.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -13,12 +13,15 @@ from werkzeug.datastructures import CallbackDict\n from .json.tag import TaggedJSONSerializer\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    import typing_extensions as te\n+\n     from .app import Flask\n     from .wrappers import Request\n     from .wrappers import Response\n \n \n-class SessionMixin(MutableMapping):\n+# TODO generic when Python > 3.8\n+class SessionMixin(MutableMapping):  # type: ignore[type-arg]\n     """"""Expands a basic dictionary with session attributes.""""""\n \n     @property\n@@ -46,7 +49,8 @@ class SessionMixin(MutableMapping):\n     accessed = True\n \n \n-class SecureCookieSession(CallbackDict, SessionMixin):\n+# TODO generic when Python > 3.8\n+class SecureCookieSession(CallbackDict, SessionMixin):  # type: ignore[type-arg]\n     """"""Base class for sessions based on signed cookies.\n \n     This session backend will set the :attr:`modified` and\n@@ -69,7 +73,7 @@ class SecureCookieSession(CallbackDict, SessionMixin):\n     accessed = False\n \n     def __init__(self, initial: t.Any = None) -> None:\n-        def on_update(self) -> None:\n+        def on_update(self: te.Self) -> None:\n             self.modified = True\n             self.accessed = True\n \n@@ -178,7 +182,7 @@ class SessionInterface:\n \n     def get_cookie_name(self, app: Flask) -> str:\n         """"""The name of the session cookie. Uses``app.config[""SESSION_COOKIE_NAME""]``.""""""\n-        return app.config[""SESSION_COOKIE_NAME""]\n+        return app.config[""SESSION_COOKIE_NAME""]  # type: ignore[no-any-return]\n \n     def get_cookie_domain(self, app: Flask) -> str | None:\n         """"""The value of the ``Domain`` parameter on the session cookie. If not set,\n@@ -190,8 +194,7 @@ class SessionInterface:\n         .. versionchanged:: 2.3\n             Not set by default, does not fall back to ``SERVER_NAME``.\n         """"""\n-        rv = app.config[""SESSION_COOKIE_DOMAIN""]\n-        return rv if rv else None\n+        return app.config[""SESSION_COOKIE_DOMAIN""]  # type: ignore[no-any-return]\n \n     def get_cookie_path(self, app: Flask) -> str:\n         """"""Returns the path for which the cookie should be valid.  The\n@@ -199,27 +202,27 @@ class SessionInterface:\n         config var if it\'s set, and falls back to ``APPLICATION_ROOT`` or\n         uses ``/`` if it\'s ``None``.\n         """"""\n-        return app.config[""SESSION_COOKIE_PATH""] or app.config[""APPLICATION_ROOT""]\n+        return app.config[""SESSION_COOKIE_PATH""] or app.config[""APPLICATION_ROOT""]  # type: ignore[no-any-return]\n \n     def get_cookie_httponly(self, app: Flask) -> bool:\n         """"""Returns True if the session cookie should be httponly.  This\n         currently just returns the value of the ``SESSION_COOKIE_HTTPONLY``\n         config var.\n         """"""\n-        return app.config[""SESSION_COOKIE_HTTPONLY""]\n+        return app.config[""SESSION_COOKIE_HTTPONLY""]  # type: ignore[no-any-return]\n \n     def get_cookie_secure(self, app: Flask) -> bool:\n         """"""Returns True if the cookie should be secure.  This currently\n         just returns the value of the ``SESSION_COOKIE_SECURE`` setting.\n         """"""\n-        return app.config[""SESSION_COOKIE_SECURE""]\n+        return app.config[""SESSION_COOKIE_SECURE""]  # type: ignore[no-any-return]\n \n-    def get_cookie_samesite(self, app: Flask) -> str:\n+    def get_cookie_samesite(self, app: Flask) -> str | None:\n         """"""Return ``\'Strict\'`` or ``\'Lax\'`` if the cookie should use the\n         ``SameSite`` attribute. This currently just returns the value of\n         the :data:`SESSION_COOKIE_SAMESITE` setting.\n         """"""\n-        return app.config[""SESSION_COOKIE_SAMESITE""]\n+        return app.config[""SESSION_COOKIE_SAMESITE""]  # type: ignore[no-any-return]\n \n     def get_expiration_time(self, app: Flask, session: SessionMixin) -> datetime | None:\n         """"""A helper method that returns an expiration date for the session\n'",1.565217391304348,1.5217391304347827
src/flask/templating.py,src/flask/templating.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -57,16 +57,16 @@ class DispatchingJinjaLoader(BaseLoader):\n     def __init__(self, app: App) -> None:\n         self.app = app\n \n-    def get_source(  # type: ignore\n-        self, environment: Environment, template: str\n-    ) -> tuple[str, str | None, t.Callable | None]:\n+    def get_source(\n+        self, environment: BaseEnvironment, template: str\n+    ) -> tuple[str, str | None, t.Callable[[], bool] | None]:\n         if self.app.config[""EXPLAIN_TEMPLATE_LOADING""]:\n             return self._get_source_explained(environment, template)\n         return self._get_source_fast(environment, template)\n \n     def _get_source_explained(\n-        self, environment: Environment, template: str\n-    ) -> tuple[str, str | None, t.Callable | None]:\n+        self, environment: BaseEnvironment, template: str\n+    ) -> tuple[str, str | None, t.Callable[[], bool] | None]:\n         attempts = []\n         rv: tuple[str, str | None, t.Callable[[], bool] | None] | None\n         trv: None | (tuple[str, str | None, t.Callable[[], bool] | None]) = None\n@@ -89,8 +89,8 @@ class DispatchingJinjaLoader(BaseLoader):\n         raise TemplateNotFound(template)\n \n     def _get_source_fast(\n-        self, environment: Environment, template: str\n-    ) -> tuple[str, str | None, t.Callable | None]:\n+        self, environment: BaseEnvironment, template: str\n+    ) -> tuple[str, str | None, t.Callable[[], bool] | None]:\n         for _srcobj, loader in self._iter_loaders(template):\n             try:\n                 return loader.get_source(environment, template)\n@@ -98,9 +98,7 @@ class DispatchingJinjaLoader(BaseLoader):\n                 continue\n         raise TemplateNotFound(template)\n \n-    def _iter_loaders(\n-        self, template: str\n-    ) -> t.Generator[tuple[Scaffold, BaseLoader], None, None]:\n+    def _iter_loaders(self, template: str) -> t.Iterator[tuple[Scaffold, BaseLoader]]:\n         loader = self.app.jinja_loader\n         if loader is not None:\n             yield self.app, loader\n'",2.2,2.2
src/flask/testing.py,src/flask/testing.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -17,6 +17,7 @@ from .cli import ScriptInfo\n from .sessions import SessionMixin\n \n if t.TYPE_CHECKING:  # pragma: no cover\n+    from _typeshed.wsgi import WSGIEnvironment\n     from werkzeug.test import TestResponse\n \n     from .app import Flask\n@@ -134,7 +135,7 @@ class FlaskClient(Client):\n     @contextmanager\n     def session_transaction(\n         self, *args: t.Any, **kwargs: t.Any\n-    ) -> t.Generator[SessionMixin, None, None]:\n+    ) -> t.Iterator[SessionMixin]:\n         """"""When used in combination with a ``with`` statement this opens a\n         session transaction.  This can be used to modify the session that\n         the test client uses.  Once the ``with`` block is left the session is\n@@ -181,7 +182,7 @@ class FlaskClient(Client):\n             resp.headers.getlist(""Set-Cookie""),\n         )\n \n-    def _copy_environ(self, other):\n+    def _copy_environ(self, other: WSGIEnvironment) -> WSGIEnvironment:\n         out = {**self.environ_base, **other}\n \n         if self.preserve_context:\n@@ -189,7 +190,9 @@ class FlaskClient(Client):\n \n         return out\n \n-    def _request_from_builder_args(self, args, kwargs):\n+    def _request_from_builder_args(\n+        self, args: tuple[t.Any, ...], kwargs: dict[str, t.Any]\n+    ) -> BaseRequest:\n         kwargs[""environ_base""] = self._copy_environ(kwargs.get(""environ_base"", {}))\n         builder = EnvironBuilder(self.application, *args, **kwargs)\n \n@@ -210,7 +213,7 @@ class FlaskClient(Client):\n         ):\n             if isinstance(args[0], werkzeug.test.EnvironBuilder):\n                 builder = copy(args[0])\n-                builder.environ_base = self._copy_environ(builder.environ_base or {})\n+                builder.environ_base = self._copy_environ(builder.environ_base or {})  # type: ignore[arg-type]\n                 request = builder.get_request()\n             elif isinstance(args[0], dict):\n                 request = EnvironBuilder.from_environ(\n@@ -287,7 +290,7 @@ class FlaskCliRunner(CliRunner):\n         :return: a :class:`~click.testing.Result` object.\n         """"""\n         if cli is None:\n-            cli = self.app.cli  # type: ignore\n+            cli = self.app.cli\n \n         if ""obj"" not in kwargs:\n             kwargs[""obj""] = ScriptInfo(create_app=lambda: self.app)\n'",3.0833333333333335,3.0833333333333335
src/flask/typing.py,src/flask/typing.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -68,8 +68,10 @@ TemplateContextProcessorCallable = t.Union[\n TemplateFilterCallable = t.Callable[..., t.Any]\n TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n-URLDefaultCallable = t.Callable[[str, dict], None]\n-URLValuePreprocessorCallable = t.Callable[[t.Optional[str], t.Optional[dict]], None]\n+URLDefaultCallable = t.Callable[[str, t.Dict[str, t.Any]], None]\n+URLValuePreprocessorCallable = t.Callable[\n+    [t.Optional[str], t.Optional[t.Dict[str, t.Any]]], None\n+]\n \n # This should take Exception, but that either breaks typing the argument\n # with a specific exception, or decorating multiple times with different\n'",0,0
src/flask/views.py,src/flask/views.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -6,6 +6,8 @@ from . import typing as ft\n from .globals import current_app\n from .globals import request\n \n+F = t.TypeVar(""F"", bound=t.Callable[..., t.Any])\n+\n http_method_funcs = frozenset(\n     [""get"", ""post"", ""head"", ""options"", ""delete"", ""put"", ""trace"", ""patch""]\n )\n@@ -59,7 +61,7 @@ class View:\n     #: decorator.\n     #:\n     #: .. versionadded:: 0.8\n-    decorators: t.ClassVar[list[t.Callable]] = []\n+    decorators: t.ClassVar[list[t.Callable[[F], F]]] = []\n \n     #: Create a new instance of this view class for every request by\n     #: default. If a view subclass sets this to ``False``, the same\n@@ -105,13 +107,13 @@ class View:\n                 self = view.view_class(  # type: ignore[attr-defined]\n                     *class_args, **class_kwargs\n                 )\n-                return current_app.ensure_sync(self.dispatch_request)(**kwargs)\n+                return current_app.ensure_sync(self.dispatch_request)(**kwargs)  # type: ignore[no-any-return]\n \n         else:\n             self = cls(*class_args, **class_kwargs)\n \n             def view(**kwargs: t.Any) -> ft.ResponseReturnValue:\n-                return current_app.ensure_sync(self.dispatch_request)(**kwargs)\n+                return current_app.ensure_sync(self.dispatch_request)(**kwargs)  # type: ignore[no-any-return]\n \n         if cls.decorators:\n             view.__name__ = name\n@@ -186,4 +188,4 @@ class MethodView(View):\n             meth = getattr(self, ""get"", None)\n \n         assert meth is not None, f""Unimplemented method {request.method!r}""\n-        return current_app.ensure_sync(meth)(**kwargs)\n+        return current_app.ensure_sync(meth)(**kwargs)  # type: ignore[no-any-return]\n'",2.8333333333333335,2.8333333333333335
src/flask/wrappers.py,src/flask/wrappers.py,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,5a48a0fe6b02f62f9a0d90257c6a14d280bc9d23,'address mypy strict findings',"'@@ -3,6 +3,7 @@ from __future__ import annotations\n import typing as t\n \n from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import HTTPException\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n \n@@ -49,13 +50,13 @@ class Request(RequestBase):\n     #: raised / was raised as part of the request handling.  This is\n     #: usually a :exc:`~werkzeug.exceptions.NotFound` exception or\n     #: something similar.\n-    routing_exception: Exception | None = None\n+    routing_exception: HTTPException | None = None\n \n     @property\n-    def max_content_length(self) -> int | None:  # type: ignore\n+    def max_content_length(self) -> int | None:  # type: ignore[override]\n         """"""Read-only view of the ``MAX_CONTENT_LENGTH`` config key.""""""\n         if current_app:\n-            return current_app.config[""MAX_CONTENT_LENGTH""]\n+            return current_app.config[""MAX_CONTENT_LENGTH""]  # type: ignore[no-any-return]\n         else:\n             return None\n \n@@ -167,7 +168,7 @@ class Response(ResponseBase):\n         Werkzeug\'s docs.\n         """"""\n         if current_app:\n-            return current_app.config[""MAX_COOKIE_SIZE""]\n+            return current_app.config[""MAX_COOKIE_SIZE""]  # type: ignore[no-any-return]\n \n         # return Werkzeug\'s default when not in an app context\n         return super().max_cookie_size\n'",2.857142857142857,2.857142857142857
.pre-commit-config.yaml,.pre-commit-config.yaml,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,'update pre-commit hooks',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.1.5\n+    rev: v0.1.13\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
src/flask/ctx.py,src/flask/ctx.py,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,'update pre-commit hooks',"'@@ -115,7 +115,7 @@ class _AppCtxGlobals:\n \n \n def after_this_request(\n-    f: ft.AfterRequestCallable[t.Any]\n+    f: ft.AfterRequestCallable[t.Any],\n ) -> ft.AfterRequestCallable[t.Any]:\n     """"""Executes a function after this request.  This is useful to modify\n     response objects.  The function is passed the response object and has\n'",1.9259259259259258,1.9259259259259258
src/flask/helpers.py,src/flask/helpers.py,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,6000e80acf931b05b4911c3fa7f3ba33e2b80e64,'update pre-commit hooks',"'@@ -48,7 +48,7 @@ def get_load_dotenv(default: bool = True) -> bool:\n \n \n def stream_with_context(\n-    generator_or_function: t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]]\n+    generator_or_function: t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]],\n ) -> t.Iterator[t.AnyStr]:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n'",2.4705882352941178,2.4705882352941178
requirements/dev.txt,requirements/dev.txt,81b3c85f51834a06bc8fbecf350bc20d756d8026,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,'update requirements',"'@@ -4,17 +4,19 @@\n #\n #    pip-compile dev.in\n #\n-alabaster==0.7.13\n+alabaster==0.7.16\n     # via sphinx\n asgiref==3.7.2\n-    # via -r tests.in\n-babel==2.13.1\n+    # via\n+    #   -r tests.in\n+    #   -r typing.in\n+babel==2.14.0\n     # via sphinx\n build==1.0.3\n     # via pip-tools\n cachetools==5.3.2\n     # via tox\n-certifi==2023.7.22\n+certifi==2023.11.17\n     # via requests\n cffi==1.16.0\n     # via cryptography\n@@ -28,9 +30,9 @@ click==8.1.7\n     # via pip-tools\n colorama==0.4.6\n     # via tox\n-cryptography==41.0.5\n+cryptography==41.0.7\n     # via -r typing.in\n-distlib==0.3.7\n+distlib==0.3.8\n     # via virtualenv\n docutils==0.18.1\n     # via\n@@ -40,19 +42,19 @@ filelock==3.13.1\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.31\n+identify==2.5.33\n     # via pre-commit\n-idna==3.4\n+idna==3.6\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n iniconfig==2.0.0\n     # via pytest\n-jinja2==3.1.2\n+jinja2==3.1.3\n     # via sphinx\n markupsafe==2.1.3\n     # via jinja2\n-mypy==1.6.1\n+mypy==1.8.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -70,7 +72,7 @@ pallets-sphinx-themes==2.1.1\n     # via -r docs.in\n pip-tools==7.3.0\n     # via -r dev.in\n-platformdirs==3.11.0\n+platformdirs==4.1.0\n     # via\n     #   tox\n     #   virtualenv\n@@ -78,11 +80,11 @@ pluggy==1.3.0\n     # via\n     #   pytest\n     #   tox\n-pre-commit==3.5.0\n+pre-commit==3.6.0\n     # via -r dev.in\n pycparser==2.21\n     # via cffi\n-pygments==2.16.1\n+pygments==2.17.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -90,10 +92,12 @@ pyproject-api==1.6.1\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n-pytest==7.4.3\n+pytest==7.4.4\n     # via -r tests.in\n python-dotenv==1.0.0\n-    # via -r tests.in\n+    # via\n+    #   -r tests.in\n+    #   -r typing.in\n pyyaml==6.0.1\n     # via pre-commit\n requests==2.31.0\n@@ -106,45 +110,40 @@ sphinx==7.2.6\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n-    #   sphinxcontrib-applehelp\n-    #   sphinxcontrib-devhelp\n-    #   sphinxcontrib-htmlhelp\n     #   sphinxcontrib-log-cabinet\n-    #   sphinxcontrib-qthelp\n-    #   sphinxcontrib-serializinghtml\n sphinx-issues==3.0.1\n     # via -r docs.in\n sphinx-tabs==3.4.4\n     # via -r docs.in\n-sphinxcontrib-applehelp==1.0.7\n+sphinxcontrib-applehelp==1.0.8\n     # via sphinx\n-sphinxcontrib-devhelp==1.0.5\n+sphinxcontrib-devhelp==1.0.6\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.4\n+sphinxcontrib-htmlhelp==2.0.5\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.in\n-sphinxcontrib-qthelp==1.0.6\n+sphinxcontrib-qthelp==1.0.7\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.9\n+sphinxcontrib-serializinghtml==1.1.10\n     # via sphinx\n-tox==4.11.3\n+tox==4.12.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.in\n types-dataclasses==0.6.6\n     # via -r typing.in\n-typing-extensions==4.8.0\n+typing-extensions==4.9.0\n     # via mypy\n-urllib3==2.0.7\n+urllib3==2.1.0\n     # via requests\n-virtualenv==20.24.6\n+virtualenv==20.25.0\n     # via\n     #   pre-commit\n     #   tox\n-wheel==0.41.3\n+wheel==0.42.0\n     # via pip-tools\n \n # The following packages are considered to be unsafe in a requirements file:\n'",0,0
requirements/docs.txt,requirements/docs.txt,81b3c85f51834a06bc8fbecf350bc20d756d8026,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,'update requirements',"'@@ -4,11 +4,11 @@\n #\n #    pip-compile docs.in\n #\n-alabaster==0.7.13\n+alabaster==0.7.16\n     # via sphinx\n-babel==2.13.1\n+babel==2.14.0\n     # via sphinx\n-certifi==2023.7.22\n+certifi==2023.11.17\n     # via requests\n charset-normalizer==3.3.2\n     # via requests\n@@ -16,11 +16,11 @@ docutils==0.18.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==3.4\n+idna==3.6\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n-jinja2==3.1.2\n+jinja2==3.1.3\n     # via sphinx\n markupsafe==2.1.3\n     # via jinja2\n@@ -30,7 +30,7 @@ packaging==23.2\n     #   sphinx\n pallets-sphinx-themes==2.1.1\n     # via -r docs.in\n-pygments==2.16.1\n+pygments==2.17.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -44,29 +44,24 @@ sphinx==7.2.6\n     #   pallets-sphinx-themes\n     #   sphinx-issues\n     #   sphinx-tabs\n-    #   sphinxcontrib-applehelp\n-    #   sphinxcontrib-devhelp\n-    #   sphinxcontrib-htmlhelp\n     #   sphinxcontrib-log-cabinet\n-    #   sphinxcontrib-qthelp\n-    #   sphinxcontrib-serializinghtml\n sphinx-issues==3.0.1\n     # via -r docs.in\n sphinx-tabs==3.4.4\n     # via -r docs.in\n-sphinxcontrib-applehelp==1.0.7\n+sphinxcontrib-applehelp==1.0.8\n     # via sphinx\n-sphinxcontrib-devhelp==1.0.5\n+sphinxcontrib-devhelp==1.0.6\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.4\n+sphinxcontrib-htmlhelp==2.0.5\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.in\n-sphinxcontrib-qthelp==1.0.6\n+sphinxcontrib-qthelp==1.0.7\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.9\n+sphinxcontrib-serializinghtml==1.1.10\n     # via sphinx\n-urllib3==2.0.7\n+urllib3==2.1.0\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,81b3c85f51834a06bc8fbecf350bc20d756d8026,08d3185e87cfeccc4bf4d26ee5c4c0dfd4ec8564,'update requirements',"'@@ -12,7 +12,7 @@ packaging==23.2\n     # via pytest\n pluggy==1.3.0\n     # via pytest\n-pytest==7.4.3\n+pytest==7.4.4\n     # via -r tests.in\n python-dotenv==1.0.0\n     # via -r tests.in\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,5e059be1b327f2f2f64115d2897c5864eff69b7d,bae6ee888f647f15fabb91d21bf28314737be1c6,'update actions versions',"""@@ -3,23 +3,19 @@ name: 'Lock threads'\n # two weeks. This does not close open issues, only humans may do that.\n # We find that it is easier to respond to new issues with fresh examples\n # rather than continuing discussions on old issues.\n-\n on:\n   schedule:\n     - cron: '0 0 * * *'\n-\n permissions:\n   issues: write\n   pull-requests: write\n-\n concurrency:\n   group: lock\n-\n jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@be8aa5be94131386884a6da4189effda9b14aa21\n+      - uses: dessant/lock-threads@7de207be1d3ce97a9abe6ff1306222982d1ca9f9\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,5e059be1b327f2f2f64115d2897c5864eff69b7d,bae6ee888f647f15fabb91d21bf28314737be1c6,'update actions versions',"'@@ -9,8 +9,8 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n-      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n+      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11\n+      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c\n         with:\n           python-version: \'3.x\'\n           cache: pip\n@@ -23,8 +23,9 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce\n+      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32\n         with:\n+          name: dist\n           path: ./dist\n   provenance:\n     needs: [build]\n@@ -32,8 +33,7 @@ jobs:\n       actions: read\n       id-token: write\n       contents: write\n-    # Can\'t pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@07e64b653f10a80b6510f4568f685f8b7b9ea830\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n@@ -47,9 +47,8 @@ jobs:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       - name: create release\n         run: >\n-          gh release create --draft --repo ${{ github.repository }}\n-          ${{ github.ref_name }}\n-          *.intoto.jsonl/* artifact/*\n+          gh release create --draft --repo ${{ github.repository }} ${{ github.ref_name }} *.intoto.jsonl/* artifact/*\n+\n         env:\n           GH_TOKEN: ${{ github.token }}\n   publish-pypi:\n@@ -62,10 +61,7 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n-      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n+      - uses: pypa/gh-action-pypi-publish@f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef\n         with:\n           repository-url: https://test.pypi.org/legacy/\n-          packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e\n-        with:\n-          packages-dir: artifact/\n+      - uses: pypa/gh-action-pypi-publish@f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,5e059be1b327f2f2f64115d2897c5864eff69b7d,bae6ee888f647f15fabb91d21bf28314737be1c6,'update actions versions',"""@@ -33,14 +33,14 @@ jobs:\n           - {name: 'Development Versions', python: '3.8', os: ubuntu-latest, tox: py38-dev}\n           - {name: Typing, python: '3.12', os: ubuntu-latest, tox: typing}\n     steps:\n-      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744\n-      - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1\n+      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11\n+      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c\n         with:\n           python-version: ${{ matrix.python }}\n           cache: 'pip'\n           cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n-        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\n+        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ matrix.python }}|${{ hashFiles('pyproject.toml') }}\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,da3a0ddfe2de5be718a2d7cb3021f350bf04c402,5e059be1b327f2f2f64115d2897c5864eff69b7d,'fix slsa generator version',"""@@ -33,7 +33,8 @@ jobs:\n       actions: read\n       id-token: write\n       contents: write\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@07e64b653f10a80b6510f4568f685f8b7b9ea830\n+    # Can't pin with hash due to how this workflow works.\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,5fcc999b7df0f5cc71cfd9b74ea494b96486f84f,da3a0ddfe2de5be718a2d7cb3021f350bf04c402,'fix create release action',"'@@ -48,8 +48,9 @@ jobs:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n       - name: create release\n         run: >\n-          gh release create --draft --repo ${{ github.repository }} ${{ github.ref_name }} *.intoto.jsonl/* artifact/*\n-\n+          gh release create --draft --repo ${{ github.repository }}\n+          ${{ github.ref_name }}\n+          *.intoto.jsonl/* dist/*\n         env:\n           GH_TOKEN: ${{ github.token }}\n   publish-pypi:\n'",0,0
CHANGES.rst,CHANGES.rst,f622b1cadea2bed4ea4cc476695e9c181ec5da11,5fcc999b7df0f5cc71cfd9b74ea494b96486f84f,'release version 3.0.1',"'@@ -1,7 +1,7 @@\n Version 3.0.1\n -------------\n \n-Unreleased\n+Released 2024-01-18\n \n -   Correct type for ``path`` argument to ``send_file``. :issue:`5230`\n -   Fix a typo in an error message for the ``flask run --key`` option. :pr:`5344`\n'",0,0
pyproject.toml,pyproject.toml,f622b1cadea2bed4ea4cc476695e9c181ec5da11,5fcc999b7df0f5cc71cfd9b74ea494b96486f84f,'release version 3.0.1',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.1.dev""\n+version = ""3.0.1""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,a4bada52d0c5442011665eb1ad4bdb61c06d28fe,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 7de207be1d3ce97a9abe6ff1306222982d1ca9f9 to 1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/7de207be1d3ce97a9abe6ff1306222982d1ca9f9...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `pypa/gh-action-pypi-publish` from f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef to 2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef...2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -15,7 +15,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@7de207be1d3ce97a9abe6ff1306222982d1ca9f9\n+      - uses: dessant/lock-threads@1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,a4bada52d0c5442011665eb1ad4bdb61c06d28fe,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 7de207be1d3ce97a9abe6ff1306222982d1ca9f9 to 1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/7de207be1d3ce97a9abe6ff1306222982d1ca9f9...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `pypa/gh-action-pypi-publish` from f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef to 2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef...2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -63,7 +63,7 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a\n-      - uses: pypa/gh-action-pypi-publish@f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef\n+      - uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n         with:\n           repository-url: https://test.pypi.org/legacy/\n-      - uses: pypa/gh-action-pypi-publish@f946db0f765b9ae754e44bfd5ae5b8b91cfb37ef\n+      - uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\n'",0,0
requirements/dev.txt,requirements/dev.txt,484a7cc9a7ba2540ab2af5141196f5ab5809df33,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the python-requirements group in /requirements with 6 updates\n\nBumps the python-requirements group in /requirements with 6 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [sphinx-issues](https://github.com/sloria/sphinx-issues) | `3.0.1` | `4.0.0` |\n| [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) | `3.4.4` | `3.4.5` |\n| [cryptography](https://github.com/pyca/cryptography) | `41.0.7` | `42.0.2` |\n| [pytest](https://github.com/pytest-dev/pytest) | `7.4.4` | `8.0.0` |\n| [python-dotenv](https://github.com/theskumar/python-dotenv) | `1.0.0` | `1.0.1` |\n| [tox](https://github.com/tox-dev/tox) | `4.12.0` | `4.12.1` |\n\n\nUpdates `sphinx-issues` from 3.0.1 to 4.0.0\n- [Commits](https://github.com/sloria/sphinx-issues/compare/3.0.1...4.0.0)\n\nUpdates `sphinx-tabs` from 3.4.4 to 3.4.5\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.4.4...v3.4.5)\n\nUpdates `cryptography` from 41.0.7 to 42.0.2\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.7...42.0.2)\n\nUpdates `pytest` from 7.4.4 to 8.0.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.4...8.0.0)\n\nUpdates `python-dotenv` from 1.0.0 to 1.0.1\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v1.0.0...v1.0.1)\n\nUpdates `tox` from 4.12.0 to 4.12.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.12.0...4.12.1)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-issues\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -30,7 +30,7 @@ click==8.1.7\n     # via pip-tools\n colorama==0.4.6\n     # via tox\n-cryptography==41.0.7\n+cryptography==42.0.2\n     # via -r typing.in\n distlib==0.3.8\n     # via virtualenv\n@@ -92,9 +92,9 @@ pyproject-api==1.6.1\n     # via tox\n pyproject-hooks==1.0.0\n     # via build\n-pytest==7.4.4\n+pytest==8.0.0\n     # via -r tests.in\n-python-dotenv==1.0.0\n+python-dotenv==1.0.1\n     # via\n     #   -r tests.in\n     #   -r typing.in\n@@ -111,9 +111,9 @@ sphinx==7.2.6\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-issues==3.0.1\n+sphinx-issues==4.0.0\n     # via -r docs.in\n-sphinx-tabs==3.4.4\n+sphinx-tabs==3.4.5\n     # via -r docs.in\n sphinxcontrib-applehelp==1.0.8\n     # via sphinx\n@@ -129,7 +129,7 @@ sphinxcontrib-qthelp==1.0.7\n     # via sphinx\n sphinxcontrib-serializinghtml==1.1.10\n     # via sphinx\n-tox==4.12.0\n+tox==4.12.1\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.in\n'",0,0
requirements/docs.txt,requirements/docs.txt,484a7cc9a7ba2540ab2af5141196f5ab5809df33,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the python-requirements group in /requirements with 6 updates\n\nBumps the python-requirements group in /requirements with 6 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [sphinx-issues](https://github.com/sloria/sphinx-issues) | `3.0.1` | `4.0.0` |\n| [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) | `3.4.4` | `3.4.5` |\n| [cryptography](https://github.com/pyca/cryptography) | `41.0.7` | `42.0.2` |\n| [pytest](https://github.com/pytest-dev/pytest) | `7.4.4` | `8.0.0` |\n| [python-dotenv](https://github.com/theskumar/python-dotenv) | `1.0.0` | `1.0.1` |\n| [tox](https://github.com/tox-dev/tox) | `4.12.0` | `4.12.1` |\n\n\nUpdates `sphinx-issues` from 3.0.1 to 4.0.0\n- [Commits](https://github.com/sloria/sphinx-issues/compare/3.0.1...4.0.0)\n\nUpdates `sphinx-tabs` from 3.4.4 to 3.4.5\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.4.4...v3.4.5)\n\nUpdates `cryptography` from 41.0.7 to 42.0.2\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.7...42.0.2)\n\nUpdates `pytest` from 7.4.4 to 8.0.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.4...8.0.0)\n\nUpdates `python-dotenv` from 1.0.0 to 1.0.1\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v1.0.0...v1.0.1)\n\nUpdates `tox` from 4.12.0 to 4.12.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.12.0...4.12.1)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-issues\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -45,9 +45,9 @@ sphinx==7.2.6\n     #   sphinx-issues\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-issues==3.0.1\n+sphinx-issues==4.0.0\n     # via -r docs.in\n-sphinx-tabs==3.4.4\n+sphinx-tabs==3.4.5\n     # via -r docs.in\n sphinxcontrib-applehelp==1.0.8\n     # via sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,484a7cc9a7ba2540ab2af5141196f5ab5809df33,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the python-requirements group in /requirements with 6 updates\n\nBumps the python-requirements group in /requirements with 6 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [sphinx-issues](https://github.com/sloria/sphinx-issues) | `3.0.1` | `4.0.0` |\n| [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) | `3.4.4` | `3.4.5` |\n| [cryptography](https://github.com/pyca/cryptography) | `41.0.7` | `42.0.2` |\n| [pytest](https://github.com/pytest-dev/pytest) | `7.4.4` | `8.0.0` |\n| [python-dotenv](https://github.com/theskumar/python-dotenv) | `1.0.0` | `1.0.1` |\n| [tox](https://github.com/tox-dev/tox) | `4.12.0` | `4.12.1` |\n\n\nUpdates `sphinx-issues` from 3.0.1 to 4.0.0\n- [Commits](https://github.com/sloria/sphinx-issues/compare/3.0.1...4.0.0)\n\nUpdates `sphinx-tabs` from 3.4.4 to 3.4.5\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.4.4...v3.4.5)\n\nUpdates `cryptography` from 41.0.7 to 42.0.2\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.7...42.0.2)\n\nUpdates `pytest` from 7.4.4 to 8.0.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.4...8.0.0)\n\nUpdates `python-dotenv` from 1.0.0 to 1.0.1\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v1.0.0...v1.0.1)\n\nUpdates `tox` from 4.12.0 to 4.12.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.12.0...4.12.1)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-issues\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -12,7 +12,7 @@ packaging==23.2\n     # via pytest\n pluggy==1.3.0\n     # via pytest\n-pytest==7.4.4\n+pytest==8.0.0\n     # via -r tests.in\n-python-dotenv==1.0.0\n+python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,484a7cc9a7ba2540ab2af5141196f5ab5809df33,4df377cfbfc1d15e962a61c18920b22aebc9aa41,'Bump the python-requirements group in /requirements with 6 updates\n\nBumps the python-requirements group in /requirements with 6 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [sphinx-issues](https://github.com/sloria/sphinx-issues) | `3.0.1` | `4.0.0` |\n| [sphinx-tabs](https://github.com/executablebooks/sphinx-tabs) | `3.4.4` | `3.4.5` |\n| [cryptography](https://github.com/pyca/cryptography) | `41.0.7` | `42.0.2` |\n| [pytest](https://github.com/pytest-dev/pytest) | `7.4.4` | `8.0.0` |\n| [python-dotenv](https://github.com/theskumar/python-dotenv) | `1.0.0` | `1.0.1` |\n| [tox](https://github.com/tox-dev/tox) | `4.12.0` | `4.12.1` |\n\n\nUpdates `sphinx-issues` from 3.0.1 to 4.0.0\n- [Commits](https://github.com/sloria/sphinx-issues/compare/3.0.1...4.0.0)\n\nUpdates `sphinx-tabs` from 3.4.4 to 3.4.5\n- [Release notes](https://github.com/executablebooks/sphinx-tabs/releases)\n- [Changelog](https://github.com/executablebooks/sphinx-tabs/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/executablebooks/sphinx-tabs/compare/v3.4.4...v3.4.5)\n\nUpdates `cryptography` from 41.0.7 to 42.0.2\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.7...42.0.2)\n\nUpdates `pytest` from 7.4.4 to 8.0.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/7.4.4...8.0.0)\n\nUpdates `python-dotenv` from 1.0.0 to 1.0.1\n- [Release notes](https://github.com/theskumar/python-dotenv/releases)\n- [Changelog](https://github.com/theskumar/python-dotenv/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/theskumar/python-dotenv/compare/v1.0.0...v1.0.1)\n\nUpdates `tox` from 4.12.0 to 4.12.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.12.0...4.12.1)\n\n---\nupdated-dependencies:\n- dependency-name: sphinx-issues\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: sphinx-tabs\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: python-requirements\n- dependency-name: python-dotenv\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,7 +8,7 @@ asgiref==3.7.2\n     # via -r typing.in\n cffi==1.16.0\n     # via cryptography\n-cryptography==41.0.7\n+cryptography==42.0.2\n     # via -r typing.in\n mypy==1.8.0\n     # via -r typing.in\n@@ -16,7 +16,7 @@ mypy-extensions==1.0.0\n     # via mypy\n pycparser==2.21\n     # via cffi\n-python-dotenv==1.0.0\n+python-dotenv==1.0.1\n     # via -r typing.in\n types-contextvars==2.4.7.3\n     # via -r typing.in\n'",0,0
CHANGES.rst,CHANGES.rst,3207af8827d4162ef5841249c46fbb9da043c551,233be7a0fa8b2a77189ae9a2fc47c579245a2f3d,'start version 3.0.2',"'@@ -1,3 +1,9 @@\n+Version 3.0.2\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.0.1\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,3207af8827d4162ef5841249c46fbb9da043c551,233be7a0fa8b2a77189ae9a2fc47c579245a2f3d,'start version 3.0.2',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.1""\n+version = ""3.0.2.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n'",0,0
CHANGES.rst,CHANGES.rst,ecc057dd4857e655f0844b781899a917852042a4,3207af8827d4162ef5841249c46fbb9da043c551,'fix jinja_loader annotation',"'@@ -3,6 +3,8 @@ Version 3.0.2\n \n Unreleased\n \n+-   Correct type for ``jinja_loader`` property. :issue:`5388`\n+\n \n Version 3.0.1\n -------------\n'",0,0
src/flask/sansio/scaffold.py,src/flask/sansio/scaffold.py,ecc057dd4857e655f0844b781899a917852042a4,3207af8827d4162ef5841249c46fbb9da043c551,'fix jinja_loader annotation',"'@@ -9,6 +9,7 @@ from collections import defaultdict\n from functools import update_wrapper\n \n import click\n+from jinja2 import BaseLoader\n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n@@ -272,7 +273,7 @@ class Scaffold:\n         self._static_url_path = value\n \n     @cached_property\n-    def jinja_loader(self) -> FileSystemLoader | None:\n+    def jinja_loader(self) -> BaseLoader | None:\n         """"""The Jinja loader for this object\'s templates. By default this\n         is a class :class:`jinja2.loaders.FileSystemLoader` to\n         :attr:`template_folder` if it is set.\n'",1.75,1.75
CHANGES.rst,CHANGES.rst,1af8f95785b85d0937153ee63d504c0b51934d80,3435d2ff1589eb0c1a85cc294a20985910a1a606,'fix super call in list comprehension',"'@@ -4,6 +4,8 @@ Version 3.0.2\n Unreleased\n \n -   Correct type for ``jinja_loader`` property. :issue:`5388`\n+-   Fix error with ``--extra-files`` and ``--exclude-patterns`` CLI options.\n+    :issue:`5391`\n \n \n Version 3.0.1\n'",0,0
src/flask/cli.py,src/flask/cli.py,1af8f95785b85d0937153ee63d504c0b51934d80,3435d2ff1589eb0c1a85cc294a20985910a1a606,'fix super call in list comprehension',"'@@ -858,7 +858,9 @@ class SeparatedPathType(click.Path):\n         self, value: t.Any, param: click.Parameter | None, ctx: click.Context | None\n     ) -> t.Any:\n         items = self.split_envvar_value(value)\n-        return [super().convert(item, param, ctx) for item in items]\n+        # can\'t call no-arg super() inside list comprehension until Python 3.12\n+        super_convert = super().convert\n+        return [super_convert(item, param, ctx) for item in items]\n \n \n @click.command(""run"", short_help=""Run a development server."")\n'",4.361111111111111,4.361111111111111
tests/test_cli.py,tests/test_cli.py,1af8f95785b85d0937153ee63d504c0b51934d80,3435d2ff1589eb0c1a85cc294a20985910a1a606,'fix super call in list comprehension',"'@@ -679,3 +679,8 @@ def test_cli_empty(app):\n \n     result = app.test_cli_runner().invoke(args=[""blue"", ""--help""])\n     assert result.exit_code == 2, f""Unexpected success:\\n\\n{result.output}""\n+\n+\n+def test_run_exclude_patterns():\n+    ctx = run_command.make_context(""run"", [""--exclude-patterns"", __file__])\n+    assert ctx.params[""exclude_patterns""] == [__file__]\n'",1.0746268656716418,1.0735294117647058
CHANGES.rst,CHANGES.rst,d2030595dcdc8ca5701504f00255360fb12a3a2b,d7209a957004d4758f32fd8b2f89da11f5fe5718,'release version 3.0.2',"'@@ -1,7 +1,7 @@\n Version 3.0.2\n -------------\n \n-Unreleased\n+Released 2024-02-03\n \n -   Correct type for ``jinja_loader`` property. :issue:`5388`\n -   Fix error with ``--extra-files`` and ``--exclude-patterns`` CLI options.\n'",0,0
pyproject.toml,pyproject.toml,d2030595dcdc8ca5701504f00255360fb12a3a2b,d7209a957004d4758f32fd8b2f89da11f5fe5718,'release version 3.0.2',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.2.dev""\n+version = ""3.0.2""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.rst""\n license = {file = ""LICENSE.rst""}\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,ad36383951c130f16e02b5f61b1161da99bc1ca4,6b422a05f37641ca0b84422f2436e9d4bd144376,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.13 → v0.2.0](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.13...v0.2.0)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.1.13\n+    rev: v0.2.0\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,0e59442f6cce9442c1dcaf8515df7182312fa6cd,b90a4f1f4a370e92054b9cc9db0efcb864f87ebe,"'Use per-release URLs in GH env UI when publishing to the PyPI\n\nThis essentially, makes the UI nicer in a few places with a clickable link to the released version being presented in the web interface of GitHub.'","'@@ -55,9 +55,11 @@ jobs:\n           GH_TOKEN: ${{ github.token }}\n   publish-pypi:\n     needs: [provenance]\n-    # Wait for approval before attempting to upload to PyPI. This allows reviewing the\n-    # files in the draft release.\n-    environment: publish\n+    environment:\n+      # Wait for approval before attempting to upload to PyPI. This allows reviewing the\n+      # files in the draft release. The projection is configured in the repository settings.\n+      name: publish\n+      url: https://pypi.org/project/flask/${{ github.ref_name }}\n     runs-on: ubuntu-latest\n     permissions:\n       id-token: write\n'",0,0
.devcontainer/on-create-command.sh,.devcontainer/on-create-command.sh,87d5f5b9a9697434e6d972b021201105eabb54e6,d5e321b792cd6f3cd7b072d175f47eacbd5ee14f,"'update project files (#5457)\n\n* update pre-commit hook\r\n* upgrade pip with venv\r\n* update description and version\r\n* show url in publish environment\r\n* update versions\r\n* update versions, separate typing job\r\n* use dependabot grouped updates\r\n  ignore upload/download-artifact until slsa updates\r\n* use sphinx.ext.extlinks instead of sphinx-issues\r\n* update dev dependencies\r\n* update editorconfig\r\n* update gitignore\r\n* update .readthedocs.yaml\r\n* license is txt, readme is md\r\n* update pyproject.toml\r\n  add typed classifier\r\n  add pyright config\r\n  simplify urls\r\n* tox builds docs in place\r\n* update min test py version\r\n* add tox env to update all dev dependencies\r\n* update issue and pr templates\r\n* rename security docs page to not conflict with org policy file\r\n* simplify matrix'","'@@ -1,9 +1,7 @@\n #!/bin/bash\n set -e\n-\n-python3 -m venv .venv\n+python3 -m venv --upgrade-deps .venv\n . .venv/bin/activate\n-pip install -U pip\n pip install -r requirements/dev.txt\n pip install -e .\n pre-commit install --install-hooks\n'",0,0
.editorconfig,.editorconfig,87d5f5b9a9697434e6d972b021201105eabb54e6,d5e321b792cd6f3cd7b072d175f47eacbd5ee14f,"'update project files (#5457)\n\n* update pre-commit hook\r\n* upgrade pip with venv\r\n* update description and version\r\n* show url in publish environment\r\n* update versions\r\n* update versions, separate typing job\r\n* use dependabot grouped updates\r\n  ignore upload/download-artifact until slsa updates\r\n* use sphinx.ext.extlinks instead of sphinx-issues\r\n* update dev dependencies\r\n* update editorconfig\r\n* update gitignore\r\n* update .readthedocs.yaml\r\n* license is txt, readme is md\r\n* update pyproject.toml\r\n  add typed classifier\r\n  add pyright config\r\n  simplify urls\r\n* tox builds docs in place\r\n* update min test py version\r\n* add tox env to update all dev dependencies\r\n* update issue and pr templates\r\n* rename security docs page to not conflict with org policy file\r\n* simplify matrix'","'@@ -9,5 +9,5 @@ end_of_line = lf\n charset = utf-8\n max_line_length = 88\n \n-[*.{yml,yaml,json,js,css,html}]\n+[*.{css,html,js,json,jsx,scss,ts,tsx,yaml,yml}]\n indent_size = 2\n'",0,0
.github/ISSUE_TEMPLATE/bug-report.md,.github/ISSUE_TEMPLATE/bug-report.md,87d5f5b9a9697434e6d972b021201105eabb54e6,d5e321b792cd6f3cd7b072d175f47eacbd5ee14f,"'update project files (#5457)\n\n* update pre-commit hook\r\n* upgrade pip with venv\r\n* update description and version\r\n* show url in publish environment\r\n* update versions\r\n* update versions, separate typing job\r\n* use dependabot grouped updates\r\n  ignore upload/download-artifact until slsa updates\r\n* use sphinx.ext.extlinks instead of sphinx-issues\r\n* update dev dependencies\r\n* update editorconfig\r\n* update gitignore\r\n* update .readthedocs.yaml\r\n* license is txt, readme is md\r\n* update pyproject.toml\r\n  add typed classifier\r\n  add pyright config\r\n  simplify urls\r\n* tox builds docs in place\r\n* update min test py version\r\n* add tox env to update all dev dependencies\r\n* update issue and pr templates\r\n* rename security docs page to not conflict with org policy file\r\n* simplify matrix'","'@@ -5,7 +5,7 @@ about: Report a bug in Flask (not other projects which depend on Flask)\n \n <!--\n This issue tracker is a tool to address bugs in Flask itself. Please use\n-Pallets Discord or Stack Overflow for questions about your own code.\n+GitHub Discussions or the Pallets Discord for questions about your own code.\n \n Replace this comment with a clear outline of what the bug is.\n -->\n'",0,0
.github/ISSUE_TEMPLATE/config.yml,.github/ISSUE_TEMPLATE/config.yml,87d5f5b9a9697434e6d972b021201105eabb54e6,d5e321b792cd6f3cd7b072d175f47eacbd5ee14f,"'update project files (#5457)\n\n* update pre-commit hook\r\n* upgrade pip with venv\r\n* update description and version\r\n* show url in publish environment\r\n* update versions\r\n* update versions, separate typing job\r\n* use dependabot grouped updates\r\n  ignore upload/download-artifact until slsa updates\r\n* use sphinx.ext.extlinks instead of sphinx-issues\r\n* update dev dependencies\r\n* update editorconfig\r\n* update gitignore\r\n* update .readthedocs.yaml\r\n* license is txt, readme is md\r\n* update pyproject.toml\r\n  add typed classifier\r\n  add pyright config\r\n  simplify urls\r\n* tox builds docs in place\r\n* update min test py version\r\n* add tox env to update all dev dependencies\r\n* update issue and pr templates\r\n* rename security docs page to not conflict with org policy file\r\n* simplify matrix'","'@@ -1,11 +1,11 @@\n blank_issues_enabled: false\n contact_links:\n   - name: Security issue\n-    url: security@palletsprojects.com\n-    about: Do not report security issues publicly. Email our security contact.\n+    url: https://github.com/pallets/flask/security/advisories/new\n+    about: Do not report security issues publicly. Create a private advisory.\n   - name: Questions\n-    url: https://stackoverflow.com/questions/tagged/flask?tab=Frequent\n-    about: Search for and ask questions about your code on Stack Overflow.\n-  - name: Questions and discussions\n+    url: https://github.com/pallets/flask/discussions/\n+    about: Ask questions about your own code on the Discussions tab.\n+  - name: Questions on\n     url: https://discord.gg/pallets\n-    about: Discuss questions about your code on our Discord chat.\n+    about: Ask questions about your own code on our Discord chat.\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,be508c618411d72281672980abb19b2150581943,6ab71ed7cf92a2dea7c18ddc9c2b4f3e685ea1fb,"'Bump the github-actions group with 3 updates\n\nBumps the github-actions group with 3 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads), [actions/checkout](https://github.com/actions/checkout) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 7de207be1d3ce97a9abe6ff1306222982d1ca9f9 to 1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/7de207be1d3ce97a9abe6ff1306222982d1ca9f9...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `actions/checkout` from 4.1.1 to 4.1.2\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/b4ffde65f46336ab88eb53be808477a3936bae11...9bb56186c3b09b4f86b1c65136769dd318469633)\n\nUpdates `pypa/gh-action-pypi-publish` from 68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 to 81e9d935c883d0b210363ab89cf05f3894778450\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/68e62d4871ad9d14a9d55f114e6ac71f0b408ec0...81e9d935c883d0b210363ab89cf05f3894778450)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  dependency-group: github-actions\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -16,7 +16,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@7de207be1d3ce97a9abe6ff1306222982d1ca9f9 # v5.0.1\n+      - uses: dessant/lock-threads@1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771 # v5.0.1\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,be508c618411d72281672980abb19b2150581943,6ab71ed7cf92a2dea7c18ddc9c2b4f3e685ea1fb,"'Bump the github-actions group with 3 updates\n\nBumps the github-actions group with 3 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads), [actions/checkout](https://github.com/actions/checkout) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 7de207be1d3ce97a9abe6ff1306222982d1ca9f9 to 1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/7de207be1d3ce97a9abe6ff1306222982d1ca9f9...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `actions/checkout` from 4.1.1 to 4.1.2\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/b4ffde65f46336ab88eb53be808477a3936bae11...9bb56186c3b09b4f86b1c65136769dd318469633)\n\nUpdates `pypa/gh-action-pypi-publish` from 68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 to 81e9d935c883d0b210363ab89cf05f3894778450\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/68e62d4871ad9d14a9d55f114e6ac71f0b408ec0...81e9d935c883d0b210363ab89cf05f3894778450)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  dependency-group: github-actions\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n+      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n@@ -64,10 +64,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n-      - uses: pypa/gh-action-pypi-publish@68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 # v1.8.14\n+      - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 # v1.8.14\n+      - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n         with:\n           packages-dir: artifact/\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,be508c618411d72281672980abb19b2150581943,6ab71ed7cf92a2dea7c18ddc9c2b4f3e685ea1fb,"'Bump the github-actions group with 3 updates\n\nBumps the github-actions group with 3 updates: [dessant/lock-threads](https://github.com/dessant/lock-threads), [actions/checkout](https://github.com/actions/checkout) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `dessant/lock-threads` from 7de207be1d3ce97a9abe6ff1306222982d1ca9f9 to 1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771\n- [Release notes](https://github.com/dessant/lock-threads/releases)\n- [Changelog](https://github.com/dessant/lock-threads/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/dessant/lock-threads/compare/7de207be1d3ce97a9abe6ff1306222982d1ca9f9...1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771)\n\nUpdates `actions/checkout` from 4.1.1 to 4.1.2\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/b4ffde65f46336ab88eb53be808477a3936bae11...9bb56186c3b09b4f86b1c65136769dd318469633)\n\nUpdates `pypa/gh-action-pypi-publish` from 68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 to 81e9d935c883d0b210363ab89cf05f3894778450\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/68e62d4871ad9d14a9d55f114e6ac71f0b408ec0...81e9d935c883d0b210363ab89cf05f3894778450)\n\n---\nupdated-dependencies:\n- dependency-name: dessant/lock-threads\n  dependency-type: direct:production\n  dependency-group: github-actions\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","""@@ -32,7 +32,7 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n+      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: ${{ matrix.python }}\n@@ -44,7 +44,7 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n+      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
CHANGES.rst,CHANGES.rst,7320e311a0a3f190351173f8be90cab31dadbf73,87d5f5b9a9697434e6d972b021201105eabb54e6,'start version 3.0.3',"'@@ -1,3 +1,9 @@\n+Version 3.0.3\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.0.2\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,7320e311a0a3f190351173f8be90cab31dadbf73,87d5f5b9a9697434e6d972b021201105eabb54e6,'start version 3.0.3',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.2""\n+version = ""3.0.3""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.md""\n license = {file = ""LICENSE.txt""}\n'",0,0
CHANGES.rst,CHANGES.rst,db461112c70d5f2bf93c7a6ac27eeb665c232dd0,7320e311a0a3f190351173f8be90cab31dadbf73,'access sha1 lazily',"""@@ -3,6 +3,10 @@ Version 3.0.3\n \n Unreleased\n \n+-   The default ``hashlib.sha1`` may not be available in FIPS builds. Don't\n+    access it at import time so the developer has time to change the default.\n+    :issue:`5448`\n+\n \n Version 3.0.2\n -------------\n""",0,0
src/flask/sessions.py,src/flask/sessions.py,db461112c70d5f2bf93c7a6ac27eeb665c232dd0,7320e311a0a3f190351173f8be90cab31dadbf73,'access sha1 lazily',"'@@ -277,6 +277,14 @@ class SessionInterface:\n session_json_serializer = TaggedJSONSerializer()\n \n \n+def _lazy_sha1(string: bytes = b"""") -> t.Any:\n+    """"""Don\'t access ``hashlib.sha1`` until runtime. FIPS builds may not include\n+    SHA-1, in which case the import and use as a default would fail before the\n+    developer can configure something else.\n+    """"""\n+    return hashlib.sha1(string)\n+\n+\n class SecureCookieSessionInterface(SessionInterface):\n     """"""The default session interface that stores sessions in signed cookies\n     through the :mod:`itsdangerous` module.\n@@ -286,7 +294,7 @@ class SecureCookieSessionInterface(SessionInterface):\n     #: signing of cookie based sessions.\n     salt = ""cookie-session""\n     #: the hash function to use for the signature.  The default is sha1\n-    digest_method = staticmethod(hashlib.sha1)\n+    digest_method = staticmethod(_lazy_sha1)\n     #: the name of the itsdangerous supported key derivation.  The default\n     #: is hmac.\n     key_derivation = ""hmac""\n'",1.5217391304347827,1.5
docs/logging.rst,docs/logging.rst,adb7dd99c295a28726c8d818fba54c7b3f958ecc,b73939095564ec5c088c53e7595b00d174a018f5,"""don't access app.logger when configuring app.logger""","""@@ -159,7 +159,7 @@ Depending on your project, it may be more useful to configure each logger you\n care about separately, instead of configuring only the root logger. ::\n \n     for logger in (\n-        app.logger,\n+        logging.getLogger(app.name),\n         logging.getLogger('sqlalchemy'),\n         logging.getLogger('other_package'),\n     ):\n""",2.0,2.0
CHANGES.rst,CHANGES.rst,5fdce4c331ac530280cc941179d364a07f4a1088,adb7dd99c295a28726c8d818fba54c7b3f958ecc,"""Don't set the cli attribute in the sansio scaffold\n\nIt is (currently) Flask specific and hence cannot be shared in the\nsansio shared code.""","""@@ -6,6 +6,8 @@ Unreleased\n -   The default ``hashlib.sha1`` may not be available in FIPS builds. Don't\n     access it at import time so the developer has time to change the default.\n     :issue:`5448`\n+-   Don't initialize the ``cli`` attribute in the sansio scaffold, but rather in\n+    the ``Flask`` concrete class. :pr:`5270`\n \n \n Version 3.0.2\n""",0,0
src/flask/app.py,src/flask/app.py,5fdce4c331ac530280cc941179d364a07f4a1088,adb7dd99c295a28726c8d818fba54c7b3f958ecc,"""Don't set the cli attribute in the sansio scaffold\n\nIt is (currently) Flask specific and hence cannot be shared in the\nsansio shared code.""","""@@ -241,6 +241,16 @@ class Flask(App):\n             root_path=root_path,\n         )\n \n+        #: The Click command group for registering CLI commands for this\n+        #: object. The commands are available from the ``flask`` command\n+        #: once the application has been discovered and blueprints have\n+        #: been registered.\n+        self.cli = cli.AppGroup()\n+\n+        # Set the name of the Click group in case someone wants to add\n+        # the app's commands to another CLI tool.\n+        self.cli.name = self.name\n+\n         # Add a static route using the provided static_url_path, static_host,\n         # and static_folder if there is a configured static_folder.\n         # Note we do this without checking if static_folder exists.\n""",4.171428571428572,4.171428571428572
src/flask/blueprints.py,src/flask/blueprints.py,5fdce4c331ac530280cc941179d364a07f4a1088,adb7dd99c295a28726c8d818fba54c7b3f958ecc,"""Don't set the cli attribute in the sansio scaffold\n\nIt is (currently) Flask specific and hence cannot be shared in the\nsansio shared code.""","'@@ -4,16 +4,54 @@ import os\n import typing as t\n from datetime import timedelta\n \n+from .cli import AppGroup\n from .globals import current_app\n from .helpers import send_from_directory\n from .sansio.blueprints import Blueprint as SansioBlueprint\n from .sansio.blueprints import BlueprintSetupState as BlueprintSetupState  # noqa\n+from .sansio.scaffold import _sentinel\n \n if t.TYPE_CHECKING:  # pragma: no cover\n     from .wrappers import Response\n \n \n class Blueprint(SansioBlueprint):\n+    def __init__(\n+        self,\n+        name: str,\n+        import_name: str,\n+        static_folder: str | os.PathLike[str] | None = None,\n+        static_url_path: str | None = None,\n+        template_folder: str | os.PathLike[str] | None = None,\n+        url_prefix: str | None = None,\n+        subdomain: str | None = None,\n+        url_defaults: dict[str, t.Any] | None = None,\n+        root_path: str | None = None,\n+        cli_group: str | None = _sentinel,  # type: ignore\n+    ) -> None:\n+        super().__init__(\n+            name,\n+            import_name,\n+            static_folder,\n+            static_url_path,\n+            template_folder,\n+            url_prefix,\n+            subdomain,\n+            url_defaults,\n+            root_path,\n+            cli_group,\n+        )\n+\n+        #: The Click command group for registering CLI commands for this\n+        #: object. The commands are available from the ``flask`` command\n+        #: once the application has been discovered and blueprints have\n+        #: been registered.\n+        self.cli = AppGroup()\n+\n+        # Set the name of the Click group in case someone wants to add\n+        # the app\'s commands to another CLI tool.\n+        self.cli.name = self.name\n+\n     def get_send_file_max_age(self, filename: str | None) -> int | None:\n         """"""Used by :func:`send_file` to determine the ``max_age`` cache\n         value for a given file path if it wasn\'t passed.\n'",2.3333333333333335,2.0
src/flask/sansio/app.py,src/flask/sansio/app.py,5fdce4c331ac530280cc941179d364a07f4a1088,adb7dd99c295a28726c8d818fba54c7b3f958ecc,"""Don't set the cli attribute in the sansio scaffold\n\nIt is (currently) Flask specific and hence cannot be shared in the\nsansio shared code.""","""@@ -410,10 +410,6 @@ class App(Scaffold):\n         # request.\n         self._got_first_request = False\n \n-        # Set the name of the Click group in case someone wants to add\n-        # the app's commands to another CLI tool.\n-        self.cli.name = self.name\n-\n     def _check_setup_finished(self, f_name: str) -> None:\n         if self._got_first_request:\n             raise AssertionError(\n""",2.2941176470588234,2.2941176470588234
src/flask/sansio/scaffold.py,src/flask/sansio/scaffold.py,5fdce4c331ac530280cc941179d364a07f4a1088,adb7dd99c295a28726c8d818fba54c7b3f958ecc,"""Don't set the cli attribute in the sansio scaffold\n\nIt is (currently) Flask specific and hence cannot be shared in the\nsansio shared code.""","'@@ -8,7 +8,6 @@ import typing as t\n from collections import defaultdict\n from functools import update_wrapper\n \n-import click\n from jinja2 import BaseLoader\n from jinja2 import FileSystemLoader\n from werkzeug.exceptions import default_exceptions\n@@ -16,10 +15,12 @@ from werkzeug.exceptions import HTTPException\n from werkzeug.utils import cached_property\n \n from .. import typing as ft\n-from ..cli import AppGroup\n from ..helpers import get_root_path\n from ..templating import _default_template_ctx_processor\n \n+if t.TYPE_CHECKING:  # pragma: no cover\n+    from click import Group\n+\n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n \n@@ -66,6 +67,7 @@ class Scaffold:\n     .. versionadded:: 2.0\n     """"""\n \n+    cli: Group\n     name: str\n     _static_folder: str | None = None\n     _static_url_path: str | None = None\n@@ -97,12 +99,6 @@ class Scaffold:\n         #: up resources contained in the package.\n         self.root_path = root_path\n \n-        #: The Click command group for registering CLI commands for this\n-        #: object. The commands are available from the ``flask`` command\n-        #: once the application has been discovered and blueprints have\n-        #: been registered.\n-        self.cli: click.Group = AppGroup()\n-\n         #: A dictionary mapping endpoint names to view functions.\n         #:\n         #: To register a view function, use the :meth:`route` decorator.\n'",1.75,1.75
CHANGES.rst,CHANGES.rst,c12a5d874c5a014495eb2db8a73f40037bc813ac,5e22cc9eec0d1da2da706ccf724fde702b30d5f2,'release version 3.0.3',"""@@ -1,7 +1,7 @@\n Version 3.0.3\n -------------\n \n-Unreleased\n+Released 2024-04-07\n \n -   The default ``hashlib.sha1`` may not be available in FIPS builds. Don't\n     access it at import time so the developer has time to change the default.\n""",0,0
CHANGES.rst,CHANGES.rst,19610a9e46e0989054ecd0f6be2fcb981013d8eb,aee16df63bbd7f6a7479fcd01b509f5ebaca3a0d,'start version 3.1.0',"'@@ -1,3 +1,9 @@\n+Version 3.1.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.0.3\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,19610a9e46e0989054ecd0f6be2fcb981013d8eb,aee16df63bbd7f6a7479fcd01b509f5ebaca3a0d,'start version 3.1.0',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.0.3""\n+version = ""3.1.0.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.md""\n license = {file = ""LICENSE.txt""}\n'",0,0
README.md,README.md,346d1abaff0270104ffa3a0e8bee7de279a1cee7,61182249cb3ec5c69a2b91928829f33ccca6c7bc,"""remove install and contribute sections\n\ninstall leads people to install into the system instead of a virtualenv,\nand readme isn't the place to teach that\ncontribute is now linked in the github interface above the readme""","'@@ -16,18 +16,6 @@ community that make adding new functionality easy.\n [Jinja]: https://jinja.palletsprojects.com/\n \n \n-## Installing\n-\n-Install and update from [PyPI][] using an installer such as [pip][]:\n-\n-```\n-$ pip install -U Flask\n-```\n-\n-[PyPI]: https://pypi.org/project/Flask/\n-[pip]: https://pip.pypa.io/en/stable/getting-started/\n-\n-\n ## A Simple Example\n \n ```python\n@@ -47,14 +35,6 @@ $ flask run\n ```\n \n \n-## Contributing\n-\n-For guidance on setting up a development environment and how to make a\n-contribution to Flask, see the [contributing guidelines][].\n-\n-[contributing guidelines]: https://github.com/pallets/flask/blob/main/CONTRIBUTING.rst\n-\n-\n ## Donate\n \n The Pallets organization develops and supports Flask and the libraries\n'",1.0,1.0
tox.ini,tox.ini,f958b6500b2aeb8edc578a07f00546becdad4c80,346d1abaff0270104ffa3a0e8bee7de279a1cee7,'build docs from scratch each test',"'@@ -32,7 +32,7 @@ commands = mypy\n \n [testenv:docs]\n deps = -r requirements/docs.txt\n-commands = sphinx-build -W -b dirhtml docs docs/_build/dirhtml\n+commands = sphinx-build -E -W -b dirhtml docs docs/_build/dirhtml\n \n [testenv:update-requirements]\n deps =\n'",0,0
.github/dependabot.yml,.github/dependabot.yml,db0fe9436e9da7f7bd14683542bbf33ba3c6d5e4,2c7f57ad5bd19743312eb34ea5fb838a1349474e,'unignore upload/download-artifact',"""@@ -4,12 +4,6 @@ updates:\n     directory: /\n     schedule:\n       interval: monthly\n-    ignore:\n-      # slsa depends on upload/download v3\n-      - dependency-name: actions/upload-artifact\n-        versions: '>= 4'\n-      - dependency-name: actions/download-artifact\n-        versions: '>= 4'\n     groups:\n       github-actions:\n         patterns:\n""",0,0
src/flask/sessions.py,src/flask/sessions.py,ccf125bf30102beedafb3ecef72376bfb6c90a4d,db0fe9436e9da7f7bd14683542bbf33ba3c6d5e4,'fix mypy findings',"'@@ -368,7 +368,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore\n         response.set_cookie(\n             name,\n-            val,  # type: ignore\n+            val,\n             expires=expires,\n             httponly=httponly,\n             domain=domain,\n'",1.5,1.5
.github/workflows/publish.yaml,.github/workflows/publish.yaml,b7278186c4e16c58a4dbd439eedf716146c19f53,ccf125bf30102beedafb3ecef72376bfb6c90a4d,"'Bump the github-actions group across 1 directory with 4 updates\n\nBumps the github-actions group with 4 updates in the / directory: [actions/checkout](https://github.com/actions/checkout), [actions/upload-artifact](https://github.com/actions/upload-artifact), [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/checkout` from 4.1.2 to 4.1.3\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/9bb56186c3b09b4f86b1c65136769dd318469633...1d96c772d19495a3b5c517cd2bc0cb401ea0529f)\n\nUpdates `actions/upload-artifact` from 3.1.3 to 4.3.3\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/a8a3f3ad30e3422c9c7b888a15615d19a852ae32...65462800fd760344b1a7b4382951275a0abb4808)\n\nUpdates `slsa-framework/slsa-github-generator` from 1.10.0 to 2.0.0\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.10.0...v2.0.0)\n\nUpdates `actions/download-artifact` from 3.0.2 to 4.1.6\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/9bc31d5ccc31df68ecc42ccf4149144866c47d8a...9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n+      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: \'3.x\'\n@@ -23,7 +23,7 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n+      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n         with:\n           path: ./dist\n   provenance:\n@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can\'t pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n@@ -44,7 +44,7 @@ jobs:\n     permissions:\n       contents: write\n     steps:\n-      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n+      - uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6\n       - name: create release\n         run: >\n           gh release create --draft --repo ${{ github.repository }}\n@@ -63,7 +63,7 @@ jobs:\n     permissions:\n       id-token: write\n     steps:\n-      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n+      - uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6\n       - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n         with:\n           repository-url: https://test.pypi.org/legacy/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,b7278186c4e16c58a4dbd439eedf716146c19f53,ccf125bf30102beedafb3ecef72376bfb6c90a4d,"'Bump the github-actions group across 1 directory with 4 updates\n\nBumps the github-actions group with 4 updates in the / directory: [actions/checkout](https://github.com/actions/checkout), [actions/upload-artifact](https://github.com/actions/upload-artifact), [slsa-framework/slsa-github-generator](https://github.com/slsa-framework/slsa-github-generator) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/checkout` from 4.1.2 to 4.1.3\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/9bb56186c3b09b4f86b1c65136769dd318469633...1d96c772d19495a3b5c517cd2bc0cb401ea0529f)\n\nUpdates `actions/upload-artifact` from 3.1.3 to 4.3.3\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/a8a3f3ad30e3422c9c7b888a15615d19a852ae32...65462800fd760344b1a7b4382951275a0abb4808)\n\nUpdates `slsa-framework/slsa-github-generator` from 1.10.0 to 2.0.0\n- [Release notes](https://github.com/slsa-framework/slsa-github-generator/releases)\n- [Changelog](https://github.com/slsa-framework/slsa-github-generator/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/slsa-framework/slsa-github-generator/compare/v1.10.0...v2.0.0)\n\nUpdates `actions/download-artifact` from 3.0.2 to 4.1.6\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/9bc31d5ccc31df68ecc42ccf4149144866c47d8a...9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: slsa-framework/slsa-github-generator\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","""@@ -32,7 +32,7 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n+      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: ${{ matrix.python }}\n@@ -44,7 +44,7 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2\n+      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
requirements/dev.txt,requirements/dev.txt,224c639bf9f37b99bc66a879fbbc516f59857967,ccf125bf30102beedafb3ecef72376bfb6c90a4d,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes), [sphinx](https://github.com/sphinx-doc/sphinx) and [pyright](https://github.com/RobertCraigie/pyright-python).\n\n\nUpdates `pallets-sphinx-themes` from 2.1.1 to 2.1.2\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.1...2.1.2)\n\nUpdates `sphinx` from 7.2.6 to 7.3.7\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/master/CHANGES.rst)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v7.2.6...v7.3.7)\n\nUpdates `pyright` from 1.1.357 to 1.1.359\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.357...v1.1.359)\n\n---\nupdated-dependencies:\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: sphinx\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -93,7 +93,7 @@ packaging==24.0\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.1.1\n+pallets-sphinx-themes==2.1.2\n     # via -r docs.txt\n platformdirs==4.2.0\n     # via\n@@ -118,7 +118,7 @@ pygments==2.17.2\n     #   sphinx-tabs\n pyproject-api==1.6.1\n     # via tox\n-pyright==1.1.357\n+pyright==1.1.359\n     # via -r typing.txt\n pytest==8.1.1\n     # via\n@@ -138,7 +138,7 @@ snowballstemmer==2.2.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinx==7.2.6\n+sphinx==7.3.7\n     # via\n     #   -r docs.txt\n     #   pallets-sphinx-themes\n'",0,0
requirements/docs.txt,requirements/docs.txt,224c639bf9f37b99bc66a879fbbc516f59857967,ccf125bf30102beedafb3ecef72376bfb6c90a4d,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes), [sphinx](https://github.com/sphinx-doc/sphinx) and [pyright](https://github.com/RobertCraigie/pyright-python).\n\n\nUpdates `pallets-sphinx-themes` from 2.1.1 to 2.1.2\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.1...2.1.2)\n\nUpdates `sphinx` from 7.2.6 to 7.3.7\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/master/CHANGES.rst)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v7.2.6...v7.3.7)\n\nUpdates `pyright` from 1.1.357 to 1.1.359\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.357...v1.1.359)\n\n---\nupdated-dependencies:\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: sphinx\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -28,7 +28,7 @@ packaging==24.0\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.1.1\n+pallets-sphinx-themes==2.1.2\n     # via -r docs.in\n pygments==2.17.2\n     # via\n@@ -38,7 +38,7 @@ requests==2.31.0\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==7.2.6\n+sphinx==7.3.7\n     # via\n     #   -r docs.in\n     #   pallets-sphinx-themes\n'",0,0
requirements/typing.txt,requirements/typing.txt,224c639bf9f37b99bc66a879fbbc516f59857967,ccf125bf30102beedafb3ecef72376bfb6c90a4d,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes), [sphinx](https://github.com/sphinx-doc/sphinx) and [pyright](https://github.com/RobertCraigie/pyright-python).\n\n\nUpdates `pallets-sphinx-themes` from 2.1.1 to 2.1.2\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.1...2.1.2)\n\nUpdates `sphinx` from 7.2.6 to 7.3.7\n- [Release notes](https://github.com/sphinx-doc/sphinx/releases)\n- [Changelog](https://github.com/sphinx-doc/sphinx/blob/master/CHANGES.rst)\n- [Commits](https://github.com/sphinx-doc/sphinx/compare/v7.2.6...v7.3.7)\n\nUpdates `pyright` from 1.1.357 to 1.1.359\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.357...v1.1.359)\n\n---\nupdated-dependencies:\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: sphinx\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -24,7 +24,7 @@ pluggy==1.4.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.357\n+pyright==1.1.359\n     # via -r typing.in\n pytest==8.1.1\n     # via -r typing.in\n'",0,0
examples/javascript/pyproject.toml,examples/javascript/pyproject.toml,823e279e0dd40d8818a8d58c12a7df22caae1c04,11c15ddfeb6edcb0978d3407ed972ae441013177,'Update pyproject.toml\n\nCorrection to Documentation URL',"'@@ -8,7 +8,7 @@ maintainers = [{name = ""Pallets"", email = ""contact@palletsprojects.com""}]\n dependencies = [""flask""]\n \n [project.urls]\n-Documentation = ""https://flask.palletsprojects.com/patterns/jquery/""\n+Documentation = ""https://flask.palletsprojects.com/patterns/javascript/""\n \n [project.optional-dependencies]\n test = [""pytest""]\n'",0,0
src/flask/wrappers.py,src/flask/wrappers.py,a363642a32880114c7944b1017f2f69bd4cc00eb,f958b6500b2aeb8edc578a07f00546becdad4c80,'fix mypy finding with new werkzeug endpoint type',"'@@ -71,7 +71,7 @@ class Request(RequestBase):\n         reconstruct the same URL or a modified URL.\n         """"""\n         if self.url_rule is not None:\n-            return self.url_rule.endpoint\n+            return self.url_rule.endpoint  # type: ignore[no-any-return]\n \n         return None\n \n'",2.857142857142857,2.857142857142857
src/flask/sessions.py,src/flask/sessions.py,eb1182a10e757b5e76009c69fdf3a88a5afc6840,a363642a32880114c7944b1017f2f69bd4cc00eb,'fix mypy finding',"'@@ -365,10 +365,10 @@ class SecureCookieSessionInterface(SessionInterface):\n             return\n \n         expires = self.get_expiration_time(app, session)\n-        val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore\n+        val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore[union-attr]\n         response.set_cookie(\n             name,\n-            val,  # type: ignore\n+            val,\n             expires=expires,\n             httponly=httponly,\n             domain=domain,\n'",1.5,1.5
.github/workflows/publish.yaml,.github/workflows/publish.yaml,a936b0c610ba86f542eb3855de2be674a7b9310b,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [actions/checkout](https://github.com/actions/checkout) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/checkout` from 4.1.3 to 4.1.4\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/1d96c772d19495a3b5c517cd2bc0cb401ea0529f...0ad4b8fadaa221de15dcec353f45205ec38ea70b)\n\nUpdates `actions/download-artifact` from 4.1.6 to 4.1.7\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395...65a9edc5881444af0b9093a5e628f2fe47ea3b2e)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n+      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n@@ -44,7 +44,7 @@ jobs:\n     permissions:\n       contents: write\n     steps:\n-      - uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6\n+      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7\n       - name: create release\n         run: >\n           gh release create --draft --repo ${{ github.repository }}\n@@ -63,7 +63,7 @@ jobs:\n     permissions:\n       id-token: write\n     steps:\n-      - uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6\n+      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7\n       - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n         with:\n           repository-url: https://test.pypi.org/legacy/\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,a936b0c610ba86f542eb3855de2be674a7b9310b,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [actions/checkout](https://github.com/actions/checkout) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/checkout` from 4.1.3 to 4.1.4\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/1d96c772d19495a3b5c517cd2bc0cb401ea0529f...0ad4b8fadaa221de15dcec353f45205ec38ea70b)\n\nUpdates `actions/download-artifact` from 4.1.6 to 4.1.7\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395...65a9edc5881444af0b9093a5e628f2fe47ea3b2e)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -32,7 +32,7 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n+      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: ${{ matrix.python }}\n@@ -44,7 +44,7 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3\n+      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
requirements/dev.txt,requirements/dev.txt,273123f6b8fc0d871553f707e515816777c60e24,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the python-requirements group across 1 directory with 6 updates\n\nBumps the python-requirements group with 6 updates in the /requirements directory:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.5` | `42.0.7` |\n| [mypy](https://github.com/python/mypy) | `1.9.0` | `1.10.0` |\n| [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes) | `2.1.2` | `2.1.3` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.359` | `1.1.361` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.1.1` | `8.2.0` |\n| [tox](https://github.com/tox-dev/tox) | `4.14.2` | `4.15.0` |\n\n\n\nUpdates `cryptography` from 42.0.5 to 42.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.5...42.0.7)\n\nUpdates `mypy` from 1.9.0 to 1.10.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/1.9.0...v1.10.0)\n\nUpdates `pallets-sphinx-themes` from 2.1.2 to 2.1.3\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.2...2.1.3)\n\nUpdates `pyright` from 1.1.359 to 1.1.361\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.359...v1.1.361)\n\nUpdates `pytest` from 8.1.1 to 8.2.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.1.1...8.2.0)\n\nUpdates `tox` from 4.14.2 to 4.15.0\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.14.2...4.15.0)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -36,7 +36,7 @@ charset-normalizer==3.3.2\n     #   requests\n colorama==0.4.6\n     # via tox\n-cryptography==42.0.5\n+cryptography==42.0.7\n     # via -r typing.txt\n distlib==0.3.8\n     # via virtualenv\n@@ -72,7 +72,7 @@ markupsafe==2.1.5\n     # via\n     #   -r docs.txt\n     #   jinja2\n-mypy==1.9.0\n+mypy==1.10.0\n     # via -r typing.txt\n mypy-extensions==1.0.0\n     # via\n@@ -93,13 +93,13 @@ packaging==24.0\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.1.2\n+pallets-sphinx-themes==2.1.3\n     # via -r docs.txt\n platformdirs==4.2.0\n     # via\n     #   tox\n     #   virtualenv\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n@@ -118,9 +118,9 @@ pygments==2.17.2\n     #   sphinx-tabs\n pyproject-api==1.6.1\n     # via tox\n-pyright==1.1.359\n+pyright==1.1.361\n     # via -r typing.txt\n-pytest==8.1.1\n+pytest==8.2.0\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n@@ -172,7 +172,7 @@ sphinxcontrib-serializinghtml==1.1.10\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tox==4.14.2\n+tox==4.15.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.txt\n'",0,0
requirements/docs.txt,requirements/docs.txt,273123f6b8fc0d871553f707e515816777c60e24,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the python-requirements group across 1 directory with 6 updates\n\nBumps the python-requirements group with 6 updates in the /requirements directory:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.5` | `42.0.7` |\n| [mypy](https://github.com/python/mypy) | `1.9.0` | `1.10.0` |\n| [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes) | `2.1.2` | `2.1.3` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.359` | `1.1.361` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.1.1` | `8.2.0` |\n| [tox](https://github.com/tox-dev/tox) | `4.14.2` | `4.15.0` |\n\n\n\nUpdates `cryptography` from 42.0.5 to 42.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.5...42.0.7)\n\nUpdates `mypy` from 1.9.0 to 1.10.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/1.9.0...v1.10.0)\n\nUpdates `pallets-sphinx-themes` from 2.1.2 to 2.1.3\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.2...2.1.3)\n\nUpdates `pyright` from 1.1.359 to 1.1.361\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.359...v1.1.361)\n\nUpdates `pytest` from 8.1.1 to 8.2.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.1.1...8.2.0)\n\nUpdates `tox` from 4.14.2 to 4.15.0\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.14.2...4.15.0)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -28,7 +28,7 @@ packaging==24.0\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.1.2\n+pallets-sphinx-themes==2.1.3\n     # via -r docs.in\n pygments==2.17.2\n     # via\n'",0,0
requirements/tests.txt,requirements/tests.txt,273123f6b8fc0d871553f707e515816777c60e24,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the python-requirements group across 1 directory with 6 updates\n\nBumps the python-requirements group with 6 updates in the /requirements directory:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.5` | `42.0.7` |\n| [mypy](https://github.com/python/mypy) | `1.9.0` | `1.10.0` |\n| [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes) | `2.1.2` | `2.1.3` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.359` | `1.1.361` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.1.1` | `8.2.0` |\n| [tox](https://github.com/tox-dev/tox) | `4.14.2` | `4.15.0` |\n\n\n\nUpdates `cryptography` from 42.0.5 to 42.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.5...42.0.7)\n\nUpdates `mypy` from 1.9.0 to 1.10.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/1.9.0...v1.10.0)\n\nUpdates `pallets-sphinx-themes` from 2.1.2 to 2.1.3\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.2...2.1.3)\n\nUpdates `pyright` from 1.1.359 to 1.1.361\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.359...v1.1.361)\n\nUpdates `pytest` from 8.1.1 to 8.2.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.1.1...8.2.0)\n\nUpdates `tox` from 4.14.2 to 4.15.0\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.14.2...4.15.0)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -10,9 +10,9 @@ iniconfig==2.0.0\n     # via pytest\n packaging==24.0\n     # via pytest\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via pytest\n-pytest==8.1.1\n+pytest==8.2.0\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,273123f6b8fc0d871553f707e515816777c60e24,4f42c642036e6fdd915dd492b263c3b887cdb2d9,'Bump the python-requirements group across 1 directory with 6 updates\n\nBumps the python-requirements group with 6 updates in the /requirements directory:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.5` | `42.0.7` |\n| [mypy](https://github.com/python/mypy) | `1.9.0` | `1.10.0` |\n| [pallets-sphinx-themes](https://github.com/pallets/pallets-sphinx-themes) | `2.1.2` | `2.1.3` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.359` | `1.1.361` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.1.1` | `8.2.0` |\n| [tox](https://github.com/tox-dev/tox) | `4.14.2` | `4.15.0` |\n\n\n\nUpdates `cryptography` from 42.0.5 to 42.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.5...42.0.7)\n\nUpdates `mypy` from 1.9.0 to 1.10.0\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/1.9.0...v1.10.0)\n\nUpdates `pallets-sphinx-themes` from 2.1.2 to 2.1.3\n- [Release notes](https://github.com/pallets/pallets-sphinx-themes/releases)\n- [Changelog](https://github.com/pallets/pallets-sphinx-themes/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/pallets-sphinx-themes/compare/2.1.2...2.1.3)\n\nUpdates `pyright` from 1.1.359 to 1.1.361\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.359...v1.1.361)\n\nUpdates `pytest` from 8.1.1 to 8.2.0\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.1.1...8.2.0)\n\nUpdates `tox` from 4.14.2 to 4.15.0\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.14.2...4.15.0)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: pallets-sphinx-themes\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,11 +8,11 @@ asgiref==3.8.1\n     # via -r typing.in\n cffi==1.16.0\n     # via cryptography\n-cryptography==42.0.5\n+cryptography==42.0.7\n     # via -r typing.in\n iniconfig==2.0.0\n     # via pytest\n-mypy==1.9.0\n+mypy==1.10.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -20,13 +20,13 @@ nodeenv==1.8.0\n     # via pyright\n packaging==24.0\n     # via pytest\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.359\n+pyright==1.1.361\n     # via -r typing.in\n-pytest==8.1.1\n+pytest==8.2.0\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,860a25c390eba8e6c089a818b02800dd9d789864,273123f6b8fc0d871553f707e515816777c60e24,'fix mypy finding',"'@@ -91,7 +91,7 @@ def stream_with_context(\n             gen = generator_or_function(*args, **kwargs)  # type: ignore[operator]\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]\n \n     def generator() -> t.Iterator[t.AnyStr | None]:\n         ctx = _cv_request.get(None)\n'",2.4705882352941178,2.4705882352941178
.pre-commit-config.yaml,.pre-commit-config.yaml,4e894892bc0230c46e998b6ea82b5b07b9943a39,d64ecfb244d38b5f31d6dd8f6a9f55731038c093,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.5 → v0.4.3](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.5...v0.4.3)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.3.5\n+    rev: v0.4.3\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,9101439d7b7e21d5cf8a4a2a3dc92b9980539c6b,eb1182a10e757b5e76009c69fdf3a88a5afc6840,'test with python 3.13',"""@@ -21,6 +21,7 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n+          - {python: '3.13'}\n           - {python: '3.12'}\n           - {name: Windows, python: '3.12', os: windows-latest}\n           - {name: Mac, python: '3.12', os: macos-latest}\n""",0,0
tox.ini,tox.ini,9101439d7b7e21d5cf8a4a2a3dc92b9980539c6b,eb1182a10e757b5e76009c69fdf3a88a5afc6840,'test with python 3.13',"'@@ -1,6 +1,6 @@\n [tox]\n envlist =\n-    py3{12,11,10,9,8}\n+    py3{13,12,11,10,9,8}\n     pypy310\n     py312-min\n     py38-dev\n'",0,0
docs/config.rst,docs/config.rst,4a1766c252bac0de1368cc4eaefba1299f77d546,bea5876e46144080a06170222396b953a361af48,"'document caveats on SESSION_COOKIE_DOMAIN\n\nChanging this value might result in browsers with several competing session cookies. In\nthat situation there is no guarantee of which one will be sent first, and be used as the\nsession cookie.'","'@@ -142,6 +142,12 @@ The following configuration values are used internally by Flask:\n \n     Default: ``None``\n \n+    .. warning::\n+        If this is changed after the browser created a cookie is created with\n+        one setting, it may result in another being created. Browsers may send\n+        send both in an undefined order. In that case, you may want to change\n+        :data:`SESSION_COOKIE_NAME` as well or otherwise invalidate old sessions.\n+\n     .. versionchanged:: 2.3\n         Not set by default, does not fall back to ``SERVER_NAME``.\n \n'",1.0,1.0
docs/quickstart.rst,docs/quickstart.rst,767ad19b10c64af1fa328383713ea97e23cc0080,a2f495b9ff26c84e0ac35dcd957718e2d3f53afe,'Edited variable names in the rendering templates section of the quickstart guide.',"""@@ -375,7 +375,7 @@ Here's a simple example of how to render a template::\n     @app.route('/hello/')\n     @app.route('/hello/<name>')\n     def hello(name=None):\n-        return render_template('hello.html', name=name)\n+        return render_template('hello.html', person=name)\n \n Flask will look for templates in the :file:`templates` folder.  So if your\n application is a module, this folder is next to that module, if it's a\n@@ -404,8 +404,8 @@ Here is an example template:\n \n     <!doctype html>\n     <title>Hello from Flask</title>\n-    {% if name %}\n-      <h1>Hello {{ name }}!</h1>\n+    {% if person %}\n+      <h1>Hello {{ person }}!</h1>\n     {% else %}\n       <h1>Hello, World!</h1>\n     {% endif %}\n@@ -419,7 +419,7 @@ know how that works, see :doc:`patterns/templateinheritance`. Basically\n template inheritance makes it possible to keep certain elements on each\n page (like header, navigation and footer).\n \n-Automatic escaping is enabled, so if ``name`` contains HTML it will be escaped\n+Automatic escaping is enabled, so if ``person`` contains HTML it will be escaped\n automatically.  If you can trust a variable and you know that it will be\n safe HTML (for example because it came from a module that converts wiki\n markup to HTML) you can mark it as safe by using the\n""",1.1875,1.1875
src/flask/sansio/app.py,src/flask/sansio/app.py,c7da8c2aa3a923fc620ad480a8831a8a0f21ab37,bb16048ad74dfd07364226d02ab656f5a5cf6730,'Added python type annotation and return type.',"'@@ -291,7 +291,7 @@ class App(Scaffold):\n         instance_path: str | None = None,\n         instance_relative_config: bool = False,\n         root_path: str | None = None,\n-    ):\n+    ) -> None:\n         super().__init__(\n             import_name=import_name,\n             static_folder=static_folder,\n'",2.2941176470588234,2.2941176470588234
requirements/dev.txt,requirements/dev.txt,f567ab90681235f38bdeaeda004d89e85b8627d9,255c8d66af6daff3eaa063ea0819e185d4d1e214,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pyright](https://github.com/RobertCraigie/pyright-python), [pytest](https://github.com/pytest-dev/pytest) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pyright` from 1.1.361 to 1.1.365\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.361...v1.1.365)\n\nUpdates `pytest` from 8.2.0 to 8.2.1\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.0...8.2.1)\n\nUpdates `pre-commit` from 3.7.0 to 3.7.1\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.7.0...v3.7.1)\n\n---\nupdated-dependencies:\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -105,7 +105,7 @@ pluggy==1.5.0\n     #   -r typing.txt\n     #   pytest\n     #   tox\n-pre-commit==3.7.0\n+pre-commit==3.7.1\n     # via -r dev.in\n pycparser==2.22\n     # via\n@@ -118,9 +118,9 @@ pygments==2.17.2\n     #   sphinx-tabs\n pyproject-api==1.6.1\n     # via tox\n-pyright==1.1.361\n+pyright==1.1.365\n     # via -r typing.txt\n-pytest==8.2.0\n+pytest==8.2.1\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n'",0,0
requirements/tests.txt,requirements/tests.txt,f567ab90681235f38bdeaeda004d89e85b8627d9,255c8d66af6daff3eaa063ea0819e185d4d1e214,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pyright](https://github.com/RobertCraigie/pyright-python), [pytest](https://github.com/pytest-dev/pytest) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pyright` from 1.1.361 to 1.1.365\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.361...v1.1.365)\n\nUpdates `pytest` from 8.2.0 to 8.2.1\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.0...8.2.1)\n\nUpdates `pre-commit` from 3.7.0 to 3.7.1\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.7.0...v3.7.1)\n\n---\nupdated-dependencies:\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -12,7 +12,7 @@ packaging==24.0\n     # via pytest\n pluggy==1.5.0\n     # via pytest\n-pytest==8.2.0\n+pytest==8.2.1\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,f567ab90681235f38bdeaeda004d89e85b8627d9,255c8d66af6daff3eaa063ea0819e185d4d1e214,"'Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [pyright](https://github.com/RobertCraigie/pyright-python), [pytest](https://github.com/pytest-dev/pytest) and [pre-commit](https://github.com/pre-commit/pre-commit).\n\n\nUpdates `pyright` from 1.1.361 to 1.1.365\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.361...v1.1.365)\n\nUpdates `pytest` from 8.2.0 to 8.2.1\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.0...8.2.1)\n\nUpdates `pre-commit` from 3.7.0 to 3.7.1\n- [Release notes](https://github.com/pre-commit/pre-commit/releases)\n- [Changelog](https://github.com/pre-commit/pre-commit/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/pre-commit/pre-commit/compare/v3.7.0...v3.7.1)\n\n---\nupdated-dependencies:\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pre-commit\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -24,9 +24,9 @@ pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.361\n+pyright==1.1.365\n     # via -r typing.in\n-pytest==8.2.0\n+pytest==8.2.1\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,e3535f99717bdf3882c0b48bff3e3eb244454e34,422e05e28dbae9fdcbca855e6727738f57cfccfe,'Bump actions/checkout from 4.1.4 to 4.1.6 in the github-actions group\n\nBumps the github-actions group with 1 update: [actions/checkout](https://github.com/actions/checkout).\n\n\nUpdates `actions/checkout` from 4.1.4 to 4.1.6\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/0ad4b8fadaa221de15dcec353f45205ec38ea70b...a5ac7e51b41094c92402da3b24376905380afc29)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n+      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,e3535f99717bdf3882c0b48bff3e3eb244454e34,422e05e28dbae9fdcbca855e6727738f57cfccfe,'Bump actions/checkout from 4.1.4 to 4.1.6 in the github-actions group\n\nBumps the github-actions group with 1 update: [actions/checkout](https://github.com/actions/checkout).\n\n\nUpdates `actions/checkout` from 4.1.4 to 4.1.6\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/0ad4b8fadaa221de15dcec353f45205ec38ea70b...a5ac7e51b41094c92402da3b24376905380afc29)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n+      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: ${{ matrix.python }}\n@@ -45,7 +45,7 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4\n+      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,07c8f19bfd6128c7cbb9c61c41b43a9eeca1b435,0d2100ed17d24b2a30594729b99feebe76839bc5,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.4.3 → v0.4.7](https://github.com/astral-sh/ruff-pre-commit/compare/v0.4.3...v0.4.7)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.4.3\n+    rev: v0.4.7\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
CHANGES.rst,CHANGES.rst,d718ecf6d3dfc4656d262154c59672437c1ea075,0ce27278d234c13ce00019540ff8e9891542d1f2,"'Provide a configuration option to control automatic option responses\n\nBy default Flask will provide responses to OPTIONS requests that are\nautomatically generated. These responses list the valid methods in the\nresponse headers. Whilst this is useful, it can be frowned on by\nauditors hence an ability to disable it wholesale is useful.'","'@@ -1,7 +1,8 @@\n Version 3.1.0\n -------------\n \n-Unreleased\n+-   Provide a configuration option to control automatic option\n+    responses. :pr:`5496`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,d718ecf6d3dfc4656d262154c59672437c1ea075,0ce27278d234c13ce00019540ff8e9891542d1f2,"'Provide a configuration option to control automatic option responses\n\nBy default Flask will provide responses to OPTIONS requests that are\nautomatically generated. These responses list the valid methods in the\nresponse headers. Whilst this is useful, it can be frowned on by\nauditors hence an ability to disable it wholesale is useful.'","'@@ -280,6 +280,12 @@ The following configuration values are used internally by Flask:\n     ``4093``. Larger cookies may be silently ignored by browsers. Set to\n     ``0`` to disable the warning.\n \n+.. py:data:: PROVIDE_AUTOMATIC_OPTIONS\n+\n+    Set to ``False`` to disable the automatic addition of OPTIONS\n+    responses. This can be overridden per route by altering the\n+    ``provide_automatic_options`` attribute.\n+\n .. versionadded:: 0.4\n    ``LOGGER_NAME``\n \n@@ -331,6 +337,10 @@ The following configuration values are used internally by Flask:\n .. versionchanged:: 2.3\n     ``ENV`` was removed.\n \n+.. versionadded:: 3.10\n+    Added :data:`PROVIDE_AUTOMATIC_OPTIONS` to control the default\n+    addition of autogenerated OPTIONS responses.\n+\n \n Configuring from Python Files\n -----------------------------\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,d718ecf6d3dfc4656d262154c59672437c1ea075,0ce27278d234c13ce00019540ff8e9891542d1f2,"'Provide a configuration option to control automatic option responses\n\nBy default Flask will provide responses to OPTIONS requests that are\nautomatically generated. These responses list the valid methods in the\nresponse headers. Whilst this is useful, it can be frowned on by\nauditors hence an ability to disable it wholesale is useful.'","'@@ -198,6 +198,7 @@ class Flask(App):\n             ""PREFERRED_URL_SCHEME"": ""http"",\n             ""TEMPLATES_AUTO_RELOAD"": None,\n             ""MAX_COOKIE_SIZE"": 4093,\n+            ""PROVIDE_AUTOMATIC_OPTIONS"": True,\n         }\n     )\n \n'",4.171428571428572,4.171428571428572
src/flask/sansio/app.py,src/flask/sansio/app.py,d718ecf6d3dfc4656d262154c59672437c1ea075,0ce27278d234c13ce00019540ff8e9891542d1f2,"'Provide a configuration option to control automatic option responses\n\nBy default Flask will provide responses to OPTIONS requests that are\nautomatically generated. These responses list the valid methods in the\nresponse headers. Whilst this is useful, it can be frowned on by\nauditors hence an ability to disable it wholesale is useful.'","'@@ -638,7 +638,7 @@ class App(Scaffold):\n             )\n \n         if provide_automatic_options is None:\n-            if ""OPTIONS"" not in methods:\n+            if ""OPTIONS"" not in methods and self.config[""PROVIDE_AUTOMATIC_OPTIONS""]:\n                 provide_automatic_options = True\n                 required_methods.add(""OPTIONS"")\n             else:\n'",2.2941176470588234,2.323529411764706
requirements/dev.txt,requirements/dev.txt,e165f3aef4dbede5d7e3f71c336c89a268753ae9,d718ecf6d3dfc4656d262154c59672437c1ea075,'Bump the python-requirements group in /requirements with 5 updates\n\nBumps the python-requirements group in /requirements with 5 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.7` | `42.0.8` |\n| [mypy](https://github.com/python/mypy) | `1.10.0` | `1.10.1` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.365` | `1.1.369` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.2.1` | `8.2.2` |\n| [tox](https://github.com/tox-dev/tox) | `4.15.0` | `4.15.1` |\n\n\nUpdates `cryptography` from 42.0.7 to 42.0.8\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.7...42.0.8)\n\nUpdates `mypy` from 1.10.0 to 1.10.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.10.0...v1.10.1)\n\nUpdates `pyright` from 1.1.365 to 1.1.369\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.365...v1.1.369)\n\nUpdates `pytest` from 8.2.1 to 8.2.2\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.1...8.2.2)\n\nUpdates `tox` from 4.15.0 to 4.15.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.15.0...4.15.1)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -36,7 +36,7 @@ charset-normalizer==3.3.2\n     #   requests\n colorama==0.4.6\n     # via tox\n-cryptography==42.0.7\n+cryptography==42.0.8\n     # via -r typing.txt\n distlib==0.3.8\n     # via virtualenv\n@@ -72,7 +72,7 @@ markupsafe==2.1.5\n     # via\n     #   -r docs.txt\n     #   jinja2\n-mypy==1.10.0\n+mypy==1.10.1\n     # via -r typing.txt\n mypy-extensions==1.0.0\n     # via\n@@ -118,9 +118,9 @@ pygments==2.17.2\n     #   sphinx-tabs\n pyproject-api==1.6.1\n     # via tox\n-pyright==1.1.365\n+pyright==1.1.369\n     # via -r typing.txt\n-pytest==8.2.1\n+pytest==8.2.2\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n@@ -172,7 +172,7 @@ sphinxcontrib-serializinghtml==1.1.10\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tox==4.15.0\n+tox==4.15.1\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.txt\n'",0,0
requirements/tests.txt,requirements/tests.txt,e165f3aef4dbede5d7e3f71c336c89a268753ae9,d718ecf6d3dfc4656d262154c59672437c1ea075,'Bump the python-requirements group in /requirements with 5 updates\n\nBumps the python-requirements group in /requirements with 5 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.7` | `42.0.8` |\n| [mypy](https://github.com/python/mypy) | `1.10.0` | `1.10.1` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.365` | `1.1.369` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.2.1` | `8.2.2` |\n| [tox](https://github.com/tox-dev/tox) | `4.15.0` | `4.15.1` |\n\n\nUpdates `cryptography` from 42.0.7 to 42.0.8\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.7...42.0.8)\n\nUpdates `mypy` from 1.10.0 to 1.10.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.10.0...v1.10.1)\n\nUpdates `pyright` from 1.1.365 to 1.1.369\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.365...v1.1.369)\n\nUpdates `pytest` from 8.2.1 to 8.2.2\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.1...8.2.2)\n\nUpdates `tox` from 4.15.0 to 4.15.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.15.0...4.15.1)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -12,7 +12,7 @@ packaging==24.0\n     # via pytest\n pluggy==1.5.0\n     # via pytest\n-pytest==8.2.1\n+pytest==8.2.2\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,e165f3aef4dbede5d7e3f71c336c89a268753ae9,d718ecf6d3dfc4656d262154c59672437c1ea075,'Bump the python-requirements group in /requirements with 5 updates\n\nBumps the python-requirements group in /requirements with 5 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [cryptography](https://github.com/pyca/cryptography) | `42.0.7` | `42.0.8` |\n| [mypy](https://github.com/python/mypy) | `1.10.0` | `1.10.1` |\n| [pyright](https://github.com/RobertCraigie/pyright-python) | `1.1.365` | `1.1.369` |\n| [pytest](https://github.com/pytest-dev/pytest) | `8.2.1` | `8.2.2` |\n| [tox](https://github.com/tox-dev/tox) | `4.15.0` | `4.15.1` |\n\n\nUpdates `cryptography` from 42.0.7 to 42.0.8\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/42.0.7...42.0.8)\n\nUpdates `mypy` from 1.10.0 to 1.10.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.10.0...v1.10.1)\n\nUpdates `pyright` from 1.1.365 to 1.1.369\n- [Release notes](https://github.com/RobertCraigie/pyright-python/releases)\n- [Commits](https://github.com/RobertCraigie/pyright-python/compare/v1.1.365...v1.1.369)\n\nUpdates `pytest` from 8.2.1 to 8.2.2\n- [Release notes](https://github.com/pytest-dev/pytest/releases)\n- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest/compare/8.2.1...8.2.2)\n\nUpdates `tox` from 4.15.0 to 4.15.1\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.15.0...4.15.1)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pyright\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: pytest\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"'@@ -8,11 +8,11 @@ asgiref==3.8.1\n     # via -r typing.in\n cffi==1.16.0\n     # via cryptography\n-cryptography==42.0.7\n+cryptography==42.0.8\n     # via -r typing.in\n iniconfig==2.0.0\n     # via pytest\n-mypy==1.10.0\n+mypy==1.10.1\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -24,9 +24,9 @@ pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.365\n+pyright==1.1.369\n     # via -r typing.in\n-pytest==8.2.1\n+pytest==8.2.2\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,7621b3d96ac2d53846c4df211bc05c5e13420028,d718ecf6d3dfc4656d262154c59672437c1ea075,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [actions/checkout](https://github.com/actions/checkout) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `actions/checkout` from 4.1.6 to 4.1.7\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/a5ac7e51b41094c92402da3b24376905380afc29...692973e3d937129bcbf40652eb9f2f61becf3332)\n\nUpdates `pypa/gh-action-pypi-publish` from 1.8.14 to 1.9.0\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/81e9d935c883d0b210363ab89cf05f3894778450...ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -9,7 +9,7 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n@@ -64,10 +64,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7\n-      - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n+      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14\n+      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n         with:\n           packages-dir: artifact/\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,7621b3d96ac2d53846c4df211bc05c5e13420028,d718ecf6d3dfc4656d262154c59672437c1ea075,'Bump the github-actions group with 2 updates\n\nBumps the github-actions group with 2 updates: [actions/checkout](https://github.com/actions/checkout) and [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish).\n\n\nUpdates `actions/checkout` from 4.1.6 to 4.1.7\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/a5ac7e51b41094c92402da3b24376905380afc29...692973e3d937129bcbf40652eb9f2f61becf3332)\n\nUpdates `pypa/gh-action-pypi-publish` from 1.8.14 to 1.9.0\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/81e9d935c883d0b210363ab89cf05f3894778450...ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>',"""@@ -33,7 +33,7 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: ${{ matrix.python }}\n@@ -45,7 +45,7 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n       - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n         with:\n           python-version: '3.x'\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,3d357273b50ed9c8ca660f60fde255c26ff7a228,926ab92118006c74a0a33bcb8f770522d007349a,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.4.7 → v0.5.0](https://github.com/astral-sh/ruff-pre-commit/compare/v0.4.7...v0.5.0)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.4.7\n+    rev: v0.5.0\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
docs/deploying/waitress.rst,docs/deploying/waitress.rst,321bd74b954156553db3dca8f43b45cdd5a88f76,6d126e1013dd9966dc510612a4b97f8f15fca2c4,'Update waitress.rst\n\nfixed a small typo',"""@@ -68,7 +68,7 @@ reverse proxy such as :doc:`nginx` or :doc:`apache-httpd` should be used\n in front of Waitress.\n \n You can bind to all external IPs on a non-privileged port by not\n-specifying the ``--host`` option. Don't do this when using a revers\n+specifying the ``--host`` option. Don't do this when using a reverse\n proxy setup, otherwise it will be possible to bypass the proxy.\n \n ``0.0.0.0`` is not a valid address to navigate to, you'd use a specific\n""",0,0
CHANGES.rst,CHANGES.rst,28d5a4d71824ff5823ae310e3fd014b48b33d583,66af0e55ef6631d05c691707da19d0f1c46921ea,'add encoding parameter to open_resource\n\nco-authored-by: mark <lopkophacked@protonmail.com>',"'@@ -3,7 +3,9 @@ Version 3.1.0\n \n -   Provide a configuration option to control automatic option\n     responses. :pr:`5496`\n-\n+-   ``Flask.open_resource``/``open_instance_resource`` and\n+    ``Blueprint.open_resource`` take an ``encoding`` parameter to use when\n+    opening in text mode. It defaults to ``utf-8``. :issue:`5504`\n \n Version 3.0.3\n -------------\n'",0,0
src/flask/app.py,src/flask/app.py,28d5a4d71824ff5823ae310e3fd014b48b33d583,66af0e55ef6631d05c691707da19d0f1c46921ea,'add encoding parameter to open_resource\n\nco-authored-by: mark <lopkophacked@protonmail.com>',"'@@ -320,9 +320,10 @@ class Flask(App):\n             t.cast(str, self.static_folder), filename, max_age=max_age\n         )\n \n-    def open_resource(self, resource: str, mode: str = ""rb"") -> t.IO[t.AnyStr]:\n-        """"""Open a resource file relative to :attr:`root_path` for\n-        reading.\n+    def open_resource(\n+        self, resource: str, mode: str = ""rb"", encoding: str | None = None\n+    ) -> t.IO[t.AnyStr]:\n+        """"""Open a resource file relative to :attr:`root_path` for reading.\n \n         For example, if the file ``schema.sql`` is next to the file\n         ``app.py`` where the ``Flask`` app is defined, it can be opened\n@@ -333,31 +334,46 @@ class Flask(App):\n             with app.open_resource(""schema.sql"") as f:\n                 conn.executescript(f.read())\n \n-        :param resource: Path to the resource relative to\n-            :attr:`root_path`.\n-        :param mode: Open the file in this mode. Only reading is\n-            supported, valid values are ""r"" (or ""rt"") and ""rb"".\n-\n-        Note this is a duplicate of the same method in the Flask\n-        class.\n+        :param resource: Path to the resource relative to :attr:`root_path`.\n+        :param mode: Open the file in this mode. Only reading is supported,\n+            valid values are ``""r""`` (or ``""rt""``) and ``""rb""``.\n+        :param encoding: Open the file with this encoding when opening in text\n+            mode. This is ignored when opening in binary mode.\n \n+        .. versionchanged:: 3.1\n+            Added the ``encoding`` parameter.\n         """"""\n         if mode not in {""r"", ""rt"", ""rb""}:\n             raise ValueError(""Resources can only be opened for reading."")\n \n-        return open(os.path.join(self.root_path, resource), mode)\n+        path = os.path.join(self.root_path, resource)\n+\n+        if mode == ""rb"":\n+            return open(path, mode)\n \n-    def open_instance_resource(self, resource: str, mode: str = ""rb"") -> t.IO[t.AnyStr]:\n-        """"""Opens a resource from the application\'s instance folder\n-        (:attr:`instance_path`).  Otherwise works like\n-        :meth:`open_resource`.  Instance resources can also be opened for\n-        writing.\n+        return open(path, mode, encoding=encoding)\n \n-        :param resource: the name of the resource.  To access resources within\n-                         subfolders use forward slashes as separator.\n-        :param mode: resource file opening mode, default is \'rb\'.\n+    def open_instance_resource(\n+        self, resource: str, mode: str = ""rb"", encoding: str | None = ""utf-8""\n+    ) -> t.IO[t.AnyStr]:\n+        """"""Open a resource file relative to the application\'s instance folder\n+        :attr:`instance_path`. Unlike :meth:`open_resource`, files in the\n+        instance folder can be opened for writing.\n+\n+        :param resource: Path to the resource relative to :attr:`instance_path`.\n+        :param mode: Open the file in this mode.\n+        :param encoding: Open the file with this encoding when opening in text\n+            mode. This is ignored when opening in binary mode.\n+\n+        .. versionchanged:: 3.1\n+            Added the ``encoding`` parameter.\n         """"""\n-        return open(os.path.join(self.instance_path, resource), mode)\n+        path = os.path.join(self.instance_path, resource)\n+\n+        if ""b"" in mode:\n+            return open(path, mode)\n+\n+        return open(path, mode, encoding=encoding)\n \n     def create_jinja_environment(self) -> Environment:\n         """"""Create the Jinja environment based on :attr:`jinja_options`\n'",4.171428571428572,4.228571428571429
src/flask/blueprints.py,src/flask/blueprints.py,28d5a4d71824ff5823ae310e3fd014b48b33d583,66af0e55ef6631d05c691707da19d0f1c46921ea,'add encoding parameter to open_resource\n\nco-authored-by: mark <lopkophacked@protonmail.com>',"'@@ -101,29 +101,28 @@ class Blueprint(SansioBlueprint):\n             t.cast(str, self.static_folder), filename, max_age=max_age\n         )\n \n-    def open_resource(self, resource: str, mode: str = ""rb"") -> t.IO[t.AnyStr]:\n-        """"""Open a resource file relative to :attr:`root_path` for\n-        reading.\n-\n-        For example, if the file ``schema.sql`` is next to the file\n-        ``app.py`` where the ``Flask`` app is defined, it can be opened\n-        with:\n-\n-        .. code-block:: python\n-\n-            with app.open_resource(""schema.sql"") as f:\n-                conn.executescript(f.read())\n-\n-        :param resource: Path to the resource relative to\n-            :attr:`root_path`.\n-        :param mode: Open the file in this mode. Only reading is\n-            supported, valid values are ""r"" (or ""rt"") and ""rb"".\n-\n-        Note this is a duplicate of the same method in the Flask\n-        class.\n-\n+    def open_resource(\n+        self, resource: str, mode: str = ""rb"", encoding: str | None = ""utf-8""\n+    ) -> t.IO[t.AnyStr]:\n+        """"""Open a resource file relative to :attr:`root_path` for reading. The\n+        blueprint-relative equivalent of the app\'s :meth:`~.Flask.open_resource`\n+        method.\n+\n+        :param resource: Path to the resource relative to :attr:`root_path`.\n+        :param mode: Open the file in this mode. Only reading is supported,\n+            valid values are ``""r""`` (or ``""rt""``) and ``""rb""``.\n+        :param encoding: Open the file with this encoding when opening in text\n+            mode. This is ignored when opening in binary mode.\n+\n+        .. versionchanged:: 3.1\n+            Added the ``encoding`` parameter.\n         """"""\n         if mode not in {""r"", ""rt"", ""rb""}:\n             raise ValueError(""Resources can only be opened for reading."")\n \n-        return open(os.path.join(self.root_path, resource), mode)\n+        path = os.path.join(self.root_path, resource)\n+\n+        if mode == ""rb"":\n+            return open(path, mode)\n+\n+        return open(path, mode, encoding=encoding)\n'",2.0,2.25
tests/test_helpers.py,tests/test_helpers.py,28d5a4d71824ff5823ae310e3fd014b48b33d583,66af0e55ef6631d05c691707da19d0f1c46921ea,'add encoding parameter to open_resource\n\nco-authored-by: mark <lopkophacked@protonmail.com>',"'@@ -334,16 +334,27 @@ class TestHelpers:\n             assert rv.data == b""Hello""\n             assert rv.mimetype == ""text/html""\n \n-    @pytest.mark.parametrize(""mode"", (""r"", ""rb"", ""rt""))\n-    def test_open_resource(self, mode):\n-        app = flask.Flask(__name__)\n \n-        with app.open_resource(""static/index.html"", mode) as f:\n-            assert ""<h1>Hello World!</h1>"" in str(f.read())\n+@pytest.mark.parametrize(""mode"", (""r"", ""rb"", ""rt""))\n+def test_open_resource(mode):\n+    app = flask.Flask(__name__)\n \n-    @pytest.mark.parametrize(""mode"", (""w"", ""x"", ""a"", ""r+""))\n-    def test_open_resource_exceptions(self, mode):\n-        app = flask.Flask(__name__)\n+    with app.open_resource(""static/index.html"", mode) as f:\n+        assert ""<h1>Hello World!</h1>"" in str(f.read())\n \n-        with pytest.raises(ValueError):\n-            app.open_resource(""static/index.html"", mode)\n+\n+@pytest.mark.parametrize(""mode"", (""w"", ""x"", ""a"", ""r+""))\n+def test_open_resource_exceptions(mode):\n+    app = flask.Flask(__name__)\n+\n+    with pytest.raises(ValueError):\n+        app.open_resource(""static/index.html"", mode)\n+\n+\n+@pytest.mark.parametrize(""encoding"", (""utf-8"", ""utf-16-le""))\n+def test_open_resource_with_encoding(tmp_path, encoding):\n+    app = flask.Flask(__name__, root_path=os.fspath(tmp_path))\n+    (tmp_path / ""test"").write_text(""test"", encoding=encoding)\n+\n+    with app.open_resource(""test"", mode=""rt"", encoding=encoding) as f:\n+        assert f.read() == ""test""\n'",1.0425531914893618,1.0416666666666667
.github/workflows/publish.yaml,.github/workflows/publish.yaml,4fe0aebab79a092615f5f86a24b91bac07fb2ef2,a8956feba1e40105e7bc78fa62ce36c58d1c91e1,"'Bump the github-actions group with 3 updates\n\nBumps the github-actions group with 3 updates: [actions/setup-python](https://github.com/actions/setup-python), [actions/upload-artifact](https://github.com/actions/upload-artifact) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/setup-python` from 5.1.0 to 5.1.1\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/82c7e631bb3cdc910f68e0081d67478d79c6982d...39cd14951b08e74b54015e9e001cdefcf80e669f)\n\nUpdates `actions/upload-artifact` from 4.3.3 to 4.3.4\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/65462800fd760344b1a7b4382951275a0abb4808...0b2256b8c012f0828dc542b3febcab082c67f72b)\n\nUpdates `actions/download-artifact` from 4.1.7 to 4.1.8\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/65a9edc5881444af0b9093a5e628f2fe47ea3b2e...fa0a91b85d4f404e444e00e005971372dc801d16)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","'@@ -10,7 +10,7 @@ jobs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n       - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: \'3.x\'\n           cache: pip\n@@ -23,7 +23,7 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n+      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4\n         with:\n           path: ./dist\n   provenance:\n@@ -44,7 +44,7 @@ jobs:\n     permissions:\n       contents: write\n     steps:\n-      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7\n+      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n       - name: create release\n         run: >\n           gh release create --draft --repo ${{ github.repository }}\n@@ -63,7 +63,7 @@ jobs:\n     permissions:\n       id-token: write\n     steps:\n-      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7\n+      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n       - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n         with:\n           repository-url: https://test.pypi.org/legacy/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,4fe0aebab79a092615f5f86a24b91bac07fb2ef2,a8956feba1e40105e7bc78fa62ce36c58d1c91e1,"'Bump the github-actions group with 3 updates\n\nBumps the github-actions group with 3 updates: [actions/setup-python](https://github.com/actions/setup-python), [actions/upload-artifact](https://github.com/actions/upload-artifact) and [actions/download-artifact](https://github.com/actions/download-artifact).\n\n\nUpdates `actions/setup-python` from 5.1.0 to 5.1.1\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/82c7e631bb3cdc910f68e0081d67478d79c6982d...39cd14951b08e74b54015e9e001cdefcf80e669f)\n\nUpdates `actions/upload-artifact` from 4.3.3 to 4.3.4\n- [Release notes](https://github.com/actions/upload-artifact/releases)\n- [Commits](https://github.com/actions/upload-artifact/compare/65462800fd760344b1a7b4382951275a0abb4808...0b2256b8c012f0828dc542b3febcab082c67f72b)\n\nUpdates `actions/download-artifact` from 4.1.7 to 4.1.8\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/65a9edc5881444af0b9093a5e628f2fe47ea3b2e...fa0a91b85d4f404e444e00e005971372dc801d16)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/upload-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: github-actions\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>'","""@@ -34,7 +34,7 @@ jobs:\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n       - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: ${{ matrix.python }}\n           allow-prereleases: true\n@@ -46,7 +46,7 @@ jobs:\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: '3.x'\n           cache: pip\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,326ad3f43c63f84a69d6d08af276cbdf653efc51,a791997041b94b8a5effebc296cb427fde8e0ee5,'[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.5.0 → v0.5.6](https://github.com/astral-sh/ruff-pre-commit/compare/v0.5.0...v0.5.6)',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.5.0\n+    rev: v0.5.6\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
pyproject.toml,pyproject.toml,0f2ae2b9330604247f553f41d310e7c0191275ef,5353f306fe0c64ffa9e73f256ba3cb200652354d,'add gha-update',"'@@ -118,3 +118,8 @@ ignore-init-module-imports = true\n [tool.ruff.lint.isort]\n force-single-line = true\n order-by-type = false\n+\n+[tool.gha-update]\n+tag-only = [\n+    ""slsa-framework/slsa-github-generator"",\n+]\n'",0,0
tox.ini,tox.ini,0f2ae2b9330604247f553f41d310e7c0191275ef,5353f306fe0c64ffa9e73f256ba3cb200652354d,'add gha-update',"'@@ -34,16 +34,26 @@ commands = mypy\n deps = -r requirements/docs.txt\n commands = sphinx-build -E -W -b dirhtml docs docs/_build/dirhtml\n \n+[testenv:update-actions]\n+labels = update\n+deps = gha-update\n+commands = gha-update\n+\n+[testenv:update-pre_commit]\n+labels = update\n+deps = pre-commit\n+skip_install = true\n+commands = pre-commit autoupdate -j4\n+\n [testenv:update-requirements]\n-deps =\n-    pip-tools\n-    pre-commit\n+base_python = 3.12\n+labels = update\n+deps = pip-tools\n skip_install = true\n change_dir = requirements\n commands =\n-    pre-commit autoupdate -j4\n-    pip-compile -U build.in\n-    pip-compile -U docs.in\n-    pip-compile -U tests.in\n-    pip-compile -U typing.in\n-    pip-compile -U dev.in\n+    pip-compile build.in -q {posargs:-U}\n+    pip-compile docs.in -q {posargs:-U}\n+    pip-compile tests.in -q {posargs:-U}\n+    pip-compile typing.in -q {posargs:-U}\n+    pip-compile dev.in -q {posargs:-U}\n'",0,0
.github/workflows/lock.yaml,.github/workflows/lock.yaml,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -16,7 +16,7 @@ jobs:\n   lock:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: dessant/lock-threads@7de207be1d3ce97a9abe6ff1306222982d1ca9f9 # v5.0.1\n+      - uses: dessant/lock-threads@1bf7ec25051fe7c00bdd17e6a7cf3d7bfb7dc771 # v5.0.1\n         with:\n           issue-inactive-days: 14\n           pr-inactive-days: 14\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -9,8 +9,8 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: \'3.x\'\n           cache: pip\n@@ -23,7 +23,7 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3\n+      - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6\n         with:\n           path: ./dist\n   provenance:\n@@ -33,7 +33,7 @@ jobs:\n       id-token: write\n       contents: write\n     # Can\'t pin with hash due to how this workflow works.\n-    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0\n+    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n     with:\n       base64-subjects: ${{ needs.build.outputs.hash }}\n   create-release:\n@@ -44,7 +44,7 @@ jobs:\n     permissions:\n       contents: write\n     steps:\n-      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n+      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n       - name: create release\n         run: >\n           gh release create --draft --repo ${{ github.repository }}\n@@ -63,11 +63,11 @@ jobs:\n     permissions:\n       id-token: write\n     steps:\n-      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2\n-      - uses: pypa/gh-action-pypi-publish@68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 # v1.8.14\n+      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n+      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@68e62d4871ad9d14a9d55f114e6ac71f0b408ec0 # v1.8.14\n+      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n         with:\n           packages-dir: artifact/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"""@@ -33,8 +33,8 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: ${{ matrix.python }}\n           allow-prereleases: true\n@@ -45,8 +45,8 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1\n-      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0\n+      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n+      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n         with:\n           python-version: '3.x'\n           cache: pip\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.3.5\n+    rev: v0.6.2\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
requirements/build.txt,requirements/build.txt,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -6,7 +6,7 @@\n #\n build==1.2.1\n     # via -r build.in\n-packaging==24.0\n+packaging==24.1\n     # via build\n-pyproject-hooks==1.0.0\n+pyproject-hooks==1.1.0\n     # via build\n'",0,0
requirements/dev.txt,requirements/dev.txt,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile dev.in\n #\n-alabaster==0.7.16\n+alabaster==1.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -12,17 +12,17 @@ asgiref==3.8.1\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n-babel==2.14.0\n+babel==2.16.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-cachetools==5.3.3\n+cachetools==5.5.0\n     # via tox\n-certifi==2024.2.2\n+certifi==2024.7.4\n     # via\n     #   -r docs.txt\n     #   requests\n-cffi==1.16.0\n+cffi==1.17.0\n     # via\n     #   -r typing.txt\n     #   cryptography\n@@ -36,22 +36,22 @@ charset-normalizer==3.3.2\n     #   requests\n colorama==0.4.6\n     # via tox\n-cryptography==42.0.5\n+cryptography==43.0.0\n     # via -r typing.txt\n distlib==0.3.8\n     # via virtualenv\n-docutils==0.20.1\n+docutils==0.21.2\n     # via\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.13.3\n+filelock==3.15.4\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.5.35\n+identify==2.6.0\n     # via pre-commit\n-idna==3.6\n+idna==3.8\n     # via\n     #   -r docs.txt\n     #   requests\n@@ -64,7 +64,7 @@ iniconfig==2.0.0\n     #   -r tests.txt\n     #   -r typing.txt\n     #   pytest\n-jinja2==3.1.3\n+jinja2==3.1.4\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -72,18 +72,18 @@ markupsafe==2.1.5\n     # via\n     #   -r docs.txt\n     #   jinja2\n-mypy==1.9.0\n+mypy==1.11.1\n     # via -r typing.txt\n mypy-extensions==1.0.0\n     # via\n     #   -r typing.txt\n     #   mypy\n-nodeenv==1.8.0\n+nodeenv==1.9.1\n     # via\n     #   -r typing.txt\n     #   pre-commit\n     #   pyright\n-packaging==24.0\n+packaging==24.1\n     # via\n     #   -r docs.txt\n     #   -r tests.txt\n@@ -93,34 +93,34 @@ packaging==24.0\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.1.1\n+pallets-sphinx-themes==2.1.3\n     # via -r docs.txt\n-platformdirs==4.2.0\n+platformdirs==4.2.2\n     # via\n     #   tox\n     #   virtualenv\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n     #   pytest\n     #   tox\n-pre-commit==3.7.0\n+pre-commit==3.8.0\n     # via -r dev.in\n pycparser==2.22\n     # via\n     #   -r typing.txt\n     #   cffi\n-pygments==2.17.2\n+pygments==2.18.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n-pyproject-api==1.6.1\n+pyproject-api==1.7.1\n     # via tox\n-pyright==1.1.357\n+pyright==1.1.377\n     # via -r typing.txt\n-pytest==8.1.1\n+pytest==8.3.2\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n@@ -128,9 +128,9 @@ python-dotenv==1.0.1\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n-pyyaml==6.0.1\n+pyyaml==6.0.2\n     # via pre-commit\n-requests==2.31.0\n+requests==2.32.3\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -138,7 +138,7 @@ snowballstemmer==2.2.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinx==7.2.6\n+sphinx==8.0.2\n     # via\n     #   -r docs.txt\n     #   pallets-sphinx-themes\n@@ -146,15 +146,15 @@ sphinx==7.2.6\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.txt\n-sphinxcontrib-applehelp==1.0.8\n+sphinxcontrib-applehelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-devhelp==1.0.6\n+sphinxcontrib-devhelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-htmlhelp==2.0.5\n+sphinxcontrib-htmlhelp==2.1.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -164,32 +164,29 @@ sphinxcontrib-jsmath==1.0.1\n     #   sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.txt\n-sphinxcontrib-qthelp==1.0.7\n+sphinxcontrib-qthelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-serializinghtml==1.1.10\n+sphinxcontrib-serializinghtml==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tox==4.14.2\n+tox==4.18.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.txt\n types-dataclasses==0.6.6\n     # via -r typing.txt\n-typing-extensions==4.11.0\n+typing-extensions==4.12.2\n     # via\n     #   -r typing.txt\n     #   mypy\n-urllib3==2.2.1\n+urllib3==2.2.2\n     # via\n     #   -r docs.txt\n     #   requests\n-virtualenv==20.25.1\n+virtualenv==20.26.3\n     # via\n     #   pre-commit\n     #   tox\n-\n-# The following packages are considered to be unsafe in a requirements file:\n-# setuptools\n'",0,0
requirements/docs.txt,requirements/docs.txt,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -4,41 +4,41 @@\n #\n #    pip-compile docs.in\n #\n-alabaster==0.7.16\n+alabaster==1.0.0\n     # via sphinx\n-babel==2.14.0\n+babel==2.16.0\n     # via sphinx\n-certifi==2024.2.2\n+certifi==2024.7.4\n     # via requests\n charset-normalizer==3.3.2\n     # via requests\n-docutils==0.20.1\n+docutils==0.21.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==3.6\n+idna==3.8\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n-jinja2==3.1.3\n+jinja2==3.1.4\n     # via sphinx\n markupsafe==2.1.5\n     # via jinja2\n-packaging==24.0\n+packaging==24.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.1.1\n+pallets-sphinx-themes==2.1.3\n     # via -r docs.in\n-pygments==2.17.2\n+pygments==2.18.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-requests==2.31.0\n+requests==2.32.3\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==7.2.6\n+sphinx==8.0.2\n     # via\n     #   -r docs.in\n     #   pallets-sphinx-themes\n@@ -46,19 +46,19 @@ sphinx==7.2.6\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.in\n-sphinxcontrib-applehelp==1.0.8\n+sphinxcontrib-applehelp==2.0.0\n     # via sphinx\n-sphinxcontrib-devhelp==1.0.6\n+sphinxcontrib-devhelp==2.0.0\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.5\n+sphinxcontrib-htmlhelp==2.1.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.in\n-sphinxcontrib-qthelp==1.0.7\n+sphinxcontrib-qthelp==2.0.0\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.10\n+sphinxcontrib-serializinghtml==2.0.0\n     # via sphinx\n-urllib3==2.2.1\n+urllib3==2.2.2\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -8,11 +8,11 @@ asgiref==3.8.1\n     # via -r tests.in\n iniconfig==2.0.0\n     # via pytest\n-packaging==24.0\n+packaging==24.1\n     # via pytest\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via pytest\n-pytest==8.1.1\n+pytest==8.3.2\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,29a94bd102805eafcea94a185808cd878cd3f5ad,0f2ae2b9330604247f553f41d310e7c0191275ef,'update dev dependencies',"'@@ -6,27 +6,27 @@\n #\n asgiref==3.8.1\n     # via -r typing.in\n-cffi==1.16.0\n+cffi==1.17.0\n     # via cryptography\n-cryptography==42.0.5\n+cryptography==43.0.0\n     # via -r typing.in\n iniconfig==2.0.0\n     # via pytest\n-mypy==1.9.0\n+mypy==1.11.1\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n-nodeenv==1.8.0\n+nodeenv==1.9.1\n     # via pyright\n-packaging==24.0\n+packaging==24.1\n     # via pytest\n-pluggy==1.4.0\n+pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.357\n+pyright==1.1.377\n     # via -r typing.in\n-pytest==8.1.1\n+pytest==8.3.2\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n@@ -34,8 +34,5 @@ types-contextvars==2.4.7.3\n     # via -r typing.in\n types-dataclasses==0.6.6\n     # via -r typing.in\n-typing-extensions==4.11.0\n+typing-extensions==4.12.2\n     # via mypy\n-\n-# The following packages are considered to be unsafe in a requirements file:\n-# setuptools\n'",0,0
src/flask/helpers.py,src/flask/helpers.py,176fdfa0002360670f698d3828cfff11f97349f0,2d31dce8262a68875c177645fa0c7585a45ac447,'fix mypy findings',"'@@ -47,9 +47,21 @@ def get_load_dotenv(default: bool = True) -> bool:\n     return val.lower() in (""0"", ""false"", ""no"")\n \n \n+@t.overload\n+def stream_with_context(\n+    generator_or_function: t.Iterator[t.AnyStr],\n+) -> t.Iterator[t.AnyStr]: ...\n+\n+\n+@t.overload\n+def stream_with_context(\n+    generator_or_function: t.Callable[..., t.Iterator[t.AnyStr]],\n+) -> t.Callable[[t.Iterator[t.AnyStr]], t.Iterator[t.AnyStr]]: ...\n+\n+\n def stream_with_context(\n     generator_or_function: t.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]],\n-) -> t.Iterator[t.AnyStr]:\n+) -> t.Iterator[t.AnyStr] | t.Callable[[t.Iterator[t.AnyStr]], t.Iterator[t.AnyStr]]:\n     """"""Request contexts disappear when the response is started on the server.\n     This is done for efficiency reasons and to make it less likely to encounter\n     memory leaks with badly written WSGI middlewares.  The downside is that if\n'",2.4705882352941178,2.4705882352941178
src/flask/json/provider.py,src/flask/json/provider.py,176fdfa0002360670f698d3828cfff11f97349f0,2d31dce8262a68875c177645fa0c7585a45ac447,'fix mypy findings',"'@@ -113,7 +113,7 @@ def _default(o: t.Any) -> t.Any:\n         return str(o)\n \n     if dataclasses and dataclasses.is_dataclass(o):\n-        return dataclasses.asdict(o)\n+        return dataclasses.asdict(o)  # type: ignore[call-overload]\n \n     if hasattr(o, ""__html__""):\n         return str(o.__html__())\n'",2.272727272727273,2.272727272727273
pyproject.toml,pyproject.toml,2c5d652493b79eecadd4407f24f2249948bd6ff2,176fdfa0002360670f698d3828cfff11f97349f0,'remove unused config',"'@@ -113,7 +113,6 @@ select = [\n     ""UP"",  # pyupgrade\n     ""W"",  # pycodestyle warning\n ]\n-ignore-init-module-imports = true\n \n [tool.ruff.lint.isort]\n force-single-line = true\n'",0,0
requirements/build.txt,requirements/build.txt,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -1,12 +1,18 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.8\n # by the following command:\n #\n #    pip-compile build.in\n #\n build==1.2.1\n     # via -r build.in\n+importlib-metadata==8.4.0\n+    # via build\n packaging==24.1\n     # via build\n pyproject-hooks==1.1.0\n     # via build\n+tomli==2.0.1\n+    # via build\n+zipp==3.20.0\n+    # via importlib-metadata\n'",0,0
requirements/dev.txt,requirements/dev.txt,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -1,10 +1,10 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.8\n # by the following command:\n #\n #    pip-compile dev.in\n #\n-alabaster==1.0.0\n+alabaster==0.7.13\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -40,15 +40,22 @@ cryptography==43.0.0\n     # via -r typing.txt\n distlib==0.3.8\n     # via virtualenv\n-docutils==0.21.2\n+docutils==0.20.1\n     # via\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n+exceptiongroup==1.2.2\n+    # via\n+    #   -r tests.txt\n+    #   -r typing.txt\n+    #   pytest\n filelock==3.15.4\n     # via\n     #   tox\n     #   virtualenv\n+greenlet==3.0.3 ; python_version < ""3.11""\n+    # via -r tests.txt\n identify==2.6.0\n     # via pre-commit\n idna==3.8\n@@ -59,6 +66,10 @@ imagesize==1.4.1\n     # via\n     #   -r docs.txt\n     #   sphinx\n+importlib-metadata==8.4.0\n+    # via\n+    #   -r docs.txt\n+    #   sphinx\n iniconfig==2.0.0\n     # via\n     #   -r tests.txt\n@@ -105,7 +116,7 @@ pluggy==1.5.0\n     #   -r typing.txt\n     #   pytest\n     #   tox\n-pre-commit==3.8.0\n+pre-commit==3.5.0\n     # via -r dev.in\n pycparser==2.22\n     # via\n@@ -128,6 +139,10 @@ python-dotenv==1.0.1\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n+pytz==2024.1\n+    # via\n+    #   -r docs.txt\n+    #   babel\n pyyaml==6.0.2\n     # via pre-commit\n requests==2.32.3\n@@ -138,7 +153,7 @@ snowballstemmer==2.2.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinx==8.0.2\n+sphinx==7.1.2\n     # via\n     #   -r docs.txt\n     #   pallets-sphinx-themes\n@@ -146,15 +161,15 @@ sphinx==8.0.2\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.txt\n-sphinxcontrib-applehelp==2.0.0\n+sphinxcontrib-applehelp==1.0.4\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-devhelp==2.0.0\n+sphinxcontrib-devhelp==1.0.2\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-htmlhelp==2.1.0\n+sphinxcontrib-htmlhelp==2.0.1\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -164,14 +179,22 @@ sphinxcontrib-jsmath==1.0.1\n     #   sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.txt\n-sphinxcontrib-qthelp==2.0.0\n+sphinxcontrib-qthelp==1.0.3\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-serializinghtml==2.0.0\n+sphinxcontrib-serializinghtml==1.1.5\n     # via\n     #   -r docs.txt\n     #   sphinx\n+tomli==2.0.1\n+    # via\n+    #   -r tests.txt\n+    #   -r typing.txt\n+    #   mypy\n+    #   pyproject-api\n+    #   pytest\n+    #   tox\n tox==4.18.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n@@ -180,7 +203,9 @@ types-dataclasses==0.6.6\n     # via -r typing.txt\n typing-extensions==4.12.2\n     # via\n+    #   -r tests.txt\n     #   -r typing.txt\n+    #   asgiref\n     #   mypy\n urllib3==2.2.2\n     # via\n@@ -190,3 +215,7 @@ virtualenv==20.26.3\n     # via\n     #   pre-commit\n     #   tox\n+zipp==3.20.0\n+    # via\n+    #   -r docs.txt\n+    #   importlib-metadata\n'",0,0
requirements/docs.txt,requirements/docs.txt,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -1,10 +1,10 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.8\n # by the following command:\n #\n #    pip-compile docs.in\n #\n-alabaster==1.0.0\n+alabaster==0.7.13\n     # via sphinx\n babel==2.16.0\n     # via sphinx\n@@ -12,7 +12,7 @@ certifi==2024.7.4\n     # via requests\n charset-normalizer==3.3.2\n     # via requests\n-docutils==0.21.2\n+docutils==0.20.1\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -20,6 +20,8 @@ idna==3.8\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n+importlib-metadata==8.4.0\n+    # via sphinx\n jinja2==3.1.4\n     # via sphinx\n markupsafe==2.1.5\n@@ -34,11 +36,13 @@ pygments==2.18.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n+pytz==2024.1\n+    # via babel\n requests==2.32.3\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==8.0.2\n+sphinx==7.1.2\n     # via\n     #   -r docs.in\n     #   pallets-sphinx-themes\n@@ -46,19 +50,21 @@ sphinx==8.0.2\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.in\n-sphinxcontrib-applehelp==2.0.0\n+sphinxcontrib-applehelp==1.0.4\n     # via sphinx\n-sphinxcontrib-devhelp==2.0.0\n+sphinxcontrib-devhelp==1.0.2\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.1.0\n+sphinxcontrib-htmlhelp==2.0.1\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.in\n-sphinxcontrib-qthelp==2.0.0\n+sphinxcontrib-qthelp==1.0.3\n     # via sphinx\n-sphinxcontrib-serializinghtml==2.0.0\n+sphinxcontrib-serializinghtml==1.1.5\n     # via sphinx\n urllib3==2.2.2\n     # via requests\n+zipp==3.20.0\n+    # via importlib-metadata\n'",0,0
requirements/tests.txt,requirements/tests.txt,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -1,11 +1,15 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.8\n # by the following command:\n #\n #    pip-compile tests.in\n #\n asgiref==3.8.1\n     # via -r tests.in\n+exceptiongroup==1.2.2\n+    # via pytest\n+greenlet==3.0.3 ; python_version < ""3.11""\n+    # via -r tests.in\n iniconfig==2.0.0\n     # via pytest\n packaging==24.1\n@@ -16,3 +20,7 @@ pytest==8.3.2\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n+tomli==2.0.1\n+    # via pytest\n+typing-extensions==4.12.2\n+    # via asgiref\n'",0,0
requirements/typing.txt,requirements/typing.txt,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.8\n # by the following command:\n #\n #    pip-compile typing.in\n@@ -10,6 +10,8 @@ cffi==1.17.0\n     # via cryptography\n cryptography==43.0.0\n     # via -r typing.in\n+exceptiongroup==1.2.2\n+    # via pytest\n iniconfig==2.0.0\n     # via pytest\n mypy==1.11.1\n@@ -30,9 +32,15 @@ pytest==8.3.2\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n+tomli==2.0.1\n+    # via\n+    #   mypy\n+    #   pytest\n types-contextvars==2.4.7.3\n     # via -r typing.in\n types-dataclasses==0.6.6\n     # via -r typing.in\n typing-extensions==4.12.2\n-    # via mypy\n+    # via\n+    #   asgiref\n+    #   mypy\n'",0,0
tox.ini,tox.ini,40b78fa2ea9095197608287de9f0d902d2763b00,2c5d652493b79eecadd4407f24f2249948bd6ff2,'fix min python for pip-compile',"'@@ -46,7 +46,7 @@ skip_install = true\n commands = pre-commit autoupdate -j4\n \n [testenv:update-requirements]\n-base_python = 3.12\n+base_python = 3.8\n labels = update\n deps = pip-tools\n skip_install = true\n'",0,0
requirements/build.txt,requirements/build.txt,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -1,18 +1,12 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.8\n+# This file is autogenerated by pip-compile with Python 3.12\n # by the following command:\n #\n #    pip-compile build.in\n #\n build==1.2.1\n     # via -r build.in\n-importlib-metadata==8.4.0\n-    # via build\n packaging==24.1\n     # via build\n pyproject-hooks==1.1.0\n     # via build\n-tomli==2.0.1\n-    # via build\n-zipp==3.20.0\n-    # via importlib-metadata\n'",0,0
requirements/dev.txt,requirements/dev.txt,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -1,10 +1,10 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.8\n+# This file is autogenerated by pip-compile with Python 3.12\n # by the following command:\n #\n #    pip-compile dev.in\n #\n-alabaster==0.7.13\n+alabaster==1.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -40,22 +40,15 @@ cryptography==43.0.0\n     # via -r typing.txt\n distlib==0.3.8\n     # via virtualenv\n-docutils==0.20.1\n+docutils==0.21.2\n     # via\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n-exceptiongroup==1.2.2\n-    # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n-    #   pytest\n filelock==3.15.4\n     # via\n     #   tox\n     #   virtualenv\n-greenlet==3.0.3 ; python_version < ""3.11""\n-    # via -r tests.txt\n identify==2.6.0\n     # via pre-commit\n idna==3.8\n@@ -66,10 +59,6 @@ imagesize==1.4.1\n     # via\n     #   -r docs.txt\n     #   sphinx\n-importlib-metadata==8.4.0\n-    # via\n-    #   -r docs.txt\n-    #   sphinx\n iniconfig==2.0.0\n     # via\n     #   -r tests.txt\n@@ -116,7 +105,7 @@ pluggy==1.5.0\n     #   -r typing.txt\n     #   pytest\n     #   tox\n-pre-commit==3.5.0\n+pre-commit==3.8.0\n     # via -r dev.in\n pycparser==2.22\n     # via\n@@ -139,10 +128,6 @@ python-dotenv==1.0.1\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n-pytz==2024.1\n-    # via\n-    #   -r docs.txt\n-    #   babel\n pyyaml==6.0.2\n     # via pre-commit\n requests==2.32.3\n@@ -153,7 +138,7 @@ snowballstemmer==2.2.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinx==7.1.2\n+sphinx==8.0.2\n     # via\n     #   -r docs.txt\n     #   pallets-sphinx-themes\n@@ -161,15 +146,15 @@ sphinx==7.1.2\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.txt\n-sphinxcontrib-applehelp==1.0.4\n+sphinxcontrib-applehelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-devhelp==1.0.2\n+sphinxcontrib-devhelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-htmlhelp==2.0.1\n+sphinxcontrib-htmlhelp==2.1.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n@@ -179,22 +164,14 @@ sphinxcontrib-jsmath==1.0.1\n     #   sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.txt\n-sphinxcontrib-qthelp==1.0.3\n+sphinxcontrib-qthelp==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinxcontrib-serializinghtml==1.1.5\n+sphinxcontrib-serializinghtml==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tomli==2.0.1\n-    # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n-    #   mypy\n-    #   pyproject-api\n-    #   pytest\n-    #   tox\n tox==4.18.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n@@ -203,9 +180,7 @@ types-dataclasses==0.6.6\n     # via -r typing.txt\n typing-extensions==4.12.2\n     # via\n-    #   -r tests.txt\n     #   -r typing.txt\n-    #   asgiref\n     #   mypy\n urllib3==2.2.2\n     # via\n@@ -215,7 +190,3 @@ virtualenv==20.26.3\n     # via\n     #   pre-commit\n     #   tox\n-zipp==3.20.0\n-    # via\n-    #   -r docs.txt\n-    #   importlib-metadata\n'",0,0
requirements/docs.txt,requirements/docs.txt,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -1,10 +1,10 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.8\n+# This file is autogenerated by pip-compile with Python 3.12\n # by the following command:\n #\n #    pip-compile docs.in\n #\n-alabaster==0.7.13\n+alabaster==1.0.0\n     # via sphinx\n babel==2.16.0\n     # via sphinx\n@@ -12,7 +12,7 @@ certifi==2024.7.4\n     # via requests\n charset-normalizer==3.3.2\n     # via requests\n-docutils==0.20.1\n+docutils==0.21.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n@@ -20,8 +20,6 @@ idna==3.8\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n-importlib-metadata==8.4.0\n-    # via sphinx\n jinja2==3.1.4\n     # via sphinx\n markupsafe==2.1.5\n@@ -36,13 +34,11 @@ pygments==2.18.0\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-pytz==2024.1\n-    # via babel\n requests==2.32.3\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==7.1.2\n+sphinx==8.0.2\n     # via\n     #   -r docs.in\n     #   pallets-sphinx-themes\n@@ -50,21 +46,19 @@ sphinx==7.1.2\n     #   sphinxcontrib-log-cabinet\n sphinx-tabs==3.4.5\n     # via -r docs.in\n-sphinxcontrib-applehelp==1.0.4\n+sphinxcontrib-applehelp==2.0.0\n     # via sphinx\n-sphinxcontrib-devhelp==1.0.2\n+sphinxcontrib-devhelp==2.0.0\n     # via sphinx\n-sphinxcontrib-htmlhelp==2.0.1\n+sphinxcontrib-htmlhelp==2.1.0\n     # via sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via sphinx\n sphinxcontrib-log-cabinet==1.0.1\n     # via -r docs.in\n-sphinxcontrib-qthelp==1.0.3\n+sphinxcontrib-qthelp==2.0.0\n     # via sphinx\n-sphinxcontrib-serializinghtml==1.1.5\n+sphinxcontrib-serializinghtml==2.0.0\n     # via sphinx\n urllib3==2.2.2\n     # via requests\n-zipp==3.20.0\n-    # via importlib-metadata\n'",0,0
requirements/tests.txt,requirements/tests.txt,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -1,15 +1,11 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.8\n+# This file is autogenerated by pip-compile with Python 3.12\n # by the following command:\n #\n #    pip-compile tests.in\n #\n asgiref==3.8.1\n     # via -r tests.in\n-exceptiongroup==1.2.2\n-    # via pytest\n-greenlet==3.0.3 ; python_version < ""3.11""\n-    # via -r tests.in\n iniconfig==2.0.0\n     # via pytest\n packaging==24.1\n@@ -20,7 +16,3 @@ pytest==8.3.2\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n-tomli==2.0.1\n-    # via pytest\n-typing-extensions==4.12.2\n-    # via asgiref\n'",0,0
requirements/typing.txt,requirements/typing.txt,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.8\n+# This file is autogenerated by pip-compile with Python 3.12\n # by the following command:\n #\n #    pip-compile typing.in\n@@ -10,8 +10,6 @@ cffi==1.17.0\n     # via cryptography\n cryptography==43.0.0\n     # via -r typing.in\n-exceptiongroup==1.2.2\n-    # via pytest\n iniconfig==2.0.0\n     # via pytest\n mypy==1.11.1\n@@ -32,15 +30,9 @@ pytest==8.3.2\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n-tomli==2.0.1\n-    # via\n-    #   mypy\n-    #   pytest\n types-contextvars==2.4.7.3\n     # via -r typing.in\n types-dataclasses==0.6.6\n     # via -r typing.in\n typing-extensions==4.12.2\n-    # via\n-    #   asgiref\n-    #   mypy\n+    # via mypy\n'",0,0
tox.ini,tox.ini,c77b099cbb979269d45df06753cadd8abc662e23,40b78fa2ea9095197608287de9f0d902d2763b00,'remove min python for pip-compile',"'@@ -46,7 +46,6 @@ skip_install = true\n commands = pre-commit autoupdate -j4\n \n [testenv:update-requirements]\n-base_python = 3.8\n labels = update\n deps = pip-tools\n skip_install = true\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,f93dd6e826a9bf00bf9e08d9bb3a03abcb1e974c,7e5307030743b1f198da38c36f83fd279bad4529,'remove pre-commit.ci update',"'@@ -1,5 +1,3 @@\n-ci:\n-  autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n     rev: v0.6.2\n'",0,0
.github/workflows/pre-commit.yaml,.github/workflows/pre-commit.yaml,2fec0b206c6e83ea813ab26597e15c96fab08be7,111e5bd3129deee54ff62b0d13ed7e5739c27108,'set up pre-commit lite workflow\n\nCommitted via https://github.com/asottile/all-repos',"'@@ -1,3 +1,4 @@\n+name: pre-commit\n on:\n   pull_request:\n   push:\n'",0,0
CHANGES.rst,CHANGES.rst,e63ead4208c1e56723532878728ef9c2eb197b01,c77b099cbb979269d45df06753cadd8abc662e23,'Fix typo in the changelog',"'@@ -835,7 +835,7 @@ Released 2018-04-26\n     explicitly for each exception if you want to avoid traversing the\n     MRO. :pr:`2362`\n -   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`\n--   Template auto reloading will honor debug mode even even if\n+-   Template auto reloading will honor debug mode even if\n     ``Flask.jinja_env`` was already accessed. :pr:`2373`\n -   The following old deprecated code was removed. :issue:`2385`\n \n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -9,8 +9,8 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n+      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n+      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n         with:\n           python-version: \'3.x\'\n           cache: pip\n@@ -23,7 +23,7 @@ jobs:\n       - name: generate hash\n         id: hash\n         run: cd dist && echo ""hash=$(sha256sum * | base64 -w0)"" >> $GITHUB_OUTPUT\n-      - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6\n+      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3\n         with:\n           path: ./dist\n   provenance:\n@@ -64,10 +64,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n-      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n+      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # v1.9.0\n+      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3\n         with:\n           packages-dir: artifact/\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"""@@ -33,8 +33,8 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.8', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n+      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n+      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n         with:\n           python-version: ${{ matrix.python }}\n           allow-prereleases: true\n@@ -45,14 +45,14 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1\n+      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n+      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n         with:\n           python-version: '3.x'\n           cache: pip\n           cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n-        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n+        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ hashFiles('pyproject.toml') }}\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -2,12 +2,12 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.6.2\n+    rev: v0.7.0\n     hooks:\n       - id: ruff\n       - id: ruff-format\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.6.0\n+    rev: v5.0.0\n     hooks:\n       - id: check-merge-conflict\n       - id: debug-statements\n'",0,0
requirements/build.txt,requirements/build.txt,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -1,12 +1,12 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile build.in\n #\n-build==1.2.1\n+build==1.2.2.post1\n     # via -r build.in\n packaging==24.1\n     # via build\n-pyproject-hooks==1.1.0\n+pyproject-hooks==1.2.0\n     # via build\n'",0,0
requirements/dev.txt,requirements/dev.txt,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile dev.in\n@@ -18,11 +18,11 @@ babel==2.16.0\n     #   sphinx\n cachetools==5.5.0\n     # via tox\n-certifi==2024.7.4\n+certifi==2024.8.30\n     # via\n     #   -r docs.txt\n     #   requests\n-cffi==1.17.0\n+cffi==1.17.1\n     # via\n     #   -r typing.txt\n     #   cryptography\n@@ -30,28 +30,28 @@ cfgv==3.4.0\n     # via pre-commit\n chardet==5.2.0\n     # via tox\n-charset-normalizer==3.3.2\n+charset-normalizer==3.4.0\n     # via\n     #   -r docs.txt\n     #   requests\n colorama==0.4.6\n     # via tox\n-cryptography==43.0.0\n+cryptography==43.0.3\n     # via -r typing.txt\n-distlib==0.3.8\n+distlib==0.3.9\n     # via virtualenv\n docutils==0.21.2\n     # via\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n-filelock==3.15.4\n+filelock==3.16.1\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.6.0\n+identify==2.6.1\n     # via pre-commit\n-idna==3.8\n+idna==3.10\n     # via\n     #   -r docs.txt\n     #   requests\n@@ -68,11 +68,11 @@ jinja2==3.1.4\n     # via\n     #   -r docs.txt\n     #   sphinx\n-markupsafe==2.1.5\n+markupsafe==3.0.2\n     # via\n     #   -r docs.txt\n     #   jinja2\n-mypy==1.11.1\n+mypy==1.12.0\n     # via -r typing.txt\n mypy-extensions==1.0.0\n     # via\n@@ -93,9 +93,9 @@ packaging==24.1\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.1.3\n+pallets-sphinx-themes==2.2.0\n     # via -r docs.txt\n-platformdirs==4.2.2\n+platformdirs==4.3.6\n     # via\n     #   tox\n     #   virtualenv\n@@ -105,7 +105,7 @@ pluggy==1.5.0\n     #   -r typing.txt\n     #   pytest\n     #   tox\n-pre-commit==3.8.0\n+pre-commit==4.0.1\n     # via -r dev.in\n pycparser==2.22\n     # via\n@@ -116,11 +116,11 @@ pygments==2.18.0\n     #   -r docs.txt\n     #   sphinx\n     #   sphinx-tabs\n-pyproject-api==1.7.1\n+pyproject-api==1.8.0\n     # via tox\n-pyright==1.1.377\n+pyright==1.1.385\n     # via -r typing.txt\n-pytest==8.3.2\n+pytest==8.3.3\n     # via\n     #   -r tests.txt\n     #   -r typing.txt\n@@ -138,13 +138,18 @@ snowballstemmer==2.2.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-sphinx==8.0.2\n+sphinx==8.1.3\n     # via\n     #   -r docs.txt\n     #   pallets-sphinx-themes\n+    #   sphinx-notfound-page\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-tabs==3.4.5\n+sphinx-notfound-page==1.0.4\n+    # via\n+    #   -r docs.txt\n+    #   pallets-sphinx-themes\n+sphinx-tabs==3.4.7\n     # via -r docs.txt\n sphinxcontrib-applehelp==2.0.0\n     # via\n@@ -172,7 +177,7 @@ sphinxcontrib-serializinghtml==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tox==4.18.0\n+tox==4.23.0\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.txt\n@@ -182,11 +187,12 @@ typing-extensions==4.12.2\n     # via\n     #   -r typing.txt\n     #   mypy\n-urllib3==2.2.2\n+    #   pyright\n+urllib3==2.2.3\n     # via\n     #   -r docs.txt\n     #   requests\n-virtualenv==20.26.3\n+virtualenv==20.27.0\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/docs.txt,requirements/docs.txt,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile docs.in\n@@ -8,27 +8,27 @@ alabaster==1.0.0\n     # via sphinx\n babel==2.16.0\n     # via sphinx\n-certifi==2024.7.4\n+certifi==2024.8.30\n     # via requests\n-charset-normalizer==3.3.2\n+charset-normalizer==3.4.0\n     # via requests\n docutils==0.21.2\n     # via\n     #   sphinx\n     #   sphinx-tabs\n-idna==3.8\n+idna==3.10\n     # via requests\n imagesize==1.4.1\n     # via sphinx\n jinja2==3.1.4\n     # via sphinx\n-markupsafe==2.1.5\n+markupsafe==3.0.2\n     # via jinja2\n packaging==24.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.1.3\n+pallets-sphinx-themes==2.2.0\n     # via -r docs.in\n pygments==2.18.0\n     # via\n@@ -38,13 +38,16 @@ requests==2.32.3\n     # via sphinx\n snowballstemmer==2.2.0\n     # via sphinx\n-sphinx==8.0.2\n+sphinx==8.1.3\n     # via\n     #   -r docs.in\n     #   pallets-sphinx-themes\n+    #   sphinx-notfound-page\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n-sphinx-tabs==3.4.5\n+sphinx-notfound-page==1.0.4\n+    # via pallets-sphinx-themes\n+sphinx-tabs==3.4.7\n     # via -r docs.in\n sphinxcontrib-applehelp==2.0.0\n     # via sphinx\n@@ -60,5 +63,5 @@ sphinxcontrib-qthelp==2.0.0\n     # via sphinx\n sphinxcontrib-serializinghtml==2.0.0\n     # via sphinx\n-urllib3==2.2.2\n+urllib3==2.2.3\n     # via requests\n'",0,0
requirements/tests.txt,requirements/tests.txt,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile tests.in\n@@ -12,7 +12,7 @@ packaging==24.1\n     # via pytest\n pluggy==1.5.0\n     # via pytest\n-pytest==8.3.2\n+pytest==8.3.3\n     # via -r tests.in\n python-dotenv==1.0.1\n     # via -r tests.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -1,18 +1,18 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.12\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile typing.in\n #\n asgiref==3.8.1\n     # via -r typing.in\n-cffi==1.17.0\n+cffi==1.17.1\n     # via cryptography\n-cryptography==43.0.0\n+cryptography==43.0.3\n     # via -r typing.in\n iniconfig==2.0.0\n     # via pytest\n-mypy==1.11.1\n+mypy==1.12.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -24,9 +24,9 @@ pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.377\n+pyright==1.1.385\n     # via -r typing.in\n-pytest==8.3.2\n+pytest==8.3.3\n     # via -r typing.in\n python-dotenv==1.0.1\n     # via -r typing.in\n@@ -35,4 +35,6 @@ types-contextvars==2.4.7.3\n types-dataclasses==0.6.6\n     # via -r typing.in\n typing-extensions==4.12.2\n-    # via mypy\n+    # via\n+    #   mypy\n+    #   pyright\n'",0,0
src/flask/json/provider.py,src/flask/json/provider.py,b337d210583a3f5f84d0f70b56ae9a82b029dab5,c77b099cbb979269d45df06753cadd8abc662e23,'update dev dependencies',"'@@ -113,7 +113,7 @@ def _default(o: t.Any) -> t.Any:\n         return str(o)\n \n     if dataclasses and dataclasses.is_dataclass(o):\n-        return dataclasses.asdict(o)  # type: ignore[call-overload]\n+        return dataclasses.asdict(o)  # type: ignore[arg-type]\n \n     if hasattr(o, ""__html__""):\n         return str(o.__html__())\n'",2.272727272727273,2.272727272727273
CHANGES.rst,CHANGES.rst,c5a5576522273ff028018c4e13d1fc4d0260495b,bca18041b055102857a7e8a12f8694fddda9571b,'update CHANGES.rst',"'@@ -1,12 +1,15 @@\n Version 3.1.0\n -------------\n \n+Unreleased\n+\n -   Provide a configuration option to control automatic option\n     responses. :pr:`5496`\n -   ``Flask.open_resource``/``open_instance_resource`` and\n     ``Blueprint.open_resource`` take an ``encoding`` parameter to use when\n     opening in text mode. It defaults to ``utf-8``. :issue:`5504`\n \n+\n Version 3.0.3\n -------------\n \n'",0,0
src/flask/helpers.py,src/flask/helpers.py,dffe3034825edc4f84aded013fc9c6590e545ed5,c5a5576522273ff028018c4e13d1fc4d0260495b,'fix mypy findings',"'@@ -103,7 +103,7 @@ def stream_with_context(\n             gen = generator_or_function(*args, **kwargs)  # type: ignore[operator]\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]\n \n     def generator() -> t.Iterator[t.AnyStr | None]:\n         ctx = _cv_request.get(None)\n'",2.4705882352941178,2.4705882352941178
.github/workflows/tests.yaml,.github/workflows/tests.yaml,52ccd66735ba1f6e67d06e747d6a641980b788a3,b337d210583a3f5f84d0f70b56ae9a82b029dab5,'use python 3.9 to test dev versions',"""@@ -31,7 +31,7 @@ jobs:\n           - {python: '3.8'}\n           - {name: PyPy, python: 'pypy-3.10', tox: pypy310}\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n-          - {name: Development Versions, python: '3.8', tox: py-dev}\n+          - {name: Development Versions, python: '3.9', tox: py-dev}\n     steps:\n       - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n       - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n""",0,0
tox.ini,tox.ini,52ccd66735ba1f6e67d06e747d6a641980b788a3,b337d210583a3f5f84d0f70b56ae9a82b029dab5,'use python 3.9 to test dev versions',"'@@ -3,7 +3,7 @@ envlist =\n     py3{13,12,11,10,9,8}\n     pypy310\n     py312-min\n-    py38-dev\n+    py39-dev\n     style\n     typing\n     docs\n'",0,0
CHANGES.rst,CHANGES.rst,74721b48f0347f19f134f386fab3421e5132fb53,d273f87a41e72db8ef1387f469ffa1c6eed39730,'Fix the issue link in the Flask 3.0.1 Changelog in the send_file argument type entry',"""@@ -25,7 +25,7 @@ Version 3.0.1\n \n Released 2024-01-18\n \n--   Correct type for ``path`` argument to ``send_file``. :issue:`5230`\n+-   Correct type for ``path`` argument to ``send_file``. :issue:`5336`\n -   Fix a typo in an error message for the ``flask run --key`` option. :pr:`5344`\n -   Session data is untagged without relying on the built-in ``json.loads``\n     ``object_hook``. This allows other JSON providers that don't implement that.\n""",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"""@@ -9,8 +9,8 @@ jobs:\n     outputs:\n       hash: ${{ steps.hash.outputs.hash }}\n     steps:\n-      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n-      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n+      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0\n         with:\n           python-version: '3.x'\n           cache: pip\n""",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"""@@ -33,8 +33,8 @@ jobs:\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.9', tox: py-dev}\n     steps:\n-      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n-      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n+      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0\n         with:\n           python-version: ${{ matrix.python }}\n           allow-prereleases: true\n@@ -45,14 +45,14 @@ jobs:\n   typing:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n-      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n+      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0\n         with:\n           python-version: '3.x'\n           cache: pip\n           cache-dependency-path: requirements*/*.txt\n       - name: cache mypy\n-        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1\n+        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2\n         with:\n           path: ./.mypy_cache\n           key: mypy|${{ hashFiles('pyproject.toml') }}\n""",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"'@@ -2,7 +2,7 @@ ci:\n   autoupdate_schedule: monthly\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.7.0\n+    rev: v0.7.1\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
requirements/dev.txt,requirements/dev.txt,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"'@@ -72,7 +72,7 @@ markupsafe==3.0.2\n     # via\n     #   -r docs.txt\n     #   jinja2\n-mypy==1.12.0\n+mypy==1.13.0\n     # via -r typing.txt\n mypy-extensions==1.0.0\n     # via\n@@ -93,7 +93,7 @@ packaging==24.1\n     #   pytest\n     #   sphinx\n     #   tox\n-pallets-sphinx-themes==2.2.0\n+pallets-sphinx-themes==2.3.0\n     # via -r docs.txt\n platformdirs==4.3.6\n     # via\n@@ -118,7 +118,7 @@ pygments==2.18.0\n     #   sphinx-tabs\n pyproject-api==1.8.0\n     # via tox\n-pyright==1.1.385\n+pyright==1.1.386\n     # via -r typing.txt\n pytest==8.3.3\n     # via\n@@ -177,7 +177,7 @@ sphinxcontrib-serializinghtml==2.0.0\n     # via\n     #   -r docs.txt\n     #   sphinx\n-tox==4.23.0\n+tox==4.23.2\n     # via -r dev.in\n types-contextvars==2.4.7.3\n     # via -r typing.txt\n'",0,0
requirements/docs.txt,requirements/docs.txt,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"'@@ -28,7 +28,7 @@ packaging==24.1\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n-pallets-sphinx-themes==2.2.0\n+pallets-sphinx-themes==2.3.0\n     # via -r docs.in\n pygments==2.18.0\n     # via\n'",0,0
requirements/typing.txt,requirements/typing.txt,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,68150d4cafc796dba2b595c320a09222394bfc1a,'update dev dependencies',"'@@ -12,7 +12,7 @@ cryptography==43.0.3\n     # via -r typing.in\n iniconfig==2.0.0\n     # via pytest\n-mypy==1.12.0\n+mypy==1.13.0\n     # via -r typing.in\n mypy-extensions==1.0.0\n     # via mypy\n@@ -24,7 +24,7 @@ pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.385\n+pyright==1.1.386\n     # via -r typing.in\n pytest==8.3.3\n     # via -r typing.in\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,96800fb673cb7b2d75476096798e701e3e6d26bc,8f2bc008ad724a52f3669ecb2de59c98deb69ce1,'update test workflow trigger',"""@@ -1,18 +1,10 @@\n name: Tests\n on:\n   push:\n-    branches:\n-      - main\n-      - '*.x'\n-    paths-ignore:\n-      - 'docs/**'\n-      - '*.md'\n-      - '*.rst'\n+    branches: [main, stable]\n+    paths-ignore: ['docs/**', '*.md', '*.rst']\n   pull_request:\n-    paths-ignore:\n-      - 'docs/**'\n-      - '*.md'\n-      - '*.rst'\n+    paths-ignore: [ 'docs/**', '*.md', '*.rst' ]\n jobs:\n   tests:\n     name: ${{ matrix.name || matrix.python }}\n""",0,0
.github/workflows/pre-commit.yaml,.github/workflows/pre-commit.yaml,5e8cb740187c0561b36323dfc8510e58c3066838,2778b7c23f37d4f3cfed4cadac4bc9c90e098c50,'update test workflow trigger',"""@@ -2,7 +2,7 @@ name: pre-commit\n on:\n   pull_request:\n   push:\n-    branches: [main, '*.x']\n+    branches: [main, stable]\n jobs:\n   main:\n     runs-on: ubuntu-latest\n""",0,0
pyproject.toml,pyproject.toml,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -95,7 +95,7 @@ ignore_missing_imports = true\n \n [tool.pyright]\n pythonVersion = ""3.8""\n-include = [""src/flask"", ""tests""]\n+include = [""src/flask"", ""tests/typing""]\n typeCheckingMode = ""basic""\n \n [tool.ruff]\n'",0,0
src/flask/app.py,src/flask/app.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -59,6 +59,7 @@ if t.TYPE_CHECKING:  # pragma: no cover\n \n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n+    from .typing import HeadersValue\n \n T_shell_context_processor = t.TypeVar(\n     ""T_shell_context_processor"", bound=ft.ShellContextProcessorCallable\n@@ -349,7 +350,7 @@ class Flask(App):\n         path = os.path.join(self.root_path, resource)\n \n         if mode == ""rb"":\n-            return open(path, mode)\n+            return open(path, mode)  # pyright: ignore\n \n         return open(path, mode, encoding=encoding)\n \n@@ -1163,7 +1164,8 @@ class Flask(App):\n            response object.\n         """"""\n \n-        status = headers = None\n+        status: int | None = None\n+        headers: HeadersValue | None = None\n \n         # unpack tuple returns\n         if isinstance(rv, tuple):\n@@ -1175,7 +1177,7 @@ class Flask(App):\n             # decide if a 2-tuple has status or headers\n             elif len_rv == 2:\n                 if isinstance(rv[1], (Headers, dict, tuple, list)):\n-                    rv, headers = rv\n+                    rv, headers = rv  # pyright: ignore\n                 else:\n                     rv, status = rv  # type: ignore[assignment,misc]\n             # other sized tuples are not allowed\n'",4.228571428571429,4.228571428571429
src/flask/blueprints.py,src/flask/blueprints.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -123,6 +123,6 @@ class Blueprint(SansioBlueprint):\n         path = os.path.join(self.root_path, resource)\n \n         if mode == ""rb"":\n-            return open(path, mode)\n+            return open(path, mode)  # pyright: ignore\n \n         return open(path, mode, encoding=encoding)\n'",2.25,2.25
src/flask/cli.py,src/flask/cli.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -323,9 +323,9 @@ class ScriptInfo:\n         """"""\n         if self._loaded_app is not None:\n             return self._loaded_app\n-\n+        app: Flask | None = None\n         if self.create_app is not None:\n-            app: Flask | None = self.create_app()\n+            app = self.create_app()\n         else:\n             if self.app_import_path:\n                 path, name = (\n@@ -549,7 +549,7 @@ class FlaskGroup(AppGroup):\n         set_debug_flag: bool = True,\n         **extra: t.Any,\n     ) -> None:\n-        params = list(extra.pop(""params"", None) or ())\n+        params: list[click.Parameter] = list(extra.pop(""params"", None) or ())\n         # Processing is done with option callbacks instead of a group\n         # callback. This allows users to make a custom group callback\n         # without losing the behavior. --env-file must come first so\n@@ -587,7 +587,7 @@ class FlaskGroup(AppGroup):\n             # Use a backport on Python < 3.10. We technically have\n             # importlib.metadata on 3.8+, but the API changed in 3.10,\n             # so use the backport for consistency.\n-            import importlib_metadata as metadata\n+            import importlib_metadata as metadata  # pyright: ignore\n \n         for ep in metadata.entry_points(group=""flask.commands""):\n             self.add_command(ep.load(), ep.name)\n@@ -934,7 +934,7 @@ def run_command(\n     option.\n     """"""\n     try:\n-        app: WSGIApplication = info.load_app()\n+        app: WSGIApplication = info.load_app()  # pyright: ignore\n     except Exception as e:\n         if is_running_from_reloader():\n             # When reloading, print out the error immediately, but raise\n'",4.5588235294117645,4.5588235294117645
src/flask/helpers.py,src/flask/helpers.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -599,7 +599,7 @@ def get_root_path(import_name: str) -> str:\n         return os.getcwd()\n \n     if hasattr(loader, ""get_filename""):\n-        filepath = loader.get_filename(import_name)\n+        filepath = loader.get_filename(import_name)  # pyright: ignore\n     else:\n         # Fall back to imports.\n         __import__(import_name)\n'",2.4705882352941178,2.4705882352941178
src/flask/sansio/app.py,src/flask/sansio/app.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -628,7 +628,7 @@ class App(Scaffold):\n         methods = {item.upper() for item in methods}\n \n         # Methods that should always be added\n-        required_methods = set(getattr(view_func, ""required_methods"", ()))\n+        required_methods: set[str] = set(getattr(view_func, ""required_methods"", ()))\n \n         # starting with Flask 0.8 the view_func object can disable and\n         # force-enable the automatic options handling.\n'",2.323529411764706,2.323529411764706
src/flask/testing.py,src/flask/testing.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -79,8 +79,7 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n             path = url.path\n \n             if url.query:\n-                sep = b""?"" if isinstance(url.query, bytes) else ""?""\n-                path += sep + url.query\n+                path = f""{path}?{url.query}""\n \n         self.app = app\n         super().__init__(path, base_url, *args, **kwargs)\n'",3.0833333333333335,3.0
src/flask/views.py,src/flask/views.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -61,7 +61,7 @@ class View:\n     #: decorator.\n     #:\n     #: .. versionadded:: 0.8\n-    decorators: t.ClassVar[list[t.Callable[[F], F]]] = []\n+    decorators: t.ClassVar[list[t.Callable[..., t.Any]]] = []\n \n     #: Create a new instance of this view class for every request by\n     #: default. If a view subclass sets this to ``False``, the same\n@@ -110,7 +110,7 @@ class View:\n                 return current_app.ensure_sync(self.dispatch_request)(**kwargs)  # type: ignore[no-any-return]\n \n         else:\n-            self = cls(*class_args, **class_kwargs)\n+            self = cls(*class_args, **class_kwargs)  # pyright: ignore\n \n             def view(**kwargs: t.Any) -> ft.ResponseReturnValue:\n                 return current_app.ensure_sync(self.dispatch_request)(**kwargs)  # type: ignore[no-any-return]\n'",2.8333333333333335,2.8333333333333335
src/flask/wrappers.py,src/flask/wrappers.py,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -129,11 +129,11 @@ class Request(RequestBase):\n     def on_json_loading_failed(self, e: ValueError | None) -> t.Any:\n         try:\n             return super().on_json_loading_failed(e)\n-        except BadRequest as e:\n+        except BadRequest as ebr:\n             if current_app and current_app.debug:\n                 raise\n \n-            raise BadRequest() from e\n+            raise BadRequest() from ebr\n \n \n class Response(ResponseBase):\n'",2.857142857142857,2.857142857142857
tox.ini,tox.ini,9e831e915fa875423af0c0de8f53a3780055919e,5e8cb740187c0561b36323dfc8510e58c3066838,'fix pyright type errors',"'@@ -28,7 +28,9 @@ commands = pre-commit run --all-files\n \n [testenv:typing]\n deps = -r requirements/typing.txt\n-commands = mypy\n+commands =\n+    mypy\n+    pyright\n \n [testenv:docs]\n deps = -r requirements/docs.txt\n'",0,0
.github/workflows/tests.yaml,.github/workflows/tests.yaml,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"""@@ -20,7 +20,6 @@ jobs:\n           - {python: '3.11'}\n           - {python: '3.10'}\n           - {python: '3.9'}\n-          - {python: '3.8'}\n           - {name: PyPy, python: 'pypy-3.10', tox: pypy310}\n           - {name: Minimum Versions, python: '3.12', tox: py-min}\n           - {name: Development Versions, python: '3.9', tox: py-dev}\n""",0,0
CHANGES.rst,CHANGES.rst,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -3,6 +3,7 @@ Version 3.1.0\n \n Unreleased\n \n+-   Drop support for Python 3.8. :pr:`5623`\n -   Provide a configuration option to control automatic option\n     responses. :pr:`5496`\n -   ``Flask.open_resource``/``open_instance_resource`` and\n'",0,0
docs/async-await.rst,docs/async-await.rst,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -23,12 +23,6 @@ method in views that inherit from the :class:`flask.views.View` class, as\n well as all the HTTP method handlers in views that inherit from the\n :class:`flask.views.MethodView` class.\n \n-.. admonition:: Using ``async`` on Windows on Python 3.8\n-\n-    Python 3.8 has a bug related to asyncio on Windows. If you encounter\n-    something like ``ValueError: set_wakeup_fd only works in main thread``,\n-    please upgrade to Python 3.9.\n-\n .. admonition:: Using ``async`` with greenlet\n \n     When using gevent or eventlet to serve an application or patch the\n'",1.0,1.0
docs/extensiondev.rst,docs/extensiondev.rst,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -294,7 +294,8 @@ ecosystem remain consistent and compatible.\n     indicate minimum compatibility support. For example,\n     ``sqlalchemy>=1.4``.\n 9.  Indicate the versions of Python supported using ``python_requires="">=version""``.\n-    Flask itself supports Python >=3.8 as of April 2023, but this will update over time.\n+    Flask itself supports Python >=3.9 as of October 2024, and this will update\n+    over time.\n \n .. _PyPI: https://pypi.org/search/?c=Framework+%3A%3A+Flask\n .. _Discord Chat: https://discord.gg/pallets\n'",1.1428571428571428,1.1428571428571428
docs/installation.rst,docs/installation.rst,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -5,7 +5,7 @@ Installation\n Python Version\n --------------\n \n-We recommend using the latest version of Python. Flask supports Python 3.8 and newer.\n+We recommend using the latest version of Python. Flask supports Python 3.9 and newer.\n \n \n Dependencies\n'",0,0
pyproject.toml,pyproject.toml,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -19,7 +19,7 @@ classifiers = [\n     ""Topic :: Software Development :: Libraries :: Application Frameworks"",\n     ""Typing :: Typed"",\n ]\n-requires-python = "">=3.8""\n+requires-python = "">=3.9""\n dependencies = [\n     ""Werkzeug>=3.0.0"",\n     ""Jinja2>=3.1.2"",\n@@ -78,7 +78,7 @@ source = [""flask"", ""tests""]\n source = [""src"", ""*/site-packages""]\n \n [tool.mypy]\n-python_version = ""3.8""\n+python_version = ""3.9""\n files = [""src/flask"", ""tests/typing""]\n show_error_codes = true\n pretty = true\n@@ -94,7 +94,7 @@ module = [\n ignore_missing_imports = true\n \n [tool.pyright]\n-pythonVersion = ""3.8""\n+pythonVersion = ""3.9""\n include = [""src/flask"", ""tests/typing""]\n typeCheckingMode = ""basic""\n \n'",0,0
src/flask/app.py,src/flask/app.py,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -1245,7 +1245,7 @@ class Flask(App):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)  # type: ignore[arg-type]\n+            rv.headers.update(headers)\n \n         return rv\n \n'",4.228571428571429,4.228571428571429
src/flask/config.py,src/flask/config.py,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -150,13 +150,13 @@ class Config(dict):  # type: ignore[type-arg]\n         .. versionadded:: 2.1\n         """"""\n         prefix = f""{prefix}_""\n-        len_prefix = len(prefix)\n \n         for key in sorted(os.environ):\n             if not key.startswith(prefix):\n                 continue\n \n             value = os.environ[key]\n+            key = key.removeprefix(prefix)\n \n             try:\n                 value = loads(value)\n@@ -164,9 +164,6 @@ class Config(dict):  # type: ignore[type-arg]\n                 # Keep the value as a string if loading failed.\n                 pass\n \n-            # Change to key.removeprefix(prefix) on Python >= 3.9.\n-            key = key[len_prefix:]\n-\n             if ""__"" not in key:\n                 # A non-nested key, set directly.\n                 self[key] = value\n'",3.3333333333333335,3.3333333333333335
src/flask/helpers.py,src/flask/helpers.py,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -5,7 +5,7 @@ import os\n import sys\n import typing as t\n from datetime import datetime\n-from functools import lru_cache\n+from functools import cache\n from functools import update_wrapper\n \n import werkzeug.utils\n@@ -623,7 +623,7 @@ def get_root_path(import_name: str) -> str:\n     return os.path.dirname(os.path.abspath(filepath))  # type: ignore[no-any-return]\n \n \n-@lru_cache(maxsize=None)\n+@cache\n def _split_blueprint_path(name: str) -> list[str]:\n     out: list[str] = [name]\n \n'",2.4705882352941178,2.4705882352941178
src/flask/sansio/scaffold.py,src/flask/sansio/scaffold.py,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -706,15 +706,6 @@ def _endpoint_from_view_func(view_func: ft.RouteCallable) -> str:\n     return view_func.__name__\n \n \n-def _path_is_relative_to(path: pathlib.PurePath, base: str) -> bool:\n-    # Path.is_relative_to doesn\'t exist until Python 3.9\n-    try:\n-        path.relative_to(base)\n-        return True\n-    except ValueError:\n-        return False\n-\n-\n def _find_package_path(import_name: str) -> str:\n     """"""Find the path that contains the package or module.""""""\n     root_mod_name, _, _ = import_name.partition(""."")\n@@ -745,7 +736,7 @@ def _find_package_path(import_name: str) -> str:\n                 search_location = next(\n                     location\n                     for location in root_spec.submodule_search_locations\n-                    if _path_is_relative_to(package_path, location)\n+                    if package_path.is_relative_to(location)\n                 )\n             else:\n                 # Pick the first path.\n@@ -777,7 +768,7 @@ def find_package(import_name: str) -> tuple[str | None, str]:\n     py_prefix = os.path.abspath(sys.prefix)\n \n     # installed to the system\n-    if _path_is_relative_to(pathlib.PurePath(package_path), py_prefix):\n+    if pathlib.PurePath(package_path).is_relative_to(py_prefix):\n         return py_prefix, package_path\n \n     site_parent, site_folder = os.path.split(package_path)\n'",1.75,1.7428571428571429
src/flask/typing.py,src/flask/typing.py,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -12,7 +12,7 @@ ResponseValue = t.Union[\n     ""Response"",\n     str,\n     bytes,\n-    t.List[t.Any],\n+    list[t.Any],\n     # Only dict is actually accepted, but Mapping allows for TypedDict.\n     t.Mapping[str, t.Any],\n     t.Iterator[str],\n@@ -21,21 +21,21 @@ ResponseValue = t.Union[\n \n # the possible types for an individual HTTP header\n # This should be a Union, but mypy doesn\'t pass unless it\'s a TypeVar.\n-HeaderValue = t.Union[str, t.List[str], t.Tuple[str, ...]]\n+HeaderValue = t.Union[str, list[str], tuple[str, ...]]\n \n # the possible types for HTTP headers\n HeadersValue = t.Union[\n     ""Headers"",\n     t.Mapping[str, HeaderValue],\n-    t.Sequence[t.Tuple[str, HeaderValue]],\n+    t.Sequence[tuple[str, HeaderValue]],\n ]\n \n # The possible types returned by a route function.\n ResponseReturnValue = t.Union[\n     ResponseValue,\n-    t.Tuple[ResponseValue, HeadersValue],\n-    t.Tuple[ResponseValue, int],\n-    t.Tuple[ResponseValue, int, HeadersValue],\n+    tuple[ResponseValue, HeadersValue],\n+    tuple[ResponseValue, int],\n+    tuple[ResponseValue, int, HeadersValue],\n     ""WSGIApplication"",\n ]\n \n@@ -56,21 +56,21 @@ BeforeRequestCallable = t.Union[\n     t.Callable[[], t.Optional[ResponseReturnValue]],\n     t.Callable[[], t.Awaitable[t.Optional[ResponseReturnValue]]],\n ]\n-ShellContextProcessorCallable = t.Callable[[], t.Dict[str, t.Any]]\n+ShellContextProcessorCallable = t.Callable[[], dict[str, t.Any]]\n TeardownCallable = t.Union[\n     t.Callable[[t.Optional[BaseException]], None],\n     t.Callable[[t.Optional[BaseException]], t.Awaitable[None]],\n ]\n TemplateContextProcessorCallable = t.Union[\n-    t.Callable[[], t.Dict[str, t.Any]],\n-    t.Callable[[], t.Awaitable[t.Dict[str, t.Any]]],\n+    t.Callable[[], dict[str, t.Any]],\n+    t.Callable[[], t.Awaitable[dict[str, t.Any]]],\n ]\n TemplateFilterCallable = t.Callable[..., t.Any]\n TemplateGlobalCallable = t.Callable[..., t.Any]\n TemplateTestCallable = t.Callable[..., bool]\n-URLDefaultCallable = t.Callable[[str, t.Dict[str, t.Any]], None]\n+URLDefaultCallable = t.Callable[[str, dict[str, t.Any]], None]\n URLValuePreprocessorCallable = t.Callable[\n-    [t.Optional[str], t.Optional[t.Dict[str, t.Any]]], None\n+    [t.Optional[str], t.Optional[dict[str, t.Any]]], None\n ]\n \n # This should take Exception, but that either breaks typing the argument\n'",0,0
tox.ini,tox.ini,1d610e44b396d11113bb6a5d168cc5e996a6dfb9,e8b91cd38aadafdf733558bbcea4810fa65bb849,'drop support for Python 3.8',"'@@ -1,6 +1,6 @@\n [tox]\n envlist =\n-    py3{13,12,11,10,9,8}\n+    py3{13,12,11,10,9}\n     pypy310\n     py312-min\n     py39-dev\n'",0,0
.github/workflows/pre-commit.yaml,.github/workflows/pre-commit.yaml,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -7,10 +7,10 @@ jobs:\n   main:\n     runs-on: ubuntu-latest\n     steps:\n-    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n-    - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0\n+    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+    - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0\n       with:\n         python-version: 3.x\n     - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1\n-    - uses: pre-commit-ci/lite-action@9d882e7a565f7008d4faf128f27d1cb6503d4ebf # v1.0.2\n+    - uses: pre-commit-ci/lite-action@5d6cc0eb514c891a40562a58a8e71576c5c7fb43 # v1.1.0\n       if: ${{ !cancelled() }}\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -64,10 +64,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n-      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3\n+      - uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.11.0\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3\n+      - uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.11.0\n         with:\n           packages-dir: artifact/\n'",0,0
requirements/dev.txt,requirements/dev.txt,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -6,25 +6,25 @@\n #\n alabaster==1.0.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n asgiref==3.8.1\n     # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n babel==2.16.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n cachetools==5.5.0\n     # via tox\n certifi==2024.8.30\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   requests\n cffi==1.17.1\n     # via\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   cryptography\n cfgv==3.4.0\n     # via pre-commit\n@@ -32,17 +32,17 @@ chardet==5.2.0\n     # via tox\n charset-normalizer==3.4.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   requests\n colorama==0.4.6\n     # via tox\n cryptography==43.0.3\n-    # via -r typing.txt\n+    # via -r /Users/david/Projects/flask/requirements/typing.txt\n distlib==0.3.9\n     # via virtualenv\n docutils==0.21.2\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n     #   sphinx-tabs\n filelock==3.16.1\n@@ -53,146 +53,146 @@ identify==2.6.1\n     # via pre-commit\n idna==3.10\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   requests\n imagesize==1.4.1\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n iniconfig==2.0.0\n     # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   pytest\n jinja2==3.1.4\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n markupsafe==3.0.2\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   jinja2\n mypy==1.13.0\n-    # via -r typing.txt\n+    # via -r /Users/david/Projects/flask/requirements/typing.txt\n mypy-extensions==1.0.0\n     # via\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   mypy\n nodeenv==1.9.1\n     # via\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   pre-commit\n     #   pyright\n packaging==24.1\n     # via\n-    #   -r docs.txt\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   pallets-sphinx-themes\n     #   pyproject-api\n     #   pytest\n     #   sphinx\n     #   tox\n pallets-sphinx-themes==2.3.0\n-    # via -r docs.txt\n+    # via -r /Users/david/Projects/flask/requirements/docs.txt\n platformdirs==4.3.6\n     # via\n     #   tox\n     #   virtualenv\n pluggy==1.5.0\n     # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   pytest\n     #   tox\n pre-commit==4.0.1\n     # via -r dev.in\n pycparser==2.22\n     # via\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   cffi\n pygments==2.18.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n     #   sphinx-tabs\n pyproject-api==1.8.0\n     # via tox\n-pyright==1.1.386\n-    # via -r typing.txt\n+pyright==1.1.387\n+    # via -r /Users/david/Projects/flask/requirements/typing.txt\n pytest==8.3.3\n     # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n python-dotenv==1.0.1\n     # via\n-    #   -r tests.txt\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/tests.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n pyyaml==6.0.2\n     # via pre-commit\n requests==2.32.3\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n snowballstemmer==2.2.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinx==8.1.3\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   pallets-sphinx-themes\n     #   sphinx-notfound-page\n     #   sphinx-tabs\n     #   sphinxcontrib-log-cabinet\n sphinx-notfound-page==1.0.4\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   pallets-sphinx-themes\n sphinx-tabs==3.4.7\n-    # via -r docs.txt\n+    # via -r /Users/david/Projects/flask/requirements/docs.txt\n sphinxcontrib-applehelp==2.0.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinxcontrib-devhelp==2.0.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinxcontrib-htmlhelp==2.1.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinxcontrib-jsmath==1.0.1\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinxcontrib-log-cabinet==1.0.1\n-    # via -r docs.txt\n+    # via -r /Users/david/Projects/flask/requirements/docs.txt\n sphinxcontrib-qthelp==2.0.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n sphinxcontrib-serializinghtml==2.0.0\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   sphinx\n tox==4.23.2\n     # via -r dev.in\n types-contextvars==2.4.7.3\n-    # via -r typing.txt\n+    # via -r /Users/david/Projects/flask/requirements/typing.txt\n types-dataclasses==0.6.6\n-    # via -r typing.txt\n+    # via -r /Users/david/Projects/flask/requirements/typing.txt\n typing-extensions==4.12.2\n     # via\n-    #   -r typing.txt\n+    #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   mypy\n     #   pyright\n urllib3==2.2.3\n     # via\n-    #   -r docs.txt\n+    #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   requests\n-virtualenv==20.27.0\n+virtualenv==20.27.1\n     # via\n     #   pre-commit\n     #   tox\n'",0,0
requirements/tests-min.txt,requirements/tests-min.txt,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -1,5 +1,5 @@\n #\n-# This file is autogenerated by pip-compile with Python 3.11\n+# This file is autogenerated by pip-compile with Python 3.13\n # by the following command:\n #\n #    pip-compile tests-min.in\n'",0,0
requirements/typing.txt,requirements/typing.txt,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -24,7 +24,7 @@ pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.386\n+pyright==1.1.387\n     # via -r typing.in\n pytest==8.3.3\n     # via -r typing.in\n'",0,0
tox.ini,tox.ini,39e7208366bcf549fd7a2678a6d815dfe39196c5,227838c4727ba780e6fb4a7c372ae62357cac4c6,'update dev dependencies',"'@@ -57,5 +57,6 @@ commands =\n     pip-compile build.in -q {posargs:-U}\n     pip-compile docs.in -q {posargs:-U}\n     pip-compile tests.in -q {posargs:-U}\n+    pip-compile tests-min.in -q\n     pip-compile typing.in -q {posargs:-U}\n     pip-compile dev.in -q {posargs:-U}\n'",0,0
CHANGES.rst,CHANGES.rst,8f37c82f6144fffc2ed30e49ee81a54702a0f317,39e7208366bcf549fd7a2678a6d815dfe39196c5,'update min dependencies',"'@@ -4,6 +4,8 @@ Version 3.1.0\n Unreleased\n \n -   Drop support for Python 3.8. :pr:`5623`\n+-   Update minimum dependency versions to latest feature releases.\n+    Werkzeug >= 3.1, ItsDangerous >= 2.2, Blinker >= 1.8. :pr:`5624`\n -   Provide a configuration option to control automatic option\n     responses. :pr:`5496`\n -   ``Flask.open_resource``/``open_instance_resource`` and\n'",0,0
pyproject.toml,pyproject.toml,8f37c82f6144fffc2ed30e49ee81a54702a0f317,39e7208366bcf549fd7a2678a6d815dfe39196c5,'update min dependencies',"'@@ -21,12 +21,12 @@ classifiers = [\n ]\n requires-python = "">=3.9""\n dependencies = [\n-    ""Werkzeug>=3.0.0"",\n+    ""Werkzeug>=3.1"",\n     ""Jinja2>=3.1.2"",\n-    ""itsdangerous>=2.1.2"",\n+    ""itsdangerous>=2.2"",\n     ""click>=8.1.3"",\n-    ""blinker>=1.6.2"",\n-    ""importlib-metadata>=3.6.0; python_version < \'3.10\'"",\n+    ""blinker>=1.8"",\n+    ""importlib-metadata>=3.6; python_version < \'3.10\'"",\n ]\n \n [project.urls]\n'",0,0
requirements/tests-min.in,requirements/tests-min.in,8f37c82f6144fffc2ed30e49ee81a54702a0f317,39e7208366bcf549fd7a2678a6d815dfe39196c5,'update min dependencies',"'@@ -1,6 +1,6 @@\n-werkzeug==3.0.0\n+werkzeug==3.1.0\n jinja2==3.1.2\n markupsafe==2.1.1\n-itsdangerous==2.1.2\n+itsdangerous==2.2.0\n click==8.1.3\n-blinker==1.6.2\n+blinker==1.8.0\n'",0,0
requirements/tests-min.txt,requirements/tests-min.txt,8f37c82f6144fffc2ed30e49ee81a54702a0f317,39e7208366bcf549fd7a2678a6d815dfe39196c5,'update min dependencies',"'@@ -4,11 +4,11 @@\n #\n #    pip-compile tests-min.in\n #\n-blinker==1.6.2\n+blinker==1.8.0\n     # via -r tests-min.in\n click==8.1.3\n     # via -r tests-min.in\n-itsdangerous==2.1.2\n+itsdangerous==2.2.0\n     # via -r tests-min.in\n jinja2==3.1.2\n     # via -r tests-min.in\n@@ -17,5 +17,5 @@ markupsafe==2.1.1\n     #   -r tests-min.in\n     #   jinja2\n     #   werkzeug\n-werkzeug==3.0.0\n+werkzeug==3.1.0\n     # via -r tests-min.in\n'",0,0
tox.ini,tox.ini,8f37c82f6144fffc2ed30e49ee81a54702a0f317,39e7208366bcf549fd7a2678a6d815dfe39196c5,'update min dependencies',"'@@ -2,7 +2,7 @@\n envlist =\n     py3{13,12,11,10,9}\n     pypy310\n-    py312-min\n+    py313-min\n     py39-dev\n     style\n     typing\n'",0,0
CHANGES.rst,CHANGES.rst,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"'@@ -11,6 +11,10 @@ Unreleased\n -   ``Flask.open_resource``/``open_instance_resource`` and\n     ``Blueprint.open_resource`` take an ``encoding`` parameter to use when\n     opening in text mode. It defaults to ``utf-8``. :issue:`5504`\n+-   ``Request.max_content_length`` can be customized per-request instead of only\n+    through the ``MAX_CONTENT_LENGTH`` config. Added\n+    ``MAX_FORM_MEMORY_SIZE`` and ``MAX_FORM_PARTS`` config. Added documentation\n+    about resource limits to the security page. :issue:`5625`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"""@@ -259,12 +259,54 @@ The following configuration values are used internally by Flask:\n \n .. py:data:: MAX_CONTENT_LENGTH\n \n-    Don't read more than this many bytes from the incoming request data. If not\n-    set and the request does not specify a ``CONTENT_LENGTH``, no data will be\n-    read for security.\n+    The maximum number of bytes that will be read during this request. If\n+    this limit is exceeded, a 413 :exc:`~werkzeug.exceptions.RequestEntityTooLarge`\n+    error is raised. If it is set to ``None``, no limit is enforced at the\n+    Flask application level. However, if it is ``None`` and the request has no\n+    ``Content-Length`` header and the WSGI server does not indicate that it\n+    terminates the stream, then no data is read to avoid an infinite stream.\n+\n+    Each request defaults to this config. It can be set on a specific\n+    :attr:`.Request.max_content_length` to apply the limit to that specific\n+    view. This should be set appropriately based on an application's or view's\n+    specific needs.\n \n     Default: ``None``\n \n+    .. versionadded:: 0.6\n+\n+.. py:data:: MAX_FORM_MEMORY_SIZE\n+\n+    The maximum size in bytes any non-file form field may be in a\n+    ``multipart/form-data`` body. If this limit is exceeded, a 413\n+    :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it is\n+    set to ``None``, no limit is enforced at the Flask application level.\n+\n+    Each request defaults to this config. It can be set on a specific\n+    :attr:`.Request.max_form_memory_parts` to apply the limit to that specific\n+    view. This should be set appropriately based on an application's or view's\n+    specific needs.\n+\n+    Default: ``500_000``\n+\n+    .. versionadded:: 3.1\n+\n+.. py:data:: MAX_FORM_PARTS\n+\n+    The maximum number of fields that may be present in a\n+    ``multipart/form-data`` body. If this limit is exceeded, a 413\n+    :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it\n+    is set to ``None``, no limit is enforced at the Flask application level.\n+\n+    Each request defaults to this config. It can be set on a specific\n+    :attr:`.Request.max_form_parts` to apply the limit to that specific view.\n+    This should be set appropriately based on an application's or view's\n+    specific needs.\n+\n+    Default: ``1_000``\n+\n+    .. versionadded:: 3.1\n+\n .. py:data:: TEMPLATES_AUTO_RELOAD\n \n     Reload templates when they are changed. If not set, it will be enabled in\n""",1.0,1.0
docs/web-security.rst,docs/web-security.rst,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"'@@ -1,9 +1,43 @@\n Security Considerations\n =======================\n \n-Web applications usually face all kinds of security problems and it\'s very\n-hard to get everything right.  Flask tries to solve a few of these things\n-for you, but there are a couple more you have to take care of yourself.\n+Web applications face many types of potential security problems, and it can be\n+hard to get everything right, or even to know what ""right"" is in general. Flask\n+tries to solve a few of these things by default, but there are other parts you\n+may have to take care of yourself. Many of these solutions are tradeoffs, and\n+will depend on each application\'s specific needs and threat model. Many hosting\n+platforms may take care of certain types of problems without the need for the\n+Flask application to handle them.\n+\n+Resource Use\n+------------\n+\n+A common category of attacks is ""Denial of Service"" (DoS or DDoS). This is a\n+very broad category, and different variants target different layers in a\n+deployed application. In general, something is done to increase how much\n+processing time or memory is used to handle each request, to the point where\n+there are not enough resources to handle legitimate requests.\n+\n+Flask provides a few configuration options to handle resource use. They can\n+also be set on individual requests to customize only that request. The\n+documentation for each goes into more detail.\n+\n+-   :data:`MAX_CONTENT_LENGTH` or :attr:`.Request.max_content_length` controls\n+    how much data will be read from a request. It is not set by default,\n+    although it will still block truly unlimited streams unless the WSGI server\n+    indicates support.\n+-   :data:`MAX_FORM_MEMORY_SIZE` or :attr:`.Request.max_form_memory_size`\n+    controls how large any non-file ``multipart/form-data`` field can be. It is\n+    set to 500kB by default.\n+-   :data:`MAX_FORM_PARTS` or :attr:`.Request.max_form_parts` controls how many\n+    ``multipart/form-data`` fields can be parsed. It is set to 1000 by default.\n+    Combined with the default `max_form_memory_size`, this means that a form\n+    will occupy at most 500MB of memory.\n+\n+Regardless of these settings, you should also review what settings are available\n+from your operating system, container deployment (Docker etc), WSGI server, HTTP\n+server, and hosting platform. They typically have ways to set process resource\n+limits, timeouts, and other checks regardless of how Flask is configured.\n \n .. _security-xss:\n \n'",1.0,1.0
src/flask/app.py,src/flask/app.py,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"'@@ -192,6 +192,8 @@ class Flask(App):\n             ""SESSION_COOKIE_SAMESITE"": None,\n             ""SESSION_REFRESH_EACH_REQUEST"": True,\n             ""MAX_CONTENT_LENGTH"": None,\n+            ""MAX_FORM_MEMORY_SIZE"": 500_000,\n+            ""MAX_FORM_PARTS"": 1_000,\n             ""SEND_FILE_MAX_AGE_DEFAULT"": None,\n             ""TRAP_BAD_REQUEST_ERRORS"": None,\n             ""TRAP_HTTP_EXCEPTIONS"": False,\n'",4.228571428571429,4.228571428571429
src/flask/wrappers.py,src/flask/wrappers.py,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"'@@ -52,13 +52,96 @@ class Request(RequestBase):\n     #: something similar.\n     routing_exception: HTTPException | None = None\n \n+    _max_content_length: int | None = None\n+    _max_form_memory_size: int | None = None\n+    _max_form_parts: int | None = None\n+\n     @property\n-    def max_content_length(self) -> int | None:  # type: ignore[override]\n-        """"""Read-only view of the ``MAX_CONTENT_LENGTH`` config key.""""""\n-        if current_app:\n-            return current_app.config[""MAX_CONTENT_LENGTH""]  # type: ignore[no-any-return]\n-        else:\n-            return None\n+    def max_content_length(self) -> int | None:\n+        """"""The maximum number of bytes that will be read during this request. If\n+        this limit is exceeded, a 413 :exc:`~werkzeug.exceptions.RequestEntityTooLarge`\n+        error is raised. If it is set to ``None``, no limit is enforced at the\n+        Flask application level. However, if it is ``None`` and the request has\n+        no ``Content-Length`` header and the WSGI server does not indicate that\n+        it terminates the stream, then no data is read to avoid an infinite\n+        stream.\n+\n+        Each request defaults to the :data:`MAX_CONTENT_LENGTH` config, which\n+        defaults to ``None``. It can be set on a specific ``request`` to apply\n+        the limit to that specific view. This should be set appropriately based\n+        on an application\'s or view\'s specific needs.\n+\n+        .. versionchanged:: 3.1\n+            This can be set per-request.\n+\n+        .. versionchanged:: 0.6\n+            This is configurable through Flask config.\n+        """"""\n+        if self._max_content_length is not None:\n+            return self._max_content_length\n+\n+        if not current_app:\n+            return super().max_content_length\n+\n+        return current_app.config[""MAX_CONTENT_LENGTH""]  # type: ignore[no-any-return]\n+\n+    @max_content_length.setter\n+    def max_content_length(self, value: int | None) -> None:\n+        self._max_content_length = value\n+\n+    @property\n+    def max_form_memory_size(self) -> int | None:\n+        """"""The maximum size in bytes any non-file form field may be in a\n+        ``multipart/form-data`` body. If this limit is exceeded, a 413\n+        :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it\n+        is set to ``None``, no limit is enforced at the Flask application level.\n+\n+        Each request defaults to the :data:`MAX_FORM_MEMORY_SIZE` config, which\n+        defaults to ``500_000``. It can be set on a specific ``request`` to\n+        apply the limit to that specific view. This should be set appropriately\n+        based on an application\'s or view\'s specific needs.\n+\n+        .. versionchanged:: 3.1\n+            This is configurable through Flask config.\n+        """"""\n+        if self._max_form_memory_size is not None:\n+            return self._max_form_memory_size\n+\n+        if not current_app:\n+            return super().max_form_memory_size\n+\n+        return current_app.config[""MAX_FORM_MEMORY_SIZE""]  # type: ignore[no-any-return]\n+\n+    @max_form_memory_size.setter\n+    def max_form_memory_size(self, value: int | None) -> None:\n+        self._max_form_memory_size = value\n+\n+    @property  # type: ignore[override]\n+    def max_form_parts(self) -> int | None:\n+        """"""The maximum number of fields that may be present in a\n+        ``multipart/form-data`` body. If this limit is exceeded, a 413\n+        :exc:`~werkzeug.exceptions.RequestEntityTooLarge` error is raised. If it\n+        is set to ``None``, no limit is enforced at the Flask application level.\n+\n+        Each request defaults to the :data:`MAX_FORM_PARTS` config, which\n+        defaults to ``1_000``. It can be set on a specific ``request`` to apply\n+        the limit to that specific view. This should be set appropriately based\n+        on an application\'s or view\'s specific needs.\n+\n+        .. versionchanged:: 3.1\n+            This is configurable through Flask config.\n+        """"""\n+        if self._max_form_parts is not None:\n+            return self._max_form_parts\n+\n+        if not current_app:\n+            return super().max_form_parts\n+\n+        return current_app.config[""MAX_FORM_PARTS""]  # type: ignore[no-any-return]\n+\n+    @max_form_parts.setter\n+    def max_form_parts(self, value: int | None) -> None:\n+        self._max_form_parts = value\n \n     @property\n     def endpoint(self) -> str | None:\n'",2.857142857142857,2.5
tests/test_basic.py,tests/test_basic.py,c7a53888a1a514619b0611fd8b7928592f4ed612,62c56e08c43f5eb174d15dd050591cfba9aed548,'add config and docs for limits',"'@@ -1538,27 +1538,6 @@ def test_werkzeug_passthrough_errors(\n     app.run(debug=debug, use_debugger=use_debugger, use_reloader=use_reloader)\n \n \n-def test_max_content_length(app, client):\n-    app.config[""MAX_CONTENT_LENGTH""] = 64\n-\n-    @app.before_request\n-    def always_first():\n-        flask.request.form[""myfile""]\n-        AssertionError()\n-\n-    @app.route(""/accept"", methods=[""POST""])\n-    def accept_file():\n-        flask.request.form[""myfile""]\n-        AssertionError()\n-\n-    @app.errorhandler(413)\n-    def catcher(error):\n-        return ""42""\n-\n-    rv = client.post(""/accept"", data={""myfile"": ""foo"" * 100})\n-    assert rv.data == b""42""\n-\n-\n def test_url_processors(app, client):\n     @app.url_defaults\n     def add_language_code(endpoint, values):\n'",1.0857142857142856,1.0871369294605808
CHANGES.rst,CHANGES.rst,9efc1ebeeb431769897798cdf8de2c67dcbbc9c0,6f2014d353d514e404c1f40e8f0a24e2bf62b941,'add SESSION_COOKIE_PARTITIONED config\n\nco-authored-by: Jose Cespedes <josecespedes@ibm.com>',"'@@ -15,6 +15,8 @@ Unreleased\n     through the ``MAX_CONTENT_LENGTH`` config. Added\n     ``MAX_FORM_MEMORY_SIZE`` and ``MAX_FORM_PARTS`` config. Added documentation\n     about resource limits to the security page. :issue:`5625`\n+-   Add support for the ``Partitioned`` cookie attribute (CHIPS), with the\n+    ``SESSION_COOKIE_PARTITIONED`` config. :issue`5472`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,9efc1ebeeb431769897798cdf8de2c67dcbbc9c0,6f2014d353d514e404c1f40e8f0a24e2bf62b941,'add SESSION_COOKIE_PARTITIONED config\n\nco-authored-by: Jose Cespedes <josecespedes@ibm.com>',"'@@ -173,6 +173,23 @@ The following configuration values are used internally by Flask:\n \n     Default: ``False``\n \n+.. py:data:: SESSION_COOKIE_PARTITIONED\n+\n+    Browsers will send cookies based on the top-level document\'s domain, rather\n+    than only the domain of the document setting the cookie. This prevents third\n+    party cookies set in iframes from ""leaking"" between separate sites.\n+\n+    Browsers are beginning to disallow non-partitioned third party cookies, so\n+    you need to mark your cookies partitioned if you expect them to work in such\n+    embedded situations.\n+\n+    Enabling this implicitly enables :data:`SESSION_COOKIE_SECURE` as well, as\n+    it is only valid when served over HTTPS.\n+\n+    Default: ``False``\n+\n+    .. versionadded:: 3.1\n+\n .. py:data:: SESSION_COOKIE_SAMESITE\n \n     Restrict how cookies are sent with requests from external sites. Can\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,9efc1ebeeb431769897798cdf8de2c67dcbbc9c0,6f2014d353d514e404c1f40e8f0a24e2bf62b941,'add SESSION_COOKIE_PARTITIONED config\n\nco-authored-by: Jose Cespedes <josecespedes@ibm.com>',"'@@ -189,6 +189,7 @@ class Flask(App):\n             ""SESSION_COOKIE_PATH"": None,\n             ""SESSION_COOKIE_HTTPONLY"": True,\n             ""SESSION_COOKIE_SECURE"": False,\n+            ""SESSION_COOKIE_PARTITIONED"": False,\n             ""SESSION_COOKIE_SAMESITE"": None,\n             ""SESSION_REFRESH_EACH_REQUEST"": True,\n             ""MAX_CONTENT_LENGTH"": None,\n'",4.228571428571429,4.228571428571429
src/flask/sessions.py,src/flask/sessions.py,9efc1ebeeb431769897798cdf8de2c67dcbbc9c0,6f2014d353d514e404c1f40e8f0a24e2bf62b941,'add SESSION_COOKIE_PARTITIONED config\n\nco-authored-by: Jose Cespedes <josecespedes@ibm.com>',"'@@ -224,6 +224,14 @@ class SessionInterface:\n         """"""\n         return app.config[""SESSION_COOKIE_SAMESITE""]  # type: ignore[no-any-return]\n \n+    def get_cookie_partitioned(self, app: Flask) -> bool:\n+        """"""Returns True if the cookie should be partitioned. By default, uses\n+        the value of :data:`SESSION_COOKIE_PARTITIONED`.\n+\n+        .. versionadded:: 3.1\n+        """"""\n+        return app.config[""SESSION_COOKIE_PARTITIONED""]  # type: ignore[no-any-return]\n+\n     def get_expiration_time(self, app: Flask, session: SessionMixin) -> datetime | None:\n         """"""A helper method that returns an expiration date for the session\n         or ``None`` if the session is linked to the browser session.  The\n@@ -338,6 +346,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         domain = self.get_cookie_domain(app)\n         path = self.get_cookie_path(app)\n         secure = self.get_cookie_secure(app)\n+        partitioned = self.get_cookie_partitioned(app)\n         samesite = self.get_cookie_samesite(app)\n         httponly = self.get_cookie_httponly(app)\n \n@@ -354,6 +363,7 @@ class SecureCookieSessionInterface(SessionInterface):\n                     domain=domain,\n                     path=path,\n                     secure=secure,\n+                    partitioned=partitioned,\n                     samesite=samesite,\n                     httponly=httponly,\n                 )\n@@ -374,6 +384,7 @@ class SecureCookieSessionInterface(SessionInterface):\n             domain=domain,\n             path=path,\n             secure=secure,\n+            partitioned=partitioned,\n             samesite=samesite,\n         )\n         response.vary.add(""Cookie"")\n'",1.5,1.48
tests/test_basic.py,tests/test_basic.py,9efc1ebeeb431769897798cdf8de2c67dcbbc9c0,6f2014d353d514e404c1f40e8f0a24e2bf62b941,'add SESSION_COOKIE_PARTITIONED config\n\nco-authored-by: Jose Cespedes <josecespedes@ibm.com>',"'@@ -293,6 +293,7 @@ def test_session_using_session_settings(app, client):\n         SESSION_COOKIE_DOMAIN="".example.com"",\n         SESSION_COOKIE_HTTPONLY=False,\n         SESSION_COOKIE_SECURE=True,\n+        SESSION_COOKIE_PARTITIONED=True,\n         SESSION_COOKIE_SAMESITE=""Lax"",\n         SESSION_COOKIE_PATH=""/"",\n     )\n@@ -315,6 +316,7 @@ def test_session_using_session_settings(app, client):\n     assert ""secure"" in cookie\n     assert ""httponly"" not in cookie\n     assert ""samesite"" in cookie\n+    assert ""partitioned"" in cookie\n \n     rv = client.get(""/clear"", ""http://www.example.com:8080/test/"")\n     cookie = rv.headers[""set-cookie""].lower()\n@@ -324,6 +326,7 @@ def test_session_using_session_settings(app, client):\n     assert ""path=/"" in cookie\n     assert ""secure"" in cookie\n     assert ""samesite"" in cookie\n+    assert ""partitioned"" in cookie\n \n \n def test_session_using_samesite_attribute(app, client):\n'",1.0871369294605808,1.0871369294605808
examples/javascript/tests/test_js_example.py,examples/javascript/tests/test_js_example.py,df201ed152b61c439ea1ace179f35b424594ba6c,96800fb673cb7b2d75476096798e701e3e6d26bc,'fix js example test',"'@@ -5,7 +5,7 @@ from flask import template_rendered\n @pytest.mark.parametrize(\n     (""path"", ""template_name""),\n     (\n-        (""/"", ""xhr.html""),\n+        (""/"", ""fetch.html""),\n         (""/plain"", ""xhr.html""),\n         (""/fetch"", ""fetch.html""),\n         (""/jquery"", ""jquery.html""),\n'",1.0,1.0
docs/tutorial/database.rst,docs/tutorial/database.rst,8aa161a43731795841fa2678d3dff0559cee527e,df201ed152b61c439ea1ace179f35b424594ba6c,'add sqlite datetime converter',"'@@ -37,6 +37,7 @@ response is sent.\n     :caption: ``flaskr/db.py``\n \n     import sqlite3\n+    from datetime import datetime\n \n     import click\n     from flask import current_app, g\n@@ -132,6 +133,11 @@ Add the Python functions that will run these SQL commands to the\n         init_db()\n         click.echo(\'Initialized the database.\')\n \n+\n+    sqlite3.register_converter(\n+        ""timestamp"", lambda v: datetime.fromisoformat(v.decode())\n+    )\n+\n :meth:`open_resource() <Flask.open_resource>` opens a file relative to\n the ``flaskr`` package, which is useful since you won\'t necessarily know\n where that location is when deploying the application later. ``get_db``\n@@ -142,6 +148,10 @@ read from the file.\n that calls the ``init_db`` function and shows a success message to the\n user. You can read :doc:`/cli` to learn more about writing commands.\n \n+The call to :func:`sqlite3.register_converter` tells Python how to\n+interpret timestamp values in the database. We convert the value to a\n+:class:`datetime.datetime`.\n+\n \n Register with the Application\n -----------------------------\n'",0,0
examples/tutorial/flaskr/db.py,examples/tutorial/flaskr/db.py,8aa161a43731795841fa2678d3dff0559cee527e,df201ed152b61c439ea1ace179f35b424594ba6c,'add sqlite datetime converter',"'@@ -1,4 +1,5 @@\n import sqlite3\n+from datetime import datetime\n \n import click\n from flask import current_app\n@@ -44,6 +45,9 @@ def init_db_command():\n     click.echo(""Initialized the database."")\n \n \n+sqlite3.register_converter(""timestamp"", lambda v: datetime.fromisoformat(v.decode()))\n+\n+\n def init_app(app):\n     """"""Register database functions with the Flask app. This is called by\n     the application factory.\n'",1.4,1.4
examples/celery/pyproject.toml,examples/celery/pyproject.toml,a9b99b3489cc24b5bed99fbadbd91f598a5a1420,8aa161a43731795841fa2678d3dff0559cee527e,'update example project metadata',"'@@ -3,8 +3,8 @@ name = ""flask-example-celery""\n version = ""1.0.0""\n description = ""Example Flask application with Celery background tasks.""\n readme = ""README.md""\n-requires-python = "">=3.8""\n-dependencies = [""flask>=2.2.2"", ""celery[redis]>=5.2.7""]\n+classifiers = [""Private :: Do Not Upload""]\n+dependencies = [""flask"", ""celery[redis]""]\n \n [build-system]\n requires = [""flit_core<4""]\n'",0,0
src/flask/app.py,src/flask/app.py,98ae71897600a3162f529b1b30c70b8abdf0961b,c62b03bcfd6e6440f8195e02f4678488e16121ac,'fix mypy finding',"'@@ -1226,7 +1226,7 @@ class Flask(App):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)  # type: ignore[arg-type]\n+            rv.headers.update(headers)\n \n         return rv\n \n'",4.171428571428572,4.171428571428572
src/flask/helpers.py,src/flask/helpers.py,6c44dd4bb8e4f2ca5f135f172de4725b2cada155,98ae71897600a3162f529b1b30c70b8abdf0961b,'update helpers.send_from_directory docstring (#5599)\n\nUpdate helpers.send_from_directory docstring to match werkzeug.utils.send_from_directory docstring on the :param directory: line.',"""@@ -547,7 +547,8 @@ def send_from_directory(\n     raises a 404 :exc:`~werkzeug.exceptions.NotFound` error.\n \n     :param directory: The directory that ``path`` must be located under,\n-        relative to the current application's root path.\n+        relative to the current application's root path. This *must not*\n+        be a value provided by the client, otherwise it becomes insecure.\n     :param path: The path to the file to send, relative to\n         ``directory``.\n     :param kwargs: Arguments to pass to :func:`send_file`.\n""",2.4705882352941178,2.4705882352941178
CHANGES.rst,CHANGES.rst,2c3160304278d323da8485057770926d1b582579,ce08bc704e24c01582052f5c544fae181d08386f,'update env file precedence',"'@@ -17,6 +17,9 @@ Unreleased\n     about resource limits to the security page. :issue:`5625`\n -   Add support for the ``Partitioned`` cookie attribute (CHIPS), with the\n     ``SESSION_COOKIE_PARTITIONED`` config. :issue`5472`\n+-   ``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files.\n+    ``load_dotenv`` loads default files in addition to a path unless\n+    ``load_defaults=False`` is passed. :issue:`5628`\n \n \n Version 3.0.3\n'",0,0
src/flask/cli.py,src/flask/cli.py,2c3160304278d323da8485057770926d1b582579,ce08bc704e24c01582052f5c544fae181d08386f,'update env file precedence',"'@@ -297,6 +297,9 @@ class ScriptInfo:\n     a bigger role.  Typically it\'s created automatically by the\n     :class:`FlaskGroup` but you can also manually create it and pass it\n     onwards as click object.\n+\n+    .. versionchanged:: 3.1\n+        Added the ``load_dotenv_defaults`` parameter and attribute.\n     """"""\n \n     def __init__(\n@@ -304,6 +307,7 @@ class ScriptInfo:\n         app_import_path: str | None = None,\n         create_app: t.Callable[..., Flask] | None = None,\n         set_debug_flag: bool = True,\n+        load_dotenv_defaults: bool = True,\n     ) -> None:\n         #: Optionally the import path for the Flask application.\n         self.app_import_path = app_import_path\n@@ -314,6 +318,16 @@ class ScriptInfo:\n         #: this script info.\n         self.data: dict[t.Any, t.Any] = {}\n         self.set_debug_flag = set_debug_flag\n+\n+        self.load_dotenv_defaults = get_load_dotenv(load_dotenv_defaults)\n+        """"""Whether default ``.flaskenv`` and ``.env`` files should be loaded.\n+\n+        ``ScriptInfo`` doesn\'t load anything, this is for reference when doing\n+        the load elsewhere during processing.\n+\n+        .. versionadded:: 3.1\n+        """"""\n+\n         self._loaded_app: Flask | None = None\n \n     def load_app(self) -> Flask:\n@@ -479,23 +493,22 @@ _debug_option = click.Option(\n def _env_file_callback(\n     ctx: click.Context, param: click.Option, value: str | None\n ) -> str | None:\n-    if value is None:\n-        return None\n-\n-    import importlib\n-\n     try:\n-        importlib.import_module(""dotenv"")\n+        import dotenv  # noqa: F401\n     except ImportError:\n-        raise click.BadParameter(\n-            ""python-dotenv must be installed to load an env file."",\n-            ctx=ctx,\n-            param=param,\n-        ) from None\n+        # Only show an error if a value was passed, otherwise we still want to\n+        # call load_dotenv and show a message without exiting.\n+        if value is not None:\n+            raise click.BadParameter(\n+                ""python-dotenv must be installed to load an env file."",\n+                ctx=ctx,\n+                param=param,\n+            ) from None\n+\n+    # Load if a value was passed, or we want to load default files, or both.\n+    if value is not None or ctx.obj.load_dotenv_defaults:\n+        load_dotenv(value, load_defaults=ctx.obj.load_dotenv_defaults)\n \n-    # Don\'t check FLASK_SKIP_DOTENV, that only disables automatically\n-    # loading .env and .flaskenv files.\n-    load_dotenv(value)\n     return value\n \n \n@@ -504,7 +517,11 @@ def _env_file_callback(\n _env_file_option = click.Option(\n     [""-e"", ""--env-file""],\n     type=click.Path(exists=True, dir_okay=False),\n-    help=""Load environment variables from this file. python-dotenv must be installed."",\n+    help=(\n+        ""Load environment variables from this file, taking precedence over""\n+        "" those set by \'.env\' and \'.flaskenv\'. Variables set directly in the""\n+        "" environment take highest precedence. python-dotenv must be installed.""\n+    ),\n     is_eager=True,\n     expose_value=False,\n     callback=_env_file_callback,\n@@ -528,6 +545,9 @@ class FlaskGroup(AppGroup):\n         directory to the directory containing the first file found.\n     :param set_debug_flag: Set the app\'s debug flag.\n \n+    .. versionchanged:: 3.1\n+        ``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files.\n+\n     .. versionchanged:: 2.2\n         Added the ``-A/--app``, ``--debug/--no-debug``, ``-e/--env-file`` options.\n \n@@ -654,14 +674,11 @@ class FlaskGroup(AppGroup):\n         # when importing, blocking whatever command is being called.\n         os.environ[""FLASK_RUN_FROM_CLI""] = ""true""\n \n-        # Attempt to load .env and .flask env files. The --env-file\n-        # option can cause another file to be loaded.\n-        if get_load_dotenv(self.load_dotenv):\n-            load_dotenv()\n-\n         if ""obj"" not in extra and ""obj"" not in self.context_settings:\n             extra[""obj""] = ScriptInfo(\n-                create_app=self.create_app, set_debug_flag=self.set_debug_flag\n+                create_app=self.create_app,\n+                set_debug_flag=self.set_debug_flag,\n+                load_dotenv_defaults=self.load_dotenv,\n             )\n \n         return super().make_context(info_name, args, parent=parent, **extra)\n@@ -684,18 +701,26 @@ def _path_is_ancestor(path: str, other: str) -> bool:\n     return os.path.join(path, other[len(path) :].lstrip(os.sep)) == other\n \n \n-def load_dotenv(path: str | os.PathLike[str] | None = None) -> bool:\n-    """"""Load ""dotenv"" files in order of precedence to set environment variables.\n-\n-    If an env var is already set it is not overwritten, so earlier files in the\n-    list are preferred over later files.\n+def load_dotenv(\n+    path: str | os.PathLike[str] | None = None, load_defaults: bool = True\n+) -> bool:\n+    """"""Load ""dotenv"" files to set environment variables. A given path takes\n+    precedence over ``.env``, which takes precedence over ``.flaskenv``. After\n+    loading and combining these files, values are only set if the key is not\n+    already set in ``os.environ``.\n \n     This is a no-op if `python-dotenv`_ is not installed.\n \n     .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme\n \n-    :param path: Load the file at this location instead of searching.\n-    :return: ``True`` if a file was loaded.\n+    :param path: Load the file at this location.\n+    :param load_defaults: Search for and load the default ``.flaskenv`` and\n+        ``.env`` files.\n+    :return: ``True`` if at least one env var was loaded.\n+\n+    .. versionchanged:: 3.1\n+        Added the ``load_defaults`` parameter. A given path takes precedence\n+        over default files.\n \n     .. versionchanged:: 2.0\n         The current directory is not changed to the location of the\n@@ -715,34 +740,33 @@ def load_dotenv(path: str | os.PathLike[str] | None = None) -> bool:\n     except ImportError:\n         if path or os.path.isfile("".env"") or os.path.isfile("".flaskenv""):\n             click.secho(\n-                "" * Tip: There are .env or .flaskenv files present.""\n-                \' Do ""pip install python-dotenv"" to use them.\',\n+                "" * Tip: There are .env files present. Install python-dotenv""\n+                "" to use them."",\n                 fg=""yellow"",\n                 err=True,\n             )\n \n         return False\n \n-    # Always return after attempting to load a given path, don\'t load\n-    # the default files.\n-    if path is not None:\n-        if os.path.isfile(path):\n-            return dotenv.load_dotenv(path, encoding=""utf-8"")\n+    data: dict[str, str | None] = {}\n \n-        return False\n+    if load_defaults:\n+        for default_name in ("".flaskenv"", "".env""):\n+            if not (default_path := dotenv.find_dotenv(default_name, usecwd=True)):\n+                continue\n \n-    loaded = False\n+            data |= dotenv.dotenv_values(default_path, encoding=""utf-8"")\n \n-    for name in ("".env"", "".flaskenv""):\n-        path = dotenv.find_dotenv(name, usecwd=True)\n+    if path is not None and os.path.isfile(path):\n+        data |= dotenv.dotenv_values(path, encoding=""utf-8"")\n \n-        if not path:\n+    for key, value in data.items():\n+        if key in os.environ or value is None:\n             continue\n \n-        dotenv.load_dotenv(path, encoding=""utf-8"")\n-        loaded = True\n+        os.environ[key] = value\n \n-    return loaded  # True if at least one file was located and loaded.\n+    return bool(data)  # True if at least one env var was loaded.\n \n \n def show_server_banner(debug: bool, app_import_path: str | None) -> None:\n'",4.5588235294117645,4.705882352941177
tests/test_cli.py,tests/test_cli.py,2c3160304278d323da8485057770926d1b582579,ce08bc704e24c01582052f5c544fae181d08386f,'update env file precedence',"'@@ -398,7 +398,12 @@ def test_flaskgroup_nested(app, runner):\n def test_no_command_echo_loading_error():\n     from flask.cli import cli\n \n-    runner = CliRunner(mix_stderr=False)\n+    try:\n+        runner = CliRunner(mix_stderr=False)\n+    except (DeprecationWarning, TypeError):\n+        # Click >= 8.2\n+        runner = CliRunner()\n+\n     result = runner.invoke(cli, [""missing""])\n     assert result.exit_code == 2\n     assert ""FLASK_APP"" in result.stderr\n@@ -408,7 +413,12 @@ def test_no_command_echo_loading_error():\n def test_help_echo_loading_error():\n     from flask.cli import cli\n \n-    runner = CliRunner(mix_stderr=False)\n+    try:\n+        runner = CliRunner(mix_stderr=False)\n+    except (DeprecationWarning, TypeError):\n+        # Click >= 8.2\n+        runner = CliRunner()\n+\n     result = runner.invoke(cli, [""--help""])\n     assert result.exit_code == 0\n     assert ""FLASK_APP"" in result.stderr\n@@ -420,7 +430,13 @@ def test_help_echo_exception():\n         raise Exception(""oh no"")\n \n     cli = FlaskGroup(create_app=create_app)\n-    runner = CliRunner(mix_stderr=False)\n+\n+    try:\n+        runner = CliRunner(mix_stderr=False)\n+    except (DeprecationWarning, TypeError):\n+        # Click >= 8.2\n+        runner = CliRunner()\n+\n     result = runner.invoke(cli, [""--help""])\n     assert result.exit_code == 0\n     assert ""Exception: oh no"" in result.stderr\n@@ -537,7 +553,7 @@ def test_load_dotenv(monkeypatch):\n     # test env file encoding\n     assert os.environ[""HAM""] == ""火腿""\n     # Non existent file should not load\n-    assert not load_dotenv(""non-existent-file"")\n+    assert not load_dotenv(""non-existent-file"", load_defaults=False)\n \n \n @need_dotenv\n'",1.0735294117647058,1.1176470588235294
CHANGES.rst,CHANGES.rst,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"'@@ -20,6 +20,9 @@ Unreleased\n -   ``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files.\n     ``load_dotenv`` loads default files in addition to a path unless\n     ``load_defaults=False`` is passed. :issue:`5628`\n+-   Support key rotation with the ``SECRET_KEY_FALLBACKS`` config, a list of old\n+    secret keys that can still be used for unsigning. Extensions will need to\n+    add support. :issue:`5621`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"""@@ -125,6 +125,22 @@ The following configuration values are used internally by Flask:\n \n     Default: ``None``\n \n+.. py:data:: SECRET_KEY_FALLBACKS\n+\n+    A list of old secret keys that can still be used for unsigning, most recent\n+    first. This allows a project to implement key rotation without invalidating\n+    active sessions or other recently-signed secrets.\n+\n+    Keys should be removed after an appropriate period of time, as checking each\n+    additional key adds some overhead.\n+\n+    Flask's built-in secure cookie session supports this. Extensions that use\n+    :data:`SECRET_KEY` may not support this yet.\n+\n+    Default: ``None``\n+\n+    .. versionadded:: 3.1\n+\n .. py:data:: SESSION_COOKIE_NAME\n \n     The name of the session cookie. Can be changed in case you already have a\n""",1.0,1.0
pyproject.toml,pyproject.toml,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"'@@ -79,7 +79,7 @@ source = [""src"", ""*/site-packages""]\n \n [tool.mypy]\n python_version = ""3.9""\n-files = [""src/flask"", ""tests/typing""]\n+files = [""src/flask"", ""tests/type_check""]\n show_error_codes = true\n pretty = true\n strict = true\n@@ -95,7 +95,7 @@ ignore_missing_imports = true\n \n [tool.pyright]\n pythonVersion = ""3.9""\n-include = [""src/flask"", ""tests/typing""]\n+include = [""src/flask"", ""tests/type_check""]\n typeCheckingMode = ""basic""\n \n [tool.ruff]\n'",0,0
src/flask/app.py,src/flask/app.py,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"'@@ -180,6 +180,7 @@ class Flask(App):\n             ""TESTING"": False,\n             ""PROPAGATE_EXCEPTIONS"": None,\n             ""SECRET_KEY"": None,\n+            ""SECRET_KEY_FALLBACKS"": None,\n             ""PERMANENT_SESSION_LIFETIME"": timedelta(days=31),\n             ""USE_X_SENDFILE"": False,\n             ""SERVER_NAME"": None,\n'",4.228571428571429,4.228571428571429
src/flask/sessions.py,src/flask/sessions.py,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"'@@ -315,14 +315,20 @@ class SecureCookieSessionInterface(SessionInterface):\n     def get_signing_serializer(self, app: Flask) -> URLSafeTimedSerializer | None:\n         if not app.secret_key:\n             return None\n-        signer_kwargs = dict(\n-            key_derivation=self.key_derivation, digest_method=self.digest_method\n-        )\n+\n+        keys: list[str | bytes] = [app.secret_key]\n+\n+        if fallbacks := app.config[""SECRET_KEY_FALLBACKS""]:\n+            keys.extend(fallbacks)\n+\n         return URLSafeTimedSerializer(\n-            app.secret_key,\n+            keys,  # type: ignore[arg-type]\n             salt=self.salt,\n             serializer=self.serializer,\n-            signer_kwargs=signer_kwargs,\n+            signer_kwargs={\n+                ""key_derivation"": self.key_derivation,\n+                ""digest_method"": self.digest_method,\n+            },\n         )\n \n     def open_session(self, app: Flask, request: Request) -> SecureCookieSession | None:\n'",1.48,1.52
tests/test_basic.py,tests/test_basic.py,e13373f838ab34027c5a80e16a6cb8262d41eab7,7522c4bcdb10449dc919e0ffbdebb92fe66822b5,'enable secret key rotation',"'@@ -1,5 +1,6 @@\n import gc\n import re\n+import typing as t\n import uuid\n import warnings\n import weakref\n@@ -369,6 +370,27 @@ def test_missing_session(app):\n         expect_exception(flask.session.pop, ""foo"")\n \n \n+def test_session_secret_key_fallbacks(app, client) -> None:\n+    @app.post(""/"")\n+    def set_session() -> str:\n+        flask.session[""a""] = 1\n+        return """"\n+\n+    @app.get(""/"")\n+    def get_session() -> dict[str, t.Any]:\n+        return dict(flask.session)\n+\n+    # Set session with initial secret key\n+    client.post()\n+    assert client.get().json == {""a"": 1}\n+    # Change secret key, session can\'t be loaded and appears empty\n+    app.secret_key = ""new test key""\n+    assert client.get().json == {}\n+    # Add initial secret key as fallback, session can be loaded\n+    app.config[""SECRET_KEY_FALLBACKS""] = [""test key""]\n+    assert client.get().json == {""a"": 1}\n+\n+\n def test_session_expiration(app, client):\n     permanent = True\n \n'",1.0871369294605808,1.0860655737704918
CHANGES.rst,CHANGES.rst,470e2b8d17fd0032271b21f1d6775d48c3855a79,a20bcff8dc4e263312cfd74c11e432bfe8c194c1,'update min blinker version',"'@@ -5,7 +5,7 @@ Unreleased\n \n -   Drop support for Python 3.8. :pr:`5623`\n -   Update minimum dependency versions to latest feature releases.\n-    Werkzeug >= 3.1, ItsDangerous >= 2.2, Blinker >= 1.8. :pr:`5624`\n+    Werkzeug >= 3.1, ItsDangerous >= 2.2, Blinker >= 1.9. :pr:`5624,5633`\n -   Provide a configuration option to control automatic option\n     responses. :pr:`5496`\n -   ``Flask.open_resource``/``open_instance_resource`` and\n'",0,0
pyproject.toml,pyproject.toml,470e2b8d17fd0032271b21f1d6775d48c3855a79,a20bcff8dc4e263312cfd74c11e432bfe8c194c1,'update min blinker version',"'@@ -25,7 +25,7 @@ dependencies = [\n     ""Jinja2>=3.1.2"",\n     ""itsdangerous>=2.2"",\n     ""click>=8.1.3"",\n-    ""blinker>=1.8"",\n+    ""blinker>=1.9"",\n     ""importlib-metadata>=3.6; python_version < \'3.10\'"",\n ]\n \n'",0,0
requirements/tests-min.in,requirements/tests-min.in,470e2b8d17fd0032271b21f1d6775d48c3855a79,a20bcff8dc4e263312cfd74c11e432bfe8c194c1,'update min blinker version',"'@@ -3,4 +3,4 @@ jinja2==3.1.2\n markupsafe==2.1.1\n itsdangerous==2.2.0\n click==8.1.3\n-blinker==1.8.0\n+blinker==1.9.0\n'",0,0
requirements/tests-min.txt,requirements/tests-min.txt,470e2b8d17fd0032271b21f1d6775d48c3855a79,a20bcff8dc4e263312cfd74c11e432bfe8c194c1,'update min blinker version',"'@@ -4,7 +4,7 @@\n #\n #    pip-compile tests-min.in\n #\n-blinker==1.8.0\n+blinker==1.9.0\n     # via -r tests-min.in\n click==8.1.3\n     # via -r tests-min.in\n'",0,0
CHANGES.rst,CHANGES.rst,4995a775df21a206b529403bc30d71795a994fd4,07c7d5730a2685ef2281cc635e289685e5c3d478,'fix subdomain_matching=False behavior',"'@@ -23,6 +23,9 @@ Unreleased\n -   Support key rotation with the ``SECRET_KEY_FALLBACKS`` config, a list of old\n     secret keys that can still be used for unsigning. Extensions will need to\n     add support. :issue:`5621`\n+-   Fix how setting ``host_matching=True`` or ``subdomain_matching=False``\n+    interacts with ``SERVER_NAME``. Setting ``SERVER_NAME`` no longer restricts\n+    requests to only that domain. :issue:`5553`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,4995a775df21a206b529403bc30d71795a994fd4,07c7d5730a2685ef2281cc635e289685e5c3d478,'fix subdomain_matching=False behavior',"'@@ -260,14 +260,23 @@ The following configuration values are used internally by Flask:\n \n .. py:data:: SERVER_NAME\n \n-    Inform the application what host and port it is bound to. Required\n-    for subdomain route matching support.\n+    Inform the application what host and port it is bound to.\n \n-    If set, ``url_for`` can generate external URLs with only an application\n-    context instead of a request context.\n+    Must be set if ``subdomain_matching`` is enabled, to be able to extract the\n+    subdomain from the request.\n+\n+    Must be set for ``url_for`` to generate external URLs outside of a\n+    request context.\n \n     Default: ``None``\n \n+    .. versionchanged:: 3.1\n+        Does not restrict requests to only this domain, for both\n+        ``subdomain_matching`` and ``host_matching``.\n+\n+    .. versionchanged:: 1.0\n+        Does not implicitly enable ``subdomain_matching``.\n+\n     .. versionchanged:: 2.3\n         Does not affect ``SESSION_COOKIE_DOMAIN``.\n \n'",1.0,1.0
src/flask/app.py,src/flask/app.py,4995a775df21a206b529403bc30d71795a994fd4,07c7d5730a2685ef2281cc635e289685e5c3d478,'fix subdomain_matching=False behavior',"'@@ -425,32 +425,40 @@ class Flask(App):\n         is created at a point where the request context is not yet set\n         up so the request is passed explicitly.\n \n-        .. versionadded:: 0.6\n-\n-        .. versionchanged:: 0.9\n-           This can now also be called without a request object when the\n-           URL adapter is created for the application context.\n+        .. versionchanged:: 3.1\n+            If :data:`SERVER_NAME` is set, it does not restrict requests to\n+            only that domain, for both ``subdomain_matching`` and\n+            ``host_matching``.\n \n         .. versionchanged:: 1.0\n             :data:`SERVER_NAME` no longer implicitly enables subdomain\n             matching. Use :attr:`subdomain_matching` instead.\n+\n+        .. versionchanged:: 0.9\n+           This can be called outside a request when the URL adapter is created\n+           for an application context.\n+\n+        .. versionadded:: 0.6\n         """"""\n         if request is not None:\n-            # If subdomain matching is disabled (the default), use the\n-            # default subdomain in all cases. This should be the default\n-            # in Werkzeug but it currently does not have that feature.\n-            if not self.subdomain_matching:\n-                subdomain = self.url_map.default_subdomain or None\n-            else:\n-                subdomain = None\n+            subdomain = None\n+            server_name = self.config[""SERVER_NAME""]\n+\n+            if self.url_map.host_matching:\n+                # Don\'t pass SERVER_NAME, otherwise it\'s used and the actual\n+                # host is ignored, which breaks host matching.\n+                server_name = None\n+            elif not self.subdomain_matching:\n+                # Werkzeug doesn\'t implement subdomain matching yet. Until then,\n+                # disable it by forcing the current subdomain to the default, or\n+                # the empty string.\n+                subdomain = self.url_map.default_subdomain or """"\n \n             return self.url_map.bind_to_environ(\n-                request.environ,\n-                server_name=self.config[""SERVER_NAME""],\n-                subdomain=subdomain,\n+                request.environ, server_name=server_name, subdomain=subdomain\n             )\n-        # We need at the very least the server name to be set for this\n-        # to work.\n+\n+        # Need at least SERVER_NAME to match/build outside a request.\n         if self.config[""SERVER_NAME""] is not None:\n             return self.url_map.bind(\n                 self.config[""SERVER_NAME""],\n'",4.228571428571429,4.257142857142857
tests/test_basic.py,tests/test_basic.py,4995a775df21a206b529403bc30d71795a994fd4,07c7d5730a2685ef2281cc635e289685e5c3d478,'fix subdomain_matching=False behavior',"'@@ -4,6 +4,7 @@ import typing as t\n import uuid\n import warnings\n import weakref\n+from contextlib import nullcontext\n from datetime import datetime\n from datetime import timezone\n from platform import python_implementation\n@@ -1483,6 +1484,48 @@ def test_request_locals():\n     assert not flask.g\n \n \n+@pytest.mark.parametrize(\n+    (""subdomain_matching"", ""host_matching"", ""expect_base"", ""expect_abc"", ""expect_xyz""),\n+    [\n+        (False, False, ""default"", ""default"", ""default""),\n+        (True, False, ""default"", ""abc"", ""<invalid>""),\n+        (False, True, ""default"", ""abc"", ""default""),\n+    ],\n+)\n+def test_server_name_matching(\n+    subdomain_matching: bool,\n+    host_matching: bool,\n+    expect_base: str,\n+    expect_abc: str,\n+    expect_xyz: str,\n+) -> None:\n+    app = flask.Flask(\n+        __name__,\n+        subdomain_matching=subdomain_matching,\n+        host_matching=host_matching,\n+        static_host=""example.test"" if host_matching else None,\n+    )\n+    app.config[""SERVER_NAME""] = ""example.test""\n+\n+    @app.route(""/"", defaults={""name"": ""default""}, host=""<name>"")\n+    @app.route(""/"", subdomain=""<name>"", host=""<name>.example.test"")\n+    def index(name: str) -> str:\n+        return name\n+\n+    client = app.test_client()\n+\n+    r = client.get(base_url=""http://example.test"")\n+    assert r.text == expect_base\n+\n+    r = client.get(base_url=""http://abc.example.test"")\n+    assert r.text == expect_abc\n+\n+    with pytest.warns() if subdomain_matching else nullcontext():\n+        r = client.get(base_url=""http://xyz.other.test"")\n+\n+    assert r.text == expect_xyz\n+\n+\n def test_server_name_subdomain():\n     app = flask.Flask(__name__, subdomain_matching=True)\n     client = app.test_client()\n'",1.0860655737704918,1.0934959349593496
tests/test_blueprints.py,tests/test_blueprints.py,4995a775df21a206b529403bc30d71795a994fd4,07c7d5730a2685ef2281cc635e289685e5c3d478,'fix subdomain_matching=False behavior',"'@@ -951,7 +951,10 @@ def test_nesting_url_prefixes(\n \n \n def test_nesting_subdomains(app, client) -> None:\n-    subdomain = ""api""\n+    app.subdomain_matching = True\n+    app.config[""SERVER_NAME""] = ""example.test""\n+    client.allow_subdomain_redirects = True\n+\n     parent = flask.Blueprint(""parent"", __name__)\n     child = flask.Blueprint(""child"", __name__)\n \n@@ -960,42 +963,31 @@ def test_nesting_subdomains(app, client) -> None:\n         return ""child""\n \n     parent.register_blueprint(child)\n-    app.register_blueprint(parent, subdomain=subdomain)\n-\n-    client.allow_subdomain_redirects = True\n-\n-    domain_name = ""domain.tld""\n-    app.config[""SERVER_NAME""] = domain_name\n-    response = client.get(""/child/"", base_url=""http://api."" + domain_name)\n+    app.register_blueprint(parent, subdomain=""api"")\n \n+    response = client.get(""/child/"", base_url=""http://api.example.test"")\n     assert response.status_code == 200\n \n \n def test_child_and_parent_subdomain(app, client) -> None:\n-    child_subdomain = ""api""\n-    parent_subdomain = ""parent""\n+    app.subdomain_matching = True\n+    app.config[""SERVER_NAME""] = ""example.test""\n+    client.allow_subdomain_redirects = True\n+\n     parent = flask.Blueprint(""parent"", __name__)\n-    child = flask.Blueprint(""child"", __name__, subdomain=child_subdomain)\n+    child = flask.Blueprint(""child"", __name__, subdomain=""api"")\n \n     @child.route(""/"")\n     def index():\n         return ""child""\n \n     parent.register_blueprint(child)\n-    app.register_blueprint(parent, subdomain=parent_subdomain)\n-\n-    client.allow_subdomain_redirects = True\n-\n-    domain_name = ""domain.tld""\n-    app.config[""SERVER_NAME""] = domain_name\n-    response = client.get(\n-        ""/"", base_url=f""http://{child_subdomain}.{parent_subdomain}.{domain_name}""\n-    )\n+    app.register_blueprint(parent, subdomain=""parent"")\n \n+    response = client.get(""/"", base_url=""http://api.parent.example.test"")\n     assert response.status_code == 200\n \n-    response = client.get(""/"", base_url=f""http://{parent_subdomain}.{domain_name}"")\n-\n+    response = client.get(""/"", base_url=""http://parent.example.test"")\n     assert response.status_code == 404\n \n \n'",1.0256410256410255,1.0256410256410255
CHANGES.rst,CHANGES.rst,4f7156f2c3271613b34d04040b502b9d7ae35eb9,10bdf61a0f751f3cb000f8f8ac5ac5b4bb535677,'configure and check trusted_hosts',"'@@ -26,6 +26,8 @@ Unreleased\n -   Fix how setting ``host_matching=True`` or ``subdomain_matching=False``\n     interacts with ``SERVER_NAME``. Setting ``SERVER_NAME`` no longer restricts\n     requests to only that domain. :issue:`5553`\n+-   ``Request.trusted_hosts`` is checked during routing, and can be set through\n+    the ``TRUSTED_HOSTS`` config. :issue:`5636`\n \n \n Version 3.0.3\n'",0,0
docs/config.rst,docs/config.rst,4f7156f2c3271613b34d04040b502b9d7ae35eb9,10bdf61a0f751f3cb000f8f8ac5ac5b4bb535677,'configure and check trusted_hosts',"'@@ -258,6 +258,21 @@ The following configuration values are used internally by Flask:\n \n     Default: ``None``\n \n+.. py:data:: TRUSTED_HOSTS\n+\n+    Validate :attr:`.Request.host` and other attributes that use it against\n+    these trusted values. Raise a :exc:`~werkzeug.exceptions.SecurityError` if\n+    the host is invalid, which results in a 400 error. If it is ``None``, all\n+    hosts are valid. Each value is either an exact match, or can start with\n+    a dot ``.`` to match any subdomain.\n+\n+    Validation is done during routing against this value. ``before_request`` and\n+    ``after_request`` callbacks will still be called.\n+\n+    Default: ``None``\n+\n+    .. versionadded:: 3.1\n+\n .. py:data:: SERVER_NAME\n \n     Inform the application what host and port it is bound to.\n'",1.0,1.0
src/flask/app.py,src/flask/app.py,4f7156f2c3271613b34d04040b502b9d7ae35eb9,10bdf61a0f751f3cb000f8f8ac5ac5b4bb535677,'configure and check trusted_hosts',"'@@ -24,6 +24,7 @@ from werkzeug.routing import RoutingException\n from werkzeug.routing import Rule\n from werkzeug.serving import is_running_from_reloader\n from werkzeug.wrappers import Response as BaseResponse\n+from werkzeug.wsgi import get_host\n \n from . import cli\n from . import typing as ft\n@@ -183,6 +184,7 @@ class Flask(App):\n             ""SECRET_KEY_FALLBACKS"": None,\n             ""PERMANENT_SESSION_LIFETIME"": timedelta(days=31),\n             ""USE_X_SENDFILE"": False,\n+            ""TRUSTED_HOSTS"": None,\n             ""SERVER_NAME"": None,\n             ""APPLICATION_ROOT"": ""/"",\n             ""SESSION_COOKIE_NAME"": ""session"",\n@@ -441,6 +443,11 @@ class Flask(App):\n         .. versionadded:: 0.6\n         """"""\n         if request is not None:\n+            if (trusted_hosts := self.config[""TRUSTED_HOSTS""]) is not None:\n+                request.trusted_hosts = trusted_hosts\n+\n+            # Check trusted_hosts here until bind_to_environ does.\n+            request.host = get_host(request.environ, request.trusted_hosts)  # pyright: ignore\n             subdomain = None\n             server_name = self.config[""SERVER_NAME""]\n \n'",4.257142857142857,4.285714285714286
tests/test_request.py,tests/test_request.py,4f7156f2c3271613b34d04040b502b9d7ae35eb9,10bdf61a0f751f3cb000f8f8ac5ac5b4bb535677,'configure and check trusted_hosts',"'@@ -52,3 +52,19 @@ def test_limit_config(app: Flask):\n         assert r.max_content_length == 90\n         assert r.max_form_memory_size == 30\n         assert r.max_form_parts == 4\n+\n+\n+def test_trusted_hosts_config(app: Flask) -> None:\n+    app.config[""TRUSTED_HOSTS""] = [""example.test"", "".other.test""]\n+\n+    @app.get(""/"")\n+    def index() -> str:\n+        return """"\n+\n+    client = app.test_client()\n+    r = client.get(base_url=""http://example.test"")\n+    assert r.status_code == 200\n+    r = client.get(base_url=""http://a.other.test"")\n+    assert r.status_code == 200\n+    r = client.get(base_url=""http://bad.test"")\n+    assert r.status_code == 400\n'",1.0,1.0
src/flask/sessions.py,src/flask/sessions.py,f49dbfd3e451006a485e81ebce030495131c4454,7b21d43d4c763b874bc86d4c2d69a48ee492dc22,'use generic bases for session',"'@@ -1,5 +1,6 @@\n from __future__ import annotations\n \n+import collections.abc as c\n import hashlib\n import typing as t\n from collections.abc import MutableMapping\n@@ -20,8 +21,7 @@ if t.TYPE_CHECKING:  # pragma: no cover\n     from .wrappers import Response\n \n \n-# TODO generic when Python > 3.8\n-class SessionMixin(MutableMapping):  # type: ignore[type-arg]\n+class SessionMixin(MutableMapping[str, t.Any]):\n     """"""Expands a basic dictionary with session attributes.""""""\n \n     @property\n@@ -49,8 +49,7 @@ class SessionMixin(MutableMapping):  # type: ignore[type-arg]\n     accessed = True\n \n \n-# TODO generic when Python > 3.8\n-class SecureCookieSession(CallbackDict, SessionMixin):  # type: ignore[type-arg]\n+class SecureCookieSession(CallbackDict[str, t.Any], SessionMixin):\n     """"""Base class for sessions based on signed cookies.\n \n     This session backend will set the :attr:`modified` and\n@@ -72,7 +71,10 @@ class SecureCookieSession(CallbackDict, SessionMixin):  # type: ignore[type-arg]\n     #: different users.\n     accessed = False\n \n-    def __init__(self, initial: t.Any = None) -> None:\n+    def __init__(\n+        self,\n+        initial: c.Mapping[str, t.Any] | c.Iterable[tuple[str, t.Any]] | None = None,\n+    ) -> None:\n         def on_update(self: te.Self) -> None:\n             self.modified = True\n             self.accessed = True\n'",1.52,1.52
.github/workflows/publish.yaml,.github/workflows/publish.yaml,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -64,10 +64,10 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n-      - uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.11.0\n+      - uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # v1.12.2\n         with:\n           repository-url: https://test.pypi.org/legacy/\n           packages-dir: artifact/\n-      - uses: pypa/gh-action-pypi-publish@fb13cb306901256ace3dab689990e13a5550ffaa # v1.11.0\n+      - uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # v1.12.2\n         with:\n           packages-dir: artifact/\n'",0,0
.pre-commit-config.yaml,.pre-commit-config.yaml,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -1,6 +1,6 @@\n repos:\n   - repo: https://github.com/astral-sh/ruff-pre-commit\n-    rev: v0.7.1\n+    rev: v0.7.3\n     hooks:\n       - id: ruff\n       - id: ruff-format\n'",0,0
requirements/build.txt,requirements/build.txt,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -6,7 +6,7 @@\n #\n build==1.2.2.post1\n     # via -r build.in\n-packaging==24.1\n+packaging==24.2\n     # via build\n pyproject-hooks==1.2.0\n     # via build\n'",0,0
requirements/dev.txt,requirements/dev.txt,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -49,7 +49,7 @@ filelock==3.16.1\n     # via\n     #   tox\n     #   virtualenv\n-identify==2.6.1\n+identify==2.6.2\n     # via pre-commit\n idna==3.10\n     # via\n@@ -83,7 +83,7 @@ nodeenv==1.9.1\n     #   -r /Users/david/Projects/flask/requirements/typing.txt\n     #   pre-commit\n     #   pyright\n-packaging==24.1\n+packaging==24.2\n     # via\n     #   -r /Users/david/Projects/flask/requirements/docs.txt\n     #   -r /Users/david/Projects/flask/requirements/tests.txt\n@@ -118,7 +118,7 @@ pygments==2.18.0\n     #   sphinx-tabs\n pyproject-api==1.8.0\n     # via tox\n-pyright==1.1.387\n+pyright==1.1.389\n     # via -r /Users/david/Projects/flask/requirements/typing.txt\n pytest==8.3.3\n     # via\n'",0,0
requirements/docs.txt,requirements/docs.txt,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -24,7 +24,7 @@ jinja2==3.1.4\n     # via sphinx\n markupsafe==3.0.2\n     # via jinja2\n-packaging==24.1\n+packaging==24.2\n     # via\n     #   pallets-sphinx-themes\n     #   sphinx\n'",0,0
requirements/tests.txt,requirements/tests.txt,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -8,7 +8,7 @@ asgiref==3.8.1\n     # via -r tests.in\n iniconfig==2.0.0\n     # via pytest\n-packaging==24.1\n+packaging==24.2\n     # via pytest\n pluggy==1.5.0\n     # via pytest\n'",0,0
requirements/typing.txt,requirements/typing.txt,6748a09341deeac16acb33996df95a31fae0c545,22c48a738b5fb5b5cf09fb77270139f116069748,'update dev dependencies',"'@@ -18,13 +18,13 @@ mypy-extensions==1.0.0\n     # via mypy\n nodeenv==1.9.1\n     # via pyright\n-packaging==24.1\n+packaging==24.2\n     # via pytest\n pluggy==1.5.0\n     # via pytest\n pycparser==2.22\n     # via cffi\n-pyright==1.1.387\n+pyright==1.1.389\n     # via -r typing.in\n pytest==8.3.3\n     # via -r typing.in\n'",0,0
.github/workflows/publish.yaml,.github/workflows/publish.yaml,70602a196a6da90eb0d34cdfe5d4d16a99606279,6748a09341deeac16acb33996df95a31fae0c545,'remove test pypi',"'@@ -64,10 +64,6 @@ jobs:\n       id-token: write\n     steps:\n       - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8\n-      - uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # v1.12.2\n-        with:\n-          repository-url: https://test.pypi.org/legacy/\n-          packages-dir: artifact/\n       - uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # v1.12.2\n         with:\n           packages-dir: artifact/\n'",0,0
CHANGES.rst,CHANGES.rst,ab8149664182b662453a563161aa89013c806dc9,70602a196a6da90eb0d34cdfe5d4d16a99606279,'release version 3.1.0',"'@@ -1,7 +1,7 @@\n Version 3.1.0\n -------------\n \n-Unreleased\n+Released 2024-11-13\n \n -   Drop support for Python 3.8. :pr:`5623`\n -   Update minimum dependency versions to latest feature releases.\n@@ -16,7 +16,7 @@ Unreleased\n     ``MAX_FORM_MEMORY_SIZE`` and ``MAX_FORM_PARTS`` config. Added documentation\n     about resource limits to the security page. :issue:`5625`\n -   Add support for the ``Partitioned`` cookie attribute (CHIPS), with the\n-    ``SESSION_COOKIE_PARTITIONED`` config. :issue`5472`\n+    ``SESSION_COOKIE_PARTITIONED`` config. :issue:`5472`\n -   ``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files.\n     ``load_dotenv`` loads default files in addition to a path unless\n     ``load_defaults=False`` is passed. :issue:`5628`\n'",0,0
pyproject.toml,pyproject.toml,ab8149664182b662453a563161aa89013c806dc9,70602a196a6da90eb0d34cdfe5d4d16a99606279,'release version 3.1.0',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.1.0.dev""\n+version = ""3.1.0""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.md""\n license = {file = ""LICENSE.txt""}\n'",0,0
docs/conf.py,docs/conf.py,18ffe1eaf6c2eeffc898f4e8a590c062c40b30dc,bc098406af9537aacc436cb2ea777fbc9ff4c5aa,'add gettext config for docs',"'@@ -62,6 +62,9 @@ html_logo = ""_static/flask-vertical.png""\n html_title = f""Flask Documentation ({version})""\n html_show_sourcelink = False\n \n+gettext_uuid = True\n+gettext_compact = False\n+\n # Local Extensions -----------------------------------------------------\n \n \n'",3.0,3.0
CHANGES.rst,CHANGES.rst,4fec712f329ceecd38729af6404a2c32aed83648,bc098406af9537aacc436cb2ea777fbc9ff4c5aa,'start version 3.2.0',"'@@ -1,3 +1,9 @@\n+Version 3.2.0\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.1.0\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,4fec712f329ceecd38729af6404a2c32aed83648,bc098406af9537aacc436cb2ea777fbc9ff4c5aa,'start version 3.2.0',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.1.0""\n+version = ""3.2.0.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.md""\n license = {file = ""LICENSE.txt""}\n'",0,0
CHANGES.rst,CHANGES.rst,d22bfcd4cfe3b93daddfce8521f77447ca8d6b84,4fec712f329ceecd38729af6404a2c32aed83648,'remove previously deprecated code',"'@@ -3,6 +3,8 @@ Version 3.2.0\n \n Unreleased\n \n+-   Remove previously deprecated code: ``__version__``. :pr:`5648`\n+\n \n Version 3.1.0\n -------------\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,d22bfcd4cfe3b93daddfce8521f77447ca8d6b84,4fec712f329ceecd38729af6404a2c32aed83648,'remove previously deprecated code',"'@@ -1,7 +1,3 @@\n-from __future__ import annotations\n-\n-import typing as t\n-\n from . import json as json\n from .app import Flask as Flask\n from .blueprints import Blueprint as Blueprint\n@@ -41,20 +37,3 @@ from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n from .wrappers import Request as Request\n from .wrappers import Response as Response\n-\n-\n-def __getattr__(name: str) -> t.Any:\n-    if name == ""__version__"":\n-        import importlib.metadata\n-        import warnings\n-\n-        warnings.warn(\n-            ""The \'__version__\' attribute is deprecated and will be removed in""\n-            "" Flask 3.1. Use feature detection or""\n-            "" \'importlib.metadata.version(\\""flask\\"")\' instead."",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        return importlib.metadata.version(""flask"")\n-\n-    raise AttributeError(name)\n'",2.0,0
CHANGES.rst,CHANGES.rst,dcbe86bd1577bad9a1356acca5fced7d3fb3a0c3,18ffe1eaf6c2eeffc898f4e8a590c062c40b30dc,'start version 3.1.1',"'@@ -1,3 +1,9 @@\n+Version 3.1.1\n+-------------\n+\n+Unreleased\n+\n+\n Version 3.1.0\n -------------\n \n'",0,0
pyproject.toml,pyproject.toml,dcbe86bd1577bad9a1356acca5fced7d3fb3a0c3,18ffe1eaf6c2eeffc898f4e8a590c062c40b30dc,'start version 3.1.1',"'@@ -1,6 +1,6 @@\n [project]\n name = ""Flask""\n-version = ""3.1.0""\n+version = ""3.1.1.dev""\n description = ""A simple framework for building complex web applications.""\n readme = ""README.md""\n license = {file = ""LICENSE.txt""}\n'",0,0
src/flask/__init__.py,src/flask/__init__.py,b394a994e6d632643d0061e0e67772f076925951,dcbe86bd1577bad9a1356acca5fced7d3fb3a0c3,'update `__version__` deprecation',"'@@ -50,7 +50,7 @@ def __getattr__(name: str) -> t.Any:\n \n         warnings.warn(\n             ""The \'__version__\' attribute is deprecated and will be removed in""\n-            "" Flask 3.1. Use feature detection or""\n+            "" Flask 3.2. Use feature detection or""\n             "" \'importlib.metadata.version(\\""flask\\"")\' instead."",\n             DeprecationWarning,\n             stacklevel=2,\n'",2.0,2.0
CHANGES.rst,CHANGES.rst,54c3f87af9f6c0d6622cec2c3d9695b0229fb8fa,ea08f155d8d37d515559534bbe0f80ef5185466c,'fix type hint for `cli_runner.invoke`',"'@@ -3,6 +3,8 @@ Version 3.1.1\n \n Unreleased\n \n+-   Fix type hint for `cli_runner.invoke`. :issue:`5645`\n+\n \n Version 3.1.0\n -------------\n'",0,0
src/flask/testing.py,src/flask/testing.py,54c3f87af9f6c0d6622cec2c3d9695b0229fb8fa,ea08f155d8d37d515559534bbe0f80ef5185466c,'fix type hint for `cli_runner.invoke`',"'@@ -10,6 +10,7 @@ from urllib.parse import urlsplit\n \n import werkzeug.test\n from click.testing import CliRunner\n+from click.testing import Result\n from werkzeug.test import Client\n from werkzeug.wrappers import Request as BaseRequest\n \n@@ -273,7 +274,7 @@ class FlaskCliRunner(CliRunner):\n \n     def invoke(  # type: ignore\n         self, cli: t.Any = None, args: t.Any = None, **kwargs: t.Any\n-    ) -> t.Any:\n+    ) -> Result:\n         """"""Invokes a CLI command in an isolated environment. See\n         :meth:`CliRunner.invoke <click.testing.CliRunner.invoke>` for\n         full method documentation. See :ref:`testing-cli` for examples.\n'",3.0,3.0
README.md,README.md,6b361ce06b08454329286214072139228e8c2f33,6b054f8f3876ff4c31580b014d344c4cf491059d,'markdown formatting',"""@@ -1,9 +1,9 @@\n # Flask\n \n-Flask is a lightweight [WSGI][] web application framework. It is designed\n+Flask is a lightweight [WSGI] web application framework. It is designed\n to make getting started quick and easy, with the ability to scale up to\n-complex applications. It began as a simple wrapper around [Werkzeug][]\n-and [Jinja][], and has become one of the most popular Python web\n+complex applications. It began as a simple wrapper around [Werkzeug]\n+and [Jinja], and has become one of the most popular Python web\n application frameworks.\n \n Flask offers suggestions, but doesn't enforce any dependencies or\n@@ -15,7 +15,6 @@ community that make adding new functionality easy.\n [Werkzeug]: https://werkzeug.palletsprojects.com/\n [Jinja]: https://jinja.palletsprojects.com/\n \n-\n ## A Simple Example\n \n ```python\n@@ -34,12 +33,11 @@ $ flask run\n   * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n ```\n \n-\n ## Donate\n \n The Pallets organization develops and supports Flask and the libraries\n it uses. In order to grow the community of contributors and users, and\n allow the maintainers to devote more time to the projects, [please\n-donate today][].\n+donate today].\n \n [please donate today]: https://palletsprojects.com/donate\n""",1.0,1.0
.github/ISSUE_TEMPLATE/config.yml,.github/ISSUE_TEMPLATE/config.yml,60a11a730e8aa2450115385798ab8710804c6409,6b361ce06b08454329286214072139228e8c2f33,"""use global contributing guide\n\nRemove the per-project files so we don't have to\nkeep them in sync. GitHub's UI links to everything\nexcept the contributing guide, so add a section\nabout that to the readme.""","'@@ -3,9 +3,9 @@ contact_links:\n   - name: Security issue\n     url: https://github.com/pallets/flask/security/advisories/new\n     about: Do not report security issues publicly. Create a private advisory.\n-  - name: Questions\n+  - name: Questions on GitHub Discussions\n     url: https://github.com/pallets/flask/discussions/\n     about: Ask questions about your own code on the Discussions tab.\n-  - name: Questions on\n+  - name: Questions on Discord\n     url: https://discord.gg/pallets\n     about: Ask questions about your own code on our Discord chat.\n'",0,0
README.md,README.md,5b525e97970b1b9706b4415de79abfe33e5955fc,f2674c5bb4f7a79f836069859a346b81771eeee5,'markdown formatting\n\n(cherry picked from commit 6b361ce06b08454329286214072139228e8c2f33)',"""@@ -1,9 +1,9 @@\n # Flask\n \n-Flask is a lightweight [WSGI][] web application framework. It is designed\n+Flask is a lightweight [WSGI] web application framework. It is designed\n to make getting started quick and easy, with the ability to scale up to\n-complex applications. It began as a simple wrapper around [Werkzeug][]\n-and [Jinja][], and has become one of the most popular Python web\n+complex applications. It began as a simple wrapper around [Werkzeug]\n+and [Jinja], and has become one of the most popular Python web\n application frameworks.\n \n Flask offers suggestions, but doesn't enforce any dependencies or\n@@ -15,7 +15,6 @@ community that make adding new functionality easy.\n [Werkzeug]: https://werkzeug.palletsprojects.com/\n [Jinja]: https://jinja.palletsprojects.com/\n \n-\n ## A Simple Example\n \n ```python\n@@ -34,12 +33,11 @@ $ flask run\n   * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n ```\n \n-\n ## Donate\n \n The Pallets organization develops and supports Flask and the libraries\n it uses. In order to grow the community of contributors and users, and\n allow the maintainers to devote more time to the projects, [please\n-donate today][].\n+donate today].\n \n [please donate today]: https://palletsprojects.com/donate\n""",1.0,1.0
.github/ISSUE_TEMPLATE/config.yml,.github/ISSUE_TEMPLATE/config.yml,959052fb8d49c4473f6d8a928d745ae7c38c7e95,5b525e97970b1b9706b4415de79abfe33e5955fc,"""use global contributing guide\n\nRemove the per-project files so we don't have to\nkeep them in sync. GitHub's UI links to everything\nexcept the contributing guide, so add a section\nabout that to the readme.\n\n(cherry picked from commit 60a11a730e8aa2450115385798ab8710804c6409)""","'@@ -3,9 +3,9 @@ contact_links:\n   - name: Security issue\n     url: https://github.com/pallets/flask/security/advisories/new\n     about: Do not report security issues publicly. Create a private advisory.\n-  - name: Questions\n+  - name: Questions on GitHub Discussions\n     url: https://github.com/pallets/flask/discussions/\n     about: Ask questions about your own code on the Discussions tab.\n-  - name: Questions on\n+  - name: Questions on Discord\n     url: https://discord.gg/pallets\n     about: Ask questions about your own code on our Discord chat.\n'",0,0
